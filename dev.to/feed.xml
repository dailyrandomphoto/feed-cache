<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>GraphQL Fundamentals: Hands-On</title>
      <author>Michael Bromley</author>
      <pubDate>Mon, 17 Jan 2022 11:16:52 +0000</pubDate>
      <link>https://dev.to/michlbrmly/graphql-fundamentals-hands-on-30lk</link>
      <guid>https://dev.to/michlbrmly/graphql-fundamentals-hands-on-30lk</guid>
      <description>&lt;p&gt;In this post we will explore some of the fundamental concepts of GraphQL in a hands-on way. The goal of this post is to allow the beginner to gain a familiarity with the basic features of GraphQL. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up"&gt;
  &lt;/a&gt;
  Setting up
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;The best way to learn is to do&lt;/strong&gt;. So this tutorial will be light on theory and heavy on practical exercises. &lt;/p&gt;

&lt;p&gt;So we'll need a real graphql server to play with. Let's use &lt;a href="https://www.vendure.io"&gt;Vendure&lt;/a&gt;, an open-source GraphQL e-commerce framework. I chose Vendure because it is really easy to set up - all you need is to make sure you have &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt; installed. Plus I built it so I know the API quite well 😉&lt;/p&gt;

&lt;p&gt;To install a local instance of Vendure, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx @vendure/create my-shop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and follow the prompts. Select SQLite and use the defaults for all other prompts. Installation should take about 5 minutes and then you'll have a full, production-grade GraphQL server pre-populated with sample data ready to play with! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ctIbbL7L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hlginhsfg9pvuhyq5333.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ctIbbL7L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hlginhsfg9pvuhyq5333.gif" alt="Installing the Vendure GraphQL server" width="800" height="561"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once installation is complete, open up &lt;a href="http://localhost:3000/shop-api"&gt;http://localhost:3000/shop-api&lt;/a&gt; in your browser. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: if you are unable to install Vendure locally for any reason (e.g. you are on a mobile device), you can still follow along with this article by using the public demo server at &lt;a href="https://demo.vendure.io/shop-api"&gt;demo.vendure.io/shop-api&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You should see the GraphQL Playground - an interactive interface for working directly with the GraphQL server. This is what we'll be using for all the exercises on this article. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pDd4Qk7L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9mfosupk3zq5lhb5b4w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pDd4Qk7L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9mfosupk3zq5lhb5b4w.png" alt="GraphQL Playground" width="880" height="617"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#your-first-query"&gt;
  &lt;/a&gt;
  Your first query
&lt;/h2&gt;

&lt;p&gt;GraphQL allows us to fetch data by sending &lt;em&gt;queries&lt;/em&gt;. Queries are similar to GET requests in a REST API. Let's write our first query:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Copy this into the left pane of the playground and then press the play button. You should see the response in the right pane:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"product"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Laptop"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Congratulations! You executed your first graphql operation! &lt;/p&gt;

&lt;p&gt;What did we do here? Let's analyze each part of this. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;query&lt;/code&gt;: First of all we are declaring that we are making a &lt;em&gt;query&lt;/em&gt;. This is in contrast to a &lt;em&gt;mutation&lt;/em&gt; (which we will cover below). Technically you can omit that &lt;code&gt;query&lt;/code&gt; keyword, but we'll keep using it just to be more explicit.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;product&lt;/code&gt;: Next we are specifying the query we wish to use: &lt;em&gt;product&lt;/em&gt;. Each GraphQL server defines a set of possible queries. Since Vendure is an e-commerce server, it exposes queries related to products, orders, customers, etc. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;id: 1&lt;/code&gt;: We then pass an argument to our query, specifying the ID of the product we want to return. You can think of this very much like a function call. Just like function calls, GraphQL queries can take zero, one or more arguments. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;{ id, name }&lt;/code&gt;: We finally specify the fields we want to return. Fields are like &lt;em&gt;properties&lt;/em&gt; on a JavaScript object. In this case, we want to know just the ID and name of the product. &lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#selecting-fields"&gt;
  &lt;/a&gt;
  Selecting fields
&lt;/h2&gt;

&lt;p&gt;One of the big benefits of GraphQL over REST APIs is that you can specify the exact data you need, and the server will return those &lt;em&gt;and only those&lt;/em&gt; fields. This means you can avoid sending too much data over the wire, leading to faster data transfer and lower bandwidth usage. &lt;/p&gt;

&lt;p&gt;Let's try adding some more fields to our query. Add the &lt;code&gt;slug&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; fields to the selection, and press the play button. You should see that these two new fields are added to the result:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"product"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Laptop"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"slug"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"laptop"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Now equipped with seventh-generation Intel Core processors, ..."&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's try an experiment: what happens if we add a field to our selection that does not actually exist on our product. Try adding the field &lt;code&gt;age&lt;/code&gt;, and you'll get the following result:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"error"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"errors"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"message"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Cannot query field &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;age&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; on type &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Product&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;. Did you mean &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;?"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"locations"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"line"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"column"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#schema-amp-types"&gt;
  &lt;/a&gt;
  Schema &amp;amp; Types
&lt;/h2&gt;

&lt;p&gt;This highlights another important property of GraphQL: it is &lt;em&gt;statically typed&lt;/em&gt;. That is to say, the exact fields available, and the types of data they can hold (strings, numbers, dates etc.) are explicitly defined in a &lt;strong&gt;schema&lt;/strong&gt;. The schema, in fact, defines all available queries and mutations, and the exact type of objects they can return. &lt;/p&gt;

&lt;p&gt;This is an extremely powerful property of GraphQL and allows things like auto-complete and automatic validation of data you send to the server.&lt;/p&gt;

&lt;p&gt;You have already seen the auto-complete as you typed the field names above. You can also see &lt;em&gt;all&lt;/em&gt; available fields on a given object by pressing &lt;code&gt;ctrl + space&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--95GAXfA---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x62cshbp26cpdmqlsfsi.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--95GAXfA---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x62cshbp26cpdmqlsfsi.gif" alt="Autocomplete" width="800" height="564"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At the bottom of the auto-complete popup, in orange text, you'll see the &lt;em&gt;type&lt;/em&gt; of that field. GraphQL types are analogous to &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Primitive"&gt;primitives&lt;/a&gt; in JavaScript, &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt; &amp;amp; &lt;code&gt;ID&lt;/code&gt;. In GraphQL these are known as &lt;em&gt;scalar types&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;When a field represents a more complex data type, GraphQL supports &lt;em&gt;object types&lt;/em&gt;. In fact, we've been working with an object type all along - the &lt;code&gt;Product&lt;/code&gt; object! That's right, &lt;em&gt;queries&lt;/em&gt; themselves have a type. In this case, the &lt;code&gt;product&lt;/code&gt; query has the type &lt;code&gt;Product&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;📖 &lt;em&gt;Reference: &lt;a href="https://graphql.org/learn/schema/#scalar-types"&gt;graphql.org Scalar Types&lt;/a&gt;, &lt;a href="https://graphql.org/learn/schema/#object-types-and-fields"&gt;graphql.org Object Types&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nested-objects"&gt;
  &lt;/a&gt;
  Nested Objects
&lt;/h2&gt;

&lt;p&gt;Another of the major benefits of GraphQL is that a single query allows you to fetch an object &lt;em&gt;plus nested relations&lt;/em&gt;. What would require several individual http requests using a REST API can be achieved in &lt;strong&gt;a single GraphQL query&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;To illustrate that, let's update our query to select all the variants of our Laptop product:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;variants&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;sku&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; 
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now when we run this, we'll get the requested fields on &lt;em&gt;each&lt;/em&gt; of the laptop variants:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"product"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Laptop"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"slug"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"laptop"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Now equipped with seventh-generation Intel Core processors, ..."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"variants"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Laptop 13 inch 8GB"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"sku"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"L2201308"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;129900&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Laptop 15 inch 8GB"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"sku"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"L2201508"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;139900&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Laptop 13 inch 16GB"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"sku"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"L2201316"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;219900&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Laptop 15 inch 16GB"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"sku"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"L2201516"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;229900&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In a REST API, we'd typically need to make 5 separate requests to get all that data - one for the product, and one for each of the 4 variants!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#handson-queries"&gt;
  &lt;/a&gt;
  Hands-on: Queries
&lt;/h2&gt;

&lt;p&gt;Now that we know the fundamental concepts of GraphQL queries, spend some time exploring the Vendure API! Use the &lt;code&gt;ctrl + space&lt;/code&gt; hotkey to bring up the available queries and their fields.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PpH9dUS1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rnfq4xdwqwws7mj6fbv0.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PpH9dUS1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rnfq4xdwqwws7mj6fbv0.gif" alt="Exploring the available queries" width="800" height="564"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mutations"&gt;
  &lt;/a&gt;
  Mutations
&lt;/h2&gt;

&lt;p&gt;Mutations are the counterpart to queries, and as the name suggests, they are used to &lt;em&gt;mutate&lt;/em&gt; (change) data. Mutations are similar to POST or PUT requests in a REST API.&lt;/p&gt;

&lt;p&gt;Let's execute a mutation. Paste this into the left hand panel of the playground:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;mutation&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;addItemToOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;productVariantId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Order&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;totalQuantity&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;totalWithTax&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ErrorResult&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;errorCode&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Press the play button and you'll see something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"addItemToOrder"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"state"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"AddingItems"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"totalQuantity"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"totalWithTax"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;155880&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's once again break down each part of the mutation syntax:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;mutation&lt;/code&gt;: declares that we are dealing with a mutation as opposed to a query. Unlike with queries, this keyword is &lt;em&gt;not&lt;/em&gt; optional. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;addItemToOrder&lt;/code&gt;: the name of the mutation as declared by our schema. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;productVariantId: 1&lt;/code&gt;: like queries, mutations can (and usually do) take arguments. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;... on Order&lt;/code&gt;: this is known as an inline fragment. Since things might go wrong when adding an item to an order (e.g. insufficient stock), the mutation will return either an &lt;code&gt;Order&lt;/code&gt; object, or an &lt;code&gt;ErrorResult&lt;/code&gt; object. This syntax is like saying &lt;em&gt;"if it returns an Order, then give me the ID, state, totalQuantity &amp;amp; totalWithTax fields. If it returns an ErrorResult, then give me the errorCode and message fields."&lt;/em&gt; You can try this out by entering &lt;code&gt;quantity: -1&lt;/code&gt; and observing what happens.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As you can see, mutations share all the same parts as a query. In fact, the only real difference is the &lt;code&gt;mutation&lt;/code&gt; keyword at the start. Just like with queries, they have arguments and they return a type. In this case the type is a combination of several object types (known in GraphQL as a &lt;em&gt;union&lt;/em&gt; type, a more advanced topic out of the scope of this tutorial). &lt;/p&gt;

&lt;p&gt;📖 &lt;em&gt;Reference: &lt;a href="https://graphql.org/learn/queries/#mutations"&gt;graphql.org Mutations&lt;/a&gt;, &lt;a href="https://graphql.org/learn/schema/#union-types"&gt;graphql.org Union Types&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#handson-mutations"&gt;
  &lt;/a&gt;
  Hands-on: Mutations
&lt;/h2&gt;

&lt;p&gt;Now you can explore for yourself how mutations work using the GraphQL playground. With the initial &lt;code&gt;mutation { }&lt;/code&gt; keyword in place, pressing &lt;code&gt;ctrl + space&lt;/code&gt; will now bring up auto-complete on all available mutations.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RXC6NICJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1faoebkt45gmecvd9gps.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RXC6NICJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1faoebkt45gmecvd9gps.gif" alt="Exploring mutations" width="800" height="564"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here's a challenge for you:&lt;/strong&gt; see if you are able to successfully execute the &lt;code&gt;adjustOrderLine&lt;/code&gt; mutation in order to change the quantity of laptops in your order. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;In this post we've covered how to set up a full-featured GraphQL server using Vendure, and then learned the basics of queries and mutations. These two concepts form the basis of everything you'll be doing with GraphQL.&lt;/p&gt;

&lt;p&gt;But of course this is more that you can learn - fragments, interfaces, named operations, variables, aliases and more. If you like the style of this tutorial and would like to see a follow-up that takes the next step into these more advanced topics, please leave a comment below!&lt;/p&gt;

&lt;p&gt;And if you enjoyed working with Vendure - &lt;a href="https://github.com/vendure-ecommerce/vendure"&gt;check out the GitHub repo&lt;/a&gt; and leave a star! 🙏&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Django v4 Release Summary - Free Samples Included</title>
      <author>Sm0ke</author>
      <pubDate>Mon, 17 Jan 2022 11:16:26 +0000</pubDate>
      <link>https://dev.to/sm0ke/django-v4-release-summary-free-samples-included-4ekc</link>
      <guid>https://dev.to/sm0ke/django-v4-release-summary-free-samples-included-4ekc</guid>
      <description>&lt;p&gt;Hello Coders! &lt;/p&gt;

&lt;p&gt;This article is a quick overview over the latest release of Django Framework. In December 2021 &lt;strong&gt;Django Version 4&lt;/strong&gt; has been released with various upgrades to the framework, improvements, deprecations, and also a few breaking changes. At the end of the article a few OSS samples that use Django v4 are mentioned.  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! &lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#release-highlights"&gt;
  &lt;/a&gt;
  Release highlights
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;zoneinfo&lt;/code&gt; default time zone&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this version the default &lt;code&gt;pytz&lt;/code&gt; time zone has been migrated to &lt;code&gt;zoneinfo&lt;/code&gt; &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Template-based form rendering&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;Forms&lt;/code&gt;, &lt;code&gt;Formsets&lt;/code&gt;, and &lt;code&gt;ErrorList&lt;/code&gt; are now rendered using the template engine to enhance customization.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;RedisCache&lt;/strong&gt; backend &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This feature provides built-in support for caching with Redis via &lt;code&gt;redis-py&lt;/code&gt; library&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;scrypt&lt;/code&gt; &lt;strong&gt;password hasher&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This new &lt;code&gt;password hasher&lt;/code&gt; is more secure compared to PBKDF2 (the default hashing algorithm before v4)&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#deprecated-features"&gt;
  &lt;/a&gt;
  Deprecated Features
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;PostgreSQL v9.6 &lt;code&gt;support dropped&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;PostgreSQL v9.6 and earlier are not supported by Django v4.0. Django v4.0 will only support PostgreSQL ≥v10.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Oracle v12.2 and 18c &lt;code&gt;support dropped&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Starting with Django 4, the Oracle version should be at least v19 or above. The Django team has officially removed support for Oracle versions 18c and earlier.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#breaking-changes"&gt;
  &lt;/a&gt;
  Breaking Changes
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;CSRF_TRUSTED_ORIGINS&lt;/code&gt; config parameter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Values in the &lt;a href="https://docs.djangoproject.com/en/4.0/ref/settings/#std:setting-CSRF_TRUSTED_ORIGINS"&gt;&lt;code&gt;CSRF_TRUSTED_ORIGINS&lt;/code&gt;&lt;/a&gt; setting must include the scheme (e.g. &lt;code&gt;'http://'&lt;/code&gt; or &lt;code&gt;'https://'&lt;/code&gt;) instead of only the hostname. Also, this might be required in the project configuration. &lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# settings.py sample (partial content)
&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;ALLOWED_HOSTS&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'localhost'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'localhost:85'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'127.0.0.1'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;CSRF_TRUSTED_ORIGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'http://localhost:85'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'http://127.0.0.1'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;For curious minds I will mention a few &lt;code&gt;open-source&lt;/code&gt; starters released under the MIT license on Github already updated to Django  v4.1. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#django-bootstrap-5-volt"&gt;
  &lt;/a&gt;
  &lt;a href="https://appseed.us/admin-dashboards/django-dashboard-volt"&gt;Django Bootstrap 5 Volt&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Volt Dashboard is a free and open source Bootstrap 5 Admin Dashboard featuring over 100 components, 11 example pages and 3 plugins with Vanilla JS.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/django-volt-dashboard"&gt;Django Bootstrap 5 Volt&lt;/a&gt; - Source Code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://django-volt-dashboard.appseed-srv1.com/"&gt;Django Bootstrap 5 Volt&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FZJ0VTwA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owrzvmifbuw1s1dmgd29.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FZJ0VTwA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owrzvmifbuw1s1dmgd29.jpg" alt="Django Bootstrap 5 Volt - Updated for Django version 4." width="880" height="480"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#soft-ui-design-django"&gt;
  &lt;/a&gt;
  &lt;a href="https://appseed.us/product/django-soft-ui-design-system"&gt;Soft UI Design Django&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Soft UI Design System is a Premium Bootstrap 5 UI Kit designed by Creative-Tim designed for those who like bold elements and beautiful websites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/django-soft-ui-design"&gt;Soft UI Design Django&lt;/a&gt; - Source Code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://django-soft-ui-free.appseed-srv1.com/"&gt;Soft UI Design Django&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BaUU53MK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbexcjy2fa3e9c914zue.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BaUU53MK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbexcjy2fa3e9c914zue.png" alt="Django Soft UI Design - Updated for Django version 4." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#datta-able-django"&gt;
  &lt;/a&gt;
  &lt;a href="https://appseed.us/admin-dashboards/django-datta-able"&gt;Datta Able Django&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The design is a simple BS4 released under the MIT license. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/django-datta-able"&gt;Datta Able Django&lt;/a&gt; - Source Code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://django-datta-able.appseed-srv1.com/"&gt;Datta Able Django&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SF3A3NF3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ow4h4hg2hr8uf01jdk78.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SF3A3NF3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ow4h4hg2hr8uf01jdk78.jpg" alt="Django Datta Able - Updated for Django version 4." width="880" height="429"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resource and support, feel free to access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;✨ Get &lt;a href="https://appseed.us/support"&gt;support&lt;/a&gt; via email and &lt;a href="https://discord.gg/fZC6hup"&gt;Discord&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://appseed.us/admin-dashboards/open-source"&gt;Free Dashboards&lt;/a&gt; crafted in Flask, &lt;strong&gt;Django&lt;/strong&gt;, and &lt;code&gt;React&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>django</category>
      <category>webdev</category>
      <category>opensource</category>
      <category>python</category>
    </item>
    <item>
      <title>15 Recommended Books For Computer Science Students</title>
      <author>Astrodevil</author>
      <pubDate>Mon, 17 Jan 2022 10:53:51 +0000</pubDate>
      <link>https://dev.to/astrodevil/15-recommended-books-for-computer-science-students-32pl</link>
      <guid>https://dev.to/astrodevil/15-recommended-books-for-computer-science-students-32pl</guid>
      <description>&lt;p&gt;We are in the modern world where the digitization of education is already going on. Now lots of blogs, articles are there on the internet to learn from. But Book has its own value, the author puts his all knowledge experience and time to write one whole book. The knowledge and details you get from a book are very precious.&lt;/p&gt;

&lt;p&gt;In this article, I am going to discuss 15 Recommended Books For Computer Science Students&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-clean-code-a-handbook-of-agile-software-craftsmanship"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://amzn.to/3F96hkA"&gt;Clean Code: A Handbook of Agile Software Craftsmanship&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3F96hkA"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cGzwDG5s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641891220161/uLyxG3zNT.jpeg" alt="cc.jpg" width="378" height="500"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Because it's more approachable, especially for inexperienced developers, Clean Code is one of the most regularly seen books on a programmer's desk. Clean Code focuses on tactical ideas, such as how to build classes and functions, rather than high-level procedures.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-head-first-java"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://amzn.to/3Fem9Ct"&gt;Head First Java&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3Fem9Ct"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7ETB7emK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642410737622/8H298dREE.jpeg" alt="510l5fQkfoL.jpg" width="432" height="500"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Learning a difficult new language, especially an object-oriented computer programming language like Java, is no simple undertaking. You could believe the issue is with your mind. It appears to have its own mind, one that doesn't always want to take in the dry, technical information you're required to learn. This book is like bible for java beginners.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-java-the-complete-reference"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://amzn.to/3GCVnF8"&gt;Java: The Complete Reference&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3GCVnF8"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ye4rSAEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642411110679/WMXzl9Q-J.png" alt="image.png" width="500" height="275"&gt;&lt;br&gt;
&lt;/a&gt; &lt;br&gt;
In "Java: The Complete Reference, Eighth Edition," popular programming author Herb Schildt covers all you need to know about writing, building, debugging, and running Java programmes. This comprehensive volume covers the whole Java language, including syntax, keywords, and core programming concepts, and has been updated for Java Platform, Standard Edition 7 (Java SE 7). You'll also learn about the key components of the Java API library. Swing, JavaBeans, servlets, and applets are all addressed, with real-world examples to demonstrate how they function. Try-with-resources, strings in switch, type inference with the diamond operator, NIO.2, and the Fork/Join Framework are all covered in detail.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-cracking-the-coding-interview"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://amzn.to/3ftNW7l"&gt;Cracking the Coding Interview&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3ftNW7l"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pufESEKi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642415984437/csfrM0fqU.png" alt="image.png" width="312" height="416"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Cracking the Coding Interview is well worth your time and money if you're ready to start interviewing with FAANG firms. Everything from the interview procedure to unique scenarios, pre-interview preparation to behavior questions, Big O to technical questions, and 189 real-world programming problems are covered.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-introduction-to-algorithms"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://amzn.to/3I8MDqM"&gt;Introduction to Algorithms&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3I8MDqM"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ReAJNZMi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642411866958/BmiIkLEHg.png" alt="image.png" width="373" height="475"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;This book examines a wide range of algorithms in depth while making their creation and analysis accessible to readers of all levels. Each chapter is self-contained and can be utilized as a study unit on its own. The algorithms are given in English and pseudocode that anyone who has done some programming may understand. Without losing the depth of information or mathematical rigor, the explanations have been kept simple.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-data-structures-and-algorithms-made-easy"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://amzn.to/3GEnUKs"&gt;Data Structures And Algorithms Made Easy&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3GEnUKs"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gZJ5irpL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642415939523/K2h6xcVUK.png" alt="image.png" width="291" height="416"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;"Data Structures And Algorithms Made Easy: Data Structures and Algorithmic Puzzles" addresses questions about complex data structures and algorithms. Because each problem has several solutions and the book is written in C/C++, it may be used as an interview and test preparation tool for computer scientists.&lt;br&gt;
Easy Data Structures and Algorithms: Data Structures and Algorithmic Puzzles is a collection of solutions to a variety of difficult problems involving data structures and algorithms. Any expert in computer science will find it useful. It may be used as a reference manual for computer science professionals. This book will assist you in preparing for campus interviews, exams, and employment. In a word, this book presents solutions to a wide range of challenging data structures.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-the-algorithm-design-manual"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://amzn.to/3qzqrA1"&gt;The Algorithm Design Manual&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3qzqrA1"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X46M8t3s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642415902363/TzCVeT6QW.png" alt="image.png" width="299" height="416"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The "mystery" of building algorithms and measuring their usefulness and efficiency is removed in this substantially extended and updated third edition of the best-selling classic. The book currently serves as the fundamental textbook for algorithm design classes, while also serving as the foremost practical reference guide on algorithms for programmers, researchers, and students, with updates to the first and second editions.&lt;/p&gt;

&lt;p&gt;The user-friendly format The Algorithm Design Manual makes combinatorial algorithms technology accessible to anybody, with a focus on design rather than analysis. The first section, Techniques, explains how to develop and analyse computer algorithms in a clear and understandable manner. The second section, Resources, has a library of algorithmic resources, implementations, and a wide bibliography for browsing and reference.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-eloquent-javascript"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://amzn.to/3A7p6DR"&gt;Eloquent JavaScript&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3A7p6DR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--59-YLaNJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642413043180/IEVC-sVu4.png" alt="image.png" width="500" height="464"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Eloquent JavaScript goes beyond the cut-and-paste scripts found in recipe books to teach you how to write elegant and effective code. Variables, control structures, functions, and data structures are among the first programming concepts you'll study. After that, you'll dive into JavaScript's higher-order functions, closures, and object-oriented programming.&lt;/p&gt;

&lt;p&gt;You'll learn how to: Understand the principles of programming and best practises. By combining the capabilities of functional and object-oriented programming, regular expressions may be used to quickly analyse and edit text. Errors and browser incompatibilities should be handled compassionately. Handle browser events and DOM modifications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-let-us-c"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://amzn.to/3nzuWsx"&gt;Let Us C&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3nzuWsx"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LbEuTt0T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642415822343/HyKx24Kbc.png" alt="image.png" width="216" height="312"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The book's simplicity and storytelling style set it out from the packed shelves of C Programming books. These two characteristics have been present in all six prior versions of this book. Today's C programmer must not only learn the language's complexity and nuances, but also deal with its use in systems such as Windows and Linux. This book does an excellent job of covering all three areas of C programming.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-head-first-design-patterns"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://amzn.to/3qyzxNo"&gt;Head First Design Patterns&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3qyzxNo"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XclPfbC1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642415773733/Q_v0m-FWne.png" alt="image.png" width="359" height="416"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;This book teaches you the patterns that matter, when and why to use them, how to apply them to your own ideas, and the object-oriented design concepts that underpin them. Join the hundreds of thousands of developers who have used Head First Design Patterns to enhance their object-oriented design abilities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-the-basics-of-bitcoins-and-blockchains"&gt;
  &lt;/a&gt;
  11. &lt;a href="https://amzn.to/3FExyeS"&gt;The Basics of Bitcoins and Blockchains&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3FExyeS"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qsIb9Suy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642414306694/jfw2Yxacu.png" alt="image.png" width="269" height="416"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Learn about the history and fundamentals of cryptocurrencies and blockchains: There is a wealth of information available about bitcoin and blockchains. However, most of this information may be incomprehensible to the untrained. The Basics of Bitcoins and Blockchains seeks to give an easy-to-understand introduction to this new money and the groundbreaking technology that underlies it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-database-system-concepts"&gt;
  &lt;/a&gt;
  12. &lt;a href="https://amzn.to/3nxBat8"&gt;Database System Concepts&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3nxBat8"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f8E8_TwC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642414662145/UaK8fkAyS.png" alt="image.png" width="312" height="416"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Database System Concepts is a classic and essential work in database education. It presents the fundamental concepts of database management in an easy-to-understand manner, allowing students to begin working with databases straight away.&lt;/p&gt;

&lt;p&gt;The text is aimed towards junior/senior undergraduate database courses or first-year graduate database courses. It also includes additional information that may be utilized as a supplement or as a prelude to a more advanced course.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13-python-crash-course"&gt;
  &lt;/a&gt;
  13. &lt;a href="https://amzn.to/3A6wXkT"&gt;Python Crash Course&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3A6wXkT"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vOW729ow--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642415222287/Q7V-MSOlq.png" alt="image.png" width="315" height="416"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Look no further if you need to learn Python as soon as possible. Python Crash Course is designed to get novice Python programmers up and running quickly.&lt;br&gt;
Learn the fundamentals of programming quickly using a project-based approach, so you can focus on what you want to build: websites, data visualization, online apps, or even programming a Raspberry Pi. Python Crash Course is the world's best-selling Python book.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#14-designing-dataintensive-applications-the-big-ideas-behind-reliable-scalable-and-maintainable-systems"&gt;
  &lt;/a&gt;
  14. &lt;a href="https://amzn.to/3rsQeZQ"&gt;Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3rsQeZQ"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PDgFGVRU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642415371081/U60Ei_rpmE.png" alt="image.png" width="320" height="416"&gt;&lt;br&gt;
&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;"Foundations of data systems" provides an excellent overview of data systems. This section begins by discussing desired database qualities such as dependability, scalability, and maintainability. Database concepts such as the classic relational model, the document model, and graph-based models are investigated. The implementation of data storage and retrieval in databases is then thoroughly explained.&lt;br&gt;
You will learn about SStables, LSM trees, and B-Trees, as well as how they are employed in databases. Data warehousing and column-oriented databases are thoroughly discussed. The distinctions between OLTP and OLAP are presented in a tabular manner. There is a nice introduction to message brokers, protocolbuf, thrift, and avro.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#15-objectoriented-programming-with-c"&gt;
  &lt;/a&gt;
  15. &lt;a href="https://amzn.to/3GE7SjP"&gt;Object-Oriented Programming with C++&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3GE7SjP"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eqh9Df4j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642415714814/sxl5Smsoz.png" alt="image.png" width="315" height="416"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The book's goal is to provide a comprehensive enrichment of knowledge in the domain of object-oriented programming using C++ as the implementation language. The author has utilized simple language to convey important principles of object-oriented programming and to aid readers' comprehension. The same ideas have been implemented in solved examples written in the C++ programming language. The book retains its original style of straightforward writing and includes plenty of solved examples, programming exercises, and additional practice problems.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#if-you-my-content-connect-me-on-twitter-or-supports-me-by-buying-me-a-coffee"&gt;
  &lt;/a&gt;
  If You ❤️ My Content! Connect Me on  &lt;a href="https://mobile.twitter.com/Astrodevil_"&gt;Twitter&lt;/a&gt; or Supports Me By Buying Me A Coffee☕👇🏼
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/Astrodevil"&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rZDB_RRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-orange.png" alt="Buy Me A Coffee" width="545" height="153"&gt; &lt;/a&gt;&lt;/p&gt;

</description>
      <category>books</category>
      <category>beginners</category>
      <category>programming</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Stop rewarding quantity!</title>
      <author>Ingo Steinke</author>
      <pubDate>Mon, 17 Jan 2022 10:52:04 +0000</pubDate>
      <link>https://dev.to/ingosteinke/stop-rewarding-quantity-20o8</link>
      <guid>https://dev.to/ingosteinke/stop-rewarding-quantity-20o8</guid>
      <description>&lt;p&gt;I have received a DEV badge to honor consistency of writing, as I had published at least one post per week for eight weeks in series. Notifying me of the badge, &lt;a href="https://dev.to/devteam"&gt;DEV&lt;/a&gt; wants to encourage me to continue the streak and receive another badge for posting &lt;em&gt;something&lt;/em&gt; (&lt;strong&gt;anything&lt;/strong&gt;, actually) every week for another eight weeks. I could even write a bot who does that, and then I'll write another post featuring a codepen of my bot script.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-the-hype-about-consistency"&gt;
  &lt;/a&gt;
  What's the hype about consistency? 🪥
&lt;/h3&gt;

&lt;p&gt;After a thoughtful second, I decided to put the badge on my not-to-do-list.&lt;/p&gt;

&lt;p&gt;While building habits can help people to achieve their goals, I think that rewarding quantity is a step in the wrong direction (unless it's about brushing your teeth every day). Our society is already based on routine, making people drive to their 9-to-5-jobs in their cars day by day, so it feels like a genius "life hack" to replace some of our old routines by other, slightly less toxic ones, and "earning" imaginary badges in our habit tracking apps or gratefulness journals.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-could-post-a-rant-every-day-"&gt;
  &lt;/a&gt;
  I could post a rant every day ...
&lt;/h3&gt;

&lt;p&gt;For the sake of consistency of writing, I could also post a little rant about any annoying misfeature every day. Due to the prevailing "minimal (un)viable product" strategy, it won't be hard to publish something ungrateful every day.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-or-lower-my-standards-and-dont-finish-my-work"&gt;
  &lt;/a&gt;
  ... or lower my standards and don't finish my work
&lt;/h3&gt;

&lt;p&gt;Last, but not least, I could make less of an effort when researching and learning new features and make sure to release a new post every week no matter if I'm finished with what I set out to achieve. Just let the community correct my mistakes and fill in the blanks. DEV would reward the achieved &lt;em&gt;consistency&lt;/em&gt; with another badge in eight weeks from now, despite the decreased quality of my content.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#badges-are-pretty-pointless"&gt;
  &lt;/a&gt;
  Badges are pretty pointless 🏆
&lt;/h2&gt;

&lt;p&gt;As &lt;a href="https://dev.to/inhuofficial/my-writing-stats-for-2021-best-time-to-post-on-dev-and-plans-for-2022-2023-over-250-articles-planned-557l#badges"&gt;INHU pointed out&lt;/a&gt;, "badges are pretty pointless". Which might seem funny to hear from someone who set their own goals accouncing a huge quantity of new post in 2022.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/my-writing-stats-for-2021-best-time-to-post-on-dev-and-plans-for-2022-2023-over-250-articles-planned-557l" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;My writing stats for 2021, best time to post on DEV and plans for 2022-2023 [over 250 articles planned]&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial ・ Jan 3 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#writing&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#1kto1mil&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Quantity allows no conclusion about quality. A continuously growing pile of bullshit is still a pile of bullshit. No personal offense: some people release a lot of content while providing high quality at the same time, and &lt;a class="mentioned-user" href="https://dev.to/inhuofficial"&gt;@inhuofficial&lt;/a&gt; is probably on of those people.&lt;/p&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/thormeier"&gt;@thormeier&lt;/a&gt; also seems to find it easy enough to deliver weekly content and use the writing process to push themselves beyond their comfort zone:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thormeier" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pl7xkg-8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--wbt3mQFY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/436259/00cde9af-e704-48b7-a00a-32cdc4997190.jpeg" alt="thormeier"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thormeier/how-15-years-of-writing-posts-on-devto-made-me-a-better-developer--25j4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How 1.5 years of writing posts on dev.to made me a better developer ✍️↔️🧑‍💻🚀&lt;/h2&gt;
      &lt;h3&gt;Pascal Thormeier ・ Jan 16 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#watercooler&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;But while quality and quantity are unrelated in theory, often we have to decide to prioritize either one of them. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#side-effects-of-gamification"&gt;
  &lt;/a&gt;
  Side effects of gamification 💩💩💩
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Gamification"&gt;Gamification&lt;/a&gt; is a controversial approach to reward desired behavior, &lt;a href="https://holub.com/kpis-velocity-and-other-destructive-metrics/"&gt;risking to boost unwanted side effects instead&lt;/a&gt;. StackOverflow has been trying to build a "meritocracy" focused on high-quality technological discussions, but they are still &lt;a href="https://meta.stackoverflow.com/questions/262446/are-we-being-elitist-is-there-something-wrong-with-that"&gt;pretty far from reaching their goal&lt;/a&gt; in my opinion, often giving the impression of a gatekeeping community proud of their museum of outdated jQuery code snippets), but that doesn't mean it was wrong to try.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#irrelevant-clickbait-and-dangerous-advice"&gt;
  &lt;/a&gt;
  Irrelevant clickbait and dangerous advice
&lt;/h3&gt;

&lt;p&gt;DEV, as a very open-minded and &lt;a href="https://dev.to/code-of-conduct"&gt;welcoming online community&lt;/a&gt;, has proved a source of information, inspiration, discussion, and entertainment. But, besides many articles being irrelevant to me &lt;em&gt;personally&lt;/em&gt;, DEV also attracts a lot of dubious content with spammy headlines like &lt;strong&gt;"22 node modules / react plugins EVERY developer MUST know in 2022"&lt;/strong&gt; featuring copy-and-pasted half-knowledge, sometimes even giving risky advice contrary to established best-practice consensus.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-dev-a-victim-of-its-own-success"&gt;
  &lt;/a&gt;
  Is DEV a victim of its own success?
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/samuelfaure"&gt;@samuelfaure&lt;/a&gt;, who left Medium "after it became shit", elaborated on the problems that arise from popularity.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/samuelfaure" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m2v3LgxY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--UznEvYbA--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/260009/e299cfe5-54c7-449d-9b51-cfa2facee1c5.jpeg" alt="samuelfaure"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/samuelfaure/is-dev-to-victim-of-its-own-success-1ioj" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Is Dev.to victim of its own success?&lt;/h2&gt;
      &lt;h3&gt;Samuel FAURE ・ Jul 6 '21 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#writing&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#meta&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;As DEV allows everyone to write to the best of their ability, which is a good thing, it could still benefit the community to reward and promote outstanding quality content.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#promoting-outstanding-quality-content"&gt;
  &lt;/a&gt;
  Promoting outstanding quality content 🙏
&lt;/h3&gt;

&lt;p&gt;DEV already has topical hashtags and options to indicate the difficulty level, and they have a team that reads, awards and curates content. I can't thank them enough! Their helpfpul expertise and effort could never be achieved by an algorithm.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-hashtags-and-experience-level-as-filters"&gt;
  &lt;/a&gt;
  Using hashtags and experience level as filters
&lt;/h3&gt;

&lt;p&gt;Hashtags like &lt;code&gt;#beginners&lt;/code&gt; or &lt;code&gt;#javascript&lt;/code&gt; could be used to filter by personal preference and interests and help which content to feature on certain landing pages automatically. Maybe we could use an option to suggest changing hashtags or difficulty classifications of articles that we have read and find they are not tagged accordingly.&lt;/p&gt;

&lt;p&gt;But there is one simple change that might make much of a difference:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stop-rewarding-quantity"&gt;
  &lt;/a&gt;
  Stop rewarding quantity!
&lt;/h2&gt;

&lt;p&gt;Badges are nice, especially if someone wrote an article that got hand-picked into a best of the week or best topical writeup.&lt;/p&gt;

&lt;p&gt;But why would we want to reward consistency? Working on high quality content, building demo code and making sure my claims are factually correct, and proved by authoritative citations, benefits my readers, and it benefits my own learning process. That takes time to do properly, and we should rather take our time and release one good article per month instead of feeling obliged to deliver something every week.&lt;/p&gt;

&lt;p&gt;At least, that's my own opinion, also due to the fact that I see a growing number of articles on DEV that might have better been saved as a draft instead of being published in their current state.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--81YvqC0Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/14kp6d8sxbzwk726p9iu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--81YvqC0Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/14kp6d8sxbzwk726p9iu.png" alt="Collage of the 8-weak-streak badge, and emoji clip art graphic of a calendar with weekly checkmarks, a diamond, and a lot of poo pile characters" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Being tempted to release a half-baked post just to get on with a continuity streak, or release additional "inspirational" posts with calendar motto bullshit does not help to improve quality at all. DEV is neither StackOverflow nor Wikipedia, but it doesn't have to become the next LinkedIn or Medium either. There are already too many platforms promoting mediocre bulk content.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prioritize-quality-over-quantity"&gt;
  &lt;/a&gt;
  Prioritize quality over quantity
&lt;/h2&gt;

&lt;p&gt;Let's take our time to finish well-written articles and don't let the hollow goal of a continuous streak divert us from prioritizing quality over quantity!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to get rid of Internet Explorer faster but carefully</title>
      <author>Matouš Borák</author>
      <pubDate>Mon, 17 Jan 2022 10:41:45 +0000</pubDate>
      <link>https://dev.to/nejremeslnici/how-to-get-rid-of-internet-explorer-faster-but-carefully-40bg</link>
      <guid>https://dev.to/nejremeslnici/how-to-get-rid-of-internet-explorer-faster-but-carefully-40bg</guid>
      <description>&lt;p&gt;Many web developers eagerly look forward to &lt;a href="https://docs.microsoft.com/en-us/lifecycle/faq/internet-explorer-microsoft-edge#what-is-the-lifecycle-policy-for-internet-explorer"&gt;Internet Explorer End of Life&lt;/a&gt;, scheduled on June 15th, 2022. We definitely do as well! Of course, this EOL date doesn’t mean that all IE users will be gone by then. But it will be OK to take IE into consideration even less when updating the site.&lt;/p&gt;

&lt;p&gt;Nevertheless, we’ve already set out that journey about a year ago:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;we show an overlay popup to all IE users, asking them to switch:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gd2GN-nA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6nixm67g3y1ulwoanj7p.png" alt="Internet Explorer popup" width="880" height="646"&gt;
&lt;/li&gt;
&lt;li&gt;throughout last year, we upgraded to &lt;a href="https://tailwindcss.com/docs/upgrading-to-v2#support-for-ie-11-has-been-dropped"&gt;Tailwind 2&lt;/a&gt; and &lt;a href="https://github.com/hotwired/stimulus/releases/tag/v3.0.0-beta.1"&gt;Stimulus 3&lt;/a&gt; even though both frameworks drop official support for IE,&lt;/li&gt;
&lt;li&gt;we still use a few IE-related polyfills that solve the biggest issues, but only for the most critical use cases,&lt;/li&gt;
&lt;li&gt;and we generally don’t test newly built features in IE any more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(For more details about our previous IE-related measures, see our &lt;a href="https://dev.to/nejremeslnici/upgrade-to-stimulus-3-say-bye-to-ie11-and-celebrate-b7g"&gt;last post&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;Since then, we saw a clear trend: relative IE usage dropped from 1.7% in January 2021 down to ~0.5% in early November. Still, we were thinking: could we help this trend even more? Our site is a marketplace connecting customers with various craftspeople. We observed that almost all IE visits were from our customers, especially first-time visitors. We knew our customers were often not very tech-savvy and we couldn’t expect them to migrate to a newer browser unless the experience was really seamless. So, could we still help them make the switch somehow? Turns out we could!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-need-microsoft-edge-list"&gt;
  &lt;/a&gt;
  The ”Need Microsoft Edge List“
&lt;/h2&gt;

&lt;p&gt;A nice migration process is actually &lt;strong&gt;offered by Microsoft itself&lt;/strong&gt; although the feature can be harder to find. Microsoft keeps an official list of websites that want their users to switch from IE to Edge. Windows systems periodically download this file and take care of the migration process on the sites listed there.&lt;/p&gt;

&lt;p&gt;The list is called &lt;strong&gt;&lt;a href="https://docs.microsoft.com/en-us/microsoft-edge/web-platform/ie-to-microsoft-edge-redirection"&gt;IE Compatibility List&lt;/a&gt;&lt;/strong&gt; and the process to get there is both surprising and lovely — because very old-school and manual 😍:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;as a prerequisite, you need to show a message to your IE visitors on your web, asking them to switch,&lt;/li&gt;
&lt;li&gt;then you can officially &lt;a href="https://docs.microsoft.com/en-us/microsoft-edge/web-platform/ie-to-microsoft-edge-redirection#request-an-update-to-the-ie-compatibility-list"&gt;request&lt;/a&gt; Microsoft to add your site to the list; you do that by sending a free-form email including the required information,&lt;/li&gt;
&lt;li&gt;a human replies (in our case it was Kelly, hi! 👋) to confirm your request or clarify details,&lt;/li&gt;
&lt;li&gt;the same person takes care of you during the whole time and informs you about the progress,&lt;/li&gt;
&lt;li&gt;about a week later, your site is added to the &lt;a href="https://edge.microsoft.com/neededge/v1"&gt;list itself&lt;/a&gt; and starts being recognized by Windows immediately.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From now on, when a user visits your site with IE, he or she is &lt;strong&gt;redirected to the Edge browser&lt;/strong&gt; and a localized explanation pops up. Most importantly, all bookmarks, settings, cookies and passwords are &lt;strong&gt;automatically transferred&lt;/strong&gt; so everything works just the same as in IE (but better).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FgedkA_H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8mwpta2lpr39pviclld4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FgedkA_H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8mwpta2lpr39pviclld4.png" alt="IE to Edge migration" width="880" height="628"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-effect"&gt;
  &lt;/a&gt;
  The effect
&lt;/h2&gt;

&lt;p&gt;Of course we were very curious how effective this IE compatibility list was. Our analytics data shows that the number of IE visits &lt;strong&gt;dropped to half of the previous numbers&lt;/strong&gt; within a few days after the addition to the list.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NRccN5WA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ez8k8gwj087smvqc57j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NRccN5WA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ez8k8gwj087smvqc57j.png" alt="Effect of the IE compatibility list" width="880" height="118"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That’s great! Using the official list, we were able to migrate even many first-time visitors and the relative proportion of IE visits dropped to ~0.2%. Still, as can be seen in the chart, there are a few IE visitors left, making around one hundred visits per week. We guess these are users of very old and long-time-not-updated Windows systems who must experience increasingly serious problems accessing the internet overall… We are sorry about that but we believe we did all we could. So, good luck to all and see you in better browser times!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>ie</category>
      <category>browser</category>
      <category>edge</category>
    </item>
    <item>
      <title>What is .env ? How to Set up and test a .env file in Node?</title>
      <author>nermineslimane</author>
      <pubDate>Mon, 17 Jan 2022 10:30:31 +0000</pubDate>
      <link>https://dev.to/nermineslimane/what-is-env-how-to-set-up-and-test-a-env-file-in-node-18bl</link>
      <guid>https://dev.to/nermineslimane/what-is-env-how-to-set-up-and-test-a-env-file-in-node-18bl</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-are-environment-variables-"&gt;
  &lt;/a&gt;
  What are environment variables ?
&lt;/h2&gt;

&lt;p&gt;Environment variables offer information on the process's operating environment (producton, development, build pipeline, and so on). Environment variables in Node are used to store sensitive data such as passwords, API credentials, and other information that should not be written directly in code. Environment variables must be used to configure any variables or configuration details that may differ between environments.&lt;/p&gt;

&lt;p&gt;Environment variables are already included in the Node.js ecosystem, which gives them a significant benefit over alternative configuration choices such as a config.js or config.json file. Environment variables, especially when used in conjunction with automation, such as a build pipeline, allow you to avoid doing unpleasant things like scripting configuration files.&lt;/p&gt;

&lt;p&gt;Now let's dive in some coding and practice !&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-set-up-and-read-a-env-file-"&gt;
  &lt;/a&gt;
  How to Set up and read a .env file ?
&lt;/h2&gt;

&lt;p&gt;The dotenv package for handling environment variables is the most popular option in the Node.js community. You can create an.env file in the application's root directory that contains key/value pairs defining the project's required environment variables. The dotenv library reads this.env file and appends it to process.env. Please do not save your.env file on your computer.&lt;/p&gt;

&lt;p&gt;In five easy steps, we'll update.gitignore, create a.env file, and read it:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Add .env to gitignore &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ivjSWsHX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8g18ljfiwnzbgij33x84.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ivjSWsHX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8g18ljfiwnzbgij33x84.png" alt="Image description" width="406" height="111"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Commit the changes to your repository
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add .gitignore
git commit -m "Adding .env to .gitignore"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Install npm package &lt;a href="https://www.npmjs.com/package/dotenv"&gt;&lt;code&gt;dotenv&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i dotenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;It's time to use our env variables&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Add some variable to your .env file, for exemple we're going to add a status for our nodejs app and define two different ports, one for development status and one for production &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eR_2y69p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8dhw6zxqs0czsyel6hy1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eR_2y69p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8dhw6zxqs0czsyel6hy1.png" alt="Image description" width="328" height="130"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then in our entry point we're testing if the &lt;code&gt;STATUS&lt;/code&gt;is production we're going to use the &lt;code&gt;PROD_PORT&lt;/code&gt; else we're using the &lt;code&gt;DEV_PORT&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T7uZnBle--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dfus3kwiabm7m59e50mt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T7uZnBle--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dfus3kwiabm7m59e50mt.png" alt="Image description" width="832" height="196"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Run the application
Change the status variable in your .env and see what happens &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uCS_a9KM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ampvva436evn5ds1eurt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uCS_a9KM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ampvva436evn5ds1eurt.png" alt="Image description" width="461" height="76"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is excellent practice to document the.env file with an example. The.env file should be particular to the environment and not checked into version control. This.env.example file documents the application's necessary variables and can be committed to version control. This serves as a helpful reference and speeds up the onboarding process for new team members by reducing the amount of time spent digging through the coding to figure out what needs to be set up.&lt;/p&gt;

&lt;p&gt;This is an example of a .env.example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Environment variables.
STATUS=production
#Development port
DEV_PORT=7000
#Production port
PROD_PORT=8000

#DB CONFIG
HOST=db.host
USER=root
PASSWORD=db.password
DB=db.name
DIALECT=mysql

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks for reading and if you have any questions, use the comment function !&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Copy any code snippet in a click as never before 😲</title>
      <author>Basharath</author>
      <pubDate>Mon, 17 Jan 2022 10:22:45 +0000</pubDate>
      <link>https://dev.to/basharath/never-seen-way-of-copying-text-or-code-snippets-2mb8</link>
      <guid>https://dev.to/basharath/never-seen-way-of-copying-text-or-code-snippets-2mb8</guid>
      <description>&lt;p&gt;We often copy text or code snippets or any other kind of resource quite commonly while browsing the web. Copying sometimes got to be tedious work in certain situations.&lt;/p&gt;

&lt;p&gt;Using keyboard shortcuts quite often for various tasks is found to be a great time-saver in the long run. But certain people who are not much used to a keyboard, like using the mouse for all their small to big activities in the browser.&lt;/p&gt;

&lt;p&gt;Copying and pasting text with the shortcuts &lt;code&gt;Ctrl + C&lt;/code&gt; and &lt;code&gt;Ctrl + V&lt;/code&gt;  are the world's highly used shortcuts and these shortcuts are known almost to all the people who use a computer.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Do you remember yourself copying text with &lt;code&gt;Ctrl + C C C C C C C&lt;/code&gt;, typing C multiple times to make sure the text gets copied?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sometimes we tend to put a bit more time even with copy shortcuts. When you want to copy text just so frequently, let's say you want to shift a formatted text from one place to the other and that can be copied only as paragraphs and not as a whole, in such situations, copying and pasting text with even shortcuts is going to be a very tedious job. Not just this case but in any case that involves frequent copying and pasting text gets tedious even with shortcuts.&lt;/p&gt;

&lt;p&gt;So keeping in mind various contexts involved in copying text, a small and compact chrome extension is made to &lt;em&gt;&lt;a href="https://chrome.google.com/webstore/detail/copy-text-easily/fagmaopcbeobbfhkeodicjekiniefdlo"&gt;Copy Text Easily&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Using Copy Text Easily(CTE) extension effectively has the potential to save a lot of time in the long run for those who involve in copying text just so frequently. e.g., Students copying reference details to their journals, etc.&lt;/p&gt;

&lt;p&gt;Let's see all the features which this Copy Text Easily extension provides.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#copy-text-easily-extension"&gt;
  &lt;/a&gt;
  Copy Text Easily extension
&lt;/h2&gt;

&lt;p&gt;Before getting started to use this Copy Text Extension, you need to first install it from the chrome store. You can install the extension from this link &lt;a href="https://chrome.google.com/webstore/detail/copy-text-easily/fagmaopcbeobbfhkeodicjekiniefdlo"&gt;Copy Text Easily Extension&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cte-chrome-extension-has-got-three-modes-for-copying-text"&gt;
  &lt;/a&gt;
  CTE chrome extension has got three modes for copying text
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Paragraph(default)&lt;/li&gt;
&lt;li&gt;Sentence&lt;/li&gt;
&lt;li&gt;Custom&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#1-paragraph-mode"&gt;
  &lt;/a&gt;
  1. Paragraph mode:
&lt;/h3&gt;

&lt;p&gt;In paragraph mode, you can copy the blocks of text by hovering on any block of text you want. A small preview of the text that you are going to copy will be displayed for convenience. Just clicking on the block of text will get the text copied. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--riKQ8_TB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iv4gqxos1znnd3emwvyf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--riKQ8_TB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iv4gqxos1znnd3emwvyf.gif" alt="copy-code-stackoverflow-copy-text-easily" width="880" height="472"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This mode is very useful for copying blocks of code or code snippets on StackOverflow, GitHub, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-sentence-mode"&gt;
  &lt;/a&gt;
  2. Sentence mode:
&lt;/h3&gt;

&lt;p&gt;This is a very unique way to copy sentences from a paragraph. By hovering the mouse on and off the paragraph, you can see different sentences getting selected to copy the text. Whichever sentence you want can be seen in the preview box and just clicking once will get that particular sentence copied to your clipboard. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KlpRvPJ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ub6oa1geu2f29l1qyz8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KlpRvPJ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ub6oa1geu2f29l1qyz8.gif" alt="sentence-mode-copy-text-easily" width="880" height="427"&gt;&lt;/a&gt;&lt;br&gt;
This mode is very useful while working with sentences related to writing works. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-custom-mode"&gt;
  &lt;/a&gt;
  3. Custom mode:
&lt;/h3&gt;

&lt;p&gt;This is the customized mode to copy any text you want just by selecting. Yes, just selecting a text will copy the text to the clipboard. This is useful in situations when you can want to copy a very specific text when it is not possible with the above previous modes. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KDuNlo54--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oyl96bylov4totzqmmqx.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KDuNlo54--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oyl96bylov4totzqmmqx.gif" alt="custom-mode-copy-text-easily" width="880" height="427"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By default, the extension will be active on the active browser tab, and the mouse hovering will result in the preview of text hovered. So to avoid that there's an option to activate this extension on demand by pressing any of &lt;code&gt;Ctrl&lt;/code&gt;, &lt;code&gt;Alt&lt;/code&gt;, &lt;code&gt;Shift&lt;/code&gt; keys. You can select the key at your convenience from the extension keypress options. &lt;/p&gt;

&lt;p&gt;There's even an option to enable or disable the whole extension and the keypress mode. &lt;/p&gt;

&lt;p&gt;Coming to privacy, this extension fully runs on your browser locally and doesn't communicate with the outside world. It is packed in under 15KB of pure JavaScript code without any libraries or frameworks. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you face any problems with this extension you can try the below methods:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Reload the page whichever is having a problem&lt;/li&gt;
&lt;li&gt; Check if the extension is enabled&lt;/li&gt;
&lt;li&gt; Check if you have enabled the extension to work only on keypress&lt;/li&gt;
&lt;li&gt; Sometimes 'Shift' and 'Alt' keys might have problems, so try to select the 'Ctrl' key if you have problems&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And that is all about this simple chrome extension to copy the text in a hassle-free manner.&lt;/p&gt;

&lt;p&gt;I'll be sharing interesting tips, tricks and hacks about web development and technology on &lt;a href="https://twitter.com/wahVinci"&gt;Twitter @wahVinci&lt;/a&gt; and &lt;a href="https://www.instagram.com/dev_apt/"&gt;Instagram @dev_apt&lt;/a&gt;, follow if you are interested.&lt;/p&gt;

&lt;p&gt;P.S: This extension is made by me and soon I'm going to make a tutorial to create one, until then support me by following and sharing this article on Twitter.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Imgur API Image Uploader using JavaScript (+ HTML)
</title>
      <author>Shaswat Raj</author>
      <pubDate>Mon, 17 Jan 2022 10:20:18 +0000</pubDate>
      <link>https://dev.to/sh20raj/imgur-api-image-uploader-using-javascript-html-4b1c</link>
      <guid>https://dev.to/sh20raj/imgur-api-image-uploader-using-javascript-html-4b1c</guid>
      <description>&lt;p&gt;Source :- &lt;a href="https://compile.blog/imgur-api-image-uploader/"&gt;https://compile.blog/imgur-api-image-uploader/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See Example :- &lt;a href="https://gurimg.sh20raj.repl.co/"&gt;https://gurimg.sh20raj.repl.co/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Video Documentation :- &lt;a href="https://youtu.be/Gh1ngxdIXAk"&gt;https://youtu.be/Gh1ngxdIXAk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Imgur is great for hosting images for free.&lt;/p&gt;

&lt;p&gt;There are other platforms like FileStack, Cloudinary, and UploadCare; but among all Imgur is the best for uploading images because it’s free for non-commercial usage.&lt;/p&gt;

&lt;p&gt;And, there is a simple way to set up the Imgur API to upload images directly from the local disk.&lt;/p&gt;

&lt;p&gt;Here’s how to do it:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#imgur-api-image-uploader"&gt;
  &lt;/a&gt;
  Imgur API Image Uploader
&lt;/h1&gt;

&lt;p&gt;Let’s break it into simple baby steps:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-1-get-the-imgur-api"&gt;
  &lt;/a&gt;
  Step #1 – Get the Imgur API
&lt;/h1&gt;

&lt;p&gt;First of all, you will have to &lt;a href="https://api.imgur.com/oauth2/addclient"&gt;register your application&lt;/a&gt; with the Imgur API. Go to the &lt;a href="https://api.imgur.com/oauth2/addclient"&gt;API page&lt;/a&gt; and register an application. It should look like the below screenshot:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y2pG9aRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://compile.blog/wp-content/uploads/2021/03/add-client-imgur.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y2pG9aRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://compile.blog/wp-content/uploads/2021/03/add-client-imgur.png" alt="Imgur Api" width="716" height="890"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fill in the following details in the respective fields:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Application name: whatever you would like to name it&lt;/li&gt;
&lt;li&gt;Authorization type: OAuth 2 authorization with a callback URL&lt;/li&gt;
&lt;li&gt;Authorization callback URL: -&lt;a href="https://www.getpostman.com/oauth2/callback"&gt;https://www.getpostman.com/oauth2/callback&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Application website: your website address (it’s optional)&lt;/li&gt;
&lt;li&gt;Email: your email address&lt;/li&gt;
&lt;li&gt;Description: however you’d like to describe your app&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As soon as you submit, you will be presented with the Client ID and Client Secret, save both somewhere.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9GvrNrgi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://compile.blog/wp-content/uploads/2021/03/imgur-client-id-and-secret.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9GvrNrgi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://compile.blog/wp-content/uploads/2021/03/imgur-client-id-and-secret.png" alt="SS" width="718" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It should look much like the screenshot above.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-2-create-the-uploader"&gt;
  &lt;/a&gt;
  Step #2 – Create the Uploader
&lt;/h1&gt;

&lt;p&gt;Well, most of the work is done by now.&lt;/p&gt;

&lt;p&gt;You just have to create an HTML file, copy the below code and save.&lt;/p&gt;

&lt;p&gt;And yes, don’t forget to replace the YOUR_CLIENT_ID with the real Client ID that you saved in the Step #1.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;

&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;title&amp;gt;Imgur API Image Uploader&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
    &amp;lt;img src="https://i.imgur.com/U7afLiO.png" id="img" height="200px"&amp;gt;
    &amp;lt;br /&amp;gt;
    &amp;lt;input type="file" id="file"&amp;gt;
    &amp;lt;br /&amp;gt;
    &amp;lt;strong&amp;gt;
        &amp;lt;p id="url"&amp;gt;&amp;lt;/p&amp;gt;
    &amp;lt;/strong&amp;gt;

    &amp;lt;script&amp;gt;
        const file = document.getElementById("file")
        const img = document.getElementById("img")
        const url = document.getElementById("url")
        file.addEventListener("change", ev =&amp;gt; {
            const formdata = new FormData()
            formdata.append("image", ev.target.files[0])
            fetch("https://api.imgur.com/3/image/", {
                method: "post",
                headers: {
                    Authorization: "Client-ID YOUR_CLIENT_ID"
                },
                body: formdata
            }).then(data =&amp;gt; data.json()).then(data =&amp;gt; {
                img.src = data.data.link
                url.innerText = data.data.link
            })
        })
    &amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Voila! Your Imgur API Image Uploader is ready.&lt;/p&gt;

&lt;p&gt;Try opening the HTML file in your browser and test it out by uploading any image, it should return you the URL of the uploaded image.&lt;/p&gt;

&lt;p&gt;That’s it.&lt;/p&gt;

&lt;p&gt;And yes, either you can run the HTML file in the browser directly from the local disk, or you can upload it on Netlify or Github Pages.&lt;/p&gt;

&lt;p&gt;If you’ve got any related query, feel free to let me in the comments.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>api</category>
      <category>imgur</category>
      <category>sh20raj</category>
    </item>
    <item>
      <title>How to work with configs in Mezon Framework</title>
      <author>alexdodonov</author>
      <pubDate>Mon, 17 Jan 2022 10:17:02 +0000</pubDate>
      <link>https://dev.to/alexdodonov/how-to-work-with-configs-in-mezon-framework-1e74</link>
      <guid>https://dev.to/alexdodonov/how-to-work-with-configs-in-mezon-framework-1e74</guid>
      <description>&lt;p&gt;&lt;a href=""&gt;Mezon&lt;/a&gt; has it's own routine for working with configs. It can be accesed with a set of functions, wich are described below.&lt;/p&gt;

&lt;p&gt;This is the way how to start using it in your project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;composer require mezon/conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or get it directly from &lt;a href="https://github.com/alexdodonov/mezon-conf"&gt;repo&lt;/a&gt;;&lt;/p&gt;

&lt;p&gt;Getting access to the key in config can be done with &lt;code&gt;Conf::getValue($route, $defaultValue = false)&lt;/code&gt; function. It returns config value with route $route and return $defaultValue if this key was not found. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;getValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'res/images/favicon'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'http://yoursite.com/res/images/favicon.ico'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Setting values for the config key can be done by calling &lt;code&gt;Conf::setConfigValue($route, $value)&lt;/code&gt; or &lt;code&gt;Conf::addConfigValue($route, $value)&lt;/code&gt; function. The main difference between these two functions is that the first one sets scalar key, and the second one adds element to the array in config. Here is small example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;setConfigValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'res/value'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Value!'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;getValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'res/value'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// displays 'Value!' string&lt;/span&gt;

&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;addConfigValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'res/value'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Value 1!'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;addConfigValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'res/value'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Value 2!'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;getValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'res/value'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// displays array( [0] =&amp;gt; 'Value 1!' , [1] =&amp;gt; 'Value 2!' )&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You also can use typed versions of these methods:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;getValueAsArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;getValueAsObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;getValueAsString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;setConfigArrayValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;setConfigObjectValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;setConfigStringValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can set multyple values to the config:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// here $settings is an associative array&lt;/span&gt;
&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;setConfigValues&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt; &lt;span class="nv"&gt;$settings&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or you can read config from JSON:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;loadConfigFromJson&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$pathToConfig&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are not shure that the key exists, then you can check it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;setConfigValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'res/value'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Value!'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;configKeyExists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'res'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;configKeyExists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'res2'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;configKeyExists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'res/value'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also able to delete config key&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;setConfigValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'res/value'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Value!'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;deleteConfigValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'res/value'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;configKeyExists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'res/value'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;configKeyExists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'res'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// also false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or clear the entire config:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nc"&gt;Conf&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's all you need to know about config read/write.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learn-more"&gt;
  &lt;/a&gt;
  Learn more
&lt;/h2&gt;

&lt;p&gt;More information can be found here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/mezonphp"&gt;Twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/alexdodonov/mezon"&gt;Mezon Framework&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will be great if you will contribute something to &lt;a href="https://github.com/alexdodonov/mezon-conf"&gt;this project&lt;/a&gt;. Documentation, sharing the project in your social media, bug fixing, refactoring, or even submitting issue with question or feature request. Thanks anyway )&lt;/p&gt;

</description>
      <category>config</category>
      <category>mezon</category>
      <category>php</category>
      <category>ini</category>
    </item>
    <item>
      <title>Taking localization to i18next level</title>
      <author>Štěpán Granát</author>
      <pubDate>Mon, 17 Jan 2022 10:01:36 +0000</pubDate>
      <link>https://dev.to/tolgee_i18n/taking-localization-to-i18next-level-146a</link>
      <guid>https://dev.to/tolgee_i18n/taking-localization-to-i18next-level-146a</guid>
      <description>&lt;p&gt;The i18next library is one of the most popular choices for formatting translations in React applications. We decided, that we want to improve the experience by offering an easy integration with Tolgee. Localization is now uniquely accessible as your translations can be managed through opensource platform, without wasting precious Dev time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-i18next"&gt;
  &lt;/a&gt;
  Why i18next?
&lt;/h2&gt;

&lt;p&gt;The i18next is very versatile and extensible and supports basically all features that you need from i18n library.&lt;/p&gt;

&lt;p&gt;I was attracted to i18next mostly because it's React extension supports React elements interpolation through &lt;a href="https://react.i18next.com/latest/trans-component"&gt;Trans&lt;/a&gt; component.&lt;/p&gt;

&lt;p&gt;It's basically a way how to use custom elements in translations - it's really helpful when you for example need to have a link in the middle of translation. Normally you would need to have 3 separate translations and use them like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;key_1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"..."&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;key_2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;key_3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we use Trans component we can do this with one translation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Trans&lt;/span&gt; &lt;span class="na"&gt;i18nKey&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"key_1"&lt;/span&gt; &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;Link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"..."&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;while translation looking like &lt;code&gt;Text 1 &amp;lt;Link&amp;gt;Text 2&amp;lt;/Link&amp;gt; Text 3&lt;/code&gt;.&lt;br&gt;
We'll get correct result with link inside. This way you can use any React elements and they will just get injected by the translation as child.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#additional-tools-for-i18next"&gt;
  &lt;/a&gt;
  Additional tools for i18next
&lt;/h3&gt;

&lt;p&gt;There is also a quite rich family of additional plugins and tools, which can be very useful. One of them is ICU support for i18next, which comes in handy as that is go to format for Tolgee.&lt;/p&gt;

&lt;p&gt;Another very useful utilities are &lt;a href="https://www.i18next.com/how-to/extracting-translations"&gt;static extraction tools&lt;/a&gt;, which can scan your code and reliably find all keys that you are using in your project. This can help you make sure that everything is translated or eliminate unused keys.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-integrate-with-tolgee"&gt;
  &lt;/a&gt;
  How to integrate with Tolgee
&lt;/h2&gt;

&lt;p&gt;We provide package &lt;a href="https://www.npmjs.com/package/@tolgee/i18next"&gt;&lt;code&gt;@tolgee/i18next&lt;/code&gt;&lt;/a&gt;, which provides a "bridge" for integration.&lt;/p&gt;

&lt;p&gt;So we'll need to install it, together with i18next, ICU parser and tolgee UI:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install i18next i18next-icu @tolgee/i18next @tolgee/ui
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;i18next&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;i18next&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ICU&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;i18next-icu&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;withTolgee&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@tolgee/i18next&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;UI&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@tolgee/ui&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;withTolgee&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;apiUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://app.tolgee.io&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;...,&lt;/span&gt;
  &lt;span class="na"&gt;ui&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;UI&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ICU&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;supportedLngs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fr&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can manage your tranlsations through Tolgee platform, so anyone can do translate (not just Devs!). You also have the power of in-context translatins, so when you add new key, you can add initial translation directly through your app and quickly take screenshot, so everyone knows where the translation is located.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works?
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;withTolgee&lt;/code&gt; function is using i18next plugin system of backends, processors and also attaches event listeners and modifies default settings. We use our &lt;a href="https://dev.to/tolgee_i18n/using-invisible-text-for-better-localization-5d80"&gt;invisible text technique&lt;/a&gt; for marking each translation through i18next processor, so in-context functionality works as expected.&lt;/p&gt;

&lt;p&gt;TLDR: Tolgee acts as a translations source, using i18next for formatting and language management, while keeping in-context localization working.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-want-to-try-this"&gt;
  &lt;/a&gt;
  I want to try this!
&lt;/h3&gt;

&lt;p&gt;We have example applications for &lt;a href="https://github.com/tolgee/react-i18next-example"&gt;React&lt;/a&gt; and &lt;a href="https://github.com/tolgee/vue-i18next-example"&gt;Vue&lt;/a&gt; and play around with them. If you connect them with Tolgee platform, you can see in-context localization in action. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---BQ7T7DQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrufzokuxp04tqbb8pin.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---BQ7T7DQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrufzokuxp04tqbb8pin.png" alt="In-context example" width="880" height="346"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Read more in our &lt;a href="https://dev.to/docs/web/using_with_i18next/installation"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;PS: Check &lt;a href="https://tolgee.io/"&gt;Tolgee.io&lt;/a&gt; and give us &lt;a href="https://github.com/tolgee/server"&gt;github stars&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Original article was published on &lt;a href="https://tolgee.io/blog"&gt;our blog&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Striver's SDE Sheet Journey - #15 Majority Element (&gt;N/2 times)</title>
      <author>sachin26</author>
      <pubDate>Mon, 17 Jan 2022 09:34:46 +0000</pubDate>
      <link>https://dev.to/sachin26/strivers-sde-sheet-journey-15-majority-element-n2-times-44j6</link>
      <guid>https://dev.to/sachin26/strivers-sde-sheet-journey-15-majority-element-n2-times-44j6</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;u&gt;Problem Statement&lt;/u&gt; :-&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Given an array nums of size n, return the majority element.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Example&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Input&lt;/strong&gt; :  &lt;code&gt;nums = [2,2,1,1,1,2,2]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Result&lt;/strong&gt; : &lt;code&gt;2&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution-1"&gt;
  &lt;/a&gt;
  &lt;u&gt;Solution 1&lt;/u&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;using sorting,we can easily find the majority element in an array.&lt;/em&gt;&lt;br&gt;
lets understand this approach step by step.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-1&lt;/strong&gt; sort the array &lt;code&gt;nums&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;stpe-2&lt;/strong&gt; initialize three variables &lt;code&gt;max = 0&lt;/code&gt;, &lt;code&gt;count = 1&lt;/code&gt;, &lt;code&gt;majEle = 0&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-3&lt;/strong&gt; run a loop from &lt;code&gt;i=1&lt;/code&gt; to &lt;code&gt;n-1&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; increase counting if the adjacent elements are the same..&lt;br&gt;
if &lt;code&gt;nums[i] == nums[i+1]&lt;/code&gt; then &lt;code&gt;count++&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; if not &lt;code&gt;nums[i] == nums[i+1]&lt;/code&gt;, start recounting for new majority element.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; if &lt;code&gt;count &amp;gt; max&lt;/code&gt; then re-assign new &lt;code&gt;max&lt;/code&gt; &amp;amp; &lt;code&gt;majEle&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#java"&gt;
  &lt;/a&gt;
  Java
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;majorityElement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;majEle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]){&lt;/span&gt;
                &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++;&lt;/span&gt;

            &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;

             &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;;&lt;/span&gt;
                    &lt;span class="n"&gt;majEle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
                &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;majEle&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Time Complexity&lt;/strong&gt; : &lt;em&gt;O(nlogn) + O(n)&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;Space Complexity&lt;/strong&gt; : &lt;em&gt;O(1)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution-2"&gt;
  &lt;/a&gt;
  &lt;u&gt;Solution 2&lt;/u&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;by using &lt;a href="https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_majority_vote_algorithm#:~:text=Boyer%E2%80%93Moore%20majority%20vote%20algorithm,-From%20Wikipedia%2C%20the"&gt;&lt;strong&gt;Boyer–Moore majority vote algorithm&lt;/strong&gt;&lt;/a&gt;, we can solve this problem in &lt;strong&gt;O(n)&lt;/strong&gt; time complexity&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;in this algorithm, we increase or decrease the count of the majority element, in the last, we will get our majority element.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-1&lt;/strong&gt; initialise two variables &lt;code&gt;majEle = nums[0]&lt;/code&gt;, &lt;code&gt;count = 1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-2&lt;/strong&gt; run a loop from &lt;code&gt;i=1&lt;/code&gt; to &lt;code&gt;n&lt;/code&gt;, then&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; if we found the &lt;code&gt;majEle&lt;/code&gt;, increase the &lt;code&gt;count&lt;/code&gt; by &lt;code&gt;1&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;2.&lt;/strong&gt; if not &lt;code&gt;majEle&lt;/code&gt;, decrease the &lt;code&gt;count&lt;/code&gt; by &lt;code&gt;1&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;3.&lt;/strong&gt; if count become &lt;code&gt;0&lt;/code&gt; then, re-initialse &lt;code&gt;majEle&lt;/code&gt; &amp;amp; &lt;code&gt;count&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#java"&gt;
  &lt;/a&gt;
  Java
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;majorityElement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;majEle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
                &lt;span class="n"&gt;majEle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
                &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++;&lt;/span&gt;

            &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;majEle&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
                &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;--;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;majEle&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Thank you for reading this article. save it for future use.&lt;br&gt;
if you found something, let me in the comment section.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>beginners</category>
      <category>dsa</category>
      <category>java</category>
    </item>
    <item>
      <title>AWS open source news and updates #96</title>
      <author>Ricardo Sueiras</author>
      <pubDate>Mon, 17 Jan 2022 09:08:28 +0000</pubDate>
      <link>https://dev.to/aws/aws-open-source-news-and-updates-96-ig8</link>
      <guid>https://dev.to/aws/aws-open-source-news-and-updates-96-ig8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#jan-17th-2022-instalment-96"&gt;
  &lt;/a&gt;
  Jan 17th, 2022 - Instalment #96
&lt;/h2&gt;

&lt;p&gt;Newsletter #96. &lt;/p&gt;

&lt;p&gt;Welcome to another great round up of open source projects, news and great content. This week, we have new open source projects such as Event Catalog (that helps you to discover, explore and document your Event Driven Architectures), AWS Powertools for Lambda TypeScript edition, flowdog (an application/framework for inspection and manipulation of network traffic in AWS VPCs), ai-doorbell (a serverless AI enabled door bell) and many more. For your reading pleasure we have content on the following topics, Kubernetes, Babelfish, Redis, Smithy, Amazon EMR, TorcheServe, Deep Graph Library, ParallelCluster, Galaxy, Apache Flink, OpenSearch and more. Make sure you check out the new SaaS workshop, we have a new video that I think you will enjoy and we have a couple of new events, one of which you can catch later today.&lt;/p&gt;

&lt;p&gt;Before diving in though, make sure you check out the AWS Community Builder application (below) and if you missed it, news about a great book which should be on your reading list. With that....&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CDK Book&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are looking for something to read, then I have a recommendation for you. Towards the end of 2021, &lt;a href="https://aws-oss.beachgeek.co.uk/195"&gt;The CDK Book&lt;/a&gt; came out, written by Matthew Bonig, Thorsten Höger, Sathyajith Bhat and Matt Coulter. This is a must read interesting in automation and writing infrastructure as code, this book has been written by DevOps engineers for DevOps engineers. With a foreword from Elad Ben-Israel, this provides a hands on (plenty of examples and code, across more than just TypeScript) guide, as well as sharing current good practices as well as how you might use this in more enterprise use cases. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Community Builders&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The application form to join AWS Community Builders will be open until January 24th, and I would love to see more of the great open source builders sign up for this great program. Application form is &lt;a href="https://aws-oss.beachgeek.co.uk/18a"&gt;here&lt;/a&gt; If you want more info, check out this great write up from an existing AWS Community Builder, Stephen Sennett, &lt;a href="https://aws-oss.beachgeek.co.uk/18b"&gt;How to become an AWS Community Builder&lt;/a&gt;  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#celebrating-open-source-contributors"&gt;
  &lt;/a&gt;
  Celebrating open source contributors
&lt;/h3&gt;

&lt;p&gt;The articles posted in this series are only possible thanks to contributors and project maintainers and so I would like to shout out and thank those folks who really do power open source and enable us all to build on top of what they have created. &lt;/p&gt;

&lt;p&gt;So thank you to the following open source heroes: Matt Lewis, Matt Morgan, Aidan Steele, Lars Jacobsson, Cameron Senese, Yehor Shytikov, David Boyne, Damon Cortesi, Matt Muller, Asher Yermiyahu, Viji Sarathy, Kishore Dhamodaran, Jared Keating, Neha Gupta, Ramesh Kumar Venkatraman, Sheetal Joshi, Apurup Chevuru, Mike Stefaniak, Carlos Manzanedo Rueda, Brandon Wagner, Karthik Basavaraj, Suman Debnath, Hubert Asamer and Jan Metzner.&lt;/p&gt;

&lt;p&gt;Make sure you find and follow these builders and keep up to date with their open source projects and contributions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#latest-open-source-projects"&gt;
  &lt;/a&gt;
  Latest open source projects
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;eventcatalog&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/18d"&gt;eventcatalog&lt;/a&gt; another fantastic project from David Boyne. Event Catalog helps you to discover, explore and document your Event Driven Architectures powered by Markdown. EventCatalog as a website generator that allows you to document your event architectures with markdown files. As with all David's projects, next level documentation and there are example/demo output so you can see what you are likely to get if you were to run it yourself. Awesome stuff. If you do find it useful, make sure you do not skip the Sponsor link...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7g3V6bbC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/boyney123/eventcatalog/master/website/static/img/eventcatalog-screen1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7g3V6bbC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/boyney123/eventcatalog/master/website/static/img/eventcatalog-screen1.png" alt="demo" width="880" height="471"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cloud-map-mcs-controller&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/18c"&gt;cloud-map-mcs-controller&lt;/a&gt; is an open source project that implements the upstream multi-cluster services API (mcs-api) specification. The repository also provides a detailed work instruction and associated artefacts required for the end-end implementation of the AWS Cloud Map MCS Controller across multiple EKS clusters in support of seamless, multi-cluster workload deployments. This blog post, Kubernetes Multi-cluster Service Discovery using the AWS Cloud Map MCS Controller, from Cameron Senese will help you learn all about the mcs-api, and how to deploy the AWS MCS Controller in support of seamless, multi-cluster workload deployments on Amazon EKS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uRTwDX49--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.bytequalia.com/content/images/2022/01/solution-overview-v0.01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uRTwDX49--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.bytequalia.com/content/images/2022/01/solution-overview-v0.01.png" alt="arch" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-lambda-powertools-typescript&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/18e"&gt;aws-lambda-powertools-typescript&lt;/a&gt; this generated a lot of excitement a few weeks back when it was announced. TypeScript developers no longer need to feel left out. AWS Lambda Powertools TypeScript provides a suite of utilities for AWS Lambda functions running on the Node.js runtime, to ease the adoption of best practices such as tracing, structured logging, custom metrics, and more. AWS Lambda Powertools for TypeScript is currently released as a beta developer preview and is intended strictly for feedback purposes only. Check out the blog section for a couple of great, early reviews of this project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cdk-lambda-powertools-python-layer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/18f"&gt;cdk-lambda-powertools-python-layer&lt;/a&gt; Have you checked out the CDK Constructs Hub yet? Whilst browsing last week, I found this community developed construct that will create AWS Lambda Layer with AWS Powertools for Python library. With this construct you don't have to care about packaging and dependency management, just create a construct and add it to your function. Nice!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;flink-industrial-anomaly-detector&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/18z"&gt;flink-industrial-anomaly-detector&lt;/a&gt; this ready to go open sourced solution provides a solid foundation for some advanced streaming analytics projects you might have. In this particular case, the streaming data is coming from an industrial use case. Sensor data, such as pressure and temperature, is ingested with a local edge gateway and streamed to the cloud runing in-stream analytics using Apache Flink. &lt;br&gt;
Hubert Asamer and Jan Metzner have put this detailed blog post &lt;a href="https://aws-oss.beachgeek.co.uk/18y"&gt;Detect Real-Time Anomalies and Failures in Industrial Processes Using Apache Flink&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---YVDys6M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2022/01/07/Figure-2-Detailed-system-architecture.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---YVDys6M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2022/01/07/Figure-2-Detailed-system-architecture.png" alt="arch" width="880" height="405"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;flowdog&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/190"&gt;flowdog&lt;/a&gt; this the first of two projects from Aidan Steele. Flowdog is an application/framework for inspection and manipulation of network traffic in AWS VPCs. Packets routed to or from the Internet, between VPCs, between subnets can all be programmatically inspected or modified in great detail. What can you do with this? Aidan provides some examples, which demonstrate that anything is possible in the world of software-defined networking. From the docs, I really enjoyed the "Rickrolling" example. As Aidan says..&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;AWS Workspaces is managed computers in the cloud for employees. Sometimes they want to watch YouTube. But here's a script that means they can only watch The One Video.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O6swKrqE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FI5eZihaAAEpFK5%3Fformat%3Djpg%26name%3Dmedium" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O6swKrqE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FI5eZihaAAEpFK5%3Fformat%3Djpg%26name%3Dmedium" alt="example" width="880" height="711"&gt;&lt;/a&gt;&lt;br&gt;
Or maybe you want a more subtle rickroll. There's another sample that intercepts requests to the STS API and returns a friendly commitment in the response payload.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ms8Ize8s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FI5ejaAaIAIOyrk%3Fformat%3Djpg%26name%3Dmedium" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ms8Ize8s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FI5ejaAaIAIOyrk%3Fformat%3Djpg%26name%3Dmedium" alt="example" width="880" height="264"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;ipv6-ghost-ship&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/191"&gt;ipv6-ghost-ship&lt;/a&gt; what might you do if IP addresses were (almost) infinite? Well how about this fun/silly project from Aidan Steele, which changes the prefix of your instance ever 30 seconds. Make sure you read the Twitter thread...(I don't want to spoil it, but you really must)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;eks-gitops-crossplane-flux&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/18p"&gt;eks-gitops-crossplane-flux&lt;/a&gt; this repository contains software artifacts to deploy Crossplane server and Flux to an existing Amazon EKS cluster and then leverage the GitOps workflow to manage both provisioning a remote EKS cluster with Crossplane and subsequently manage application deployments to it using Flux. Viji Sarathy has put together a supporting blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/18q"&gt;GitOps model for provisioning and bootstrapping Amazon EKS clusters using Crossplane and Flux&lt;/a&gt; to help you get started.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fBP5Dr5p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2022/01/06/GitOpsEKS.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fBP5Dr5p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2022/01/06/GitOpsEKS.jpg" alt="arch" width="880" height="617"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ai-doorbell&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/198"&gt;ai-doorbell&lt;/a&gt; nice new project from AWS Community Builder Lars Jacobsson, that will help you build a serverless, smart AI enabled door bell. To walk you through the build, Lars has put together this blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/199"&gt;The serverless architecture of a talking doorbell&lt;/a&gt; as well as rather funny demo video of the finished thing.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/DYGVGh5M-wg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#workshop"&gt;
  &lt;/a&gt;
  Workshop
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Amazon EKS SaaS Workshop&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Check out the new Amazon EKS SaaS Workshop. Amazon EKS introduces a range of constructs that you can use to realise multi-tenancy in your SaaS solution. In this workshop, dig into the code and architecture of a working Amazon EKS SaaS application, exploring the various strategies to apply when building a SaaS application with Amazon EKS. Identity, tenant isolation, routing, data partitioning, and onboarding are among the SaaS constructs you create in this workshop. This workshop provides a hands-on view into all the moving parts of a real Amazon EKS SaaS solution that addresses specific considerations associated with bringing it to life on AWS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qIVk6wjC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.us-east-1.prod.workshops.aws/public/596a58f6-65df-49e9-bce8-94bf5e3cf488/static/30/arch-overview.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qIVk6wjC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.us-east-1.prod.workshops.aws/public/596a58f6-65df-49e9-bce8-94bf5e3cf488/static/30/arch-overview.png" alt="arch" width="880" height="576"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can find the code for this workshop in the GitHub repository, &lt;a href="https://aws-oss.beachgeek.co.uk/192"&gt;aws-saas-factory-eks-reference-architecture&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-and-community-blog-posts"&gt;
  &lt;/a&gt;
  AWS and Community blog posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;AWS Lambda Powertools&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We had a couple of posts last week from AWS Community Builders/Heroes on the recently announced AWS Lambda Powertools for TypeScript. (in fact, it is a tale of two Matt's or Matt^2!)&lt;/p&gt;

&lt;p&gt;First up is AWS Community Builder Matt Morgan, kicks the tyres of this project and walks you through his evaluation in his post, &lt;a href="https://aws-oss.beachgeek.co.uk/196"&gt;First Look at Lambda Powertools TypeScript&lt;/a&gt;. Following that is AWS Data Hero Matt Lewis, with his post &lt;a href="https://aws-oss.beachgeek.co.uk/197"&gt;Test Drive AWS Lambda Powertools for Typescript&lt;/a&gt; where he takes his turn in kicking the AWS Lambda Powertools for TypeScript tyres. Make sure you check out both posts, including some of the comments in the first.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OpenSearch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;AWS Data Hero Matt Lewis' second post this week (see above) on how to quickly get up and running with OpenSearch in &lt;a href="https://aws-oss.beachgeek.co.uk/19a"&gt;Streaming Data to OpenSearch&lt;/a&gt;. This post shows you how to configure Cognito to protect OpenSearch Dashboards, and set up a custom CloudWatch Metrics dashboard for monitoring the HTTP Status Codes that are returned.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Smithy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Smithy is an open sourced interface definition language and set of tools that allows developers to build clients and servers in multiple languages. Smithy models define a service as a collection of resources, operations, and shapes. A Smithy model enables API providers to generate clients and servers in various programming languages, API documentation, test automation, and example code. In this post, &lt;a href="https://aws-oss.beachgeek.co.uk/18n"&gt;Developer Preview: Ruby SDK code generation using Smithy&lt;/a&gt; Matt Muller shares news of the developer preview of smithy-ruby, a toolchain that can be used to code generate a “white label” Ruby SDK for your service API using Smithy modelling. This is a really interesting project that deserves more attention, so make sure you read this - especially if you are planning/building your own APIs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--agrTu1Ji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/0716d9708d321ffb6a00818614779e779925365c/2022/01/07/Screen-Shot-2021-05-17-at-1.26.28-PM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--agrTu1Ji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/0716d9708d321ffb6a00818614779e779925365c/2022/01/07/Screen-Shot-2021-05-17-at-1.26.28-PM.png" alt="demo" width="347" height="623"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Babelfish&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the post, &lt;a href="https://aws-oss.beachgeek.co.uk/18t"&gt;Get started with Babelfish for Aurora PostgreSQL&lt;/a&gt;, Neha Gupta and Ramesh Kumar Venkatraman show you the steps involved in creating Babelfish for Aurora PostgreSQL and how to connect to the Babelfish database to query the server properties and its version information using different clients like sqlcmd and the SSMS Query Editor. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rOcD_6AP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2021/12/20/DBBLOG-1915-image031.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rOcD_6AP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2021/12/20/DBBLOG-1915-image031.jpg" alt="babelfish" width="515" height="295"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Redis&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A couple of posts this week. First off we have Asher Yermiyahu with the first in a series of posts related to AWS contributions to open source Redis clients. In the first one, &lt;a href="https://aws-oss.beachgeek.co.uk/18r"&gt;New cluster-mode support in redis-py&lt;/a&gt; learn about how AWS has teamed up with the open-source community that supports redis-py to add cluster-mode support to this popular client. [hands on]&lt;/p&gt;

&lt;p&gt;Following that we have Kishore Dhamodaran and Jared Keating who have written about the recently announced support for auto scaling your Amazon ElastiCache for Redis clusters in the post, &lt;a href="https://aws-oss.beachgeek.co.uk/18s"&gt;Scale your Amazon ElastiCache for Redis clusters with Auto Scaling&lt;/a&gt; [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LHcDtgn3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2021/12/27/DBBLOG-1960-image025.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LHcDtgn3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2021/12/27/DBBLOG-1960-image025.jpg" alt="graph" width="880" height="551"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There were a bunch of interesting posts related to Kubernetes. We had Sheetal Joshi, Apurup Chevuru, and Mike Stefaniak put together this, &lt;a href="https://aws-oss.beachgeek.co.uk/18v"&gt;Amazon EKS launches IPv6 support&lt;/a&gt; where you will learn how to create an IPv6 EKS cluster within a dual-stack Amazon Virtual Private Cloud (VPC). As part of this walkthrough you will deploy a sample IPv6-only service and understand IPv4 and IPv6 ingress and egress functionality. Nice [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_K6r7cJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2022/01/03/ipv6-pod-networking.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_K6r7cJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2022/01/03/ipv6-pod-networking.png" alt="arch" width="880" height="444"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next up was, &lt;a href="https://aws-oss.beachgeek.co.uk/18w"&gt;Efficiently Scaling kOps clusters with Amazon EC2 Spot Instances&lt;/a&gt; from Carlos Manzanedo Rueda and Brandon Wagner where they show you how you can leverage recently released tools to optimise your usage of Amazon EC2 Spot Instances on Kubernetes Operations (kOps) clusters. [hands on]&lt;/p&gt;

&lt;p&gt;Finally, if you were looking for guidance on how to mount Amazon EFS file systems cross-account using Amazon EKS, then Karthik Basavaraj and Suman Debnath have you covered in their post &lt;a href="https://aws-oss.beachgeek.co.uk/18x"&gt;Mount Amazon EFS file systems cross-account from Amazon EKS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also, another plug for the new &lt;a href="https://aws-oss.beachgeek.co.uk/185"&gt;EKS News&lt;/a&gt; which brings you all the latest updates, news and service announcements, notable blogs and stuff you really need to know about. Make sure you sign up for it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Other posts worth checking out&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Last week, these posts also caught my eye.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/18j"&gt;Custom AMIs with ParallelCluster 3&lt;/a&gt; looks at how you can use features of ParallelCluster 3 (an AWS open sourced cluster management tool) for building on your existing AMIs when creating your clusters [hands on]&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/18k"&gt;How to set up Galaxy for research on AWS using Amazon Lightsail&lt;/a&gt; will help you to deploy the open-source Galaxy Project (a well-known toolkit for researchers to complete tasks and common tooling on public and private datasets) on AWS [hands on]&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/18l"&gt;Optimize your inference jobs using dynamic batch inference with TorchServe on Amazon SageMaker&lt;/a&gt; shows you a number of options for running your model inferencing using the open source project, TorchServe [hands on]&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/18m"&gt;Graph-based recommendation system with Neptune ML: An illustration on social network link prediction challenges&lt;/a&gt; shows you how you can use Neptune ML (powered by the Deep Graph Library an open-source, high-performance, and scalable Python package for DL on graphs) and GNNs to help you make recommendations on graph data [hands on]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U0yoKakf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2022/01/04/ML-6681-image002.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U0yoKakf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2022/01/04/ML-6681-image002.png" alt="example" width="880" height="594"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/18o"&gt;Introducing server-side caching item eviction for AWS AppSync&lt;/a&gt; look at how developers can leverage a new capability to evict specific entries from AppSync’s server-side cache [hands on]&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/18u"&gt;Automating SAP installation with open-source tools&lt;/a&gt; walks you how you can use open-source common tools like Jenkins and Ansible to automate your SAP installation. [hands on]&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#quick-updates"&gt;
  &lt;/a&gt;
  Quick updates
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;MySQL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Following the announcement of updates in MySQL database versions 5.7 and 8.0, we have updated Amazon Relational Database Service (Amazon RDS) for MySQL to support MySQL minor versions 5.7.36, and 8.0.27. We recommend that you upgrade to the latest minor versions to fix known security vulnerabilities in prior versions of MySQL, and to benefit from the numerous bug fixes, performance improvements, and new functionality added by the MySQL community. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Magento&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you deploy Magento on AWS, then you will be interested in this update which I received from Yehor Shytikov. He let me know of a number of updates to some open source projects (&lt;a href="https://aws-oss.beachgeek.co.uk/18g"&gt;TerraformMagentoCloud&lt;/a&gt; and &lt;a href="https://aws-oss.beachgeek.co.uk/18h"&gt;Magento-AWS-Linux-2-Installation&lt;/a&gt;) that help set up Magento on AWS infrastructure with auto-scaling using AWS Cloud and Terraform. A new minimal branch helps you to deploy in a minimal infrastructure without redundant complexity like Varnish cache server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Redis&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can now publish the Redis engine log from your Amazon ElastiCache for Redis clusters to Amazon CloudWatch Logs and Amazon Kinesis Data Firehose. The Redis engine log provides visibility into the internal operations of the Redis engine, giving additional insight into Redis operations and helping you troubleshoot Redis issues. You can choose to send these logs in either JSON or text format to Amazon CloudWatch Logs and Amazon Kinesis Data Firehose. This feature is available for Amazon ElastiCache clusters with Redis version 6.2 and is supported in all commercial Amazon Web Services Regions. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SQL Explorer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon EMR Studio is an integrated development environment (IDE) that makes it easy for data scientists and data engineers to develop, visualise, and debug big data and analytics applications written in R, Python, Scala, and PySpark. SQL Explorer is a new feature in your EMR Studio Workspace that allows you to browse the data catalog and run SQL queries on EMR clusters from EMR Studio. This release of SQL Explorer in EMR Studio supports running SQL queries on Amazon EMR on EC2 clusters running Presto version 0.254.1 or higher. &lt;/p&gt;

&lt;p&gt;Presto is a fast SQL query engine designed for interactive analytic queries over large datasets from multiple sources. In SQL explorer, you can connect to Amazon EMR on EC2 clusters with Presto installed to view and browse the data catalog. Supported data catalogs include AWS Glue Data Catalog and self-hosted Hive Metastore version 3.1.2 or higher. SQL Explorer also provides you an Editor to run SQL queries, view the query results in a table, and download query results in a csv format. You also have the ability to run multiple SQL statements via different Editor tabs. SQL explorer is supported for Amazon EMR versions 6.4.0+.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Toolkit for JetBrains&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The AWS Toolkit for JetBrains now provides developers with convenient IDE functionality to connect to Amazon ECS containers and issue commands using Amazon ECS Exec. This allows developers to directly interact with containers, such as running commands in or get a shell to an ECS container running on an Amazon EC2 instance or on AWS Fargate, without leaving their IDE. ECS Exec uses the AWS Systems Manager (SSM) Session Manager under the hood to establish a connection with the running container.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#videos-of-the-week"&gt;
  &lt;/a&gt;
  Videos of the week
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Amazon EMR Studio - Real-time Collaboration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Real-time collaboration is a new feature in EMR Studio that allows multiple users to share a single notebook workspace. This makes it easy for data scientists and data engineers to collaborate in real-time across teams using EMR Studio as they develop, visualise, and debug big data and analytics applications written in R, Python, Scala, and PySpark. In this video, Damon Cortesi shows you how you can both use the same workspace to collaborate on the same notebook. You can follow along in the session using the code in the GitHub repo, &lt;a href="https://aws-oss.beachgeek.co.uk/18i"&gt;emr-studio-samples&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Q6NNDoLEUpo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#events-for-your-diary"&gt;
  &lt;/a&gt;
  Events for your diary
&lt;/h3&gt;

&lt;p&gt;If you have an event you want me to publish here, please contact me and I will include it in this listing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lakehouse Automation w/ Redshift+Apache Airflow &amp;amp; New AWS ML services&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;January 17th, 9:00am PST&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;During this meetup, join hosts Chris Fregly and Antje Barth and speaker Gary Stafford, who do a presentation and brief demonstration, based on his recent video demonstration, AWS Lakehouse Automation: Loading and unloading data from Amazon Redshift using Apache Airflow, we will learn how to use Amazon Managed Workflows for Apache Airflow (Amazon MWAA) to programmatically load, unload, test, catalog, query, and monitor data using DevOps-like DataOps practices.&lt;/p&gt;

&lt;p&gt;Find out more about this and &lt;a href="https://www.meetup.com/data-science-on-aws/events/282788878/?_xtd=gqFyqTI2NzgyNDA2OaFwo2FwaQ&amp;amp;from=ref"&gt;register here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Startup Showcase Season&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;January 26th, 10:00am PDT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Join AWS and theCUBE as eight innovative companies within the AWS Partner ecosystem highlight their latest developments in the open source community.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/194"&gt;Register via this link&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stay-in-touch-with-open-source-at-aws"&gt;
  &lt;/a&gt;
  Stay in touch with open source at AWS
&lt;/h3&gt;

&lt;p&gt;I hope this summary has been useful. Remember to check out the &lt;a href="https://aws.amazon.com/opensource/?opensource-all.sort-by=item.additionalFields.startDate&amp;amp;opensource-all.sort-order=asc"&gt;Open Source homepage&lt;/a&gt; to keep up to date with all our activity in open source by following us on &lt;a href="https://twitter.com/AWSOpen"&gt;@AWSOpen&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>aws</category>
    </item>
  </channel>
</rss>
