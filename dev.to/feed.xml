<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>My Lessons From 3 Failed Interviews As A Developer</title>
      <author>Kingsley Ubah</author>
      <pubDate>Thu, 22 Apr 2021 22:06:15 +0000</pubDate>
      <link>https://dev.to/ubahthebuilder/my-lessons-from-3-failed-interviews-as-a-developer-gg1</link>
      <guid>https://dev.to/ubahthebuilder/my-lessons-from-3-failed-interviews-as-a-developer-gg1</guid>
      <description>&lt;p&gt;2019.&lt;/p&gt;

&lt;p&gt;The year I started learning how to code with a free eBook I downloaded from the web. Since then a lot of things have happened.&lt;/p&gt;

&lt;p&gt;One of them is failing my interview for web developer roles three times. It's not all gloomy though, I have learnt a lot from those experience.&lt;/p&gt;

&lt;p&gt;In this post, I'll share my experience with you all. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-first-experience"&gt;
  &lt;/a&gt;
  My First Experience
&lt;/h3&gt;

&lt;p&gt;I was a young developer. While I was (admittedly) a decent up-and-coming web developer, I was very inexperienced when it came to interviews. As a matter of fact, it was going to be my first.&lt;br&gt;
The article that booked me my first interview session was a post series I created on my DEV blog. The series was about SQL. It was aptly titled “Master your SQL Commands”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cZiCi-C0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yuix1qs28j7ceho81s08.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cZiCi-C0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yuix1qs28j7ceho81s08.png" alt="My Post"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For those of you who don’t what SQL is, it stands for &lt;em&gt;Structured Query Language&lt;/em&gt;. SQL is a computer language for storing, manipulating and retrieving data stored in a relational database&lt;/p&gt;

&lt;p&gt;The flagship article gained a bit of traction and some people were impressed with it. One of them even reached out and offered me some payment in exchange for me publishing the two remaining articles on their platform. He wanted to vet my programming/writing skills; hence he scheduled an interview with me.&lt;br&gt;
I was nervous, not because I didn’t think I’ll make it, but because I didn’t know what to expect. &lt;/p&gt;

&lt;p&gt;We initially agreed that the interview will be held in Zoom, but the notoriously poor internet connection we have here in my country (Nigeria) didn’t let that eventualize. Ultimately, we had to settle for a WhatsApp call.&lt;/p&gt;

&lt;p&gt;The session began fine, albeit some intermittent disconnections and reconnections. He asked about my past experience and portfolio. I replied that I had no portfolio, but a bit of working experience. I went on to describe my previous developer role I had to him.&lt;br&gt;
Next, he asked me about my familiarity with Databases. This made sense since the whole thing started with my article on the topic. I informed him my knowledge of SQL, MySQL and PostgreSQL.&lt;/p&gt;

&lt;p&gt;At that point, I could hear the slight hesitance in his voice. Then he asked about my writing skills. I replied a bit boastfully that I was a good, or at least a decent writer.  I even listed the previous writing roles I had for various sites and how I developed an interest for writing at a very young age.&lt;/p&gt;

&lt;p&gt;After what lasted for about 25 minutes in total, we then concluded the call. He assured me that he’ll get back via email letter that evening yet nothing happened. Ouch, I know. Luckily, I am not the kind of person who took things personally. However, I did learn something. Here it is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you’re looking for a job as a developer, always have a portfolio. As a writer, you should have enough sample copies of your previous works present and ready to be shown.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My writing skill obviously wasn’t the issue, since It was the thing that interested him in the first place. The issue, however, was my lack of credentials. Not having a portfolio. &lt;strong&gt;Never forget this&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-second-experience"&gt;
  &lt;/a&gt;
  My Second Experience
&lt;/h3&gt;

&lt;p&gt;My second experience was even more painful, but I am very excited to share it to you all. &lt;/p&gt;

&lt;p&gt;I am primarily a JavaScript developer. After learning HTML and CSS, I delved into JavaScript and instantly got hooked to it. Being an active part of the developer community on Twitter, I get a lot of direct messages. However, this time, I got one from a start-up founder who offered me a contract-based role if I was able to scale past the interview. His project was written primarily in typescript, so I was going to be working with JavaScript after all!&lt;/p&gt;

&lt;p&gt;I was excited and nervous at the same time. This is a language that I loved. The interview was also just my second so I didn’t really know what to expect. I was quite busy with School so I really didn’t have the time to prepare as well. In fact, I am going to say that I got complacent. I overestimated my knowledge of JavaScript and that would ultimately backfire at me, as you are going to find out soon.&lt;/p&gt;

&lt;p&gt;The day of the interview arrived and boy I was nervous. I set up my laptop and braced myself for the onslaught of poor internet connection. My interviewee was African so he was very aware of the network issue we had. As a result, we decided it was going to be done over at WhatsApp.  We connected through to each other and he gave me a link to the platform for the live interview, which was CoderPad.&lt;/p&gt;

&lt;p&gt;He gave me an initial test, I fumbled. Then he gave me a second test, and I failed yet again. At that point, I knew what the grim outcome will be. He courteously thanked me for my time and tried boosting my morale. While that did work a bit, here are some things I learnt from this debacle:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As a developer, practise is very important. Even 3 days of no coding can make you forget a lot. Practise boosts your memory and internalizes a lot of programming concepts in your mind. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I made the mistake of not practising my JavaScript for over a week and I paid the price. &lt;strong&gt;Don’t be complacent&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-third-experience"&gt;
  &lt;/a&gt;
  My Third Experience
&lt;/h3&gt;

&lt;p&gt;My third experience was somewhat recent, yet still doomed. I got contacted once again though my Twitter DMs. He asked me if I was up for a role and replied positive. We discussed on the nature of languages to be used, as well as the number of workdays per week. My intended role revolved around Gatsby and React. This time I was wary of complacency. I prepared for the interview amidst other daily tasks I had.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;N/B&lt;/strong&gt;: For those of you looking to learn React, &lt;a href="https://gumroad.com/a/834147443"&gt;HTML to React&lt;/a&gt; is a brilliant course to go from knowing just HTML to knowing React.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It got delayed by hour but eventually we got seated and set. Our initial attempt was once again hampered by the terrible network connection. Video calling with Zoom and WhatsApp was not viable. We ultimately had to settle for a WhatsApp audio call instead.&lt;/p&gt;

&lt;p&gt;The interview started okay, better than I expected. He asked me a couple of things about JavaScript, then React. Everything was going on smooth and fine. However, things began to go sour as we progressed. He asked me some question about React hooks and I fidgeted and stammered. Thing got progressively worst for me from that point onwards. After that, he courteously informed me that I didn’t make the test, not before praising me for how much I have learned in just under two years as a web developer. While it sucked, I learnt something important:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Experience matters. The longer you are in the industry, the more you know and understand. Especially if you build complex and professional websites very often. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This, admittedly, isn’t something I have done a lot. Being a seasoned and experienced developer, he was able to identify this no matter how good/savvy I was.&lt;/p&gt;

&lt;p&gt;After this latest disappointment, I dedicated at least one hour everyday to building websites as side projects. Implementation is hard because of time constraints, unstable electricity and other challenges but I am committed to it.&lt;/p&gt;

&lt;p&gt;In summary, I failed those three interviews because&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I was a newbie&lt;/li&gt;
&lt;li&gt;I had no portfolio&lt;/li&gt;
&lt;li&gt;I had little working experience&lt;/li&gt;
&lt;li&gt;I was complacent&lt;/li&gt;
&lt;li&gt;I stopped practising and getting better&lt;/li&gt;
&lt;li&gt;I was inexperienced&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to ace and interview, you need to &lt;em&gt;avoid all of the mistakes I made&lt;/em&gt;. You should go from being a newbie to properly understanding the basics. In fact, I recently created a Web Development Beginners Guide eBook which will guide on all you need to know as an absolute beginner. You can get it here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gumroad.com/l/WebDevBeginners"&gt;Web Development - The Beginners Guide&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Secondly&lt;/strong&gt;, you must have a portfolio. This should show all your previous projects, big and small. You should make your portfolio stand out as much as possible.&lt;/p&gt;

&lt;p&gt;Also, &lt;em&gt;never be complacent&lt;/em&gt;. Always underestimate your abilities, yet remain confident. Keep &lt;strong&gt;practising&lt;/strong&gt; and building stuff.  You’ll get better and better at it. And most importantly, you’ll become more experienced in it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank you.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P/S&lt;/strong&gt;: I share my coding experiences on this blog. If you want to follow my journey, follow my blog and subscribe to newsletters to stay updated. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Iterate with JavaScript Do...While Loops</title>
      <author>Randy Rivera</author>
      <pubDate>Thu, 22 Apr 2021 21:59:45 +0000</pubDate>
      <link>https://dev.to/rthefounding/iterate-with-javascript-do-while-loops-1aci</link>
      <guid>https://dev.to/rthefounding/iterate-with-javascript-do-while-loops-1aci</guid>
      <description>&lt;p&gt;The next type of loop you will learn is called a do...while loop. It is called a do...while loop because it will first do one pass of the code inside the loop no matter what, and then continue to run the loop while the specified condition evaluates to true.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Example:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var myArray = [];
var i = 10;

do {
  myArray.push(i);
  i++;
} while (i &amp;lt; 10);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;console.log(myArray); will display [ 10 ]
console.log(i); will display 11
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;In this case, we initialize the value of i to 10. When we get to the next line, there is no condition to evaluate, so we go to the code inside the curly braces and execute it. We will add a single element to the array and then increment i before we get to the while condition. When we finally evaluate the condition i &amp;lt; 10 on the last line, we see that i is now 11, which fails the I &amp;lt; 10 so we exit the loop and are done. At the end of the above example, the value of ourArray is [10]. Essentially, a do...while loop ensures that the code inside the loop will run at least once.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>devops</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How I learn Golang in 3 days</title>
      <author>Polibov</author>
      <pubDate>Thu, 22 Apr 2021 21:41:31 +0000</pubDate>
      <link>https://dev.to/santiagova/how-i-learn-golang-in-3-days-3a1d</link>
      <guid>https://dev.to/santiagova/how-i-learn-golang-in-3-days-3a1d</guid>
      <description>&lt;p&gt;In this post, we will talk about &lt;strong&gt;Go&lt;/strong&gt;, I will share with you some resources, opinions, and recommendations that were so util for me.&lt;/p&gt;

&lt;p&gt;And I know that you are thinking something, Yes! I know that the title of this post is a little bit clickbait, but, &lt;strong&gt;WAIT!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I can explain to you if this is really true or not.&lt;br&gt;
So, let's begin.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-i-achieve-that"&gt;
  &lt;/a&gt;
  How I achieve that?
&lt;/h2&gt;

&lt;p&gt;Well, I cannot tell that I domain Go, but in 3 days I feel so good with the results.&lt;br&gt;
In these 3 days, my study routine was like 4 hours per day, like 3 hours reading the docs or watching courses and at the time coding and the other hour is experimenting the learned with the curious things that I need know if works on Go.&lt;br&gt;
And now, I feel so good to start some little projects to win a lot of experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-the-title"&gt;
  &lt;/a&gt;
  Why the title?
&lt;/h2&gt;

&lt;p&gt;The title can be completely fake if is your first language, don't worry if this is your case, you can learn same this amazing language but in more time :), so...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-happens-with-the-people-that-have-a-little-bit-of-experience-in-others-programming-languages"&gt;
  &lt;/a&gt;
  What happens with the people that have a little bit of experience in others programming languages?
&lt;/h3&gt;

&lt;p&gt;I believe that maybe you know the answer. Obviously, this will be easier, because you only need to learn a new syntax, you don't need to learn again the logic that for the 99% of the people this can be the most difficult part when you are learning at the beginning.&lt;br&gt;
So, again, the title no is literally but will tell you what things you can learn in 3 days after that what you can do.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-3-days-this-you-can-learn"&gt;
  &lt;/a&gt;
  In 3 days this you can learn
&lt;/h2&gt;

&lt;p&gt;3 days, this would sound a little bit crazy but is possible to learn the necessary to after that search for a job (Nah, I'm just kidding 🤣)&lt;br&gt;
Well, now out of joking after that you can start making your own projects and with the time be a master in go, but before I will tell you the things that you need learn (I recommend you the same order):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Variables&lt;/li&gt;
&lt;li&gt;Primitives &lt;/li&gt;
&lt;li&gt;Constants &lt;/li&gt;
&lt;li&gt;Arrays and Slices&lt;/li&gt;
&lt;li&gt;Maps and Structs&lt;/li&gt;
&lt;li&gt;If and Switch Statements&lt;/li&gt;
&lt;li&gt;Looping &lt;/li&gt;
&lt;li&gt;Defer, Panic, and Recover&lt;/li&gt;
&lt;li&gt;Pointers&lt;/li&gt;
&lt;li&gt;Functions &lt;/li&gt;
&lt;li&gt;Interfaces&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After that, you can start making some projects simple API's and more things!&lt;/p&gt;

&lt;p&gt;Honestly, for me, the most difficult of these topics are the &lt;strong&gt;Pointers&lt;/strong&gt; and the &lt;strong&gt;Interfaces&lt;/strong&gt; I recommend you take a lot of attention to these topics, if you study a lot you will understand too well.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h1&gt;

&lt;p&gt;Some very good resources that I recommend &lt;strong&gt;FOR FREE&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=YS4e4q9oBaU"&gt;FreeCodeCamp 7 hours course from scratch&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://tour.golang.org/"&gt;The official tour of Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.golang.org/"&gt;The playground of Go, without installations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#thank-you-for-reading-this-post"&gt;
  &lt;/a&gt;
  Thank you for reading this post
&lt;/h2&gt;

&lt;p&gt;I hope that this post was nice for you, Please, if you like this post leave a heart and follow me here and on my &lt;a href="https://github.com/SantiagoVA"&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: English is not my main language, so if I have some mistake please leave me a comment and without fears, tell me :)&lt;/em&gt;&lt;/p&gt;

</description>
      <category>go</category>
      <category>backend</category>
      <category>english</category>
    </item>
    <item>
      <title>Nesting For Loops</title>
      <author>Randy Rivera</author>
      <pubDate>Thu, 22 Apr 2021 21:36:32 +0000</pubDate>
      <link>https://dev.to/rthefounding/nesting-for-loops-2h0p</link>
      <guid>https://dev.to/rthefounding/nesting-for-loops-2h0p</guid>
      <description>&lt;p&gt;If you have a multi-dimensional array, you can use the same logic as the prior waypoint to loop through both the array and any sub-arrays. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Here is an example:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function multiplyAll(arr) {
  var product = 1;

 for (var i = 0; i &amp;lt; arr.length; i++) {
   for (var j = 0; j &amp;lt; arr[i].length; j++) {
    product *= arr[i][j];
   }
 }
  return product;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;console.log(multiplyAll([[3,4],[1,2],[5,6,7]])); will display 5040
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we modified function multiplyAll so that it returns the product of all the numbers in the sub-arrays of arr.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for (var i = 0; i &amp;lt; arr.length; i++) {
}
console.log(arr[i]); displays 
[ 3, 4 ]
[ 1, 2 ]
[ 5, 6, 7 ]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for (var j = 0: j &amp;lt; arr[i].length; i++) {
}
console.log(arr[i][j]); displays
3
4
1
2
5
6
7
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;product *= arr[i][j];
console.log(product); // displays 

3    (1 (beginning product = 1;) * 3 &amp;lt;-- arr[0][0]); 1 * 3
12   (now product is equal to 3 (product = 3) * 4 &amp;lt;-- arr[0][1]); 3 * 4
12   (product = 12) * 1 &amp;lt;-- arr[1][0]; 1 * 12
24   (product = 12) * 2 &amp;lt;-- arr[1][1]; 2 * 12
120  (product = 24) * 5 &amp;lt;-- arr[2][0]; 5 * 24
720  (product = 120) * 6 &amp;lt;-- arr[2][1]; 6 * 120
5040 (product = 720) * 7 &amp;lt;-- arr[2][2]; 7 * 720
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;return product; will display 5040
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>devops</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Build a Dynamic Portfolio With the Github API</title>
      <author>Ramki Pitchala</author>
      <pubDate>Thu, 22 Apr 2021 21:13:37 +0000</pubDate>
      <link>https://dev.to/ramko9999/build-a-dynamic-portfolio-with-the-github-api-3eh9</link>
      <guid>https://dev.to/ramko9999/build-a-dynamic-portfolio-with-the-github-api-3eh9</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was originally posted on &lt;a href="https://medium.com/swlh/build-a-dynamic-portfolio-with-the-github-api-6d74081e5164"&gt;Medium&lt;/a&gt;. If you prefer reading it from there, please do check it out.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;With the advent of countless templates and web page design applications, the task of creating a personal portfolio transitioned from a painful endeavor into a painless task. &lt;/p&gt;

&lt;p&gt;However, the act of constantly updating the hard-coded information and rebuilding and redeploying your portfolio turns into a tiresome burden.&lt;/p&gt;

&lt;p&gt;In this tutorial, I will show you how I integrated the Github API into my portfolio to pull the most recent project information, solving the issue of directly updating and redeploying my portfolio.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#agenda"&gt;
  &lt;/a&gt;
  Agenda
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Setup&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Service&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Integrate&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;p&gt;Before we build the solution, let’s first understand the core idea and configure Github to ease the integration.&lt;/p&gt;

&lt;p&gt;First, let’s talk about the Github repositories. To elaborate, I house my projects in the repositories themselves: I host the source code, keep detailed descriptions, and maintain links to demo gifs or images.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H0dQMVqC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3536/1%2Aqb3hbCXT2CI6gHVMqyjOSw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H0dQMVqC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3536/1%2Aqb3hbCXT2CI6gHVMqyjOSw.png" alt="Link to the repository [https://github.com/Ramko9999/Pathfinding-Visualizer](https://github.com/Ramko9999/Pathfinding-Visualizer)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This repository houses my Path Finding Visualizer project. &lt;/p&gt;

&lt;p&gt;In the right side, the section outlined in blue contains the description of the project. On the other hand, the section outlined in red has a link to the demo. Finally, the section outlined in black contains topics associated with the project. &lt;/p&gt;

&lt;p&gt;To sum it all up, the Github &lt;a href="https://docs.github.com/en/rest"&gt;API&lt;/a&gt; will return the above fields upon an HTTP request to:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;GET /users/{username}/repos
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;This &lt;a href="https://docs.github.com/en/rest/reference/repos#list-repositories-for-a-user"&gt;endpoint&lt;/a&gt; will return a list of public repositories for a user. &lt;/p&gt;

&lt;p&gt;Here is what the return json object looks likes for the Path Finding Visualizer repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--InV9Issg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2376/1%2AY-rqrLmYUNFXvzhtZaCksA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--InV9Issg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2376/1%2AY-rqrLmYUNFXvzhtZaCksA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Although it is a bit difficult to see, the API returned the fields we need: description, homepage, and topics. &lt;/p&gt;

&lt;p&gt;This is fantastic news, since it shows that we can store and retrieve information from our repositories.&lt;/p&gt;

&lt;p&gt;Let’s now work on configuring Github to simplify the integration.&lt;/p&gt;

&lt;p&gt;All we need to do is generate a personal access token in the developer settings. We will use the personal access token to authenticate our requests to the Github API so we can take advantage of the generous rate limits.&lt;/p&gt;

&lt;p&gt;First, navigate to your profile settings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_UqXIGkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AOVJwlVGOfwlSQl9lN2sR4A.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_UqXIGkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AOVJwlVGOfwlSQl9lN2sR4A.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From your profile settings, navigate to the developer settings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qjzC6TtB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2Al4B3diZ1wSWr59daXuhAIg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qjzC6TtB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2Al4B3diZ1wSWr59daXuhAIg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, go to the personal access tokens tab.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xGQwD9Dw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2ATxbSj2cOh5seKuOcRq1nsQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xGQwD9Dw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2ATxbSj2cOh5seKuOcRq1nsQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this point, you can click “Generate new token” and Github will walk you through the rest. Once you have generated the token, make sure you save it to the clipboard, since we will need it for later.&lt;/p&gt;

&lt;p&gt;Now that we have generated our personal access token, we can work on the actual integration.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#service"&gt;
  &lt;/a&gt;
  Service
&lt;/h2&gt;

&lt;p&gt;To start, let’s conceptualize how the portfolio would interact with the Github API.&lt;/p&gt;

&lt;p&gt;Building a separate service that communicates between the portfolio and the Github API is a good idea, since we should house our Github personal access token in a secure environment. &lt;/p&gt;

&lt;p&gt;Here is a depiction of the network flow:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tuwauJL4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A46SCXZw_jnBqiDBZq_LbRQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tuwauJL4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A46SCXZw_jnBqiDBZq_LbRQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s start building out the service. &lt;/p&gt;

&lt;p&gt;I will be using Python and &lt;a href="https://flask.palletsprojects.com/en/1.1.x/"&gt;Flask&lt;/a&gt;, but just understand that you can use any stack of your choice. &lt;/p&gt;

&lt;p&gt;First, let’s create a &lt;code&gt;config.py&lt;/code&gt; file. In this file, we will store our Github username and our personal access token. Make sure you do not push this file to version control.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;USERNAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"YOUR GITHUB USERNAME"&lt;/span&gt;
    &lt;span class="n"&gt;TOKEN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"YOUR PERSONAL ACCESS TOKEN FROM EARLIER"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let’s create a &lt;code&gt;server.py&lt;/code&gt; file and make a simple Flask app.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask_cors&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CORS&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;config&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;CORS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    
       &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, let’s expose an endpoint that our portfolio can call to get the project data.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/projects"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"GET"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getProjects&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
       &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;getProjects()&lt;/code&gt; method will do three things.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It will make a request to the Github API for the repository data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It will extract the relevant fields from each of the repositories.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It will return the filtered data back to the portfolio.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s tackle these steps one by one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Making a request to Github&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We can simply use the Python requests library to make the HTTP request.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://api.github.com/users/USERNAME/repos"&lt;/span&gt;        
    &lt;span class="n"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"Accept"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"application/vnd.github.mercy-preview+json"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;        

    &lt;span class="n"&gt;repos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;USERNAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TOKEN&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The Github API will also include the &lt;code&gt;topics&lt;/code&gt; field for each of the repositories if we pass in the above headers. &lt;/p&gt;

&lt;p&gt;If all goes correctly, the request should have a status of 200 and the &lt;code&gt;repos&lt;/code&gt; variable should be a list of json objects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Extracting relevant fields&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The main fields of concern are &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;html_url&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, &lt;code&gt;topics&lt;/code&gt;, and &lt;code&gt;homepage&lt;/code&gt;. The &lt;code&gt;homepage&lt;/code&gt; field represents the text stored in the black outlined area:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CU326zM1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2438/1%2AWZNac2V96NI4CLprgWPUKA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CU326zM1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2438/1%2AWZNac2V96NI4CLprgWPUKA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can put links to our demo gifs in &lt;code&gt;homepage&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;The code to parse each of the repositories is this:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;projects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;repos&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"homepage"&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="n"&gt;project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="s"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"html_url"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="s"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="s"&gt;"topics"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"topics"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="s"&gt;"images"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"homepage"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;";"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;projects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Just to clarify, I added more than one demo link for certain projects. I separated each link with a semi-colon.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here is what &lt;code&gt;project&lt;/code&gt; would look like for the Path Finding Visualizer repository:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;206887035&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Pathfinding-Visualizer"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"https://github.com/Ramko9999/Pathfinding-Visualizer"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Built a colorful visualizer for shortest path algorithms: A star search, Breadth First Search, and Bidirectional Breadth First Search. Utilized Queues and Priority Queues to reduce collection operations such as pop() and push() to O(1) and O(log(n)) run times."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s"&gt;"topics"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s"&gt;"data-structures"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;"graph-algorithms"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;"java"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;"pathfinding"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;"swing"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="s"&gt;"images"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s"&gt;"https://media.giphy.com/media/U6GuVGBOQoHUHaZ7LV/giphy.gif"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;"https://media.giphy.com/media/gg9eCb2ZBqcU4LlSML/giphy.gif"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;"https://media.giphy.com/media/l4Wyj6PQwwxZdPjfSe/giphy.gif"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;"https://media.giphy.com/media/LRgBCMGhCvqkzHzeaY/giphy.gif"&lt;/span&gt;&lt;span class="p"&gt;]},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;All that remains now is to return &lt;code&gt;projects&lt;/code&gt; back to the initiator of the request.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Returning a response&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We can return the filtered data back to the client with the following:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    return {"projects": projects, "error": False}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;So with all the pieces put together, the &lt;code&gt;getProjects()&lt;/code&gt; method will look as such:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;Please be sure to test your service locally by calling the &lt;code&gt;/projects&lt;/code&gt; endpoint. Once it is working, you can deploy it wherever you like. Personally, I deployed the service on &lt;a href="https://www.pythonanywhere.com"&gt;pythonanywhere.com&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;Pat yourself on the back, as the hardest part is now over!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#integrate"&gt;
  &lt;/a&gt;
  Integrate
&lt;/h2&gt;

&lt;p&gt;All that remains now is that we have to make an HTTP request from our portfolio website to the service we have just created. &lt;/p&gt;

&lt;p&gt;For example, I used React to build out my portfolio, so here is how I made the call and fetched the projects.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;All you need to do now is to build out the user interface based on the data.&lt;/p&gt;

&lt;p&gt;With that said, feel free to head over to my &lt;a href="https://ramki-pitch.web.app/"&gt;portfolio&lt;/a&gt; to check out how I implemented my user interface.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;That's it folks!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>webdev</category>
      <category>github</category>
      <category>portfolio</category>
    </item>
    <item>
      <title>Loops</title>
      <author>Randy Rivera</author>
      <pubDate>Thu, 22 Apr 2021 21:03:16 +0000</pubDate>
      <link>https://dev.to/rthefounding/loops-7gn</link>
      <guid>https://dev.to/rthefounding/loops-7gn</guid>
      <description>&lt;h4&gt;
  &lt;a href="#iterate-with-javascript-while-loops"&gt;
  &lt;/a&gt;
  Iterate with JavaScript While Loops
&lt;/h4&gt;

&lt;p&gt;You can run the same code multiple times by using a loop.&lt;/p&gt;

&lt;p&gt;The first type of loop you will learn is called a while loop because it runs while a specified condition is true and stops once that condition is no longer true.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Example:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var myArray = [];

var i = 5;
while(i &amp;gt;= 0) {
  myArray.push(i);
  i--;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;console.log(myArray); // will display [ 5, 4, 3, 2, 1, 0 ]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code example above, the while loop will execute 7 times and &lt;br&gt;
Add the numbers 5 through 0 (inclusive) in descending order to myArray using a while loop.&lt;br&gt;
We also try getting a while loop to work by pushing values to an array.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#iterate-with-javascript-for-loops"&gt;
  &lt;/a&gt;
  Iterate with JavaScript For Loops
&lt;/h4&gt;

&lt;p&gt;The most common type of JavaScript loop is called a for loop because it runs for a specific number of times.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Example:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var myArray = [];
for (var i = 1; i &amp;lt;= 5; i++) {
  myArray.push(i);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;console.log(myArray); will display [ 1, 2, 3, 4, 5 ]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the following example we initialize with i = 1 and iterate while our condition i &amp;lt;= 5 is true. We'll increment i by 1 in each loop iteration with i++ as our final expression.&lt;br&gt;
we used a for loop to push the values 1 through 5 onto myArray.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#iterate-odd-numbers-with-a-for-loop"&gt;
  &lt;/a&gt;
  Iterate Odd Numbers With a For Loop
&lt;/h4&gt;

&lt;p&gt;For loops don't have to iterate one at a time. By changing our final-expression, we can count by odd numbers.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Example:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var myArray = [];
for (var i = 1; i &amp;lt; 10; i += 2) {
  myArray.push(i)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;console.log(myArray); will display [ 1, 3, 5, 7, 9 ]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we push the odd numbers from 1 through 9 to myArray using a for loop.&lt;br&gt;
We start at i = 1 and loop while i &amp;lt; 10. We'll increment i by 2 each loop with i += 2.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#count-backwards-with-a-for-loop"&gt;
  &lt;/a&gt;
  Count Backwards With a For Loop
&lt;/h4&gt;

&lt;p&gt;A for loop can also count backwards, so long as we can define the right conditions.&lt;/p&gt;

&lt;p&gt;In order to decrement by two each iteration, we'll need to change our initialization, condition, and final expression.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Example:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var myArray = [];

for (var i = 9; i &amp;gt; 0; i -= 2) {
  myArray.push(i);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;console.log(myArray); will display [9, 7, 5, 3, 1]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We start at i = 9 and loop while i &amp;gt; 0. We'll decrement i by 2 each loop with i -= 2. We push the odd numbers from 9 through 1 to myArray using a for loop.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>devops</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>CloudSniper – Cloud Security Operations</title>
      <author>kalilinux</author>
      <pubDate>Thu, 22 Apr 2021 20:55:52 +0000</pubDate>
      <link>https://dev.to/kalilinux/cloudsniper-cloud-security-operations-14ln</link>
      <guid>https://dev.to/kalilinux/cloudsniper-cloud-security-operations-14ln</guid>
      <description>&lt;p&gt;Cloud Sniper is a platform designed to manage Cloud Security Operations, intended to respond to security incidents by accurately analyzing and correlating cloud artifacts. It is meant to be used as a Cloud Security Operations platform to detect and remediate security incidents by showing a complete visibility of the company’s cloud security posture.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://kali-linuxtr.net/cloudsniper-cloud-security-operations"&gt;CloudSniper &lt;/a&gt;&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>security</category>
      <category>monitoring</category>
    </item>
    <item>
      <title>Top 5 DEV Comments of the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Thu, 22 Apr 2021 20:51:45 +0000</pubDate>
      <link>https://dev.to/devteam/top-5-dev-comments-of-the-past-week-42gn</link>
      <guid>https://dev.to/devteam/top-5-dev-comments-of-the-past-week-42gn</guid>
      <description>&lt;p&gt;&lt;em&gt;This is a weekly roundup of awesome DEV comments that you may have missed. You are welcome and encouraged to boost posts and comments yourself using the &lt;strong&gt;&lt;a href="https://dev.to/t/bestofdev"&gt;#bestofdev&lt;/a&gt;&lt;/strong&gt; tag.&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;We love a good &lt;a href="https://dev.to/technoglot/what-s-the-best-dev-joke-or-pun-you-know-jei"&gt;dev joke&lt;/a&gt; and this one &lt;a class="mentioned-user" href="https://dev.to/jmdejager"&gt;@jmdejager&lt;/a&gt;
 commented takes the cake!  &lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/jmdejager"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ga_Mn-7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s---wONnKAG--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/585443/75085886-a2b8-4def-86e3-c1ece79db805.jpeg" alt="jmdejager profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/jmdejager"&gt;
        &lt;span class="comment-username"&gt; 🐤🥇 Jasper de Jager&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/jmdejager/comment/1dfi4" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr 16
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;This was just on twitter:&lt;/p&gt;

&lt;p&gt;where do Javascript developers wash their hands?&lt;/p&gt;

&lt;p&gt;in async... 🤣&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Now this is definitely a &lt;a href="https://dev.to/devteam/what-was-your-win-this-week-53nb"&gt;win&lt;/a&gt;! So glad to see some folks in our community are getting vaccinated 😭 Congrats, &lt;a class="mentioned-user" href="https://dev.to/yoursunny"&gt;@yoursunny&lt;/a&gt;
!&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/yoursunny"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--rOQWVnwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qZJgOhyw--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/242407/5dfdb123-238c-417a-9590-5747bf7ab561.jpeg" alt="yoursunny profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/yoursunny"&gt;
        &lt;span class="comment-username"&gt;Junxiao Shi&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/yoursunny/comment/1dg9l" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr 17
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;I won the raffle for a "leftover" vaccine. It reduces the chance of me dying this year by 40%.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u5fIou5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mo37b5n2lemhzi1filhi.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TUF2P_pQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--u5fIou5F--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mo37b5n2lemhzi1filhi.jpeg" alt="I got vaccinated"&gt;&lt;/a&gt;&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Sometimes, all you need are some &lt;a href="https://dev.to/simonpaix/10-useful-vs-code-shortcuts-you-should-know-42m"&gt;VS Code Shortcuts&lt;/a&gt;, and &lt;a class="mentioned-user" href="https://dev.to/equiman"&gt;@equiman&lt;/a&gt;
 offers some really useful ones! Thanks for the tips 😊&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/equiman"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--6l_Rykdo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--0rbmnYNj--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/60846/7c649d45-d4c7-4ed0-8ec1-8413e51a80d4.png" alt="equiman profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/equiman"&gt;
        &lt;span class="comment-username"&gt;Camilo Martinez&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/equiman/comment/1df8m" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr 16
  &lt;/time&gt;

    • Edited
    &lt;span class="hidden m:inline-block"&gt;
      on &lt;time&gt;
      Apr 16&lt;/time&gt;
    &lt;/span&gt;
&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;Excellent recommendations! I would like to add this information:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;ctrl+i&lt;/code&gt; also does the same as &lt;code&gt;ctrl+space&lt;/code&gt; it was introduced recently.&lt;/li&gt;
&lt;li&gt;When using &lt;code&gt;ctrl+d&lt;/code&gt; and select more elements than expected, you can undo selections with &lt;code&gt;ctrl+u&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Okay, okay, only one more &lt;a href="https://dev.to/technoglot/what-s-the-best-dev-joke-or-pun-you-know-jei"&gt;dev joke&lt;/a&gt;, I promise. But this one &lt;a class="mentioned-user" href="https://dev.to/hugekontrast"&gt;@hugekontrast&lt;/a&gt;
 commented really deserves to be highlighted! Pure genius. &lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/hugekontrast"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--xFJUPycw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--4nLZFY3q--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/315855/94552dee-34da-436e-a7ab-48636a2a78d5.jpeg" alt="hugekontrast profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/hugekontrast"&gt;
        &lt;span class="comment-username"&gt;Ashish Khare😎&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/hugekontrast/comment/1dglk" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr 17
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;Found this on reddit! &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1HBYCgih--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ltv46anes16qwb0oqmyv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C2MWNksR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--1HBYCgih--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ltv46anes16qwb0oqmyv.jpg" alt="Recursion joke "&gt;&lt;/a&gt;&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;We all &lt;a href="https://dev.to/xenoxdev/where-do-you-like-to-travel-the-most-3ef0"&gt;miss travel&lt;/a&gt;, and luckily pics like these make the wanderlust ease up. Thanks for the addition, &lt;a class="mentioned-user" href="https://dev.to/manpreet"&gt;@manpreet&lt;/a&gt;
!&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/manpreet"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ciVWrHTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--1YFIh3kr--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/114627/2699e163-a248-4544-ac61-91d73bf5d942.jpg" alt="manpreet profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/manpreet"&gt;
        &lt;span class="comment-username"&gt;Manpreet virk&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/manpreet/comment/1dkbk" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr 21
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;I often visit Chail- a quiet hill station in Himachal Pradesh (India). I just love its stunning panoramic views and calmness around. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kYHmK7WY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1t18hkmhw3vcwmrlo56r.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EzVS5Kyk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--kYHmK7WY--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1t18hkmhw3vcwmrlo56r.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;See you next week for more great comments ✌&lt;/p&gt;

</description>
      <category>bestofdev</category>
    </item>
    <item>
      <title>35 Principles for 35 Years</title>
      <author>swyx</author>
      <pubDate>Thu, 22 Apr 2021 20:45:31 +0000</pubDate>
      <link>https://dev.to/swyx/35-principles-for-35-years-1n2h</link>
      <guid>https://dev.to/swyx/35-principles-for-35-years-1n2h</guid>
      <description>&lt;p&gt;I turn 35 today. Here are 35 principles I have accumulated and try to live by:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Life is too Short for Short Term Games&lt;/strong&gt;. We only have so many years for long term games to compound. &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--v3qj-lSt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1360406256842797056/qhvO9V6x_normal.jpg" alt="swyx profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        swyx
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/swyx"&gt;@swyx&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      💁‍♂️ How to Play Long Term Games:&lt;br&gt;&lt;br&gt;Systems &amp;gt; Goals&lt;br&gt;Discipline &amp;gt; Motivation&lt;br&gt;Trust &amp;gt; Distrust&lt;br&gt;Principles &amp;gt; Tactics&lt;br&gt;Writing &amp;gt; Reading&lt;br&gt;Vulnerability &amp;gt; Confidence&lt;br&gt;North Stars &amp;gt; Low Hanging Fruit&lt;br&gt;Trends &amp;gt; News&lt;br&gt;Habits &amp;gt; Sprints&lt;br&gt;Questions &amp;gt; Answers&lt;br&gt;Problems &amp;gt; Solutions&lt;br&gt;People &amp;gt; Projects
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      03:06 AM - 10 Jul 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1281424520100737025" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1281424520100737025" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1281424520100737025" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Writing is Stupendously High Leverage.&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It helps to organize my thoughts and learning (aka &lt;a href="https://twitter.com/swyx/status/1245281982797373441?lang=en"&gt;Building My Second Brain&lt;/a&gt;), and enables me to share great ideas even while I sleep (as a &lt;a href="https://twitter.com/swyx/status/1224538408132993026?lang=en"&gt;Friendcatcher&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Blogging helped me &lt;a href="https://www.swyx.io/coding-career-launch/"&gt;sell $4k worth of an empty PDF&lt;/a&gt; on the day I decided to write my book because people trusted me. It's led to multiple job opportunities from great companies (Netlify, AWS, Temporal) that I would have otherwise struggled to be hired at.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Learn in Public&lt;/strong&gt;. Most of you know me for this one... (&lt;a href="https://www.swyx.io/learn-in-public/"&gt;read up if you're new round here, welcome!&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Good Enough is Better than Best&lt;/strong&gt;. In a world of infinite abundance, you can lose yourself constantly chasing the hottest new thing. &lt;a href="https://twitter.com/swyx/status/1221129594146840577"&gt;Satisfice rather than Maximize.&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Less is More&lt;/strong&gt;. Minimalism wins: Subtracting is harder than Adding. Quantity reduces perceived quality. Depth and whitespace stand out. (yes I realize the irony of this principle in a list of 35)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create Clarity.&lt;/strong&gt; Simple Explanations of What, Why, and How are extremely underrated and extremely useful. This is also a core skill of all leaders.  &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--TJXWU4FG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1296609423574446080/k98tS5P6_normal.jpg" alt="Coding Career Community profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Coding Career Community
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/coding_career"&gt;@coding_career&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      “You can’t call yourself a leader by coming into a situation that is by nature uncertain, ambiguous — and create confusion. You have to create clarity where none exists.”&lt;br&gt;&lt;br&gt;— Satya Nadella&lt;br&gt;&lt;br&gt;dynamite leadership quote, in a dynamite article for engineering leaders. &lt;a href="https://t.co/8sReCx8W93"&gt;twitter.com/sarah_edo/stat…&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:02 PM - 15 Apr 2021
    &lt;/div&gt;

      &lt;div class="ltag__twitter-tweet__quote"&gt;
        &lt;div class="ltag__twitter-tweet__quote__header"&gt;
          &lt;span class="ltag__twitter-tweet__quote__header__name"&gt;
            Sarah Drasner
          &lt;/span&gt;
          &lt;a class="mentioned-user" href="https://dev.to/sarah_edo"&gt;@sarah_edo&lt;/a&gt;

        &lt;/div&gt;
        Well, here goes nothin’! I was asked to open source the career ladders I used for my organization, I hope it’s a helpful resource for people:

📝 Article: https://t.co/wTGlxse1Rn
📍 Site: https://t.co/slqF0ij1dZ

A little thread with some thoughts about this 🧵
      &lt;/div&gt;

    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1382726094214758400" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1382726094214758400" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1382726094214758400" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Optimize for Change&lt;/strong&gt;. Optimizing for anything else tends to make systems MORE fragile, not less. If you learn only one &lt;a href="https://twitter.com/swyx/status/1383516418205835264"&gt;lesson from Facebook's open source&lt;/a&gt;, learn this. &lt;a href="https://overreacted.io/optimized-for-change/"&gt;https://overreacted.io/optimized-for-change/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Seek First To Understand, Then To Be Understood.&lt;/strong&gt; Don't get defensive about your point of view or perception of reality - understand theirs first. Either you will learn something new or you'll understand how to better get your point across. &lt;a href="https://www.swyx.io/learn-in-private/#go-meta"&gt;Hold multiple perspectives in your head&lt;/a&gt; and be able to summarize the best arguments of all major parties in a way that &lt;em&gt;THEY&lt;/em&gt; agree with.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Praise in Public, Criticize in Private&lt;/strong&gt;. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As satisfying as it might be to dump on someone publicly, I need to remember how it makes them feel. &lt;/li&gt;
&lt;li&gt;Everything is &lt;em&gt;not&lt;/em&gt; awesome, and I hate people that fake positivity. But I can either help or make them feel bad about it and the former is more effective than the latter.&lt;/li&gt;
&lt;li&gt;Exception for companies and people that are actively harming or misleading the vulnerable.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Build an Empathy Check Habit&lt;/strong&gt;. I can't take back an impulsive response that hurts someone. When I can't check with trusted friends, &lt;a href="https://mobile.twitter.com/swyx/status/1344687793851699200"&gt;I need to think before I tweet.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;People remember how you made them feel, before what you said&lt;/strong&gt;. &lt;a href="https://twitter.com/swyx/status/1385352144195252224"&gt;A good story has more power than a good argument.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Treat Others How They Want To Be Treated&lt;/strong&gt;. I call this &lt;a href="https://www.swyx.io/platinum-rule/"&gt;The Platinum Rule&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Complete Truths are Not Welcome.&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Most people are more interested in: &lt;/li&gt;
&lt;li&gt;being entertained&lt;/li&gt;
&lt;li&gt;sharing outrage&lt;/li&gt;
&lt;li&gt;feeling good about themselves&lt;/li&gt;
&lt;li&gt;defending their reputation&lt;/li&gt;
&lt;li&gt;than debating truth or improving themselves. &lt;/li&gt;
&lt;li&gt;Trying to change them is less effective than simply seeking out like minds.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Organize IRL Events&lt;/strong&gt;. You can do a lot to create excitement and connection in a community simply by organizing dinners and meetups and conferences. &lt;a href="https://twitter.com/svelteSociety/"&gt;Svelte Society&lt;/a&gt; started on a whim &lt;a href="https://twitter.com/swyx/status/1179261731304022017"&gt;exactly like this&lt;/a&gt;. Now there are thousands of members drawn to the Svelte community that wouldn't have before.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Don't offer unsolicited help.&lt;/strong&gt; Make Sure Help Is Wanted Before Offering It. Men - be especially wary about this when women are talking about their problems. Sometimes they just need support, not solutions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ask For Help More&lt;/strong&gt;. People are happy to help and like you more when they have helped you. Don't worry about showing weakness; you are getting something far more valuable in return. &lt;a href="https://twitter.com/swyx/status/1378020519774019587"&gt;Use a Help Timeout&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Log Your Wins&lt;/strong&gt;. e.g. when you ship something big or small, or when someone says nice things about you. They can help when you are feeling emotionally down, or when writing a &lt;a href="https://jvns.ca/blog/brag-documents/"&gt;brag document&lt;/a&gt;. Help others celebrate their wins too. PS a &lt;strong&gt;brag slack channel&lt;/strong&gt; can serve as an OLTP store of personal wins.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Don't End The Week With Nothing.&lt;/strong&gt; &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--v3qj-lSt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1360406256842797056/qhvO9V6x_normal.jpg" alt="swyx profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        swyx
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/swyx"&gt;@swyx&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      🆕 The Part Time Creator Manifesto&lt;br&gt;&lt;br&gt;&lt;a href="https://t.co/wFA7gsTWzt"&gt;swyx.io/part-time-crea…&lt;/a&gt;&lt;br&gt;&lt;br&gt;There's a lot of "quit your job, indie hack your way to freedom" on social media.&lt;br&gt;&lt;br&gt;I like my job. But I want to make too. There has to be a middle way. &lt;br&gt;&lt;br&gt;Quick thread 👇
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      22:33 PM - 14 Mar 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1371227946136993792" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1371227946136993792" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1371227946136993792" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Pick Up What They Put Down.&lt;/strong&gt; Guarantee feedback by giving feedback. &lt;a href="https://www.swyx.io/PUWTPD"&gt;https://www.swyx.io/PUWTPD&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Speak Succinctly&lt;/strong&gt;. Trailing sentences and double-barreled questions are hard to understand. Set the general direction and shut up. If they're off-track, interject.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Optimize for Retention, not Consumption&lt;/strong&gt;. We are the sum total of still-relevant knowledge we still remember, not the total of the volume of content we consume.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Illustrate Your Point&lt;/strong&gt;. Adding code samples or drawing 2x2's and system diagrams makes your idea much more effective. A picture &lt;em&gt;IS&lt;/em&gt; worth a thousand words!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Separate Your Identity from Your Work.&lt;/strong&gt; You can learn a lot on the Internet for &lt;a href="https://kentcdodds.com/chats-with-kent-podcast/seasons/01/episodes/you-can-learn-a-lot-for-the-low-price-of-your-ego-with-shawn-wang"&gt;the low, low price of $YOUR_EGO&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Build Tools For Yourself&lt;/strong&gt; &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--v3qj-lSt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1360406256842797056/qhvO9V6x_normal.jpg" alt="swyx profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        swyx
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/swyx"&gt;@swyx&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      🆕 Blog: You're Allowed To Make Your Own Tools&lt;br&gt;&lt;br&gt;&lt;a href="https://t.co/1gFEwn9k29"&gt;swyx.io/make-your-own-…&lt;/a&gt;&lt;br&gt;&lt;br&gt;Even the greatest software has parts that aren't so great - for you. But the difference between you and everyone else is that *you can code*.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      18:12 PM - 26 Dec 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1342896023350304768" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1342896023350304768" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1342896023350304768" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Collect Questions&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Obsess on collecting good answers and you might be precise but irrelevant.&lt;/li&gt;
&lt;li&gt;Obsess on collecting good questions and you will be approximately right.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Systems &amp;gt; Goals&lt;/strong&gt;. You don't rise to the level of your goals. You fall to the level of your systems.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Play Games You Cannot Win.&lt;/strong&gt; Our world is full of "winnable" games - likes, retweets, #1 of the day, employee of the month. External motivators destroy our intrinsic drive. You don't play infinite games to win. Only way to keep &lt;a href="https://twitter.com/swyx/status/968688836468453376"&gt;childlike creativity&lt;/a&gt; is to play games that you cannot win. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Use Your Calendar as a Todo List.&lt;/strong&gt; Normal todo lists don't force you to make tradeoffs. Sequence your work, set limits, and know when to decline or delegate tasks. When time block planning, eat your frog: Put First Things First. &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--v3qj-lSt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1360406256842797056/qhvO9V6x_normal.jpg" alt="swyx profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        swyx
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/swyx"&gt;@swyx&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Your Calendar as Todo List:&lt;br&gt;&lt;br&gt;(why I'm getting into time block planning)
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      06:59 AM - 23 Feb 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1364107473724919809" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1364107473724919809" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1364107473724919809" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Practice Stoicism&lt;/strong&gt;. It'll never stay as great as you want, it's never really as bad as you feel. This, too, shall pass.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Have a Productivity Keystone.&lt;/strong&gt; If you start a day unproductive, you are extremely likely to be unproductive the rest of the day. Instead, start off with something productive that you do every morning, you reinforce the idea that today is going to be a productive day.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Incorporate.&lt;/strong&gt; Companies pay expenses before taxes, People pay taxes before expenses. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Stay in the Game&lt;/strong&gt;. Berkshire Hathaway originally had a third partner, Rick Guerin. He got caught out with margin loans and had to sell out. Warren and Charlie survived 14 recessions. &lt;a href="https://www.swyx.io/psychology-of-money/"&gt;https://www.swyx.io/psychology-of-money/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Don't Skimp On Your Equipment.&lt;/strong&gt; Spending a few hundred dollars on your keyboard and monitor setup will save &lt;a href="https://twitter.com/swyx/status/1274054230911803392?lang=en"&gt;tens of thousands of physiotherapy and pain in future&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Earn White Collar, Spend Blue Collar&lt;/strong&gt;. Don't let your expenses rise as fast as your income - you probably don't need what you're thinking of buying. Spend part of your white collar income making up for white collar downsides - gym, group classes, &lt;a href="https://twitter.com/swyx/status/1323550900816764928"&gt;personal trainer&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Always Turn Lessons To Principles&lt;/strong&gt;. When we make mistakes or have great success, we should form them into principles so we can write them down and learn from or repeat them. &lt;a href="https://twitter.com/swyx/status/952232991455174656"&gt;It is the only way for past versions of you to communicate lessons to future you.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The full thread and discussions are here:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--v3qj-lSt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1360406256842797056/qhvO9V6x_normal.jpg" alt="swyx profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        swyx
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/swyx"&gt;@swyx&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I'm turning 35 today! 🎉&lt;br&gt;&lt;br&gt;As I grow older, I'm realizing the value of principles to make decisions and guide behavior. What are yours?&lt;br&gt;&lt;br&gt;Here's 35 of mine:
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      21:45 PM - 22 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1385349095074656259" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1385349095074656259" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1385349095074656259" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


</description>
      <category>reflections</category>
      <category>advice</category>
    </item>
    <item>
      <title>How to get a job out of a failed job interview</title>
      <author>Piotr Wilk</author>
      <pubDate>Thu, 22 Apr 2021 20:44:11 +0000</pubDate>
      <link>https://dev.to/wilkuintheair/how-to-get-a-job-out-of-a-failed-job-interview-4icb</link>
      <guid>https://dev.to/wilkuintheair/how-to-get-a-job-out-of-a-failed-job-interview-4icb</guid>
      <description>&lt;h5&gt;
  &lt;a href="#to-the-point"&gt;
  &lt;/a&gt;
  To the point!
&lt;/h5&gt;

&lt;p&gt;On a job interview listen carefully what the team you are supposed to join struggles with. What kind of problem they're currently solving.&lt;br&gt;
Then if they say no to you, you can just say thanks and tell them &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hey, I'm good at this one you're dealing with, let me do this for you as a side project, show me the code and I will estimate it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;
  &lt;a href="#now-i-will-give-you-some-context-how-it-worked-in-my-case"&gt;
  &lt;/a&gt;
  Now I will give you some context how it worked in my case.
&lt;/h5&gt;

&lt;p&gt;I suck. I totally suck at job interviews. Maybe I'm smart (oh the hell with it it's my blog, I can even say I'm very smart!). But I don't talk much, I'm kind of a typical introvert programmer. And as you may already know it's better to talk at job interviews.&lt;/p&gt;

&lt;p&gt;So these guys were looking for someone who talks. They said&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Sorry Piotr, you are very smart but you didn't say much at the interview, you had no energy and stuff. We're looking for a guy who can talk and has the energy.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And then I said&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thanks for the interview! Listen guys, you said you're struggling with upgrading your app. I did this many times and I can help you just with this one if you want. Just let me know if that sounds interesting.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;
  &lt;a href="#success"&gt;
  &lt;/a&gt;
  Success
&lt;/h5&gt;

&lt;p&gt;It turned out this did sound interesting to them, we've discussed the details and I've got a nice side project instead.&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>career</category>
      <category>5days5blogposts</category>
    </item>
    <item>
      <title>Funciones JavaScript</title>
      <author>Francisco</author>
      <pubDate>Thu, 22 Apr 2021 20:34:25 +0000</pubDate>
      <link>https://dev.to/franciscode/funciones-javascript-3l5k</link>
      <guid>https://dev.to/franciscode/funciones-javascript-3l5k</guid>
      <description>&lt;p&gt;Antes de comenzar:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Una de las cosas que nos encontramos al aprender JavaScript son las &lt;strong&gt;Funciones&lt;/strong&gt;, en esta guía que esta basada en la guía de w3 schools. Aprenderas lo principal sobre las funciones.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#funciones-javascript"&gt;
  &lt;/a&gt;
  Funciones JavaScript
&lt;/h2&gt;

&lt;p&gt;Una función de JavaScript es un bloque de código diseñado para realizar una tarea en particular.&lt;/p&gt;

&lt;p&gt;Una función de JavaScript se ejecuta cuando "algo" la invoca (la llama).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function myFunction(p1, p2) {
  return p1 * p2;   // La función retorna el producto entre p1 y p2
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#sintaxis-de-funciones-de-javascript"&gt;
  &lt;/a&gt;
  Sintaxis de funciones de JavaScript
&lt;/h3&gt;

&lt;p&gt;Una función de JavaScript se define con la functionpalabra clave, seguida de un nombre , seguido de paréntesis () .&lt;/p&gt;

&lt;p&gt;Los nombres de funciones pueden contener letras, dígitos, subrayados y signos de dólar (las mismas reglas que las variables).&lt;/p&gt;

&lt;p&gt;Los paréntesis pueden incluir nombres de parámetros separados por comas:&lt;/p&gt;

&lt;p&gt;** ( parámetro1, parámetro2, ... ) **&lt;/p&gt;

&lt;p&gt;El código a ejecutar, por la función, se coloca entre llaves: {}&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function name(parameter1, parameter2, parameter3) {
  // Código a ser ejecutado
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Los &lt;strong&gt;parámetros&lt;/strong&gt; de la función se enumeran entre paréntesis () en la definición de la función.&lt;/p&gt;

&lt;p&gt;Los argumentos de la función son los valores que recibe la función cuando se invoca.&lt;/p&gt;

&lt;p&gt;Dentro de la función, los argumentos (los parámetros) se comportan como variables locales.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Una función es muy similar a un procedimiento o una subrutina, en otros lenguajes de programación.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#invocaci%C3%B3n-de-una-funci%C3%B3n"&gt;
  &lt;/a&gt;
  Invocación de una Función
&lt;/h3&gt;

&lt;p&gt;El código dentro de la función se ejecutará cuando "algo" invoca (llama) a la función:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cuando ocurre un evento (cuando un usuario hace clic en un botón)&lt;/li&gt;
&lt;li&gt;Cuando se invoca (llama) desde el código JavaScript&lt;/li&gt;
&lt;li&gt;Automáticamente (autoinvocado)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#retorno-de-funci%C3%B3n"&gt;
  &lt;/a&gt;
  Retorno de Función
&lt;/h3&gt;

&lt;p&gt;Cuando JavaScript llega a una &lt;code&gt;return&lt;/code&gt; declaración, la función dejará de ejecutarse.&lt;/p&gt;

&lt;p&gt;Si la función fue invocada desde una declaración, JavaScript "regresará" para ejecutar el código después de la declaración de invocación.&lt;/p&gt;

&lt;p&gt;Las funciones a menudo calculan un &lt;strong&gt;valor de retorno&lt;/strong&gt; . El valor de retorno se "devuelve" al "llamador":&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var x = myFunction(4, 3);   

function myFunction(a, b) {
  return a * b;            
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;El resultado en x será&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;12
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#por-qu%C3%A9-funciones"&gt;
  &lt;/a&gt;
  ¿Por qué funciones?
&lt;/h3&gt;

&lt;p&gt;Puede reutilizar el código: defina el código una vez y utilícelo muchas veces.&lt;/p&gt;

&lt;p&gt;Puede usar el mismo código muchas veces con diferentes argumentos para producir resultados diferentes&lt;/p&gt;

&lt;p&gt;Se subirá mas contenido con respecto a JavaScript, puedes aprender mas siguiendo la guía que proporciona la w3schools.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>function</category>
      <category>guide</category>
    </item>
    <item>
      <title>Pomodoro - A technique to rescue your eyes as a software  developer</title>
      <author>Mohsen Esmailpour</author>
      <pubDate>Thu, 22 Apr 2021 20:23:48 +0000</pubDate>
      <link>https://dev.to/moesmp/pomodoro-a-technique-to-rescue-your-eyes-as-a-software-developer-4865</link>
      <guid>https://dev.to/moesmp/pomodoro-a-technique-to-rescue-your-eyes-as-a-software-developer-4865</guid>
      <description>&lt;p&gt;A career in software or computing can involve years of staring at a computer screen for extended periods. The consequences to your vision, which can affect not only your productivity as a software developer but also your quality of life in general, should be taken seriously. &lt;/p&gt;

&lt;p&gt;The most important part of a software job is to work with computers all time and look at the screen consistently. The screen is bright and can cause eye troubles over a period of time. We stare at the screen all the time especially when we want to find a bug, searching for a solution to fix the bug, or improving the software and we do R&amp;amp;D a lot.&lt;/p&gt;

&lt;p&gt;One of the best techniques you can do for your eyes when working on a computer is to remember the &lt;strong&gt;20/20/20 rule&lt;/strong&gt; – which means taking a break every 20 minutes and stare at an object 20 feet away for 20 seconds.&lt;/p&gt;

&lt;p&gt;Another technique is &lt;strong&gt;Pomodoro&lt;/strong&gt;. The Pomodoro Technique is a time management method developed by Francesco Cirillo in the late 1980s.[1] The technique uses a timer to break down work into intervals, traditionally 25 minutes in length, separated by short breaks. Each interval is known as a pomodoro, from the Italian word for 'tomato', after the tomato-shaped kitchen timer that Cirillo used as a university student.&lt;/p&gt;

&lt;p&gt;The technique has been widely popularized by dozens of apps and websites providing timers and instructions. Closely related to concepts such as timeboxing and iterative and incremental development used in software design, the method has been adopted in pair programming contexts.&lt;/p&gt;

&lt;p&gt;There are six steps in the original technique:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Decide on the task to be done.&lt;/li&gt;
&lt;li&gt;Set the pomodoro timer (traditionally to 25 minutes).[1]&lt;/li&gt;
&lt;li&gt;Work on the task.&lt;/li&gt;
&lt;li&gt;End work when the timer rings and put a checkmark on a piece of paper.&lt;/li&gt;
&lt;li&gt;If you have fewer than four checkmarks, take a short break (3–5 minutes) and then return to step 2; otherwise continue to step 6.&lt;/li&gt;
&lt;li&gt;After four pomodoros, take a longer break (15–30 minutes), reset your checkmark count to zero, then go to step.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;One of the best software for adopting Pomodoro is &lt;a href="http://www.pomodoroapp.com/"&gt;TeamViz Pomodoro app&lt;/a&gt;. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--34t1ugZu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19byyfvu3kpgawq5h8a2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--34t1ugZu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19byyfvu3kpgawq5h8a2.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Since 2015 I,m using TeamViz Pomodoro app and I have logs of all my works until now.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3bQlIOxn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mk80ogydr2g9v01liaxh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3bQlIOxn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mk80ogydr2g9v01liaxh.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
TeamViz Pomodoro app has clients for Windows, Mac, iOS and Android and you can sync your work logs across all devices you are using.&lt;/p&gt;

&lt;p&gt;After Download and install the app follow these steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Step 1: (optional) create a new named list, for example, “Sprint 1. market research”. The “list” here can also be a project or an epic in agile methodology.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u7MO_jt8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oyg2eblyi78gxq8b2zq4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u7MO_jt8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oyg2eblyi78gxq8b2zq4.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 2: Add your tasks to the currently selected list. After input text, press “ENTER” to confirm.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fl939rU1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8slcvic4590muopknu56.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fl939rU1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8slcvic4590muopknu56.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 3: The default estimation to a task is 1 Pomodoro timer. You can change it by double-clicking the number.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LweVwYnb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fuqska0y4msxpwj3n9n6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LweVwYnb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fuqska0y4msxpwj3n9n6.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 4: Hover onto the task, you’ll see some small tools. Hover your cursor onto the tool, there will be some tooltips. You can click the timer button to add it to today’s list. This is useful before you start your work every morning. You can take a review of existing tasks and add tasks by priority based on importance and level of urgency.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IWjXZi1c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t2r96pwfg7rn43qn821w.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IWjXZi1c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t2r96pwfg7rn43qn821w.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 5: After you marked a task as “to do today”, the tasks will appear on the lane of “To Do Today”, hover your cursor on the task there, there will be a small “play” button. Click the button there to start the timer. So once you made a plan for the whole day, you can now focus only on today’s tasks.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4zCRaMUs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tijxpug4a2vfqo0tgch0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4zCRaMUs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tijxpug4a2vfqo0tgch0.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Step 6: Once the timer started, the main window will automatically minimize after 3 seconds. You can now focus on your tasks and avoid interruption in the Pomodoro timer.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b_sODsxy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/065z5625320ua0mdu3gj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b_sODsxy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/065z5625320ua0mdu3gj.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At the end:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make sure your workspace is properly lighted&lt;/li&gt;
&lt;li&gt;Adjust the brightness and contrast of your screen&lt;/li&gt;
&lt;li&gt;Remember to blink &lt;/li&gt;
&lt;li&gt;Take breaks&lt;/li&gt;
&lt;li&gt;Have yearly eye exams&lt;/li&gt;
&lt;li&gt;Read this great article &lt;a href="https://dev.to/fabianrod/the-definitive-guide-of-software-engineers-for-eye-care-3ebp"&gt;The definitive guide of software engineers for eye care&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>productivity</category>
      <category>health</category>
      <category>guide</category>
      <category>tips</category>
    </item>
  </channel>
</rss>
