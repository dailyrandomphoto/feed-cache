<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to become a Certified Python Developer in 2022</title>
      <author>javinpaul</author>
      <pubDate>Sat, 11 Dec 2021 08:58:41 +0000</pubDate>
      <link>https://dev.to/javinpaul/how-to-become-a-certified-python-developer-in-2022-l64</link>
      <guid>https://dev.to/javinpaul/how-to-become-a-certified-python-developer-in-2022-l64</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fprofessional-certificates%2Fgoogle-it-automation"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BD3CFU0w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://earkeducation.com/wp-content/uploads/2019/02/mta_6.png" alt="How to pass Introduction to Programming using Python Exam 98-381" width="860" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello Devs, if you want to become a certified Python developer in 2022 then you have come to the right place. For long, I have been searching for a well recognized Python certification, similar to Oracle's &lt;a href="https://dev.to/javinpaul/how-to-become-a-certified-java-developer-professionals-1jfb"&gt;Java certification&lt;/a&gt; and Vmware's &lt;a href="https://medium.com/javarevisited/spring-professional-certification-vmware-edu-1202-the-ultimate-guide-to-pass-spring-11dab8d311c3"&gt;Spring certification&lt;/a&gt;  but I didn't found any until  I stumbled upon Microsoft's Exam 98-381: Introduction to Programming Using Python, also known as MTA Python certification. &lt;/p&gt;

&lt;p&gt;While I knew that Microsoft provides a lot of &lt;a href="https://javarevisited.blogspot.com/2020/11/top-10-azure-certifications-you-can-aim.html"&gt;Azure certification&lt;/a&gt; as well as SQL Server certification.&lt;/p&gt;

&lt;p&gt;But, I didn't know that they have a Python certification as well so it was a pleasant surprise for me and in this guide, I will tell you how to prepare for this Python certification and become a Microsoft certified Python developer. &lt;/p&gt;

&lt;p&gt;Along the way, I will also share best resources like online courses and tutorials to prepare for this prestigious Python certification. &lt;/p&gt;

&lt;p&gt;Earlier, I have shared the &lt;a href="https://javarevisited.blogspot.com/2019/07/top-5-books-to-learn-python-in-2019.html#axzz6co28cbJC"&gt;best Python books&lt;/a&gt; and &lt;a href="https://javarevisited.blogspot.com/2018/03/top-5-courses-to-learn-python-in-2018.html"&gt;best online courses to learn Python&lt;/a&gt; and in this article, I am going to share the best online courses to prepare for this Python certification, but before that let's talk about why python programmer get a certification or whether this MTA Python certification 98-381 worth it?&lt;/p&gt;

&lt;p&gt;Let's say that you want to get a professional career in the IT field and you are wondering what you should do in this situation I would highly recommend that you need recognizable certifications in your belt whether you want to be a &lt;a href="https://medium.com/javarevisited/the-2019-web-developer-roadmap-ab89ac3c380e"&gt;web developer&lt;/a&gt; or a programmer in any language and python is absolutely one of them.&lt;/p&gt;

&lt;p&gt;There are many &lt;a href="https://javarevisited.blogspot.com/2020/02/10-best-coursera-courses--for-python.html"&gt;Python online certifications&lt;/a&gt;. Some of them teach you the basics and others deep dive you into more advanced concepts. One of the best certifications that I really recommend you take is the &lt;a href="https://docs.microsoft.com/en-us/learn/certifications/exams/98-381"&gt;Microsoft python certification (98--381) exam&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This python certification is offered by Microsoft intended for really beginner users and the syllabus is containing the basics of this language such as data types and operators as well as inputs outputs and error handling and it does not teach you python instead it tests your skills and knowledge of this language.&lt;/p&gt;

&lt;p&gt;The cost of this exam is $127 and supports many languages not just English such as Japanese, Chinese, German as well as French and more and has about 40 questions needed to be completed in 45 minutes. &lt;/p&gt;

&lt;p&gt;Yes, this is the most challenging part of this exam as you only have 45 minutes to solve this question which means just over 1 minute for each question and some questions can be lengthy to chew most of you time. &lt;/p&gt;

&lt;p&gt;If you stuck in one of them and you will how time flies but don't worry, I will share some tips and tactics to do well in this Python certification. &lt;/p&gt;

&lt;p&gt;This article will show you some online courses to learn python in depth so you can pass the exam in confidence as well as some online books if you like reading instead of watching videos.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-mta-python-certification-98381"&gt;
  &lt;/a&gt;
  What is MTA Python Certification 98-381?
&lt;/h2&gt;

&lt;p&gt;This is one of the most popular Python certification offer by none other than Microsoft itself. This exam test candidates' ability to recognize and write syntactically correct Python code, recognize data types supported by Python, and be able to recognize and write Python code that will logically solve a given problem.&lt;/p&gt;

&lt;p&gt;The exam is online and you will need to solve 40 questions in 45 minutes to pass this exam. The exam pattern is very similar to other Microsoft certification and you will questions in following format&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Multiple choice questions&lt;/li&gt;
&lt;li&gt;Multiple selection questions&lt;/li&gt;
&lt;li&gt;Drop-down&lt;/li&gt;
&lt;li&gt;Drag &amp;amp; Drop&lt;/li&gt;
&lt;li&gt;Arrange, Select &amp;amp; Place&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And, here is how your Python skills are measured in this exam:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Perform Operations using Data Types and Operators (20-25%)&lt;/li&gt;
&lt;li&gt;Control Flow with Decisions and Loops (25-30%)&lt;/li&gt;
&lt;li&gt;Perform Input and Output Operations (20-25%)&lt;/li&gt;
&lt;li&gt;Document and Structure Code (15-20%)&lt;/li&gt;
&lt;li&gt;Perform Troubleshooting and Error Handling (5-10%)&lt;/li&gt;
&lt;li&gt;Perform Operations Using Modules and Tools (1-5%)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While the official exam guide says that you should have 100 hours of experience in Python coding and development's, its not a pre-requisite, as long as you can read and comprehended Python code you can give this exam. &lt;/p&gt;

&lt;p&gt;By the way, remember this exam is going to retire next year in June 2022,  probably be replaced by another Python certification so it's a good time to get certified in Python to give yourself a competitive edge.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educative.io/courses/python-201-interactively-learn-advanced-concepts-in-python-3?affiliate_id=5073518643380224"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XMHGOorp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.educative.io/v2api/collection/10370001/4795934408966144/image/6247615415451648" alt="Learn Functional Programming in Python - Learn Interactively" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-prepare-for-microsoft-python-certification-98381-exam-in-2022"&gt;
  &lt;/a&gt;
  How to Prepare for  Microsoft Python Certification (98--381) Exam in 2022
&lt;/h2&gt;

&lt;p&gt;When it coms to prepare for any certification I always follow my 3-point formula, join a course, read a book, and solve as many practice questions and dumps as possible.  I have used these tricks to pass many certifications exams including &lt;a href="https://javarevisited.blogspot.com/2019/12/how-to-crack-java-se-11-certification.html"&gt;Java Developer&lt;/a&gt; , &lt;a href="https://javarevisited.blogspot.com/2018/08/how-to-crack-spring-core-professional-certification-exam-java-latest.html"&gt;Spring Developer&lt;/a&gt;, &lt;a href="https://www.java67.com/2021/01/top-10-google-cloud-certifications.html"&gt;GCP&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2019/08/how-to-crack-aws-certified-solution-architect-exam.html"&gt;AWS&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2020/04/how-to-crack-microsoft-azure-solution-architect-exam-az-300.html"&gt;Azure Architect&lt;/a&gt; etc and today, I will share resources you need to excel in this Python certification. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-online-courses"&gt;
  &lt;/a&gt;
  1. Online Courses
&lt;/h3&gt;

&lt;p&gt;This is the first thing you should do to start your preparation, join a course and  here is a list of the best online courses and books to prepare for the Microsoft Python Certification (98--381) exam. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-11-the-python-bible"&gt;
  &lt;/a&gt;
  # 1.1. &lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fthe-python-bible%2F"&gt;The Python Bible&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;If you want a class that guides you from beginning to be advanced in this beautiful programming language, you should see this python course in Udemy starting with you by installing the environment and then learning the basics like variables data types for loops, and more.&lt;/p&gt;

&lt;p&gt;The course teaches you about a certain topic and after that test your skills with a small quiz and a coding challenge to enhance your knowledge and make the most of this course as well as don't feel boring throughout the course and continue with you to some advanced techniques such as object-oriented programming and functions in python and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fthe-python-bible%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SsL-yvbS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-p7cJ0Q1s99U/YXga2E0W0BI/AAAAAAAAp9w/dB0fHYYKY5kPNQK3rgelC8GuId5TuYYKACLcBGAsYHQ/w320-h180/the-python-bible.jpg" alt="Top 5 Book, Courses and Practice Tests to Crack Microsoft Python Certification (98--381) exam" width="320" height="180"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#12-100-days-of-code-the-complete-python-pro-bootcamp-for-2022"&gt;
  &lt;/a&gt;
  1.2. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2F100-days-of-code%2F"&gt;100 Days of Code --- The Complete Python Pro Bootcamp for 2022&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;If you are a complete beginner and first want to learn Python before going for this certification and looking for a project-based course then this is the best course you can join on Udemy. Created by Angela Yu, instructor of the &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fios-13-app-development-bootcamp%2F"&gt;&lt;strong&gt;iOS Bootcamp course&lt;/strong&gt;&lt;/a&gt;, this online course will teach you Python by building 100 projects in 100 days.&lt;/p&gt;

&lt;p&gt;This is one of the massive courses with 60+ hours of content and 229 articles but you can buy in just $9.9 on Udemy sales which happens every now and then. If you want to learn Python in 2022, I strongly recommend you to join this course on Udemy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is the link to join this best Python course&lt;/strong&gt; --- &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2F100-days-of-code%2F"&gt;100 Days of Code --- The Complete Python Pro Bootcamp for 2022&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2F100-days-of-code%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eay_YQ_X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Q7HUj9ie--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://miro.medium.com/max/609/1%252Aynze9qj9-qx1H72o-6h0CQ.jpeg" alt="Best project based Python course for beginners" width="609" height="342"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#13-python-mta-98381-exam"&gt;
  &lt;/a&gt;
  1.3. &lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fpython-mta-98-381-exam-complete-preparation-course-practice-tests-tips%2F"&gt;Python MTA 98--381 Exam&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Without requiring any previous knowledge in python language you can enroll in this Udemy course to begin a professional career in this fabulous language and the only two things you need are a computer with an internet connection and the passion to learn python and you are ready to go.&lt;/p&gt;

&lt;p&gt;Learn the basics of python by introducing you first to the variables as well as data types and loops so this knowledge will be using them in the entire course then move to create some projects and the answer after that you will explore objected-oriented programming and sending emails using python as well as interacting with databases using SQL and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fpython-mta-98-381-exam-complete-preparation-course-practice-tests-tips%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a9Ceml9X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-xks7xHG7Uh0/YXgb9VhzjEI/AAAAAAAAp94/SV-8B5VRgl0sSuclATfxfqsKkaxQ0ql5QCLcBGAsYHQ/MTA-Introduction%25252Bto%25252BProgramming%25252BUsing%25252BPython.png" alt="Best Udemy Course to crack Python certification" width="512" height="512"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-books"&gt;
  &lt;/a&gt;
  2. Books
&lt;/h3&gt;

&lt;p&gt;Moving to the next suggestion which is another great book for learning python with no prior experience required to start and provides you with a student-friendly introduction to the fundamentals of this programming language and more.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#21-starting-out-with-python-book"&gt;
  &lt;/a&gt;
  2.1. &lt;a href="https://www.amazon.com/Starting-Out-Python-Tony-Gaddis/dp/0134444329/?tag=javamysqlanta-20"&gt;Starting Out with Python&lt;/a&gt; [Book]
&lt;/h4&gt;

&lt;p&gt;The book starts with a beginner introduction to how to code using python from variables loops if and else statements as usual in any python book or course and then moves to some advanced topics like classes and functions and object-oriented programming and much more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/Starting-Out-Python-Tony-Gaddis/dp/0134444329/?tag=javamysqlanta-20"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vDQqDaSJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-8eWnfpUwAJA/YXgcVy71G8I/AAAAAAAAp-I/DylIOR6gRNUPbLKsR-vlTrNBzz9lB8H1ACLcBGAsYHQ/starting-out-python-5th-edition-pdf.jpg" alt="Best book to crack Python certification" width="399" height="500"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#22-learn-python-the-hard-way-by-zed-a-shaw"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2.2. &lt;a href="https://www.amazon.com/Learn-Python-Hard-Way-Introduction/dp/0321884914?tag=javamysqlanta-20"&gt;Learn Python The Hard Way, by Zed A. Shaw&lt;/a&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;If you ask about a Python book for beginners, a lot of people will recommend "Learn Python The Hard Way, by Zed A. Shaw," and this happens to me as well.&lt;/p&gt;

&lt;p&gt;This was one of the books which were suggested to me by my Python buddy, but I didn't get a chance to look because I was more hooked with the "Automating Boring Stuff with Python" and "Head First Python" book. I did read it later and learned a lot from it as it fills many gaps in my learning.&lt;/p&gt;

&lt;p&gt;Reading books from multiple authors also helps you to grasp the concept better because some explain one topic better while others explain other topics.  &lt;/p&gt;

&lt;p&gt;If you like Zed A. Shaw learning a hard way approach, then you will love this book. I also suggest combining this with this &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fpython-the-complete-python-developer-course%2F"&gt;&lt;strong&gt;Python Programming MasterClass&lt;/strong&gt;&lt;/a&gt; to get the best of both worlds.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/Learn-Python-Hard-Way-Introduction/dp/0321884914?tag=javamysqlanta-20"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ERF4d3L3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-rNbgdi_AbYw/XSB7MDYbfKI/AAAAAAAAZlk/pUjQ5t4gd9gdKFEtxxxbtB5V13odP2UmQCEwYBhgL/w246-h320/Learn%252BPython%252BThe%252BHard%252BWay%252Bby%252BZed%252BA.%252BShaw.jpg" alt="best book to learn Python in depth" width="246" height="320"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#13-python-for-everybody-book-amp-course"&gt;
  &lt;/a&gt;
  1.3. &lt;a href="https://www.amazon.com/Python-Everybody-Exploring-Data/dp/1530051126?tag=javamysqlanta-20"&gt;Python for Everybody&lt;/a&gt; [Book &amp;amp; Course]
&lt;/h4&gt;

&lt;p&gt;Let's now see some amazon best selling books that will prepare you to learn Python as a beginner and one of the best books that I will suggest is python for everybody and it was originally a course in &lt;a href="https://javarevisited.blogspot.com/2020/09/python-for-everybody-course-from-coursera-review.html#axzz6pXQD0ZSG"&gt;Coursera &lt;/a&gt;and &lt;a href="https://javarevisited.blogspot.com/2021/05/top-10-edx-courses-and-certificates-for.html"&gt;edX &lt;/a&gt;but due to the success of this program, the author has created a book version of his course.&lt;/p&gt;

&lt;p&gt;The book teaches you computer history and moving to python from variable data types if statements for loops and more of the basics then moving to use python for interacting with files and creating some projects involving scraping data from the web well as interacting with the databases and much more.&lt;/p&gt;

&lt;p&gt;If you want to join the course, here is the link to &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fpython"&gt;join  Python for Everybody on Coursera&lt;/a&gt;. This is a great course to learn Python in-depth and also prepare for this Python certification.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fpython"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ay9xS3tR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/--BQ_iEI6xJ0/YXgcKTpDBOI/AAAAAAAAp-A/eBbRkWMkn-cQ52nN0jq1eiOQ0nZWlnLbACLcBGAsYHQ/w320-h168/XDP%25257ESPECIALIZATION%252521%25257Epython.jpeg" alt="Best Coursera Course to crack Python certification" width="320" height="168"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-practice-tests-and-dumps"&gt;
  &lt;/a&gt;
  3. Practice Tests and Dumps
&lt;/h3&gt;

&lt;p&gt;This is probably the most important step on preparing Python certification because you need speed and accuracy to pass this certification. You need to solve 40 questions in 45 minutes which is not easy specially if you have not practiced mock tests. &lt;/p&gt;

&lt;p&gt;here are my favorite practice tests you can checkout to practice well before real exam. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#31-microsoft-python-certification-exam-98381-practice-test"&gt;
  &lt;/a&gt;
  3.1. &lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fmicrosoft-python-certification-exam-98-381-practice-tests%2F"&gt;Microsoft Python Certification Exam (98--381)&lt;/a&gt; [Practice Test]
&lt;/h4&gt;

&lt;p&gt;Let's say that you have mastered python at this point and you want to test the knowledge and skills then you probably need to check this question-based course in udemy containing around 200 questions separated into four parts and every part has 40 questions.&lt;/p&gt;

&lt;p&gt;Every part contains many questions about a certain topic like the first test has questions on variables as well as operations and data types and so on and the others will test your knowledge in the Flow-control functions error handling and much more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fmicrosoft-python-certification-exam-98-381-practice-tests%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7EAIMfL9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-UXltiTJq3Xk/YXgcFQRNwlI/AAAAAAAAp98/2CH8jpfytuMmSQG_LJwDnAxBCR1jOfpgwCLcBGAsYHQ/w320-h175/10657-microsoft-python-certification-exam-98-381-practice-tests-806x440.jpg" alt="Best Practice test to crack Python certification" width="320" height="175"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;That's all about how to become a certified Python developer in 2022. These were the best courses and books that I recommend for anyone who wants to get the Microsoft python certificate 98-381 and get a professional career in this field and now you are one step to start making this goal come true.&lt;/p&gt;

&lt;p&gt;By the way, if you miss this exam then don't worry, this is not the only Python certification you have, there are still PCEP-30-01 and the PCAP-31-02 Exams which you can take become an industry ready certified python developer in 2022 &lt;/p&gt;

&lt;p&gt;Other &lt;strong&gt;Python Articles and tutorials&lt;/strong&gt; you may like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/05/10-reasons-to-learn-python-programming.html"&gt;10 Reasons to learn Python in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/09/5-websites-to-learn-python-for-free.html"&gt;5 Websites to learn Python Coding for FREE&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/learn/certifications/exams/98-381"&gt;Official Python certification exam guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/06/java-vs-python-which-programming-language-to-learn-first.html"&gt;Python vs. Java - Which Programming language Beginners should learn?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/03/top-5-data-science-and-machine-learning-online-courses-to-learn-online.html"&gt;5 Data Science and Machine Learning course in Python&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://hackernoon.com/top-5-courses-to-learn-python-in-2018-best-of-lot-26644a99e7ec"&gt;Top 5 Course to Learn Python for Beginners&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/04/top-5-python-web-development-frameworks.html"&gt;Top 5 Web Development Frameworks for Python Developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/05/python-vs-javascript-which-programming-language-beginners-should-learn.html"&gt;Python vs. JavaScript - Which is better to start with?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/12/10-free-python-courses-for-programmers.html"&gt;10 Free Online courses to learn Python in depth&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://hackernoon.com/10-free-python-programming-courses-for-beginners-to-learn-online-38312f3b9912"&gt;10 Free Courses to learn Python in depth&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/05/why-python-is-best-programming-language.html"&gt;Why Python is the best Programming Language for Data Science&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://becominghuman.ai/9-data-science-and-machine-learning-courses-by-harvard-ibm-udemy-and-others-12a0c7c23ec1"&gt;9 Data Science Courses from Harvard and IBM&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/10/top-8-python-libraries-for-data-science-machine-learning.html"&gt;Top 8 Python libraries for Data Science and Machine Learning&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/08/top-5-python-books-for-data-science-and-machine-learning.html"&gt;Top 5 Books to learn Python for Data Science in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://www.java67.com/2017/05/top-7-free-python-programming-books-pdf-online-download.html"&gt;10 Free Python Programming Books for Programmers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/8-projects-you-can-buil-to-learn-python-in-2020-251dd5350d56"&gt;8 Python Projects You can build in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://hackernoon.com/java-vs-python-which-is-better-to-learn-for-beginners-in-2020-yq1t3y58"&gt;Python vs Java? Which is better to start with?&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this article so far. If you find these &lt;strong&gt;&lt;em&gt;best Python Certification Courses&lt;/em&gt;&lt;/strong&gt; useful then please share them with your friends and colleagues. If you have any questions or feedback then please drop a note.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P. S. -&lt;/strong&gt; If you are new to Python and want to learn Python programming from scratch but looking for free courses to start with then don't worry. There are a lot of free Python courses on Udemy and many of them you can find in the above article. If you are in a hurry, I suggest starting with the &lt;strong&gt;&lt;a href="http://bit.ly/2D5vvnV"&gt;Introduction To Python Programming&lt;/a&gt;&lt;/strong&gt; course, its completely free, and all you need is to create an Udemy account to enroll in this course.&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>certification</category>
      <category>development</category>
    </item>
    <item>
      <title>Striver's SDE Sheet Journey #1 Set Matrix Zeroes</title>
      <author>sachin26</author>
      <pubDate>Sat, 11 Dec 2021 08:42:48 +0000</pubDate>
      <link>https://dev.to/sachin26/strivers-sde-sheet-journey-1-set-matrix-zeroes-4l68</link>
      <guid>https://dev.to/sachin26/strivers-sde-sheet-journey-1-set-matrix-zeroes-4l68</guid>
      <description>&lt;p&gt;Hi👋,devs.&lt;/p&gt;

&lt;p&gt;from today I have decided I am going to start a journey called &lt;strong&gt;&lt;em&gt;Striver's SDE Sheet Journey&lt;/em&gt;&lt;/strong&gt; and in this journey, I will solve all 180 problems and I will try to explain all the solutions in an understandable way or I should say that step by step so that you can easily understand the solutions.&lt;br&gt;
Throughout the journey, I will use java why java? because I feel comfortable with it.&lt;/p&gt;

&lt;p&gt;What is "&lt;strong&gt;Striver's SDE Sheet&lt;/strong&gt;" 🤔? &lt;a href="https://takeuforward.org/interviews/strivers-sde-sheet-top-coding-interview-problems/"&gt;👀 here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;my main purpose to start this journey&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;- to improve my DSA concepts.&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- to improve my code quality.&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- to improve my English.&lt;/em&gt;&lt;/p&gt;



&lt;p&gt;let's start with 1st problem.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1-set-matrix-zeroes"&gt;
  &lt;/a&gt;
  &lt;u&gt;&lt;strong&gt;#1 Set Matrix Zeroes&lt;/strong&gt;&lt;/u&gt;
&lt;/h2&gt;

&lt;p&gt;In this problem, we have given a 2D integer matrix and in this matrix if an element is 0 then we have to set its entire &lt;strong&gt;ROW&lt;/strong&gt; and &lt;strong&gt;COLUMN&lt;/strong&gt; to 0's.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;like this one&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RU72Hy5C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rmoxgnr58070muy7c76.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RU72Hy5C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rmoxgnr58070muy7c76.jpeg" alt="" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;my approach&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;after spending half an hour I got this approach. let's discuss step by step&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; create two integer arrays(zeroRowIndexList &amp;amp; zeroColIndexList) which store the index of row and column.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; traverse the matrix and add the index of row &amp;amp; column to the arrays(zeroRowIndexList &amp;amp; zeroColIndexList) if &lt;strong&gt;matrix[row][column] == 0&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; set matrix's entire row to 0's according to zeroRowIndexList array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; set matrix's entire column to 0's according to zeroColIndexList array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; end&lt;/p&gt;

&lt;p&gt;let's Dry run this approach with an example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;step-1&lt;/strong&gt; create two arrays &lt;code&gt;zeroRowIndexList=[ ]&lt;/code&gt;,&lt;code&gt;zeroColIndexList=[ ]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-2&lt;/strong&gt; traverse the matrix and add index of row &amp;amp; column to the arrays(zeroRowIndexList,zeroColIndexList) if &lt;strong&gt;matrix[row][col] == 0&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  at matrix[0,0] == 0 is false
  at matrix[0,1] == 0 is false
  .
  .
  at matrix[1,1] == 0 is true 
  then add index of row &amp;amp; col to the arrays e.g. zeroRowIndexList=[1],zeroColIndexList=[1]
  at matrix[1,2] == 0 is false
  at matrix[2,2] == 0 is false
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;step-3&lt;/strong&gt; from &lt;code&gt;zeroRowIndexList[1]&lt;/code&gt; array, set matrix's rows to 0's&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="nx"&gt;matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;step-4&lt;/strong&gt; from &lt;code&gt;zeroColIndexList[1]&lt;/code&gt; array, set matrix's columns to 0's&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;step-5&lt;/strong&gt; end&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;JAVA&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.ArrayList&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setZeroes&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
         &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;zeroRowIndexList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;();&lt;/span&gt;
         &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;zeroColIndexList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;();&lt;/span&gt;
         &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
         &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;cols&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;// traverse the matrix and add row index &amp;amp; col index to Arraylists,&lt;/span&gt;
        &lt;span class="c1"&gt;// if cell element == 0&lt;/span&gt;
         &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;rows&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
             &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;cols&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
                 &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
                 &lt;span class="n"&gt;zeroRowIndexList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                 &lt;span class="n"&gt;zeroColIndexList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

                 &lt;span class="o"&gt;}&lt;/span&gt;
             &lt;span class="o"&gt;}&lt;/span&gt;
         &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// set entire row &amp;amp; col to 0 &lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;zeroColIndexList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;){&lt;/span&gt;
          &lt;span class="n"&gt;setRowZeros&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;zeroRowIndexList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
          &lt;span class="n"&gt;setColumnZeros&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;zeroColIndexList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// set entire row to 0&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setRowZeros&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rowIndex&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rowIndex&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rowIndex&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// set entire column to 0&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setColumnZeros&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;colIndex&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
           &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;colIndex&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Complexity Analysis&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Time Complexity&lt;/em&gt; :- &lt;strong&gt;O(rows*cols)&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Space Complexity&lt;/em&gt; :- &lt;strong&gt;O(rows+cols)&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;other approaches&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;u&gt;&lt;strong&gt;Algo #1&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;instead of creating two separate arrays we can use the matrix's first row &amp;amp; first column as markers.&lt;/em&gt; &lt;br&gt;
let's see how&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; create two boolean variable called &lt;strong&gt;isFirstRowHas0&lt;/strong&gt; and &lt;strong&gt;isFirstColHas0&lt;/strong&gt; and set to false&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; traverse the matrix and &lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;(2.1) if matrix[row][col] == 0 then &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;(3.1) if row == firstRow then set isFirstRowHas0 to true&lt;br&gt;
(3.2) if col == firstCol then set isFirstColHas0 to true&lt;br&gt;
(3.3) mark corresponding 1st row &amp;amp; 1st column to 0 &lt;br&gt;
     e.g. matrix[firstRow][col] == 0 &amp;amp; matrix[row][firstCol] == 0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; again traverse the matrix from matrix[2ndRow][2ndCol] and set 0 if matrix[firstRow][col] == 0 or matrix[row][firstCol] == 0&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;check if isFirstRowHas0 is true then set 1stRow to 0's&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;check if isFirstColHas0 is true then set 1stCol to 0's&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;end&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Dry Run&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;step-1&lt;/strong&gt; initialised two boolean variable isFirstRowHas0,isFirstColHas0 and set to false&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;isFirstRowHas0 = false&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;isFirstColHas0 = false&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;step-2&lt;/strong&gt; traverse the matrix till the end&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;(2.1) at matrix[0,0] == 0 is false&lt;br&gt;
..&lt;br&gt;
(2.1) at matrix[1,1] == 0 is true then&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;(3.1) if 1 == 0 is false &lt;br&gt;
(3.2) if 1 == 0 is false &lt;br&gt;
(3.3) matrix[firstRow][1] = 0 &amp;amp; matrix[1][firstCol] = 0&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;
&lt;br&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;..&lt;br&gt;
(2.1) at matrix[2,2] loop end&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;step-3&lt;/strong&gt; again traverse the matrix from matrix[2ndRow][2ndCol]&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;at matrix[1,1] if matrix[firstRow][1] == 0 or matrix[row][firstCol] == 0 is true then set matrix[1,1] = 0&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;at matrix[1,2] if matrix[firstRow][2] == 0 or matrix[1][firstCol] == 0 is true then set matrix[1,2] = 0&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;at matrix[2,1] if matrix[firstRow][1] == 0 or matrix[row][firstCol] == 0 is true then set matrix[2,1] = 0&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;at matrix[2,2] if matrix[firstRow][1] == 0 or matrix[row][firstCol] == 0 is false &lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;step-4&lt;/strong&gt; if &lt;code&gt;firstRowHas0 == true&lt;/code&gt; is false&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-5&lt;/strong&gt; if &lt;code&gt;firstColHas0 == true&lt;/code&gt; is false&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-6&lt;/strong&gt; end&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;JAVA&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setZeroes&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;

      &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;cols&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;firstRow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;firstCol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;isFirstColHas0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;isFirstRowHas0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

      &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;

          &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;cols&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

              &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;

              &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;firstCol&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;isFirstColHas0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
              &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;firstRow&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;  &lt;span class="n"&gt;isFirstRowHas0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

              &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;firstRow&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;firstCol&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

              &lt;span class="o"&gt;}&lt;/span&gt;      
          &lt;span class="o"&gt;}&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;

      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;cols&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;firstCol&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;firstRow&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
                &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

      &lt;span class="o"&gt;}&lt;/span&gt;

      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isFirstColHas0&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
          &lt;span class="n"&gt;setFirstColumnZeros&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;firstCol&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isFirstRowHas0&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
          &lt;span class="n"&gt;setFirstRowZeros&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;firstRow&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// set 1st entire row to 0&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setFirstRowZeros&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rowIndex&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rowIndex&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rowIndex&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// set 1st entire column to 0&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setFirstColumnZeros&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;colIndex&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rowIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;rowIndex&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;rowIndex&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
           &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rowIndex&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;colIndex&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Complexity Analysis&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Time Complexity&lt;/em&gt; :- &lt;strong&gt;O(rows*cols)&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Space Complexity&lt;/em&gt; :- &lt;strong&gt;O(1)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt; &lt;strong&gt;Algo #2&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;in this approach, i assume that &lt;strong&gt;-11&lt;/strong&gt; will not occur in the matrix&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;traverse the matrix and if matrix[row][col] == 0 then set entire row &amp;amp; col to -11 if &lt;strong&gt;matrix[row][col] != 0&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;(1.1) set entire row to -11 if matrix[row][col] != 0&lt;br&gt;
(1.2) set entire column to -11 if matrix[row][col] != 0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;again traverse the matrix and replace all -11 to 0&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;end&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Dry Run&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;step-1&lt;/strong&gt; traverse the matrix&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;at matrix[0][0] if matrix[0][0] == 0 is false&lt;br&gt;
..&lt;br&gt;
at matrix[1][1] if matrix[1][1] == 0 is true then&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;(1.1) set entire row to -11 if matrix[1][col] != 0&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;(1.2) set entire column to -11&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;..&lt;br&gt;
 at matrix[2][2] loop end&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;step-3&lt;/strong&gt; again traverse the matrix &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;at matrix[0][0] == -11 is false&lt;br&gt;
at matrix[0][1] == -11 is true then replace the value to 0&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;at matrix[0][2] == -11 is false&lt;br&gt;
at matrix[1][0] == -11 is true then replace the value to 0&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;at matrix[1][1] == -11 is false&lt;/p&gt;

&lt;p&gt;at matrix[1][2] == -11 is true then replace the value to 0&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;at matrix[2][0] == -11 is false&lt;br&gt;
at matrix[2][1] == -11 is true then replace the value to 0&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;at matrix[2][2] loop end.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;step-3&lt;/strong&gt; end&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;JAVA CODE&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setZeroes&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;dummyInt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;cols&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;// traverse the matrix till the end &amp;amp; set dummyInt to the entire row and column,&lt;/span&gt;
        &lt;span class="c1"&gt;// if the element == 0&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;cols&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;

                    &lt;span class="c1"&gt;// set -11 to entire column&lt;/span&gt;
                    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
                            &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dummyInt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                    &lt;span class="o"&gt;}&lt;/span&gt;

                    &lt;span class="c1"&gt;// set -11 to entire row&lt;/span&gt;
                    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;cols&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
                            &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dummyInt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                    &lt;span class="o"&gt;}&lt;/span&gt;
                &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;cols&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;

                &lt;span class="c1"&gt;// replace dummyInt to 0&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;dummyInt&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Complexity Analysis&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Time Complexity&lt;/em&gt; :- &lt;strong&gt;O(rows*cols)&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Space Complexity&lt;/em&gt; :- &lt;strong&gt;O(1)&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;if you reading this line it means you love 🥳 the post or maybe not 😔.please share your words in the comment section so that I can know that in which section I'm weak or strong.&lt;br&gt;
thanks for reading my first post.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>java</category>
      <category>dsa</category>
    </item>
    <item>
      <title>Best Online Food Ordering System in 2022 </title>
      <author>Idea2App</author>
      <pubDate>Sat, 11 Dec 2021 07:35:35 +0000</pubDate>
      <link>https://dev.to/idea_2app_dev/best-online-food-ordering-system-in-2022-4fl8</link>
      <guid>https://dev.to/idea_2app_dev/best-online-food-ordering-system-in-2022-4fl8</guid>
      <description>&lt;p&gt;If you plan to open a restaurant or might be a grocery store in the next couple of years, or are already running a business, your first concern should be ensuring that your customers can conveniently place an order.&lt;/p&gt;

&lt;p&gt;Online food ordering systems have significantly changed the way people eat out, and this trend is not going to slow down anytime soon. As indicated by a new report distributed by Statista, online food delivery experienced the biggest development among all areas in the business, with over $58 million in market volume in 2019. In comparison, traditional restaurants saw only $8 million growth.&lt;/p&gt;

&lt;p&gt;The online food ordering systems industry is expected to grow from USD 111. The industry has already reached a market value of $58M in 2019. In 2021 an annual growth rate of 4.3% that is USD 28.48 billion, was seen. &lt;/p&gt;

&lt;p&gt;Txtng Inc., an online food ordering system development company, announced that they had received $20M in funding in order to expand their services and hire more employees. According to an article published on techcrunch.com, Daniel May, CEO of Txtng Inc, stated that "the recent funding will be used to develop new features and applications."&lt;/p&gt;

&lt;p&gt;The company's current roster includes clients such as McDonald's and Chipotle Mexican Grill. They have developed 300 apps across multiple industries, including food, entertainment and travel.&lt;br&gt;
Here are the Best 3 Online Ordering Systems for Restaurants&lt;/p&gt;

&lt;p&gt;1 MenuDrive&lt;/p&gt;

&lt;p&gt;MenuDrive is the first online POS and online ordering system that allows restaurants to customise their ordering experience by creating a branded online ordering system. This can be done by sending custom content to the system, such as product photos, menu items, and more. Moreover, your restaurant staff will no longer have to worry about taking time out of their day to take orders for customers; instead, they can focus on other tasks in the restaurant. Instead of just receiving orders on paper from customers, now all orders are transmitted online so that you can view records in real-time.&lt;/p&gt;

&lt;p&gt;Some of our customers love this because it streamlines their business workflow. This is especially beneficial if your staff is busy with other duties like running the front of house or kitchen.&lt;br&gt;
MenuDrive's sister company MenuDash also offers a similar service.&lt;/p&gt;

&lt;p&gt;2 Toast POS&lt;/p&gt;

&lt;p&gt;Toast POS is an ideal restaurant point-of-sale system for growing businesses. The program was designed to be easy for all types of restaurateurs, from chain restaurants to local eateries. Toast POS comes with features such as an easy-to-use interface that makes it simple for staff members to learn how to use the system and take orders, a Web dashboard that allows owners to see real-time data on their business and make adjustments, and a mobile app that enables servers to take orders away from the point of sale so they can focus on delivering food and drinks.&lt;/p&gt;

&lt;p&gt;Toast can integrate with existing restaurant equipment and connect to payment processors or cash drawers through either wired or wireless connections. The system is compatible with iOS and Android devices, making it possible for customers to place orders on their smartphones. Moreover, Toast POS Software is an integrated restaurant management system that operates as a point of sale system. The program also allows for online ordering, gift card and rewards programs and inventory management.&lt;/p&gt;

&lt;p&gt;3 Upserve&lt;/p&gt;

&lt;p&gt;Upserve renders an end-to-end restaurant management system. The respective system includes options for bars, coffee shops, wineries, and bakeries. Moreover, the Upserve system goes well with its own POS system, mobile app, as well as the payment system. Upserve is convenient and accessible, also 24X7 U.S.-based assistance is rendered. &lt;/p&gt;

&lt;p&gt;Upserve is a kind of food ordering system that allows the restaurant’s customers to pay the bill from their tables. Besides, it also offers detailed analytical reports and data-driven reports about the restaurant’s performance. &lt;/p&gt;

&lt;p&gt;Besides, the Upserve POS system has successfully set itself distinguished from other generic POS systems. Likewise, the restaurants, cafes, bars, bakeries, or wineries can opt to see the information on sales, customer discounts, labour costs, expenditures, and many more.  Besides, the respective software is a cloud-based one and works well on iOS, Android, as well as the Hybrid devices. &lt;/p&gt;

&lt;p&gt;Grocery Delivery Software&lt;/p&gt;

&lt;p&gt;In the past few years, there has been a lot of hype around "software as a service," or SaaS. It's hard to go to a tech conference these days without hearing about the triumph of this business model over the old-fashioned way of selling software: shrink-wrap CDs and upgrades every few years. It seems almost like a done deal; if you're not in SaaS, then you're living in the past. We started out with this model, but pretty quickly realised that it wasn't right for us. We still think there are huge advantages to running your own software, and we're proud to be part of a movement that's bringing more self-hosted software into the world. We hope that by setting down some of our experiences and observations from this transition, we can help other people who are thinking about doing something similar.&lt;/p&gt;

&lt;p&gt;Top 10 Grocery Delivery App Builder APIs&lt;/p&gt;

&lt;p&gt;Let us discuss the top 10 &lt;a href="https://www.idea2app.dev/grocer-app-development.html"&gt;grocery delivery app builder&lt;/a&gt;&lt;br&gt;
 APIs&lt;/p&gt;

&lt;p&gt;1 SHOP.COM API&lt;br&gt;
2 Spoonacular Food API&lt;br&gt;
3 Kroger API&lt;br&gt;
4 BigOven Recipe API&lt;br&gt;
5 Paprika API&lt;br&gt;
6 Grocery Bear API&lt;br&gt;
7 Whisk Graph API&lt;br&gt;
8 Information Machine API&lt;br&gt;
9 midíadía API&lt;br&gt;
10 Preisente Merchant MyShop API&lt;br&gt;
11 Edamam Food and Grocery Database&lt;br&gt;
12 Recipes to Grocery Store&lt;br&gt;
13 Routific&lt;br&gt;
14 Super App&lt;br&gt;
15 Search Grocery Product Reviews by Barcode&lt;br&gt;
16 Tasty API&lt;br&gt;
17 Nutrionix API&lt;br&gt;
18 Halla&lt;br&gt;
19 Fotex App&lt;br&gt;
20 Bilka App&lt;br&gt;
21 BaglQ&lt;br&gt;
22 Netto Mobile App&lt;br&gt;
23 Pushpins&lt;/p&gt;

&lt;p&gt;The above-mentioned pointers are the list of APIs but just having access to API isn’t enough; youneed to hire a professional app builder in order to develop a grocery delivery app. Either hire an in-house team, a local agency, freelancers or opt to outsource the developing team, the choice is yours.  &lt;/p&gt;

&lt;p&gt;Things to Consider While Planning for &lt;a href="https://www.idea2app.dev/food-delivery-app-development.html"&gt;Food Ordering App Development&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The requirements for android and iOS food ordering app development are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The app must be able to accept and store orders from customers through the mobile interface.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The app must have a feature that allows the customer to see what the menu is and what items are available.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There must be a way for customers to view pictures of the food on offer.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Customers should be able to place an order, make changes to an order, and then check out, paying for their order via credit card or Paypal.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Deliveries should be able to be made using whichever delivery service is most convenient, including the customer's own vehicle.&lt;br&gt;
There are some differences between ordering food and ordering a car, though.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A big one is that if your customer uses the food ordering app, then he or she won't need directions to the restaurant. That's because the restaurants will come to them. The only exception would be for people who live in high-rises or other places that don't allow vehicles to pick up customers at their doorsteps.&lt;br&gt;
The other difference is that customers might not need cash or credit cards to pay for their food. Many restaurants accept payment through the app, so there would be no need to dig into a customer’s pocket for a wallet if they don't want to.&lt;/p&gt;

&lt;p&gt;The menu items available through the food ordering app will vary from city to city and even from restaurant to restaurant. But it will probably be easier to find something on the menu than it is when you order a car through the vehicle rental site because the cab driver doesn't have much control over what kind of fare he'll get or what kind of passengers he'll pick up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to Plan Building a Food Delivery App&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Follow the below-mentioned steps if you are planning to build a food delivery app:&lt;/p&gt;

&lt;p&gt;1 Before starting to frame your strategies, conduct an in-depth market analysis to check on the revenues generated and the ROI.&lt;/p&gt;

&lt;p&gt;2 Check on the latest marketing trends- Social media integration, virtual assistant, and link with smartwatch&lt;/p&gt;

&lt;p&gt;3 Select the food delivery model- aggregator model or logistic/delivery service model.&lt;/p&gt;

&lt;p&gt;4 Think upon the revenue model- delivery charges, surge pricing, revenue sharing, promotional and advertising services, and daily deals. &lt;/p&gt;

&lt;p&gt;5 Select the features- registrations, payment gateway, profile management, analytics, storage, direction-finding, user location, easy search options, ratings and reviews, rewards, and push notifications.&lt;/p&gt;

&lt;p&gt;6 Decide the versions- admin app, customers app, delivery valets app.&lt;/p&gt;

&lt;p&gt;7 Select the technological stack- Autho, Google Places API, Braintree, Stripe, and Routific&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Software Builder, A Great Career Prospect&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you want to get rich as a &lt;a href="https://www.idea2app.dev/"&gt;software builder&lt;/a&gt;, almost certainly the best way is to start or join a startup company. The reason is that big company are great for making money, but not so good for making wealth. You can get rich by joining a big company, but it is unlikely that you will ever be among the top few per cent of the wealth holders. For example, suppose you got hired today at Apple Computer. You will probably do well there. Your salary will be high and will probably go up over time. But it is unlikely that your stock options will turn out to be worth anything to speak of.&lt;br&gt;
Is Opting Restaurant App Builder Really Worth of it?&lt;/p&gt;

&lt;p&gt;When it comes to your restaurant delivery builder, you have a lot of choices. What can be confusing is deciding which one of the restaurant app builders is best for you and your business. However, the key to making the right decision lies in understanding what your overall purpose is in adopting this type of technology.&lt;/p&gt;

&lt;p&gt;Truly, the goal of creating an online ordering system for your restaurant is to create an enjoyable online experience for your customers so they will continue to purchase and be loyal to your brand. The reason for doing this should always be about improving customer satisfaction and not just about saving money on labour or other expenses.&lt;/p&gt;

&lt;p&gt;As a suggestion, before making a final decision on any particular ordering system, it is important to consider how these systems are typically rated by customers. Many times customers will complain about poor service even when a company has done everything possible to ensure that their customers are getting exactly what they order. If you have time, visit some websites that rate interactive ordering systems to get an idea of what customers are saying.&lt;/p&gt;

</description>
      <category>android</category>
      <category>ios</category>
      <category>react</category>
    </item>
    <item>
      <title>Advent of code Day 11</title>
      <author>Marco Servetto</author>
      <pubDate>Sat, 11 Dec 2021 07:02:26 +0000</pubDate>
      <link>https://dev.to/marcoservetto/advent-of-code-day-11-4o23</link>
      <guid>https://dev.to/marcoservetto/advent-of-code-day-11-4o23</guid>
      <description>&lt;p&gt;This was a nice puzzle, I appreciate the short input, so that I can simply cut-pasting into a multiline string.&lt;br&gt;
Thanks to this experience I'm getting more and more feedback on what I should add to AdamsTowel. See after the code for details:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;reuse [L42.is/AdamsTowel]
Split={class method S.List (S that)=\()(
  for c in that.replace(S"" with=S",").split(S",")\add(c)
  )}
Matrix=Collection.matrix(I.List,row=10I,col=10I)
Coords = Collection.list(Matrix.Coord)
Near={class method Coords (Matrix.Coord that) = Coords()(
  for r in Range(I"-1" to=2I)
    for c in Range(I"-1" to=2I)
      if r!=0I || c!=0I (
        new = that.with(row=\row+r).with(col=\col+c)
        catch error Any _ void
        \add(new)
        )
  )}
Step={
  class method I (mut Matrix that)=(
    for var v in that ( v+=1I )
    \flashes(m=that)
    )
  class method I flashes(mut Matrix m) = {
    flashes=Match.Count()(
      for c in m.coords() var v in m if v&amp;gt;9I (
        \add(\.true())
        v:=0I
        for n in Near(c) (
          vi = m.val(n) 
          if vi!=0I m.set(n val=vi+1I)
          )
        ))
    if flashes==0I return 0I
    return flashes+\flashes(m=m)
    }
  }
Main11=(
  input=S"""
    |3113284886
    |2851876144
    |2774664484
    |6715112578
    |7146272153
    |6256656367
    |3148666245
    |3857446528
    |7322422833
    |8152175168
  """
  m1=Matrix(\()(for l in input.split(S.nl())
    for s in Split(l) \add(I(string=s))))
  var tot = 0I
  for i in Range(100I) ( tot+=Step(m1) )
  Debug(tot)//1705  
  m2=Matrix(\()(for l in input.split(S.nl())
    for s in Split(l) \add(I(string=s))))
  for i in Range.unbounded() if Step(m2)==100I (
    Debug(i+1I)//of course the puzzle wants it
    Break()//starting from one, so 265 not 264 :-/
    )
  )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Splitting on all characters seams to be very common, so I should add it to my spliterators.
for example we could have
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;m1=Matrix(\()(for l in input.split(S.nl())
    for s in l.split() \add(I(string=s))))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Near elements of matrixes are quite a common feature too,
ideally I would like to allow either:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for (coord,val) in myCoord.near8(map) ( .. ) //or near4()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for coord in myCoord.near8() val in map.near8(myCoord) ( .. )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What would be better? the first one requires boxing objects, the second requires two iterations and thus double checks for what coordinates actually are in the range.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Should I change Match.Count to offer \addOne,\addIf(Bool that) \add(I that) and may be other operations like \times and \divide ? 
If so, that would remove the need to make an Accumulator for I... but what about Num and Math.Long? or even Math.Double??
That is, do we want to write
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;res=Double.Count()( for v in list (\add(v) \times(2\) )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;res=Match.CountDouble()( for v in list (\add(v) \times(2\) )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>adventofcode</category>
      <category>adventofcode2021</category>
      <category>programming</category>
      <category>42</category>
    </item>
    <item>
      <title>Planning for last release</title>
      <author>Hung Nguyen</author>
      <pubDate>Sat, 11 Dec 2021 06:05:08 +0000</pubDate>
      <link>https://dev.to/nguyenhung15913/planning-for-last-release-2kld</link>
      <guid>https://dev.to/nguyenhung15913/planning-for-last-release-2kld</guid>
      <description>&lt;h1&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  overview
&lt;/h1&gt;

&lt;p&gt;In this release I will choose to add a new feature to a current project. The first thing came up in my mind was finding an issue that would require me to create a new component or a page. I went to Github and spent nearly 1 hour to find one. At the moment, I have chose 2 issues to work on. They they were both interesting&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#telescope"&gt;
  &lt;/a&gt;
  Telescope
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/Seneca-CDOT/telescope/issues/2550"&gt;Issue-2550&lt;/a&gt;&lt;br&gt;
The prop named &lt;code&gt;justify&lt;/code&gt; was deprecated, so I what I would do was replacing all of them with &lt;code&gt;justifyContent&lt;/code&gt; instead.&lt;br&gt;
I already created a pull request to Telescope so I had everything set up for the project. This will not really complicated for me, but who knows what is going to happen because there might be bugs or at the time I am dealing with the issue, there may be someone's PR gets merged and there will be conflict.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#code-peak"&gt;
  &lt;/a&gt;
  Code Peak
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/VishalIITP/CodepeakSuperDuper/issues/13"&gt;Issue-13&lt;/a&gt;&lt;br&gt;
This one was more interesting since I would be adding a new design for the website, the leaderboard. Because the website had a lot of pages that were already designed, finding and making a new appearance for the leaderboard page will be challenging. Everything needs to match together. What I would do is going to the internet to find some template to get inspired. And also this is the first time I have seen this project so it might take me sometimes to get used to the code and have everything set up.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#last-thought"&gt;
  &lt;/a&gt;
  Last thought
&lt;/h1&gt;

&lt;p&gt;I am ready for the challenge. It seems challenging and will take time but I am excited to get into work.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Build the deployment system around GitHub deployment API</title>
      <author>Noah Lee</author>
      <pubDate>Sat, 11 Dec 2021 05:55:55 +0000</pubDate>
      <link>https://dev.to/hanjunlee/build-the-deployment-system-around-github-deployment-api-2kjh</link>
      <guid>https://dev.to/hanjunlee/build-the-deployment-system-around-github-deployment-api-2kjh</guid>
      <description>&lt;p&gt;I've been working as a DevOps engineer for the last three years and built the deployment system around GitHub deployment API. In this article, I'll explain the deployment API for those of you who want to build the deployment system.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-deployment-api"&gt;
  &lt;/a&gt;
  GitHub Deployment API
&lt;/h2&gt;

&lt;p&gt;GitHub provides the &lt;a href="https://docs.github.com/en/rest/reference/repos#deployments"&gt;deployment API&lt;/a&gt; &lt;strong&gt;to trigger deploying a specific ref (branch, SHA, tag) and dispatches the deployment event&lt;/strong&gt;. The workflow seems relatively straightforward:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Request to deploy a specific ref with a payload, and GitHub dispatches the deployment event.&lt;/li&gt;
&lt;li&gt;A system such as GitHub Action or Jenkins listens for the event and runs the actual deployment.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gn1mkXx7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7tcpxw5p5cp5vjdtaru6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gn1mkXx7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7tcpxw5p5cp5vjdtaru6.png" alt="Image description" width="880" height="306"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to deploy the specific branch to the &lt;code&gt;dev&lt;/code&gt; environment, you can do it by the API call below. Then GitHub dispatches the deployment event to your tools. The &lt;a href="https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#deployment"&gt;deployment event&lt;/a&gt; has information that your tools can deploy, such as the commit SHA, environment, and payload.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;--location&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--request&lt;/span&gt; POST &lt;span class="s1"&gt;'https://api.github.com/repos/{OWNER}/{REPO}/deployments'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--header&lt;/span&gt; &lt;span class="s1"&gt;'Authorization: Bearer {TOKEN}'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--header&lt;/span&gt; &lt;span class="s1"&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--data-raw&lt;/span&gt; &lt;span class="s1"&gt;'{
    "ref": "{BRANCH}",
    "environment": "dev"
}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For details, the deployment API provides various parameters to verify a deployment.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;ref&lt;/code&gt; parameter specifies branch, tag, or SHA. Many teams often deploy branches and verify them before merging a pull request.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;environment&lt;/code&gt; parameter allows specifying a runtime environment. Teams often have multiple environments for verifying, such as &lt;code&gt;production&lt;/code&gt; or &lt;code&gt;qa&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;auto_merge&lt;/code&gt; parameter is used to ensure that the requested ref is not behind the repository's main branch. The default value is &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;required_contexts&lt;/code&gt; parameter allows you to specify a subset of commit status that must be &lt;code&gt;success&lt;/code&gt;. By default, every status must be in a &lt;code&gt;success&lt;/code&gt; state.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-gitploy"&gt;
  &lt;/a&gt;
  What is Gitploy?
&lt;/h2&gt;

&lt;p&gt;GitHub provides a beautiful deployment API. But it is not easy to build a new deployment system around the deployment API, especially for a small team (or organization) it doesn't have enough resources to build.  If you find the tooling to fill these gaps, &lt;a href="https://github.com/gitploy-io/gitploy"&gt;Gitploy&lt;/a&gt; can be one of the options. Gitploy provides a straightforward UI and great features for deployment such as rollback, review, lock.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rOeo5i0O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u35io7jhofmt2wfsml7l.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rOeo5i0O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u35io7jhofmt2wfsml7l.gif" alt="Image description" width="600" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks for reading, and leave me comments on what do you think!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>devops</category>
      <category>deployment</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Progress Report </title>
      <author>Emily</author>
      <pubDate>Sat, 11 Dec 2021 05:52:02 +0000</pubDate>
      <link>https://dev.to/hphan9/progress-43na</link>
      <guid>https://dev.to/hphan9/progress-43na</guid>
      <description>&lt;h2&gt;
  &lt;a href="#progress"&gt;
  &lt;/a&gt;
  Progress
&lt;/h2&gt;

&lt;p&gt;Until now, my first &lt;a href="https://github.com/Seneca-CDOT/telescope/pull/2520"&gt;PR&lt;/a&gt; for adding route &lt;code&gt;\feeds\invalid&lt;/code&gt; to Posts service merged, and I also sent another &lt;a href="https://github.com/Seneca-CDOT/telescope/pull/2575"&gt;PR&lt;/a&gt; for the issue &lt;a href="https://github.com/Seneca-CDOT/telescope/issues/2413"&gt;#2413&lt;/a&gt;. So everything is going well, and I have not had any significant challenges working on these issues.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finding"&gt;
  &lt;/a&gt;
  Finding
&lt;/h2&gt;

&lt;p&gt;The hardest part for implementing the route &lt;code&gt;\feeds\delayed&lt;/code&gt; for Posts service is testing my code. When microservices finished downloading feeds and processing them, I checked the Redis server to find the delayed one. And I found nothing. After asking a question on Telescope's Slack channel, I got an answer from prof. David that this case is not usual. The reason is a feed is marked delayed only when the processor receives an &lt;code&gt;HTTP 429&lt;/code&gt; response ("the user has sent too many requests in a given amount of time ("rate limiting")"). This issue made it hard to test my new functions against the real-time database.&lt;br&gt;
The workaround is implementing an integration test to create delayed feeds on the fly. Surprisingly, those feeds does not have the time to live when I used &lt;code&gt;ttl&lt;/code&gt; command. I found that the &lt;code&gt;setDelayedFeeds()&lt;/code&gt; function did not set the expire time for the key.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// old code&lt;/span&gt;
&lt;span class="nx"&gt;setDelayedFeed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;seconds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;redis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;createDelayedFeedKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;seconds&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="c1"&gt;// new code&lt;/span&gt;
&lt;span class="nx"&gt;setDelayedFeed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;seconds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;redis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;createDelayedFeedKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;seconds&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;EX&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;seconds&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#takeaway"&gt;
  &lt;/a&gt;
  Take-away
&lt;/h2&gt;

&lt;p&gt;The biggest take-away for me this time is learning about Redis commands and &lt;a href="https://nodejs.org/api/stream.html"&gt;Readable stream&lt;/a&gt; in NodeJs. &lt;br&gt;
Stream is the core concept in NodeJs, and it is often used when we need to work with a large amount of data.&lt;br&gt;
When calling the &lt;code&gt;scanStream()&lt;/code&gt; method on a Redis client, I actually created an object of readable stream.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Scanstream : Convenient class to convert the process of scaning keys to a readable stream&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getFeedKeysUsingScanStream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;matchPattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;keys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;redis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scanStream&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;match&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;matchPattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt; &lt;span class="c1"&gt;//create a readable stream object &lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Error while scanning redis keys&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Error while scanning redis keys&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;end&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;([...&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A stream object has many events: 'closed', 'data', 'end', 'error', etc. Because the stream processes data chunk by chunk, we need to wrap it inside a Promise and only &lt;em&gt;resolve&lt;/em&gt; when there is no more data to consume _ &lt;strong&gt;the end event&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In the end, I was able to make the route work, and I am happy with the progress.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>stream</category>
    </item>
    <item>
      <title>Integrations, Integrations &amp; Integrations using Chatwoot!</title>
      <author>Sankalp Swami</author>
      <pubDate>Sat, 11 Dec 2021 05:40:00 +0000</pubDate>
      <link>https://dev.to/aviyel/integrations-integrations-integrations-using-chatwoot-5pk</link>
      <guid>https://dev.to/aviyel/integrations-integrations-integrations-using-chatwoot-5pk</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7kNQ9Uhi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639051895415-event-announcement-5-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7kNQ9Uhi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639051895415-event-announcement-5-resized.png" alt="chatbot, facebook integrations, instagram integrations" width="760" height="380"&gt;&lt;/a&gt;&lt;br&gt;
Working with a large customer base is troublesome if you have not structured all of your social media channels in a well-organized way. Aviyel comes with another special event where you will learn how one can integrate all of their social media channels into a self-hosted customer engagement platform with the help of &lt;a href="https://aviyel.com/projects/6/chatwoot"&gt;Chatwoot&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Customer satisfaction is as important as a Product of a company. Delighting your customers and meeting their expectations is a tough task. This is where Chatwoot comes into the picture. Chatwoot is a super tool for building endless relations with customers. You can integrate all of your social media handles in one place to make it more organized than ever. Join this event to learn the various rich features of Chatwoot.&lt;/p&gt;

&lt;p&gt;Why should one join this event?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You will learn how to send one-time messages like promotions, greetings to users.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will learn how to integrate chatwoot with the messaging tools you have already been using.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will learn how to respond to customers from various social media with cool keyboard shortcuts in just one dashboard.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mohmed Ishak is coming live where he will help your customer engagement by integrating various tools into &lt;a href="https://aviyel.com/projects/6/chatwoot"&gt;Chatwoot&lt;/a&gt;. Ishak is a Malaysian software engineering student. Ishak started programming during his 2nd year at a university. Ishak's primary stack is the MERN stack, but Ishak does know other technologies too such as Spring, Django, React Native, all the way to CI/CD tools. Ishak became the President of the IT Club at his university in January 2021 and has conducted 4 successful programming workshops in that year alone. Ishak has written countless tech articles too.&lt;/p&gt;

&lt;p&gt;Join us to get hands-on experience with Chatwoot &amp;amp; &lt;a href="https://aviyel.com/discussions"&gt;open-source&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Date: December 21st, 2021&lt;br&gt;
Time: 08 AM PST | 11 AM EST&lt;br&gt;
Register here:&lt;/strong&gt; &lt;a href="https://bit.ly/3IMiEGr"&gt;https://bit.ly/3IMiEGr&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Impressed? Check out the rest of our &lt;a href="https://aviyel.com/events"&gt;events&lt;/a&gt;!&lt;br&gt;
Let’s build open-source together! 🎉&lt;br&gt;
Team Aviyel&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mohmed Ishak Socials!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Twitter: &lt;a href="https://twitter.com/mo_ishak975"&gt;mo_ishak975&lt;/a&gt;&lt;br&gt;
DEV: &lt;a href="https://dev.to/ishakmohmed"&gt;Mohmed Ishak&lt;/a&gt;&lt;br&gt;
Linkedin: &lt;a href="https://www.linkedin.com/in/mohmed-ishak/"&gt;Mohmed Ishak&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>React.js for Beginners 2022</title>
      <author>Kunal Garg</author>
      <pubDate>Sat, 11 Dec 2021 05:35:09 +0000</pubDate>
      <link>https://dev.to/gargkunal/reactjs-for-beginners-2022-531c</link>
      <guid>https://dev.to/gargkunal/reactjs-for-beginners-2022-531c</guid>
      <description>&lt;p&gt;Learn react from scratch &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/maJNKiu9lFg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>web3</category>
    </item>
    <item>
      <title>Python Web Scraping... Lawyers Data</title>
      <author>hAnii</author>
      <pubDate>Sat, 11 Dec 2021 05:34:03 +0000</pubDate>
      <link>https://dev.to/nothanii/python-web-scraping-lawyers-data-16om</link>
      <guid>https://dev.to/nothanii/python-web-scraping-lawyers-data-16om</guid>
      <description>&lt;p&gt;&lt;a href=""&gt;https://www.patreon.com/posts/how-to-get-data-59780570?utm_medium=clipboard_copy&amp;amp;utm_source=copy_to_clipboard&amp;amp;utm_campaign=postshare&lt;/a&gt;download Source Code From Here.... &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Responsive Personal Portfolio Website Using HTML CSS And JavaScript</title>
      <author>Kishan Sheth</author>
      <pubDate>Sat, 11 Dec 2021 04:59:33 +0000</pubDate>
      <link>https://dev.to/koolkishan/responsive-personal-portfolio-website-using-html-css-and-javascript-23di</link>
      <guid>https://dev.to/koolkishan/responsive-personal-portfolio-website-using-html-css-and-javascript-23di</guid>
      <description>&lt;h2&gt;
  &lt;a href="#you-can-get-the-template-from-the-link-proivided-in-the-description-of-the-video"&gt;
  &lt;/a&gt;
  You can get the template from the link proivided in the description of the video.
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#technologies-used-"&gt;
  &lt;/a&gt;
  Technologies Used :-
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;HTML&lt;/li&gt;
&lt;li&gt;CSS&lt;/li&gt;
&lt;li&gt;JavaScript&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#libraries-and-assets-used-"&gt;
  &lt;/a&gt;
  Libraries and Assets Used :-
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Fontawesome&lt;/li&gt;
&lt;li&gt;Scroll Reveal&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#to-learn-how-to-create-this-template-watch-the-complete-video-you-can-get-the-template-for-free-from-the-link-provided-in-the-description-of-the-video"&gt;
  &lt;/a&gt;
  To learn how to create this template watch the complete video. You can get the template for free from the link provided in the description of the video.
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Uu8MJhtbQnY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#please-do-like-the-video-and-subscribe-to-the-channel-it-helps-and-motivates-me-to-create-more-content-like-this"&gt;
  &lt;/a&gt;
  Please do like the video and subscribe to the channel. It helps and motivates me to create more content like this.
&lt;/h2&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>TypeScript Promises Examples</title>
      <author>Pankaj Kumar</author>
      <pubDate>Sat, 11 Dec 2021 04:58:37 +0000</pubDate>
      <link>https://dev.to/pankajkumar/typescript-promises-examples-1387</link>
      <guid>https://dev.to/pankajkumar/typescript-promises-examples-1387</guid>
      <description>&lt;p&gt;The popularity of TypeScript is increasing very rapidly for frontend web development as well as backend web development. TypeScript is designed for the development of large applications and transpiles to JavaScript. As TypeScript is a superset of JavaScript, existing JavaScript programs are also valid TypeScript programs. TypeScript may be used to develop JavaScript applications for both client-side and server-side execution. If you are completely new to TypeScript for serverside(Node.js) then &lt;a href="https://medium.com/@pankaj.itdeveloper/getting-started-using-typescript-with-node-js-and-express-6aff573667d5"&gt;read this article&lt;/a&gt; to get the basic understanding of Typescript and how it can be used with Node.js. If you want to use promises with Nodejs(JavaScript) click here to &lt;a href="https://jsonworld.com/demo/start-working-with-promises-in-node.js"&gt;read the article&lt;/a&gt;.&lt;br&gt;
In this article, We will understand about promises in TypeScript and how we can make our code efficient after using promise in our TypeScript Code.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#callback-examples-in-typescript"&gt;
  &lt;/a&gt;
  Callback examples in TypeScript
&lt;/h3&gt;

&lt;p&gt;One way to program asynchronously is to use callbacks. We pass to an asynchronous function a function which it will call when the task is completed.&lt;/p&gt;

&lt;p&gt;Let’s understand with below example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function showMessage(callback) {
setTimeout(() =&amp;gt; {
console.log("This is first line");
callback(); // will be called when the task will be finished
}, 3000);
}
asyncMethod(() =&amp;gt; console.log("This is second line"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the example above, A normal function is defined and an argument is passed which is a function and will be called once the task inside the function block is completed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#start-working-with-promises"&gt;
  &lt;/a&gt;
  Start Working with Promises
&lt;/h3&gt;

&lt;p&gt;A promise is an object that may produce a single value sometime in the future: either a resolved value or a reason that it’s not resolved (e.g., a network error occurred). A promise may be in one of 3 possible states: fulfilled, rejected, or pending. Promise users can attach callbacks to handle the fulfilled value or the reason for rejection.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;State of Promises&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;pending:&lt;/strong&gt; This is the initial state which indicates that promise has not either resolved or rejected. For example, We are making any HTTP call and the request takes few milliseconds to get response, so while its waiting for the response the state of the promise will be in pending state.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;fulfilled:&lt;/strong&gt; This is the state which indicates that the final output has been returned by promise successfully.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;rejected:&lt;/strong&gt; This state denotes that some error has been occured while doing task inside the promises and the operation gets failed.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const promise = new Promise((resolve, reject) =&amp;gt; {
// Code to execute
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In example above, a promise takes callback function as a parameter.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Its callback function has 2 parameters resolve and reject.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If the condition inside promise is true then the promise returns resolve else it returns the reject.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Inside the coding a promise condition is writen like below to return a valid promise.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function asyncFun() {
const promise = new Promise((resolve, reject) =&amp;gt; {
setTimeout(() =&amp;gt; {
console.log("Console from promise function");
resolve();
}, 3000);
});
return promise;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#attach-success-and-error-handler-with-promise"&gt;
  &lt;/a&gt;
  Attach Success and Error Handler with Promise
&lt;/h3&gt;

&lt;p&gt;A function returning promise can be handled easily like in below code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;asyncFun().then(function(success) {
  // This is success handler
  console.log(success);
})
.catch(function(error) {
  // This is error handler
  console.error(error);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#promise-chaining"&gt;
  &lt;/a&gt;
  Promise Chaining
&lt;/h3&gt;

&lt;p&gt;We can also connect a series of then handlers together in a chain, like in below example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Promise.resolve("done")
.then(
(val) =&amp;gt; {
console.log(val);
return 'done2';
},
(err) =&amp;gt; console.error(err)
)
.then(
(val) =&amp;gt; console.log(val),
(err) =&amp;gt; console.error(err)
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;The promise is a very efficient way to write asynchronous code. Also, it solved all the problem occurred while working with callbacks.&lt;br&gt;
This article was originally posted over &lt;a href="https://jsonworld.com"&gt;JsonWorld&lt;/a&gt;&lt;br&gt;
Thank You!&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>promises</category>
      <category>programming</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
