<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Three more satisfying buttons and how to make them</title>
      <author>Ammadeo</author>
      <pubDate>Fri, 30 Jul 2021 14:24:07 +0000</pubDate>
      <link>https://dev.to/ammadeo/three-more-satisfying-buttons-and-how-to-make-them-5abc</link>
      <guid>https://dev.to/ammadeo/three-more-satisfying-buttons-and-how-to-make-them-5abc</guid>
      <description>&lt;p&gt;Satisfying buttons can take many forms. Let's see three more!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#simple-button"&gt;
  &lt;/a&gt;
  Simple button
&lt;/h1&gt;

&lt;p&gt;Not every satisfying button must be hard to implement. This simple button will use only small transitions and shadows to make it feel great.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-it-look"&gt;
  &lt;/a&gt;
  How does it look?
&lt;/h2&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ammadeo/embed/BaWEEoZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-make-it"&gt;
  &lt;/a&gt;
  Let's make it
&lt;/h2&gt;

&lt;p&gt;The implementation will be very similar to the one in the first part of this series. So if You didn't read it, do it now.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;/* Use realistic shadows */&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="n"&gt;hsla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.06&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
              &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="m"&gt;-3px&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="n"&gt;hsla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.08&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c"&gt;/* Make sure that transform-origin match translate() direction. 
     It makes translate() and scale() work it the same axis */&lt;/span&gt;  
  &lt;span class="nl"&gt;transform-origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bottom&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* On button press */&lt;/span&gt;
&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="nd"&gt;:active&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;/* Make shadows much smaller */&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="n"&gt;hsla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.06&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
              &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="n"&gt;hsla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.08&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c"&gt;/* Apply perspective transformation */&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
    &lt;span class="c"&gt;/* Translate down on Y axis */&lt;/span&gt;
    &lt;span class="n"&gt;translatey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.25em&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="c"&gt;/* Make button smaller */&lt;/span&gt;
    &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#plastic-button"&gt;
  &lt;/a&gt;
  Plastic button
&lt;/h1&gt;

&lt;p&gt;The button will deform inwards on press.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-see-the-implementation"&gt;
  &lt;/a&gt;
  Let's see the implementation
&lt;/h2&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ammadeo/embed/jOBRgvQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-make-it"&gt;
  &lt;/a&gt;
  How to make it?
&lt;/h2&gt;

&lt;p&gt;To make a neuromorphic button, we need to give it a few shadows. By default, we want to make it look raised.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;/* Add outside shadows */&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
    &lt;span class="c"&gt;/* Top left white shadow */&lt;/span&gt;
    &lt;span class="m"&gt;-4px&lt;/span&gt; &lt;span class="m"&gt;-4px&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="n"&gt;hsla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.14&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="c"&gt;/* Bottom right black shadow */&lt;/span&gt;
    &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="n"&gt;hsla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.14&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* On button press */&lt;/span&gt;
&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="nd"&gt;:active&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;/* Add inside shadows */&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
    &lt;span class="c"&gt;/* Inner top left black shadow */&lt;/span&gt;
    &lt;span class="nb"&gt;inset&lt;/span&gt; &lt;span class="m"&gt;-4px&lt;/span&gt; &lt;span class="m"&gt;-4px&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="n"&gt;hsla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.14&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="c"&gt;/* Inner bottom right white shadow */&lt;/span&gt;
    &lt;span class="nb"&gt;inset&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="n"&gt;hsla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.14&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c"&gt;/* Make it a bit darker */&lt;/span&gt;
  &lt;span class="nl"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;brightness&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.96&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Don't forget about UX! Let's add a light border around it to make it easier to spot.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;/* Add glass-like border  */&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hsla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Learn more about plastic like buttons from &lt;a href="https://uxdesign.cc/neumorphism-in-user-interfaces-b47cef3bf3a6"&gt;Neumorphism in user interfaces&lt;/a&gt; by Michal Malewicz.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#glowing-button"&gt;
  &lt;/a&gt;
  Glowing button
&lt;/h1&gt;

&lt;p&gt;This button is made of glass and has a colourful light inside. The light follows a user's interactions — like mouse movement.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-see-it-in-action"&gt;
  &lt;/a&gt;
  Let's see it in action
&lt;/h2&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ammadeo/embed/mdmxOwP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-implement-it"&gt;
  &lt;/a&gt;
  How to implement it
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;I'd say upfront the implementation is not beginner-friendly.&lt;/strong&gt;&lt;br&gt;
Firstly We'll use inner shadows to make a glass-like effect.&lt;br&gt;
If You want to learn more about Glassmorphism, check out &lt;a href="https://blog.prototypr.io/new-glassmorphism-how-to-create-neon-glass-effect-ui-design-3a6c866d3b63"&gt;New Glassmorphism? How to Create Neon Glass Effect UI Design&lt;/a&gt; by &lt;br&gt;
Przemysław Baraniak.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;/* Background color in HSL 
     It's "raw" because it needs to work with custom alpha */&lt;/span&gt;
  &lt;span class="py"&gt;--color-background-raw&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;12%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;16%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;/* Glass effect inner shadows */&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;inset&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="n"&gt;hsla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nb"&gt;inset&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;2em&lt;/span&gt; &lt;span class="m"&gt;2em&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="n"&gt;hsla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.12&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nb"&gt;inset&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;-3px&lt;/span&gt; &lt;span class="m"&gt;0.25em&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="n"&gt;hsla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.12&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nb"&gt;inset&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;-0.25em&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="n"&gt;hsla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.12&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nb"&gt;inset&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;-2em&lt;/span&gt; &lt;span class="m"&gt;2em&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="n"&gt;hsla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--color-background-raw&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="m"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nb"&gt;inset&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0.25em&lt;/span&gt; &lt;span class="m"&gt;0.5em&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="n"&gt;hsla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we'll use the &lt;strong&gt;after pseudo-element&lt;/strong&gt; as a glowing circle following a user's interactions. Let's make use of the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/CSS_Properties_and_Values_API/guide"&gt;CSS Properties and Values API&lt;/a&gt;. This API allows us to define types of CSS Properties, which is needed to animate them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Use CSS Properties and Values API
It enables transitions for css properties 
*/&lt;/span&gt;
&lt;span class="c"&gt;/* Will control the left position of the glowing circle. */&lt;/span&gt;
&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="n"&gt;--glow-left&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;/* Allow any length or percentage e.g. 1px, 1em or 20% */&lt;/span&gt;
  &lt;span class="nt"&gt;syntax&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'&amp;lt;length-percentage&amp;gt;'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="c"&gt;/* Allow children elements to inherit this property */&lt;/span&gt;
  &lt;span class="nt"&gt;inherits&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="c"&gt;/* Set default value */&lt;/span&gt;
  &lt;span class="nt"&gt;initial-value&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;50&lt;/span&gt;&lt;span class="o"&gt;%;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;/* Will control the top position of the glowing circle. */&lt;/span&gt;
&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="n"&gt;--glow-top&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;syntax&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'&amp;lt;length-percentage&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;inherits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;initial-value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Glowing circle */&lt;/span&gt;
&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="nc"&gt;.glow&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;/* Make sure it shows */&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;/* Position it */&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--glow-top&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--glow-left&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c"&gt;/* Keep it centred */&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c"&gt;/* Make it smooth!
     This is why we need CSS Properties and Values API
   */&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
    &lt;span class="nb"&gt;top&lt;/span&gt; &lt;span class="m"&gt;80ms&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nb"&gt;left&lt;/span&gt; &lt;span class="m"&gt;80ms&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's use a bit of JavaScript to control them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Select the button&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button.glow&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Set glow position css properties&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;setGlowPosition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Get the event's coordinates relative to the button&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;top&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getBoundingClientRect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;offsetX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientX&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;offsetY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientY&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Prevent setting position on keyboard click&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;offsetX&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;offsetY&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// wait for animation frame for better performance&lt;/span&gt;
    &lt;span class="nx"&gt;requestAnimationFrame&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// set css property&lt;/span&gt;
      &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;--glow-left&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;offsetX&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;--glow-top&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;offsetY&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Set glow position on mousemove (mouse) and click (touch and keyboard)&lt;/span&gt;
&lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mousemove&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setGlowPosition&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setGlowPosition&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#challenge-for-you"&gt;
  &lt;/a&gt;
  Challenge for You
&lt;/h1&gt;

&lt;p&gt;Make Your satisfying button and share it in a comment below. I'd love to see it!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>tutorial</category>
      <category>design</category>
    </item>
    <item>
      <title>What are Callbacks in JavaScript?</title>
      <author>Saji Wang</author>
      <pubDate>Fri, 30 Jul 2021 14:00:22 +0000</pubDate>
      <link>https://dev.to/codesphere/what-are-callbacks-in-javascript-297h</link>
      <guid>https://dev.to/codesphere/what-are-callbacks-in-javascript-297h</guid>
      <description>&lt;p&gt;Anyone familiar with programming, already knows what functions do and how to use them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But, what exactly is a callback function?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let me walk you through a few examples that will help you understand what callback functions are and how to use them in JavaScript.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#functions"&gt;
  &lt;/a&gt;
  Functions
&lt;/h2&gt;

&lt;p&gt;Let's start with what a function is.&lt;br&gt;
A function is a block of code that can be executed repeatedly, as needed. Functions are really useful because you write the code once and then you can run it multiple times.&lt;br&gt;
To run the code inside a function, simply call the function.&lt;br&gt;
Here's an example that defines a function and then calls it ‒&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;In the code sample above, we created a function called greet() (lines 1 ‒ 3) that has a parameter called name. This parameter serves as a placeholder so that when the function is called, a value can be passed to the parameter.&lt;/p&gt;

&lt;p&gt;In line 6, we called the greet() function and we passed the string value 'John' as an argument.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#callback-functions"&gt;
  &lt;/a&gt;
  Callback Functions
&lt;/h2&gt;

&lt;p&gt;A callback function is simply a function that is passed into another function as an argument, which is then triggered when the other function is executed.&lt;br&gt;
The following is an example of using a simple callback function.&lt;/p&gt;

&lt;p&gt;Let's start by creating an array of numbers that we will use in our example ‒&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Here's a function that checks for even numbers ‒&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;To find all the even numbers in the array that we created above, we can use the JavaScript filter() method, which returns a new array that only contains the numbers that match the function's condition, meaning that they are even.&lt;/p&gt;

&lt;p&gt;Now, we can pass the evenNumbers() function, described above, to the filter() method and assign it to the filteredEvenNumbers variable, as shown below ‒&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;In this example, the evenNumbers() function is a &lt;strong&gt;callback function&lt;/strong&gt;, because it is being passed as an argument to another function.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#synchronous-callback-functions"&gt;
  &lt;/a&gt;
  Synchronous Callback Functions
&lt;/h2&gt;

&lt;p&gt;By default, JavaScript runs code sequentially from top to bottom by completing one command line before starting the next.&lt;/p&gt;

&lt;p&gt;The evenNumbers() function we created is an example of a synchronous callback function.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#asynchronous-callback-functions"&gt;
  &lt;/a&gt;
  Asynchronous Callback Functions
&lt;/h2&gt;

&lt;p&gt;Asynchronicity means that JavaScript does not wait for the operation of a command line to complete before it starts executing the next line of the code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you are familiar with setTimeout, then you've been using callback functions all along!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the following example, we are going to use the setTimeout() method that only executes after 2 seconds ‒&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;In the example above, we used the setTimeout() method and called the greet() function to execute 2 seconds later. JavaScript starts counting 2 seconds. But meanwhile, it proceeds to the next command, which immediately displays 'Hello Oliver!'. Then after the 2 seconds are over, the greet() function is run, and displays 'Hello world!'. &lt;/p&gt;

&lt;p&gt;Therefore, even though the greet() function was called before the sayName() function, they were executed in reverse order.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-next%C2%A0step"&gt;
  &lt;/a&gt;
  The Next Step
&lt;/h2&gt;

&lt;p&gt;I hope this tutorial has helped you understand what callback functions are and how to use them as easily as functions!&lt;br&gt;
There is still much to learn about callback functions, so I encourage you to continue practicing and learning.&lt;/p&gt;




&lt;p&gt;To practice using callbacks, check out &lt;a href="https://link.codesphere.com/BY"&gt;Codesphere&lt;/a&gt;, an online code editor in which you can build, test, and deploy your apps all within a single tab of your browser.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 30th July 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 30 Jul 2021 13:41:06 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-30th-july-2021-bnc</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-30th-july-2021-bnc</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-trackingjs"&gt;
  &lt;/a&gt;
  1. tracking.js
&lt;/h3&gt;

&lt;p&gt;The tracking.js library brings different computer vision algorithms and techniques into the browser environment. By using modern HTML5 specifications, we enable you to do real-time color tracking, face detection and much more — all that with a lightweight core (~7 KB) and intuitive interface.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/eduardolundgren"&gt;
        eduardolundgren
      &lt;/a&gt; / &lt;a href="https://github.com/eduardolundgren/tracking.js"&gt;
        tracking.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A modern approach for Computer Vision on the web
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/eduardolundgren/tracking.js/master/banner.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c7xYMW5m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/eduardolundgren/tracking.js/master/banner.svg" alt="Banner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;
&lt;p&gt;👉 &lt;strong&gt;&lt;a href="https://github.com/eduardolundgren/tracking.js/issues/395"&gt;https://github.com/eduardolundgren/tracking.js/issues/395&lt;/a&gt;&lt;/strong&gt; 👈&lt;/p&gt;
&lt;/div&gt;

&lt;h1&gt;
tracking.js&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/eduardolundgren/tracking.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2dfe482f92cd5a20e5ddd3a1c11d165aded53464888fde2072fe6de96e4fbcf6/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f6564756172646f6c756e646772656e2f747261636b696e672e6a732e7376673f7374796c653d666c6174" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/eduardolundgren/tracking.js#info=devDependencies" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fa24b464ae2ea49fee34a0cf13b67410e4558531aed7c44aa0650758059f7f7d/687474703a2f2f696d672e736869656c64732e696f2f64617669642f6465762f6564756172646f6c756e646772656e2f747261636b696e672e6a732e7376673f7374796c653d666c6174" alt="DevDependencies Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The tracking.js library brings different computer vision algorithms and techniques into the browser environment. By using modern HTML5 specifications, we enable you to do real-time color tracking, face detection and much more — all that with a lightweight core (~7 KB) and intuitive interface.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://trackingjs.com" rel="nofollow"&gt;Official website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://trackingjs.com/docs.html" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://trackingjs.com/api/" rel="nofollow"&gt;API Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;p&gt;Install via &lt;a href="http://bower.io/" rel="nofollow"&gt;Bower&lt;/a&gt;, &lt;a href="https://www.npmjs.com/" rel="nofollow"&gt;npm&lt;/a&gt;, or &lt;a href="https://github.com/eduardolundgren/tracking.js/archive/master.zip"&gt;download as a zip&lt;/a&gt;:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;bower install tracking
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;npm install tracking
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Examples&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://trackingjs.com/examples/face_tag_friends.html" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Z1D731v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/398893/3709347/ec72876c-1453-11e4-8450-149d06d487f2.jpg" alt="Demo 1"&gt;&lt;/a&gt;
&lt;a href="http://trackingjs.com/examples/face_fish_tank.html" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J0WvKN8q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/398893/3709357/1a1c2e16-1454-11e4-804d-e6ada6c65997.jpg" alt="Demo 2"&gt;&lt;/a&gt;
&lt;a href="http://trackingjs.com/examples/color_hexgl.html" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wOxNmLGZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/398893/3709361/38f86e8a-1454-11e4-811d-52bd21b37e85.jpg" alt="Demo 3"&gt;&lt;/a&gt;
&lt;a href="http://trackingjs.com/examples/color_draw_something.html" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KJNItWli--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/398893/3709464/5447a302-1456-11e4-96b2-d2fae28e2a01.jpg" alt="Demo 4"&gt;&lt;/a&gt;
&lt;a href="http://trackingjs.com/examples/color_fish_tank.html" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Tiq-IP5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/398893/3709469/6a3e859a-1456-11e4-982a-d46a55890e1e.jpg" alt="Demo 5"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://trackingjs.com/docs.html#trackers" rel="nofollow"&gt;Trackers&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://trackingjs.com/docs.html#color-tracker" rel="nofollow"&gt;Color Tracker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://trackingjs.com/docs.html#object-tracker" rel="nofollow"&gt;Object Tracker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://trackingjs.com/docs.html#utilities" rel="nofollow"&gt;Utilities&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://trackingjs.com/docs.html#feature-detection" rel="nofollow"&gt;Feature Detection (Fast)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://trackingjs.com/docs.html#feature-descriptor" rel="nofollow"&gt;Feature Descriptor (Brief)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://trackingjs.com/docs.html#convolution" rel="nofollow"&gt;Convolution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://trackingjs.com/docs.html#gray-scale" rel="nofollow"&gt;Gray Scale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://trackingjs.com/docs.html#image-blur" rel="nofollow"&gt;Image Blur&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://trackingjs.com/docs.html#integral-image" rel="nofollow"&gt;Integral Image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://trackingjs.com/docs.html#sobel" rel="nofollow"&gt;Sobel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://trackingjs.com/docs.html#viola-jones" rel="nofollow"&gt;Viola Jones&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://trackingjs.com/docs.html#web-components" rel="nofollow"&gt;Web Components&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://trackingjs.com/docs.html#color-element" rel="nofollow"&gt;Color Element&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://trackingjs.com/docs.html#object-element" rel="nofollow"&gt;Object Element&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Browser Support&lt;/h2&gt;
&lt;p&gt;You can plug &lt;em&gt;tracking.js&lt;/em&gt; into some well supported HTML elements such as &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/398893/3528325/20373e76-078e-11e4-8e3a-1cb86cf506f0.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_c82fED9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/398893/3528325/20373e76-078e-11e4-8e3a-1cb86cf506f0.png" alt="IE"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/398893/3528328/23bc7bc4-078e-11e4-8752-ba2809bf5cce.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eud2Dysl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/398893/3528328/23bc7bc4-078e-11e4-8752-ba2809bf5cce.png" alt="Chrome"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/398893/3528329/26283ab0-078e-11e4-84d4-db2cf1009953.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cB3ew3ym--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/398893/3528329/26283ab0-078e-11e4-84d4-db2cf1009953.png" alt="Firefox"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/398893/3528330/27ec9fa8-078e-11e4-95cb-709fd11dac16.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tNW0SMKK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/398893/3528330/27ec9fa8-078e-11e4-95cb-709fd11dac16.png" alt="Opera"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/398893/3528331/29df8618-078e-11e4-8e3e-ed8ac738693f.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5RWeZ_R8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/398893/3528331/29df8618-078e-11e4-8e3e-ed8ac738693f.png" alt="Safari"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;IE 9+ ✔
&lt;/td&gt;
&lt;td&gt;Latest ✔
&lt;/td&gt;
&lt;td&gt;Latest ✔
&lt;/td&gt;
&lt;td&gt;Latest ✔
&lt;/td&gt;
&lt;td&gt;Latest ✔
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;However, the browser support may vary if you request the user's camera (which relies on &lt;a href="http://caniuse.com/#feat=stream" rel="nofollow"&gt;getUserMedia API&lt;/a&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/eduardolundgren/tracking.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#2-welcome-ui"&gt;
  &lt;/a&gt;
  2. Welcome UI
&lt;/h3&gt;

&lt;p&gt;Welcome to the Welcome UI library created by Welcome to the jungle, a customizable design system with react, styled-components, styled-system and reakit.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/WTTJ"&gt;
        WTTJ
      &lt;/a&gt; / &lt;a href="https://github.com/WTTJ/welcome-ui"&gt;
        welcome-ui
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Customizable design system of @wttj with react • styled-components • styled-system • reakit
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Welcome UI&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/WTTJ/welcome-ui/master/docs/public/illustration.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9fg2WRk1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/WTTJ/welcome-ui/master/docs/public/illustration.png" width="300"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Welcome to the &lt;em&gt;Welcome UI library&lt;/em&gt; created by &lt;a href="https://www.welcometothejungle.com" rel="nofollow"&gt;Welcome to the jungle&lt;/a&gt;, a customizable design system with react • styled-components • styled-system and reakit.&lt;/p&gt;
&lt;p&gt;Here you'll find all the core components you need to create a delightful webapp.&lt;/p&gt;
&lt;p&gt;🌴 &lt;a href="https://welcome-ui.com" rel="nofollow"&gt;Discover all the components&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/WTTJ/welcome-ui/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/7c3d302529a2054f54b29f489364d8cb66c883ecc25994b161b728bc207abe9c/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f77656c636f6d652d75692e737667" alt="License"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/96a65b603836722d6177a916708bdedc4e88f093b24c8a907a68d8e051c12d9d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6465253230666f726d6174696e672d70726574746965722d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/96a65b603836722d6177a916708bdedc4e88f093b24c8a907a68d8e051c12d9d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6465253230666f726d6174696e672d70726574746965722d626c75652e737667" alt="Code formating"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9f2038c6513488b38a31f31c82920ec478eafe0e6123150826ab6d3d7855751e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d7374796c65642d2d636f6d706f6e656e74732d6666363962342e737667"&gt;&lt;img src="https://camo.githubusercontent.com/9f2038c6513488b38a31f31c82920ec478eafe0e6123150826ab6d3d7855751e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d7374796c65642d2d636f6d706f6e656e74732d6666363962342e737667" alt="Code style"&gt;&lt;/a&gt; &lt;a href="https://github.com/WTTJ/welcome-ui/blob/master/CONTRIBUTING.mdx"&gt;&lt;img src="https://camo.githubusercontent.com/f677fb729d428823ee6adfc930e859ecb27eab2b72080031f406243cb64c047e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d6d656469756d737072696e67677265656e2e737667" alt="PRs Welcome"&gt;&lt;/a&gt; &lt;a href="https://conventionalcommits.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/74420c84a8cdfb2ed88abc162cde2dd9fc6dcf14f2ee0ec0779eb2cca98836e9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6e76656e74696f6e616c253230436f6d6d6974732d312e302e302d79656c6c6f772e737667" alt="Conventional Commits"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;1 - Install the &lt;strong&gt;peer dependencies&lt;/strong&gt; listed below:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;yarn add @xstyled/styled-components @xstyled/system prop-types react react-dom styled-components&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;2 - Install the the &lt;strong&gt;core&lt;/strong&gt; component and any other components you need for your webapp e.g. if you need just a button…&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;yarn add @welcome-ui/core @welcome-ui/button&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Import library &amp;amp; Theme&lt;/h2&gt;
&lt;p&gt;Getting started&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;React&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react'&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;createTheme&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-v"&gt;WuiProvider&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'@welcome-ui/core'&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;Button&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'@welcome-ui/button'&lt;/span&gt;
&lt;span class="pl-c"&gt;// Add theme options (if you want)&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;options&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;defaultFontFamily&lt;/span&gt;: &lt;span class="pl-s"&gt;'Helvetica'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;headingFontFamily&lt;/span&gt;: &lt;span class="pl-s"&gt;'Georgia'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;colors&lt;/span&gt;: &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;primary&lt;/span&gt;: &lt;span class="pl-kos"&gt;{&lt;/span&gt;
      &lt;span class="pl-c1"&gt;500&lt;/span&gt;: &lt;span class="pl-s"&gt;'#124C80'&lt;/span&gt;
    &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;success&lt;/span&gt;: &lt;span class="pl-kos"&gt;{&lt;/span&gt;
      &lt;span class="pl-c1"&gt;500&lt;/span&gt;: &lt;span class="pl-s"&gt;'#32CD32'&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/WTTJ/welcome-ui"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-waypoint"&gt;
  &lt;/a&gt;
  3. Waypoint
&lt;/h3&gt;

&lt;p&gt;Waypoint allows developers to define their application build, deploy, and release lifecycle as code, reducing the time to deliver deployments through a consistent and repeatable workflow.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/hashicorp"&gt;
        hashicorp
      &lt;/a&gt; / &lt;a href="https://github.com/hashicorp/waypoint"&gt;
        waypoint
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A tool to build, deploy, and release any application on any platform.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/hashicorp/waypoint/main/website/public/img/logo-fullcolor-whitebackground-rbg.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LUrXSg-x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/hashicorp/waypoint/main/website/public/img/logo-fullcolor-whitebackground-rbg.png" alt="Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
Waypoint&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://www.waypointproject.io" rel="nofollow"&gt;https://www.waypointproject.io&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Tutorials: &lt;a href="https://learn.hashicorp.com/waypoint" rel="nofollow"&gt;HashiCorp Learn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Forum: &lt;a href="https://discuss.hashicorp.com/c/waypoint" rel="nofollow"&gt;Discuss&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Waypoint allows developers to define their application build, deploy, and release lifecycle as code, reducing the time to deliver deployments through a consistent and repeatable workflow.&lt;/p&gt;
&lt;p&gt;Waypoint supports a number of build methods and target platforms out of the box
and more can be easily added via plugins:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cloud Native Buildpacks&lt;/li&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;li&gt;Kubernetes&lt;/li&gt;
&lt;li&gt;AWS EC2 and ECS&lt;/li&gt;
&lt;li&gt;Azure Container Instances&lt;/li&gt;
&lt;li&gt;Google Cloud Run&lt;/li&gt;
&lt;li&gt;And many more...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Waypoint runs on Linux, Mac OS X, and Windows.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Please note&lt;/strong&gt;: We take Waypoint's security and our users' trust very seriously. If you
believe you have found a security issue in Waypoint, please &lt;a href="https://www.hashicorp.com/security#vulnerability-reporting" rel="nofollow"&gt;responsibly disclose&lt;/a&gt; by
contacting us at &lt;a href="https://raw.githubusercontent.com/hashicorp/waypoint/main/mailto:security@hashicorp.com"&gt;security@hashicorp.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Quick Start&lt;/h2&gt;
&lt;p&gt;A few quick start guides are available on the &lt;a href="https://www.waypointproject.io/docs/getting-started" rel="nofollow"&gt;Waypoint website&lt;/a&gt;
and on &lt;a href="https://learn.hashicorp.com/waypoint" rel="nofollow"&gt;HashiCorp Learn&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.waypointproject.io/docs/getting-started" rel="nofollow"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.hashicorp.com/tutorials/waypoint/get-started-intro" rel="nofollow"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.hashicorp.com/tutorials/waypoint/get-started-install" rel="nofollow"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.hashicorp.com/tutorials/waypoint/get-started-docker" rel="nofollow"&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.hashicorp.com/tutorials/waypoint/get-started-kubernetes" rel="nofollow"&gt;Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.hashicorp.com/tutorials/waypoint/get-started-nomad" rel="nofollow"&gt;Nomad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.hashicorp.com/tutorials/waypoint/get-started-ui" rel="nofollow"&gt;Waypoint UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.hashicorp.com/tutorials/waypoint/aws-ecs" rel="nofollow"&gt;AWS ECS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.hashicorp.com/tutorials/waypoint/azure-container-instance" rel="nofollow"&gt;Azure Container Instance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://learn.hashicorp.com/tutorials/waypoint/google-cloud-run" rel="nofollow"&gt;Google Cloud&lt;/a&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/hashicorp/waypoint"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#4-vs-code-database-client"&gt;
  &lt;/a&gt;
  4. VS Code Database Client
&lt;/h3&gt;

&lt;p&gt;Database Client for Visual Studio Code. It supports databases MySQL/MariaDB, Microsoft SQL Server, PostgreSQL, SQLite, MongoDB, Redis, and ElasticSearch.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/cweijan"&gt;
        cweijan
      &lt;/a&gt; / &lt;a href="https://github.com/cweijan/vscode-database-client"&gt;
        vscode-database-client
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Database Client For Visual Studio Code
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Database Client&lt;/h1&gt;
&lt;p&gt;Database Client for Visual Studio Code. It supports databases MySQL/MariaDB, Microsoft SQL Server, PostgreSQL, SQLite, MongoDB, Redis, and ElasticSearch.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Project site: &lt;a href="https://github.com/cweijan/vscode-database-client"&gt;vscode-database-client&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/cweijan/vscode-database-client/master/README_CN.md"&gt;中文文档&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/cweijan/vscode-database-client/master/#database-client"&gt;Database Client&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cweijan/vscode-database-client/master/#connect"&gt;Connect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cweijan/vscode-database-client/master/#table"&gt;Table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cweijan/vscode-database-client/master/#execute-sql-query"&gt;Execute SQL Query&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cweijan/vscode-database-client/master/#generate-mock-data"&gt;Generate Mock Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cweijan/vscode-database-client/master/#history"&gt;History&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cweijan/vscode-database-client/master/#backupimport"&gt;Backup/Import&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cweijan/vscode-database-client/master/#setting"&gt;Setting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cweijan/vscode-database-client/master/#filter"&gt;Filter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;Install from vscode marketplace &lt;a href="https://marketplace.visualstudio.com/items?itemName=cweijan.vscode-mysql-client2" rel="nofollow"&gt;vscode-database-client&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Connect&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Open Database Explorer panel, then click the&lt;code&gt;+&lt;/code&gt; button.&lt;/li&gt;
&lt;li&gt;Select your database type, input connection config then click the connect button.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/cweijan/vscode-database-client/master/images/connection.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KPQzxw5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cweijan/vscode-database-client/master/images/connection.jpg" alt="connection"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Table&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Click table to open table view.&lt;/li&gt;
&lt;li&gt;Then you can do data modification on the view page.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/cweijan/vscode-database-client/master/images/QueryTable.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o_xHaNzo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cweijan/vscode-database-client/master/images/QueryTable.jpg" alt="query"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Execute SQL Query&lt;/h2&gt;
&lt;p&gt;In the Database Explorer panel, click the &lt;code&gt;Open Query&lt;/code&gt; button.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/cweijan/vscode-database-client/master/images/newquery.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H6FicuvU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cweijan/vscode-database-client/master/images/newquery.jpg" alt="newquery"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;That will open a sql editor bind of database, it provider:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;IntelliSense sql edit.&lt;/li&gt;
&lt;li&gt;snippets:&lt;code&gt;sel、del、ins、upd、joi&lt;/code&gt;...&lt;/li&gt;
&lt;li&gt;Run selected or current cursor sql (Shortcut : Ctrl+Enter).&lt;/li&gt;
&lt;li&gt;Run all sql (Shortcut : Ctrl+Shift+Enter).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/cweijan/vscode-database-client/master/images/run.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D5_AVrSz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cweijan/vscode-database-client/master/images/run.jpg" alt="run"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Generate Mock Data&lt;/h2&gt;
&lt;p&gt;You can easily generate test data.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/cweijan/vscode-database-client/master/images/mockData.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9DuStEdP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cweijan/vscode-database-client/master/images/mockData.jpg" alt="mockData"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
History&lt;/h2&gt;
&lt;p&gt;Click the history button to open the list…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/cweijan/vscode-database-client"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#5-create-eth-app"&gt;
  &lt;/a&gt;
  5. Create Eth App
&lt;/h3&gt;

&lt;p&gt;Create Ethereum-powered apps with one command.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/paulrberg"&gt;
        paulrberg
      &lt;/a&gt; / &lt;a href="https://github.com/paulrberg/create-eth-app"&gt;
        create-eth-app
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Create Ethereum-powered apps with one command
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Create Eth App &lt;a href="https://prettier.io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/48a41f43affa2e6253d6a48e0ee662ec53ce13c46442ac815e81d36b6e6b434d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64655f7374796c652d70726574746965722d6666363962342e737667" alt="Styled with Prettier"&gt;&lt;/a&gt; &lt;a href="http://commitizen.github.io/cz-cli/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aca3301042bdedae125df537db587fe82c2123dc8a2c46f0859840b5fa4b7f1a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6d6d6974697a656e2d667269656e646c792d627269676874677265656e2e737667" alt="Commitizen Friendly"&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/78f47a09877ba9d28da1887a93e5c3bc2efb309c1e910eb21135becd2998238a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667" alt="License: MIT"&gt;&lt;/a&gt; &lt;a href="https://github.com/facebook/create-react-app/blob/master/CONTRIBUTING.md"&gt;&lt;img src="https://camo.githubusercontent.com/7c0ba324ca86899e51bd333f373b37b8939d40a263fa734f091f992bdc7fdd9b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d626c75652e737667" alt="PRs Welcome"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Create Ethereum-powered apps with one command.&lt;/p&gt;
&lt;p&gt;Create Eth App works on macOS, Windows, and Linux.&lt;br&gt;
If something doesn’t work, please &lt;a href="https://github.com/paulrberg/create-eth-app/issues/new"&gt;file an issue&lt;/a&gt;.&lt;br&gt;
If you have questions or need help, please ask in our &lt;a href="https://discord.gg/bsS8T47" rel="nofollow"&gt;Discord&lt;/a&gt; community.&lt;/p&gt;
&lt;h2&gt;
Quick Overview&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;yarn create eth-app my-eth-app
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; my-eth-app
yarn react-app:start&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;If you've previously installed &lt;code&gt;create-eth-app&lt;/code&gt; globally via &lt;code&gt;yarn global add create-eth-app&lt;/code&gt;, we recommend you
uninstall the package using &lt;code&gt;yarn global remove create-eth-app&lt;/code&gt; and use the &lt;code&gt;yarn create eth-app&lt;/code&gt; shorthand to ensure that you use the last version.&lt;/p&gt;
&lt;p&gt;Then open &lt;a href="http://localhost:3000/" rel="nofollow"&gt;http://localhost:3000/&lt;/a&gt; to see your app.&lt;br&gt;
When you’re ready to deploy to production, create a minified bundle with &lt;code&gt;yarn run react-app:build&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/paulrberg/create-eth-app/develop/./screencast.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hF4sTEu---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/paulrberg/create-eth-app/develop/./screencast.gif" width="600" alt="yarn react-app:start"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
Creating an App&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;You’ll need to have Node 8.16.0 or Node 10.16.0 or later version on your local development machine&lt;/strong&gt; (but it’s not required on the server). You can use &lt;a href="https://github.com/creationix/nvm#installation"&gt;nvm&lt;/a&gt; (macOS/Linux) or &lt;a href="https://github.com/coreybutler/nvm-windows#node-version-manager-nvm-for-windows"&gt;nvm-windows&lt;/a&gt; to switch Node versions between…&lt;/p&gt;
&lt;/div&gt;


&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/paulrberg/create-eth-app"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#6-jsii"&gt;
  &lt;/a&gt;
  6. JSii
&lt;/h3&gt;

&lt;p&gt;jsii allows code in any language to naturally interact with JavaScript classes. It is the technology that enables the AWS Cloud Development Kit to deliver polyglot libraries from a single codebase!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/aws"&gt;
        aws
      &lt;/a&gt; / &lt;a href="https://github.com/aws/jsii"&gt;
        jsii
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      jsii allows code in any language to naturally interact with JavaScript classes. It is the technology that enables the AWS Cloud Development Kit to deliver polyglot libraries from a single codebase!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/aws/jsii/main/./logo/png/128.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jcv4H4oz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/aws/jsii/main/./logo/png/128.png" alt="jsii"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://cdk.dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/77f72ca5a7f8e06ee5be5981b9db9ad36731ec4a2bbf10918dde04a09ddeb2d0/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d536c61636b266d6573736167653d63646b2e64657626636f6c6f723d627269676874677265656e266c6f676f3d736c61636b" alt="Join the chat at https://cdk.Dev"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/aws/jsii/main/#contributors-"&gt;&lt;img src="https://camo.githubusercontent.com/6e82457b7261ec730ecd636f553d8b2118715ad8bda6d89aa99eeda80bd1d9dd/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616c6c2d636f6e7472696275746f72732f6177732f6a7369692f6d61696e3f6c6162656c3d254532253943254138253230416c6c253230436f6e7472696275746f7273" alt="All Contributors"&gt;&lt;/a&gt;
&lt;a href="https://github.com/aws/jsii/actions?query=workflow%3AMain+branch%3Amain"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eAtDDLD_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws/jsii/workflows/Main/badge.svg" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/jsii" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ae1430366f8227660b6bc0a03e7025a866626c5ab61a9bb72887c40b1d44b09b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6a7369693f6c6f676f3d6e706d" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://hub.docker.com/r/jsii/superchain" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80b1a3645b3490b03ce5248d931b2586b64f355d12ddbe70ba2407173e4a4e66/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f636b65722d6a7369692532467375706572636861696e2d627269676874677265656e3f6c6f676f3d646f636b6572" alt="docker"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Overview&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;jsii&lt;/code&gt; allows code in any language to naturally interact with JavaScript classes. It is the technology that enables the
&lt;a href="https://github.com/aws/aws-cdk"&gt;AWS Cloud Development Kit&lt;/a&gt; to deliver polyglot libraries from a single codebase!&lt;/p&gt;
&lt;p&gt;A class library written in &lt;strong&gt;TypeScript&lt;/strong&gt; can be used in projects authored in &lt;strong&gt;TypeScript&lt;/strong&gt; or &lt;strong&gt;Javascript&lt;/strong&gt; (as
usual), but also in &lt;strong&gt;Python&lt;/strong&gt;, &lt;strong&gt;Java&lt;/strong&gt;, &lt;strong&gt;C#&lt;/strong&gt; (and other languages from the &lt;em&gt;.NET&lt;/em&gt; family), ...&lt;/p&gt;
&lt;h2&gt;
❓ Documentation&lt;/h2&gt;
&lt;p&gt;Head over to our &lt;a href="https://aws.github.io/jsii" rel="nofollow"&gt;documentation website&lt;/a&gt;!&lt;/p&gt;
&lt;h1&gt;
📖 Blog Posts&lt;/h1&gt;
&lt;p&gt;Here's a collection of blog posts (in chronological order) related to &lt;code&gt;jsii&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;2020-01-11:&lt;/strong&gt; &lt;a id="user-content-blog-mbonig" href="https://raw.githubusercontent.com/aws/jsii/main/"&gt; &lt;/a&gt;&lt;a href="https://www.matthewbonig.com/2020/01/11/creating-constructs/" rel="nofollow"&gt;How to Create CDK Constructs&lt;/a&gt;, by &lt;a href="http://www.matthewbonig.com/" rel="nofollow"&gt;Matthew Bonig&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;2020-05-27:&lt;/strong&gt; &lt;a id="user-content-blog-floydpink" href="https://raw.githubusercontent.com/aws/jsii/main/"&gt; &lt;/a&gt;&lt;a href="https://aws.amazon.com/fr/blogs/opensource/generate-python-java-dotnet-software-libraries-from-typescript-source/" rel="nofollow"&gt;Generate Python, Java, and .NET software libraries from a TypeScript
source&lt;/a&gt;, by &lt;a href="https://harimenon.com/" rel="nofollow"&gt;Hari Pachuveetil&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;2020-12-23:&lt;/strong&gt; &lt;a id="user-content-blog-romainmuller" href="https://raw.githubusercontent.com/aws/jsii/main/"&gt; &lt;/a&gt;&lt;a href="https://aws.amazon.com/blogs/opensource/how-the-jsii-open-source-framework-meets-developers-where-they-are/" rel="nofollow"&gt;How the jsii open source framework meets developers where they are
&lt;/a&gt;, by &lt;a href="https://github.com/RomainMuller"&gt;Romain Marcadier&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;ℹ️ If you wrote blog posts about &lt;code&gt;jsii&lt;/code&gt; and would like to have them referenced here, do…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/aws/jsii"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#7-flagiconcss"&gt;
  &lt;/a&gt;
  7. flag-icon-css
&lt;/h3&gt;

&lt;p&gt;A collection of all country flags in SVG — plus the CSS for easier integration&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/lipis"&gt;
        lipis
      &lt;/a&gt; / &lt;a href="https://github.com/lipis/flag-icon-css"&gt;
        flag-icon-css
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🎏 A collection of all country flags in SVG — plus the CSS for easier integration
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
flag-icon-css&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;A collection of all country flags in SVG — plus the CSS for easier integration
See the &lt;a href="https://flagicons.lipis.dev" rel="nofollow"&gt;demo&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;p&gt;You can either &lt;a href="https://github.com/lipis/flag-icon-css/archive/master.zip"&gt;download&lt;/a&gt;
the whole project as is or install it via Bower or NPM:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;$ bower install flag-icon-css
$ npm install flag-icon-css&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;For using the flags inline with text add the classes &lt;code&gt;.flag-icon&lt;/code&gt; and
&lt;code&gt;.flag-icon-xx&lt;/code&gt; (where &lt;code&gt;xx&lt;/code&gt; is the
&lt;a href="https://www.iso.org/obp/ui/#search/code/" rel="nofollow"&gt;ISO 3166-1-alpha-2 code&lt;/a&gt;
of a country) to an empty &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;. If you want to have a squared version flag
then add the class &lt;code&gt;flag-icon-squared&lt;/code&gt; as well. Example:&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;span&lt;/span&gt; &lt;span class="pl-c1"&gt;class&lt;/span&gt;="&lt;span class="pl-s"&gt;flag-icon flag-icon-gr&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;span&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;span&lt;/span&gt; &lt;span class="pl-c1"&gt;class&lt;/span&gt;="&lt;span class="pl-s"&gt;flag-icon flag-icon-gr flag-icon-squared&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;span&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;You could also apply this to any element, but in that case you'll have to use the
&lt;code&gt;flag-icon-background&lt;/code&gt; instead of &lt;code&gt;flag-icon&lt;/code&gt; and you're set. This will add the
correct background with the following CSS properties:&lt;/p&gt;
&lt;div class="highlight highlight-source-css position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c1"&gt;background-size&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/lipis/flag-icon-css"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#8-mermaid"&gt;
  &lt;/a&gt;
  8. Mermaid
&lt;/h3&gt;

&lt;p&gt;Generation of diagram and flowchart from text in a similar manner as markdown &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mermaid-js"&gt;
        mermaid-js
      &lt;/a&gt; / &lt;a href="https://github.com/mermaid-js/mermaid"&gt;
        mermaid
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Generation of diagram and flowchart from text in a similar manner as markdown
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
mermaid &lt;a href="https://travis-ci.org/mermaid-js/mermaid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0d7e7effeff169cc55aeade60bb087abcc507122e8d5ab7d8dba780590029d75/68747470733a2f2f7472617669732d63692e6f72672f6d65726d6169642d6a732f6d65726d6169642e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/mermaid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7da8b7965d1f5f3cadbdf9f4ef9983b1da2a7f1fbc22a9bf0ac7a305eba5959e/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6d65726d616964" alt="NPM"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/github/mermaid-js/mermaid?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9e5716a33036665843728776991d398c189d6fc61dc5a4bd91de686ef6a3bc7e/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d65726d6169642d6a732f6d65726d6169642f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status"&gt;&lt;/a&gt; &lt;a href="https://join.slack.com/t/mermaid-talk/shared_invite/enQtNzc4NDIyNzk4OTAyLWVhYjQxOTI2OTg4YmE1ZmJkY2Y4MTU3ODliYmIwOTY3NDJlYjA0YjIyZTdkMDMyZTUwOGI0NjEzYmEwODcwOTE" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eaa8f296d1ffaf8630076d6af62392be1d03e86c7c21fcb258f9a2b17a26fa73/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6d6573736167653d6a6f696e2532306368617426636f6c6f723d396366266c6f676f3d736c61636b266c6162656c3d736c61636b" alt="Join our Slack!"&gt;&lt;/a&gt; &lt;a href="https://percy.io/Mermaid/mermaid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b5059bda3f1e150a4efde71c4764a36049ea24135156d700e3d1587e6cd8f03b/68747470733a2f2f70657263792e696f2f7374617469632f696d616765732f70657263792d62616467652e737667" alt="This project is using Percy.io for visual regression testing."&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/mermaid-js/mermaid/develop/./img/header.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---1jtpLL_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/mermaid-js/mermaid/develop/./img/header.png" alt="banner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;🏆 &lt;strong&gt;Mermaid was nominated and won the &lt;a href="https://osawards.com/javascript/2019" rel="nofollow"&gt;JS Open Source Awards (2019)&lt;/a&gt; in the category "The most exciting use of technology"!!!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Thanks to all involved, people committing pull requests, people answering questions! 🙏&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
About&lt;/h2&gt;
&lt;p&gt;Mermaid is a Javascript based diagramming and charting tool that uses Markdown-inspired text definitions and a renderer to create and modify complex diagrams.  The main purpose of Mermaid is to help documentation catch up with development.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Doc-Rot is a Catch-22 that Mermaid helps to solve.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Diagramming and documentation costs precious developer time and gets outdated quickly
But not having diagrams or docs ruins productivity and hurts organizational learning. &lt;br&gt;
Mermaid addresses this problem by cutting the time, effort and tooling that is required to create modifiable diagrams and charts, for smarter and more reusable content
The text definitions for Mermaid diagrams allows for it to be updated easily, it can also be made part of production…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mermaid-js/mermaid"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#9-babylonjs"&gt;
  &lt;/a&gt;
  9. Babylon.js
&lt;/h3&gt;

&lt;p&gt;Babylon.js is a powerful, beautiful, simple, and open game and rendering engine packed into a friendly JavaScript framework. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/BabylonJS"&gt;
        BabylonJS
      &lt;/a&gt; / &lt;a href="https://github.com/BabylonJS/Babylon.js"&gt;
        Babylon.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Babylon.js is a powerful, beautiful, simple, and open game and rendering engine packed into a friendly JavaScript framework.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Babylon.js&lt;/h1&gt;
&lt;p&gt;Getting started? Play directly with the Babylon.js API using our &lt;a href="https://playground.babylonjs.com/" rel="nofollow"&gt;playground&lt;/a&gt;. It also contains a lot of samples to learn how to use it.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://badge.fury.io/js/babylonjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/df71cfd7e712177705d052f40735126af6690378961a7104a64da8aa7654a3f3/68747470733a2f2f62616467652e667572792e696f2f6a732f626162796c6f6e6a732e737667" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/babylonjs/ContinousIntegration/_build/latest?definitionId=1&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1359a4c9ddcece577e36590e8c1717e14b88c565ab3363ce3db26e44da5b3bf4/68747470733a2f2f6465762e617a7572652e636f6d2f626162796c6f6e6a732f436f6e74696e6f7573496e746567726174696f6e2f5f617069732f6275696c642f7374617475732f43493f6272616e63684e616d653d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="http://isitmaintained.com/project/BabylonJS/Babylon.js" title="Average time to resolve an issue" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5bc9324b6c6cf75063681fa0c9535f92efa2a28a202e21b4b29421b4f00a3f3f/687474703a2f2f697369746d61696e7461696e65642e636f6d2f62616467652f7265736f6c7574696f6e2f426162796c6f6e4a532f426162796c6f6e2e6a732e737667" alt="Average time to resolve an issue"&gt;&lt;/a&gt;
&lt;a href="https://isitmaintained.com/project/babylonJS/babylon.js" title="Percentage of issues still open" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c46a699cad4de04cafb76af52f73b34eb4b4e0b94d8b569b97f2dfd96d2b75e1/68747470733a2f2f697369746d61696e7461696e65642e636f6d2f62616467652f6f70656e2f626162796c6f6e4a532f626162796c6f6e2e6a732e737667" alt="Percentage of issues still open"&gt;&lt;/a&gt;
&lt;a href="https://img.badgesize.io/BabylonJS/Babylon.js/master/dist/preview%20release/babylon.js.svg?compression=gzip" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c59bc7b3af6f58fe97dd0ad96d6401c7c340708ee290238eec3372a5b489fe4e/68747470733a2f2f696d672e626164676573697a652e696f2f426162796c6f6e4a532f426162796c6f6e2e6a732f6d61737465722f646973742f7072657669657725323072656c656173652f626162796c6f6e2e6a732e7376673f636f6d7072657373696f6e3d677a6970" alt="Build Size"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/intent/follow?screen_name=babylonjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/69af60c8ccc5b072db79002809eed2c200e54f90961fefa2d035280e6853a345/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f626162796c6f6e6a732e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77" alt="Twitter"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/7ece69f0da9a479764c62443022d013462d18afae57b68a4e0e3b52750006ad4/68747470733a2f2f696d672e736869656c64732e696f2f646973636f757273652f75736572733f7365727665723d6874747073253341253246253246666f72756d2e626162796c6f6e6a732e636f6d"&gt;&lt;img src="https://camo.githubusercontent.com/7ece69f0da9a479764c62443022d013462d18afae57b68a4e0e3b52750006ad4/68747470733a2f2f696d672e736869656c64732e696f2f646973636f757273652f75736572733f7365727665723d6874747073253341253246253246666f72756d2e626162796c6f6e6a732e636f6d" alt="Discourse users"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Any questions?&lt;/strong&gt; Here is our official &lt;a href="https://forum.babylonjs.com/" rel="nofollow"&gt;forum&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
CDN&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cdn.babylonjs.com/babylon.js" rel="nofollow"&gt;https://cdn.babylonjs.com/babylon.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cdn.babylonjs.com/babylon.max.js" rel="nofollow"&gt;https://cdn.babylonjs.com/babylon.max.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additional references can be found on &lt;a href="https://cdn.babylonjs.com/xxx" rel="nofollow"&gt;https://cdn.babylonjs.com/xxx&lt;/a&gt; where &lt;code&gt;xxx&lt;/code&gt; is the folder structure you can find in the /dist folder like &lt;a href="https://cdn.babylonjs.com/gui/babylon.gui.min.js" rel="nofollow"&gt;https://cdn.babylonjs.com/gui/babylon.gui.min.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For the preview release, use the following URLs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://preview.babylonjs.com/babylon.js" rel="nofollow"&gt;https://preview.babylonjs.com/babylon.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://preview.babylonjs.com/babylon.max.js" rel="nofollow"&gt;https://preview.babylonjs.com/babylon.max.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additional references can be found on &lt;a href="https://preview.babylonjs.com/xxx" rel="nofollow"&gt;https://preview.babylonjs.com/xxx&lt;/a&gt; where xxx is the folder structure you can find in the /dist/preview release folder like &lt;a href="https://preview.babylonjs.com/gui/babylon.gui.min.js" rel="nofollow"&gt;https://preview.babylonjs.com/gui/babylon.gui.min.js&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
npm&lt;/h2&gt;
&lt;p&gt;BabylonJS and its modules are published on npm with full typing support. To install, use:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;npm install babylonjs --save
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will allow you to import BabylonJS entirely using:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-c1"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;BABYLON&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'babylonjs'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;or individual classes using:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;Scene&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-v"&gt;Engine&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'babylonjs'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;If using TypeScript, don't forget to add 'babylonjs' to…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/BabylonJS/Babylon.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#10-dinerojs"&gt;
  &lt;/a&gt;
  10. Dinero.js
&lt;/h3&gt;

&lt;p&gt;Money is complex, and the primitives of the language aren't enough to properly represent it. Dinero.js is a JavaScript library that lets you express monetary values, but also perform mutations, conversions, comparisons, formatting, and overall make money manipulation easier and safer in your application.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/dinerojs"&gt;
        dinerojs
      &lt;/a&gt; / &lt;a href="https://github.com/dinerojs/dinero.js"&gt;
        dinero.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Create, calculate, and format money in JavaScript and TypeScript.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://v2.dinerojs.com/docs" rel="nofollow"&gt;
    &lt;img alt="Dinero.js" src="https://res.cloudinary.com/practicaldev/image/fetch/s--R9L_J8YH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/dinerojs/dinero.js/main/.github/banner.png"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://www.npmjs.com/package/dinero.js?activeTab=versions" rel="nofollow"&gt;&lt;img alt="Stability: alpha" src="https://camo.githubusercontent.com/d6941b3cbb65bb62764d1dbe8270071a0464c8ec8ea83b41031a81f335ddc46f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73746162696c6974792d616c7068612d6634643033662e737667"&gt;&lt;/a&gt;
  &lt;a href="https://circleci.com/gh/dinerojs/dinero.js" rel="nofollow"&gt;&lt;img alt="CircleCI" src="https://camo.githubusercontent.com/5abcd47ea24e13bba2cf4a9e464a80228aa9b471768c35c3145d99afe2c49a20/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f6275696c642f67682f64696e65726f6a732f64696e65726f2e6a73"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/dinerojs/dinero.js/blob/master/LICENSE"&gt;&lt;img alt="NPM" src="https://camo.githubusercontent.com/f1c906234d046fba23ccdeac2fd04fcffe1e6b4e889c76259bd816c90f1768a7/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f64696e65726f2e6a73"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  Dinero.js lets you create, calculate, and format money safely in JavaScript and TypeScript.&lt;br&gt;
  &lt;a href="https://v2.dinerojs.com/docs" rel="nofollow"&gt;&lt;strong&gt;v2.dinerojs.com/docs&lt;/strong&gt;&lt;/a&gt;
&lt;/p&gt;




&lt;p&gt;Money is complex, and the primitives of the language aren't enough to properly represent it. Dinero.js is a JavaScript library that lets you express monetary values, but also perform mutations, conversions, comparisons, formatting, and overall make money manipulation easier and safer in your application.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ℹ️ Dinero.js v2 is currently in alpha. For v1, check the &lt;a href="https://github.com/dinerojs/dinero.js/tree/v1"&gt;&lt;code&gt;v1&lt;/code&gt; branch&lt;/a&gt; and &lt;a href="https://v1.dinerojs.com/" rel="nofollow"&gt;docs&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
📦 Install&lt;/h2&gt;

&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install dinero.js@alpha
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or&lt;/span&gt;

yarn add dinero.js@alpha&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
⚡️ Quick start&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Dinero&lt;/code&gt; objects are minimal. Every function in &lt;code&gt;dinero.js&lt;/code&gt; is side-effect free, allowing you only to bundle exactly what you use.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;USD&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'@dinero.js/currencies'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;dinero&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;add&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'dinero.js'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;d1&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;dinero&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;amount&lt;/span&gt;: &lt;span class="pl-c1"&gt;500&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;currency&lt;/span&gt;: &lt;span class="pl-c1"&gt;USD&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;d2&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;dinero&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;amount&lt;/span&gt;: &lt;span class="pl-c1"&gt;800&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;currency&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/dinerojs/dinero.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  Top risers over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +2,546 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +2,509 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nocodb/nocodb"&gt;NocoDB&lt;/a&gt; +1,038 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/alan2207/bulletproof-react"&gt;Bulletproof React&lt;/a&gt; +1,037 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/supabase/supabase"&gt;Supabase&lt;/a&gt; +735 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/alan2207/bulletproof-react"&gt;Bulletproof React&lt;/a&gt; +71%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bring-shrubbery/use-cookie-consent"&gt;useCookieConsent&lt;/a&gt; +34%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/junhoyeo/use-color"&gt;use-color&lt;/a&gt; +25%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/vechai/vechaiui"&gt;Vechai UI&lt;/a&gt; +17%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/elad2412/the-new-css-reset"&gt;The New CSS Reset&lt;/a&gt; +15%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  Top risers over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +11,622 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +5,094 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;JavaScript Algorithms&lt;/a&gt; +3,408 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/solidjs/solid"&gt;Solid&lt;/a&gt; +3,121 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +3,080 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/ossf/scorecard"&gt;Security Scorecards&lt;/a&gt; +179%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/NoQuarterTeam/boilerplate"&gt;Fullstack Boilerplate&lt;/a&gt; +171%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/netlify/framework-info"&gt;Framework Info&lt;/a&gt; +147%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/snowpackjs/astro"&gt;Astro&lt;/a&gt; +72%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bradtraversy/50projects50days"&gt;50 Projects in 50 Days&lt;/a&gt; +65%&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/iain_freestone"&gt;follow me&lt;/a&gt; on Twitter where I regularly post bite size tips relating to HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Help a teacher. Become a better developer.</title>
      <author>Alvaro Montoro</author>
      <pubDate>Fri, 30 Jul 2021 13:19:18 +0000</pubDate>
      <link>https://dev.to/alvaromontoro/help-a-teacher-become-a-better-developer-16dp</link>
      <guid>https://dev.to/alvaromontoro/help-a-teacher-become-a-better-developer-16dp</guid>
      <description>&lt;p&gt;Teachers play a key role in our communities. They sacrifice their time, their money, and much more for their students. And, more often than not, their efforts are not as recognized and appreciated as they deserve.&lt;/p&gt;

&lt;p&gt;While fixing this situation requires systemic changes, there are some ways in which software developers can help. And in the end, it can be a mutually beneficial collaboration.&lt;/p&gt;

&lt;p&gt;I often talk to teachers (my wife is one), and most have great ideas for apps and games for their classrooms. But unfortunately, many don't have the resources available or the technical practice to turn them into reality. And that's where developers need to step up.&lt;/p&gt;

&lt;p&gt;We can help them. And teaming up with teachers is a win-win:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Teachers will get valuable assets for their classrooms that will help them present lessons in innovative ways.&lt;/li&gt;
&lt;li&gt;Developers will earn experience developing real-life projects, working with clients, and testing new technologies.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These collaborations are not fully altruistic. Apart from being rewarding, developers will benefit from the exchange: experience, demos, a portfolio... all while helping a greater cause.&lt;/p&gt;

&lt;p&gt;The apps that teachers require are a nice break from the work routine or the school projects. They spark creativity and encourage research and learning. Teachers don't need to-do lists, tic-tac-toes, or Netflix clones that no one will ever see. Instead, they need something practical that dozens of students will use. &lt;/p&gt;

&lt;p&gt;The projects may be simple, but they are perfect for developers of all levels (especially for beginners). And there's always the satisfaction of knowing that your work is being utilized and that there are people that find it extremely helpful.&lt;/p&gt;

&lt;p&gt;Over the years and alongside my wife, we have developed many apps and mini-games for her Spanish classes. Some examples are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An 8-ball with personalized expressions.&lt;/li&gt;
&lt;li&gt;A webpage for students to practice verb conjugations.&lt;/li&gt;
&lt;li&gt;An app to reorder and complete sentences.&lt;/li&gt;
&lt;li&gt;A fill-in-the-gaps using songs and videos.&lt;/li&gt;
&lt;li&gt;A virtual assistant that listens to the students and answers questions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each of them helped me learn/practice new things: randomization, multimedia integration, third-party and Web APIs, drag-and-drop, etc., along with the core concepts of programming: loops, conditionals, data structures, events, asynchronous functions... Plus, they were fun to develop.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B7Vzj2xX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/edozxm05yr83jcy4667k.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B7Vzj2xX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/edozxm05yr83jcy4667k.jpg" alt="Cartoon version of Frida Kahlo"&gt;&lt;/a&gt;&lt;/p&gt;
Frida is a &lt;a href="https://codepen.io/alvaromontoro/full/gOWorVj"&gt;virtual teacher assistant&lt;/a&gt; that helps during Spanish class. It was&lt;br&gt;developed in vanilla JavaScript using Web APIs and basic control structures.&lt;br&gt; 



&lt;p&gt;These are apps that require similar skills as the classic learning projects but have a cool edge that will impress friends, colleagues, and even recruiters.&lt;/p&gt;

&lt;p&gt;So, next time you sit down in front of your computer, thinking &lt;em&gt;What should I build next?&lt;/em&gt;, don't look at the same old threads with the same old dull learning project ideas. Reach out to a teacher friend! Ask them what they need. They’ll give you ideas.&lt;/p&gt;

&lt;p&gt;Teachers inspire students daily, and they can be a great source of inspiration for developers too.&lt;/p&gt;

</description>
      <category>career</category>
      <category>codenewbie</category>
      <category>watercooler</category>
      <category>discuss</category>
    </item>
    <item>
      <title>How programming is better with TypeScript ?</title>
      <author>Kat Holder</author>
      <pubDate>Fri, 30 Jul 2021 13:17:33 +0000</pubDate>
      <link>https://dev.to/katholder/how-programming-is-better-with-typescript-ji0</link>
      <guid>https://dev.to/katholder/how-programming-is-better-with-typescript-ji0</guid>
      <description>&lt;p&gt;TypeScript is a typed superset of JavaScript by definition. As a result, all current JavaScript is TypeScript compliant. Also, you may transform an existing JavaScript project to include type definitions and other language qualities that make long-term project upkeep and scaling much effective and simpler.&lt;/p&gt;

&lt;p&gt;TypeScript includes a compiler that converts a .ts file (which cannot be viewed in a browser) to a .js file (which is vanilla JavaScript), as if we had written the entire project in JavaScript. It is quite useful to include this layer of 'convenience' above JavaScript code.&lt;/p&gt;

&lt;p&gt;There has been a lot of comparison between &lt;a href="https://codersera.com/blog/typescript-vs-javascript/"&gt;TypeScript &amp;amp; JavaScript&lt;/a&gt; &amp;amp; also a lot of confusion as to which one to learn. However, in this article we will talk about TypeSCript &amp;amp; why it is loved by the programmers.&lt;/p&gt;

&lt;h2&gt;Key Concepts in TypeScript&lt;/h2&gt;

&lt;p&gt;There are three things that make Typescript so useful:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Types &lt;/li&gt;
&lt;li&gt;Interfaces&lt;/li&gt;
&lt;li&gt; Classes and OOP&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As a JavaScript developer, TypeScript will help you to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;boosting your confidence&lt;/li&gt;
&lt;li&gt;catching errors before they reach production&lt;/li&gt;
&lt;li&gt;making it possible to refactor code&lt;/li&gt;
&lt;li&gt;saving you time from writing tests&lt;/li&gt;
&lt;li&gt;giving you a good coding experience&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When working with new codebases and in larger teams, TypeScript will give you more confidence. You will be less concerned if you are familiar with TypeScript and join a new team or project that uses it. You can count on TypeScript to help you out. Because you can look at something and quickly infer how it works, the language improves code readability and predictability. The type system is to blame for this.&lt;/p&gt;

&lt;p&gt;Because TypeScript will detect errors for you, refactoring code becomes easy. When you rename a function, it will warn you if you fail to use the new name someplace else. TypeScript will correct you if you change the form of an interface or type and eliminate a property that you thought wasn't being utilised.&lt;/p&gt;

&lt;p&gt;In essence, TypeScript is a JS linter. Alternatively, JS with compiler-friendly documentation.&lt;/p&gt;

&lt;p&gt;As a result, unlike other languages like CoffeeScript (which adds syntactic sugar) or PureScript (which looks nothing like JavaScript), you don't need to know much to get started creating TypeScript code.&lt;/p&gt;

&lt;p&gt;Types are unnecessary in TypeScript, and any JS file is a valid TypeScript file. While the compiler will warn if your starting files contain type problems, it will return a JavaScript file that works as it did before. TypeScript will meet you wherever you are, and it's simple to improve your skills over time.&lt;/p&gt;

&lt;p&gt;Nevertheless, even if you don't use TypeScript to its full potential, it's a useful tool to have in your toolbox. It's simple to start small and gradually expand your capabilities, learning and adding new features as you go. There's no need to be terrified of TypeScript because it's practical and accommodating to beginners.&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>javascript</category>
      <category>programming</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>JS - Mocking a GraphQL API with GraphQL Faker</title>
      <author>Pablo Veiga</author>
      <pubDate>Fri, 30 Jul 2021 13:01:13 +0000</pubDate>
      <link>https://dev.to/vcpablo/js-mocking-a-graphql-api-with-graphql-faker-25i5</link>
      <guid>https://dev.to/vcpablo/js-mocking-a-graphql-api-with-graphql-faker-25i5</guid>
      <description>&lt;p&gt;Mock API's are very useful when you need to "hit the ground running" with the front-end of a project. There are times when we need to have something visual to validate an idea with a client or to move forward with the interface while the back end is still being built.&lt;/p&gt;

&lt;p&gt;Two weeks ago I published another article about it, explaining &lt;a href="https://dev.to/vcpablo/js-mocking-a-rest-api-with-json-server-368"&gt;how to mock a REST API using JSON Server&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;TL;DR&lt;/p&gt;

&lt;p&gt;This time I'm going to write about how to mock a &lt;a href="https://graphql.org/"&gt;GraphQL&lt;/a&gt; API using &lt;a href="https://github.com/APIs-guru/graphql-faker"&gt;GraphQL Faker&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#graphql"&gt;
  &lt;/a&gt;
  GraphQL
&lt;/h3&gt;

&lt;p&gt;Assuming you already know the basics of how GraphQL works, I'm not going to dive deep into its details. But, just to contextualize this article, according to &lt;a href="https://graphql.org/"&gt;GraphQL official website&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Apps using GraphQL are fast and stable because they control the data they get, not the server.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#mocking-a-graphql-api"&gt;
  &lt;/a&gt;
  Mocking a GraphQL API
&lt;/h3&gt;

&lt;p&gt;Building a fake GraphQL API is not difficult at all and all you need to do is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;install &lt;a href="https://github.com/APIs-guru/graphql-faker"&gt;GraphQL Faker&lt;/a&gt; package;&lt;/li&gt;
&lt;li&gt;configure a &lt;code&gt;.graphql&lt;/code&gt; file containing the schema definitions (types, inputs, queries and mutations);&lt;/li&gt;
&lt;li&gt;take advantage of the &lt;a href="https://github.com/marak/Faker.js/"&gt;Faker JS&lt;/a&gt; extension to easily mock contextualized data.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#installing-graphql-faker"&gt;
  &lt;/a&gt;
  Installing GraphQL Faker
&lt;/h4&gt;

&lt;p&gt;First, add GraphQL Faker package to your project.&lt;br&gt;
If you need to build a VueJS project but you don't know where to start from, check &lt;a href="https://dev.to/vcpablo/vuejs-one-more-way-of-structuring-your-project-13mj"&gt;this article of mine&lt;/a&gt; where I explain how I structure my new VueJS projects from scratch.&lt;br&gt;
If your project is not going to be written in VueJS (sorry to hear that :(), you may check your favourite JavaScript framework's tutorial page to see how to start a fresh new project with it or even built it from scratch. These are the most common JavaScript ones:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://reactjs.org/docs/create-a-new-react-app.html"&gt;React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angular.io/guide/setup-local"&gt;Angular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/brudhu/creating-my-first-node-js-app-30kk"&gt;NodeJS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Access its root directory and, in a terminal window, execute the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install graphql-faker --save-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Notice that we'll use &lt;code&gt;--save-dev&lt;/code&gt; flag to install this dependency only for development since the production version of the application will require the real GraphQL API to work&lt;/em&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#configuring-the-schema-types"&gt;
  &lt;/a&gt;
  Configuring the Schema - Types
&lt;/h4&gt;

&lt;p&gt;This is the most important part of building your mocked GraphQL API. By configuring the schema, you will be able to really use the API to return data as you need.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you still don't know how a GraphQL Schema is configured, take a look at &lt;a href="https://graphql.org/learn/schema/"&gt;this link&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Let's imagine a simple application that needs to display a list of users and details of their respective addresses like street, city and country.&lt;/p&gt;

&lt;p&gt;In this case, we need to create these two &lt;em&gt;types&lt;/em&gt; within our &lt;code&gt;schema.graphql&lt;/code&gt; file. The good thing about GraphQL Faker is that it already provides the &lt;code&gt;@fake&lt;/code&gt; and &lt;code&gt;@examples&lt;/code&gt; directives that allow us to define possible values to be mocked when retrieving data from our mocked API. Check this out:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;examples&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;20&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;25&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;30&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;35&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Address&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Address&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;street&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;streetName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;examples&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;303&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;409&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;stateAbbr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;fake&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;country&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Obs.: Faker JS provides several different types of fake data that will allow you to create real-world mocked data according to your needs. I'm not sure exactly &lt;a href="https://github.com/marak/Faker.js/#api-methods"&gt;which types&lt;/a&gt; are available to be used along with GraphQL Faker, but most of them are according to some tests I've made.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#configuring-the-schema-queriesmutations"&gt;
  &lt;/a&gt;
  Configuring the Schema - Queries/Mutations
&lt;/h4&gt;

&lt;p&gt;After configuring the &lt;code&gt;Types&lt;/code&gt;, we need to set the &lt;code&gt;Queries&lt;/code&gt; and &lt;code&gt;Mutations&lt;/code&gt; to be able to perform operations.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Keep in mind that the &lt;code&gt;Mutations&lt;/code&gt; will not create any data anywhere like &lt;a href="https://dev.to/vcpablo/js-mocking-a-rest-api-with-json-server-368"&gt;JSON Server mock API&lt;/a&gt; but they will support you in building the correct inputs the front end will need to send when calling them.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When creating a &lt;code&gt;Query&lt;/code&gt; we may define which is the type it should return and also the minimum and maximum size of the array it will return. In the example below, the &lt;code&gt;User&lt;/code&gt; query, the API will return lists containing between 3 and 20 users, randomly each time we call it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;listLength&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;20)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You may also define an &lt;code&gt;input&lt;/code&gt; types and &lt;code&gt;Mutations&lt;/code&gt; to allow your front end to perform these operations without receiving a &lt;code&gt;400&lt;/code&gt; or &lt;code&gt;404&lt;/code&gt; error.&lt;/p&gt;

&lt;p&gt;Imagine that your application will allow people to create users and their address. So, we need to define, in our Schema a &lt;code&gt;UserInput&lt;/code&gt; and an &lt;code&gt;AddressInput&lt;/code&gt; (you may call it whatever you prefer) to be used in the mocked Mutation we'll create later:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;input&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;UserInput&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;AddressInput&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;input&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;AddressInput&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;street&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After creating the inputs properly, we can define our mutation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Mutation&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;CreateUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;UserInput&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#running-graphql-faker"&gt;
  &lt;/a&gt;
  Running GraphQL Faker
&lt;/h4&gt;

&lt;p&gt;In order to test the mocked API you've just created, first we need to include a new &lt;code&gt;script&lt;/code&gt; into our &lt;code&gt;package.json&lt;/code&gt; file like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"mock:api"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"graphql-faker ./schema.graphql"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, all you need to do is run the command on a terminal using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run mock:api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By running it you will see the following information:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ejsMUmf---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9n8pw8d7evoybzf6xzh2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ejsMUmf---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9n8pw8d7evoybzf6xzh2.png" alt="Running GraphQL Faker mock API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The three links are:&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#interactive-editor"&gt;
  &lt;/a&gt;
  Interactive Editor
&lt;/h5&gt;

&lt;p&gt;A text editor where you can update your schema&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MCOmuBFE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qkpfdcr4nkqusj8mc2d3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MCOmuBFE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qkpfdcr4nkqusj8mc2d3.png" alt="GraphQL Schema Interactive Editor"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#graphql-api"&gt;
  &lt;/a&gt;
  GraphQL API
&lt;/h5&gt;

&lt;p&gt;A playground where you can test all of your queries and mutations and also check all of the types defined in the schema.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OScjN81w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zpr9i3vtgm00yufqrn5f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OScjN81w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zpr9i3vtgm00yufqrn5f.png" alt="GraphQL Playground"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#voyager"&gt;
  &lt;/a&gt;
  Voyager
&lt;/h5&gt;

&lt;p&gt;An interactive graph representation of your schema&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nvsIHSOB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l9w4a0pgo0jlxxs9n820.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nvsIHSOB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l9w4a0pgo0jlxxs9n820.png" alt="GraphQL Voyager"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The ports may defer. If you want to define a specific port to use the GraphQL Faker, you may define it in the script in the &lt;code&gt;package.json&lt;/code&gt; file.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;It&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;run&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;port&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="nl"&gt;"mock:api"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"graphql-faker --port 4000 ./schema.graphql"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#testing-graphql-faker-api"&gt;
  &lt;/a&gt;
  Testing GraphQL Faker API
&lt;/h4&gt;

&lt;p&gt;Access the &lt;strong&gt;GraphQL API&lt;/strong&gt; address (&lt;a href="http://localhost:PORT/graphql"&gt;http://localhost:PORT/graphql&lt;/a&gt;) and try out your query and check the full (and interactive) documentation of your schema :).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.loom.com/share/e2239a80be6e4d7b99d3c4e75de89884"&gt;&lt;br&gt;
    GraphiQL Playground - Watch Video&lt;br&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0XBKWkQY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.loom.com/sessions/thumbnails/e2239a80be6e4d7b99d3c4e75de89884-with-play.gif"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;/p&gt;




&lt;p&gt;You can find a simple and fully functional project similar to what we've built together in this article at &lt;a href="https://github.com/vcpablo/graphql-mock-api"&gt;this repo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#considerations"&gt;
  &lt;/a&gt;
  Considerations
&lt;/h3&gt;

&lt;p&gt;If you got until this point, it means you've read the last piece of text from a series of 16 articles, published weekly since April 6th, when I decided to write about &lt;a href="https://dev.to/vcpablo/vuejs-2-different-ways-to-implement-v-model-1mjf"&gt;Different ways of implementing v-model (in VueJS)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The inspiration came after reading an article that said that "every developer should write". Unfortunately, this article is no longer available on the internet but its message was transmitted.&lt;/p&gt;

&lt;p&gt;I'm not sure if I'll keep writing and, if I decide so, I don't know how frequently, but the most important thing is that I achieved my personal goal: 1 published article per week along 16 weeks in a row.&lt;/p&gt;

&lt;p&gt;During this period three of my articles were delivered in &lt;a href="https://vuejsdevelopers.com/newsletter/"&gt;one of the biggest VueJS newsletters&lt;/a&gt; around the world and one person reached out to me with an international job offer.&lt;/p&gt;

&lt;p&gt;You can see more about these stories in my &lt;a href="https://linkedin.com/in/pablo-veiga"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Follow me here, if you still do not and I'll bring you news soon!&lt;br&gt;
Thanks for all of the support!&lt;/p&gt;

&lt;p&gt;Comment and share!&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Using multiple GNU/Linux at the same time-Bedrock Linux</title>
      <author>nuh yurduseven</author>
      <pubDate>Fri, 30 Jul 2021 12:55:47 +0000</pubDate>
      <link>https://dev.to/noaahhh/using-multiple-gnu-linux-at-the-same-time-bedrock-linux-3fj6</link>
      <guid>https://dev.to/noaahhh/using-multiple-gnu-linux-at-the-same-time-bedrock-linux-3fj6</guid>
      <description>&lt;p&gt;Hello, in this article, I will talk about Bedrock Linux, which is a daemon that allows to use software packages from more than one package manager, while also installing and using multiple distributions in layers. Although it is described as a separate Linux distribution, we can say that it is a daemon that connects the distributions installed to the root directory and then installed in layers, to the root directory. This is a system that allows to use multiple different software packages together with a very useful and customizable architecture.&lt;/p&gt;

&lt;p&gt;In order to understand this architecture, I will first talk about the linux system hierarchy. Next, I'll review the bedrock Linux hierarchy and simply explain how to install and use it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#linux-system-hierarchy"&gt;
  &lt;/a&gt;
  Linux System Hierarchy
&lt;/h3&gt;

&lt;p&gt;Linux is an operating system kernel with a Unix-like design. The kernel is designed by Linus Torvalds and is still developing it as open source. The latest kernel version is Linux 5.14. and available at the link. Linus Torvalds also owns the git project, a source code management and version control software. Named in 1991, this monolithic kernel is widely used in operating systems used by supercomputers, personal or mobile devices. For example, Android, Debian, RHEL(Red Hat Enterprise Linux), CentOS are examples of GNU/Linux distributions. Especially Debian and Debian-based distributions, RHEL and RHEL-based distributions are frequently used as server operating systems.&lt;br&gt;
Linux and Unix are monolithic kernels. Monolithic kernels occupy a larger area than microkernels. Essentially, operating systems using Monolithic kernels run all operating system functions in "kernel mode", that is, kernel space. Each process is in separate address spaces. Kernel and OS services are in the same address space. Processes can request service from the kernel. This creates a layer of security between the kernel and applications. It also provides high speed as there will be no message traffic. However, a change to the kernel requires recompilation and the kernel code can become quite complex. In systems using microkernel, "kernel mode" takes up less space. System services such as the file system, virtual memory manager, and CPU scheduler are in the "user mode" area on the kernel, and each has its own address space. Applications also have their own address space. Such cores are customizable and easily expandable. In Microkernel, a fault in a component does not affect the whole system thanks to the system architecture. In this respect, we can describe this architecture as durable. However, in case of an error in monolithic systems, the whole system will be affected because the services are interconnected. But it has a clear advantage over monolithic architecture in terms of speed. Examples of microkernels are symbian, minix, GNU. Most Linux distributions are not actually a Linux project, but rather a GNU project. Because linux is just a kernel and it makes up a very small part of the whole system. Hybrid architectures, on the other hand, are a combination of the good features of monolithic and microkernels, thereby reducing weaknesses. They keep more code in the kernel space. Communication units and many drivers are embedded in the kernel area. However, when a new component is added, it does not require recompilation as in monolithic architecture. For example, Darwin and macos kernel XNU, BSD-based freeBSD, windows NT are coded in this architecture. Modern operating systems prefer this architecture.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FXBqcJ3U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/20g5ipx99ugostjyktbi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FXBqcJ3U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/20g5ipx99ugostjyktbi.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;source&lt;/strong&gt; : &lt;a href="https://en.wikipedia.org/wiki/Monolithic_kernel"&gt;wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#init-system"&gt;
  &lt;/a&gt;
  Init System
&lt;/h4&gt;

&lt;p&gt;It is the ancestor process on a GNU/Linux system. It takes 1 as pid and after the kernel is loaded, it is decided which runlevel the system will start with by checking the runlevels in /etc/inittab in modes such as windows or safemod that we are used to from macos. Runlevels can be seen in the figure below. As seen in the inittab file in Centos7 system, 0 halt, 1 single usermode, 2 multiuser etc. is being used. 3, ie Full multiuser mode, is used by default as initdefault. After init is started, other processes are started in the appropriate order and in the mode used under /etc/rc.d/init.d. For example, udev , apache, preload services can be started after init. This is used like /etc/rc.d/init.d/init3.d/S100preload. init3.d is in 3rd mode and S100 indicates that preload will be started in 100th order.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xg_nR0FO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bip1tkh9kzezqnrbiati.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xg_nR0FO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bip1tkh9kzezqnrbiati.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This structure is not preferred in today's GNU/Linux distributions. In most of them, systemd, which was written in 2010, comes by default. It is also used in new generation structures such as runit, OpenRC, Upstart. The old build is the SysV init system. In new structures, there are features such as starting processes in parallel, automatically starting the process that a process needs, automatic restarting if the process terminates. Systemd is a slightly slower init system than others. The system with the fastest boot time among them is Runit and it is cross platform. Available on GNU/linux, Solaris, Macos X.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#file-system-and-directory-hiearchy"&gt;
  &lt;/a&gt;
  File System and Directory Hiearchy
&lt;/h4&gt;

&lt;p&gt;The file system is a markup structure on the disk that allows the operating system to find the file. GNU/Linux distributions usually use ext2–3–4 journaling systems. It can also find file traces on NTFS, the windows file system. Everything is a file and designed in a hierarchical order in directories. Files, drivers, executables, libraries are located in these directories. This directory structure can be seen in the figure below.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zWJDNhbz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ye60yom2xkt68spmmfyt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zWJDNhbz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ye60yom2xkt68spmmfyt.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In normal use, we can say that the most used directories are /var, /lib, /usr and /home. In addition, directories branch themselves into trees. For example, the /usr directory contains the /usr/bin directory with binary files. Or the directory /var/lib is available under /var. &lt;strong&gt;/bin&lt;/strong&gt; directory is loaded at boot and contains basic commands. &lt;strong&gt;/sbin&lt;/strong&gt; contains binary files that provide system information or make changes. &lt;strong&gt;/lib&lt;/strong&gt; contains shared libraries, &lt;strong&gt;/media&lt;/strong&gt; contains removable disks, &lt;strong&gt;/mnt&lt;/strong&gt; contains new mounted filesystem, &lt;strong&gt;/var&lt;/strong&gt; contains variables. The &lt;strong&gt;/home&lt;/strong&gt; directory contains users' private files. &lt;strong&gt;/etc&lt;/strong&gt; contains configuration files. The &lt;strong&gt;/boot&lt;/strong&gt; directory contains the bootloader and some core files, such as grub, lilo, related to system boot. These directories can be divided into different partitions and connected to the system. This is a widely used method. For example, when the home directory is installed on a partition separate from root, the programs installed in the users' files and user directory are not deleted when the system is reinstalled or a different GNU/Linux distribution is installed. Bedrock Linux designers have developed a different model on this hierarchy.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#bedrock-linux"&gt;
  &lt;/a&gt;
  Bedrock Linux
&lt;/h3&gt;

&lt;p&gt;Bedrock Linux is a productivity-oriented daemon that aims to use modules from many distributions, defined as a meta-distribution, together in a single operating system. In other words, you can work on debian and use pacman or AUR package managers and packages from arch linux. You can use libraries in different operating systems and fonts installed in different systems for different programming. This system also has some bugs. It is currently progressing above 0.7 poki minor. In addition, it cannot be said that it is security-oriented. This system is very useful for users who want to benefit from the power of not only a single system, but also many systems, and who want to use more than one package manager, different packages or different init systems at the same time. You can check it from the &lt;a href="https://bedrocklinux.org/index.html"&gt;link&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;The system is very simple to use. Once the Strata concept is well understood, it is quite easy to adapt for an advanced user. After a shell script is downloaded from Github, it is started as root and you will be asked to confirm the action you want to do, as a warning that the actions cannot be reversed. It then takes the distribution in your root directory and moves it to a stata under /bedrock. You can integrate other distributions into your system with the &lt;strong&gt;brl&lt;/strong&gt; command. You can also configure your system in bedrock.conf file. It is located under /etc/becrock. &lt;strong&gt;brl apply&lt;/strong&gt; is used to apply the changes. Community side usage rates are given on the official page of Bedrock linux (&lt;a href="https://bedrocklinux.org/0.7/distro-compatibility.html"&gt;link&lt;/a&gt;). Generally, you have a low error rate for frequently used distributions. For example debian,ubuntu,centos,arch are used quite often and there are no known problems. But many problems have been reported in different distributions such as clear linux, nixOS. The concept of Strata will be discussed in the next section.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#strata"&gt;
  &lt;/a&gt;
  Strata
&lt;/h4&gt;

&lt;p&gt;Bedrock installs each distribution on one layer, establishing a communication bridge between them and providing the appropriate environment for other inter-use.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;brl fetch &lt;span class="nt"&gt;--list&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the command, distributions that can be used as stratum can be seen.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;brl fetch void
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With this command void linux startum can be created. It has the void linux runit init system. When Bedrock init interface comes, you can see it as void:runit.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;strat &lt;span class="nt"&gt;-r&lt;/span&gt; debian neofetch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the command is used, the neofetch package in debian stratum will run and see debian as the root directory. It outputs debian as os-release. But when neofetch is used directly, bedrock linux will be seen as os-release. Occurs when build tools scan the environment and find dependencies from different distributions. In case of confusion due to the bedrock environment like this, inter layer hooks can be bypassed using the &lt;strong&gt;restrick -r&lt;/strong&gt; parameter. If you are using two distributions with the same package manager, for example apt and rpm are the most used package managers, then you can start ubuntu as apt. Such an application may be needed because the source repos are different.&lt;/p&gt;

&lt;p&gt;If a package exists in more than one startum then it will be executed in “pinned” stratum. You can check this with &lt;strong&gt;brl which&lt;/strong&gt; . All layers can see /run , /temp , /home directories as global file path.&lt;/p&gt;

&lt;p&gt;You can enable-disable some stratums if needed. You can use the &lt;strong&gt;brl enable/disable&lt;/strong&gt; command. You can use the &lt;strong&gt;brl remove -d&lt;/strong&gt; command to delete Stratum directly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;brl remove &lt;span class="nt"&gt;-d&lt;/span&gt; fedora
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#installation-use-and-review"&gt;
  &lt;/a&gt;
  Installation, Use and Review
&lt;/h4&gt;

&lt;p&gt;In this section, some topics such as how to create and configure some startums by installing bedrock on ubuntu-based virtual linux lite in virtualbox, how to install package software will be explained. You can choose in a different distribution. In particular, distributions that have not undergone major changes based on common or frequently used distributions can run smoothly. For installation, you can download the script suitable for the CPU architecture from the link. First of all, daemon installation should be done by running bedrock shell script as root user.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QGX56pzx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bgknqwgs8b4ea82si4z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QGX56pzx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bgknqwgs8b4ea82si4z.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;“Not reversable!” By typing you agree to these terms and installation begins. Before the installation, the os in the root is taken to a temporary location. Then bedrock is installed on root and the os in the temporary location is installed in a layer. After the process is finished, you can see the init selection textmode interface with reboot.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G0Ov5LSM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvldwsqq7fyuwy69jiqw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G0Ov5LSM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvldwsqq7fyuwy69jiqw.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, the system is booted from the system marked with "*". /sbin/init points to /usr/lib/systemd/systemd here. Systemd services are started and system boot is provided. When ubuntu is booted, processes named crossfs and etcfs are file systems for moving files, libraries, fonts between layer boundaries. In addition, the paths containing the stratum binary files are added to the PATH variable. This way bash or any shell&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mG2J9fjF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rvi22k93jmb0q1xxa1to.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mG2J9fjF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rvi22k93jmb0q1xxa1to.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am installing the neofetch package on Ubuntu. You can install it from the ubuntu apt repos. Then, when I use the neofetch command, the base system appears as bedrock. To run neofetch in Ubuntu startum.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;strat &lt;span class="nt"&gt;-r&lt;/span&gt; ubuntu neofetch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;command should be used. With restrict cross-startum hooks are disabled. This way neofetch will only work in ubuntu stratum.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--88iz0rjw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/93jgn2d8zqiwcnrivrhb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--88iz0rjw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/93jgn2d8zqiwcnrivrhb.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To create another startum,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;brl fetch &lt;span class="nt"&gt;--list&lt;/span&gt; 
alpine
&lt;span class="nb"&gt;arch&lt;/span&gt;
...
...
&lt;span class="nv"&gt;$ &lt;/span&gt;brl fecth void
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can check the distros out with the command. Then it is downloaded and installed from stratum mirror with &lt;strong&gt;brl fetch&lt;/strong&gt;. For example, for void linux using runit, after the packages are pulled, void can be seen in the init menu. When &lt;strong&gt;strat -r void neofect&lt;/strong&gt; is run again, it will warn that the package is not present. Because there are no hooks in between, it cannot reach the neofetch package in ubuntu startum. In this stratum, the package is installed and run with &lt;strong&gt;sudo xbps-install neofetch&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;There are both ubuntu and void startums in the system. Here the xbps package manager and apt package manager can be used jointly. E.g&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;xbps-install filezilla 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;via this command , Filezilla can be installed and run in ubuntu stratum. The opposite is also true. For example, in Arch linux startum, you can install a package from AUR packages and access it from other startums. For this, git can be installed with pacman and the spring helper software can be installed from the github repo. With &lt;strong&gt;yay -Sy brave&lt;/strong&gt; a package belonging to arch stratum can be used by all stratums.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EpO74O9V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e557bb5c3589ofhq0lal.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EpO74O9V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e557bb5c3589ofhq0lal.gif" alt="filezilla on void stratum "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the next system startup, there are three options for init selection. Besides arch and ubuntu using systemd, void linux uninit system using runit can be used.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GuW6TtRs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ianxoi2qryi9ylzgjf49.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GuW6TtRs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ianxoi2qryi9ylzgjf49.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;System-related settings can be made in the &lt;strong&gt;bedrock.conf&lt;/strong&gt; file. For example, the default init can be changed, the timeout period can be shortened, the directory where the fonts are located or the priority settings between the stratums can be made. Mirror servers can be changed for &lt;strong&gt;"brl fetch"&lt;/strong&gt;. For detailed information, you can use this &lt;a href="https://bedrocklinux.org/0.7/configuration.html"&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This system is completely productivity-oriented. There may be some security related problems.The official page has some answers for those who have security concerns.&lt;br&gt;
However, if security is at the forefront for you and the features of multiple distributions are desired to be used together, it is more appropriate to use distributions such as Qubes.Qubes virtualizes each OS to the next level. It is a system that aims to provide security through isolation. It recommends Whonix by default, but you can also install windows or fedora, debian. Safety and productivity/speed are two conflicting concepts here. I think this distro is a meta distro to be used by distro-hoopers after major 1.0.0 release. Even this version is free from many problems and lives a very stable user experience.&lt;/p&gt;

</description>
      <category>linux</category>
      <category>bedrock</category>
      <category>gnu</category>
      <category>systems</category>
    </item>
    <item>
      <title>Top python projects of last year!</title>
      <author>Code_Jedi</author>
      <pubDate>Fri, 30 Jul 2021 12:46:11 +0000</pubDate>
      <link>https://dev.to/code_jedi/top-python-projects-of-last-year-2e56</link>
      <guid>https://dev.to/code_jedi/top-python-projects-of-last-year-2e56</guid>
      <description>&lt;h2&gt;
  &lt;a href="#heres-a-compilation-of-the-most-popular-python-projects-of-last-year"&gt;
  &lt;/a&gt;
  Here's a compilation of the most popular python projects of last year!
&lt;/h2&gt;




&lt;ul&gt;
&lt;li&gt;A terminal based stock analysis tool written completely in python:
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/GamestonkTerminal"&gt;
        GamestonkTerminal
      &lt;/a&gt; / &lt;a href="https://github.com/GamestonkTerminal/GamestonkTerminal"&gt;
        GamestonkTerminal
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A FOSS alternative to Bloomberg Terminal.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://github.com/GamestonkTerminal/GamestonkTerminal/stargazers"&gt;&lt;img src="https://camo.githubusercontent.com/deaeb2111d8b10ebe4951a129de7499c9404193c1a19eebf89d3542e00b4c24f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f47616d6573746f6e6b5465726d696e616c2f47616d6573746f6e6b5465726d696e616c2e7376673f7374796c653d666f722d7468652d6261646765" alt="Stargazers"&gt;&lt;/a&gt;
&lt;a href="https://github.com/GamestonkTerminal/GamestonkTerminal/network/members"&gt;&lt;img src="https://camo.githubusercontent.com/e6d1d84a4815279114a84a31952587ac3afaf94135deb1c1e4d47a6f0a1de65f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f47616d6573746f6e6b5465726d696e616c2f47616d6573746f6e6b5465726d696e616c2e7376673f7374796c653d666f722d7468652d6261646765" alt="Forks"&gt;&lt;/a&gt;
&lt;a href="https://github.com/GamestonkTerminal/GamestonkTerminal/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/f4f178f6149aea06586d7a08b3deadea9651a5daa82c0f8ca69d96b426c44711/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f47616d6573746f6e6b5465726d696e616c2f47616d6573746f6e6b5465726d696e616c2e7376673f7374796c653d666f722d7468652d6261646765" alt="Contributors"&gt;&lt;/a&gt;
&lt;a href="https://github.com/GamestonkTerminal/GamestonkTerminal/blob/master/LICENSE.txt"&gt;&lt;img src="https://camo.githubusercontent.com/b6d641c1789c7768700a7e5f48e91538926fa2eda3a92c1def9d05db30b48af0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f47616d6573746f6e6b5465726d696e616c2f47616d6573746f6e6b5465726d696e616c2e7376673f7374796c653d666f722d7468652d6261646765" alt="MIT License"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/GamestonkTerminal/GamestonkTerminal/issues"&gt;&lt;img src="https://camo.githubusercontent.com/3c0e399a290400ec0f0dd044e0bfecc9b87eb21a7c9adf103b09b326a444d3cf/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f47616d6573746f6e6b5465726d696e616c2f47616d6573746f6e6b5465726d696e616c2e7376673f7374796c653d666f722d7468652d626164676526636f6c6f723d626c7565" alt="Issues"&gt;&lt;/a&gt;
&lt;a href="https://github.com/GamestonkTerminal/GamestonkTerminal/issues?q=is%3Aissue+label%3Atype%3Abug+is%3Aopen"&gt;&lt;img src="https://camo.githubusercontent.com/6f630193b440fbc2a29550936210ba92c25fda97e98e1825f05f177ff1b20f10/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f47616d6573746f6e6b5465726d696e616c2f47616d6573746f6e6b5465726d696e616c2f747970652533416275672e7376673f7374796c653d666f722d7468652d626164676526636f6c6f723d79656c6c6f77" alt="Bugs Open"&gt;&lt;/a&gt;
&lt;a href="https://github.com/GamestonkTerminal/GamestonkTerminal/issues?q=is%3Aissue+label%3Atype%3Abug+is%3Aclosed"&gt;&lt;img src="https://camo.githubusercontent.com/755348c453be45dba115c075d625b0284cfd565568d4487126717ad41561e3d5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d636c6f7365642f47616d6573746f6e6b5465726d696e616c2f47616d6573746f6e6b5465726d696e616c2f747970652533416275672e7376673f7374796c653d666f722d7468652d626164676526636f6c6f723d73756363657373" alt="Bugs Closed"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/GamestonkTerminal/GamestonkTerminal/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dZKeXZmL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/GamestonkTerminal/GamestonkTerminal/actions/workflows/test.yml/badge.svg%3Fbranch%3Dmain" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://github.com/GamestonkTerminal/GamestonkTerminal/releases"&gt;&lt;img src="https://camo.githubusercontent.com/5bfe557d5798cb26378ed1174c77661026cd75342d1a391218cc49d2291dfdaf/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f47616d6573746f6e6b5465726d696e616c2f47616d6573746f6e6b5465726d696e616c2e7376673f6d61784167653d33363030" alt="GitHub release"&gt;&lt;/a&gt;
&lt;a href="https://github.com/psf/black"&gt;&lt;img src="https://camo.githubusercontent.com/d91ed7ac7abbd5a6102cbe988dd8e9ac21bde0a73d97be7603b891ad08ce3479/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667" alt="Code style: black"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1f267821594e4cc9a753e460a3750fec544f1d4a6d6a91f2fcc5ebaaf33adf05/68747470733a2f2f646973636f72646170702e636f6d2f6170692f6775696c64732f3833313136353738323735303738393637322f7769646765742e706e673f7374796c653d736869656c64"&gt;&lt;img src="https://camo.githubusercontent.com/1f267821594e4cc9a753e460a3750fec544f1d4a6d6a91f2fcc5ebaaf33adf05/68747470733a2f2f646973636f72646170702e636f6d2f6170692f6775696c64732f3833313136353738323735303738393637322f7769646765742e706e673f7374796c653d736869656c64" alt="Discord Shield"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/gamestonkt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/db5f3c80b458cd0f27303941d5d2510e74db215d68edebfa7a9ee0a6e67bfdd1/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f747769747465722e636f6d2f67616d6573746f6e6b742e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f7725323025343067616d6573746f6e6b74" alt="Twitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;
  &lt;a href="https://github.com/GamestonkTerminal/GamestonkTerminal"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bkE010ho--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/GamestonkTerminal/GamestonkTerminal/main/images/gst_logo_lockup_rGreen_with_letters.png" alt="Logo" width="800" height="276"&gt;
  &lt;/a&gt;
  &lt;/p&gt;
&lt;h3&gt;
Gamestonk Terminal 🚀
&lt;/h3&gt;
  &lt;p&gt;
    The next best thing after Bloomberg Terminal. #weliketheterminal
    &lt;br&gt;
    &lt;a href="https://github.com/GamestonkTerminal/GamestonkTerminal/blob/main/ROADMAP.md"&gt;&lt;strong&gt;≪  ROADMAP&lt;/strong&gt;&lt;/a&gt;
      ·  
    &lt;a href="https://github.com/GamestonkTerminal/GamestonkTerminal/tree/main/gamestonk_terminal/README.md"&gt;&lt;strong&gt;FEATURES »&lt;/strong&gt;&lt;/a&gt;
    &lt;br&gt;
    &lt;br&gt;
    &lt;a href="https://github.com/GamestonkTerminal/GamestonkTerminal/issues/new?assignees=&amp;amp;labels=bug&amp;amp;template=bug_report.md&amp;amp;title=%5BBug%5D"&gt;Report Bug&lt;/a&gt;
    ·
    &lt;a href="https://github.com/GamestonkTerminal/GamestonkTerminal/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;template=enhancement.md&amp;amp;title=%5BIMPROVE%5D"&gt;Suggest Improvement&lt;/a&gt;
    ·
    &lt;a href="https://github.com/GamestonkTerminal/GamestonkTerminal/issues/new?assignees=&amp;amp;labels=new+feature&amp;amp;template=feature_request.md&amp;amp;title=%5BFR%5D"&gt;Request Feature&lt;/a&gt;
  &lt;/p&gt;

  &lt;h2&gt;
Table of Contents&lt;/h2&gt;
  &lt;ol&gt;
    &lt;li&gt; &lt;a href="https://raw.githubusercontent.com/GamestonkTerminal/GamestonkTerminal/main/#about-the-project"&gt;About The Project&lt;/a&gt; &lt;/li&gt;
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GamestonkTerminal/GamestonkTerminal/main/#donation"&gt;Donation&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;
      &lt;a href="https://raw.githubusercontent.com/GamestonkTerminal/GamestonkTerminal/main/#getting-started"&gt;Getting Started&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GamestonkTerminal/GamestonkTerminal/main/#install"&gt;Install&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GamestonkTerminal/GamestonkTerminal/main/#advanced-user-install---machine-learning"&gt;Advanced User Install - Machine Learning&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GamestonkTerminal/GamestonkTerminal/main/#update-terminal"&gt;Update Terminal&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GamestonkTerminal/GamestonkTerminal/main/#api-keys"&gt;API Keys&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GamestonkTerminal/GamestonkTerminal/main/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GamestonkTerminal/GamestonkTerminal/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GamestonkTerminal/GamestonkTerminal/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GamestonkTerminal/GamestonkTerminal/main/#disclaimer"&gt;Disclaimer&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GamestonkTerminal/GamestonkTerminal/main/#contacts"&gt;Contacts&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GamestonkTerminal/GamestonkTerminal/main/#acknowledgments"&gt;Acknowledgments&lt;/a&gt;&lt;/li&gt;
  &lt;/ol&gt;

&lt;h2&gt;
About The Project&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;How it started:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Gamestonk Terminal is an awesome stock and crypto market terminal that has been developed for fun, while I saw my GME shares tanking. But hey, I like the stock 💎🙌.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How it's going:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Gamestonk Terminal provides a modern Python-based integrated environment for investment research, that allows the average joe retail trader to leverage state-of-the-art Data Science and Machine Learning technologies.&lt;/p&gt;
&lt;p&gt;As a modern Python-based environment, GamestonkTerminal opens access to numerous Python data libraries in Data Science (Pandas, Numpy, Scipy, Jupyter), Machine Learning (Pytorch, Tensorflow, Sklearn, Flair), and Data Acquisition (Beautiful Soup, and…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/GamestonkTerminal/GamestonkTerminal"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;A Smart, Automatic, Fast and Lightweight Web Scraper for Python:
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/alirezamika"&gt;
        alirezamika
      &lt;/a&gt; / &lt;a href="https://github.com/alirezamika/autoscraper"&gt;
        autoscraper
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A Smart, Automatic, Fast and Lightweight Web Scraper for Python
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
AutoScraper: A Smart, Automatic, Fast and Lightweight Web Scraper for Python&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/17881612/91968083-5ee92080-ed29-11ea-82ec-d99ec85367a5.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SOAiLxGl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/17881612/91968083-5ee92080-ed29-11ea-82ec-d99ec85367a5.png" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This project is made for automatic web scraping to make scraping easy
It gets a url or the html content of a web page and a list of sample data which we want to scrape from that page. &lt;strong&gt;This data can be text, url or any html tag value of that page.&lt;/strong&gt; It learns the scraping rules and returns the similar elements. Then you can use this learned object with new urls to get similar content or the exact same element of those new pages.&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;It's compatible with python 3.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install latest version from git repository using pip:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;$ pip install git+https://github.com/alirezamika/autoscraper.git&lt;/pre&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Install from PyPI:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;$ pip install autoscraper&lt;/pre&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Install from source:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;$ python setup.py install&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
How to use&lt;/h2&gt;
&lt;h3&gt;
Getting similar results&lt;/h3&gt;
&lt;p&gt;Say we want to fetch all related post titles in a stackoverflow page:&lt;/p&gt;
&lt;div class="highlight highlight-source-python position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s1"&gt;autoscraper&lt;/span&gt; &lt;span class="pl-k"&gt;import&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/alirezamika/autoscraper"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;A python project that lets you quickly fetch your WiFi password and if needed, generate a QR code of your WiFi to allow phones to easily connect to it!
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sdushantha"&gt;
        sdushantha
      &lt;/a&gt; / &lt;a href="https://github.com/sdushantha/wifi-password"&gt;
        wifi-password
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Quickly fetch your WiFi password and if needed, generate a QR code of your WiFi to allow phones to easily connect
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
wifi-password
&lt;/h1&gt;
&lt;p&gt;
Quickly fetch your WiFi password and if needed, generate a QR code of your WiFi to allow phones to easily connect
&lt;br&gt;
Works on &lt;b&gt;macOS&lt;/b&gt; and &lt;b&gt;Linux&lt;/b&gt;, &lt;b&gt;Windows&lt;/b&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/sdushantha/wifi-password/master/images/demo.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5jLeFFI8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/sdushantha/wifi-password/master/images/demo.gif"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;h3&gt;
Install using &lt;code&gt;pip&lt;/code&gt;
&lt;/h3&gt;
&lt;div class="highlight highlight-text-shell-session position-relative js-code-highlight"&gt;
&lt;pre&gt;$ &lt;span class="pl-s1"&gt;python3 -m pip install --user wifi-password&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Install using &lt;code&gt;git&lt;/code&gt;
&lt;/h3&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/sdushantha/wifi-password
$ cd wifi-password
$ python3 setup.py install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
Install using the &lt;a href="https://aur.archlinux.org/packages/wifi-password/" rel="nofollow"&gt;AUR&lt;/a&gt;
&lt;/h3&gt;
&lt;div class="highlight highlight-text-shell-session position-relative js-code-highlight"&gt;
&lt;pre&gt;$ &lt;span class="pl-s1"&gt;sudo pamac build wifi-password&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;div class="highlight highlight-text-shell-session position-relative js-code-highlight"&gt;
&lt;pre&gt;$ &lt;span class="pl-s1"&gt;wifi-password --help&lt;/span&gt;
&lt;span class="pl-c1"&gt;usage: wifi_password [options]&lt;/span&gt;

&lt;span class="pl-c1"&gt;optional arguments:&lt;/span&gt;
&lt;span class="pl-c1"&gt;  -h, --help            show this help message and exit&lt;/span&gt;
&lt;span class="pl-c1"&gt;  --show-qr, -show      Show a ASCII QR code onto the terminal/console&lt;/span&gt;
&lt;span class="pl-c1"&gt;  --save-qr [PATH], -save [PATH]&lt;/span&gt;
&lt;span class="pl-c1"&gt;                        Create the QR code and save it as an image&lt;/span&gt;
&lt;span class="pl-c1"&gt;  --ssid SSID, -s SSID  Specify a SSID that you have previously connected to&lt;/span&gt;
&lt;span class="pl-c1"&gt;  --version             Show version number&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This project is an improvement of &lt;a href="https://github.com/rauchg/wifi-password"&gt;wifi-password&lt;/a&gt; created by &lt;a href="https://github.com/rauchg"&gt;@rauchg&lt;/a&gt;, where I have added support for multiple platforms and have added the feature for generating QR codes.&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sdushantha/wifi-password"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;A terminal based python project that easily lets you identify emails, IP addresses, and more. Feed it a .pcap file or some text and it'll tell you what it is!
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bee-san"&gt;
        bee-san
      &lt;/a&gt; / &lt;a href="https://github.com/bee-san/pyWhat"&gt;
        pyWhat
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🐸   Identify anything. pyWhat easily lets you identify emails, IP addresses, and more. Feed it a .pcap file or some text and it'll tell you what it is! 🧙‍♀️
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/bee-san/pyWhat/main/images_for_README/logo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n9Z8lMDT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bee-san/pyWhat/main/images_for_README/logo.png"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;➡️ &lt;a href="http://discord.skerritt.blog" rel="nofollow"&gt;Discord&lt;/a&gt; ⬅️&lt;br&gt;
&lt;i&gt;The easiest way to identify anything&lt;/i&gt;&lt;br&gt;
&lt;code&gt;pip3 install pywhat &amp;amp;&amp;amp; pywhat --help&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;a href="http://discord.skerritt.blog" rel="nofollow"&gt;&lt;img alt="Discord" src="https://camo.githubusercontent.com/73633b0c649cf5f6619dc9a1ca6834becf4c9c7461077b7bb92f9ff6cf14d28c/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f373534303031373338313834333932373034"&gt;&lt;/a&gt; &lt;a href="https://pypi.org/project/pywhat/" rel="nofollow"&gt;&lt;img alt="PyPI - Downloads" src="https://camo.githubusercontent.com/5a6bb1e5fac4f5be2edf3d2bc54bb020c6c1b1744142b6f2a0e0fc441af239dd/68747470733a2f2f706570792e746563682f62616467652f7079776861742f6d6f6e7468"&gt;&lt;/a&gt;  &lt;a href="https://twitter.com/bee_sec_san" rel="nofollow"&gt;&lt;img alt="Twitter Follow" src="https://camo.githubusercontent.com/e99ca3a1c1e62d488dfe82fe7d78dce3ab218cee66ac37c2f9c63aac925d40f4/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f6265655f7365635f73616e3f7374796c653d736f6369616c"&gt;&lt;/a&gt; &lt;a href="https://pypi.org/project/pywhat/" rel="nofollow"&gt;&lt;img alt="PyPI - Python Version" src="https://camo.githubusercontent.com/42f9e2d2c82eb0e3be05318cbafecce73fdc46945b2f99064ec967689f84b0c4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f707977686174"&gt;&lt;/a&gt; &lt;a href="https://pypi.org/project/pywhat/" rel="nofollow"&gt;&lt;img alt="PyPI" src="https://camo.githubusercontent.com/58bb5ef6403974c09f55ad88dd129b9e035ad97a9dd28a536018d4730fe450d2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707977686174"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h1&gt;
🤔 &lt;code&gt;What&lt;/code&gt; is this?&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/bee-san/pyWhat/main/images_for_README/main_demo.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A0TZywXI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/bee-san/pyWhat/main/images_for_README/main_demo.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Imagine this: You come across some mysterious text 🧙‍♂️ &lt;code&gt;0x52908400098527886E0F7030069857D2E4169EE7&lt;/code&gt; or &lt;code&gt;dQw4w9WgXcQ&lt;/code&gt; and you wonder what it is. What do you do?&lt;/p&gt;
&lt;p&gt;Well, with &lt;code&gt;what&lt;/code&gt; all you have to do is ask &lt;code&gt;what "0x52908400098527886E0F7030069857D2E4169EE7"&lt;/code&gt; and &lt;code&gt;what&lt;/code&gt; will tell you!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;what&lt;/code&gt;'s job is to &lt;strong&gt;identify &lt;em&gt;what&lt;/em&gt; something is.&lt;/strong&gt; Whether it be a file or text! Or even the hex of a file! What about text &lt;em&gt;within&lt;/em&gt; files? We have that too! &lt;code&gt;what&lt;/code&gt; is recursive, it will identify &lt;strong&gt;everything&lt;/strong&gt; in text and more!&lt;/p&gt;
&lt;h1&gt;
⚙ Use Cases&lt;/h1&gt;
&lt;h2&gt;
🦠 Wannacry&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/bee-san/pyWhat/main/images_for_README/wantocry_demo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ibi3Oz26--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bee-san/pyWhat/main/images_for_README/wantocry_demo.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You come across a new piece of malware called WantToCry. You think back to Wannacry and remember it was stopped because a researcher found a kill-switch in the code.&lt;/p&gt;
&lt;p&gt;When a domain, hardcoded into Wannacry, was registered the virus would stop.&lt;/p&gt;
&lt;p&gt;You use &lt;code&gt;What&lt;/code&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/bee-san/pyWhat"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;A python project that turns your machine learning code into microservices with web API, interactive GUI, and more!
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ml-tooling"&gt;
        ml-tooling
      &lt;/a&gt; / &lt;a href="https://github.com/ml-tooling/opyrator"&gt;
        opyrator
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🪄 Turns your machine learning code into microservices with web API, interactive GUI, and more.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
    Opyrator
&lt;/h1&gt;
&lt;p&gt;
    &lt;strong&gt;Turns your Python functions into microservices with web API, interactive GUI, and more.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;a href="https://pypi.org/project/opyrator/" title="PyPi Version" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/272c89790946c4028499b57358d46655cb3f372f2d24db61e6d1bd61817be908/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6f70797261746f723f636f6c6f723d677265656e267374796c653d666c6174"&gt;&lt;/a&gt;
    &lt;a href="https://pypi.org/project/opyrator/" title="Python Version" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/14a43c7823fb8efd21197d933b80deaad49d7e8e0edbc7f9bd453d03ef91acfb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507974686f6e2d332e362532422d626c7565267374796c653d666c6174"&gt;&lt;/a&gt;
    &lt;a href="https://github.com/ml-tooling/opyrator/blob/main/LICENSE" title="Project License"&gt;&lt;img src="https://camo.githubusercontent.com/fd551ba4b042d89480347a0e74e31af63b356b2cac1116c7b80038f41b04a581/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d677265656e2e737667"&gt;&lt;/a&gt;
    &lt;a href="https://github.com/ml-tooling/opyrator/actions?query=workflow%3Abuild-pipeline" title="Build status"&gt;&lt;img src="https://camo.githubusercontent.com/c2476302c2943037b45a397c830b28622d5cf64cc00dccb9195e103dba33efed/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6d6c2d746f6f6c696e672f6f70797261746f722f6275696c642d706970656c696e653f7374796c653d666c6174"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5042565e9cc3a40bff3d9be7b59955d984831f594d38297b6efecf804e41b8f7/687474703a2f2f6269742e6c792f324d643972784d"&gt;&lt;img src="https://camo.githubusercontent.com/5042565e9cc3a40bff3d9be7b59955d984831f594d38297b6efecf804e41b8f7/687474703a2f2f6269742e6c792f324d643972784d"&gt;&lt;/a&gt;
    &lt;a href="https://twitter.com/mltooling" title="Follow on Twitter" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/994f8690532de6c59d23b878394a15a783e425094ba88cbde0d9ee10f25ee361/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f6d6c746f6f6c696e672e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://raw.githubusercontent.com/ml-tooling/opyrator/main/#getting-started"&gt;Getting Started&lt;/a&gt; •
  &lt;a href="https://raw.githubusercontent.com/ml-tooling/opyrator/main/#features"&gt;Features&lt;/a&gt; •
  &lt;a href="https://raw.githubusercontent.com/ml-tooling/opyrator/main/#examples"&gt;Examples&lt;/a&gt; •
  &lt;a href="https://raw.githubusercontent.com/ml-tooling/opyrator/main/#support--feedback"&gt;Support&lt;/a&gt; •
  &lt;a href="https://github.com/ml-tooling/opyrator/issues/new?labels=bug&amp;amp;template=01_bug-report.md"&gt;Report a Bug&lt;/a&gt; •
  &lt;a href="https://raw.githubusercontent.com/ml-tooling/opyrator/main/#contribution"&gt;Contribution&lt;/a&gt; •
  &lt;a href="https://github.com/ml-tooling/opyrator/releases"&gt;Changelog&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Instantly turn your Python functions into production-ready microservices. Deploy and access your services via HTTP API or interactive UI. Seamlessly export your services into portable, shareable, and executable files or Docker images. Opyrator builds on open standards - OpenAPI,  JSON Schema, and Python type hints - and is powered by FastAPI, Streamlit, and Pydantic. It cuts out all the pain for productizing and sharing your Python code - or anything you can wrap into a single Python function.&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;Alpha Version: Only suggested for experimental usage.&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/ml-tooling/opyrator/main/docs/images/opyrator-header.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IVQHhvKH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ml-tooling/opyrator/main/docs/images/opyrator-header.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;
     Try out and explore various examples in our playground &lt;a href="https://opyrator-playground.mltooling.org" rel="nofollow"&gt;here&lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
Highlights&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
🪄  Turn functions into production-ready services within seconds.&lt;/li&gt;
&lt;li&gt;
🔌  Auto-generated HTTP API based on FastAPI.&lt;/li&gt;
&lt;li&gt;
🌅  Auto-generated Web UI based on Streamlit.&lt;/li&gt;
&lt;li&gt;
📦  Save…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ml-tooling/opyrator"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;







&lt;p&gt;If you're a beginner who likes discovering new things about python, try &lt;a href="https://rebrand.ly/Python_Weekly"&gt;my weekly python newsletter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8UJC9uHS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d3tzwrb1iw2wesc8gdc5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8UJC9uHS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d3tzwrb1iw2wesc8gdc5.png" alt="minecraft in python"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#thats-it-for-this-compilation"&gt;
  &lt;/a&gt;
  That's it for this compilation!
&lt;/h4&gt;

&lt;p&gt;Byeeeee👋&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>github</category>
    </item>
    <item>
      <title>Which Programming Language Is Best for Taxi Dispatch Software Development? </title>
      <author>Johnmarison</author>
      <pubDate>Fri, 30 Jul 2021 12:35:47 +0000</pubDate>
      <link>https://dev.to/johnmarison2/which-programming-language-is-best-for-taxi-dispatch-software-development-11o2</link>
      <guid>https://dev.to/johnmarison2/which-programming-language-is-best-for-taxi-dispatch-software-development-11o2</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--99DySesR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ppyuwpsvhbhn36wvppj9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--99DySesR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ppyuwpsvhbhn36wvppj9.png" alt="Alt Text"&gt;&lt;/a&gt;The programming languages are the vocabulary and a bunch of rules that instruct a computer, app, software, web panel, etc. how to work. There have been different languages to choose from. They enable the developers to code programs according to client requirements on a specific digitized platform solution like a mobile app for the business.&lt;/p&gt;

&lt;p&gt;Selecting such an area is much more important to develop taxi dispatch software more advanced and effective to the contemporary market. The highly upgraded programming languages offer notable advantages like quick learning, fast development, enhanced options, simple processes, etc.&lt;/p&gt;

&lt;p&gt;In which, we are going to see the top two program languages, Swift and Java, to develop taxi dispatch software that is too trendy and too achievable to the latest mart.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#swift-and-java-in-technology-stack"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Swift and Java in Technology Stack?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Both Swift and Java are different programming languages and are mostly used by developers all around the world. Swift is a high-level language just like Java, it would be used for developing iOS apps while Java for others. Their individual interfaces and protocols are almost the same. Java could be used for different stuff, development purposes, the Android app is one of them. &lt;/p&gt;

&lt;p&gt;As both languages could be used for mobile app development on different OS platforms, they sustain stable connectivity between app development service providers and their clients. Most of the well-known development companies are still using the languages for custom-satisfying app creation services.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-part-of-swift-in-the-development-field-today"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The Part of Swift in the Development Field Today?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Being Swift is a fast and efficient language for development, programmers find it great to use for creating iOS business apps. Right from its real-time feedback to seamless incorporation into current Objective-C code, you can quickly provide client-centric apps for real-time startup launching. Utilizing its dynamic library, as a developer,  you can provide your clients decreased app size for upgraded app performance and speedy loading.&lt;/p&gt;

&lt;p&gt;Some winning example apps developed from this easy-to-use and open-source code language are Uber, Lyft, and Airbnb. This cross-platform nature is compatible with Linux too. Its playground offers developers to try new implements and discard when not okay. So, you can immediately import new features as requested by your client from his business plan for workouts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-swift-has-still-evolved-in-taxi-app-development"&gt;
  &lt;/a&gt;
  &lt;strong&gt;How Swift Has Still Evolved in Taxi App Development?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Since Swift was introduced by Apple, it has been evolving and modifying continuously. It is a free and open-source language that could be easily learned by anyone. Its complete upgrading from its version 2.0 to 2.2 to 2.6 to 3.0 to 5 made the programming language great and true to itself. Its improved frameworks like GCD and lib dispatch make concurrent programs too easy at the developers' end.&lt;/p&gt;

&lt;p&gt;Though Swift is highly focused on security, it is widely used for the purpose of data safety. The elimination of specific classes by the high-tech program language solution allows entrepreneurs to provide a secure platform for their app users. Along with much such greatness, the key reason for the language’s mass evolution in the development field is cost-effective solutions could be given to your customers for high productivity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-is-java-nowadays"&gt;
  &lt;/a&gt;
  &lt;strong&gt;How is Java Nowadays?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Java, the object-oriented programming language, assists you to develop multiple platforms regarding service businesses. While you write programs in this language, the compiled byte code runs in different operating systems (OS) which include Android, Mac OS, Windows, etc. It deduces a lot of its syntax from the C and C++ program languages. Java offers a number of APIs for developing on-demand taxi service apps.&lt;/p&gt;

&lt;p&gt;Because the Java programming language is linked with concepts like class, object, abstraction, inheritance, encapsulation, etc., it allows you to easily develop a pre-made taxi business software solution for business. Its integral portion of design ensures its robust security to the service app usage. The perfect mobile program still holds its ranking in 2nd place on global developers as they use the language in maximum for developing mobile apps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-do-programmers-use-java-the-most"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Why Do Programmers Use Java the Most?&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Java is an easy-to-use open-source while Swift is an upgraded one than the object-oriented programming language. Its design includes write, compile, and debug, making the developers learn development stuff too quickly.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The language is majorly benefitted with its platform-independent ability. The programmers can run the same program in different systems, which allows them to move software smartly from one computing system to another.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As Java is the official development platform for google android apps, utilizing its wide range of libraries and tools, building on-demand business apps is most popular amongst developers. Its modern UI toolkits allow them to attractively set UI elements for captivating app design.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java has strong memory management, so the developers can easily handle the exceptions through coding. Furtherly, the type checking boosts the complete developed app for business more secure to the service operations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Its multi-threaded environment lets the developers split a bigger task into a diverse of threads and run individually. So, the advantage of not providing every running thread is covered with the tech stack while developers use the programming language for building taxi dispatch software&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#which-one-is-the-best-for-taxi-dispatch-software-development"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Which One is the Best for Taxi Dispatch Software Development?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;When it comes to an argument on which one  Swift or Java is the best for app development processes, the result would be concluded as both. Both programming languages are important to develop a successful &lt;a href="https://www.spotnrides.com/taxi-dispatch-software"&gt;taxi dispatch software&lt;/a&gt; app supported with multiple OS platforms. &lt;/p&gt;

&lt;p&gt;Consequently, it assists you to provide an achievable app design with the arguable React Native (JS), based on Javascript the app developers offer fundamental building blocks which work in both iOS and the Android platforms. Applying all their advancements, you can build a complete scalable app for businesses apt to the existing taxi service marketplace.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;In Conclusion&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;App development for business should be comprehended with client expectations, market demands, adaptable solutions, etc. to make the entrepreneurs fully satisfied with your services. Taking it into consideration, as an individual developer/organization/company, making use of both Swift and Java programming languages to build your taxi dispatch software brings mentioned advantages to your service.&lt;/p&gt;

</description>
      <category>java</category>
      <category>technology</category>
      <category>appdevelopment</category>
      <category>swift</category>
    </item>
    <item>
      <title>101 Digital Accessibility tips and tricks</title>
      <author>InHuOfficial</author>
      <pubDate>Fri, 30 Jul 2021 12:30:46 +0000</pubDate>
      <link>https://dev.to/inhuofficial/101-digital-accessibility-tips-and-tricks-4728</link>
      <guid>https://dev.to/inhuofficial/101-digital-accessibility-tips-and-tricks-4728</guid>
      <description>&lt;p&gt;Hey peeps, yes I have written a listicle. Don't worry I am OK. May I present 101 Accessibility tips and tricks. So if you have a minute (or an hour! OK...68 minutes!) please give it a read. I hope you find it interesting!&lt;/p&gt;

&lt;p&gt;Oh and in case you didn't know, accessibility means making your product, service etc. usable for people with disabilities.&lt;/p&gt;

&lt;p&gt;So whether you are completely new to accessibility, dabbled a bit, or know your stuff...I hope there is something in this listicle for everyone and I truly hope you enjoy it!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stats-for-geeks"&gt;
  &lt;/a&gt;
  stats for geeks:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;107,000+ characters &lt;strong&gt;excluding fiddles&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;16,750+ words - or roughly 55 pages of a book!&lt;/li&gt;
&lt;li&gt;38 code blocks&lt;/li&gt;
&lt;li&gt;4 jsFiddles&lt;/li&gt;
&lt;li&gt;19 images&lt;/li&gt;
&lt;li&gt;115 links&lt;/li&gt;
&lt;li&gt;20+ hours to write and edit&lt;/li&gt;
&lt;li&gt;One tired boy&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#contents"&gt;
  &lt;/a&gt;
  Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#developer-tips-and-general-tips"&gt;Developer Tips (and general tips)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#document-structure"&gt;Document Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#forms"&gt;Forms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#images"&gt;Images&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#language"&gt;Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#navigation"&gt;Navigation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#presentation-and-design"&gt;Presentation and Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#semantics"&gt;Semantics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#social-media"&gt;Social Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tables"&gt;Tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#testing"&gt;Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usability"&gt;Usability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#videos"&gt;Videos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#waiaria"&gt;WAI-ARIA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#developer-tips-and-general-tips"&gt;
  &lt;/a&gt;
  Developer Tips (and General Tips)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q3Y8S7BU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yh1rvvtroyu9z377m49n.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q3Y8S7BU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yh1rvvtroyu9z377m49n.jpg" alt="General tips - line drawing person and lightbulb"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's start with some general developer tips when it comes to tackling accessibility.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-thinking-of-personas-can-help"&gt;
  &lt;/a&gt;
  1. Thinking of personas can help
&lt;/h3&gt;

&lt;p&gt;Often with accessibility the biggest problem is remembering what and who you actually have to consider when developing. There is a lot to remember (over 100 different impairments)!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d13BhwDm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://accessibility.blog.gov.uk/wp-content/uploads/sites/52/2019/02/20190207-6O9A9838Accessibility-login-blog-3-768x512.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d13BhwDm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://accessibility.blog.gov.uk/wp-content/uploads/sites/52/2019/02/20190207-6O9A9838Accessibility-login-blog-3-768x512.jpg" alt="GOV.UK personas hanging on the wall detailing disabilities, how they interact with a computer and a little vector drawing of the character"&gt;&lt;/a&gt;&lt;br&gt;
Image Source: &lt;a href="https://accessibility.blog.gov.uk"&gt;https://accessibility.blog.gov.uk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Personas are a great way to remember all of the different types of impairments people may have and how you can avoid creating barriers for those people (or negate barriers) in your code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://accessibility.blog.gov.uk/2019/02/11/using-persona-profiles-to-test-accessibility/"&gt;GOV.UK did a great write-up on personas&lt;/a&gt; that I would highly recommend reading. It really helps frame why you need to do something and who you are helping!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#2-some-great-resources"&gt;
  &lt;/a&gt;
  2. Some great resources
&lt;/h3&gt;

&lt;p&gt;This is by no means an exhaustive list, just big enough to contain useful information, small enough that it isn't overwhelming!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://webaim.org/intro/"&gt;Introduction to Web Accessibility - Web Aim&lt;/a&gt; - great for understanding why and who our work affects!&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dboudreau.tumblr.com/archive"&gt;Dennis Boudreau's blog&lt;/a&gt; - a little bit old but nearly everything still applies and the way they present the information is easy to digest.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.a11yproject.com/posts/"&gt;The a11y project&lt;/a&gt; - If they just changed the name to "the accessibility project" and stopped using a &lt;a href="https://en.wikipedia.org/wiki/Numeronym#:~:text=A%20numeronym%20is%20a%20number,%22%20%2B%20%22nine%22"&gt;numeronym&lt;/a&gt; (as numeronyms are not very accessible) it would be perfect!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Oh and obviously I need to introduce you to the key reference points:-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.w3.org/WAI/standards-guidelines/wcag/"&gt;Web Content Accessibility Guidelines (WCAG)&lt;/a&gt; - hard to read but they are the standard that nearly every Country works to.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.w3.org/WAI/standards-guidelines/atag/glance/"&gt;Authoring Tool Accessibility Guidelines (ATAG)&lt;/a&gt; - if you build a Content Management System (CMS) or a What You See Is What You Get (WYSIWYG) editor then these are the guidelines you should be following.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.w3.org/WAI/standards-guidelines/aria/"&gt;Web Accessibility Initiative - Accessible Rich Internet Applications (WAI-ARIA or just "ARIA")&lt;/a&gt; - special attributes we can use to add extra meaning to our HTML. Especially important for people who use Assistive Technology (AT) such as a &lt;a href="https://en.wikipedia.org/wiki/Screen_reader"&gt;screen reader&lt;/a&gt;. &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#3-robust"&gt;
  &lt;/a&gt;
  3. Robust
&lt;/h3&gt;

&lt;p&gt;There are 4 principles behind WCAG using the acronym POUR (simplified explanations):-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;1. Perceivable&lt;/strong&gt; - Information is accessible via one of your senses, Assistive Technology (AT) can understand and relay information to you if needed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;2. Operable&lt;/strong&gt; - All interactions can be performed via any input method that works for you.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;3. Understandable&lt;/strong&gt; - interfaces should be easy to understand...predictable behaviour, identify errors in input, simplify language etc. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;4. Robust&lt;/strong&gt; - Developing for one browser is a no no. You application should work or fail gracefully without ruining accessibility.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Throughout this article, although I won't reference them directly, the POUR principles will apply. &lt;/p&gt;

&lt;p&gt;Often the "R" (Robust) is forgotten so I thought I would pay it special attention!&lt;/p&gt;

&lt;p&gt;When developing you should be thinking. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What happens when JavaScript (JS) fails (notice I said &lt;strong&gt;when&lt;/strong&gt;, not if. Network failures, JS errors etc. all mean you code will never be 100% reliable)&lt;/li&gt;
&lt;li&gt;Does this Cascading Style Sheets (CSS) property have good support, if not does it gracefully degrade (does the lack of that property being supported break the website and make it unusable)&lt;/li&gt;
&lt;li&gt;Do I provide good feedback to people who use my product when server side errors occur?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I would highly recommend you bookmark &lt;a href="https://canwe.dev/"&gt;canwe.dev&lt;/a&gt;. It links to useful resources for checking your code and mark-up is accessible and compatible with a wide range of browsers. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#4-learn-to-use-a-screen-reader"&gt;
  &lt;/a&gt;
  4. Learn to use a screen reader
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.nvaccess.org/download/"&gt;NVDA&lt;/a&gt; is free for Windows, VoiceOver is included on Apple devices, &lt;a href="https://help.gnome.org/users/orca/stable/"&gt;ORCA is on nearly every Linux distro&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;It costs you nothing other than maybe 30 minutes of your time to learn how to use the basic functionality of a screen reader.&lt;/p&gt;

&lt;p&gt;Once you have learned how to use a screen reader you will immediately find out how bad your code and mark-up is. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://webaim.org/projects/million/#wcag"&gt;97.4% of website home pages have accessibility errors that are detectable automatically&lt;/a&gt;, you don't think you are in the top 2% do you?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn to use a screen reader&lt;/strong&gt; and test your site and components you build with it.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#5-have-a-checklist"&gt;
  &lt;/a&gt;
  5. Have a checklist
&lt;/h3&gt;

&lt;p&gt;Developing a new component? Starting a new project? Overhauling an existing site?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Have a checklist.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can't possibly remember everything you need to think about.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.a11yproject.com/checklist/"&gt;Here is an accessibility checklist&lt;/a&gt; to get you started, or you could use &lt;a href="https://webaim.org/standards/wcag/checklist"&gt;this detailed WCAG checklist&lt;/a&gt; instead once you have gotten used to accessibility principles!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#6-beware-content-overlays-claiming-to-fix-accessibility-for-you"&gt;
  &lt;/a&gt;
  6. Beware Content Overlays claiming to fix accessibility for you!
&lt;/h3&gt;

&lt;p&gt;There is a library or service for everything!&lt;/p&gt;

&lt;p&gt;But accessibility is one area that hasn't quite caught up with that idea yet!&lt;/p&gt;

&lt;p&gt;There are a lot of companies such as AccessiBe, EqualWeb, UserWay etc. that claim to be able to fix accessibility on your website in just one line of code using Artificial Intelligence (AI) - or more accurately Machine Learning (ML).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;They do not work&lt;/strong&gt;, in fact a lot of the time they make things worse!&lt;/p&gt;

&lt;p&gt;Don't believe me? &lt;/p&gt;

&lt;p&gt;If you have an accessibility checker installed in your browser (for example &lt;a href="https://chrome.google.com/webstore/detail/axe-devtools-web-accessib/lhdoppojpmngadmnindnejefpokejbdd"&gt;Axe for Chrome&lt;/a&gt;) go to &lt;a href="https://www.sprouts.com/"&gt;sprouts.com&lt;/a&gt; and run a test. &lt;/p&gt;

&lt;p&gt;Then scroll down to the bottom of the page and click "accessibility" in the bottom left part of the footer and turn on "blind users" mode on the popup. &lt;/p&gt;

&lt;p&gt;The sprout site goes from 38 errors on the home page to 86! And those are the ones we can pick up automatically!&lt;/p&gt;

&lt;p&gt;It should be noted that I was going to suggest neilpatel.com to check, as that used accessibility overlay until recently. &lt;/p&gt;

&lt;p&gt;However it finally seems he has listened to people complaining as the site now only has colour contrast change abilities from what I can tell! &lt;strong&gt;Neil if you ever read this&lt;/strong&gt;, just change the colours behind text and use your brand colours elsewhere, dark grey goes great with orange and provides great contrast!&lt;/p&gt;

&lt;p&gt;If you still don't believe me on accessibility overlays just read this &lt;a href="https://adrianroselli.com/2020/06/accessibe-will-get-you-sued.html"&gt;blog post on AccessiBe from Adrian Roselli&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Or maybe watch the following video from &lt;a href="https://habengirma.com/"&gt;Haben Girma&lt;/a&gt;, the first deaf-blind person to graduate from Harvard Law and a disability rights activist! &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/R12Z1Sp-u4U"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I could go on but I think you get the idea! &lt;strong&gt;There are no shortcuts currently.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-legal-stuff"&gt;
  &lt;/a&gt;
  7. Legal stuff
&lt;/h3&gt;

&lt;p&gt;In most countries it is illegal to produce a website that isn't accessible under disability / equal rights laws.&lt;/p&gt;

&lt;p&gt;If you want to see a list of all the applicable laws in different Countries (plus my thoughts on why accessibility still isn't being addressed) I would suggest checking out &lt;a href="https://dev.to/inhuofficial/accessibility-understanding-why-it-is-important-and-why-the-current-approach-doesn-t-make-people-implement-it-3mk3#ok-i-get-it-it-is-a-big-problem-that-isnt-being-addressed-what-were-you-saying-about-the-wrong-approach"&gt;this section of my recent post on understanding why accessibility gets ignored&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oh and if you operate in the US - &lt;a href="https://www.digitalcommerce360.com/2021/07/07/web-accessibility-lawsuits-on-track-to-increase-nearly-20-in-2021/"&gt;accessibility lawsuits are set to reach a record high in 2021!&lt;/a&gt;. Just a little food for thought before you write another key stroke!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-accessibility-first-costs-very-little"&gt;
  &lt;/a&gt;
  8. Accessibility first costs very little.
&lt;/h3&gt;

&lt;p&gt;Are you a product manager / stakeholder / do you make the decisions? Or are you a loud mouth like me who won't shut up about things?&lt;/p&gt;

&lt;p&gt;Put accessibility as a top priority &lt;strong&gt;today&lt;/strong&gt; and get the whole team on board. &lt;/p&gt;

&lt;p&gt;Designing a product to be accessible from the start adds very little time and effort. &lt;/p&gt;

&lt;p&gt;Trying to make an existing product accessible is time consuming, costly and could even require complete rewrites of some parts of your applications if you really got things wrong from the start!&lt;/p&gt;

&lt;p&gt;Save yourself a lot of trouble, start with accessibility rather than it being something you "will do later" as it will save your company a fortune and a load of headaches!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#document-structure"&gt;
  &lt;/a&gt;
  Document Structure
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6UQc04CQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/65870xr5avzof7hrulab.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6UQc04CQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/65870xr5avzof7hrulab.jpg" alt="semantic sectional HTML elements wireframe"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the key aspects of accessibility is how your web page is structured. It also helps with Search Engine Optimisation (SEO) and organising your layouts. So stop using "&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; soup" and learn how to use HTML properly!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-headings-are-very-important"&gt;
  &lt;/a&gt;
  9. Headings are very important
&lt;/h3&gt;

&lt;p&gt;People who use a screen reader (like yourself, you did learn how to use a screen reader as discussed in point 4 didn't you? 😋) primarily use the keys 1-6 to cycle through headings (&lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt;) on the page. &lt;/p&gt;

&lt;p&gt;Headings also make the document a lot easier to understand for everybody else as it gives the page structure and hierarchy.&lt;/p&gt;

&lt;p&gt;So don't use &lt;code&gt;&amp;lt;p class="h1"&amp;gt;&lt;/code&gt;, use the appropriate heading element when it makes sense.&lt;/p&gt;

&lt;p&gt;On the flip side if a heading is not the right size in the design use CSS to change it. Don't use a different heading "because it looks better". &lt;/p&gt;

&lt;p&gt;That leads me nicely on to...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-dont-skip-heading-levels"&gt;
  &lt;/a&gt;
  10. Don't skip heading levels
&lt;/h3&gt;

&lt;p&gt;Remember how I told you that people who use a screen reader tend to navigate with the keys 1-6 to get an idea of the page structure and contents? &lt;/p&gt;

&lt;p&gt;Well if you skip heading levels it can be very confusing as they expect a heading level, find it doesn't exist and may assume there is no further relevant content.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/headingsmap/flbjommegcjonpdmenkdiocclhjacmbi"&gt;Here is a simple Chrome plugin to find skipped heading levels&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Run it on your articles, sites and products before you publish and try and get the heading levels into a logical hierarchy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-there-are-7-heading-levels"&gt;
  &lt;/a&gt;
  11. There are 7 heading levels!
&lt;/h3&gt;

&lt;p&gt;If you have a &lt;strong&gt;really&lt;/strong&gt; complex document you may find that you need a 7th heading level. &lt;/p&gt;

&lt;p&gt;While these do not exist in native HTML they do exist as WAI-ARIA attributes. &lt;/p&gt;

&lt;p&gt;This is useful for people who use Assistive Technology (AT) as it provides even more information about the structure and relationships on a complex page.&lt;/p&gt;

&lt;p&gt;You might not need to use it often, but it is handy to have in your back pocket for those rare occasions!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h6&amp;gt;&lt;/span&gt;A deeply nested section&lt;span class="nt"&gt;&amp;lt;/h6&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Some Text in heading level 6&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"heading"&lt;/span&gt; &lt;span class="na"&gt;aria-level=&lt;/span&gt;&lt;span class="s"&gt;"7"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    This is effectively a &lt;span class="nt"&gt;&amp;lt;h7&amp;gt;&lt;/span&gt; even though they don't exist!
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;[...content...]&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can even use CSS selectors to style them automatically without the need for extra classes etc. ensuring you don't forget to add a class etc!&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;aria-level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"7"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#12-one-raw-lth1gt-endraw-per-page"&gt;
  &lt;/a&gt;
  12. One &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; per page
&lt;/h3&gt;

&lt;p&gt;I will end the debate here and now. It may be valid HTML to have more than &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; on a page...it is not considered a good practice.&lt;/p&gt;

&lt;p&gt;Your &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; should describe the current page location to ease navigation, so that people know where they are on the site. &lt;/p&gt;

&lt;p&gt;Every page should have a &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; and only one &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;. It is the expected way pages are structured and expected behaviour is a key element for accessibility. &lt;/p&gt;

&lt;p&gt;Expected behaviour and expected design patterns are why you tend to see menu buttons on mobiles at the top of the page. Even though it is a usability nightmare, that is where they are expected to be!&lt;/p&gt;

&lt;p&gt;Don't worry though, even though most of the points in this article are "you must", if you do decide to use multiple &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;s you can still be WCAG (and legally) "compliant", it is just annoying for people who use a screen reader!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#13-landmarks-are-important-too"&gt;
  &lt;/a&gt;
  13. Landmarks are important too
&lt;/h3&gt;

&lt;p&gt;To try and explain landmarks in their entirety would take a whole article. &lt;/p&gt;

&lt;p&gt;But you should learn about and use the following elements to organise your content:-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header"&gt;&lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt;&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav"&gt;&lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main"&gt;&lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section"&gt;&lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside"&gt;&lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer"&gt;&lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article"&gt;&lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is important for people who use AT as they may also cycle by sections when exploring a page (not just headings). &lt;/p&gt;

&lt;p&gt;It is great for SEO as search engines can then understand relationships better on the page.&lt;/p&gt;

&lt;p&gt;It is also better for you as a developer as it makes it easier to maintain a page hierarchy and split a page into manageable sections.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#14-headings-and-sections"&gt;
  &lt;/a&gt;
  14. Headings and Sections
&lt;/h3&gt;

&lt;p&gt;If you structure your document correctly (see the tips in the previous point) then you will probably end up using the &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; element to separate distinct areas of the page.&lt;/p&gt;

&lt;p&gt;To make these sections useful for people who navigate via sectional elements, you should use WAI-ARIA to associate the heading for that section with the section itself.&lt;/p&gt;

&lt;p&gt;The normal (and probably easiest) way to do this would be using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-labelledby_attribute"&gt;&lt;code&gt;aria-labelledby&lt;/code&gt;&lt;/a&gt; pointing to the heading of the section (with a corresponding ID).&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;aria-labelledby=&lt;/span&gt;&lt;span class="s"&gt;"sectionHeader1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"sectionHeader1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;A great section&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;aria-labelledby=&lt;/span&gt;&lt;span class="s"&gt;"sectionHeader2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"sectionHeader2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;An even better section&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#15-give-the-page-a-descriptive-raw-lttitlegt-endraw-"&gt;
  &lt;/a&gt;
  15. Give the page a descriptive &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; element is normally read out by AT when page navigation occurs (a new page is loaded).&lt;/p&gt;

&lt;p&gt;As such a descriptive &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; is important. If you have a site where multiple pages have the same &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; content it can make navigation confusing. Make sure every &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; is unique across the entire site.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#16-dom-order-should-match-visual-order"&gt;
  &lt;/a&gt;
  16. DOM order should match visual order
&lt;/h3&gt;

&lt;p&gt;If you are using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction"&gt;&lt;code&gt;flex-direction: row-reverse&lt;/code&gt;&lt;/a&gt; in your CSS, you have probably caused an accessibility issue on your site.&lt;/p&gt;

&lt;p&gt;The order in the DOM should match the logical order (the flow and how you would read them naturally) of items on the page. &lt;/p&gt;

&lt;p&gt;This is important as if you have 3 boxes A, B and C and you use &lt;code&gt;flex-direction: row-reverse&lt;/code&gt; or &lt;code&gt;float:right&lt;/code&gt; this is no longer true. &lt;/p&gt;

&lt;p&gt;They will appear visually as C, B and A. &lt;/p&gt;

&lt;p&gt;You will probably then reverse the DOM order so that visually they read "A, B, C". &lt;/p&gt;

&lt;p&gt;Unfortunately people who use AT such as screen readers will read the content as "C, B, A" while everyone else reads the page as "A, B, C".&lt;/p&gt;

&lt;p&gt;Items should be added to the DOM in the order that you would expect them to be read visually. Your CSS should not interfere with this order.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#17-focus-order-should-match-dom-order"&gt;
  &lt;/a&gt;
  17. Focus order should match DOM order
&lt;/h3&gt;

&lt;p&gt;In a similar fashion, when someone Tabs through the page, controls such as links, buttons etc. should be focused in a logical order.&lt;/p&gt;

&lt;p&gt;This is why it is very rarely a good idea to use&lt;code&gt;tabindex&lt;/code&gt; attributes with a positive value, they change the focus order of the document.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;tabindex=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;I am focused last!&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;tabindex=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;I am focused second!&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;tabindex=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;I am focused first!&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;tabindex=&lt;/span&gt;&lt;span class="s"&gt;"-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;I don't receive focus at all&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;If you need to make something focusable within the focus order of the page then use &lt;code&gt;tabindex="0"&lt;/code&gt;. (Note: this normally means you haven't used the right HTML element. Double check there isn't a better element if you are using &lt;code&gt;tabindex="0"&lt;/code&gt; to add an element to the page focus order)&lt;/p&gt;

&lt;p&gt;Adding &lt;code&gt;tabindex="0"&lt;/code&gt; will allow the element to be in the logical place in the DOM focus order (remember point 16, make sure your DOM order is correct!).&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#18-dont-use-tables-for-layouts"&gt;
  &lt;/a&gt;
  18. Don't use tables for layouts
&lt;/h3&gt;

&lt;p&gt;You would think I wouldn't have to say this in 2021, but it still happens. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;s are for &lt;strong&gt;tabular data&lt;/strong&gt; not for laying out a page (I am aware email is an exception to this rule, don't @ me!).&lt;/p&gt;

&lt;p&gt;Instead use CSS and relevant, semantic HTML elements.&lt;/p&gt;

&lt;p&gt;You may inherit a legacy application where removing tables is completely infeasible. As a last resort you can use &lt;code&gt;role="presentation"&lt;/code&gt; on every single &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; etc. to remove the semantic information from the table (elements with &lt;code&gt;role="presentation"&lt;/code&gt; effectively become &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s).&lt;/p&gt;

&lt;p&gt;It is not ideal, but that is your "get out of jail free" card if there is &lt;strong&gt;no other choice&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#19-link-text-button-text-and-labels-should-be-unique"&gt;
  &lt;/a&gt;
  19. Link Text, button text and labels should be unique
&lt;/h3&gt;

&lt;p&gt;All links on a page should have unique link text that &lt;strong&gt;perform different actions&lt;/strong&gt;. So if you have a load of "read more" links then you have some work to do.&lt;/p&gt;

&lt;p&gt;There are loads of ways to fix this (too many for an article like this) but here is a typical example using &lt;code&gt;aria-labelledby&lt;/code&gt; to change the link text for AT.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;article&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"article1-title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;My super duper article&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="na"&gt;attributes&lt;/span&gt; &lt;span class="na"&gt;etc.&lt;/span&gt; &lt;span class="na"&gt;here&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Article brief description with truncation...&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"article1-url"&lt;/span&gt; &lt;span class="na"&gt;aria-labelledby=&lt;/span&gt;&lt;span class="s"&gt;"article1-title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Read more&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; 
&lt;span class="nt"&gt;&amp;lt;/article&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;article&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"article2-title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Your code sucks, lets fix that&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="na"&gt;attributes&lt;/span&gt; &lt;span class="na"&gt;etc.&lt;/span&gt; &lt;span class="na"&gt;here&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Yes you, your code sucks, but we can help...&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"article2-url"&lt;/span&gt; &lt;span class="na"&gt;aria-labelledby=&lt;/span&gt;&lt;span class="s"&gt;"article2-title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Read more&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; 
&lt;span class="nt"&gt;&amp;lt;/article&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can apply similar techniques for buttons in tables with repeated rows, labels on forms (if you have two different forms with the same label text on a page) etc.&lt;/p&gt;

&lt;p&gt;Note: In the opening sentence of this tip I noted that the text should be unique if a link, button etc. performs a unique action. If two hyperlinks go to the same document at the same place then the link text can (and probably should) be the same.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#forms"&gt;
  &lt;/a&gt;
  Forms
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bW2nnJgp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7z43wdz77nv2vdxyxps5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bW2nnJgp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7z43wdz77nv2vdxyxps5.jpg" alt="bad form design vs good form design line drawing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From a simple contact form through to an online exam, forms are important. So lets make sure everyone can use them!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#20-labels"&gt;
  &lt;/a&gt;
  20. Labels
&lt;/h3&gt;

&lt;p&gt;It is unreal to think I still have to say this but &lt;strong&gt;add labels to your inputs&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;No a &lt;code&gt;placeholder&lt;/code&gt; attribute is not sufficient, a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element associated with an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; is essential. &lt;/p&gt;

&lt;p&gt;With that being said it isn't entirely your fault, WCAG does make it difficult to answer even simple questions...&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/placeholder-text-on-an-input-instead-of-a-label-does-it-pass-wcag-the-answer-may-surprise-you-94m" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;I was shocked 😱 that placeholder text on an &amp;lt;input&amp;gt; (instead of a &amp;lt;label&amp;gt;) might TECHNICALLY PASS WCAG⁉ Do you agree?&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial ・ Jul 15 ・ 10 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#21-labels-should-always-be-visible"&gt;
  &lt;/a&gt;
  21. Labels should always be visible
&lt;/h3&gt;

&lt;p&gt;An always visible label is essential for people with cognitive impairments or anxiety related disorders. &lt;/p&gt;

&lt;p&gt;Without them you can end up with people having to delete the information they inputted to ensure it was correct, then re-entering their information. On a sufficiently long form this can mean they never complete the form.&lt;/p&gt;

&lt;p&gt;This is one of the reasons why a &lt;code&gt;placeholder&lt;/code&gt; attribute is not sufficient for labelling a control.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#22-associate-labels-with-inputs"&gt;
  &lt;/a&gt;
  22. Associate labels with inputs.
&lt;/h3&gt;

&lt;p&gt;A label on its own isn't much use for a screen reader. We need to tell a screen reader which input / control a label belongs to.&lt;/p&gt;

&lt;p&gt;While it is perfectly valid to use &lt;strong&gt;implicit labels&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;First Name
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"first-name"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"e.g. Toni"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://a11ysupport.io/tech/html/label_element"&gt;Certain dictation / voice control software does not work with implicit labels!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As such you should use &lt;strong&gt;explicit labels&lt;/strong&gt; (or what I like to call "old school labels"):&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"firstName"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;First Name&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"first-name"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"e.g. Toni"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"firstName"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Where you associate the label with the input using &lt;code&gt;for="IDofInput"&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;There is an added bonus with correctly associated labels (using either method), you can click them and it focuses the corresponding input. This increases the clickable area to focus an input (more on tap target sizes later!)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#23-labels-should-be-visually-next-to-inputs"&gt;
  &lt;/a&gt;
  23. Labels should be visually next to inputs.
&lt;/h3&gt;

&lt;p&gt;Your label should be nice and close to the input it labels. &lt;/p&gt;

&lt;p&gt;Having a lot of white space between a label and the input it is linked to can be problematic for people who use a Screen Magnifier. This is a piece of software that zooms into a part of the screen to make it easier to read. &lt;/p&gt;

&lt;p&gt;One way to know how this feels is "the straw test". Close your fist until there is a gap the width of a straw left open.&lt;/p&gt;

&lt;p&gt;Now hold your hand up to one eye and look through the tiny opening. &lt;/p&gt;

&lt;p&gt;This will give you an idea of how much of the screen someone using a screen magnifier can see at once. &lt;/p&gt;

&lt;p&gt;This is also the same for someone who has a condition that causes "tunnel vision", where only a small part of their visual field provides useful vision. There are a lot of other vision impairments that limit the field of vision so arrange related items so they are close together.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iWurF587--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uojc75b5m6jjge16w1xp.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iWurF587--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uojc75b5m6jjge16w1xp.jpg" alt='Example of "tunnel vision" where only a tiny portion of a cow is visible and the rest of the image is black'&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#24-group-related-fields"&gt;
  &lt;/a&gt;
  24. Group Related Fields
&lt;/h3&gt;

&lt;p&gt;If you have numerous inputs that are related you should group them using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset"&gt;&lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt;&lt;/a&gt;. You can then label these grouped controls with the &lt;code&gt;&amp;lt;legend&amp;gt;&lt;/code&gt; element.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;fieldset&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;legend&amp;gt;&lt;/span&gt;Shipping Address:&lt;span class="nt"&gt;&amp;lt;/legend&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"shipping_name"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      Name
  &lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"shipping_name"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"shipping_name"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"shipping_street"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Street
  &lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"shipping_street"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"shipping_street"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  [...]
&lt;span class="nt"&gt;&amp;lt;/fieldset&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;fieldset&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;legend&amp;gt;&lt;/span&gt;Billing Address:&lt;span class="nt"&gt;&amp;lt;/legend&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"billing_name"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Name
  &lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"billing_name"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"billing_name"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"billing_street"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Street
  &lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"billing_street"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"billing_street"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  [...]
&lt;span class="nt"&gt;&amp;lt;/fieldset&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Please note that you should use either visually hidden text or WAI-ARIA to add extra info to labels. I did not include that in the above example to make the example easier to follow.&lt;/p&gt;

&lt;p&gt;Although covered later a &lt;a href="https://stackoverflow.com/a/62109988/2702894"&gt;robust CSS class for hiding content visually but making it still accessible for screen readers&lt;/a&gt; is:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.visually-hidden&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt; &lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c"&gt;/* IE6, IE7 - a 0 height clip, off to the bottom right of the visible 1px box */&lt;/span&gt;
    &lt;span class="nl"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c"&gt;/*maybe deprecated but we need to support legacy browsers */&lt;/span&gt;
    &lt;span class="nl"&gt;clip-path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c"&gt;/*modern browsers, clip-path works inwards from each corner*/&lt;/span&gt;
    &lt;span class="nl"&gt;white-space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;nowrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* added line to stop words getting smushed together (as they go onto seperate lines and some screen readers do not understand line feeds as a space */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can find &lt;a href="https://www.w3.org/WAI/tutorials/forms/grouping/"&gt;more information on grouping inputs on w3.org&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#25-allow-people-to-review-information"&gt;
  &lt;/a&gt;
  25. Allow people to review information
&lt;/h3&gt;

&lt;p&gt;If you are collecting more than just basic information, or if submitting information cannot be reversed (there is no way to edit it once submitted), you should allow people to review that information before final submission.&lt;/p&gt;

&lt;p&gt;The easiest way to do this is once someone submits a form you present that information back to them. Allow them the option to edit that information before submitting.&lt;/p&gt;

&lt;p&gt;This is particularly important for things like financial transactions such as transferring funds to another person. It is also important for legal commitments such as agreeing to terms and conditions of a sale or purchase.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.w3.org/TR/WCAG20-TECHS/G98.html"&gt;WCAG technique G98&lt;/a&gt; can help with further guidance on this.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#26-errors-should-be-associated-correctly"&gt;
  &lt;/a&gt;
  26. Errors should be associated correctly
&lt;/h3&gt;

&lt;p&gt;If a person makes a mistake on your form you should ensure that any error messages are clearly associated with the input they have filled in incorrectly.&lt;/p&gt;

&lt;p&gt;So from a visual perspective errors should be directly next to the relevant input. &lt;/p&gt;

&lt;p&gt;Alternatively all errors can be presented at the top of the form, but the relevant inputs with errors should be highlighted (with more than just colour! Ensure an icon or text is visible as well that indicates where the errors are).&lt;/p&gt;

&lt;p&gt;Finally for people who use Assistive Tech (AT) we need to associate the error with the relevant input for them as well. &lt;/p&gt;

&lt;p&gt;One way this can be achieved is with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-describedby_attribute"&gt;&lt;code&gt;aria-describedby&lt;/code&gt;&lt;/a&gt;. You should also add &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-invalid_attribute"&gt;&lt;code&gt;aria-invalid&lt;/code&gt;&lt;/a&gt; to the input to indicate there is an error.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"email-address"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Your Email Address
  &lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"email-error"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Error: Your email address must contain an @ symbol
  &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; 
    &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"email-address"&lt;/span&gt; 
    &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; 
    &lt;span class="na"&gt;aria-describedby=&lt;/span&gt;&lt;span class="s"&gt;"email-error"&lt;/span&gt;
    &lt;span class="na"&gt;aria-invalid=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#27-use-autocomplete"&gt;
  &lt;/a&gt;
  27. Use autocomplete
&lt;/h3&gt;

&lt;p&gt;Autocomplete can be really useful for people with cognitive impairments, especially those affecting memory and information retention.&lt;/p&gt;

&lt;p&gt;It also makes life easier for everyone else!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete"&gt;There are a lot of options for autocomplete&lt;/a&gt;, but support varies across every browser, however &lt;a href="https://caniuse.com/?search=autocomplete"&gt;support for autocomplete is pretty good overall&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;For example, when filling out credit card information your form may look something like:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"CCname"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Name on card&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"CCname"&lt;/span&gt; &lt;span class="na"&gt;autocomplete=&lt;/span&gt;&lt;span class="s"&gt;"cc-name"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"CCnumber"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Card Number&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"cardnumber"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"CCnumber"&lt;/span&gt; &lt;span class="na"&gt;autocomplete=&lt;/span&gt;&lt;span class="s"&gt;"cc-number"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"CCcvc"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;CVC (3 numbers on back)&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"cvc"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"CCcvc"&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt; &lt;span class="na"&gt;autocomplete=&lt;/span&gt;&lt;span class="s"&gt;"cc-csc"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"CCexpiry"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Expiry&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"cc-exp"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"CCexpiry"&lt;/span&gt; &lt;span class="na"&gt;autocomplete=&lt;/span&gt;&lt;span class="s"&gt;"cc-exp"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Try to avoid &lt;code&gt;autocomplete="off"&lt;/code&gt; on inputs unless you are sure they will not be filled in correctly.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#28-dont-disable-paste"&gt;
  &lt;/a&gt;
  28. Don't disable paste
&lt;/h3&gt;

&lt;p&gt;I think I can sum this point up in a comment I recently made on an article on DEV.to.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There is a special circle in hell for people who disable paste.&lt;/p&gt;

&lt;p&gt;A massive security issue as it makes people choose simpler passwords etc. and an even bigger accessibility issue as people with cognitive disabilities may rely on copy and pasting information to fill out forms, authentication etc.&lt;/p&gt;

&lt;p&gt;Luckily WCAG 2.2 addresses this fact so it will now mean your site is not WCAG compliant and therefore illegal in about 80% of countries.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.w3.org/WAI/WCAG22/Understanding/accessible-authentication"&gt;https://www.w3.org/WAI/WCAG22/Understanding/accessible-authentication&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So &lt;strong&gt;don't do it on inputs&lt;/strong&gt; or at all preferably.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Original comment: &lt;a href="https://dev.to/inhuofficial/comment/1gdoo"&gt;https://dev.to/inhuofficial/comment/1gdoo&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#images"&gt;
  &lt;/a&gt;
  Images
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T4ZkrdCG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ctr3objpyaite5ob95u.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T4ZkrdCG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ctr3objpyaite5ob95u.jpg" alt="Accessible image markup vs inaccessible image markup side by side"&gt;&lt;/a&gt;&lt;br&gt;
Making images accessible is not that difficult. But this is one of the quickest wins for most websites when it comes to accessibility improvements. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#29-raw-alt-endraw-attributes"&gt;
  &lt;/a&gt;
  29. &lt;code&gt;alt&lt;/code&gt; attributes
&lt;/h3&gt;

&lt;p&gt;I feel like a broken record...it is 2021 &lt;strong&gt;why have people not got this yet&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Every image (that adds meaning to a page) should have an &lt;code&gt;alt&lt;/code&gt; attribute. This is useful both to people who use AT but also for people who disable images on their devices (e.g. to save data).&lt;/p&gt;

&lt;p&gt;And it isn't difficult to write a good &lt;code&gt;alt&lt;/code&gt; description in most cases either. Just imagine that you are reading the document to someone over the phone and describe the image to them. Do that and you will write a great &lt;code&gt;alt&lt;/code&gt; description.&lt;/p&gt;

&lt;p&gt;Oh and &lt;code&gt;alt&lt;/code&gt; attributes &lt;strong&gt;are not about SEO&lt;/strong&gt; - for the love of all that is mighty just stop trying to keyword optimise your image &lt;code&gt;alt&lt;/code&gt; attributes (if you actually add them). &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#30-dont-add-raw-alt-endraw-text-to-images"&gt;
  &lt;/a&gt;
  30. Don't add &lt;code&gt;alt&lt;/code&gt; text to images
&lt;/h3&gt;

&lt;p&gt;Wait...but you...I don't get it?!&lt;/p&gt;

&lt;p&gt;Sometimes images are for presentation only. So they could be background images for example. They add nothing of value to the page or to someone using AT or with images switched off.&lt;/p&gt;

&lt;p&gt;In this case you should add an &lt;strong&gt;empty&lt;/strong&gt; &lt;code&gt;alt&lt;/code&gt; attribute (&lt;code&gt;alt=""&lt;/code&gt;). &lt;/p&gt;

&lt;p&gt;This means that AT will ignore this image. Leaving the &lt;code&gt;alt&lt;/code&gt; attribute off entirely can lead some screen readers to try and read the file name out...and as you can imagine that is not a good experience!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Top tip:&lt;/strong&gt; For decorative images add &lt;code&gt;role="presentation"&lt;/code&gt; as well. This allows you to search for images on the site with empty or missing &lt;code&gt;alt&lt;/code&gt; attributes (so you can fill them in), but if they have &lt;code&gt;role="presentation"&lt;/code&gt; you know you can skip over them as they are purely decorative.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#31-dont-use-picture-of-in-raw-alt-endraw-attributes"&gt;
  &lt;/a&gt;
  31. Don't use "picture of" in &lt;code&gt;alt&lt;/code&gt; attributes
&lt;/h3&gt;

&lt;p&gt;Assistive Tech (AT) will already know that they are currently on an image and they will assume it is a picture of something.&lt;/p&gt;

&lt;p&gt;So don't write &lt;code&gt;alt="picture of a flower"&lt;/code&gt;...it adds nothing, just write &lt;code&gt;alt="a flower"&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;With that being said if the image is an illustration / graphic etc. it is good information to add.&lt;/p&gt;

&lt;p&gt;So if you had an illustration of a light bulb, &lt;code&gt;alt="a light bulb"&lt;/code&gt; is not as good as &lt;code&gt;alt="line drawing of a light bulb"&lt;/code&gt; or &lt;code&gt;alt="light bulb graphic"&lt;/code&gt;). &lt;/p&gt;

&lt;p&gt;Even then don't use "picture of"...&lt;code&gt;alt="a picture of a line drawing of a light bulb"&lt;/code&gt;...as you can see it adds loads of unnecessary noise. &lt;/p&gt;

&lt;p&gt;And in case you take things literally, &lt;code&gt;alt="a woman smiling while looking at a picture of her children"&lt;/code&gt; is OK as the picture is part of the image you are describing.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#32-use-raw-ltfiguregt-endraw-when-appropriate"&gt;
  &lt;/a&gt;
  32. Use &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; when appropriate
&lt;/h3&gt;

&lt;p&gt;If an image has extra meaning that may be useful to a reader (such as where the image was taken, who is in the image, when the image is from etc.) then having a caption (normally underneath) for the image is useful.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure"&gt;The &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; element&lt;/a&gt; allows us to easily associate a caption with an image (&lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; has a few other uses but this is the main one).&lt;/p&gt;

&lt;p&gt;For the caption we can also use a semantically correct HTML element, the &lt;code&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;By combining these two AT can understand the relationship between the caption and the image and expose that information to the person using the Assistive Technology.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;figure&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;”img.jpg”&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;”squirrel”&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;figcaption&amp;gt;&lt;/span&gt;
     A Grey squirrel eating nuts in the Woods.
  &lt;span class="nt"&gt;&amp;lt;/figcaption&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/figure&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#33-for-complex-graphs-charts-etc-have-an-alternative"&gt;
  &lt;/a&gt;
  33. For complex graphs, charts etc. have an alternative
&lt;/h3&gt;

&lt;p&gt;Sometimes it just isn't possible (or incredibly difficult) to make a complex graph or chart accessible for all.&lt;/p&gt;

&lt;p&gt;One way you can fix this is by providing a text alternative.&lt;/p&gt;

&lt;p&gt;Typically for charts and graphs these are derived from tabular data, so include a table of the data. &lt;/p&gt;

&lt;p&gt;Later in this list we cover "hiding content visually" if your design cannot accommodate a table (i.e. a dashboard with limited space).&lt;/p&gt;

&lt;p&gt;When dealing with infographics you could provide a correctly marked up and accessible PDF as an alternative. &lt;/p&gt;

&lt;p&gt;Better yet, an accessible HTML equivalent of the page with all the same info could be created. Having an HTML equivalent or an infographic is good SEO practice I would suggest that is the best option.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#34-inline-svgs-dont-have-raw-alt-endraw-attributes"&gt;
  &lt;/a&gt;
  34. Inline SVGs don't have &lt;code&gt;alt&lt;/code&gt; attributes
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Scalable_Vector_Graphics"&gt;Scalable Vector Graphics (SVGs)&lt;/a&gt; are really useful for websites. This is due to the way SVGs scale to any size without loss of quality and they (generally) have a small file size.&lt;/p&gt;

&lt;p&gt;They can also be inlined within the HTML so they save on network requests!&lt;/p&gt;

&lt;p&gt;If you inline an SVG though you can't add an &lt;code&gt;alt&lt;/code&gt; attribute to it.&lt;/p&gt;

&lt;p&gt;Instead you add a &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; within the SVG itself! &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; is the accessible name for the SVG and is the equivalent of an &lt;code&gt;alt&lt;/code&gt; attribute on an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element. &lt;/p&gt;

&lt;p&gt;The same rules apply for what to enter in the &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; as a standard image, imagine you are describing the image to someone over the phone. &lt;/p&gt;

&lt;p&gt;It is worth noting, there is also the &lt;code&gt;&amp;lt;desc&amp;gt;&lt;/code&gt; element. Useful for if your SVG image is particularly complex and needs a longer description. This is roughly the same as &lt;code&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt; for an image.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"100"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"75"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Dark rectangle&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;desc&amp;gt;&lt;/span&gt;A grey rectangle with rounded corners and a dark green border&lt;span class="nt"&gt;&amp;lt;/desc&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"75"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"50"&lt;/span&gt; &lt;span class="na"&gt;rx=&lt;/span&gt;&lt;span class="s"&gt;"20"&lt;/span&gt; &lt;span class="na"&gt;ry=&lt;/span&gt;&lt;span class="s"&gt;"20"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"#666"&lt;/span&gt; &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"#229b23"&lt;/span&gt; &lt;span class="na"&gt;stroke-fill=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#language"&gt;
  &lt;/a&gt;
  Language
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lya8BZUL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sdpkhdk3zpu1p5gr1777.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lya8BZUL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sdpkhdk3zpu1p5gr1777.jpg" alt="Accessible language markup vs inaccessible image markup side by side"&gt;&lt;/a&gt;&lt;br&gt;
Setting the right language and using the right language are the keys to accessibility bliss!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#35-use-the-raw-lang-endraw-attribute-on-your-document"&gt;
  &lt;/a&gt;
  35. Use the &lt;code&gt;lang&lt;/code&gt; attribute on your document
&lt;/h3&gt;

&lt;p&gt;Setting the language of the page is important for people who use AT, it is also important so Google etc. can offer page translation easily.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;A &lt;a href="https://www.w3schools.com/tags/ref_language_codes.asp"&gt;list of language codes can be found here&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#36-use-the-raw-lang-endraw-attribute-on-change-of-language"&gt;
  &lt;/a&gt;
  36. Use the &lt;code&gt;lang&lt;/code&gt; attribute on change of language.
&lt;/h3&gt;

&lt;p&gt;Maybe your main document is in English, but you like to "mix things up" and add the occasional French phrase in there.&lt;/p&gt;

&lt;p&gt;For people who use Assistive Tech (AT) this can be really problematic if you don't mark it up correctly. A screen reader will try and read the French text using an English Dictionary and rule set (and probably fail miserably!)&lt;/p&gt;

&lt;p&gt;So if you change language within a document be sure to use the &lt;code&gt;lang&lt;/code&gt; attribute on an element that wraps the text in a different language. &lt;/p&gt;

&lt;p&gt;You do not need to "switch back" to the original language, only the text within any element with the &lt;code&gt;lang&lt;/code&gt; attribute will be treated differently!&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!---skipped a load of HTML --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
  The only German I can remember from school is 
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;lang = &lt;/span&gt;&lt;span class="s"&gt;“de”&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
     ist sehr gut
  &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  , which is shocking. I am afraid my French is no better 
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;”fr”&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    mon ami
  &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  , I am a typical Brit when it comes to languages I am afraid.
&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!---skipped a load of HTML --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#37-avoid-jargon-and-complex-words"&gt;
  &lt;/a&gt;
  37 Avoid jargon and complex words
&lt;/h3&gt;

&lt;p&gt;Maybe you are a content creator and happen to be reading this. Here is a tip that I want you to remember above all the others.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;One in 5 adults has the reading age expected of a 12 year old.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So while you are using jargon and complex words to sound smart you aren't doing that, all you are doing is alienating about 1 in 5 people. Keep your language as simple as you can.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#38-abbreviations-and-acronyms"&gt;
  &lt;/a&gt;
  38. Abbreviations and Acronyms
&lt;/h3&gt;

&lt;p&gt;In tech and digital we love our acronyms and abbreviations. HTML, CSS, JS, URL, AWS, S3 etc.&lt;/p&gt;

&lt;p&gt;The golden rule is to never assume that a person reading your articles knows what an acronym or abbreviation means by default, even if you think it is obvious.&lt;/p&gt;

&lt;p&gt;To account for this HTML has the &lt;code&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt; element, used to indicate a word or phrase is an abbreviation or acronym. &lt;/p&gt;

&lt;p&gt;Unfortunately the &lt;code&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt; element guidance suggests we should use the &lt;code&gt;title&lt;/code&gt; attribute to explain the abbreviation / acronym in full. This isn't particularly accessible. &lt;/p&gt;

&lt;p&gt;I will write an article on how to address that problem in the future as it isn't as simple to fix as you may think!&lt;/p&gt;

&lt;p&gt;In the mean-time we can use the &lt;code&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt; element with a &lt;code&gt;title&lt;/code&gt; attribute as suggested.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Using the correct &lt;span class="nt"&gt;&amp;lt;abbr&lt;/span&gt; &lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;"HyperText Markup Language"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;HTML&lt;span class="nt"&gt;&amp;lt;/abbr&amp;gt;&lt;/span&gt; in your articles will make them more accessible. HTML consists of many semantic elements such as....&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Or &lt;strong&gt;better yet&lt;/strong&gt; you can spell the term out in full the first time you use it and put the abbreviated version in brackets.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Using the correct HyperText Markup Language (&lt;span class="nt"&gt;&amp;lt;abbr&amp;gt;&lt;/span&gt;HTML&lt;span class="nt"&gt;&amp;lt;/abbr&amp;gt;&lt;/span&gt;) in your articles will make them more accessible. HTML consists of many semantic elements such as....&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In both cases you should only explain an abbreviation once (when you first use it), or if an article is particularly long (like this one!), periodically throughout the document as a reminder, just as long as it isn't too often!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#39-offer-a-signing-option"&gt;
  &lt;/a&gt;
  39. Offer a signing option
&lt;/h3&gt;

&lt;p&gt;Remote sign language interpretation services via video can be added to your website or web app. They allow you to engage with people who speak sign language (and yes "speak" is the correct term and yes it is a whole different language!).&lt;/p&gt;

&lt;p&gt;A lot of remote sign language companies have a small or zero sign up fee. Many also offer "pay per minute" while you judge demand so the financial barrier to adding this to your site is lower than you might think! &lt;/p&gt;

&lt;p&gt;This is especially useful to know if you work with professional services such as Doctors, Solicitors (Lawyers) etc. &lt;/p&gt;

&lt;p&gt;Some of these interpretation services can even be accessed via an API so you can integrate them directly into your website! (A lot of them have a button that redirects you to another website as a part of their solution, which may not always be desirable).&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#navigation"&gt;
  &lt;/a&gt;
  Navigation
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6KrnRmYQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2vagbcc3dliy0jnphyr7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6KrnRmYQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2vagbcc3dliy0jnphyr7.jpg" alt="interconnected boxes to represent site navigation line drawing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Making information easy to access and locate is your number one job! Let's see what you need to consider here:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#40-have-a-html-sitemap"&gt;
  &lt;/a&gt;
  40. Have a HTML sitemap
&lt;/h3&gt;

&lt;p&gt;You have a XML sitemap don't you? I sure hope so if you want your site to rank well. But do you have a HTML sitemap?&lt;/p&gt;

&lt;p&gt;While also useful for SEO it has an added benefit, people can use it to navigate your site! (amazing, right? 😋🤣) &lt;/p&gt;

&lt;p&gt;This is particularly useful when you accidentally introduce an accessibility error (as we all make mistakes!) that means certain people can't reach parts of the site via the menu etc!&lt;/p&gt;

&lt;p&gt;Oh and if you don't have a search box on your site it is a great way to meet &lt;a href="https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-mult-loc.html"&gt;Success Criterion (SC) 2.4.5 - Multiple Ways&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#41-keyboard-navigation"&gt;
  &lt;/a&gt;
  41. Keyboard navigation
&lt;/h3&gt;

&lt;p&gt;Put the mouse away and try and navigate your site with just the keyboard.&lt;/p&gt;

&lt;p&gt;Can you access all the same information (nothing is only available on hover is it?)?&lt;/p&gt;

&lt;p&gt;If you can't then you need to fix that! A lot of people rely on their keyboard to navigate as using a mouse is difficult or impossible.&lt;/p&gt;

&lt;p&gt;As an added bonus it means your site is far more likely to be mobile friendly! If you can reach and use everything that is interactive via keyboard it should work on mobile as you can't hover on a mobile (not properly anyway!).&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#42-reduce-tab-stops"&gt;
  &lt;/a&gt;
  42. Reduce tab stops
&lt;/h3&gt;

&lt;p&gt;Now that you have tried using your website with a keyboard you may have discovered that while everything is reachable by keyboard, your menu is horrendous to use! (if it is a decent size site with dropdown menus.)&lt;/p&gt;

&lt;p&gt;If you have a large menu with drop-downs you don't want every single menu item to be in the focus order of the page by default. This can lead to "tab fatigue" and make the page really hard to use with a keyboard.&lt;/p&gt;

&lt;p&gt;Make sure that any drop-down menus are activated via Enter (or Space if appropriate) and only then can the drop-down items be tabbed to.&lt;/p&gt;

&lt;p&gt;For examples of this kind of behaviour check the &lt;a href="https://www.w3.org/WAI/tutorials/menus/flyout/"&gt;W3 fly-out menus page(s)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I explained this desired menu behaviour in a bit more detail in this Stack Overflow comment:&lt;/p&gt;


&lt;div class="ltag__stackexchange--container"&gt;
  &lt;div class="ltag__stackexchange--title-container"&gt;
    
      &lt;div class="ltag__stackexchange--title"&gt;
        &lt;h1&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Gn-iPj_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackoverflow-logo-b42691ae545e4810b105ee957979a853a696085e67e43ee14c5699cf3e890fb4.svg" alt=""&gt;
            &lt;a href="https://stackoverflow.com/questions/59328987/making-menu-drop-down-on-focus-for-accessibility/59333988#59333988" rel="noopener noreferrer"&gt;
              &lt;span class="title-flare"&gt;answer&lt;/span&gt; re:  Making menu drop down on focus for accessibility
            &lt;/a&gt;
        &lt;/h1&gt;
        &lt;div class="ltag__stackexchange--post-metadata"&gt;
          &lt;span&gt;Dec 14 '19&lt;/span&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;a class="ltag__stackexchange--score-container" href="https://stackoverflow.com/questions/59328987/making-menu-drop-down-on-focus-for-accessibility/59333988#59333988" rel="noopener noreferrer"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y9mJpuJP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-up-eff2e2849e67d156181d258e38802c0b57fa011f74164a7f97675ca3b6ab756b.svg" alt=""&gt;
        &lt;div class="ltag__stackexchange--score-number"&gt;
          2
        &lt;/div&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wif5Zq3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-down-4349fac0dd932d284fab7e4dd9846f19a3710558efde0d2dfd05897f3eeb9aba.svg" alt=""&gt;
      &lt;/a&gt;
    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--body"&gt;
    
&lt;blockquote&gt;
&lt;p&gt;I would like that when a user tabs through links (focus) the menu will drop down and continue to let the user tab through submenu links.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is the exact opposite of accessible I am afraid.&lt;/p&gt;
&lt;p&gt;To be accessible you want a menu where you have to activate the drop…&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--btn--container"&gt;
    
      &lt;a href="https://stackoverflow.com/questions/59328987/making-menu-drop-down-on-focus-for-accessibility/59333988#59333988" rel="noopener noreferrer"&gt;Open Full Answer&lt;/a&gt;
    
  &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Or if you want an example "closer to home" try tabbing through the dev.to home page feed. &lt;/p&gt;

&lt;p&gt;Luckily DEV have added "j" and "k" to skip between articles but for people who don't know that the home feed is exhausting with a keyboard! &lt;/p&gt;

&lt;p&gt;This is not a "jab" at dev.to by the way, they do a decent job of accessibility in most areas, this is one that just needs looking at!&lt;/p&gt;

&lt;p&gt;If you find that you have a similar problem on your site then reconsider the design!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#43-include-a-skip-link-to-bypass-site-navigation"&gt;
  &lt;/a&gt;
  43. Include a skip link to bypass site navigation
&lt;/h3&gt;

&lt;p&gt;Continuing the theme of making things easier for people who use a keyboard, your site should include skip links (also known as "bypass blocks"!).&lt;/p&gt;

&lt;p&gt;These are links that are (normally) hidden at first and only appear when you use Tab to enter the page. &lt;/p&gt;

&lt;p&gt;Their purpose is nearly always to allow people who use a keyboard to skip past the navigation if they wish. This is useful if they are visiting multiple pages and you have a large menu, it means they don't have to Tab past it to get to the content on each page load!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#44-you-can-have-more-than-one-skip-link"&gt;
  &lt;/a&gt;
  44. You can have more than one skip link!
&lt;/h3&gt;

&lt;p&gt;Most of the times you see skip links / bypass blocks they will only allow you to skip the navigation / page header and get to the content.&lt;/p&gt;

&lt;p&gt;While this is fine you are not limited to this. &lt;/p&gt;

&lt;p&gt;For example in a recent article I wrote I had a massive table of Countries, and the relevant laws in those Countries, with loads of links in each row.&lt;/p&gt;

&lt;p&gt;Before the table I added a link that says "Skip large table on laws that protect people with disabilities". This link pointed to an anchor after the table so people who use a keyboard didn't have to tab 60+ times! You can see that here:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/accessibility-understanding-why-it-is-important-and-why-the-current-approach-doesn-t-make-people-implement-it-3mk3" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Accessibility - understanding **WHY** it is important and why the current approach doesn't make people implement it.&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial ・ Jun 13 ・ 38 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Or it may be useful to provide a skip link to the page footer (or other section such as the &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; if you have one). Useful if you have lots of important information located in the footer. &lt;/p&gt;

&lt;p&gt;A simple example of multiple skip links can be found at the end of the following Stack Overflow answer I gave:&lt;/p&gt;


&lt;div class="ltag__stackexchange--container"&gt;
  &lt;div class="ltag__stackexchange--title-container"&gt;
    
      &lt;div class="ltag__stackexchange--title"&gt;
        &lt;h1&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Gn-iPj_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackoverflow-logo-b42691ae545e4810b105ee957979a853a696085e67e43ee14c5699cf3e890fb4.svg" alt=""&gt;
            &lt;a href="https://stackoverflow.com/questions/62759168/is-it-acceptable-that-the-skip-main-navigation-link-focuses-on-a-pages-main-con/62760090#62760090" rel="noopener noreferrer"&gt;
              &lt;span class="title-flare"&gt;answer&lt;/span&gt; re:  Is it acceptable that the Skip Main Navigation link focuses on a page's main content and then ignores what is in the footer?
            &lt;/a&gt;
        &lt;/h1&gt;
        &lt;div class="ltag__stackexchange--post-metadata"&gt;
          &lt;span&gt;Jul  6 '20&lt;/span&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;a class="ltag__stackexchange--score-container" href="https://stackoverflow.com/questions/62759168/is-it-acceptable-that-the-skip-main-navigation-link-focuses-on-a-pages-main-con/62760090#62760090" rel="noopener noreferrer"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y9mJpuJP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-up-eff2e2849e67d156181d258e38802c0b57fa011f74164a7f97675ca3b6ab756b.svg" alt=""&gt;
        &lt;div class="ltag__stackexchange--score-number"&gt;
          0
        &lt;/div&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wif5Zq3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-down-4349fac0dd932d284fab7e4dd9846f19a3710558efde0d2dfd05897f3eeb9aba.svg" alt=""&gt;
      &lt;/a&gt;
    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--body"&gt;
    
&lt;p&gt;No this is not an issue. They would use navigation keys (read next) in any screen reader.&lt;/p&gt;
&lt;p&gt;In NVDA this would be the NVDA key and the down arrow normally.&lt;/p&gt;
&lt;p&gt;This is expected behaviour. (assuming your page uses the correct markup and doesn't have problems, without seeing the page it…&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--btn--container"&gt;
    
      &lt;a href="https://stackoverflow.com/questions/62759168/is-it-acceptable-that-the-skip-main-navigation-link-focuses-on-a-pages-main-con/62760090#62760090" rel="noopener noreferrer"&gt;Open Full Answer&lt;/a&gt;
    
  &lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#45-add-a-contents-section"&gt;
  &lt;/a&gt;
  45. Add a contents section
&lt;/h3&gt;

&lt;p&gt;If you have a reasonably large page it is highly advisable to add a table of contents / a contents section detailing the headings / sections (or at least the top level headings) in the article / page.&lt;/p&gt;

&lt;p&gt;This, yet again, makes life easier for people who use a keyboard. It also helps everybody else as the document structure is now much easier to understand and jumping to the relevant section is easy!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#46-handling-multiple-navigation-areas"&gt;
  &lt;/a&gt;
  46. Handling multiple navigation areas
&lt;/h3&gt;

&lt;p&gt;We have previously mentioned that your site navigation should be contained in a &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; element. This lets assistive tech know that this is the site's main navigation.&lt;/p&gt;

&lt;p&gt;But what if you have navigation links in the footer or in an &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; as well?&lt;/p&gt;

&lt;p&gt;The answer is simple enough - you just label the &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; elements. &lt;/p&gt;

&lt;p&gt;We can use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-label_attribute"&gt;&lt;code&gt;aria-label&lt;/code&gt;&lt;/a&gt; to do this and give each section a relevant name!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;header&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;aria-label=&lt;/span&gt;&lt;span class="s"&gt;"main navigation"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"a-link"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;link&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;header&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;main&amp;gt;&lt;/span&gt;
   [...]
&lt;span class="nt"&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;footer&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;aria-label=&lt;/span&gt;&lt;span class="s"&gt;"footer navigation"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"a-different-link"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;new link&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#47-breadcrumbs"&gt;
  &lt;/a&gt;
  47. Breadcrumbs
&lt;/h3&gt;

&lt;p&gt;Breadcrumbs are a great way to tell people where they are on the site. They also help our friends who use a keyboard again, providing another quick way to navigate the site!&lt;/p&gt;

&lt;p&gt;We are going to reuse the trick from the previous point, wrapping the breadcrumbs in a &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; element and labelling it with &lt;code&gt;aria-label&lt;/code&gt; (as that helps our friends who use a screen reader!).&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;aria-label=&lt;/span&gt;&lt;span class="s"&gt;"Breadcrumbs"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ol&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://example.com/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Home
      &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://example.com/products"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Products
      &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://example.com/products/childrens-clothing"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Children's clothing
      &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://example.com/products/childrens-clothing/shoes"&lt;/span&gt; &lt;span class="na"&gt;aria-current=&lt;/span&gt;&lt;span class="s"&gt;"page"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Shoes
      &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ol&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Notice how on the current page I added another WAI-ARIA attribute &lt;code&gt;aria-current&lt;/code&gt;. This lets people who use a screen reader know that this is where they are now. &lt;/p&gt;

&lt;p&gt;Personally I tend to not make the current page a link in breadcrumbs, which is fine if the page is easily identifiable from the page &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; as discussed earlier!&lt;/p&gt;

&lt;p&gt;Also notice that I used an ordered list (&lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt;) to contain the breadcrumbs to reflect the fact that breadcrumb sections have an order.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#48-its-a-trap"&gt;
  &lt;/a&gt;
  48. It's a trap!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1zM0hZkP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.kym-cdn.com/entries/icons/facebook/000/000/157/itsatrap.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1zM0hZkP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.kym-cdn.com/entries/icons/facebook/000/000/157/itsatrap.jpg" alt='"its a trap" meme admiral Ackbar Star Wars'&gt;&lt;/a&gt;&lt;br&gt;
Sorry I couldn't resist!&lt;/p&gt;

&lt;p&gt;But keyboard traps are no joke. &lt;/p&gt;

&lt;p&gt;A keyboard trap means that a person who uses a keyboard can enter a part of a page and then gets stuck in a focus loop, with no way to get out of it other than reloading the whole page.&lt;/p&gt;

&lt;p&gt;This tends to happen a lot with modals where developers forget to add a proper close button (they use a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; and a click handler rather than a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; to close the modal, so it isn't reachable via keyboard).&lt;/p&gt;

&lt;p&gt;So although you should have already checked your site is fully usable with a keyboard in &lt;a href="#41-keyboard-navigation"&gt;point 41 Keyboard navigation&lt;/a&gt;, this is a particular one to bear in mind when you are designing modals / trapping focus within a custom control etc.&lt;/p&gt;

&lt;p&gt;Make sure you can close modals with a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; that is reachable via keyboard and also make sure that the Esc key closes any modals or lets you escape from any control where you trap focus.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#presentation-and-design"&gt;
  &lt;/a&gt;
  Presentation and Design
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C9ps9816--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/snf01r6xjgmtdxqymd9o.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C9ps9816--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/snf01r6xjgmtdxqymd9o.jpg" alt="line drawing of individual design elements on a web page with mouse, pencil and tree structure icons around"&gt;&lt;/a&gt;&lt;br&gt;
More of a graphic designer or CSS focused kind of developer? Then this section is one where you should pay particular attention! Let's talk about visual presentation and accessibility!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#49-colour-contrast-of-text"&gt;
  &lt;/a&gt;
  49. Colour contrast of text
&lt;/h3&gt;

&lt;p&gt;There are a hundred articles on this on the internet already. So I will just point you to this &lt;a href="https://webaim.org/articles/contrast/"&gt;WebAim article explaining Colour Contrast&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;At least linking to that document will stop this article getting any longer. (Well done by the way, almost half way through, I am impressed 🤣)&lt;/p&gt;

&lt;p&gt;I do, however, have a couple of quick tips to make checking colour contrast easier!&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#quick-tip-1-dev-tools"&gt;
  &lt;/a&gt;
  Quick tip 1 - Dev tools
&lt;/h4&gt;

&lt;p&gt;Use the "Select an element to inspect it tool" located at the very top left of the Dev Tools window.&lt;/p&gt;

&lt;p&gt;Hover over an element on the page and a large tooltip will appear.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vT8S8S2U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jiq02lyyvfjs7tlkfnss.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vT8S8S2U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jiq02lyyvfjs7tlkfnss.JPG" alt="devtools inspector tooltip on hover, showing key accessibility information"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If it can be computed the tooltip will show the:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Contrast ratio (and a tick if it is OK, a cross if not)&lt;/li&gt;
&lt;li&gt;Accessible Name - essentially the text that people who use AT will receive.&lt;/li&gt;
&lt;li&gt;Role - what type of content this is (which will be announced to people who use AT if the item is interactive, so they know how they can interact with it)&lt;/li&gt;
&lt;li&gt;Keyboard-focusable - letting you know if this item can be focused using Tab for example.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is worth noting that if you click on the element and find the relevant &lt;code&gt;color&lt;/code&gt; property in the style panel there are even more colour contrast related tools for you to discover.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#quick-tip-2-check-contrast-anywhere"&gt;
  &lt;/a&gt;
  Quick tip 2 - check contrast anywhere
&lt;/h4&gt;

&lt;p&gt;Sometimes Dev Tools won't display a contrast level as it can't determine a foreground or background colour to make a comparison. &lt;/p&gt;

&lt;p&gt;Or sometimes you might not be working in the browser and want to check contrast on a design etc.&lt;/p&gt;

&lt;p&gt;Luckily there is a free piece of software called &lt;a href="https://www.tpgi.com/color-contrast-checker/"&gt;Colour Contrast Analyzer&lt;/a&gt; by the Paciello Group you can download. It is available for Windows and Mac!&lt;/p&gt;

&lt;p&gt;With that you can check any two colours on the screen for contrast! Great for if you want to place text over an image, so that you can check the lowest contrast sections are still within acceptable values!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#50-contrast-on-controls"&gt;
  &lt;/a&gt;
  50. Contrast on controls
&lt;/h3&gt;

&lt;p&gt;Controls such as &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;s etc. should also have sufficient contrast with their surroundings.&lt;/p&gt;

&lt;p&gt;There is quite a lot of nuance to this point (&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements do not have to have a background at all as long as the text has sufficient contrast for example!). &lt;/p&gt;

&lt;p&gt;The &lt;a href="https://www.w3.org/WAI/WCAG21/Understanding/non-text-contrast.html"&gt;Understanding Success Criterion 1.4.11: Non-text Contrast&lt;/a&gt; page from W3, while quite wordy, covers this in detail as it is far too large a subject to cover here!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#51-visible-focus-indicators"&gt;
  &lt;/a&gt;
  51. Visible focus indicators
&lt;/h3&gt;

&lt;p&gt;People who use a keyboard rely on having a visible focus indicator so they know where they are on the page.&lt;/p&gt;

&lt;p&gt;Normally this would be an outline around a focused control, link etc. &lt;/p&gt;

&lt;p&gt;Some people remove these...&lt;strong&gt;don't&lt;/strong&gt;, they are important! Without them people who use a keyboard will not be able to determine what they currently have focused.&lt;/p&gt;

&lt;p&gt;It is also recommended that you set these yourself in CSS rather than relying on browser defaults so they are more prominent.&lt;/p&gt;

&lt;p&gt;Yet again there are &lt;a href="https://www.w3.org/TR/WCAG22/#focus-appearance-minimum"&gt;guidelines in WCAG on focus indicator colour contrast requirements&lt;/a&gt; that cover this.&lt;/p&gt;

&lt;p&gt;However the new rules and guidance are complex, so I would say as a general rule:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;go for a outline colour with a 4.5:1 contrast ratio with your site background&lt;/li&gt;
&lt;li&gt;make it at least 2 pixels thick (equivalent). &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will easily take you past the minimum requirements and will in fact take you to &lt;a href="https://www.w3.org/TR/WCAG22/#focus-appearance-enhanced"&gt;"AAA" level for contrast requirements&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#52-font-size"&gt;
  &lt;/a&gt;
  52. Font Size
&lt;/h3&gt;

&lt;p&gt;Lets keep this one short and simple. &lt;/p&gt;

&lt;p&gt;No font on your website should be less than 16px (14pt) or equivalent in size. &lt;/p&gt;

&lt;p&gt;If you find you need to make the font smaller than that, change your design.&lt;/p&gt;

&lt;p&gt;That's it, I told you this was a quick one!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#53-font-units-raw-rem-endraw-and-raw-em-endraw-units"&gt;
  &lt;/a&gt;
  53. Font units (&lt;code&gt;rem&lt;/code&gt; and &lt;code&gt;em&lt;/code&gt; units)
&lt;/h3&gt;

&lt;p&gt;Keeping things simple (to give you a break in such a long article as I am &lt;em&gt;such&lt;/em&gt; a nice guy!) don't use &lt;code&gt;px&lt;/code&gt; units for font sizes.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rem&lt;/code&gt; units and &lt;code&gt;em&lt;/code&gt; units scale according to the font size that people have set in their browser. &lt;/p&gt;

&lt;p&gt;This means that if they set their font size preference to "extra large", the text on your site will get bigger and match their needs (if you use &lt;code&gt;rem&lt;/code&gt; or &lt;code&gt;em&lt;/code&gt; units).&lt;/p&gt;

&lt;p&gt;Personally I recommend just using &lt;code&gt;rem&lt;/code&gt; units as they are always set by the document root size, &lt;code&gt;em&lt;/code&gt; units can get confusing if you aren't careful.&lt;/p&gt;

&lt;p&gt;Oh and now you are using &lt;code&gt;rem&lt;/code&gt; and or &lt;code&gt;em&lt;/code&gt; units for font sizes the minimum font size is &lt;code&gt;1rem&lt;/code&gt; or &lt;code&gt;1em&lt;/code&gt; that you should be using.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#54-line-height"&gt;
  &lt;/a&gt;
  54. Line height
&lt;/h3&gt;

&lt;p&gt;To aid readability the &lt;code&gt;line-height&lt;/code&gt; of blocks of text (more than a single sentence) should be 1.5 (&lt;code&gt;line-height: 1.5&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Single sentences are exempt from this rule (so &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt;s that span more than one line do not have to have a &lt;code&gt;line-height&lt;/code&gt; of 1.5 for example). &lt;/p&gt;

&lt;p&gt;Just make sure text doesn't run into itself by setting a &lt;code&gt;line-height&lt;/code&gt; less than 1!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#55-paragraph-spacing"&gt;
  &lt;/a&gt;
  55. Paragraph spacing
&lt;/h3&gt;

&lt;p&gt;Similar to &lt;code&gt;line-height&lt;/code&gt; requirements the space between paragraphs is important to aid readability.&lt;/p&gt;

&lt;p&gt;As a minimum the space between paragraphs should be double the font size. &lt;/p&gt;

&lt;p&gt;To get a "gold star" (WCAG "AAA") the space between paragraphs should be 1.5 times the line-height (so a minimum of 2.25 &lt;code&gt;rem&lt;/code&gt;). It is actually more complicated than that but this is easier to follow.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#56-line-height-paragraph-spacing-and-more"&gt;
  &lt;/a&gt;
  56. Line Height, Paragraph spacing and more
&lt;/h3&gt;

&lt;p&gt;WCAG 2.2 (the latest version just released) has added a new guideline that makes your job as a designer even more interesting - &lt;a href="https://www.w3.org/WAI/WCAG21/Understanding/text-spacing.html"&gt;Success Criterion 1.4.12: Text Spacing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For a "AAA" rating your design should be able to accommodate custom style sheets. These allow people to adjust your site to their needs.&lt;/p&gt;

&lt;p&gt;The minimum requirements are that a person should be able to set &lt;strong&gt;all of these at the same time&lt;/strong&gt; without it breaking your site design, content overflowing etc:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Line height (line spacing) to at least 1.5 times the font size;&lt;/li&gt;
&lt;li&gt;Spacing following paragraphs to at least 2 times the font size;&lt;/li&gt;
&lt;li&gt;Letter spacing (tracking) to at least 0.12 times the font size;&lt;/li&gt;
&lt;li&gt;Word spacing to at least 0.16 times the font size.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All I can say is if you build sites that are in German...good luck with that requirement given some of the fantastically long words you all use 😉🤣&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#57-line-length"&gt;
  &lt;/a&gt;
  57. Line length
&lt;/h3&gt;

&lt;p&gt;With blocks of text, especially articles or the main page content, you should aim to have about 50-60 characters per line.&lt;/p&gt;

&lt;p&gt;This helps readability and is especially useful to people who visit your site who are dyslexic, as long lines can mean that they lose their place easily.&lt;/p&gt;

&lt;p&gt;It also makes things nicer to read for everybody else!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#58-dont-justify-text"&gt;
  &lt;/a&gt;
  58. Don't justify text
&lt;/h3&gt;

&lt;p&gt;You don't see it often, but sometimes websites use fully justified text (where the text lines up on both the left and right hand side of the parent container).&lt;/p&gt;

&lt;p&gt;Yet again this can be a real problem for certain people, for example people who are dyslexic again. &lt;/p&gt;

&lt;p&gt;Why is it important that you don't use justified text? &lt;/p&gt;

&lt;p&gt;Justified text creates "voids" in blocks of text. These are large vertical white spaces that all line up. This can draw your eye downwards while reading a line and make things difficult to follow!&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;This   text    simulates    justified
text    taken    to    the   extreme!
Look   how   a   large   white   void
has    appeared   after   the   first
word   on   each    line   of   text!
Some   may   find    this    vertical
gap    in    the   text   distracting
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#59-dont-use-uppercase-text"&gt;
  &lt;/a&gt;
  59. Don't use UPPERCASE TEXT
&lt;/h3&gt;

&lt;p&gt;Now you may think it is because I am going to say it looks like you are shouting at somebody. And if you use all caps on a large block of text it will and you (probably) shouldn't do that!&lt;/p&gt;

&lt;p&gt;But this is more for things like short headings, button text etc. where all capitalised letters may look aesthetically pleasing and not like shouting.&lt;/p&gt;

&lt;p&gt;What I actually mean is that the underlying HTML should not use all caps! If you want your buttons or headings to have all caps then use CSS to achieve it!&lt;/p&gt;

&lt;p&gt;This is important for people who use a screen reader. Otherwise it is likely that their screen reader will try and interpret the text as an acronym...this can produce some rather &lt;em&gt;interesting&lt;/em&gt; results!&lt;/p&gt;

&lt;p&gt;You can capitalise words with CSS using the &lt;code&gt;text-transform&lt;/code&gt; property with a value of "uppercase".&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!--don't do this--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;WELCOME TO OUR SITE&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!--do this instead--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Welcome to our site&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#60-screen-reader-only-text"&gt;
  &lt;/a&gt;
  60. Screen reader only text
&lt;/h3&gt;

&lt;p&gt;While we are talking about text, let's talk about a great trick to have up your sleeve as a developer working on improving accessibility, "visually hidden text".&lt;/p&gt;

&lt;p&gt;Essentially this is text that is only for assistive technology and does not appear at all visually.&lt;/p&gt;

&lt;p&gt;While &lt;code&gt;aria-label&lt;/code&gt; may be neater, it may surprise you that much like CSS support, different screen reader and browser combinations have varying levels of support for WAI-ARIA. &lt;/p&gt;

&lt;p&gt;Visually hidden text is more robust, if you can put up with the odd &lt;code&gt;&amp;lt;span class="visually-hidden"&amp;gt;Screen Reader Only&amp;lt;/span&amp;gt;&lt;/code&gt; in your HTML mark-up you should use it! (Oh and stop being a mark-up purist, WAI-ARIA will make your HTML ugly anyway! 😋)&lt;/p&gt;

&lt;p&gt;Here is a class I mentioned in point 24 that has been tested to destruction! Use it for hiding things visually while making sure screen readers can still access them:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.visually-hidden&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt; &lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c"&gt;/* IE6, IE7 - a 0 height clip, off to the bottom right of the visible 1px box */&lt;/span&gt;
    &lt;span class="nl"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c"&gt;/*maybe deprecated but we need to support legacy browsers */&lt;/span&gt;
    &lt;span class="nl"&gt;clip-path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c"&gt;/*modern browsers, clip-path works inwards from each corner*/&lt;/span&gt;
    &lt;span class="nl"&gt;white-space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;nowrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* added line to stop words getting smushed together (as they go onto seperate lines and some screen readers do not understand line feeds as a space */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#so-when-do-we-use-visually-hidden-text"&gt;
  &lt;/a&gt;
  So when do we use visually hidden text?
&lt;/h4&gt;

&lt;p&gt;Although there are lots of use cases, generally it is used for when something is portrayed visually (using an icon for example), but there is no way for a browser / screen reader to determine any accessible information.&lt;/p&gt;

&lt;p&gt;For example if you are using Font Awesome or other font based icons you may have mark-up like this:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://twitter.com/InHuOfficial"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fa fa-twitter"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;To make that accessible we need some text within the link to read out (otherwise it will say something like "link, empty" or "link, &lt;a href="https://twitter.com/InHuOfficial"&gt;https://twitter.com/InHuOfficial&lt;/a&gt;", which is an awful experience!).&lt;/p&gt;

&lt;p&gt;So using visually hidden text we can fix that as follows:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://twitter.com/InHuOfficial"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fa fa-twitter"&lt;/span&gt; &lt;span class="na"&gt;aria-hidden=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"visually-hidden"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Follow InHu on Twitter&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now instead of an empty link it will say "Link, Follow InHu on Twitter" or similar.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#61-raw-ariahidden-endraw-"&gt;
  &lt;/a&gt;
  61. &lt;code&gt;aria-hidden&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;In the last point I snuck another WAI-ARIA attribute in there. Did you spot it? &lt;/p&gt;

&lt;p&gt;I added &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-hidden_attribute"&gt;&lt;code&gt;aria-hidden&lt;/code&gt;&lt;/a&gt; to the icon. &lt;/p&gt;

&lt;p&gt;This attribute (when set to "true") will hide the element and its contents from screen readers. &lt;/p&gt;

&lt;p&gt;Technically it will hide an element and all of it's &lt;strong&gt;non interactive content&lt;/strong&gt; from screen readers, &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;s, &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;s, &lt;code&gt;&amp;lt;a href="link"&amp;gt;&lt;/code&gt;s etc. will still be accessible if they can receive focus.&lt;/p&gt;

&lt;p&gt;Anyway, &lt;code&gt;aria-hidden&lt;/code&gt; may not immediately make you think of "presentation and design" as it doesn't affect anything visually...but you are not thinking about it from the perspective of someone who uses a screen reader. &lt;/p&gt;

&lt;p&gt;They have a mental image of what the page looks like and you still need to make sure that it is designed and presented in a logical way!&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#so-when-do-we-use-raw-ariahidden-endraw-"&gt;
  &lt;/a&gt;
  So when do we use &lt;code&gt;aria-hidden&lt;/code&gt;?
&lt;/h4&gt;

&lt;p&gt;Normally we use it to hide items where we have provided a text alternative using the "visually-hidden" text. &lt;/p&gt;

&lt;p&gt;You will find that it is often applied to complex items or "visual only" items (for want of a better term). Items that we cannot describe well using other techniques or add semantic meaning to using WAI-ARIA.&lt;/p&gt;

&lt;p&gt;Don't go using it to hide large blocks of text or content that isn't fully accessible. The main idea behind accessibility is to offer as similar an experience as possible to everybody!&lt;/p&gt;

&lt;p&gt;Another example might be a complex graph or chart, where we have provided an alternative in the form of a &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; with the relevant data.&lt;/p&gt;

&lt;p&gt;The chart / graph could cause a lot of confusion if it is not accessible. As such, we would hide it with &lt;code&gt;aria-hidden="true"&lt;/code&gt; and let people who use a screen reader access the information within the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; we provided instead.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#-raw-ariahidden-endraw-and-visually-hidden-tend-to-stick-together"&gt;
  &lt;/a&gt;
  &lt;code&gt;aria-hidden&lt;/code&gt; and "visually hidden" tend to stick together.
&lt;/h4&gt;

&lt;p&gt;In the example I just gave there is another trick we could do. &lt;/p&gt;

&lt;p&gt;We could add the data to the page as a &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; within the HTML. Then use JavaScript to take the table data and turn it into a graph to replace the table!&lt;/p&gt;

&lt;p&gt;Within our JS, when it has successfully created the graph, we could:-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;add JS that adds &lt;code&gt;aria-hidden="true"&lt;/code&gt; to the graph&lt;/li&gt;
&lt;li&gt;add the "visually-hidden" class to the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; element.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now we have a graph to display the information visually and a table to present the information to people who rely on assistive tech.&lt;/p&gt;

&lt;p&gt;It isn't a perfect example of accessibility (as some people who use a screen reader use it to aid comprehension rather than as a visual aid) because the graph itself should be made accessible. But it is a lot better than nothing and a reasonably acceptable solution!&lt;/p&gt;

&lt;p&gt;A more common example is with icon fonts (as we did earlier). We hide the icon so it doesn't interfere with a screen reader and provide screen reader text with our visually hidden class.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#62-icon-fonts-probably-arent-a-good-idea"&gt;
  &lt;/a&gt;
  62. Icon fonts probably aren't a good idea
&lt;/h3&gt;

&lt;p&gt;Look the debate on this rages on, but in reality SVG icons are better in 99% of cases. This &lt;a href="https://css-tricks.com/icon-fonts-vs-svg/"&gt;article on fonts vs SVGs&lt;/a&gt; may be from 2017 so things have changed &lt;em&gt;slightly&lt;/em&gt;, but overall the outcome is the same.  &lt;/p&gt;

&lt;p&gt;Rather than labour the point and start an argument, all I will say  is that SVG icons are easier to make accessible.&lt;/p&gt;

&lt;p&gt;Remember earlier when we said that SVGs had a &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; attribute that acts like &lt;code&gt;alt&lt;/code&gt; text on an image?&lt;/p&gt;

&lt;p&gt;Instead of all of the visually hidden text and &lt;code&gt;aria-hidden&lt;/code&gt; stuff we can just do:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://twitter.com/InHuOfficial"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 32 32"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Follow InHu on Twitter&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M32 7.075c-1.175 0.525-2.444 0.875-3.769 1.031 1.356-0.813 2.394-2.1 2.887-3.631-1.269 0.75-2.675 1.3-4.169 1.594-1.2-1.275-2.906-2.069-4.794-2.069-3.625 0-6.563 2.938-6.563 6.563 0 0.512 0.056 1.012 0.169 1.494-5.456-0.275-10.294-2.888-13.531-6.862-0.563 0.969-0.887 2.1-0.887 3.3 0 2.275 1.156 4.287 2.919 5.463-1.075-0.031-2.087-0.331-2.975-0.819 0 0.025 0 0.056 0 0.081 0 3.181 2.263 5.838 5.269 6.437-0.55 0.15-1.131 0.231-1.731 0.231-0.425 0-0.831-0.044-1.237-0.119 0.838 2.606 3.263 4.506 6.131 4.563-2.25 1.762-5.075 2.813-8.156 2.813-0.531 0-1.050-0.031-1.569-0.094 2.913 1.869 6.362 2.95 10.069 2.95 12.075 0 18.681-10.006 18.681-18.681 0-0.287-0.006-0.569-0.019-0.85 1.281-0.919 2.394-2.075 3.275-3.394z"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;When a person who uses a screen reader gets to that link it will read "link, Follow InHu on Twitter" the same as before.&lt;/p&gt;

&lt;p&gt;Sure that may look like a load of HTML (and there are ways we can tidy that up with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/use"&gt;&lt;code&gt;&amp;lt;use&amp;gt;&lt;/code&gt;&lt;/a&gt;) but the SVG can be copy and pasted in to our document. We can then give it a &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; if it doesn't already have one!&lt;/p&gt;

&lt;p&gt;To make it simpler to understand, what we essentially did was:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://twitter.com/InHuOfficial"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;svg&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Follow InHu on Twitter&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#oh-and-dont-forget-custom-style-sheets"&gt;
  &lt;/a&gt;
  Oh and don't forget custom style sheets
&lt;/h4&gt;

&lt;p&gt;It isn't the problem it used to be, but people with disabilities may use custom style sheets that replace the fonts on a site.&lt;/p&gt;

&lt;p&gt;Most of the plugins that do this nowadays know to ignore icon fonts. If they don't ignore icon fonts you end up with a lot of broken icons! You will not have such problems with an SVG. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#63-dont-use-colour-alone-to-convey-information"&gt;
  &lt;/a&gt;
  63. Don't use colour alone to convey information
&lt;/h3&gt;

&lt;p&gt;Some people are colour-blind (about 1 in 12 men and 1 in 200 women have Colour Vision Deficiency (CVD))! Overall 4.5% of people have some form of CVD in the world!). &lt;/p&gt;

&lt;p&gt;So if you use green for good or on, and red for bad or off, you need to provide another way to convey that information. &lt;/p&gt;

&lt;p&gt;Have a button that turns green when a save is complete? Then make sure a little tick icon appears or change the button text to say "saved".&lt;/p&gt;

&lt;p&gt;Building or designing a dashboard that shows support tickets? Don't just use red, yellow and green as indicators of how old the ticket is or how urgent it is. On a side note, odds are that yellow won't have very good colour contrast so you probably shouldn't use those colours anyway!&lt;/p&gt;

&lt;p&gt;Oh and once again, if you just use colour to convey information, what do people who use a screen reader hear? Make sure there is some programatically determinable state information (information a screen reader can parse and understand).&lt;/p&gt;

&lt;p&gt;While not the "accessibility ideal", one option is to create a "CVD friendly mode" (colour blindness mode) that switches colours out for patterns. &lt;/p&gt;

&lt;p&gt;But you should only really do this if you are fixing accessibility on a legacy product, if developing from scratch then just account for CVD from the start.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#64-dont-forget-raw-selection-endraw-"&gt;
  &lt;/a&gt;
  64. Don't forget &lt;code&gt;::selection&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;One of the quickest tips in this list! &lt;/p&gt;

&lt;p&gt;Make sure your text selection colour has sufficient colour contrast with the text it applies to (same rules as other text).&lt;/p&gt;

&lt;p&gt;There is no point having a black selection colour on black text (although most browsers will intervene and stop you doing this anyway).&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#65-think-about-animations"&gt;
  &lt;/a&gt;
  65. Think about animations
&lt;/h3&gt;

&lt;p&gt;A term that doesn't get used as much as it used to is &lt;a href="https://en.wikipedia.org/wiki/Progressive_enhancement"&gt;"progressive enhancement"&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I like to think of animations as a "progressive enhancement". &lt;/p&gt;

&lt;p&gt;You see for the majority of people they will add some sparkle, charm and interest to your page. &lt;/p&gt;

&lt;p&gt;But for some people motion can induce dizziness and even make them feel nauseous (generally categorised as / caused by vestibular disorders). &lt;/p&gt;

&lt;p&gt;For others they may have conditions that make them have high anxiety or paranoia levels. For them, the motion on the page can be unsettling, distracting and unnerving and can cause great discomfort.&lt;/p&gt;

&lt;p&gt;So that is why I like to think of animations as a progressive enhancement. I build a site without animations (but keep them in mind) and then add them later.&lt;/p&gt;

&lt;p&gt;That way you naturally separate animations from the rest of the styling on the site.&lt;/p&gt;

&lt;p&gt;That means it is an easy task to switch animations off on the site for people who don't want animations. &lt;/p&gt;

&lt;p&gt;To do this we can add the animation related CSS to a separate style sheet. We can then remove / add that style sheet depending on preferences (which can be done with JS and can even be added / removed from the page server side using cookies etc).&lt;/p&gt;

&lt;p&gt;Oh and if you do it right it is great for load speed / performance on an animation heavy site, as we can send less critical CSS!&lt;/p&gt;

&lt;p&gt;Obviously having a button on the site or a settings page where people can turn animations off is the ideal scenario, but there are other things to consider and less drastic measures that are a great start!&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#-raw-prefersreducedmotion-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;prefers-reduced-motion&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion"&gt;&lt;code&gt;prefers-reduced-motion&lt;/code&gt;&lt;/a&gt; media query allows you to find out if a person visiting your site / web app would like subtle / no animations to be used.&lt;/p&gt;

&lt;p&gt;That way you can switch animations on or off based on whether the media query matches or not.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* animate the height by default */&lt;/span&gt;
&lt;span class="nc"&gt;.animation&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt; &lt;span class="n"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* we switch off the height animation for people who do not want animations */&lt;/span&gt;
&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prefers-reduced-motion&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.animation&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#semantics"&gt;
  &lt;/a&gt;
  Semantics
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y3lX9qG7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2akyjtw8i348s8udjepg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y3lX9qG7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2akyjtw8i348s8udjepg.jpg" alt="Accessible semantic markup vs markup without any semantic information, including time element, data list element and address element"&gt;&lt;/a&gt;&lt;br&gt;
We covered sectional elements and their semantics earlier. This time lets talk about semantic elements that convey meaning within the document, articles etc. to really add clarity to your pages.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#666-in-raw-ltsummarygt-endraw-the-devil-is-in-the-raw-ltdetailgt-endraw-s"&gt;
  &lt;/a&gt;
  66(6). In &lt;code&gt;&amp;lt;summary&amp;gt;&lt;/code&gt; the devil is in the &lt;code&gt;&amp;lt;detail&amp;gt;&lt;/code&gt;s
&lt;/h3&gt;

&lt;p&gt;Ah the puns have started, you can tell I am getting tired writing this now! 😋🤣&lt;/p&gt;

&lt;p&gt;But in all seriousness, if you build an accordion and don't use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/summary"&gt;&lt;code&gt;&amp;lt;summary&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;detail&amp;gt;&lt;/code&gt;&lt;/a&gt; elements you are making things difficult for yourself!&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;summary&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;detail&amp;gt;&lt;/code&gt; come with all the magic (or most of it) built in!&lt;/p&gt;

&lt;p&gt;I think an example is the easiest way to demonstrate:&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/mLqwrcou/1//embedded/result,html,js,css//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Usable in all modern browsers right out of the box without any JavaScript or CSS (but we obviously want to add some CSS to make it prettier!)&lt;/p&gt;

&lt;p&gt;And you can even open and close it be adding or removing the &lt;code&gt;open&lt;/code&gt; attribute on the &lt;code&gt;&amp;lt;detail&amp;gt;&lt;/code&gt; element!&lt;/p&gt;

&lt;p&gt;It also has &lt;a href="https://a11ysupport.io/tech/html/summary_element"&gt;all of the accessibility goodness built in in nearly every browser&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In summary 🙄, &lt;code&gt;&amp;lt;summary&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;detail&amp;gt;&lt;/code&gt; are a top tier element pair!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#67-raw-lttimegt-endraw-to-get-your-act-together"&gt;
  &lt;/a&gt;
  67. &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; to get your act together
&lt;/h3&gt;

&lt;p&gt;More puns, I am sorry!&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time"&gt;&lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt;&lt;/a&gt; element allows you to account for the many many ways dates and times can be presented / written.&lt;/p&gt;

&lt;p&gt;This is great for SEO as computers can understand the &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; element. It is also great for people who use AT as their AT can understand the &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; element and know how to announce the time correctly. &lt;/p&gt;

&lt;p&gt;Overall I think the &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; element is....great!&lt;/p&gt;

&lt;p&gt;A typical example might be:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;You are cordially invited to my swanky dinner on &lt;span class="nt"&gt;&amp;lt;time&lt;/span&gt; &lt;span class="na"&gt;datetime=&lt;/span&gt;&lt;span class="s"&gt;"2021-08-07"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;August 7th&lt;span class="nt"&gt;&amp;lt;/time&amp;gt;&lt;/span&gt; at my lake house.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;We have hired a professional chef so food will be at &lt;span class="nt"&gt;&amp;lt;time&lt;/span&gt; &lt;span class="na"&gt;datetime=&lt;/span&gt;&lt;span class="s"&gt;"19:00"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;7pm&lt;span class="nt"&gt;&amp;lt;/time&amp;gt;&lt;/span&gt; and then the string quartet are scheduled for &lt;span class="nt"&gt;&amp;lt;time&lt;/span&gt; &lt;span class="na"&gt;datetime=&lt;/span&gt;&lt;span class="s"&gt;"20:00"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;8pm&lt;span class="nt"&gt;&amp;lt;/time&amp;gt;&lt;/span&gt;. Don't forget that it takes &lt;span class="nt"&gt;&amp;lt;time&lt;/span&gt; &lt;span class="na"&gt;datetime=&lt;/span&gt;&lt;span class="s"&gt;"PT1H20M"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;1hr 20min&lt;span class="nt"&gt;&amp;lt;/time&amp;gt;&lt;/span&gt; to get here by helicopter darlings. Kisses&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Just an average Saturday night don't you think? 😉&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#68-a-raw-ltbuttongt-endraw-is-a-button"&gt;
  &lt;/a&gt;
  68. A &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; is a button.
&lt;/h3&gt;

&lt;p&gt;This article I wrote covers this point perfectly, prepare for some ranting if you read it!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/they-just-won-t-learn-a-button-is-a-lt-button-gt-accessibility-rants-k1b" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;They...just...won't...learn 🤦‍♂️ - a button is a &amp;amp;lt;button&amp;amp;gt;! [Series: Accessibility Rants]&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial ・ May 27 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#69-the-raw-ltdlgt-endraw-raw-ltdtgt-endraw-and-raw-ltddgt-endraw-elements-are-a-great-threesome-giggidy"&gt;
  &lt;/a&gt;
  69. The &lt;code&gt;&amp;lt;dl&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;dt&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;dd&amp;gt;&lt;/code&gt; elements are a great threesome (giggidy)
&lt;/h3&gt;

&lt;p&gt;Yes I am immature, but come one, we are on number 69 and I have been writing for what feels like days!&lt;/p&gt;

&lt;p&gt;Anyway, let me introduce you to the description list, (&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl"&gt;&lt;code&gt;&amp;lt;dl&amp;gt;&lt;/code&gt; element&lt;/a&gt;) and it's child elements &lt;code&gt;&amp;lt;dt&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;dd&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;These elements are great for displaying a list of items that have corresponding definitions or related data.&lt;/p&gt;

&lt;p&gt;Most people forget about these elements as the examples are quite boring:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;dl&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;dt&amp;gt;&lt;/span&gt;Beast of Bodmin&lt;span class="nt"&gt;&amp;lt;/dt&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;dd&amp;gt;&lt;/span&gt;A large feline inhabiting Bodmin Moor.&lt;span class="nt"&gt;&amp;lt;/dd&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;dt&amp;gt;&lt;/span&gt;Morgawr&lt;span class="nt"&gt;&amp;lt;/dt&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;dd&amp;gt;&lt;/span&gt;A sea serpent.&lt;span class="nt"&gt;&amp;lt;/dd&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;dt&amp;gt;&lt;/span&gt;Owlman&lt;span class="nt"&gt;&amp;lt;/dt&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;dd&amp;gt;&lt;/span&gt;A giant owl-like creature.&lt;span class="nt"&gt;&amp;lt;/dd&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/dl&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;But they are actually really useful if you are dealing with showing grouped data to somebody. They are especially useful if you are practicing the steps described in &lt;a href="#25-allow-people-to-review-information"&gt;point 25 - Allow people to review information&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can use description lists to repeat back information that people have entered for checking!&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Review your data&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Please review the data you entered in the previous step to ensure it is correct:&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;dl&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;dt&amp;gt;&lt;/span&gt;First name&lt;span class="nt"&gt;&amp;lt;/dt&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;dd&amp;gt;&lt;/span&gt;Marc&lt;span class="nt"&gt;&amp;lt;/dd&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;dt&amp;gt;&lt;/span&gt;Last name&lt;span class="nt"&gt;&amp;lt;/dt&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;dd&amp;gt;&lt;/span&gt;Simmons&lt;span class="nt"&gt;&amp;lt;/dd&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;dt&amp;gt;&lt;/span&gt;Date of Birth&lt;span class="nt"&gt;&amp;lt;/dt&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;dd&amp;gt;&amp;lt;time&lt;/span&gt; &lt;span class="na"&gt;datetime=&lt;/span&gt;&lt;span class="s"&gt;"1990-05-15"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;May 15 1990&lt;span class="nt"&gt;&amp;lt;/time&amp;gt;&amp;lt;/dd&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/dl&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#social-media"&gt;
  &lt;/a&gt;
  Social Media
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tC0NS3sQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u601h3nfg30xch7f51hr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tC0NS3sQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u601h3nfg30xch7f51hr.jpg" alt="line drawing person on laptop with speech bubble, large globe behind them"&gt;&lt;/a&gt;&lt;br&gt;
Let's make sure that our contributions to social media are as accessible as possible!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#70-add-raw-alt-endraw-attributes-to-images"&gt;
  &lt;/a&gt;
  70. Add &lt;code&gt;alt&lt;/code&gt; attributes to images
&lt;/h3&gt;

&lt;p&gt;I know, de ja vu!&lt;/p&gt;

&lt;p&gt;But not all social media is created equal. &lt;/p&gt;

&lt;p&gt;Obviously if the social media platform you are posting to supports adding &lt;code&gt;alt&lt;/code&gt; attributes then you should and you must!&lt;/p&gt;

&lt;p&gt;But some platforms (looking at you LinkedIn with your lack of &lt;code&gt;alt&lt;/code&gt; descriptions on the App when you can add them on the main site...unless they fixed that in the last few months and I missed it!) don't allow you to add them.&lt;/p&gt;

&lt;p&gt;So if you find that you can't add a proper &lt;code&gt;alt&lt;/code&gt; description here is a top tip.&lt;/p&gt;

&lt;p&gt;At the end of your post / update / tweet / whatever, leave enough space for&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[image: my super alt description I would have added if the platform allowed it]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Nice and simple way to put inclusion back into your social media contributions (or endless cat pictures...I won't judge!)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#71-you-can-make-your-hashtags-more-accessible-too"&gt;
  &lt;/a&gt;
  71. You can make your hashtags more accessible too!
&lt;/h3&gt;

&lt;p&gt;Hey anyone from DEV still reading? &lt;/p&gt;

&lt;p&gt;Pay close attention, this one is so simple you will love it (but it will mean a little bit of work from the DEV team to fix I am afraid!)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CamelCaseYourHashtags&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Unfortunately some platforms don't allow you to do this (still pointing at you DEV 😉). &lt;/p&gt;

&lt;p&gt;Why is it important?&lt;/p&gt;

&lt;p&gt;Well first of all it stops mix ups. I mean my favourite misread hashtag to this day is still #susanalbumparty &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qVUl4vJo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/originals/90/ac/08/90ac0848e140f8ecf665f0d8f011b969.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qVUl4vJo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/originals/90/ac/08/90ac0848e140f8ecf665f0d8f011b969.png" alt="#susanalbumparty with Susan Doyle arms opened wide meme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I mean, how could people &lt;strong&gt;not&lt;/strong&gt; read it as Su's Anal Bum Party? &lt;/p&gt;

&lt;p&gt;But if they had used CamelCase then we wouldn't have had that problem now would we (#SusanAlbumParty).&lt;/p&gt;

&lt;p&gt;But there is a more serious reason. A reason related to accessibility (that &lt;strong&gt;is&lt;/strong&gt; meant to be what I am writing about!). &lt;/p&gt;

&lt;p&gt;People who use a screen reader will be able to understand the hashtag if it is more than one word!&lt;/p&gt;

&lt;p&gt;If you try and use a screen reader on #devbugsmash it completely mangles the word, but #DevBugSmash will be read correctly in most screen readers!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#72-limit-your-emoji-use"&gt;
  &lt;/a&gt;
  72. Limit your emoji use 😲🤯💪🧨💥
&lt;/h3&gt;

&lt;p&gt;I am not saying don't use emojis, but there are two reasons why you should limit their usage.&lt;/p&gt;

&lt;p&gt;The first is probably the more obvious one, AT and screen readers do not play well with emojis. Too many can make a post unreadable.&lt;/p&gt;

&lt;p&gt;But the second one, that people tend to overlook, is that people with cognitive impairments, especially cognitive impairments that mean people cannot make abstract associations, mean that emojis can be really confusing. &lt;/p&gt;

&lt;p&gt;Put enough emojis in a tweet and someone can get overwhelmed and frustrated at all of these pictures that have no meaning to them.&lt;/p&gt;

&lt;p&gt;So use emojis, especially to grab attention for article releases etc. &lt;/p&gt;

&lt;p&gt;Just don't litter every other word with them and don't start using emojis in place of words to reply to people you don't know. &lt;/p&gt;

&lt;p&gt;Even people who can associate images can get really confused by the meaning of some emojis! &lt;/p&gt;

&lt;p&gt;"🍆 for tea? 🍑 for dessert" could have very different meanings to some people!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#73-dont-use-images-of-code"&gt;
  &lt;/a&gt;
  73. Don't use images of code
&lt;/h3&gt;

&lt;p&gt;Now this one will be controversial but hear me out!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If a site supports code blocks then use them.&lt;/strong&gt; No excuses, it means they are accessible to AT. It also means people can copy your code and play with it. &lt;/p&gt;

&lt;p&gt;But what about social media channels where you can't use proper code blocks?&lt;/p&gt;

&lt;p&gt;I am not saying don't do share images of text at all, what I am saying is don't share images of code the way you are doing it now.&lt;/p&gt;

&lt;p&gt;When sharing pictures of code created with &lt;a href="https://carbon.now.sh/"&gt;https://carbon.now.sh/&lt;/a&gt; or a similar service, put your code into a &lt;a href="https://gist.github.com/"&gt;GitHub Gist&lt;/a&gt;, &lt;a href="https://codepen.io/"&gt;CodePen&lt;/a&gt; etc. Then &lt;strong&gt;link to the code.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;That way everyone can access your code and everyone also gets the benefit of being able to copy and paste your code too!&lt;/p&gt;

&lt;p&gt;If you need the link in your social media post to lead to your article then...put the code in the article itself!&lt;/p&gt;

&lt;p&gt;If you can't do any of the above...then rethink your post. There is a way to make sure you can share the &lt;strong&gt;actual&lt;/strong&gt; code as well! You just have to find a workaround that works for you!&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#tables"&gt;
  &lt;/a&gt;
  Tables
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WYCxniMF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v54jjozfxo827khhmxa6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WYCxniMF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v54jjozfxo827khhmxa6.jpg" alt="Very simplified line drawing of table with bottom row merged across all columns"&gt;&lt;/a&gt;&lt;br&gt;
We have already covered not using tables for layout, but what else do we need to know?&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#74-know-the-basics"&gt;
  &lt;/a&gt;
  74. Know the basics
&lt;/h3&gt;

&lt;p&gt;You would be amazed how many tables exist that don't have a &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; element. &lt;/p&gt;

&lt;p&gt;It is used to signify that a cell is a table header, which on a simple table defaults to the column. &lt;/p&gt;

&lt;p&gt;So the following is a table in it's simplest form:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Col Header 1&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Col Header 2&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Col Header 3&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Row 1 Col 1&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Row 1 Col 2&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Row 1 Col 3&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Row 2 Col 1&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Row 2 Col 2&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Row 2 Col 3&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;But we can do so much better...&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#the-raw-scope-endraw-attribute"&gt;
  &lt;/a&gt;
  The &lt;code&gt;scope&lt;/code&gt; attribute
&lt;/h4&gt;

&lt;p&gt;To improve upon the previous example, what if we wanted the first cell in a row to be the header for that row?&lt;/p&gt;

&lt;p&gt;Well if we add the &lt;code&gt;scope&lt;/code&gt; attribute in the right places we can achieve that, and still have an accessible table (almost!).&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&lt;/span&gt; &lt;span class="na"&gt;scope=&lt;/span&gt;&lt;span class="s"&gt;"col"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Col Header 1&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&lt;/span&gt; &lt;span class="na"&gt;scope=&lt;/span&gt;&lt;span class="s"&gt;"col"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Col Header 2&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&lt;/span&gt; &lt;span class="na"&gt;scope=&lt;/span&gt;&lt;span class="s"&gt;"col"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Col Header 3&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&lt;/span&gt; &lt;span class="na"&gt;scope=&lt;/span&gt;&lt;span class="s"&gt;"row"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Row Header 1&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Row 1 Col 2&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Row 1 Col 3&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&lt;/span&gt; &lt;span class="na"&gt;scope=&lt;/span&gt;&lt;span class="s"&gt;"row"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Row Header 2&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Row 2 Col 2&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Row 2 Col 3&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#dont-forget-a-raw-ltcaptiongt-endraw-"&gt;
  &lt;/a&gt;
  Don't forget a &lt;code&gt;&amp;lt;caption&amp;gt;&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;We are almost there with a basic table that is accessible. We just need to add a &lt;code&gt;&amp;lt;caption&amp;gt;&lt;/code&gt; to the table so that it is adequately described for Assistive Technology (AT).&lt;/p&gt;

&lt;p&gt;So let's see what it looks like (with some super basic styling)&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/mLqwrcou/2//embedded/result,html,css//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Great! We have a basic table we can build upon.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#75-raw-lttheadgt-endraw-raw-lttbodygt-endraw-and-raw-lttfootgt-endraw-"&gt;
  &lt;/a&gt;
  75. &lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;tfoot&amp;gt;&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Now we have a basic table, it is time to add even more semantic information!&lt;/p&gt;

&lt;p&gt;We have the &lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt; element, allowing us to define the table header (think of it like &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; in a document).&lt;/p&gt;

&lt;p&gt;We also have the &lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt; element, which indicates where all of the table data is (similar to &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; in a document).&lt;/p&gt;

&lt;p&gt;Finally we have the &lt;code&gt;&amp;lt;tfoot&amp;gt;&lt;/code&gt; element, which indicates where a summary of the table rows in &lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt; are (if applicable - the &lt;code&gt;&amp;lt;tfoot&amp;gt;&lt;/code&gt; element is similar to the &lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt; element in a document).&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;thead&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;th&lt;/span&gt; &lt;span class="na"&gt;scope=&lt;/span&gt;&lt;span class="s"&gt;"col"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Col Header 1&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;th&lt;/span&gt; &lt;span class="na"&gt;scope=&lt;/span&gt;&lt;span class="s"&gt;"col"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Col Header 2&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;th&lt;/span&gt; &lt;span class="na"&gt;scope=&lt;/span&gt;&lt;span class="s"&gt;"col"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Col Header 3&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/thead&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;tbody&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;th&lt;/span&gt; &lt;span class="na"&gt;scope=&lt;/span&gt;&lt;span class="s"&gt;"row"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Row Header 1&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Row 1 Col 2&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Row 1 Col 3&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&lt;/span&gt; &lt;span class="na"&gt;scope=&lt;/span&gt;&lt;span class="s"&gt;"row"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Row Header 2&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Row 2 Col 2&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Row 2 Col 3&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/tbody&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;tfoot&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;th&lt;/span&gt; &lt;span class="na"&gt;scope=&lt;/span&gt;&lt;span class="s"&gt;"row"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Summary&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Col 2 summary&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;Col 3 summary&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/tfoot&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;For clarity, the &lt;code&gt;&amp;lt;tfoot&amp;gt;&lt;/code&gt; element is optional. &lt;/p&gt;

&lt;p&gt;Oh and in case you have heard that a &lt;a href="https://stackoverflow.com/a/61636070/2702894"&gt;&lt;code&gt;&amp;lt;tfoot&amp;gt;&lt;/code&gt; should come before &lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt;, it is wrong and is the HTML 4 way of doing things.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The order is always the same in HTML5!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#76-raw-ltcolgroupgt-endraw-and-raw-ltcolgt-endraw-"&gt;
  &lt;/a&gt;
  76. &lt;code&gt;&amp;lt;colgroup&amp;gt;&lt;/code&gt; (and &lt;code&gt;&amp;lt;col&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;

&lt;p&gt;Now we are getting to the fun stuff. &lt;/p&gt;

&lt;p&gt;It you have a complex table, perhaps comparing product A, product B and product C across multiple criteria, then the &lt;code&gt;&amp;lt;colgroup&amp;gt;&lt;/code&gt; element can be really useful!&lt;/p&gt;

&lt;p&gt;What it does is allow us to group columns together, creating an association between the two columns.&lt;/p&gt;

&lt;p&gt;So lets say we were comparing products sold by JB toys, ZA games and DD kids. &lt;/p&gt;

&lt;p&gt;We want to compare the price and delivery times on a few products.&lt;/p&gt;

&lt;p&gt;Normally this would be difficult but with &lt;code&gt;&amp;lt;col&amp;gt;&lt;/code&gt; elements (which represent a single column when setting up column groupings) and &lt;code&gt;&amp;lt;colgroup&amp;gt;&lt;/code&gt; elements (which we use to group the columns) this is actually possible!&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/mLqwrcou/4//embedded/result,html,css//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#77-what-if-you-need-to-make-a-table-row-clickable"&gt;
  &lt;/a&gt;
  77. What if you need to make a table row clickable?
&lt;/h3&gt;

&lt;p&gt;Often the data in a table is not display only, sometimes you need to be able to click on a row to edit it, delete it etc.&lt;/p&gt;

&lt;p&gt;This Stack Overflow answer I gave should cover most use cases, even if it does need a rewrite (another future article for the list!):&lt;/p&gt;


&lt;div class="ltag__stackexchange--container"&gt;
  &lt;div class="ltag__stackexchange--title-container"&gt;
    
      &lt;div class="ltag__stackexchange--title"&gt;
        &lt;h1&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Gn-iPj_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackoverflow-logo-b42691ae545e4810b105ee957979a853a696085e67e43ee14c5699cf3e890fb4.svg" alt=""&gt;
            &lt;a href="https://stackoverflow.com/questions/64776155/make-table-row-or-cell-be-read-by-a-table-as-clickable/64789744#64789744" rel="noopener noreferrer"&gt;
              &lt;span class="title-flare"&gt;answer&lt;/span&gt; re:  Make table row or cell be read by a table as clickable
            &lt;/a&gt;
        &lt;/h1&gt;
        &lt;div class="ltag__stackexchange--post-metadata"&gt;
          &lt;span&gt;Nov 11 '20&lt;/span&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;a class="ltag__stackexchange--score-container" href="https://stackoverflow.com/questions/64776155/make-table-row-or-cell-be-read-by-a-table-as-clickable/64789744#64789744" rel="noopener noreferrer"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y9mJpuJP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-up-eff2e2849e67d156181d258e38802c0b57fa011f74164a7f97675ca3b6ab756b.svg" alt=""&gt;
        &lt;div class="ltag__stackexchange--score-number"&gt;
          4
        &lt;/div&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wif5Zq3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-down-4349fac0dd932d284fab7e4dd9846f19a3710558efde0d2dfd05897f3eeb9aba.svg" alt=""&gt;
      &lt;/a&gt;
    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--body"&gt;
    
&lt;h2&gt;Preword&lt;/h2&gt;
&lt;p&gt;Apologies to OP there are a few things in this answer that may be misleading if the row is meant to take people to another page.&lt;/p&gt;
&lt;p&gt;Firstly &lt;strong&gt;for options 1 and 2&lt;/strong&gt; below swap &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;s for &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;. There is no need for an event listener or &lt;code&gt;onclick&lt;/code&gt;…&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--btn--container"&gt;
    
      &lt;a href="https://stackoverflow.com/questions/64776155/make-table-row-or-cell-be-read-by-a-table-as-clickable/64789744#64789744" rel="noopener noreferrer"&gt;Open Full Answer&lt;/a&gt;
    
  &lt;/div&gt;
&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6PnduHBh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6cj4ujtmqo58y6khxw8g.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6PnduHBh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6cj4ujtmqo58y6khxw8g.jpg" alt="line drawing finger pressing key on keyboard with a quality assured icon (a rosette with a tick in it)"&gt;&lt;/a&gt;&lt;br&gt;
Accessibility testing is still not something we can fully automate. That doesn't mean that automated testing isn't a good start!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#78-automated-testing"&gt;
  &lt;/a&gt;
  78. Automated testing
&lt;/h3&gt;

&lt;p&gt;It is very easy to overlook something when designing a component or an entire page. &lt;/p&gt;

&lt;p&gt;Automated accessibility testing and accessibility linters are an essential &lt;strong&gt;first step&lt;/strong&gt; in producing accessible products. &lt;/p&gt;

&lt;p&gt;I won't beat around the bush, here are the tools I use:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://chrome.google.com/webstore/detail/axe-devtools-web-accessib/lhdoppojpmngadmnindnejefpokejbdd"&gt;axe DevTools - Web Accessibility Testing&lt;/a&gt; - great for a quick and dirty test of a page.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jsx-eslint/eslint-plugin-jsx-a11y"&gt;eslint-plugin-jsx-a11y&lt;/a&gt; - if I have to work with React, it catches things early at least.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://chrome.google.com/webstore/detail/accessibility-insights-fo/pbjjkligggfmakdaogkfomddhfmpjeni"&gt;Accessibility Insights for Web&lt;/a&gt; - hands down the best accessibility testing plugin you can use, a bit heavy to learn. I use this as my final "automatic" test.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That is it. I have loads of situational ones such as &lt;a href="https://chrome.google.com/webstore/detail/headingsmap/flbjommegcjonpdmenkdiocclhjacmbi"&gt;Headings Map&lt;/a&gt; or even just running Lighthouse in devtools (if I am working on performance as well, the Accessibility section of a Lighthouse report is essentially the same as Axe DevTools, it is just not as easy to use). &lt;/p&gt;

&lt;p&gt;But honestly, if you only use one automated tool, &lt;strong&gt;Accessibility Insights for Web&lt;/strong&gt; is amazing...and that is from someone who isn't a big fan of Microsoft!&lt;/p&gt;

&lt;p&gt;But, I have some sad news...&lt;a href="https://alphagov.github.io/accessibility-tool-audit/"&gt;automated accessibility tools only pick up around 40% of errors automatically..at best!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;so...&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#79-manual-testing-and-knowledge-are-still-required"&gt;
  &lt;/a&gt;
  79. Manual testing and knowledge are still required
&lt;/h3&gt;

&lt;p&gt;Sorry peeps, you have to learn this stuff, have an accessibility tester / QA on the team or pay someone like me to guide you.&lt;/p&gt;

&lt;p&gt;The biggest trick is to have a checklist...you could start by adding this article to your bookmarks as it covers a lot of the things to look for!&lt;/p&gt;

&lt;p&gt;I will be writing several articles on testing techniques so I will leave it at this for now.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#usability"&gt;
  &lt;/a&gt;
  Usability
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G4wzTKxA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0zfxp269vf2tkzx2j1g.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G4wzTKxA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0zfxp269vf2tkzx2j1g.jpg" alt="Line drawing person holding piece of paper with giant warning icon behind (exclamation mark in triangle)"&gt;&lt;/a&gt;&lt;br&gt;
Tips that make your site easier to use for everyone!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#80-white-space"&gt;
  &lt;/a&gt;
  80. White space
&lt;/h3&gt;

&lt;p&gt;When designing for mobile or touch, "white space" or "quiet space" is really important. &lt;/p&gt;

&lt;p&gt;Don't create screen-sized clickable cards that mean there are no "non interactive" areas to place your finger to scroll.&lt;/p&gt;

&lt;p&gt;This is particularly important for people with movement impairments, such as people with Parkinson's Disease or Cerebral Palsy.&lt;/p&gt;

&lt;p&gt;Reduced fine motor control results in a very frustrating experience from accidental clicks if you don't leave quiet space on the page!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#81-click-target-size"&gt;
  &lt;/a&gt;
  81. Click Target Size
&lt;/h3&gt;

&lt;p&gt;For similar reasons, tap target size of buttons, controls etc. is also really important.&lt;/p&gt;

&lt;p&gt;Currently (as WCAG is trying to reduce this requirement...which feels like a step backwards) it is required that tap targets are at least 44 CSS pixels by 44 CSS pixels. A &lt;a href="https://www.w3.org/TR/css3-values/#reference-pixel"&gt;CSS pixel is quite complicated&lt;/a&gt;, so generally on PC just use 44 pixels, on mobile it is slightly less so use about 0.8 * 44 (~35) pixels. &lt;/p&gt;

&lt;p&gt;Bear in mind those are minimums, so I just say "45px by 45px" on all devices as a general (and much simplified) rule.&lt;/p&gt;

&lt;p&gt;Large minimum tap target sizes can be great for creativity when designing for mobile due to space constraints!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#82-dont-disable-zoom"&gt;
  &lt;/a&gt;
  82. Don't disable zoom!
&lt;/h3&gt;

&lt;p&gt;Have you ever put something like this into the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section of your page?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;meta 
  name="viewport" 
  content="width=device-width, 
  initial-scale=1.0, 
  maximum-scale=1.0, 
  user-scalable=no" 
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Well don't ever do it again ok (I will give you a gentle slap on the wrist...this time).&lt;/p&gt;

&lt;p&gt;Disabling zoom is a massive accessibility no no. &lt;/p&gt;

&lt;p&gt;A lot of people benefit from being able to enlarge parts of the page to see them in more detail. A lot of people find zooming essential for reading a page on their mobile.&lt;/p&gt;

&lt;p&gt;Just leave it alone, don't try and stop people zooming.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#83-dont-use-timeouts-or-timers-if-you-can-avoid-it"&gt;
  &lt;/a&gt;
  83. Don't use timeouts or timers if you can avoid it
&lt;/h3&gt;

&lt;p&gt;Have you ever started filling in a multi page form, had the phone ring, come back to the form and then when you submit the current stage it tells you your session ended and you have to start again?&lt;/p&gt;

&lt;p&gt;It might not have happened exactly like that, but I am sure you have had an instance of being timed out on a web page before.&lt;/p&gt;

&lt;p&gt;Now for some people this can be a real issue. &lt;/p&gt;

&lt;p&gt;They may need time to double check information or they may be entering the information via sip and puff. &lt;/p&gt;

&lt;p&gt;Oh you haven't heard of sip and puff?...watch this great video on YouTube about Jared and how he interacts with a computer!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Bhj5vs9P5cw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you must set a time limit on something, make sure you set it very high to avoid excluding people. Provide an alternative way to complete the task that isn't time dependent as well.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#84-let-people-know-link-behaviour"&gt;
  &lt;/a&gt;
  84. Let people know link behaviour.
&lt;/h3&gt;

&lt;p&gt;If you are going to open a link in a new window with &lt;code&gt;target="frameName"&lt;/code&gt; then tell people. &lt;/p&gt;

&lt;p&gt;Oh and if that caught you by surprise yes, you can open a link in a new Window with something other than &lt;code&gt;target="_blank"&lt;/code&gt;, it can even be beneficial...but I digress.&lt;/p&gt;

&lt;p&gt;Anyway before I got distracted (I have been writing for hours!) I was talking about telling people when a link opens in a new window or tab.&lt;/p&gt;

&lt;p&gt;The simplest way to do this is to say it!&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://example.com"&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Go to another site (opens in new window)&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Obviously for most of you that will be a big no no as you don't want all those brackets cluttering up your design. &lt;/p&gt;

&lt;p&gt;So how about using a few of the tricks we learned earlier and a little CSS to let people know?&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/rpLmxkcs//embedded/result,html,css//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;What we do is use an SVG to indicate an external link (there is no standard for this by the way, but the icon used is reasonably well understood) and position it just after our link with CSS.&lt;/p&gt;

&lt;p&gt;Then we add some visually hidden text so that people who use a screen reader get the same information.&lt;/p&gt;

&lt;p&gt;It is preferable for everything to open in the current window. That way people can still use their back button, but even I prefer to open external sites in a new tab so people don't leave my sites too early! Use your own judgement on link opening behaviour, just keep it as consistent as possible!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#85-dont-forget-the-raw-visited-endraw-state"&gt;
  &lt;/a&gt;
  85. Don't forget the &lt;code&gt;:visited&lt;/code&gt; state
&lt;/h3&gt;

&lt;p&gt;Such an easy one to overlook. The &lt;code&gt;:visited&lt;/code&gt; selector allows you to style visited links. &lt;/p&gt;

&lt;p&gt;This can be really useful from an accessibility perspective as it helps people who have memory impairments remember where they have been before.&lt;/p&gt;

&lt;p&gt;It is also nice for everybody else as a simple cue so they don't view things they have already seen (or to find stuff they have seen previously!).&lt;/p&gt;

&lt;p&gt;You could use a similar technique to the new window indicator to add an eye icon or similar after a link.&lt;/p&gt;

&lt;p&gt;There is no requirement to style the &lt;code&gt;:visited&lt;/code&gt; state, it is just a good practice (and one that I admittedly forget also...I just added it to my checklist today due to writing this article!)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#86-modals-are-complicated"&gt;
  &lt;/a&gt;
  86. Modals are complicated
&lt;/h3&gt;

&lt;p&gt;Modals (dialogs) are one of the most difficult things to get right.&lt;/p&gt;

&lt;p&gt;Let's start with semantics, the correct HTML element to use is a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog"&gt;&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt; element&lt;/a&gt; normally!&lt;/p&gt;

&lt;p&gt;Next thing to note is that a true modal should have focus trapped inside of it while it is opened.&lt;/p&gt;

&lt;p&gt;As you have hopefully started learning by now from this article, screen readers follow their own set of rules and have unique ways of navigating.&lt;/p&gt;

&lt;p&gt;For this reason simply intercepting the Tab key (as 99% of modal examples and libraries do) is not sufficient to trap focus for a screen reader.&lt;/p&gt;

&lt;p&gt;Our biggest challenge is that we have to hide all other content other than the modal from screen readers.&lt;/p&gt;

&lt;p&gt;To achieve this it is normally best to have modals outside of the main content of the page (which is technically incorrect but the best option in my opinion). &lt;/p&gt;

&lt;p&gt;That way most of the work of hiding all other page content can be done with &lt;code&gt;aria-hidden="true"&lt;/code&gt; on the &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt; elements etc.&lt;/p&gt;

&lt;p&gt;This hides the majority of the content. However, we still have a problem that any elements that can receive focus (buttons, hyperlinks etc.) are still focusable and so ignore &lt;code&gt;aria-hidden&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For this we need to add &lt;code&gt;tabindex="-1"&lt;/code&gt; to every focusable element on the page, except for those within our modal.&lt;/p&gt;

&lt;p&gt;This can be an interesting challenge as you have to account for &lt;code&gt;contenteditable&lt;/code&gt;, &lt;code&gt;tabindex&lt;/code&gt; etc.&lt;/p&gt;

&lt;p&gt;Once we have sorted that, the modal should also be closable via the Esc key, so don't forget a handler for that.&lt;/p&gt;

&lt;p&gt;Finally, when the modal closes, focus should be returned to the button that opened it. &lt;/p&gt;

&lt;p&gt;This is especially important if the modal is closed via the Esc key. The document focus will be lost and will return to the top of the page if we don't complete this step.&lt;/p&gt;

&lt;p&gt;Oh and don't forget we need to undo the &lt;code&gt;tabindex="-1"&lt;/code&gt; that we set on all the focusable elements before we are done.&lt;/p&gt;

&lt;p&gt;As you can imagine, that is an awful lot to account for so that is &lt;strong&gt;another&lt;/strong&gt; article I will be writing in the future!&lt;/p&gt;

&lt;p&gt;For now, I found an old partial answer I gave on Stack Overflow that covers these points, but for a menu (same principle). &lt;/p&gt;

&lt;p&gt;I wouldn't use it in production but hopefully the code can give you some inspiration on how to achieve some of the above requirements!&lt;/p&gt;


&lt;div class="ltag__stackexchange--container"&gt;
  &lt;div class="ltag__stackexchange--title-container"&gt;
    
      &lt;div class="ltag__stackexchange--title"&gt;
        &lt;h1&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Gn-iPj_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackoverflow-logo-b42691ae545e4810b105ee957979a853a696085e67e43ee14c5699cf3e890fb4.svg" alt=""&gt;
            &lt;a href="https://stackoverflow.com/questions/66080384/two-problems-with-tabbing-an-accessible-pop-out-navigation-i-use-some-advice-on/66083587#66083587" rel="noopener noreferrer"&gt;
              &lt;span class="title-flare"&gt;answer&lt;/span&gt; re:  Two problems with tabbing an accessible pop-out navigation I use some advice on
            &lt;/a&gt;
        &lt;/h1&gt;
        &lt;div class="ltag__stackexchange--post-metadata"&gt;
          &lt;span&gt;Feb  7 '21&lt;/span&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;a class="ltag__stackexchange--score-container" href="https://stackoverflow.com/questions/66080384/two-problems-with-tabbing-an-accessible-pop-out-navigation-i-use-some-advice-on/66083587#66083587" rel="noopener noreferrer"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y9mJpuJP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-up-eff2e2849e67d156181d258e38802c0b57fa011f74164a7f97675ca3b6ab756b.svg" alt=""&gt;
        &lt;div class="ltag__stackexchange--score-number"&gt;
          2
        &lt;/div&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wif5Zq3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-down-4349fac0dd932d284fab7e4dd9846f19a3710558efde0d2dfd05897f3eeb9aba.svg" alt=""&gt;
      &lt;/a&gt;
    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--body"&gt;
    
&lt;h2&gt;Question 2: How can I make the 'close' button ignore tabbing and only work with the spacebar or enter key?&lt;/h2&gt;
&lt;p&gt;Starting with this question as it is more complex, I assume it is meant to be the same as "how do I trap focus within my menu" given the rest…&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--btn--container"&gt;
    
      &lt;a href="https://stackoverflow.com/questions/66080384/two-problems-with-tabbing-an-accessible-pop-out-navigation-i-use-some-advice-on/66083587#66083587" rel="noopener noreferrer"&gt;Open Full Answer&lt;/a&gt;
    
  &lt;/div&gt;
&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#videos"&gt;
  &lt;/a&gt;
  Videos
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kpCtalbp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xp5hwb01hf4ijmsvbds6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kpCtalbp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xp5hwb01hf4ijmsvbds6.jpg" alt="Line drawing computer screen with play icon and underneath dashes and dots representing captions / subtitles"&gt;&lt;/a&gt;&lt;br&gt;
Video is one of the most important aspects of marketing nowadays. As someone working in the digital space you will almost inevitably end up involved in video in one way or another. So let's see if we can make our videos as accessible as possible! &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#87-caption-your-videos-add-subtitles"&gt;
  &lt;/a&gt;
  87. Caption your videos (add subtitles)
&lt;/h3&gt;

&lt;p&gt;This doesn't just help people with disabilities. &lt;/p&gt;

&lt;p&gt;It also helps people watching the video who speak a different language.&lt;/p&gt;

&lt;p&gt;It is also essential now, a high percentage of videos are watched on mute while people are doing other things (the multi attention era!)!&lt;/p&gt;

&lt;p&gt;There are many formats for Closed Captions, but one that is nearly universally accepted is &lt;a href="https://en.wikipedia.org/wiki/SubRip"&gt;SubRip (.srt format)&lt;/a&gt; files.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#88-creating-srt-files-the-manual-way"&gt;
  &lt;/a&gt;
  88. Creating .srt files the manual way!
&lt;/h3&gt;

&lt;p&gt;.srt files have a format that is quite intuitive. In fact you can create them in notepad with reasonable ease!&lt;/p&gt;

&lt;p&gt;There are better ways to deal with creating closed captions for longer videos, but for a short 1-2 minute video you might as well do it manually!&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#the-format"&gt;
  &lt;/a&gt;
  The format
&lt;/h4&gt;

&lt;p&gt;Each set of instruction is comprised of 3 parts:-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the subtitle number (sequentially numbered starting at 1)&lt;/li&gt;
&lt;li&gt;the start and end times for when the subtitle should appear on screen&lt;/li&gt;
&lt;li&gt;the text to appear on screen&lt;/li&gt;
&lt;li&gt;each 3 part section is followed by a blank line&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The only bit that takes a little getting used to is how the times are formatted:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;hrs:mins:secs,ms
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So to display a subtitle at 1 hour 28 minutes 12 seconds and 115 milliseconds into a video for a duration of 3.127 seconds would be as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;01:28:15,115 -&amp;gt; 01:28:18,242
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#a-more-complete-example"&gt;
  &lt;/a&gt;
  A more complete example
&lt;/h4&gt;

&lt;p&gt;So the first few seconds of a file may look like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1
00:00:00,500 --&amp;gt; 00:00:03,172
InHu are amazing, they really know their stuff!

2
00:00:03,173 --&amp;gt; 00:00:06,494
They helped train our whole team on "accessibility first" thinking

3
00:00:06,495 --&amp;gt; 00:00:11,771
We reckon that we have saved a total of 18,000 GBP in staff time just from one training session
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you are done just save the file as a ".srt" file and upload it along with your video. &lt;/p&gt;

&lt;p&gt;Not too painful right? (oh and the timings don't have to be millisecond perfect, the nearest 500ms is ok for most things.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#89-dont-do-it-manually"&gt;
  &lt;/a&gt;
  89. Don't do it manually
&lt;/h3&gt;

&lt;p&gt;If you have a video longer than 1-2 minutes then YouTube is probably a good place to start.&lt;/p&gt;

&lt;p&gt;When you upload a video they will process the subtitles for you automatically. Having good audio will vastly improve the quality of the auto generated results.&lt;/p&gt;

&lt;p&gt;Then you can either download the .srt file and edit it manually, or you can use YouTube studio to edit the captions in a more human friendly way. For example, you can scrub through the video and see your changes in real time.&lt;/p&gt;

&lt;p&gt;Unfortunately I could not find an article that was up to date and well written on YouTube studio and Closed Captions. I guess I have yet another post to add to the list of things to write!&lt;/p&gt;

&lt;p&gt;With that being said, once you find the Closed Captions editor, it is quite straight forward to use, so it should hopefully make sense without a tutorial! 🤞&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#90-now-you-have-a-transcript-too"&gt;
  &lt;/a&gt;
  90. Now you have a transcript too!
&lt;/h3&gt;

&lt;p&gt;If you are posting the video to a blog then, once you have created your closed captions file, you can quickly create a transcript in HTML and add it below the video (or as an accessible PDF, or on a separate page...your choice!).&lt;/p&gt;

&lt;p&gt;For transcripts of conversations with more than one participant the &lt;code&gt;&amp;lt;dl&amp;gt;&lt;/code&gt; element from earlier is a great choice (using the &lt;code&gt;&amp;lt;dt&amp;gt;&lt;/code&gt; for the speaker and the &lt;code&gt;&amp;lt;dd&amp;gt;&lt;/code&gt; for what they said).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#91-audio-description"&gt;
  &lt;/a&gt;
  91. Audio Description
&lt;/h3&gt;

&lt;p&gt;While captions offer a much better experience for people who have a hearing impairment, they don't offer much for people with a sight impairment (not that they are the only people who enjoy audio described videos).&lt;/p&gt;

&lt;p&gt;So when you create a video put time aside and some thought into creating an &lt;a href="https://www.w3.org/WAI/media/av/description/"&gt;audio described version of your video&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The easiest way to explain audio description is that there is a narrator who describes the scene, in-between people talking.&lt;/p&gt;

&lt;p&gt;Sometimes there is not enough time between people talking for audio description, which is why I suggested thinking about it from the start.&lt;/p&gt;

&lt;p&gt;You can design your script in a way where natural pauses can be extended. You can also design your video in a way where footage can be made longer to provide an opportunity to fill in scene information etc.&lt;/p&gt;

&lt;p&gt;For this reason you will sometimes need to create two different edits of the same video footage. That way you can keep the pacing natural on the non audio described version and natural on the audio described version, even with the extra speech needed.&lt;/p&gt;

&lt;p&gt;For an example, how about a frozen trailer that is audio described? &lt;/p&gt;

&lt;p&gt;I don't want to spoil it for you but the last 10 seconds made me laugh with the way the audio describer says things!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/O7j4_aP8dWA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#92-seizure-warnings"&gt;
  &lt;/a&gt;
  92. Seizure warnings
&lt;/h3&gt;

&lt;p&gt;Another thing that often gets overlooked. If your video contains flashing imagery then add a seizure warning to the start of the video. &lt;/p&gt;

&lt;p&gt;It is also a good practice to add the timestamps of any sections that may cause a seizure to the video description on sites like YouTube etc. or in a pinned comment. That way people who may be affected by rapid flashes can still enjoy the video and skip the potentially dangerous parts. &lt;/p&gt;

&lt;p&gt;Another option is that you could remove any rapid flashes and upload an alternative version. &lt;/p&gt;

&lt;p&gt;The simplest way to do this is just to go to a black screen with the text "rapidly flashing imagery removed" showing (or similar wording). That way you can keep the sound in-sync and coherent.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#waiaria"&gt;
  &lt;/a&gt;
  WAI-ARIA
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VpWOm_Nh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrp7wud16l49xn0o743z.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VpWOm_Nh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrp7wud16l49xn0o743z.jpg" alt="Line drawing document with pencil showing relationships between items"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#93-waiaria-is-a-last-resort"&gt;
  &lt;/a&gt;
  93. WAI-ARIA is a last resort!
&lt;/h3&gt;

&lt;p&gt;The Web Accessibility Initiative - Accessible Rich Internet Applications Suite (&lt;a href="https://www.w3.org/WAI/standards-guidelines/aria/"&gt;WAI-ARIA&lt;/a&gt;) allows developers to add additional semantic information to HTML mark-up.&lt;/p&gt;

&lt;p&gt;The golden rule of WAI-ARIA is it is a last resort. &lt;/p&gt;

&lt;p&gt;You try every semantic HTML element you can think of first. Inevitably there are times when a relevant element does not exist, or you are constrained by the design decisions of others etc. WAI-ARIA is how you can tackle these scenarios.&lt;/p&gt;

&lt;p&gt;WAI-ARIA also allows for some things that HTML alone cannot achieve, especially when it comes to dynamic content and complex applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#94-know-your-raw-role-endraw-"&gt;
  &lt;/a&gt;
  94. Know your &lt;code&gt;role&lt;/code&gt;.
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles"&gt;&lt;code&gt;role&lt;/code&gt; attribute&lt;/a&gt; allows us to provide a role to an element with no semantic meaning (a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; or a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;), or it allows us to change the role of an existing element.&lt;/p&gt;

&lt;p&gt;A lot of the &lt;code&gt;role&lt;/code&gt; attributes should not really be needed in a modern page, as they have direct HTML5 equivalents. &lt;/p&gt;

&lt;p&gt;But just in case you inherit a poorly written project where changing elements is not possible, they are still useful to know.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;HTML 5 Element&lt;/th&gt;
&lt;th&gt;equivalent ARIA Role&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;role="article"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;role="complementary"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;role="contentinfo"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;role="form"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;role="banner"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;role="main"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;role="navigation"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;role="region"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;So with the above table the preference is for HTML5 elements, falling back to WAI-ARIA roles if you can't use the relevant HTML5 element. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#95-raw-rolepresentation-endraw-is-one-to-remember"&gt;
  &lt;/a&gt;
  95. &lt;code&gt;role="presentation"&lt;/code&gt; is one to remember.
&lt;/h3&gt;

&lt;p&gt;Think of this as a reset. You use &lt;code&gt;role="presentation"&lt;/code&gt; to remove semantic meaning from an element.&lt;/p&gt;

&lt;p&gt;I mentioned a couple of times to use &lt;code&gt;role="presentation"&lt;/code&gt; earlier, such as very old legacy projects using &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;s for layout or &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; elements that are purely for decoration. &lt;/p&gt;

&lt;p&gt;There are other use cases such as building tab components, application menus etc.&lt;/p&gt;

&lt;p&gt;It should be noted that &lt;code&gt;role="none"&lt;/code&gt; is a replacement / alternative / synonym of &lt;code&gt;role="presentation"&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;However at this time support is poor. The suggested usage if you want to start incorporating this into your mark-up is advised as &lt;code&gt;role="none presentation"&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Until implementations include sufficient support for role="none", web authors are advised to use the presentation role alone role="presentation" or redundantly as a fallback to the none role role="none presentation".&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Source: &lt;a href="https://www.w3.org/TR/wai-aria-1.1/#none"&gt;https://www.w3.org/TR/wai-aria-1.1/#none&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I would just stick with &lt;code&gt;role="presentation"&lt;/code&gt; for now, it is an easy thing to do a search-and-replace on later even in gigantic projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#96-widgets-and-controls"&gt;
  &lt;/a&gt;
  96. Widgets and controls
&lt;/h3&gt;

&lt;p&gt;In the previous point you will possibly have noticed that &lt;code&gt;role&lt;/code&gt; tends to map to sectional / layout elements in the HTML5 standard.&lt;/p&gt;

&lt;p&gt;WAI-ARIA also has roles for controls as well. &lt;/p&gt;

&lt;p&gt;These are particularly useful if you are designing a very complex custom component and there it is just impossible to use a native element. &lt;/p&gt;

&lt;p&gt;A prime example might be a custom multi-select control (as that is one of the few native HTML5 elements that is very poor and hard to use) where you are using tags for selected items. &lt;/p&gt;

&lt;p&gt;A great example of how much thought needs to go into designing custom components is &lt;a href="https://www.24a11y.com/2019/select-your-poison/"&gt;24a11y's article "select your poison"&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;In fact it ended up as a two-parter there was that much to cover, so here is &lt;a href="https://www.24a11y.com/2019/select-your-poison-part-2/"&gt;"select your poison part 2"&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Some of the &lt;code&gt;role&lt;/code&gt;s that you can use to create widgets and custom controls are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;role="button"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;role="checkbox"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;role="gridcell"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;role="link"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;role="menuitem"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;role="menuitemcheckbox"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;role="menuitemradio"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;role="option"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;role="progressbar"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;role="radio"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;role="scrollbar"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;role="searchbox"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;role="separator (when focusable)"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;role="slider"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;role="spinbutton"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;role="switch"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;role="tab"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;role="tabpanel"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;role="textbox"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;role="treeitem"&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will leave it to you to research them...or maybe I will add just one more article to the list of future articles! &lt;/p&gt;

&lt;p&gt;I think my content calendar is now full until the end of the year just from this article 😋🤣&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#97-beware-raw-roleapplication-is-for-people-who-like-pain"&gt;
  &lt;/a&gt;
  97. Beware - `role="application" is for people who like pain!
&lt;/h3&gt;

&lt;p&gt;This one deserves special mention. You might be thinking "well I am building a web application so the role makes sense?".&lt;/p&gt;

&lt;p&gt;Oh no, it isn't what it seems.&lt;/p&gt;

&lt;p&gt;What &lt;code&gt;role="application"&lt;/code&gt; does is that it gives full control to you, the developer. &lt;/p&gt;

&lt;p&gt;Sounds good right? Oh no, you do not realise how much support we get automatically from the browser.&lt;/p&gt;

&lt;p&gt;Keyboard, touch and mouse input is all in your hands. Every key stroke needs to remapped to your desired behaviour. Tab will no longer cycle between focusable items unless you tell it to, Enter won't submit forms etc.&lt;/p&gt;

&lt;p&gt;Honestly, unless you are a megastar accessibility expert with years of experience and a decent team behind you...probably best you just leave this one alone!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#98-endraw-arialive-raw-"&gt;
  &lt;/a&gt;
  98. &lt;code&gt;aria-live&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;live regions are one of the things that WAI-ARIA has that HTML doesn't. &lt;/p&gt;

&lt;p&gt;They allow us to inform the screen reader of changes to a page, important information etc.&lt;/p&gt;

&lt;p&gt;We use the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions"&gt;&lt;code&gt;aria-live&lt;/code&gt; attribute&lt;/a&gt; for this. &lt;/p&gt;

&lt;p&gt;Although advice varies and (once again) this is too broad for a listicle like this, one top tip is to only have one &lt;code&gt;aria-live&lt;/code&gt; region per page in most circumstances.&lt;/p&gt;

&lt;p&gt;Then use an application wide messaging queue to add updates to an array. Add these messages to the element that is marked with &lt;code&gt;aria-live&lt;/code&gt; with a slight delay between each. &lt;/p&gt;

&lt;p&gt;This makes maintenance easier as you don't have conflicting live regions. It also provides a more robust experience (as multiple live regions all trying to announce at once doesn't tend to work well). &lt;/p&gt;

&lt;p&gt;A final thing to note is that &lt;code&gt;aria-live&lt;/code&gt; has a couple of different settings. They affect how "forceful" the announcements from the &lt;code&gt;aria-live&lt;/code&gt; region are.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;aria-live="polite"&lt;/code&gt; means that a screen reader will try and wait until the person using the screen reader is no longer reading anything.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;aria-live="assertive"&lt;/code&gt; is more aggressive. It will interrupt the current item being read out if it can. Use this sparingly!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#99-endraw-ariaexpanded-raw-"&gt;
  &lt;/a&gt;
  99. &lt;code&gt;aria-expanded&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.w3.org/WAI/GL/wiki/Using_the_WAI-ARIA_aria-expanded_state_to_mark_expandable_and_collapsible_regions"&gt;&lt;code&gt;aria-expanded&lt;/code&gt;&lt;/a&gt; is another common attribute.&lt;/p&gt;

&lt;p&gt;You use this to let Assistive Tech (AT) know the whether a region is collapsed or expanded. It is placed on the item that controls the expanding element.&lt;/p&gt;

&lt;p&gt;That sounds complicated, but it isn't. If you had a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; that opens a menu, the &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; would have the &lt;code&gt;aria-expanded&lt;/code&gt; property on it to indicate whether the menu is expanded or collapsed.&lt;/p&gt;

&lt;p&gt;So if the menu is currently open (expanded) the button would have &lt;code&gt;aria-expanded="true"&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;If you clicked the button and the menu closed you would use JavaScript to change the attribute to &lt;code&gt;aria-expanded="false"&lt;/code&gt; (or remove the attribute entirely) to let AT know the change of state.&lt;/p&gt;

&lt;p&gt;As a general rule if one element controls the opening and closing of another element it should have the &lt;code&gt;aria-expanded&lt;/code&gt; attribute on it to indicate the current state.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#100-endraw-ariacontrols-raw-"&gt;
  &lt;/a&gt;
  100. &lt;code&gt;aria-controls&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;100! Wow you have no idea how long it has taken to get here!&lt;/p&gt;

&lt;p&gt;When using &lt;code&gt;aria-expanded&lt;/code&gt; you will nearly always want to use it in conjunction with &lt;code&gt;aria-controls&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This signals to a screen reader "when I am interacted with I will affect this other element on the page". It builds the relationship between the two elements that cannot be determined by DOM structure alone. &lt;/p&gt;

&lt;p&gt;The advantage for people who use AT is that their AT will often have a shortcut that allows them to jump straight to the affected element that is the target of &lt;code&gt;aria-controls&lt;/code&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#101-the-best-tip-for-last-my-number-one-accessibility-tip"&gt;
  &lt;/a&gt;
  101. The best tip for last - My number one accessibility tip.
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;People&lt;/strong&gt; not &lt;strong&gt;users&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Did you notice that throughout this whole article I never once use the word "user" to describe somebody. &lt;/p&gt;

&lt;p&gt;16,800 words+ and I always say "person with disability" instead of "disabled user", or "person who uses a screen reader" instead of "screen reader user".&lt;/p&gt;

&lt;p&gt;Get rid of the word "user" from your vocabulary. &lt;/p&gt;

&lt;p&gt;Yes, I know it is difficult.&lt;/p&gt;

&lt;p&gt;But "user" detaches you from the people who use your product. Using "people" in it's place drills the message into your head that your work affects people. &lt;/p&gt;

&lt;p&gt;You don't think it is a coincidence that I started this article talking about "personas" and ended talking about "people first thinking" do you? &lt;/p&gt;

&lt;p&gt;Realising that your designs, code etc. has a direct impact of hundreds, thousands or even millions of people makes a real difference to the way you approach development.&lt;/p&gt;

&lt;p&gt;And if you don't think your actions impact that many people, 1 in 6 people have a disability. 1 in 10 people have a disability that has some impact on the way they interact with a computer and your digital products. That is 1 in 10 people that are affected by poor accessibility.&lt;/p&gt;

&lt;p&gt;People with disabilities are the single biggest "minority group" in the world...and they are being ignored. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://webaim.org/projects/million/#wcag"&gt;97.4% of websites have accessibility errors&lt;/a&gt; we can detect automatically (and remember that only accounts for 40% of all errors!). &lt;/p&gt;

&lt;p&gt;That means &lt;strong&gt;at least&lt;/strong&gt; 97.4% of websites have barriers that make them harder to use than they need to be.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#go-on-help-yourself-while-you-help-others"&gt;
  &lt;/a&gt;
  Go on, help yourself while you help others
&lt;/h2&gt;

&lt;p&gt;Why not be in the 2.6% that build quality and inclusive products? Why not be a leader in your field? &lt;/p&gt;

&lt;p&gt;And don't forget, accessibility knowledge and skills are becoming more and more important in job roles. Especially if companies you apply to work at want to work on Government contracts. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In summary:&lt;/strong&gt; you can improve your job prospects and earnings potential by learning how to create accessible websites and web apps...and you will have a positive impact on the world along the way. &lt;/p&gt;

&lt;p&gt;Go on, learn how to build accessible products, &lt;strong&gt;help others while you help yourself&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Isn't that the definition of win-win? &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>a11y</category>
      <category>beginners</category>
    </item>
    <item>
      <title>5 Beginner Python Project Ideas</title>
      <author>Matthew Tam</author>
      <pubDate>Fri, 30 Jul 2021 12:11:26 +0000</pubDate>
      <link>https://dev.to/matthewtamyt/5-beginner-python-project-ideas-46hc</link>
      <guid>https://dev.to/matthewtamyt/5-beginner-python-project-ideas-46hc</guid>
      <description>&lt;h2&gt;
  &lt;a href="#python-project-ideas"&gt;
  &lt;/a&gt;
  Python Project Ideas
&lt;/h2&gt;

&lt;p&gt;You have probably been there. I have. Sitting on my chair and staring straight at my computer screen, wondering what I should do with my little knowledge of a newly learnt coding language. Well, I am here to assist you. Here are 5 Python project ideas for beginners. Of course, this could be for intermediates and experts too. It just depends to what extent you want your program to be.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-mad-libs-game"&gt;
  &lt;/a&gt;
  1 Mad Libs Game
&lt;/h2&gt;

&lt;p&gt;This was my first game ever created. The simplest ever. It requires you to know how to ask users to input values and store them as variables. After multiple inputs, you print a story out depending on the user's inputs. Dead simple. Reinforces your Python basics. Here is a quick video by Mike Dane that teaches you how to do it if you need help: &lt;a href="https://www.youtube.com/watch?v=u7g9mRzQLYE"&gt;YouTube Video&lt;/a&gt;. The video is a short version of what you should expect in your game. Good luck! Here is what I did: &lt;a href="https://github.com/MatthewTamYT/BeginnerProjectIdeas/blob/main/Mad%20Libs%20Game.py"&gt;My Mad Libs Game&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-number-guessing-game"&gt;
  &lt;/a&gt;
  2 Number Guessing Game
&lt;/h2&gt;

&lt;p&gt;This is another simple yet addictive game to play. The goal of the game is to ask the user for the upper bound limit of the available numbers, then store a random number within that range. Next, the user would give guesses and the computer would give clues of whether that number is too much or too little. Here is a video of a simplified version by Geek Tutorials:  &lt;a href="https://www.youtube.com/watch?v=2sWTNMi4XpE"&gt;YouTube Video&lt;/a&gt;. Here is what I did: &lt;a href="https://github.com/MatthewTamYT/BeginnerProjectIdeas/blob/main/Number%20Guessing%20Game.py"&gt;My Number Guessing Game&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-dice-rolling-simulator"&gt;
  &lt;/a&gt;
  3 Dice Rolling Simulator
&lt;/h2&gt;

&lt;p&gt;The aim of the game is for the computer to simulate 9 rounds of dice rolling between two players. The computer would display the result of each round the give a winner at the end of 9 rounds. This is completely random and requires no human input at all. Here is a video by Tutorial Spot: &lt;a href="https://www.youtube.com/watch?v=VWffrh13CjI"&gt;YouTube Video&lt;/a&gt;. And here is the source code if you need it: &lt;a href="https://pastebin.com/NdrhCC5L"&gt;Source Code&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-hangman"&gt;
  &lt;/a&gt;
  4 Hangman
&lt;/h2&gt;

&lt;p&gt;This is a classic. It is a word guessing game where the player gives guesses of the letters inside the word. Every time the player guess a wrong letter, one limb is added to a picture of a human. The goal is to guess the word before the human gets all his limbs. I found this wonderful tutorial by Kite here: &lt;a href="https://www.youtube.com/watch?v=m4nEnsavl6w"&gt;YouTube Video&lt;/a&gt;. However, the video is quite fast, so I recommend you to turn it to 0.75x the speed. Here is the source code: &lt;a href="https://github.com/kiteco/python-youtube-code/tree/master/build-hangman-in-python"&gt;Source Code&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-youtube-downloader"&gt;
  &lt;/a&gt;
  5 YouTube Downloader
&lt;/h2&gt;

&lt;p&gt;This is definitely the most challenging one of all. So make sure you know how to do the first few before coming here. At first glance, this might seem very difficult. But once you get started, it is actually very straightforward. So the aim is to enter your URL of the video, then select your path where you want the video to be, and choose your video quality. Lastly, just click "Download". If you need a bit of help: my first tip would be to use PyTube. My next tip would be to make it a GUI with Tkinter. The best video tutorial I found was by Dream Developers here: &lt;a href="https://www.youtube.com/watch?v=BPhvbIuq7uM"&gt;Video Tutorial&lt;/a&gt;. Here is the source code of the project: &lt;a href="https://github.com/keyurAdhyaru/Youtube-Downloader-"&gt;Source Code&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#comment-down-below"&gt;
  &lt;/a&gt;
  Comment Down Below
&lt;/h3&gt;

&lt;p&gt;Please feel free to comment down below what you think. You can also give suggestions to more project ideas or elaborate on these ideas. Have a nice discussion! &lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Portfolio/Webpage Template with animations.</title>
      <author>FRADAR</author>
      <pubDate>Fri, 30 Jul 2021 12:11:11 +0000</pubDate>
      <link>https://dev.to/fradar/portfolio-webpage-template-with-animations-e87</link>
      <guid>https://dev.to/fradar/portfolio-webpage-template-with-animations-e87</guid>
      <description>&lt;p&gt;This is a portfolio template with some very simple animations in CSS and HTML. You can add whatever you want in here, and fill in the the information where it says "Your name here" and the famous default text "Lorem Ispium....." I hope you like it!&lt;/p&gt;

&lt;p&gt;Check it out: &lt;a href="https://codepen.io/FRADAR/full/yLMROeE"&gt;https://codepen.io/FRADAR/full/yLMROeE&lt;/a&gt;&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>portfolio</category>
      <category>opensource</category>
      <category>template</category>
    </item>
  </channel>
</rss>
