<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>5 Ways To Host Your Applications</title>
      <author>Abdullah Furkan Özbek</author>
      <pubDate>Wed, 15 Sep 2021 07:46:38 +0000</pubDate>
      <link>https://dev.to/afozbek/5-ways-to-host-your-applications-4d77</link>
      <guid>https://dev.to/afozbek/5-ways-to-host-your-applications-4d77</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-surge"&gt;
  &lt;/a&gt;
  1. Surge
&lt;/h2&gt;

&lt;p&gt;Surge is a cloud platform for hosting static websites, which is extremely simple to use but offers customization options for those who need them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WsNkHn2J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hho9fxkum66yyk9zxh10.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WsNkHn2J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hho9fxkum66yyk9zxh10.png" alt="Surge"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-firebase"&gt;
  &lt;/a&gt;
  2. Firebase
&lt;/h2&gt;

&lt;p&gt;Firebase Hosting is a fully managed hosting service for static and dynamic content as well as microservices.&lt;/p&gt;

&lt;p&gt;The service is backed by SSD storage and a global CDN (content delivery network).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H5AAjJfN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3v6uwzvh0pgc1s4chfjn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H5AAjJfN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3v6uwzvh0pgc1s4chfjn.png" alt="Firebase"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-vercel"&gt;
  &lt;/a&gt;
  3. Vercel
&lt;/h2&gt;

&lt;p&gt;Vercel is a hosting platform for frontend frameworks. After you create a pr it will automatically create an environment for you so that the team can check it before merging it. So useful!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W3vdmZzx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gfyqkw4t60q9n05elite.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W3vdmZzx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gfyqkw4t60q9n05elite.png" alt="Vercel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-github-pages"&gt;
  &lt;/a&gt;
  4. Github Pages
&lt;/h2&gt;

&lt;p&gt;GitHub Pages is a static site hosting service that takes HTML, CSS, and JavaScript files straight from a repository on GitHub, optionally runs the files through a build process and publishes a website&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qZvG8XM4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzaqtfmk4u0c73ghh8x1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qZvG8XM4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzaqtfmk4u0c73ghh8x1.png" alt="Github Pages"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-netlify"&gt;
  &lt;/a&gt;
  5. Netlify
&lt;/h2&gt;

&lt;p&gt;Netlify is a web hosting and automation platform that accelerates &lt;strong&gt;development productivity&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I deployed most of my projects to Netlify because it is so easy to use, it is supporting custom domains, and much more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mWb2kIts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r1103jdsiispz4g15azh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mWb2kIts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r1103jdsiispz4g15azh.png" alt="Netlify"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/suhailkakar/6-ways-to-host-your-react-js-app-for-free-2163"&gt;6 Ways to Host Your React JS App For Free&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>programming</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>My lessons after moving from CloudFormation to CDK</title>
      <author>Igor</author>
      <pubDate>Wed, 15 Sep 2021 07:04:06 +0000</pubDate>
      <link>https://dev.to/grenguar/my-learnings-after-moving-from-cloudformation-to-cdk-cin</link>
      <guid>https://dev.to/grenguar/my-learnings-after-moving-from-cloudformation-to-cdk-cin</guid>
      <description>&lt;p&gt;&lt;em&gt;Nowadays there is no doubt that 'Infrastructure as real code' is a way of cloud resources provisioning. CDK is an incredible way of doing this in the AWS ecosystem. This article will talk about the situation when the Cloudformation template is in place and you want to make a new setup with the CDK using Typescript. The opinions are my own.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-case"&gt;
  &lt;/a&gt;
  The Case
&lt;/h2&gt;

&lt;p&gt;Let's imagine you have a new project in a team where CFN was used for a long time. There is a lot of boilerplate already and people are repeating the same things over and over again. There is also some custom CI/CD setup in place. With this background - you are set to start a new project with CDK.&lt;/p&gt;

&lt;p&gt;Excited? Me too. But there are some complications because CFN is a YAML/JSON-based templating mechanism. CDK in short is an abstraction on top of CFN which is using a programming language for provisioning infrastructure in a structured way. Here are my tips on how to start switching from Cloudformation/SAM after using the tool for almost a year now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#start-with-a-small%C2%A0project"&gt;
  &lt;/a&gt;
  Start with a small project
&lt;/h2&gt;

&lt;p&gt;Consider a project without many elements. Try to avoid projects where you need to set up VPC by yourself. Also, it will be better to avoid projects with container orchestrations using ECS or Kubernetes. The ideal first project will be the one having S3, Lambda, CloudFront, API Gateway, DynamoDB, and IAM permissions. Example projects can be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scheduled event placing data into S3/DynamoDB&lt;/li&gt;
&lt;li&gt;Event from Github/Bitbucket &lt;/li&gt;
&lt;li&gt;The API call to do some simple job like routing request to another party.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Another important point is to use CDK version 2. x. In most of the guides, it will be suggested to utilize the first one. It is outdated and has many dependencies issues. The developing experience will be much more delightful. For installing it -  run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install cdk@next
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#study-cdk-basic%C2%A0concepts"&gt;
  &lt;/a&gt;
  Study CDK basic concepts
&lt;/h2&gt;

&lt;p&gt;There are multiple important terms when it comes to CDK. The first one is 'App'. It is the root element of the structure. There you can describe the stacks and their creation.&lt;br&gt;
The most interesting concept is a construct. From AWS docs:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Constructs are the basic building blocks of AWS CDK apps. A construct represents a "cloud component" and encapsulates everything AWS CloudFormation needs to create the component.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It is basically a module of the resources packed together as a logical unit. The constructs are having different levels of abstraction. There are ones that are the closest to the CloudFormation. Typically, they have poor typing. &lt;/p&gt;

&lt;p&gt;There are 3 levels of abstraction: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CFN resources  - they are mapped to the underlined CFN resources.&lt;/li&gt;
&lt;li&gt;Level 2  - they give the abstractions and typing. The constructs can be also coming from the library here. Many constructs will allow having types and making fewer mistakes.&lt;/li&gt;
&lt;li&gt;Level 3 - these are the whole patterns. They can be done by AWS or other developers. The ones coming from AWS advocates and heroes could be found here.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From my point of view, the power of CDK lies in the third level. It gives the possibility to automate the creation of very common patterns in your team. For example, it can be a custom domain or pipeline setup. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#planning-the%C2%A0stacks"&gt;
  &lt;/a&gt;
  Planning the stacks
&lt;/h2&gt;

&lt;p&gt;Another important point is to have an idea of how many stacks will you need to succeed in the provisioning of the infrastructure. One stack is not helpful in many cases. It means that stacks should be architecture in a way that each of them solves one problem. It can be an issue to determine whether to use the construct or the stack.&lt;/p&gt;

&lt;p&gt;According to AWS documentation: "A stack is a collection of AWS resources that you can manage as a single unit." When you have an API with Lambdas - this can be a stack. However, if you have databases and other types of storage - this can be another stack. &lt;/p&gt;

&lt;p&gt;One more thing which comes quite often, in the end, is how the stacks will talk with each other. There are multiple ways of doing this. You can either pass general props or the whole stack as an input to the next one, for example.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#always-check-original-documentation"&gt;
  &lt;/a&gt;
  Always check original documentation
&lt;/h2&gt;

&lt;p&gt;The CDK is just awesome, from my point of view. But it is not saving us from reading and understanding Cloudformation. De-facto CDK is synthesizing the CloudFormation template in JSON format. Thus, it is obligatory to see what it is doing for us.&lt;/p&gt;

&lt;p&gt;There are great tricks hidden in the official documentation when you are actually reading it. Most of the time, I am googling something like 'AWS::DynamoDB::Table'. The response will give the needed documentation page for the infrastructure element.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#failures-are-essential"&gt;
  &lt;/a&gt;
  Failures are essential
&lt;/h2&gt;

&lt;p&gt;My journey with CDK started with the failure of deployment when I tried to have an S3 bucket created. It took 15 minutes to deploy it with no success. It is ok to fail with CDK in the beginning. Do not try to hurry and migrate the whole application at once. &lt;/p&gt;

&lt;p&gt;During one of the projects, I had a CI/CD setup done with SAM and CloudFormation. Migration of it completely to CDK would take time from the actual feature development. So the solution was to migrate the implementation code infrastructure to CDK and rest the pipeline with the same setup. I learned a lot during this transition for the next project where I took the whole infrastructure into CDK.&lt;/p&gt;




&lt;p&gt;All in all, CDK is worth to be tried on the next PoC or internal tool because it gives the real coding experience while doing infrastructure. This is especially important when you are going to use a DevOps mindset for the new features where engineers are responsible for not only the implementation. Usage of the same language for the IaC tool eliminates the context switching between TypeScript and YAML. Thus, it will increase the productivity of the whole team.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>devops</category>
      <category>serverless</category>
    </item>
    <item>
      <title>Build a Javascript OTP using HTML SCSS JAVASCRIPT</title>
      <author>Nguyen Anh Vu</author>
      <pubDate>Wed, 15 Sep 2021 06:51:11 +0000</pubDate>
      <link>https://dev.to/devnav2902/build-a-javascript-otp-using-html-scss-javascript-em7</link>
      <guid>https://dev.to/devnav2902/build-a-javascript-otp-using-html-scss-javascript-em7</guid>
      <description>&lt;p&gt;I created this tutorial on my channel or you can read tutorial: &lt;a href="https://www.homiedev.com/project-otp-su-dung-html-scss-javascript/"&gt;Build a Javascript OTP using HTML SCSS JAVASCRIPT&lt;/a&gt;&lt;br&gt;
let check it out 🎉:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/vE-Mco74PdA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
      <category>sass</category>
    </item>
    <item>
      <title>My love-hate relationship with the fundamentals</title>
      <author>𝙹𝚊𝚜𝚘𝚗 𝙻𝚎𝚘𝚠 👨🏻‍💻</author>
      <pubDate>Wed, 15 Sep 2021 06:50:31 +0000</pubDate>
      <link>https://dev.to/jasonleowsg/my-love-hate-relationship-with-the-fundamentals-b6m</link>
      <guid>https://dev.to/jasonleowsg/my-love-hate-relationship-with-the-fundamentals-b6m</guid>
      <description>&lt;p&gt;I have a love-hate relationship with the “fundamentals”. Be it learning to code, picking up new skills and knowledge, developing new habits, I’m the impatient sort who loves to jump right in and try things out, even if I don’t know what I’m doing. I hated how veteran gatekeepers of any field/niche would police newbies by using “the fundamentals” as some sort of an entrance exam. I felt that learning the fundamentals through some 100-hour boring course hinders more than it helps. But sometimes, that’s when the long arm of the fundamentals come back to bite me. With good reason.&lt;/p&gt;

&lt;p&gt;Just like how I just solved the epic bug that’s been causing slow page loads on my product &lt;a href="https://golifelog.com"&gt;Lifelog&lt;/a&gt;. A 4am late night. Three full days of debugging trial by fire. I lost count of how many things I tried, on both frontend and backend. I recall that at some point I felt so demotivated and low in morale that thoughts of giving up altogether came to me. In the end, it was a silly little Javascript function in charge of sorting comments. All that herculean effort and sleepless nights, only to find that the solution was so small and simple. Comically simple.&lt;/p&gt;

&lt;p&gt;I find that such scenarios—of inflated perceptions of difficulty unfolding into a laughable realisation of the solution—are usually signs that the fundamentals are missing. If I had taken the boring and labourious yet effective approach of debugging by commenting out code bit by bit, I wouldn’t have needed 4am late nights and three wasted days. Yet, here I am, deeply humbled due to a combination of newbie inexperience, impatience with the fundamentals, and that just-want-to-do-my-own-way personality.&lt;/p&gt;

&lt;p&gt;It’s a great learning point, and even greater validation of why the fundamentals matter, not just in coding but any pursuit of skill or knowledge. Not that everyone now has to know the fundamentals before starting any pursuit. But more like the fundamentals cannot be ignored, and incidents like this are signals that I need to brush up on them, rather than haughtily brushing them off like I knew better.&lt;/p&gt;




&lt;p&gt;This post was first published on &lt;a href="https://golifelog.com/posts/fundamentals-1610092536439"&gt;Lifelog&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>decodingcoding</category>
      <category>beginners</category>
      <category>noob</category>
      <category>fundamentals</category>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 26, Password Manager-Tkinter</title>
      <author>Aatmaj</author>
      <pubDate>Wed, 15 Sep 2021 06:49:29 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-26-password-manager-tkinter-17p9</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-26-password-manager-tkinter-17p9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-let-us-build-a-login-application-which-gets-the-passwords-and-usernames-from-users"&gt;
  &lt;/a&gt;
  Today let us build a login application which gets the passwords and usernames from users.
&lt;/h2&gt;




&lt;h4&gt;
  &lt;a href="#todays-application-specs-are-as-follows"&gt;
  &lt;/a&gt;
  Today's application specs are as follows
&lt;/h4&gt;

&lt;p&gt;1) There are four widgets- two Entry (single line textboxes), one button, one label in the program.&lt;br&gt;
2) The user enters username in the first textbox. Password in the second textbox. But the password is encrypted (not shown) &lt;br&gt;
3) After user hits the sign up button, the username is displayed on the label and the password is stored. &lt;br&gt;
&lt;em&gt;We will not store the password now, just make a dummy password entry function stub. The password can be stored in files in encrypted format or by other methods once we cover file handling in Python. Till that time, assume that the &lt;code&gt;storepassword()&lt;/code&gt; function stores the passwords and username automatically&lt;/em&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#encrypting-the-entry-widget"&gt;
  &lt;/a&gt;
  Encrypting the entry widget.
&lt;/h3&gt;

&lt;p&gt;We don't want others to see our passwords while we type them right? This can be achieved using the &lt;code&gt;show="*"&lt;/code&gt; attribute.&lt;br&gt;
&lt;code&gt;TB1=tk.Entry(form,width = 20,show="*")&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Example of Entry widget"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'400x200'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let us now revisit yesterday's program and hide the entry widget.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BTwSscvW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u7fnlzgtlvi6j4u68wlm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BTwSscvW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u7fnlzgtlvi6j4u68wlm.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KF6gmBIW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3jro1sgx61nxlamrp3eb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KF6gmBIW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3jro1sgx61nxlamrp3eb.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#building-the-login-screen"&gt;
  &lt;/a&gt;
  Building the login screen.
&lt;/h3&gt;

&lt;p&gt;We already have got the specifications of the program, so now let us start building it. Here is the code for the program, commented for explaination. Be sure to give it a try first before seeing the solution.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt; &lt;span class="c1"&gt;# import the Tkinter module
&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# create the blank window.
&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"password manager"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# set the title as password manager
&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'400x200'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# set the default geometry of the window.
&lt;/span&gt;
&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c1"&gt;# make an entry widget with 20 spaces for the username
&lt;/span&gt;
&lt;span class="n"&gt;TB2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c1"&gt;# entry widget for password and hide the keys whenever pressed.
&lt;/span&gt;
&lt;span class="c1"&gt;# TB1 is for username, TB2 is for password
&lt;/span&gt;&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;TB2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# pack the widgets into 'form'
&lt;/span&gt;
&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# make a label to display the username
&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="c1"&gt;#function to be executed once the button is pressed.
&lt;/span&gt;    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# get username
&lt;/span&gt;    &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;TB2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# get password
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Welcome "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" to python GUI"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Green"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# display the label
&lt;/span&gt;     &lt;span class="n"&gt;storepassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# store password and username
&lt;/span&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
     &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Please enter a valid username and password."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Red"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# blank screens
&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;storepassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;#//Some mechanism to store password//
&lt;/span&gt;    &lt;span class="k"&gt;pass&lt;/span&gt; &lt;span class="c1"&gt;#stubbed
&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Sign Up"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# setup the button
&lt;/span&gt;&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kaQB7LEv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bj1exu1iyw0euab3zccb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kaQB7LEv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bj1exu1iyw0euab3zccb.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M-X_3tdT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zqkz4sr1yi5xj5x85l4z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M-X_3tdT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zqkz4sr1yi5xj5x85l4z.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RyHpIhVR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y9fp3rzsh17lniyahevu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RyHpIhVR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y9fp3rzsh17lniyahevu.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Homework&lt;/strong&gt; Run the above application &lt;em&gt;(without seeing)&lt;/em&gt; debug and test it. Store the application in a file passwordmanager.pyw. and send me a pic on the comments below.&lt;/p&gt;




&lt;p&gt;Well today's password manager is very secure....But tomorrow we will see a mechanism to steal the passwords by a spyware😈&lt;br&gt;
So stay tuned for updates by following me.&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Understanding Network things: part 5 – TLS &amp; mTLS</title>
      <author>Aurélie Vache</author>
      <pubDate>Wed, 15 Sep 2021 06:33:10 +0000</pubDate>
      <link>https://dev.to/aurelievache/understanding-network-things-part-5-tls-mtls-554n</link>
      <guid>https://dev.to/aurelievache/understanding-network-things-part-5-tls-mtls-554n</guid>
      <description>&lt;p&gt;Hi,&lt;br&gt;
I've got a secret for you, since several years. I'm a developer and I'm a mess in undestanding network things! :'(&lt;/p&gt;

&lt;p&gt;It's hard to not understanding things that anyone seems to understand and understanding network concepts can be difficult or time-consuming, specially for developers. That the reason I started to create sketchnotes about Network concepts. I think it could be a good way, more visual, to explain it.&lt;/p&gt;

&lt;p&gt;In this article let's dig into TLS and mTLS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8UnGnWDx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dbc3jfz4vd85ru6i90fw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8UnGnWDx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dbc3jfz4vd85ru6i90fw.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ddIovtc0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tuy6oc3da7b5h5bnklss.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ddIovtc0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tuy6oc3da7b5h5bnklss.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As usual, if you like theses sketchnotes, you can follow me, and tell me what do you think. I will publish others sketchs shortly :-).&lt;/p&gt;

&lt;p&gt;If you are interested, I already published sketchnotes about &lt;a href="https://gumroad.com/aurelievache"&gt;Kubernetes, Docker and Istio&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>network</category>
      <category>http</category>
      <category>beginners</category>
      <category>cloud</category>
    </item>
    <item>
      <title>SEO for Non-Scumbags: How to Earn Site Visitors without Selling Your Soul</title>
      <author>Erik Dietrich</author>
      <pubDate>Wed, 15 Sep 2021 06:32:19 +0000</pubDate>
      <link>https://dev.to/daedtech/seo-for-non-scumbags-how-to-earn-site-visitors-without-selling-your-soul-2lje</link>
      <guid>https://dev.to/daedtech/seo-for-non-scumbags-how-to-earn-site-visitors-without-selling-your-soul-2lje</guid>
      <description>&lt;p&gt;&lt;em&gt;This was originally &lt;a href="https://daedtech.com/seo-for-non-scumbags-how-to-earn-site-visitors-without-selling-your-soul/"&gt;published on my blog&lt;/a&gt;. If you like this, I'll be publishing the new installments in the series there, first.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Today I'm going to start a blog post series that fits into &lt;a href="https://daedtech.com/why-i-do-high-quality-work-is-both-good-policy-and-terrible-positioning/"&gt;the broader "business of freelancing" category&lt;/a&gt;.  But I'm going to give it a secondary tag, called "SEO for Non-Scumbags," and spend some time in this post explaining why that title isn't just me being flippant.&lt;/p&gt;

&lt;p&gt;People have been asking me to talk more about &lt;a href="https://daedtech.com/marketing-101-marketing-isnt-what-you-think-it-is-freelancers/"&gt;marketing for freelancers&lt;/a&gt;.  And I've been demurring, saying that &lt;a href="https://daedtech.com/what-are-your-niche-ideas-lets-do-some-case-studies/"&gt;you need a niche&lt;/a&gt; before you can meaningfully market yourself.  But you &lt;em&gt;don't &lt;/em&gt;need a niche yet to learn about SEO and search traffic, so that you're prepared to capitalize when you do identify your niche.&lt;/p&gt;

&lt;p&gt;So let me teach you about that.  In this post, I'll talk about the scumbag way and the non-scumbag way to do SEO, so that you understand there's a way to do it benignly.  In the broader series, I'll walk you through how to execute the non-scumbag playbook.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://daedtech.com/wp-content/uploads/2013/09/Amway-e1511929530743.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oh_MqeBz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://daedtech.com/wp-content/uploads/2013/09/Amway-e1511929530743.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;My Motivations, Backstory, and Bonafides&lt;/h2&gt;

&lt;p&gt;A while ago, in the Hit Subscribe community (now open to all, if &lt;a href="https://hit-subscribe.circle.so/join?invitation_token=44e8b495eb3efcef481ff5690ac4fe3799f75162-e3922abe-4d78-4fed-81ab-e28198624a04"&gt;you'd like to join&lt;/a&gt;!), I ran a poll.  I wanted to see how many of the folks in there (mostly engineers) would be interested if I taught them to do SEO and keyword research.  The result blew me away in that an even 96% of respondents expressed interest, even without the specific promise of pay to do it for customers.&lt;/p&gt;

&lt;p&gt;So the interest is, apparently, there.&lt;/p&gt;

&lt;p&gt;If we view &lt;a href="https://www.hitsubscribe.com/our-results/"&gt;successful keyword research&lt;/a&gt; as a core differentiator for Hit Subscribe, you might wonder why I'd want to teach it to folks in the community, let alone the broader internet.  (And, after planning thousands of pieces of content and presiding over now dozens of hockey stick traffic graphs, I'd consider our methodology a success.)&lt;/p&gt;

&lt;p&gt;Well, I'll talk more about knowledge hoarding as a business "strategy" some other time (especially if you remind me).  But for now, suffice it to say that I both want to backfill myself on strategy and also to create an internet where engineers have a much more significant role in marketing to other engineers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://daedtech.com/wp-content/uploads/2018/02/Erik-bonked-on-head-with-money-e1519794676512.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1m0YsT4l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://daedtech.com/wp-content/uploads/2018/02/Erik-bonked-on-head-with-money-e1519794676512.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we, as techies, learned a bit about marketing, as I suggest in &lt;a href="https://daedtech.com/book/"&gt;Developer Hegemony&lt;/a&gt;, the internet could become a less facepalm-y place.  Imagine a world where marketers didn't talk at you about DevOps culture.  Instead, engineers told you how they'd &lt;em&gt;personally&lt;/em&gt; used a tool to get better sleep following major rollouts.&lt;/p&gt;

&lt;h2&gt;Moneyball SEO, And the "Why Should You Care" Story&lt;/h2&gt;

&lt;p&gt;Now having hopefully established that I have plausible motivation and credentials, the focus shifts to you.  Why should you care about SEO or this series?&lt;/p&gt;

&lt;p&gt;Let's assume that you want to &lt;a href="https://daedtech.com/sales-101-for-freelance-devs-avoiding-the-pain-youre-about-to-experience/"&gt;build lead flow for your business&lt;/a&gt;.  Or you will at some point, anyway.  Or heck, maybe you just want more site visitors.&lt;/p&gt;

&lt;p&gt;You could do this the labor-intensive way that I did, with DaedTech.  Just write an average of 2 blog posts per week for a decade, and viola!  Overnight success in just 10 years.&lt;/p&gt;

&lt;p&gt;Oh, and by the way, with the followers approach, the visitors go away if you ever stop producing content.  So you have to keep going forever.&lt;/p&gt;

&lt;p&gt;What I did was to create effectively an editorial column.  And an editorial column has such a labor intensive content-to-traffic ratio that a term has emerged to express it.  It's the "spike of hope and flatline of nope" described &lt;a href="https://ahrefs.com/blog/why-seo-is-important/"&gt;in section 2 of this post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Publish a post, earn a few hundred visits each of the first few days.  Then the visits trail off to zero after maybe a week.  If you want to maintain hundreds of visitors (and potential leads) to your site, you then have to publish every few days.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://daedtech.com/wp-content/uploads/2013/04/MessedUpGraph-e1573568261195.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tQNxXK-w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://daedtech.com/wp-content/uploads/2013/04/MessedUpGraph-e1573568261195.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Having the founder of a business blog every few days as a primary lead driver isn't sustainable for the overwhelming majority of founders.  Heck, I'm a written blabbermouth, and it hasn't been sustainable for &lt;em&gt;me &lt;/em&gt;with a &lt;em&gt;content business&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;So from a business perspective, understand that column blogging isn't viable.  But creating content discoverable by search engines &lt;em&gt;is&lt;/em&gt;.  That's because, when you do it right, the search engines bring you tens or hundreds of visitors per month, per article, without you having to do anything after hitting publish.&lt;/p&gt;

&lt;h2&gt;Avoiding the Lure of the Dark Side: SEO Reconsidered&lt;/h2&gt;

&lt;p&gt;As I typed that last sentence, I could feel the cringe through the monitor.&lt;/p&gt;

&lt;p&gt;"Get thousands of visitors without doing anything!"&lt;/p&gt;

&lt;p&gt;"That sounds suspiciously like SEO for scumbags, Erik, not non-scumbags."&lt;/p&gt;

&lt;p&gt;And, that's fair.  Generally promising outsized results for something that seems meager is squarely the province of the scumbag.  So let's look at this through another lens.&lt;/p&gt;

&lt;p&gt;Is &lt;a href="https://stackoverflow.com/users/22656/jon-skeet"&gt;Jon Skeet&lt;/a&gt; a scumbag?&lt;/p&gt;

&lt;p&gt;If you're even passingly familiar with him, you already know that the answer is, "absolutely, categorically not."&lt;/p&gt;

&lt;p&gt;He hangs around on Stack Overflow, answering people's questions, and his evergreen efforts have earned him a mind-blowing 330 million views of his content.  That means that, on average, every software engineer in the world has read his stuff 16.5 times, and presumably some of those folks have wandered down his marketing funnel and purchased his books.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://daedtech.com/wp-content/uploads/2021/05/JonSkeet.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XrNipOYL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://daedtech.com/wp-content/uploads/2021/05/JonSkeet-e1620569203470.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yet, I don't think you'd find anyone in the world that would describe him as a scumbag.  That's clearly just a good dude that likes to help people.&lt;/p&gt;

&lt;p&gt;And &lt;em&gt;that's &lt;/em&gt;the model that we're going for with non-scumbag SEO.  We're basically answering people's questions, treating the internet and the search results as a giant Stack Exchange site.  Let Jon Skeet be the model for doing SEO as a non-scumbag.&lt;/p&gt;

&lt;h3&gt;Redefining what SEO Stands For&lt;/h3&gt;

&lt;p&gt;In fact, while we're at it, let's redefine the acronym altogether.  I'll get more into the history of SEO below, but for now, understand that the term stands for "search engine optimization."&lt;/p&gt;

&lt;p&gt;When you think about it, that's a fundamentally dispiriting term for something you're about to do to your content.  Like Jon Skeet, you create content to help people.  But then, unlike Jon Skeet, you do a bunch of alchemy and bullshit to it to "optimize" it for an algorithm, selling off its soul one keyword mention at a time.&lt;/p&gt;

&lt;p&gt;Is it any wonder that non-marketers routinely talk about "good content" and "SEO content" as two disjoint sets?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://daedtech.com/wp-content/uploads/2015/06/RobotProgramming.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T5g4wJTZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://daedtech.com/wp-content/uploads/2015/06/RobotProgramming.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Luckily, the kind of shenanigans that have worked over the last two decades to fleece you into reading trash content are becoming progressively less effective.  As the companies that own search engines learn a genuinely worrisome amount about you, individually and demographically, one silver lining is that they're much better at understanding what you think of content.  So accordingly, "say the word you want to rank for a bunch of times in the article" has ceased to work as a tactic to rank first for a keyword.&lt;/p&gt;

&lt;p&gt;Search engines' goals are, of course, to make advertising revenue.  And they do that like a television station.  They receive money for ads, and, apart from that, try to serve up the content that you makes you happy enough to tolerate the ads.&lt;/p&gt;

&lt;p&gt;They &lt;em&gt;want &lt;/em&gt;you to find the content helpful, not stuffed with keywords and assorted scams.  And they're getting really, really good at figuring out whether you find things helpful.  So good, in fact, that the easiest way to "game" the system these days is to write things that are &lt;em&gt;actually &lt;/em&gt;helpful.&lt;/p&gt;

&lt;p&gt;So I propose that we re-acronym SEO to "searcher experience optimization."&lt;/p&gt;

&lt;h3&gt;But What about Scumbags and Current State of the Art?&lt;/h3&gt;

&lt;p&gt;That last section might &lt;em&gt;sound &lt;/em&gt;nice, but does it work?  Aren't you going up against and probably losing to all of the scumbags if you play it honest?  Wouldn't this make you the equivalent of the one or two baseball players around the year 2000 &lt;em&gt;not &lt;/em&gt;taking steroids?&lt;/p&gt;

&lt;p&gt;Indeed, if you go looking for guides or courses on SEO, they'll generally take a form like this:&lt;/p&gt;

&lt;blockquote&gt;You obviously need to create the best content.  Alright, with that out of the way, here's where to stuff keywords, how to write clickbait titles, six AI tools you can use to generate content briefs, how to spam people and beg for backlinks, blah, blah, blah.&lt;/blockquote&gt;

&lt;p&gt;The SEO landscape is a mostly sea of tactics, absent any real strategy.  And it's been that way for a long, long time.  And content and SEO is perhaps the best example I can think of for &lt;a href="http://www.paulgraham.com/lesson.html?viewfullsite=1"&gt;what Paul Graham describes as hacking bad tests&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So against 20 years of incumbency and a sea of micro optimization tactics, how do you win?  Can you win?&lt;/p&gt;

&lt;p&gt;To make my case for how you can (and how we have), I need to explain the history of SEO and why scumbag tactics have so much incumbency.  This will also give you context for why veterans have so much trouble letting go of those tactics, and of looking at earning search traffic through a more strategic lens.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://daedtech.com/wp-content/uploads/2020/09/drowning-in-spam-e1600827601966.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AmCIqDIs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://daedtech.com/wp-content/uploads/2020/09/drowning-in-spam-e1600827601966.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You might also find this section interesting, since it'll explain why you have a subconscious reaction to things that you see on the internet that feel scummy, even though you can't really articulate why.  &lt;em&gt;"I don't know what the scheme is here, but it smells like some SEO bullshit."&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;What's the Scheme Hustlers and Value-Add Hustlers&lt;/h2&gt;

&lt;p&gt;Indulge me a brief aside to coin a couple of terms.  I promise that I will make this relevant.&lt;/p&gt;

&lt;p&gt;I've recently come to think of entrepreneurs fitting loosely into two buckets: "what's the scheme" hustlers and "value-add" hustlers.&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;
&lt;span&gt;&lt;strong&gt;Value-add hustlers&lt;/strong&gt;&lt;/span&gt; are entrepreneurs that look to establish an enterprise that helps people.  They're not necessarily &lt;a href="https://daedtech.com/the-flavors-of-technical-opportunists-missionaries-and-mercenaries/"&gt;missionary entrepreneurs&lt;/a&gt; nor are they necessarily altruists, but they do consider value creation as table stakes for business success.&lt;/li&gt;
    &lt;li&gt;
&lt;span&gt;&lt;strong&gt;What's the scheme hustlers&lt;/strong&gt;&lt;/span&gt; are entrepreneurs that view their customers as incidental, or as marks.  This person is essentially an insider trading tip come to life and employed as a cryptocurrency speculator.  Imagine them endlessly rubbing their hands together, looking around avariciously, and asking "so, what's the scheme?"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;"What's the scheme" hustlers have long dominated the SEO world.&lt;/p&gt;

&lt;p&gt;Early on they figured out that getting to the top of a google search for "best running shoes" would provide financial advantage.  So by God they would get to the top of that search, whether that meant creating a landing page that said "best running shoes" 15,000 times in a row or whether it meant taking a Google executive's child hostage.&lt;/p&gt;

&lt;p&gt;They'd do &lt;em&gt;anything&lt;/em&gt;.  As long as "anything" didn't involve creating legitimately valuable content, like polling the population and creating a detailed, even-handed evaluation of the best running shoes.  There's no &lt;em&gt;scheme &lt;/em&gt;in that -- it's a sucker's play.... sucker.&lt;/p&gt;

&lt;h2&gt;The History of SEO is A Scumbag-Heavy One&lt;/h2&gt;

&lt;p&gt;And that attitude -- readers as suckers -- has dominated the SEO world since there has been an SEO world.  To understand &lt;em&gt;just how thoroughly and what we're up against&lt;/em&gt;, let me walk you through a brief history of content over the last 20 years.&lt;/p&gt;

&lt;h3&gt;Early Days SEO: Keyword Stuffing&lt;/h3&gt;

&lt;p&gt;If I told you to build a search engine and rank relevant content, what would you do?  Don't think -- just answer.  I bet you'd think to count the number of times the search term appeared in a piece of content to determine relevance.&lt;/p&gt;

&lt;p&gt;And that's a good answer!&lt;/p&gt;

&lt;p&gt;It's perfectly rational, and it's something that the search engines did and relied heavily on in the early days.  The more you talk about a particular term, the more likely a reader will find it relevant, right?  Pretty straightforward.&lt;/p&gt;

&lt;p&gt;But now imagine you're a "what's the scheme" hustler.  What's your play here?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://daedtech.com/wp-content/uploads/2013/04/TickerMonitor.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UD6PzIVx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://daedtech.com/wp-content/uploads/2013/04/TickerMonitor.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yep, you guessed it.  Repeat the keyword over and over and over again.  Stuff it into the HTML meta a bunch of times while you're at it.&lt;/p&gt;

&lt;p&gt;The result of this for the hapless victims just googling "sunglasses?"  A bunch of articles that say "sunglasses" so many times you wonder if you're having a stroke as you read them.&lt;/p&gt;

&lt;p&gt;Even though this tactic has long since stopped working, you can occasionally find it even to this day.  I'm sure you've experienced this.&lt;/p&gt;

&lt;h3&gt;The Rise of Comment Spam&lt;/h3&gt;

&lt;p&gt;As you might imagine, search engine companies caught onto this scheme fairly quickly and sought to defeat it.  As part of this evolution in thinking, they began to place strong emphasis on what would become the main currency in the SEO world: the hyperlink.&lt;/p&gt;

&lt;p&gt;To this day, links are the absolute backbone of what's called "domain authority" in SEO circles.  The more people link to a piece of content, the more authoritative the search engine believes that content to be.  The more links to a root domain, the more credible the search engine finds a given article on that domain.&lt;/p&gt;

&lt;p&gt;Now imagine yourself rubbing your hands together, asking "what's the scheme" in the wake of the search engines shifting from focusing on keyword appearances to inbound links.  Do you create content so compelling that a lot of people rush to link to it.&lt;/p&gt;

&lt;p&gt;No, of course not.  That's what a sucker would do.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://daedtech.com/wp-content/uploads/2017/06/Big-Money.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aUy_JbBD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://daedtech.com/wp-content/uploads/2017/06/Big-Money-e1629767155725.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What you do instead is find every possible venue for user-generated content and absolutely carpet bomb those venues with links to your content.  I present you the rise of comment spam.&lt;/p&gt;

&lt;p&gt;Anyone who has been blogging for any length of time has experienced this phenomenon.  You've probably found yourself confused, too, if you didn't understand scumbag SEO.&lt;/p&gt;

&lt;p&gt;"I have like 7 readers -- why would anyone do this?"&lt;/p&gt;

&lt;p&gt;My friend, they aren't after your readers.  They're after you "link juice."&lt;/p&gt;

&lt;h3&gt;The Transition to Link Panhandling&lt;/h3&gt;

&lt;p&gt;As you might expect, the search engines (largely just Google at this point) developed a way to defeat this nonsense and start to curb the behavior.  They introduced the idea of "nofollow" links, which tell the search engine basically, "place no SEO value whatsoever on this link -- I cannot vouch for it."  CMS then started to automatically disavow links in user-generated content, like comments sections, social media platforms, and discussion forums.&lt;/p&gt;

&lt;p&gt;But rubbing his hands together gleefully, our SEO scumbag was undaunted.&lt;/p&gt;

&lt;p&gt;He rolled up his sleeves and got ready to send out roughly 800 trillion automated emails like this:&lt;a href="https://daedtech.com/wp-content/uploads/2021/08/LinkSpam.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TxNXQtJg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://daedtech.com/wp-content/uploads/2021/08/LinkSpam.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What do you think the odds are that "Stephen" actually read my post?  What do you think the odds are that Stephen is even named Stephen (or has a name at all)?&lt;/p&gt;

&lt;p&gt;Here's what's happening, suckers.  There are entire SaaS-based "link building" businesses.  They will scrape the internet for mentions of a keyword (like, say, "interview questions"), collate the sites found, rank them by domain authority, scrape the sites for a "webmaster-y" email address, and deploy an email like this to that address.  Some of them are even sophisticated enough to munge in personal data from cross-referenced sources.&lt;/p&gt;

&lt;p&gt;I get probably 20 emails like this a week across all of the properties that I own.  Because, like you and everyone else, I'm just another sucker to the SEO scumbags of the world.&lt;/p&gt;

&lt;h3&gt;Recipe Sites and Endless-Click Lists&lt;/h3&gt;

&lt;p&gt;It isn't just links, either.  Everything that sucks on the internet, you can usually trace back to some kind of SEO play.&lt;/p&gt;

&lt;p&gt;Want to understand a couple of the worst things on the internet?&lt;/p&gt;

&lt;p&gt;Look no further than "what's the scheme" SEO scumbags, rubbing their hands together and doing a couple of subtle things.  Specifically, they're going after a couple of lesser known so-called "ranking factors" than a site's "link profile."&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;Time on page&lt;/li&gt;
    &lt;li&gt;Page views and bounce rate&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The search engines, as I've mentioned, are eternally trying to figure out how to determine whether a reader likes a piece of content.  And given that most sites use Google Analytics, many people use Chrome, and the Google et. al are capable of capturing a creepy amount of data about you, it shouldn't surprise you to learn that they can ascertain how long you spend on a page, whether you slam the back button immediately, how many pages on a site you click through to, etc.&lt;/p&gt;

&lt;p&gt;(I think they might actually "officially" claim not to track this and that it doesn't affect rankings, but, I mean, come on.)&lt;/p&gt;

&lt;p&gt;Now, as a scumbag with this information, what would you do?&lt;/p&gt;

&lt;p&gt;Would you create content so compelling that people wanted to read it for 10 minutes, and then click all over the site to learn more about?  I mean, maybe if you're a &lt;em&gt;sucker&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://daedtech.com/wp-content/uploads/2020/08/charlatan-e1598414002948.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vY4I_zNR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://daedtech.com/wp-content/uploads/2020/08/charlatan-e1598414002948.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The real play is to have something like a recipe, but to bury it after 1,500 word walls of text, forcing people to scroll down and increase time on page.  The real play is to have a listicle, but where each item is listed on a separate page, so reading a single article makes the search engine think you've visited 30 pages on the site.&lt;/p&gt;

&lt;h2&gt;The Ultimate, Best-Ever, Pillar, Value-Bomb SEO Guide!&lt;/h2&gt;

&lt;p&gt;Believe it or not, there's plenty more I could walk you through.  But the post is getting long, and hopefully that's more than enough to paint the picture.  If you encounter it in internet content and it sucks, you probably have some "what's the scheme" SEO scumbag to thank for it.&lt;/p&gt;

&lt;p&gt;So, what's the alternative?  What does the "value-add," non-scumbag SEO do?  How do you compete in this world, rank, and earn traffic?&lt;/p&gt;

&lt;p&gt;Well, you're in luck, because today, for a limited time only, I'm going to give away something with a total value of &lt;del&gt;$799&lt;/del&gt; $1,499, for absolutely free.  That's right, it's my patented, value-bomb, ultimate guide, wash-your-car for you SEO model that you would normally find at the bottom of a testimonial-laden squeeze page.  But I'm just GIVING it away today.&lt;/p&gt;

&lt;p&gt;Here it is, the two-step, scientifically proven, so effective that Congress doesn't want you to have it, process to earn search engine traffic:&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;Figure out what questions people are asking the search engine and answer those questions.&lt;/li&gt;
    &lt;li&gt;Do it on a site that doesn't suck to visit.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you do that, you will earn traffic to your site without selling your soul.  And you will beat out the scumbags, to boot.  Like Jon Skeet on Stack Exchange, you will win by just being a good person and helping people.&lt;/p&gt;

&lt;h2&gt;Where We Go From Here: Taking the Internet Back&lt;/h2&gt;

&lt;p&gt;Now, I want you to understand that this is simple, but not easy.  There is, of course, nuance to both of my points above, in particular the idea of "figure out what questions people are asking" and "answer those questions."&lt;/p&gt;

&lt;p&gt;In fact, there's enough nuance that I'm creating an entire series of posts to follow in this series about it, which I'm outlining below.  But I wanted to write all of this as introduction to frame the nature of what I'm going to teach you here, and how it's not going to look like any other source purporting to teach SEO, at least that I'm aware of.&lt;/p&gt;

&lt;p&gt;I'm doing this to dump my bucket a little from the last 4 years of learning all about earning organic traffic and because I'm hoping that you find it helpful.  But this is also going to serve as a first draft of the training material that I'm going to use for the author-account strategists that will soon backfill me on content campaigning.&lt;/p&gt;

&lt;p&gt;So what you're getting here isn't random "tips and tricks" filler articles, but something that we've been using, refining, and winning with in the trenches for 4 years.  I hope you'll come along for the ride, and here is the outline for the remainder of the content, which I'll fill in with links as I publish.&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;a href="https://daedtech.com/game-theory-in-seo-building-a-ship-of-strategy-in-a-sea-of-tactics/"&gt;Chapter 2: Game Theory in SEO: Building A Ship of Strategy in a Sea of Tactics&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Chapter 3: Keywords: Understanding Searcher Psychology&lt;/li&gt;
    &lt;li&gt;Chapter 4: Keywords 101, Competition, Volume, and Segmentation&lt;/li&gt;
    &lt;li&gt;Chapter 5: Keywords 201, Tails, Association, and Topical Authority&lt;/li&gt;
    &lt;li&gt;Chapter 6: Keywords 301, Campaigns and Roadmaps&lt;/li&gt;
    &lt;li&gt;Chapter 7: The Phases of an Organic Campaign&lt;/li&gt;
    &lt;li&gt;Chapter 8: Reasoning about and Projecting Content ROI&lt;/li&gt;
    &lt;li&gt;Chapter 9: A Case Study (This I may keep private to &lt;a href="https://hit-subscribe.circle.so/join?invitation_token=44e8b495eb3efcef481ff5690ac4fe3799f75162-e3922abe-4d78-4fed-81ab-e28198624a04"&gt;our community&lt;/a&gt; or even our staff, TBD)&lt;/li&gt;
    &lt;li&gt;Chapter 10: Advanced Concepts Addendum&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title>วิธีการติดตั้งและใช้งาน Flux (GitOps tool) บน Amazon EKS - Part 1</title>
      <author>Pongsan Sayampol</author>
      <pubDate>Wed, 15 Sep 2021 06:28:37 +0000</pubDate>
      <link>https://dev.to/awscommunity-asean/flux-gitops-tool-amazon-eks-part-1-4gla</link>
      <guid>https://dev.to/awscommunity-asean/flux-gitops-tool-amazon-eks-part-1-4gla</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;GitOps[1] เป็นการนำ tool, best practice และประโยชน์ต่างๆจาก Git และ Continuous Integration/Continuous Delivery (CI/CD) ที่มีการใช้งานกันเป็น standard ใน Software Development Life Cycle (SDLC) มาใช้ร่วมกับ Infrastructure as Code (IaC) ในทางฝั่งของ IT operation เพื่อจัดการกับ infrastructure ต่างๆ&lt;/p&gt;

&lt;p&gt;Flux[2] เป็นหนึ่งใน GitOps tool ที่ได้รับได้ความนิยมในปัจจุบัน เพื่อใช้การใช้จัดการ resource ต่างๆบน Kubernetes cluster โดย version ที่ใช้ในปัจจุบันคือ Flux v2 ซึ่งตัว Flux operator ใน cluster จะทำการ pull ตัว declarative (IaC) จาก Git repository และทำการ reconcile Kubernetes resource ต่างๆให้ตรงตามนั้น&lt;/p&gt;

&lt;p&gt;ใน blog post นี้เราจะมาดูการติดตั้งและใช้งาน Flux ในเบื้องต้นกัน&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;ทำการติดตั้ง &lt;a href="https://eksctl.io/introduction/#installation"&gt;&lt;code&gt;eksctl&lt;/code&gt;&lt;/a&gt; และ &lt;a href="https://fluxcd.io/docs/installation/"&gt;&lt;code&gt;flux&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;สร้าง &lt;a href="https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token"&gt;&lt;code&gt;personal access token&lt;/code&gt;&lt;/a&gt; บน GitHub account&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-to-setup-flux-on-amazon-eks-cluster"&gt;
  &lt;/a&gt;
  How to setup Flux on Amazon EKS cluster
&lt;/h3&gt;

&lt;p&gt;eksctl[3] เป็นหนึ่งใน standard tool ที่ใช้ในการสร้างและจัดการ EKS cluster และตั้งแต่ vesion &lt;code&gt;0.53.0&lt;/code&gt; จะมี feature ในการติดตั้ง Flux รวมอยู่ด้วย&lt;/p&gt;

&lt;p&gt;ขั้นตอนในการสร้าง EKS cluster ใหม่และติดตั้ง Flux โดยอัตโนมัติ&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;export ค่าต่างๆที่จะต้องใช้ในขั้นตอนต่อๆไป&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export GITHUB_USERNAME=&amp;lt;your GitHub username&amp;gt;
export GITHUB_TOKEN=&amp;lt;your GitHub personal access token&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;สร้าง config file ด้วย code ด้านล่างนี้และเปลี่ยน &lt;code&gt;&amp;lt;GitHub username&amp;gt;&lt;/code&gt; เป็นชื่อ GitHub username ของเรา&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; eks-gitops-demo.yaml
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: eks-gitops-demo
  region: ap-southeast-1

managedNodeGroups:
  - name: ng-1
    instanceType: m5.large
    desiredCapacity: 1

gitops:
  flux:
    gitProvider: github
    flags:
      owner: "${GITHUB_USERNAME}"
      personal: "true"
      private: "true"
      repository: "eks-gitops-demo"
      branch: "master"
      namespace: "flux-system"
      path: "clusters/eks-gitops-demo"
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ทำการสร้าง EKS cluster โดยใช้คำสั่ง &lt;code&gt;eksctl create cluster --config-file eks-gitops-demo.yaml&lt;/code&gt; และรอจน cluster สร้างเสร็จ&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;เราสามารถเช็ค resource ต่างๆที่เกี่ยวกับ Flux โดยใช้คำสั่ง &lt;code&gt;kubectl --namespace flux-system get all&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K_8YwZvr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s6jtbd9fsfcd1rwi4bwz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K_8YwZvr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s6jtbd9fsfcd1rwi4bwz.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;และใน GitHub account ของเราจะมี repository ใหม่ที่ชื่อ &lt;code&gt;eks-gitops-demo&lt;/code&gt; ถูกสร้างขึ้นมาและมี commit ในส่วนของ Kubernetes manifest file ของ Flux component ต่างๆ&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Siz0kpKS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mhynb58ha1sold17px72.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Siz0kpKS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mhynb58ha1sold17px72.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;ถึงตรงนี้แสดงว่าขั้นตอนการสร้าง EKS cluster ใหม่ที่มีการติดตั้ง Flux มาด้วยเป็นอันเสร็จสมบูรณ์แล้ว&lt;/p&gt;

&lt;p&gt;Note. สำหรับกรณีที่เป็น EKS cluster เดิมหรือต้องการติดตั้ง Flux แยกทีหลัง&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ในกรณีที่ cluster ที่ถูกสร้างด้วย eksctl เราสามารถติดตั้ง Flux โดยการใช้คำสั่ง &lt;a href="https://eksctl.io/usage/gitops-v2/"&gt;&lt;code&gt;eksctl enable flux&lt;/code&gt;&lt;/a&gt; ได้&lt;/li&gt;
&lt;li&gt;ในกรณีที่ไม่ได้ใช้ eksctl เราสามารถติดตั้ง Flux โดยการใช้ flux CLI และคำสั่ง &lt;a href="https://fluxcd.io/docs/installation/"&gt;&lt;code&gt;flux bootstrap&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-to-use-flux-basic-features"&gt;
  &lt;/a&gt;
  How to use Flux basic features
&lt;/h3&gt;

&lt;p&gt;ต่อมาเราจะมาดูการใช้งาน Flux แบบเบื้องต้นกัน&lt;/p&gt;

&lt;p&gt;ตัวอย่างแรกจะเป็นการใช้ Kubernetes manifest file ตามปกติ&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;เริ่มต้นจากการ clone GitHub repository ที่ Flux ได้สร้างขึ้นมา&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone git@github.com:${GITHUB_USERNAME}/eks-gitops-demo.git
cd eks-gitops-demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;หลังจากนั้นเราจะสร้าง Kubernetes manifest file สำหรับ &lt;code&gt;nginx:1.14.2&lt;/code&gt; deployment แล้วทำการ commit และ push ไปยัง GitHub&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir -p clusters/eks-gitops-demo/default/nginx

cat &amp;lt;&amp;lt; EOF &amp;gt; clusters/eks-gitops-demo/default/nginx/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80
EOF

git add clusters/eks-gitops-demo/default/nginx/deployment.yaml
git commit -m "Add Nginx deployment"
git push
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ตามค่า default config Flux จะ pull ข้อมูลจาก GitHub ทุกๆ 10 นาทีและทำการ reconcile Kubernetes resource แต่เราสามารถใช้คำสั่ง &lt;code&gt;flux reconcile source git flux-system&lt;/code&gt; เพื่อทำการ pull โดยทันทีได้&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OfUosAny--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wtob1udj0lzhomopaq3d.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OfUosAny--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wtob1udj0lzhomopaq3d.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;หลังจากนั้นเราสามารถเช็คได้ว่า Flux ทำการ apply change ต่างๆและมีการสร้าง Kubernetes deployment ขึ้นมา โดยใช้คำสั่ง &lt;code&gt;kubectl get deployment nginx-deployment&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Ab1Ho6f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xbusoxtmat7xu0bdq0ou.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Ab1Ho6f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xbusoxtmat7xu0bdq0ou.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;หลังจากนั้นลองทำการเปลี่ยนใน deployment manifest file &lt;code&gt;nginx:1.15.0&lt;/code&gt; และทำการ commit และ push ไปยัง GitHub อีกครั้งนึง&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sed -i '' 's/1.14.2/1.15.0/' clusters/eks-gitops-demo/default/nginx/deployment.yaml

git add clusters/eks-gitops-demo/default/nginx/deployment.yaml
git commit -m "Change Nginx image to 1.15.0"
git push
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;หลังจาก Flux ทำการ reconcile เสร็จ จะเห็นได้ว่า deployment มีการเปลี่ยนไปใช้ &lt;code&gt;nginx:1.15.0&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fHplhQZ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ra7rbztybg0rqm3mx8fc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fHplhQZ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ra7rbztybg0rqm3mx8fc.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;7.(Bonus) ถ้าลองลบ deployment manifest แล้วทำการ commit และ push ไปยัง GitHub หลังจาก Flux ทำการ reconcile เสร็จ จะเห็นได้ว่าตัว deployment ของ nginx จะถูกลบไปเช่นกัน&lt;/p&gt;

&lt;p&gt;อีกตัวอย่างนึงจะเป็นการใช้งาน Flux ร่วมกับ Helm&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;เริ่มต้นจากการสร้าง HelmRepository CRD ที่ชี้ไปยัง Helm Chart repository ในตัวอย่างนี้เราจะใช้ &lt;a href="https://prometheus-community.github.io/helm-charts"&gt;&lt;code&gt;prometheus-community&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir -p clusters/eks-gitops-demo/monitoring

cat &amp;lt;&amp;lt; EOF &amp;gt; clusters/eks-gitops-demo/monitoring/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
EOF
---
cat &amp;lt;&amp;lt; EOF &amp;gt; clusters/eks-gitops-demo/monitoring/prometheus-community.yaml
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: monitoring
spec:
  url: https://prometheus-community.github.io/helm-charts
  interval: 10m
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;หลังจากนั้นทำการสร้าง HelmRelease CRD สำหรับที่จะให้ Flux deploy โดยใช้ Chart ที่ชื่อ &lt;code&gt;kube-prometheus-stack&lt;/code&gt; หลังจากนั้นทำการ commit และ push ไปยัง GitHub&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir -p clusters/eks-gitops-demo/monitoring

cat &amp;lt;&amp;lt; EOF &amp;gt; clusters/eks-gitops-demo/monitoring/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
EOF

cat &amp;lt;&amp;lt; EOF &amp;gt; clusters/eks-gitops-demo/monitoring/kube-prometheus-stack.yaml
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  releaseName: kube-prometheus-stack
  interval: 10m
  chart:
    spec:
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: monitoring
EOF

git add clusters/eks-gitops-demo/monitoring/*
git commit -m "Add Prometheus with Helm"
git push
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;หลักจากนั้นใช้คำสั่ง &lt;code&gt;flux reconcile source git flux-system&lt;/code&gt; เพื่อ pull change จาก GitHub และเนื่องจากใน HelmRelease CRD เราตั้ง interval ในการ reconcile เป็นทุกๆ 10 นาที เราสามารถใช้คำสั่ง &lt;code&gt;flux --namespace monitoring reconcile helmrelease kube-prometheus-stack&lt;/code&gt; เพื่อให้ reconcile ทันทีได้เช่นกัน&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x48IyWzb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bpaokz1a1zb0b4iv74uh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x48IyWzb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bpaokz1a1zb0b4iv74uh.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;หลักจาก reconcile เสร็จสิ้น เราสามารถเช็คได้ว่า resource ต่างๆสำหรับ Prometheus ได้มีการติดตั้งใน cluster อย่างถูกต้องโดย Helm Chart ผ่าน Flux&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SU_zA0rX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hur9rqc565v8oxi7n616.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SU_zA0rX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hur9rqc565v8oxi7n616.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;GitOps เป็นการนำเทคนิคและการใช้งาน Git, CI/CD และ IaC มาประกอบกันเพื่อให้เราสามารถจัดการ infrastructure ได้อย่างมีประสิทธิภาพและลดความผิดพลาดที่อาจจะเกิดขึ้นจาก manual process&lt;/p&gt;

&lt;p&gt;Flux เป็น tool ที่ช่วยให้เราสามารถ implement GitOps บน Kubernetes ได้อย่างสะดวกยิ่งขึ้น ซึ่งใน blog post นี้เราได้เห็นวิธีการติดตั้งบน Amazon EKS ผ่าน eksctl&lt;/p&gt;

&lt;p&gt;หลังจากนั้นเราได้เห็นตัวอย่างวิธีการติดใช้งาน Flux ในเบื้องต้น และใน part ที่ 2 เราจะมาดูตัวอย่างและ feature อื่นๆของ Flux กัน&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h3&gt;

&lt;p&gt;[1] &lt;a href="https://www.gitops.tech/#what-is-gitops"&gt;https://www.gitops.tech/#what-is-gitops&lt;/a&gt;&lt;br&gt;
[2] &lt;a href="https://fluxcd.io/"&gt;https://fluxcd.io/&lt;/a&gt;&lt;br&gt;
[3] &lt;a href="https://eksctl.io/"&gt;https://eksctl.io/&lt;/a&gt;&lt;br&gt;
[4] &lt;a href="https://helm.sh/"&gt;https://helm.sh/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>flux</category>
      <category>gitops</category>
      <category>eks</category>
      <category>aws</category>
    </item>
    <item>
      <title>1. Introduction to ReactJS and Why we should use it</title>
      <author>Pawel</author>
      <pubDate>Wed, 15 Sep 2021 06:26:52 +0000</pubDate>
      <link>https://dev.to/pb/1-introduction-to-reactjs-and-why-we-should-use-it-5e8a</link>
      <guid>https://dev.to/pb/1-introduction-to-reactjs-and-why-we-should-use-it-5e8a</guid>
      <description>&lt;p&gt;First of all thanks everyone for showing your support and subscribing to the series. I appreciate you all.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If in case you haven't read the previous post, I encourage you to read it. I'll be very helpful for you.&lt;/em&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r3sfWXRc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--52cZyHb1--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/618537/3cd782cd-1a3a-4926-9eb6-1e55fba23a61.jpg" alt="pb"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pb/reactified-learn-reactjs-the-simple-way-a2o" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;REACTIFIED: Learn ReactJS the simple way&lt;/h2&gt;
      &lt;h3&gt;Pawel ・ Sep 10 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-react"&gt;
  &lt;/a&gt;
  What is React?
&lt;/h2&gt;

&lt;p&gt;Definition on ReactJS official site:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A JavaScript library for building user interfaces&lt;/p&gt;
&lt;/blockquote&gt;



&lt;h3&gt;
  &lt;a href="#what-is-a-library"&gt;
  &lt;/a&gt;
  What is a Library?
&lt;/h3&gt;

&lt;p&gt;A JavaScript Library is a collection of pre-written JavaScript code which you can use to develop JavaScript based applications faster with scalable and maintainble code.&lt;/p&gt;

&lt;p&gt;Whenever we install an npm package what do they contains? &lt;br&gt;
They contains these pre-written JavaScript Code.&lt;/p&gt;

&lt;p&gt;The Typical Structure of any npm package includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Number of Pre-Written JavaScript files (which together make the package or a library).&lt;/li&gt;
&lt;li&gt;A package.json file (in order to incorporate other npm packages as dependancies in order to work smoothly).&lt;/li&gt;
&lt;li&gt;Readme.md File &lt;/li&gt;
&lt;li&gt;And a LICENSE file&lt;/li&gt;
&lt;/ul&gt;



&lt;h2&gt;
  &lt;a href="#what-is-user-interfaces"&gt;
  &lt;/a&gt;
  What is User Interfaces?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;A User Interface is the point at which human users interact with a website or application.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So in the simplest way:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;React is can be defined as:&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A collection of files with pre-written JavaScript Code which forms a Library Called ReactJS which we can use to build interactive User Interfaces.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#why-do-need-react-what-are-the-benefits-of-using-it"&gt;
  &lt;/a&gt;
  Why do need React? What are the benefits of using it?
&lt;/h2&gt;

&lt;p&gt;Here are some of its benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It's &lt;strong&gt;Flexible&lt;/strong&gt; which means you can use it on a vast variety of platforms to build interactive and beautiful user interfaces. You can use React to build WebApps, Mobile Apps (using React Native), Static Sites using (Gatsby)and Do Server Side Rendering using Next.js&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;as they says&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Learn React Once and Write Everywhere" - Reactjs.org&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It's &lt;strong&gt;Fast and Scalabe&lt;/strong&gt; which means you can do more with less efforts.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It's &lt;strong&gt;modular&lt;/strong&gt; which means you gonna have a nice developer experience while writing the code in React.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Huge Community&lt;/strong&gt; which means 100s of thousands of heads to   answer your query (In most cases the problems you came across has been already faced and solved by someone on the internet). &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So this was the introduction of ReactJS and why we should use it. We'll be diving much deeper into React in the coming blogposts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#useful-tips"&gt;
  &lt;/a&gt;
  Useful Tips:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Visualize what you read. In order make concepts clear and to make sure you never forget them you have transfer the information into your subconscious brain and one way of doing it is visualizing the things what you read.&lt;/li&gt;
&lt;li&gt;When I say ReactJS is a library formed by a collection of files having JavaScript Code in it, visualize it as a bunch of  files in a library which only has JavaScript Code in it and nothing else and all of them are working together with just one goal i.e. to build interactive User Interfaces for all the platforms. I know this may sound silly to you at this time but the long term effect of this is that you'll never gonna forget what is a JavaScript library or any library in general.&lt;/li&gt;
&lt;li&gt;With time to time I'll be giving you these tips in order to make sure you never forget the concepts.&lt;/li&gt;
&lt;li&gt;Don't worry we'll be using scientifically proven methods only to make learning more productive and enjoying without getting overwhelmed by the content.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  Note:
&lt;/h3&gt;

&lt;p&gt;In order to get notified for the new post in the series follow me on Twitter &lt;a href="https://twitter.com/pawelsb"&gt;@pawelsb&lt;/a&gt;. I'll be sharing more useful resources about ReactJS as well as other resources which will help you become more productive, knowledgeable and an overall better developer.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;THANKS FOR INVESTING YOUR TIME READING THIS POST😊 I APPRECIATE IT ✨&lt;/em&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>40+ JavaScript Projects for Beginners – Easy Ideas to Get Started Coding JS</title>
      <author>JavaScript Hacker</author>
      <pubDate>Wed, 15 Sep 2021 06:24:03 +0000</pubDate>
      <link>https://dev.to/codinghacker/40-javascript-projects-for-beginners-40i4</link>
      <guid>https://dev.to/codinghacker/40-javascript-projects-for-beginners-40i4</guid>
      <description>&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;The best way to learn a new programming language is to build projects.

I have created a list of 40 beginner friendly project tutorials in Vanilla JavaScript, React, and TypeScript.

My advice for tutorials would be to watch the video, build the project, break it apart and rebuild it your own way. Experiment with adding new features or using different methods.

That will test if you have really learned the concepts or not.

You can click on any of the projects listed below to jump to that section of the article.

&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/40-javascript-projects-for-beginners/&amp;amp;ved=2ahUKEwiB9tj0rPjyAhUMX30KHZQ5CG0QFnoECAgQAQ&amp;amp;usg=AOvVaw26RDQjHugdhbATVS83LI83"&gt;40 JavaScript Projects for Beginners – Easy Ideas to Get Started Coding JS

&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>#update My experience in creating Css with Pubg UC online store
</title>
      <author>Saudi UC</author>
      <pubDate>Wed, 15 Sep 2021 06:13:33 +0000</pubDate>
      <link>https://dev.to/saudiuc/update-my-experience-in-creating-css-with-pubg-uc-online-store-1gi2</link>
      <guid>https://dev.to/saudiuc/update-my-experience-in-creating-css-with-pubg-uc-online-store-1gi2</guid>
      <description>&lt;p&gt;Update My Pubg UC sell store. All the website’s images were designed by photoshop. The web page was built by CSS code.&lt;br&gt;
&lt;a href="https://saudi-uc.com/"&gt;متجر شدات&lt;/a&gt;&lt;br&gt;
What do you think about it? If you have any further recommendations, please let me know.&lt;/p&gt;

&lt;p&gt;Site Sections :&lt;br&gt;
&lt;a href="https://saudi-uc.com/%D8%B4%D8%AF%D8%A7%D8%AA-%D8%A8%D8%A8%D8%AC%D9%8A/c1676374952"&gt;شدات ببجي&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;thank u&lt;/p&gt;

</description>
      <category>css</category>
      <category>design</category>
    </item>
    <item>
      <title>🚀#3 JavaScript Project Series.</title>
      <author>Chetan Atrawalkar👉CA.</author>
      <pubDate>Wed, 15 Sep 2021 05:55:52 +0000</pubDate>
      <link>https://dev.to/chetan_atrawalkar/3-javascript-project-series-3gfj</link>
      <guid>https://dev.to/chetan_atrawalkar/3-javascript-project-series-3gfj</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hello-coders"&gt;
  &lt;/a&gt;
  Hello Coders!👋
&lt;/h2&gt;

&lt;p&gt;Welcome back to the Javascript project series. Today i'm share another amazing project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#save-this-series-for-upcoming-projects"&gt;
  &lt;/a&gt;
  💟 Save This Series For Upcoming Projects.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WmVSNJzk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uwe6tfibcylath1kobw6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WmVSNJzk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uwe6tfibcylath1kobw6.gif" alt="thumbs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;💥 Let's get started....🚀&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-animated-menu-indicator-using-javascript"&gt;
  &lt;/a&gt;
  📜 3. Animated Menu Indicator using JavaScript.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;In this, we're going to see how you can create an animated Menu Navbar using JavaScript. Navbar is an essential part of any website. It gives the user a functionality to navigate through the website efficiently and easily. It guides the user accordingly so the user will not get lost or loose interest. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#heres-a-preview"&gt;
  &lt;/a&gt;
  Here's a preview:-
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A6JkzwnJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og9v86aa2thqnxosbiu2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A6JkzwnJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og9v86aa2thqnxosbiu2.jpg" alt="view"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#codepen-link-for-result"&gt;
  &lt;/a&gt;
  🔸 &lt;a href="https://codepen.io/codev_land/pen/LYLjrpM"&gt;CodePen Link For Result&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;That being said, let us get started.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Step - 1:-&lt;/strong&gt; Like always, create 3 files - Index.html, Style.css and Script.js.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Step - 2:-&lt;/strong&gt; Copy the below HTML code and paste it into your code editor.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#indexhtml"&gt;
  &lt;/a&gt;
  Index.html
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Animated menu indicator&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nav"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nav-item is-active"&lt;/span&gt; &lt;span class="na"&gt;active-color=&lt;/span&gt;&lt;span class="s"&gt;"orange"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Home&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nav-item"&lt;/span&gt; &lt;span class="na"&gt;active-color=&lt;/span&gt;&lt;span class="s"&gt;"green"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;About&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nav-item"&lt;/span&gt; &lt;span class="na"&gt;active-color=&lt;/span&gt;&lt;span class="s"&gt;"blue"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Project&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nav-item"&lt;/span&gt; &lt;span class="na"&gt;active-color=&lt;/span&gt;&lt;span class="s"&gt;"red"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Blog&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nav-item"&lt;/span&gt; &lt;span class="na"&gt;active-color=&lt;/span&gt;&lt;span class="s"&gt;"rebeccapurple"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Contact&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nav-indicator"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script  &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"script.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Step - 3:-&lt;/strong&gt; Below is the CSS code for styling.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#stylecss"&gt;
  &lt;/a&gt;
  Style.css
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url("https://fonts.googleapis.com/css?family=DM+Sans:500,700&amp;amp;display=swap")&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f6f7fc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.nav&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;159&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;162&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;177&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.nav-item&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#83818c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.3s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;6px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"DM Sans"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.nav-item&lt;/span&gt;&lt;span class="nd"&gt;:before&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-6px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#dfe2ea&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.3s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.nav-item&lt;/span&gt;&lt;span class="nd"&gt;:not&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;.is-active&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nd"&gt;:hover:before&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.nav-item&lt;/span&gt;&lt;span class="nd"&gt;:not&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;.is-active&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#333&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.nav-indicator&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.4s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Step - 4:-&lt;/strong&gt; Below is the JavaScript code which is the most important part in this Animation. Here, we're creating two constants - &lt;strong&gt;indicator and items&lt;/strong&gt;. &lt;strong&gt;&lt;code&gt;"indicator"&lt;/code&gt;&lt;/strong&gt; will store the information of the class &lt;strong&gt;&lt;code&gt;".nav-indicator"&lt;/code&gt;&lt;/strong&gt;, that is the line below. And &lt;strong&gt;&lt;code&gt;"items"&lt;/code&gt;&lt;/strong&gt; will store the information of the class &lt;strong&gt;&lt;code&gt;".nav-items"&lt;/code&gt;&lt;/strong&gt;, that is the menu-items. &lt;/li&gt;
&lt;li&gt;Next define function &lt;strong&gt;&lt;code&gt;handleIndicator&lt;/code&gt;&lt;/strong&gt; that's check the which item is clicked by used as per click perform particular task.&lt;/li&gt;
&lt;li&gt;In this function used &lt;strong&gt;&lt;code&gt;forEach&lt;/code&gt;&lt;/strong&gt; loop is an Array method that executes a custom callback function on each item in an array.&lt;/li&gt;
&lt;li&gt;Read the code and you will understand how things really works.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scriptjs"&gt;
  &lt;/a&gt;
  Script.js
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;indicator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.nav-indicator&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.nav-item&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleIndicator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;is-active&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;style&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;indicator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetWidth&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;indicator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetLeft&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;indicator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;active-color&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;is-active&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;active-color&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleIndicator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;);});&lt;/span&gt;
  &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;is-active&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;handleIndicator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's it. You're done.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#save-this-series-for-upcoming-projects"&gt;
  &lt;/a&gt;
  💟 Save This Series For Upcoming Projects.
&lt;/h3&gt;

&lt;p&gt;🛑 And If you need more content like this follow &lt;strong&gt;@codev_land&lt;/strong&gt; on instagram.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keep-claim-and-just-code-it"&gt;
  &lt;/a&gt;
  Keep Claim And Just Code It 😎
&lt;/h3&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
