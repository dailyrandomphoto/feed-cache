<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Building An Automated Screenshot Service On Netlify In ~140 Lines Of Code</title>
      <author>Arghya Ghosh</author>
      <pubDate>Sat, 31 Jul 2021 11:37:34 +0000</pubDate>
      <link>https://dev.to/uiuxarghya/building-an-automated-screenshot-service-on-netlify-in-140-lines-of-code-3ik1</link>
      <guid>https://dev.to/uiuxarghya/building-an-automated-screenshot-service-on-netlify-in-140-lines-of-code-3ik1</guid>
      <description>&lt;p&gt;This blog post is adapted from: &lt;a href="https://www.zachleat.com/web/screenshots/"&gt;https://www.zachleat.com/web/screenshots/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The idea is pretty simple: a service that will accept a URL as input and return a static screenshot image of that URL to embed and use on other web sites. The &lt;a href="https://github.com/11ty/api-screenshot/blob/d7fd9c74389e14601a3a3a3a45805a1e59d9de51/functions/screenshot.js"&gt;code is pretty simple too, about 140 lines&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Having a service for these images is important as the Eleventy docs use a lot of visuals from Built With Eleventy sites around the web—it wouldn’t be feasible to generate these manually.&lt;/p&gt;

&lt;p&gt;The end result looks something like this (&lt;a href="https://www.11ty.dev/docs/"&gt;11ty.dev/docs&lt;/a&gt; is shown):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O1RV4ws5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627726826737/zbgX2MaQ_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O1RV4ws5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627726826737/zbgX2MaQ_.png" alt="Screenshot of 11ty.dev"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And the URL for the above image is &lt;code&gt;https://v1.screenshot.11ty.dev/https%3A%2F%2Fwww.11ty.dev%2Fdocs%2F/small/9:16/bigger/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can see this &lt;a href="https://www.11ty.dev/#built-with-eleventy"&gt;live&lt;/a&gt; in &lt;a href="https://www.11ty.dev/docs/starter/"&gt;production&lt;/a&gt; now in a &lt;a href="https://www.11ty.dev/docs/tutorials/"&gt;few&lt;/a&gt; different &lt;a href="https://www.11ty.dev/authors/smthdotuk/"&gt;places&lt;/a&gt; on the Eleventy docs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#decisions-decisions"&gt;
  &lt;/a&gt;
  DECISIONS, DECISIONS
&lt;/h2&gt;

&lt;p&gt;I think there were a few architecture decisions that went into this service that are worth documenting, so here goes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;This is now a separate repo and project from the main 11ty.dev site. This is important as it decouples our On-demand Builder cache for this service away from the main web site, which deploys with a much higher frequency.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This is best used with lower priority images, things that live further down the page (dare I say, below the imaginary fold). Works great with &lt;code&gt;&amp;lt;img loading="lazy"&amp;gt;&lt;/code&gt;. ⚠️ ABSOLUTELY not for use with HERO IMAGES or on something that might be eligible for your LCP!!! (&lt;em&gt;I warned you with three exclamation marks.&lt;/em&gt;)&lt;br&gt;
-Best paired with preconnect: &lt;code&gt;&amp;lt;link href="https://v1.screenshot.11ty.dev" rel="preconnect" crossorigin&amp;gt;&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sizing options are limited to improve cache hits. Currently we only offer 11 different image combinations for each URL. This will likely increase over time as we add additional options, like sizes or aspect ratios or maybe even a no-JavaScript mode. We want cache hits to make these things fast and reduce the request count to external web sites.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I added an Open Graph size (you know, for those cards that show up on social media posts). I’m currently playing around with this as a way to do super-lazy custom Open Graph images for every page. Each page can have an Open Graph image that’s a screenshot of itself!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;One negative of generating these in a serverless function is that image formats are a bit harder to manage. This means that only JPEG is supported for now. Especially with the &lt;a href="https://www.npmjs.com/package/chrome-aws-lambda"&gt;version of Puppeteer that barely fits in a serverless bundle&lt;/a&gt;, I’m still trying to figure out how to bundle it with &lt;code&gt;sharp&lt;/code&gt; and &lt;code&gt;eleventy-img&lt;/code&gt; too.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The entire thing is versioned using &lt;a href="https://docs.netlify.com/domains-https/custom-domains/multiple-domains/#branch-subdomains"&gt;Netlify Branch subdomains&lt;/a&gt;: e.g. &lt;code&gt;https://v1.screenshot.11ty.dev&lt;/code&gt;. If I want to change the API later I’ll bump it to &lt;code&gt;v2&lt;/code&gt; and just leave the old branch as-is. Of particular note is that &lt;a href="https://screenshot.11ty.dev"&gt;https://screenshot.11ty.dev&lt;/a&gt; (without the version) redirects via an HTTP 301 to &lt;code&gt;v1&lt;/code&gt; and will do so permanently. Don’t rely on this redirect (for performance reasons).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update (July 30, 2021): The other issue I noticed with using Puppeteer in a Lambda is that emoji are not available to the rendered content. So if a site is using Emoji they do not render. It looks like &lt;a href="https://jurgen.si/posts/lambda-headless-chrome-emojis/"&gt;Matic Jurglič may have a workaround to solve this&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#what-happens-if-a-site-is-super-slow-or-is-currently-down"&gt;
  &lt;/a&gt;
  WHAT HAPPENS IF A SITE IS SUPER SLOW OR IS CURRENTLY DOWN?
&lt;/h2&gt;

&lt;p&gt;Netlify Functions have a 10 second execution limit. If the site doesn’t render in 10 seconds, we show a fallback image by default. Currently this is a low-contrast 11ty logo using the same image size as the requested screenshot (via SVG &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; attributes).&lt;/p&gt;

&lt;p&gt;We don’t use a HTTP 500 status code on errors. In Firefox, the fallback image didn’t render when an error code was used. Because we aren’t using a HTTP 500 status code, the On-demand Builder will cache the fallback image for this request. This is good to prevent a bunch of re-requests to slow sites that don’t make the cutoff (or have a different error) but also means if a request had an outlier response time then the fallback image will continue to be used until the On-demand Builder cache is invalidated with a new build.&lt;/p&gt;

&lt;p&gt;We include the real error message in a custom &lt;code&gt;x-error-message&lt;/code&gt; HTTP Header, if you want more insight into why a screenshot failed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#can-i-use-your-instance-for-my-site"&gt;
  &lt;/a&gt;
  CAN I USE YOUR INSTANCE FOR MY SITE?
&lt;/h2&gt;

&lt;p&gt;Um… I’m not sure yet. For now I’d recommend just self hosting it. You can click this button to do it:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://app.netlify.com/start/deploy?repository=https://github.com/11ty/api-screenshot"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gq_bfuxi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.netlify.com/img/deploy/button.svg" alt="Deploy to Netlify"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://github.com/11ty/api-screenshot/"&gt;full source code is available on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demos"&gt;
  &lt;/a&gt;
  DEMOS
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#small-375px-viewport-width"&gt;
  &lt;/a&gt;
  SMALL (375PX VIEWPORT WIDTH)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D1z4-xrv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627727425912/GKUg2cAfq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D1z4-xrv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627727425912/GKUg2cAfq.png" alt="Screenshot of 11ty.dev"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https://v1.screenshot.11ty.dev/https%3A%2F%2Fwww.11ty.dev%2Fdocs%2F/small/9:16/larger/&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#medium-650px-viewport-width"&gt;
  &lt;/a&gt;
  MEDIUM (650PX VIEWPORT WIDTH)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PMRXIIrF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627727491442/4PjrDbC51.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PMRXIIrF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627727491442/4PjrDbC51.png" alt="Screenshot of 11ty.dev"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https://v1.screenshot.11ty.dev/https%3A%2F%2Fwww.11ty.dev%2Fdocs%2F/medium/9:16/larger/&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#large-1024px-viewport-width"&gt;
  &lt;/a&gt;
  LARGE (1024PX VIEWPORT WIDTH)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aN1bL-W_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627727571195/2VuGV_GRH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aN1bL-W_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627727571195/2VuGV_GRH.png" alt="Screenshot of 11ty.dev"&gt;&lt;/a&gt;&lt;br&gt;
&lt;code&gt;https://v1.screenshot.11ty.dev/https%3A%2F%2Fwww.11ty.dev%2Fdocs%2F/large/1:1/larger/&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#open-graph-1200%C3%97630"&gt;
  &lt;/a&gt;
  OPEN GRAPH (1200×630)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Coxvzwjv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627727577959/PZI5fvsTP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Coxvzwjv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627727577959/PZI5fvsTP.png" alt="Screenshot of 11ty.dev"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https://v1.screenshot.11ty.dev/https%3A%2F%2Fwww.11ty.dev%2Fdocs%2F/opengraph/&lt;/code&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>netlify</category>
      <category>eleventy</category>
      <category>serverless</category>
    </item>
    <item>
      <title>My Story completing 1 year at an early stage startup (Part 1)</title>
      <author>Aashir Aamir Khan</author>
      <pubDate>Sat, 31 Jul 2021 11:33:51 +0000</pubDate>
      <link>https://dev.to/justaashir/my-story-completing-1-year-at-an-early-stage-startup-part-1-jb0</link>
      <guid>https://dev.to/justaashir/my-story-completing-1-year-at-an-early-stage-startup-part-1-jb0</guid>
      <description>&lt;p&gt;When you are just doing your daily work, and your eyes land on the created_date of the file and what looked like yesterday have been 6 months or more… 😳&lt;/p&gt;

&lt;p&gt;That’s how time flows at an exciting fast-forward workplace, fast enough that you don’t feel like feeling it but you still feel it.&lt;/p&gt;

&lt;p&gt;This post is all about me sharing how I started and now have completed 1 year at 🥝 Kiwify.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ebZvCvup--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7o7uenmthgs2c6fcp480.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ebZvCvup--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7o7uenmthgs2c6fcp480.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[August 2020]: So, I was just sitting around surfing the web around. Tailwind was my new love those days (We're married now 😂). I had completed my first internship where I learned VueJS on the job.&lt;/p&gt;

&lt;p&gt;I was looking for side hustle ideas, and trying out basic stuff like started a &lt;a href="https://twitter.com/remoteworkjar"&gt;remote job board&lt;/a&gt; (Dead now) with my friend.&lt;/p&gt;

&lt;p&gt;I was searching for jobs to post on my job board. This is how the lazy process looked like:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Go to Google&lt;/em&gt;: Search for "X Company Jobs" or "X Technology Jobs" and then handpick them.&lt;/p&gt;

&lt;p&gt;On that day, I searched for "TailwindCSS jobs" and found out an Upwork posting, and ohhhh man glad till this day that I clicked it. The title was something like "VueJS &amp;amp; TailwindCSS Developer needed to create dashboard screens"&lt;/p&gt;

&lt;p&gt;When I read the description, it was like the description was written for me and was calling me "Come, baby, Come!" &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_U6B_jP7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/694/0%2ApHlLpSVhqmv6kDfT.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_U6B_jP7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/694/0%2ApHlLpSVhqmv6kDfT.gif" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It was exactly what I wanted/had experience. It was quite basic work, like for 1--2 weeks maybe. as they were providing the Figma templates and TailwindUI.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Fun Fact: Another reason to apply for job was to get access to TailwindUI (even if I don't complete the project LMAO), as I was thinking about creating &lt;a href="https://tailwindcssuikit.com/"&gt;https://tailwindcssuikit.com/&lt;/a&gt; and didn't had budget to check out TailwindUI just for inspiration. It's $250 to get access&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What I only had to do was:&lt;br&gt;
→ Convert Figma to TailwindCSS &amp;amp; Vue&lt;/p&gt;

&lt;p&gt;All looked good, I was convinced that I really want this. So next step was to apply for it. Hahaha 😂 Most Interesting part.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#upwork-drama"&gt;
  &lt;/a&gt;
  Upwork Drama
&lt;/h2&gt;

&lt;p&gt;If you know Upwork, and how I knew Upwork was that they're quite strict with profile approval. You've to submit information, and it takes like 1--2 days, to allow you to bid on projects.&lt;/p&gt;

&lt;p&gt;So my first try was to find the client outside of Upwork, for example, reach out on Twitter and convince. But it's quite hard to find the right person without much info, So had no luck + The client was super underground with very little info online... (is now a superstar that people now recognize on the streets of Brazil)&lt;/p&gt;

&lt;p&gt;So, anyway. I sent the profile for approval and even if got approved the day after, the chances are that the job will be closed.&lt;/p&gt;

&lt;p&gt;Whhhhhhaaattt, It got approved after 5 mins.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yYdmWqCI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/960/0%2A-1HH6DuIAQv6Wnny.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yYdmWqCI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/960/0%2A-1HH6DuIAQv6Wnny.gif" alt="Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So what I did was to put my heart out to write the cover letter and answer three questions:&lt;/p&gt;

&lt;p&gt;→ Tell us about your previous project with Nuxt/Tailwind&lt;/p&gt;

&lt;p&gt;→ Share the project's link&lt;/p&gt;

&lt;p&gt;→ Why you're applying for this job&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;One interesting thing about me talking out my mind/heart, What I'm doing here, in this post too. I'll not try to refactor into better sentences and grammar e.t.c\&lt;br&gt;
I believe it makes my writing unique, cause it feels like someone is speaking to you and not proof-readed piece gone through revisions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I applied for the job..., and I got a reply back after 3 hours.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h_yvE-Ly--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/52/0%2AMniS3YcUgBtQntL1%3Fq%3D20" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h_yvE-Ly--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/52/0%2AMniS3YcUgBtQntL1%3Fq%3D20" alt="Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I had a nice chat, they also asked me if you'll be up for a full-time position too if we offer and hourly rates e.t.c and then gone for the day...&lt;/p&gt;

&lt;p&gt;Came back another day, gave me Figma, talked a bit, and started the contract 😂🚀 (Like WTF?)&lt;/p&gt;

&lt;p&gt;So my first goal was completed, I got access to TailwindUI. I was more than happy.&lt;/p&gt;

&lt;p&gt;I did the work, there were some small iterations but I was told it's good and the code will be reviewed (It was the first time, someone would review my code like critique it).&lt;/p&gt;

&lt;p&gt;Another Side of the Mega Drama: My Big Mistake&lt;/p&gt;

&lt;p&gt;As I was 16 years old, at that time (Now 17). I did a big mistake... I made an account in my name and when the contract was awarded → They asked for video call / ID Verification. Which I would not be able to verify.&lt;/p&gt;

&lt;p&gt;So we moved out of Upwork... (If I would've been at the client's place, I wouldn't be that calm about my behavior at that time... and wouldn't co-operate this much how I was co-operated too. It was all my learning phase..)&lt;/p&gt;

&lt;p&gt;One of my many mistakes&lt;/p&gt;

&lt;p&gt;Thinking anything as a jump-off didn't care about what they were doing. What I all did was to make wrong assumptions, and cared all about finishing the project / my win then their win / didn't tried to build the connection/trust.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Connection/Trust matters more than anything&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I repaired my mistakes later, that's why I'm this far... You can't be successful/happy being stubborn, always be learning / keep learning.&lt;/p&gt;

&lt;p&gt;So we shifted from Upwork → WhatsApp → Slack. I worked with so many amazing people who have built some amazing stuff, and have tens of years of experience. The thing I picked was, that I know nothing and that helped me to keep learning from these people.&lt;/p&gt;

&lt;p&gt;The next part of the story is about, how I built the connections, my love for my work, care about everything, and then picking up the role of Head of Product.&lt;/p&gt;

&lt;p&gt;Key Takeaways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Never ever make assumptions, without trying. (For example, If I would've decided Upwork would never approve me, or this job would've been filled. I would've never gotten it. What I did was that I applied to it, and kept all things at side)&lt;/li&gt;
&lt;li&gt;  Speak your heart out, be honest&lt;/li&gt;
&lt;li&gt;  Always learning, Ask for feedback. Keep improving. Realize early that the person you're talking to knows a lot more than you and how you can learn from them.&lt;/li&gt;
&lt;li&gt;  Age is just a number.&lt;/li&gt;
&lt;li&gt;  There's a big advantage getting early in the company, you get more opportunities and the best fast-forward hardcore space to learn in the first 6--7 months (But it can be hard if you like the calm normal day working).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading :) Follow me on &lt;a href="https://twitter.com/justaashir"&gt;Twitter&lt;/a&gt; to get update about Part 2&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thanks to &lt;a href="https://medium.com/@lucastomioka/1-the-principle-of-above-and-beyond-115d88ecf71e"&gt;Lucas&lt;/a&gt;, for motivating me to write again after this whole year.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
    </item>
    <item>
      <title>All About CSS - 01. Inline Styles, External Styles and much more.</title>
      <author>Modern Web</author>
      <pubDate>Sat, 31 Jul 2021 11:33:21 +0000</pubDate>
      <link>https://dev.to/kunaal438/all-about-css-01-inline-styles-external-styles-and-much-more-39ni</link>
      <guid>https://dev.to/kunaal438/all-about-css-01-inline-styles-external-styles-and-much-more-39ni</guid>
      <description>&lt;p&gt;Hello, welcome. From today, we'll start learning CSS. And in today's article you'll learn, What is CSS ? How to write CSS?&lt;/p&gt;

&lt;p&gt;If you haven't read previous web development articles on HTML. You can follow &lt;a href="https://dev.to/kunaal438/series/13784"&gt;this&lt;/a&gt; series to learn everything about HTML.&lt;/p&gt;

&lt;p&gt;So, without wasting more time let's start.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-css"&gt;
  &lt;/a&gt;
  What is CSS
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--of_IzJMM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8pdi4p9sxerkyp6gpw8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--of_IzJMM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8pdi4p9sxerkyp6gpw8.png" alt="image 1"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Well, CSS stands for Cascading Style sheets. This is a language (not programming language) which is used to style websites. And you can actually see power of CSS with this example.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ng4y2SLS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5j9zi6b13undo8ryfdgs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ng4y2SLS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5j9zi6b13undo8ryfdgs.png" alt="CSS 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CSS can make a website beautiful or make it terrible.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h1&gt;

&lt;p&gt;Let's see now, How can we start using CSS to make our websites beautiful. There are lot of ways in which you can style an element of web page. Let's see them in detail.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-inline-styles"&gt;
  &lt;/a&gt;
  1. Inline Styles
&lt;/h3&gt;

&lt;p&gt;Inline styles refer to when you style your elements individually. using &lt;code&gt;style&lt;/code&gt; attribute. Let's see an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"color: red;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Red colored Text&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"color: blue;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Blue colored Text&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"color: green;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Green colored Text&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;color is CSS property which is used to set text's color. We'll discuss about CSS properties in detail.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yXa6M0PG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8q7s2h4ffadzsfpxppei.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yXa6M0PG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8q7s2h4ffadzsfpxppei.PNG" alt="Capture-3"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-style-tag"&gt;
  &lt;/a&gt;
  2. Style Tag
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt;&lt;br&gt;
yes, you guessed right. This is an HTML tag which is used to style elements. This is a more efficient way to style element and use CSS. &lt;code&gt;style&lt;/code&gt; tag always use inside &lt;code&gt;head&lt;/code&gt; tag. Let's see an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Red colored Text&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Blue colored Text&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Green colored Text&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SsEuyAAB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41o5cqd8efhomiyucnot.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SsEuyAAB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41o5cqd8efhomiyucnot.PNG" alt="Capture-4"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;It'll be little confusing for you at first. But, let's understand it.&lt;/p&gt;

&lt;p&gt;Up until now, we just seeing how we can implement CSS style to HTML. But to start with &lt;code&gt;style&lt;/code&gt; tag or &lt;code&gt;external styles&lt;/code&gt;. We have to understand. How we write CSS.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#css-syntax"&gt;
  &lt;/a&gt;
  CSS Syntax
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;selector&lt;/code&gt; - selector means html elements like &lt;code&gt;p, div, h1&lt;/code&gt; or classes like &lt;code&gt;.para, .heading,  .container&lt;/code&gt; or can be ids. CSS selectors define which element(s) we want to style. There are lot's of Selectors and we'll cover them all in upcoming articles.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;property&lt;/code&gt;: Property is CSS property. It could be &lt;code&gt;color&lt;/code&gt;, &lt;code&gt;width, height&lt;/code&gt; or any Valid CSS property.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;value&lt;/code&gt; : And the last we have values. These are the valid values for CSS properties. For example, CSS property &lt;code&gt;color&lt;/code&gt; can have the value &lt;code&gt;red&lt;/code&gt; but cannot have the value &lt;code&gt;khfashfkashfkas&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And last thing. You have to make sure where is bracket is opening and closing, And you have to use colons&lt;code&gt;:&lt;/code&gt; and semi-colons &lt;code&gt;;&lt;/code&gt;. Yes this is hard to keep up with colons, brackets and all. But that's how programming is.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--05XlyUsE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pics.me.me/programming-student-forgets-semi-colon-in-code-semi-colon-im-about-to-45947507.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--05XlyUsE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pics.me.me/programming-student-forgets-semi-colon-in-code-semi-colon-im-about-to-45947507.png" alt="Semi colon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-external-style-sheets"&gt;
  &lt;/a&gt;
  3. External style sheets
&lt;/h3&gt;

&lt;p&gt;After "inline styles" and "style tag". We have another way to use CSS to style our elements. And in my opinion this is the best way.&lt;/p&gt;

&lt;p&gt;External Style sheets refers to when you have a separate CSS file for all your elements. And you link that external file to your HTML file.&lt;/p&gt;

&lt;p&gt;Let's see how this works.&lt;br&gt;
First you have to make a separate file with extension &lt;code&gt;.css&lt;/code&gt;. For example I made a file named &lt;code&gt;style.css&lt;/code&gt; in the same folder where i have &lt;code&gt;index.html&lt;/code&gt;. Then,&lt;/p&gt;
&lt;h6&gt;
  &lt;a href="#stylecss"&gt;
  &lt;/a&gt;
  Style.css
&lt;/h6&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h6&gt;
  &lt;a href="#indexhtml"&gt;
  &lt;/a&gt;
  index.html
&lt;/h6&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Red colored Text&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Blue colored Text&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Green colored Text&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SsEuyAAB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41o5cqd8efhomiyucnot.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SsEuyAAB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41o5cqd8efhomiyucnot.PNG" alt="Capture-4"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Things to notice here,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In &lt;code&gt;style.css&lt;/code&gt; file. We are using same CSS syntax but we are not using &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; tag because this tag is only for HTML files.&lt;/li&gt;
&lt;li&gt;To link our CSS file in &lt;code&gt;index.html&lt;/code&gt;, we are using &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tag. Link tag is used to link an external CSS file to HTML file. Link tag is self closing tag. And it has some attributes to keep in mind.

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;href&lt;/code&gt; - This specifies the file path.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;rel&lt;/code&gt; - stands for relation. Id defines what relation or what this file actually is for.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#selectors"&gt;
  &lt;/a&gt;
  Selectors
&lt;/h1&gt;

&lt;p&gt;In above examples, we used &lt;code&gt;p&lt;/code&gt; to select element. But if you notice it styled all our p elements. What if we want to style a specific element.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#classes"&gt;
  &lt;/a&gt;
  Classes
&lt;/h3&gt;

&lt;p&gt;Through classes you can select specific element in css. Let's see how. To use this, you have to use &lt;code&gt;class&lt;/code&gt; attribute.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"red"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Red colored Text&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Blue colored Text&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Green colored Text&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  Css
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.red&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JwpIXFvL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7wdghiu0585z3qftiylw.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JwpIXFvL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7wdghiu0585z3qftiylw.PNG" alt="Capture-5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see all the &lt;code&gt;p&lt;/code&gt; elements have color green except the first one which has a class &lt;code&gt;red&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Remember, to select any class in CSS you always have to type &lt;code&gt;.&lt;/code&gt; at the beginning. This tells the browser that this is a class selector.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ids"&gt;
  &lt;/a&gt;
  Ids
&lt;/h3&gt;

&lt;p&gt;Same as classes, we have id. The idea behind Id is, we can use same class for multiple elements but we should use a unique id for a single element. It's totally up to you that you want to use id for multiple element or not. But it is not a good practice.&lt;/p&gt;

&lt;p&gt;to create id we use &lt;code&gt;id&lt;/code&gt; attribute. And to select it in the CSS we type &lt;code&gt;#&lt;/code&gt; before the actual id name.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#indexhtml"&gt;
  &lt;/a&gt;
  index.html
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"red"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Red colored Text&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"blue"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Blue colored Text&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Green colored Text&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#stylecss"&gt;
  &lt;/a&gt;
  Style.css
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.red&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#blue&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c_d9v7eR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ameqrdf4b1fq7ql4213q.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c_d9v7eR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ameqrdf4b1fq7ql4213q.PNG" alt="Capture-3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's see some CSS properties.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;width&lt;/code&gt; : As name suggests, this specifies element's width. The value for this could be in &lt;code&gt;%&lt;/code&gt; or &lt;code&gt;px&lt;/code&gt;. Example - &lt;code&gt;width: 100px;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;height&lt;/code&gt; : This specifies element's height. Valid Values are same as &lt;code&gt;width&lt;/code&gt; properties.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;color&lt;/code&gt; : This specifies font/text color. Values could be in hexadecimal codes, or rgb mode, or you can common color name. Example - &lt;code&gt;color: rgb(0, 0, 0);&lt;/code&gt; or &lt;code&gt;color: black;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;font-size&lt;/code&gt; : This is used to change/set fonts size. Values can be in &lt;code&gt;px&lt;/code&gt;. Example - &lt;code&gt;font-size: 20px;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;background-color&lt;/code&gt; : This is used to set background color. Valid values are same as &lt;code&gt;color&lt;/code&gt; property.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;border&lt;/code&gt; : This is used to define border of the element. It is used like this.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;element&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt; &lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;border&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt; &lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;border&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;thickness&lt;/code&gt; : It is the thickness of the border. vale could be in px. Like &lt;code&gt;20px&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;border type&lt;/code&gt;: It specifies which type of border we want. Value could be &lt;code&gt;solid | dotted | dashed&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;border color&lt;/code&gt;: It is used to set border's color.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;element&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are lot of CSS property, that we'll discuss in future. But if you to know more. You should &lt;a href="https://www.w3schools.com/w3css/defaulT.asp"&gt;checkout this&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And I also have some articles which covers CSS advance topics so you read them too.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/css-transform-everything-you-need-for-a-good-developer-4obc"&gt;CSS Transform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/all-about-css-before-and-after-element-css-pseudo-elements-5g1n"&gt;CSS pusedo elements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/display-flex-complete-guide-on-css-flex-box-2021-5bi2"&gt;CSS Flex Box&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/media-query-everything-you-need-for-responsive-design-b8g"&gt;CSS Media Query&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/css-position-everything-you-need-for-good-developer-pfh"&gt;CSS Positions&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, that's sit for today. I hope you understood each and everything. If you have any doubt feel free to ask me in comments.&lt;/p&gt;

&lt;p&gt;If you like, you can subscribe my &lt;a href="https://www.youtube.com/c/modern_web?sub_confirmation=1"&gt;youtube channel&lt;/a&gt;.I create awesome web development tutorials. You can also watch tutorial on &lt;a href="https://www.youtube.com/watch?v=fOKgHld96mU"&gt;Youtube Clone&lt;/a&gt; by me.&lt;/p&gt;

&lt;p&gt;Thanks For reading.&lt;/p&gt;

</description>
      <category>css</category>
      <category>beginners</category>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Nextless.js - Next JS SaaS Boilerplate Template with Serverless backend</title>
      <author>Remi W.</author>
      <pubDate>Sat, 31 Jul 2021 11:29:54 +0000</pubDate>
      <link>https://dev.to/ixartz/nextless-js-next-js-saas-boilerplate-template-with-serverless-backend-34l5</link>
      <guid>https://dev.to/ixartz/nextless-js-next-js-saas-boilerplate-template-with-serverless-backend-34l5</guid>
      <description>&lt;p&gt;Recently, I was building my own SaaS product and it took me 5 months to build it from scratch, which was way more time than I expected at the beginning. It wasn't an easy journey, but I finally did it! 🎉&lt;/p&gt;

&lt;p&gt;Here is some of my learning to build a SaaS product in 2021.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#static-site-generator"&gt;
  &lt;/a&gt;
  Static Site Generator
&lt;/h2&gt;

&lt;p&gt;You heard it correctly, you can build a SaaS with Static Site Generator (SSG). I made this first SaaS in Next JS in static mode (next export). So, I can host the frontend on any static hosting: cheap, fast, highly scalable, easy to maintain, secure, etc. No need to have a dynamic server to serve your UI.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ui-components"&gt;
  &lt;/a&gt;
  UI components
&lt;/h2&gt;

&lt;p&gt;The frontend is fully built in React and TypeScript styled with Tailwind CSS. I made everything:&lt;/p&gt;

&lt;p&gt;🔥 Landing Page&lt;br&gt;
🔥 Authentication&lt;br&gt;
🔥 Dashboard&lt;br&gt;
🔥 Forms&lt;br&gt;
🔥 User Settings&lt;br&gt;
🔥 Table&lt;/p&gt;

&lt;p&gt;The components paradigm definitively makes your UI more modular and more reusable.&lt;/p&gt;

&lt;p&gt;You don't need to hire a UI/UX designer anymore for a micro-SaaS!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#developer-experience-build-for-developers"&gt;
  &lt;/a&gt;
  Developer Experience, build for developers
&lt;/h2&gt;

&lt;p&gt;As a passionate developer, I love using tools helping me to be a better engineer:&lt;/p&gt;

&lt;p&gt;❤️ Type checking with TypeScript&lt;br&gt;
❤️ Linter with ESLint&lt;br&gt;
❤️ Code formatter with Prettier&lt;br&gt;
❤️ Editor configuration for VSCode&lt;br&gt;
❤️ Local development and Debugging session&lt;/p&gt;

&lt;p&gt;Maybe one day, with GitHub Copilot, you don't need to code anymore ;) But, for now, Developer Experience is extremely important to write high-quality code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fully-serverless"&gt;
  &lt;/a&gt;
  Fully Serverless
&lt;/h2&gt;

&lt;p&gt;For this project, I was a solo developer, I need to get help from the right tools. And, Serverless is one of them. It really makes your code ready for production:&lt;/p&gt;

&lt;p&gt;🚀 One command deployment for backend&lt;br&gt;
🚀 Infrastructure as code, also deploy in one command&lt;br&gt;
🚀 Highly scalable with Serverless&lt;br&gt;
🚀 Low maintenance: no server maintenance, no Docker, no Kubernetes&lt;/p&gt;

&lt;p&gt;Because it's Serverless, I only pay based on my traffic.&lt;/p&gt;

&lt;p&gt;You don't need to hire a DevOps engineer anymore for a small SaaS!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stripe-integration"&gt;
  &lt;/a&gt;
  Stripe integration
&lt;/h2&gt;

&lt;p&gt;Like any SaaS product, you need to accept subscriptions. Accepting payment is difficult, it's even more difficult to build a subscription with recurring payment.&lt;/p&gt;

&lt;p&gt;Stripe is one of the best solutions you can find on the market. Even that, it wasn't an easy integration: webhooks, reading documentation, code example, asking questions, testing, etc.&lt;/p&gt;

&lt;p&gt;Here is the result, now my users can easily subscribe to any plan. They can also have access to a self-serve customer portal where they can update, upgrade, cancel, pause, resume, manage their plan.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nextlessjs-next-js-saas-starter"&gt;
  &lt;/a&gt;
  Nextless.js, Next JS SaaS starter
&lt;/h2&gt;

&lt;p&gt;It's only a showcase of what I've done recently. But, in a couple of weeks, I'll share more details on what I have learned by building my first SaaS product.&lt;/p&gt;

&lt;p&gt;Here is the link to my first SaaS: &lt;a href="https://postmage.com"&gt;PostMage for generating social image&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can find more information on the tech stack at &lt;a href="https://nextlessjs.com"&gt;Nextless.js SaaS Boilerplate&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nextlessjs.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oq_SrpAB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://nextlessjs.com/assets/images/hero-image.png" alt="Next JS SaaS Boilerplate Starter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have learned so much about Next JS, web development, frontend development, React, Tailwind CSS, TypeSript Serverless, Stripe, AWS, Infrastructure by building my first SaaS product. I'll definitely share my experience with tutorials, blog posts, etc. Stay tuned.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>nextjs</category>
    </item>
    <item>
      <title>How to create a popup menu in React that closes on clicking outside</title>
      <author>Kunal Bagaria</author>
      <pubDate>Sat, 31 Jul 2021 11:17:06 +0000</pubDate>
      <link>https://dev.to/kb24x7/how-to-create-a-popup-menu-in-react-34hh</link>
      <guid>https://dev.to/kb24x7/how-to-create-a-popup-menu-in-react-34hh</guid>
      <description>&lt;p&gt;So here you are, you want to make your popup in your website but you can't find a good tutorial on how to do that. Fear not, your friendly neighborhood react developer is here to save the day.&lt;/p&gt;

&lt;p&gt;First things first, we are gonna use an external npm module to make things easier.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;yarn add react-click-away-listener&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;or&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm i react-click-away-listener&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Now, on to the syntax:&lt;/p&gt;

&lt;p&gt;You can find additional docs here: &lt;a href="https://www.npmjs.com/package/react-click-away-listener/v/0.4.2"&gt;Link&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ClickAwayListener&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-click-away-listener&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;popup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setPopup&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* The option to open the popup */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setPopup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Click Me&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* The popup itself */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;popup&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ClickAwayListener&lt;/span&gt; &lt;span class="na"&gt;onClickAway&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setPopup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;popup&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Items of the Popup&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Items of the Popup&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Items of the Popup&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;ClickAwayListener&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;)}&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There you have it, that's basically how you can make a click away listening popup in react. I have excluded the styling portion for this article, but I'll be sure to write up on it soon.&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>react</category>
      <category>cra</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How does it long to Learn Python 	</title>
      <author>Fastrak Technology</author>
      <pubDate>Sat, 31 Jul 2021 10:09:34 +0000</pubDate>
      <link>https://dev.to/georgelucas3214/how-does-it-long-to-learn-python-44bc</link>
      <guid>https://dev.to/georgelucas3214/how-does-it-long-to-learn-python-44bc</guid>
      <description>&lt;p&gt;Overall, it can take somewhere in the range of five to 10 weeks to learn the essentials of Python programming, including object-situated programming, fundamental Python sentence structure, information types, circles, factors, and capacities. Eventually, however, how long it requires to learn Python relies upon how much experience you have with programming dialects, web improvement, information science, and other related fields. &lt;br&gt;
In a Python course like Brain stations, you'll learn center ideas like libraries, word references, and records, which are required information for an information centered job. The right preparing will give you a key comprehension of Python, which thus empowers you to learn more mind boggling AI and information science ideas pushing ahead. Learning Python, however, is generally simple. &lt;br&gt;
However it's thick, with a multitude of libraries to learn and encode through, Python's linguistic structure is significantly basic, and its ideas are moderately direct. The simple punctuation makes for fast learning and adds to a by and large intuitive and smoothed out coding experience. That truly facilitates the responsibility on your mind as you dive into greater and more intricate activities. &lt;br&gt;
Python is additionally an exceptionally adaptable language. It is utilized in a wide range of sorts of tasks and by numerous huge associations, including Facebook, NASA, Reddit, and Amazon. Enormous organizations love its force and versatility, so the language can be required to keep on ascending in popularity all throughout the planet. There's not really a tech work that you can't make a difference Python to, which will make you more important to any business or customer. &lt;br&gt;
Python's hearty cluster of libraries smoothest out the coding cycle monstrously since you can just info activity from the library into your code. Shockingly better, since Python is open source, the rundown of libraries and assets is continually developing. As Python gains much greater popularity, clients will discover more adaptable libraries that will assist them with writing code in less time and smooth out existing substance.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to Add Visual Studio Code Browser Preview Extension</title>
      <author>Mudacumura Brunoblaise</author>
      <pubDate>Sat, 31 Jul 2021 09:45:36 +0000</pubDate>
      <link>https://dev.to/brunoblaise/how-to-add-visual-studio-code-browser-preview-extension-3k2i</link>
      <guid>https://dev.to/brunoblaise/how-to-add-visual-studio-code-browser-preview-extension-3k2i</guid>
      <description>&lt;p&gt;Sometimes, it is hard to switch between your browser and your editor this is a huge problem for people who like to share screens or do record screens for videos not only them but even us who don't do it. It is not easy since it involves switching between browser and editor, so today it will be a history starting from now no more pain let try to get started.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open vscode&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;and go to extension or just click &lt;strong&gt;ctrl + shift + x&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Search for Browser Preview it should look like this and then install&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H3Zf_SeS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627723921734/xX9kXRujr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H3Zf_SeS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627723921734/xX9kXRujr.png" alt="Desktop screensh (1).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;now click ctrl + shift + p to open command palette &lt;/p&gt;

&lt;p&gt;search for Browser Preview and then click enter it should look like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ww162SIU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627724144365/DSvODAp3n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ww162SIU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627724144365/DSvODAp3n.png" alt="Desktop screensh.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;As a conclusion&lt;/strong&gt;, I am happy to see this extension because it is going to make life much easy and I am super happy to see what you can do with it and I am posting every day about pern stack and some other technologies. Thank you and have a nice day.&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>browserpreviewextension</category>
    </item>
    <item>
      <title> How to create a custom Toggle Switch using CSS</title>
      <author>Karan Kumar</author>
      <pubDate>Sat, 31 Jul 2021 09:43:15 +0000</pubDate>
      <link>https://dev.to/karankmr/how-to-create-a-custom-toggle-switch-using-css-4pmi</link>
      <guid>https://dev.to/karankmr/how-to-create-a-custom-toggle-switch-using-css-4pmi</guid>
      <description>&lt;p&gt;Let's create a simple customized toggle switch using CSS. Initially when I was trying to create this, I founded it very confusing because many developers have created this button but none of explain it how is this working.&lt;/p&gt;

&lt;p&gt;So after struggling a little bit, I've learned how to create this and I want to share with you all.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#prerequisite-knowledge"&gt;
  &lt;/a&gt;
  Prerequisite Knowledge
&lt;/h5&gt;

&lt;p&gt;Basics of &lt;a href="https://www.w3schools.com/html/"&gt;HTML&lt;/a&gt;, &lt;a href="https://www.w3schools.com/css/default.asp"&gt;CSS&lt;/a&gt; (specially &lt;a href="https://www.w3schools.com/css/css_pseudo_elements.asp"&gt;Pseudo Elements&lt;/a&gt;)&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZbdabFku--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mxuuxtbm3mngkihryyfh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZbdabFku--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mxuuxtbm3mngkihryyfh.gif" alt="Button working" title="Button Working"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we all know when we assign a label to a input, we can target the input by clicking on label too.&lt;/p&gt;

&lt;p&gt;That's what we are going to take advantage of and by this we can convert our label into custom switch which will act same as checkbox.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#lets-start"&gt;
  &lt;/a&gt;
  Let's Start
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iLS98d2Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b1mjtyh3t3cxyvt4hfto.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iLS98d2Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b1mjtyh3t3cxyvt4hfto.png" alt="Workflow" title="Our Workflow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These are the steps that we are going to follow in order to create this button.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#1-create-html-structure"&gt;
  &lt;/a&gt;
  1. Create HTML structure
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---KhoZu3q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wm6vcdku9nr1z7tm6y3q.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---KhoZu3q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wm6vcdku9nr1z7tm6y3q.gif" alt="Structure" title="HTML Structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this stages we will create the html elements which are input checkbox and a label that is assigned to it but its inner content should be empty.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#reference-code-is-given-below"&gt;
  &lt;/a&gt;
  Reference code is given below.
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;
&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"script.js"&lt;/span&gt; &lt;span class="na"&gt;defer&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"switch"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"switch"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"switch"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/label&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#2-hide-the-input-element"&gt;
  &lt;/a&gt;
  2. Hide the input element
&lt;/h3&gt;

&lt;p&gt;Now we will hide the input element as I said earlier we will make the switch with label element so we don't need the checkbox.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;
&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"checkbox"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;visibility&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#3-style-the-button-body"&gt;
  &lt;/a&gt;
  3. Style the button body
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UErfDn-3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kifogy5ormokei9qbnoh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UErfDn-3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kifogy5ormokei9qbnoh.png" alt="Button Body" title="Button Body"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will create the body of switch or the outer part in which ball will move.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#reference-code-is-given-below"&gt;
  &lt;/a&gt;
  Reference code is given below.
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;
&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#477a85&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;#477a8550&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#4-create-the-toggle-ball"&gt;
  &lt;/a&gt;
  4. Create the toggle ball
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yv2JLskA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hzjn47hmo6anqd3z133m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yv2JLskA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hzjn47hmo6anqd3z133m.png" alt="Toggle Ball" title="Toggle Ball"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we'll create the toggle ball using pseudo element &lt;code&gt;::after&lt;/code&gt;.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#reference-code-is-given-below"&gt;
  &lt;/a&gt;
  Reference code is given below.
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;
&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;120px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;120px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#e8f5f7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this stage our 80% of work is done, now we just have to add the animation to make our switch work.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-adding-animation"&gt;
  &lt;/a&gt;
  5. Adding animation
&lt;/h3&gt;

&lt;p&gt;As we know when we toggle the label, checkbox also get toggled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now we'll add the condition, when checkbox gets checked our ball should be shifted to the right.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NYUqaXbB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fb0768h558qmbfn26l23.gif" alt="Slide Animation" title="Slide Animation"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;   &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:checked&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="nd"&gt;:after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-100%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To Change the background on button toggle
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fEpw5-eV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5cry6m25h64fo5pv1ek.gif" alt="Background transition" title="Background transition"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;
   &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:checked&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#243d42&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now If want a more smooth magnetic effect. When ball get active it its width should increase for a moment. &lt;em&gt;A element gets active when we click on it.&lt;/em&gt; We can do this by using &lt;code&gt;:active&lt;/code&gt; selector.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;    &lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="nd"&gt;:active:after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;160px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#output-preview"&gt;
  &lt;/a&gt;
  Output Preview
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lPrqiUJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yffrjipmf0e9w4d9hzxw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lPrqiUJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yffrjipmf0e9w4d9hzxw.gif" alt="Output" title="Output"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#try-demo"&gt;
  &lt;/a&gt;
  Try Demo
&lt;/h2&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/karan-kmr/embed/ZEKoGBr?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#find-me-on"&gt;
  &lt;/a&gt;
  Find Me On
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.instagram.com/karancodes/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_XJadsNf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/38dkuuvtufkyoxggelag.png" alt="@karancodes Instagram Profile"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>switch</category>
      <category>toggle</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Multiple buttons only one active on click</title>
      <author>Oliwier965</author>
      <pubDate>Sat, 31 Jul 2021 09:22:23 +0000</pubDate>
      <link>https://dev.to/oliwier965/multiple-buttons-only-one-active-on-click-50on</link>
      <guid>https://dev.to/oliwier965/multiple-buttons-only-one-active-on-click-50on</guid>
      <description>&lt;p&gt;Today I want to share with you how to do an effect, that if you have multiple buttons and you want to add active styling class on click but when you click on other button remove active class from last button and add it to the latest clicked. Interested so let's get into it. Here's how to accomplish it.&lt;/p&gt;

&lt;p&gt;1 Select all buttons. I named my variable btnsTip and selected them through data attribute, but it's up to you.&lt;br&gt;
&lt;code&gt;const btnsTip = document.querySelectorAll("[data-btn-tip]");&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;2 Add variable where we'll be storing last clicked button and set its value to null.&lt;br&gt;
&lt;code&gt;let activeBtn = null;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;3 Loop through them and for each, create event listener on click and put event (e) in the parentheses to access it later.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;btnsTip.forEach((btnTip) =&amp;gt; {
  btnTip.addEventListener("click", (e) =&amp;gt; {
  });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;4 Do check if active button isn't equal to null because if it was, that will mean that there's no element stored because it's default variable value, and isn't equal to current target because we don't want to remove class on double click on current element. And we remove active class from our variable that mean that we remove active class from our last element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;btnsTip.forEach((btnTip) =&amp;gt; {
  btnTip.addEventListener("click", (e) =&amp;gt; {

    //New code here
    if ((activeBtn = null &amp;amp;&amp;amp; activeBtn != e.currentTarget)) {
      activeBtn.classList.remove("active");
    }
    //

  });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;5 And last step we add active class to current element and set our activeBtn variable to current element that we have clicked.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;btnsTip.forEach((btnTip) =&amp;gt; {
  btnTip.addEventListener("click", (e) =&amp;gt; {

    //New code here
    e.currentTarget.classList.add("active");
    //

    if ((activeBtn = null &amp;amp;&amp;amp; activeBtn != e.currentTarget)) {
      activeBtn.classList.remove("active");
    }

    //New code here
    activeBtn = e.currentTarget;
    //

  });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Full Code Down Bellow&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const btnsTip = document.querySelectorAll("[data-btn-tip]");
let activeBtn = null;

btnsTip.forEach((btnTip) =&amp;gt; {
  btnTip.addEventListener("click", (e) =&amp;gt; {
    e.currentTarget.classList.add("active");

    if ((activeBtn = null &amp;amp;&amp;amp; activeBtn != e.currentTarget)) {
      activeBtn.classList.remove("active");
    }

    activeBtn = e.currentTarget;
  });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you liked my post or was it useful to you, Like, Share, and Comment :)&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>JavaScript Snippets In The Browser</title>
      <author>NGS Harsha</author>
      <pubDate>Sat, 31 Jul 2021 09:15:48 +0000</pubDate>
      <link>https://dev.to/ganeshh___/javascript-snippets-in-the-browser-1gf1</link>
      <guid>https://dev.to/ganeshh___/javascript-snippets-in-the-browser-1gf1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The Problem
&lt;/h2&gt;

&lt;p&gt;Sometimes, when building web applications, I want to test a piece of JavaScript code before actually writing it in the application and without switching between the editor and the browser. For example, checking the response of an API call using fetch or filtering out an array or converting the response JSON into the required format.&lt;/p&gt;

&lt;p&gt;We can use the &lt;strong&gt;&lt;em&gt;console&lt;/em&gt;&lt;/strong&gt; tab in the browser's dev tools to write JavaScript, just type a line and hit enter. If we want to write multi-line expressions, we can use shift + enter to break into a new line, and hit enter at the end to execute all those lines. We don't have to use shift + enter always, sometimes the browser will automatically break into a new line after hitting enter if the expression is a multi-line expression (e.g., loops, function declarations etc.).&lt;/p&gt;

&lt;p&gt;But, when we want to view and edit a piece of code we executed before, we have to use the up arrow key ↑ (just like cycling through terminal history). When we do that, we can't expect the browser to break into a new line when you hit enter inside a loop or a function while editing it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-trick"&gt;
  &lt;/a&gt;
  The Trick
&lt;/h2&gt;

&lt;p&gt;Chrome and Firefox have a feature (I don't know about Safari) where you can write JavaScript snippets just like you do in your text editor (with limited IntelliSense, and autocompletion of course).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-chrome"&gt;
  &lt;/a&gt;
  For Chrome
&lt;/h3&gt;

&lt;p&gt;In Chrome, open dev tools by pressing F12 and navigate to the &lt;strong&gt;&lt;em&gt;Sources&lt;/em&gt;&lt;/strong&gt; tab. Under that tab, on the left side, you will see a tab called &lt;strong&gt;&lt;em&gt;Snippets&lt;/em&gt;&lt;/strong&gt;, click on that. If you don't see it, click on the double angled brackets button (circled in red below) to expand the menu.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wj-AW9cM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p8vre03rm9hhj6adeg0b.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wj-AW9cM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p8vre03rm9hhj6adeg0b.jpg" alt="Chrome Dev Tools Snippets"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, click on the &lt;strong&gt;&lt;em&gt;New snippet&lt;/em&gt;&lt;/strong&gt; button to create a new snippet. You can name it whatever you want or leave it as it is. The browser will open the new snippet on the right side. There you can write your JavaScript code and run it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UOu1yBcV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/thr1x59p3pxn3qulzu5j.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UOu1yBcV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/thr1x59p3pxn3qulzu5j.jpg" alt="Chrome Dev Tools Snippets Example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After writing the code, click on the run/play button on the bottom right corner (highlighted in green) or press ctrl + enter, to run it. You can format the code using the button on the bottom left corner (circled in red above). You can view the output in the &lt;strong&gt;&lt;em&gt;Console&lt;/em&gt;&lt;/strong&gt; tab.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-firefox"&gt;
  &lt;/a&gt;
  For Firefox
&lt;/h3&gt;

&lt;p&gt;In Firefox, open dev tools by pressing F12 and navigate to the &lt;strong&gt;&lt;em&gt;Console&lt;/em&gt;&lt;/strong&gt; tab. on the top right corner of that tab, you will see a button (circled in red below). Clicking that will open a multi-line editor to the left. There you can write your JavaScript code and run it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q7JRH7ka--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/31txjkmo7jqvjp2bbpyn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q7JRH7ka--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/31txjkmo7jqvjp2bbpyn.jpg" alt="Firefox Dev Tools Snippets"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After writing the code, click on the run button or hit ctrl + enter to run it. You can format the code using the button with curly brackets (circled in red below). The output will be displayed on the right.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_U5Y1Xgj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibsj7bksuppec3qz9dt0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_U5Y1Xgj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibsj7bksuppec3qz9dt0.jpg" alt="Firefox Dev Tools Snippets Example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  Note
&lt;/h3&gt;

&lt;p&gt;We can run the code multiple times in Chrome without any errors. But Firefox gives &lt;strong&gt;&lt;em&gt;redeclaration&lt;/em&gt;&lt;/strong&gt; error if we try to run the code multiple times.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wTVv8kyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5cjlq6l50xiyukke556w.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wTVv8kyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5cjlq6l50xiyukke556w.jpg" alt="Firefox Redeclaration Error"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To avoid this error, wrap the code in a function and call it or write an IIFE (Immediately Invoked Function Expression)😉&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#read-further"&gt;
  &lt;/a&gt;
  Read Further
&lt;/h3&gt;

&lt;p&gt;Read more about Chrome's snippets feature &lt;a href="https://developer.chrome.com/docs/devtools/javascript/snippets/"&gt;here&lt;/a&gt;, and about Firefox's multi-line editor mode &lt;a href="https://developer.mozilla.org/en-US/docs/Tools/Web_Console/The_command_line_interpreter#multi-line_mode"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This article is available on my blog as well, check it out &lt;a href="https://ngsharsha.netlify.app/blog/javascript-snippets-in-the-browser/"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Learning ruby - day 2</title>
      <author>aderayevans</author>
      <pubDate>Sat, 31 Jul 2021 08:45:06 +0000</pubDate>
      <link>https://dev.to/aderayevans/learning-ruby-day-2-41oh</link>
      <guid>https://dev.to/aderayevans/learning-ruby-day-2-41oh</guid>
      <description>&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#Introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Content"&gt;Content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="Introduction"&gt;&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Hey guys, welcome to my blog recording my ruby self-taught process&lt;/p&gt;

&lt;p&gt;I decided to learn this amazing language while I was trying to solving some ruby challenges to get my tenth badge in HackerRank&lt;/p&gt;

&lt;p&gt;At the first day, We have gotten to know Ruby. If you found it a little hard to understand then let me know immediately, otherwise I will keep writing this blog as a learning process recording&lt;/p&gt;

&lt;p&gt;Today I will focus on more details what we have learned at the first day&lt;/p&gt;




&lt;h2 id="Content"&gt;&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#print-output"&gt;
  &lt;/a&gt;
  Print output
&lt;/h2&gt;

&lt;p&gt;Print value of variable and type of variable&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Ade"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Hello &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we have discussed at the first day "Everything is Object", so we're now able to know that type of variable is a class name&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;PS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;D:\Workplace&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ruby&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;hello-world.rb&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Hello&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Ade&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Print raw version of an object, use for debugging string. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;P is a kernel method&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;" &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="s2"&gt;" \n"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pretty printting, use for print Hash object&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"2019"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;
       &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="s2"&gt;"language"&lt;/span&gt;&lt;span class="ss"&gt;:"Ruby"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s2"&gt;"edition"&lt;/span&gt;&lt;span class="ss"&gt;:"seventh"&lt;/span&gt;
       &lt;span class="p"&gt;},&lt;/span&gt;
       &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="s2"&gt;"language"&lt;/span&gt;&lt;span class="ss"&gt;:"Python"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s2"&gt;"edition"&lt;/span&gt;&lt;span class="ss"&gt;:"sixth"&lt;/span&gt;
       &lt;span class="p"&gt;},&lt;/span&gt;
       &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="s2"&gt;"language"&lt;/span&gt;&lt;span class="ss"&gt;:"Oracle"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s2"&gt;"edition"&lt;/span&gt;&lt;span class="ss"&gt;:"second"&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="s2"&gt;"2020"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="s2"&gt;"language"&lt;/span&gt;&lt;span class="ss"&gt;:"C++"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s2"&gt;"edition"&lt;/span&gt;&lt;span class="ss"&gt;:"first"&lt;/span&gt;
       &lt;span class="p"&gt;},&lt;/span&gt;
       &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="s2"&gt;"language"&lt;/span&gt;&lt;span class="ss"&gt;:"Java"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s2"&gt;"edition"&lt;/span&gt;&lt;span class="ss"&gt;:"fourth"&lt;/span&gt;
       &lt;span class="p"&gt;},&lt;/span&gt;
       &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="s2"&gt;"language"&lt;/span&gt;&lt;span class="ss"&gt;:"Mysql"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s2"&gt;"edition"&lt;/span&gt;&lt;span class="ss"&gt;:"third"&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"----------------------------------------------------"&lt;/span&gt;
&lt;span class="n"&gt;pp&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="p"&gt;{:&lt;/span&gt;&lt;span class="s2"&gt;"2019"&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[{:&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"Ruby"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;edition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"seventh"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{:&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"Python"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;edition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"sixth"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{:&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"Oracle"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;edition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"second"&lt;/span&gt;&lt;span class="p"&gt;}],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"2020"&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[{:&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"C++"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;edition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"first"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{:&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"Java"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;edition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"fourth"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{:&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"Mysql"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;edition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"third"&lt;/span&gt;&lt;span class="p"&gt;}]}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="o"&gt;----------------------------------------------------&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;{:&lt;/span&gt;&lt;span class="s2"&gt;"2019"&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;[{:&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"Ruby"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;edition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"seventh"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;{:&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"Python"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;edition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"sixth"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;{:&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"Oracle"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;edition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"second"&lt;/span&gt;&lt;span class="p"&gt;}],&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"2020"&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;[{:&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"C++"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;edition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"first"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;{:&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"Java"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;edition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"fourth"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;{:&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"Mysql"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;edition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"third"&lt;/span&gt;&lt;span class="p"&gt;}]}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;As you can see, it looks pretty as it name&lt;/em&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#too-much-if-use-case-instead"&gt;
  &lt;/a&gt;
  Too much if - use Case instead
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;today&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"Monday"&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"2, 30 July 2021"&lt;/span&gt;
&lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="n"&gt;today&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"Tuesday"&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"3, 30 July 2021"&lt;/span&gt;
&lt;span class="c1"&gt;#...&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"8, 30 July 2021"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;today&lt;/span&gt;
&lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s2"&gt;"Monday"&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"2, 30 July 2021"&lt;/span&gt;
&lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s2"&gt;"Tuesday"&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"3, 30 July 2021"&lt;/span&gt;
&lt;span class="c1"&gt;#...&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"8, 30 July 2021"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;July&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;2021&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#playing-with-array-elements"&gt;
  &lt;/a&gt;
  Playing with array elements
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;72&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;73&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;76&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;77&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;78&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Array: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;inspect&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Array length = &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;length&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"First element: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"First element: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Last element: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Last element: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;last&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Five first elements &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;take&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;inspect&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Ignores five first elements &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;inspect&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Element at index 3 &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Elements from index 3 to index 7 &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Elements from index 3 to index 6 &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"8 Elements from index 3 &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;Array:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;72&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;73&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;76&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;77&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;78&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Array&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;First&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;element:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;65&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;First&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;element:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;65&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Last&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;element:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;78&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Last&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;element:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;78&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Five&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Ignores&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;five&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;72&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;73&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;76&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;77&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;78&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Element&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;68&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Elements&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;7&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;72&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Elements&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;6&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Elements&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;72&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;73&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;inspect help puts print all array elements in one line&lt;/p&gt;
&lt;/blockquote&gt;



&lt;h2&gt;
  &lt;a href="#add-elements-to-array"&gt;
  &lt;/a&gt;
  Add elements to array
&lt;/h2&gt;

&lt;p&gt;At the last blog, we have learned a bunch of ways to delete elements from array, let's look back a little&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;72&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;73&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;76&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;77&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;78&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Array: &lt;/span&gt;&lt;span class="se"&gt;\t\t\t&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;inspect&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;shift&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Delete first element: &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;inspect&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;inspect&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Delete last element: &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;inspect&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;delete_at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;inspect&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Delete at index 2: &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;inspect&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;Array:&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;72&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;73&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;76&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;77&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;78&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Delete&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;element:&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;72&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;73&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;76&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;77&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;78&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Delete&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;last&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;element:&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;72&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;73&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;76&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;77&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Delete&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;2:&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;72&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;73&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;76&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;77&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we're learning some ways to add elements to array&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Array: &lt;/span&gt;&lt;span class="se"&gt;\t\t\t&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;inspect&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;unshift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;98&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Add at first position: &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;inspect&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;254&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Add at last position: &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;inspect&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;129&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Add at index 5: &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;inspect&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;Array:&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;position:&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;last&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;position:&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;254&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;5:&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;129&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;254&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see we can add more than just one element&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#here-document"&gt;
  &lt;/a&gt;
  Here document
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s1"&gt;'Starting'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'------------'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;HERE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Real Ending'&lt;/span&gt;&lt;span class="sh"&gt;
    1. Salad mix.
    2. Strawberries.
    3. Cereal.
    4. Milk.
&lt;/span&gt;&lt;span class="no"&gt;HERE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;Starting&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="o"&gt;------------&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Salad&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;mix.&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Strawberries.&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nx"&gt;3.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Cereal.&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Milk.&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nx"&gt;Real&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Ending&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will print 'Starting' and '------------' normally as puts always do&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;&amp;lt;HERE&lt;/code&gt; here means the next occurrence of &lt;code&gt;HERE&lt;/code&gt; will be the end of this document&lt;/p&gt;

&lt;p&gt;&lt;code&gt;'Real Ending'&lt;/code&gt; is lying right after the &lt;code&gt;&amp;lt;&amp;lt;HERE&lt;/code&gt;, will be print out right after the end of the document&lt;/p&gt;

&lt;p&gt;You can set multiple &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; to exchange words in the document&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;&amp;lt;HERE&lt;/code&gt; will be failed if there is any space or tab before the next occurrence &lt;code&gt;HERE&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;lt;-HERE&lt;/code&gt; is saying the next occurence can have some space, tab or &lt;code&gt;HERE&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Please check this link to learn more about this feature&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikibooks.org/wiki/Ruby_Programming/Here_documents"&gt;https://en.wikibooks.org/wiki/Ruby_Programming/Here_documents&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#string"&gt;
  &lt;/a&gt;
  String
&lt;/h2&gt;

&lt;p&gt;In this part, we're going to talk a little more about string in Ruby&lt;/p&gt;

&lt;p&gt;String elements can be called in multiple ways&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Each char
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each_char&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="s2"&gt;"W"&lt;/span&gt;
&lt;span class="s2"&gt;"h"&lt;/span&gt;
&lt;span class="s2"&gt;"a"&lt;/span&gt;
&lt;span class="s2"&gt;"t"&lt;/span&gt;
&lt;span class="s2"&gt;"'"&lt;/span&gt;
&lt;span class="s2"&gt;"s"&lt;/span&gt;
&lt;span class="s2"&gt;" "&lt;/span&gt;
&lt;span class="s2"&gt;"u"&lt;/span&gt;
&lt;span class="s2"&gt;"p"&lt;/span&gt;
&lt;span class="s2"&gt;"?"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Each byte
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each_byte&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;87
104
97
116
39
115
32
117
112
63
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Each line
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="s2"&gt;"hello&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;world"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each_line&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="s2"&gt;"hello&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="s2"&gt;"world"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can access elements of a string just like how we do with array&lt;/p&gt;

&lt;p&gt;But we cannot delete or add elements to string like we do with array or hash&lt;/p&gt;

&lt;p&gt;This is how we do it&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Remember these methods will just return a new string, it does not change the original string&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Delete last char
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Hi   &lt;/span&gt;&lt;span class="se"&gt;\t\r\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;chop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;chop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="s2"&gt;"Hi   "&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;You can see that we can chop multiple time, &lt;code&gt;\r&lt;/code&gt;, &lt;code&gt;\n&lt;/code&gt;, &lt;code&gt;\r\n&lt;/code&gt; (exept &lt;code&gt;\n\r&lt;/code&gt; though) will be treat as one char&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Delete multiple last chars
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Hi, My name is Ade&lt;/span&gt;&lt;span class="se"&gt;\r\n\r&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;chomp&lt;/span&gt;
&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;chomp&lt;/span&gt;
&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;chomp&lt;/span&gt; &lt;span class="s2"&gt;"Ade"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="s2"&gt;"Hi, My name is Ade&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="s2"&gt;"Hi, My name is Ade"&lt;/span&gt;
&lt;span class="s2"&gt;"Hi, My name is "&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Delete &lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt; or &lt;code&gt;\r\n&lt;/code&gt; unless there is a parameter&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Delete whitespaces
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"   &lt;/span&gt;&lt;span class="se"&gt;\r\n\t&lt;/span&gt;&lt;span class="s2"&gt;Hi     ,  Are you having fun?&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;   &lt;/span&gt;&lt;span class="se"&gt;\r&lt;/span&gt;&lt;span class="s2"&gt;    &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;strip&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="s2"&gt;"Hi     ,  Are you having fun?"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Delete the leading and trailing &lt;code&gt;\t\n\r&lt;/code&gt; and whitespaces&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Append str
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
&lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;"Hello"&lt;/span&gt;
&lt;span class="c1"&gt;# or&lt;/span&gt;
&lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
&lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s2"&gt;"Ruby is "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s2"&gt;"pretty"&lt;/span&gt;
&lt;span class="c1"&gt;# How to append non-string&lt;/span&gt;
&lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mf"&gt;3.14&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add to the beginning
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Gimme your wallet"&lt;/span&gt;
&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;
&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;prepend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Please, "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="s2"&gt;"Gimme your wallet"&lt;/span&gt;
&lt;span class="s2"&gt;"Please, Gimme your wallet"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check text occurs in str with include&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;include?&lt;/span&gt; &lt;span class="s2"&gt;"wallet"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replace text in str with gsub, first parameter can be RegExp or String, second parameter is string will replace the occurrence texts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/wallet/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;heart&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Please, Gimme your wallet"&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;include?&lt;/span&gt; &lt;span class="s2"&gt;"wallet"&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/wallet/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"heart"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Please, Gimme your heart
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2 id="Conclusion"&gt;&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We have learned more about printing object&lt;/p&gt;

&lt;p&gt;Interesting feature called Here document to print multiple line strings&lt;/p&gt;

&lt;p&gt;Acknowledged how to access, add and delete elements in array and string, or as i say "playing around with array and string"&lt;/p&gt;




&lt;p&gt;I'd like to thank HackerRank for giving me a chance to acknowledge and be interesting in this cool language&lt;/p&gt;

&lt;p&gt;If guys found Ruby is fascinating, please come to the link below and solve some Ruby challenges with me &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.hackerrank.com/domains/ruby"&gt;https://www.hackerrank.com/domains/ruby&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any question or suggestion, please let me know at the comment section below.&lt;/p&gt;

&lt;p&gt;OK I'm going to wrap this up here&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Thanks for reading my blog&lt;/code&gt;&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>beginners</category>
      <category>rubyday2</category>
      <category>aderayevans</category>
    </item>
    <item>
      <title>10 Top Cryptocurrency Exchange Development Company In the USA</title>
      <author>sara</author>
      <pubDate>Sat, 31 Jul 2021 08:42:04 +0000</pubDate>
      <link>https://dev.to/sara42188705/10-top-cryptocurrency-exchange-development-company-in-usa-1ak8</link>
      <guid>https://dev.to/sara42188705/10-top-cryptocurrency-exchange-development-company-in-usa-1ak8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#cryptocurrency-exchange-development-in-the-usa"&gt;
  &lt;/a&gt;
  Cryptocurrency Exchange Development in the USA
&lt;/h2&gt;

&lt;p&gt;Although cryptocurrency exchange is a new industry, more and more people are getting involved with this market. Today, with the growing popularity of digital currencies among users around the world and also the increasing use of digital currencies for various purposes, many users around the world are looking for suitable and reputable platforms for buying, selling, and exchanging cryptocurrencies.&lt;br&gt;
People around the world are now using digital currencies for a variety of purposes, such as buying and selling goods, making overseas payments, or gaining cryptocurrency profits from fluctuations and a variety of revenue-generating methods. This issue has multiplied the importance of designing a digital and online currency exchange site.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-advantages-of-developing-a-cryptocurrency-exchange"&gt;
  &lt;/a&gt;
  The advantages of developing a cryptocurrency exchange
&lt;/h2&gt;

&lt;p&gt;There are many other benefits in crypto exchange and that’s why it is growing day by day. So as more people get interested in this market the demand for exchange platforms increase. Therefore, as a business owner, you have to see the factors and come to a conclusion that developing a digital currency exchange site is an important step to expand your business. &lt;a href="https://radindev.com/cryptocurrency-exchange-development-in-usa/"&gt;cryptocurrency exchange development in the USA&lt;/a&gt; can promote brands and organizations. &lt;br&gt;
The fact that the cryptocurrency market is usually available for trading 24/7 because there is no centralized monitor of the market is one of the reasons that make this industry grow faster. The cryptocurrency transactions take place directly between individuals and it helps traders to trade with other people all over the globe. This gives them the opportunity of trading with a wide range of people and traders. &lt;br&gt;
The factor that measures the speed and Ease of converting a cryptocurrency into cash without impacting the market price is called liquidity. Liquidity is an important factor because it brings faster transactions (actually it reduces the time of the transactions), better prices, and accuracy for technical analysis.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#methods-of-developing-a-crypto-exchange-website"&gt;
  &lt;/a&gt;
  Methods of developing a crypto exchange website
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7CbzRfc3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lhvdz0ob6mmfv493kqor.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7CbzRfc3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lhvdz0ob6mmfv493kqor.png" alt="developing a crypto exchange website"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Develop from scratch&lt;/strong&gt;&lt;br&gt;
If you want to develop your cryptocurrency exchange with this method, you will need an enormous amount of money. For developing a website from scratch you have to spend a lot of time gathering a professional team together. This method needs a lot of time, energy, and money. When you build a website from scratch, you are risking a lot. Because you are doing something new and doing something that is completely new is always risky and it's difficult to avoid all the mistakes, bugs and the delay in the delivery because the obstacles and the problem that may happen during the process is not obvious. So we conclude that this method is time-consuming and needs a lot of money. But it can be useful in certain cases that you have a clear vision of how to develop the website and enough found to support the financial issue.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;White label crypto exchange&lt;/strong&gt;&lt;br&gt;
In the field of developing a cryptocurrency website, one of the most terms that you hear is White label solutions or white label exchange platform. What is a white label exchange platform? And how does it work?&lt;br&gt;
  white label is a premade platform and ready-to-use solution that enables you to promote your brand or develop your platform the way you want and you think it’s more effective in the market. In this method, the risks are very low because the solutions are tested so you don’t need to worry about the security problems or bugs that prevent the platform to work properly. You don’t need a team for developing a white label exchange and this means it costs less. The white label gives you the opportunity to develop our platform so fast and enter the business market faster. Using this method will only take a few weeks from the moment of the purchase to launch a website that is ready to use.  Different companies provide white label exchange.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#list-of-the-10-best-crypto-exchange-development-companies-in-the-usa"&gt;
  &lt;/a&gt;
  List of the 10 best Crypto Exchange Development Companies in the USA:
&lt;/h3&gt;

&lt;p&gt;Finding a reliable cryptocurrency exchange development company is a time-consuming process.&lt;br&gt;
Before choosing a crypto exchange company to develop your exchange platform, pay attention to the following features of that website:&lt;br&gt;
• Number of their employees&lt;br&gt;
• Contact details of the company&lt;br&gt;
• Successful portfolio&lt;br&gt;
• Client feedback and review&lt;br&gt;
• Experience in this field&lt;/p&gt;

&lt;p&gt;Here is a list of 10 top Crypto Exchange Development companies in Singapore to ease up the searching process for you. Check out the list below and choose your desired crypto exchange developer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.BLOCKCHAINAPPSDEVELOPER&lt;/strong&gt; &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yr3p65LE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3sl0lphd5qo8zo2ywff7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yr3p65LE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3sl0lphd5qo8zo2ywff7.png" alt="blockchain developer"&gt;&lt;/a&gt;&lt;br&gt;
This company is working since 2009 and, now it has become one of the greatest blockchain development companies. They provide white label solutions to start-ups and different enterprises. Blockchain app developer helps you to reshape your business into a successful organization with their dedicated professional team that provides you the best solutions and services.&lt;br&gt;
The blockchain app developer provides:&lt;br&gt;
•  NFT development services &lt;br&gt;
•  Blockchain for decentralized finance&lt;br&gt;
•  Blockchain smart contract development&lt;br&gt;
•  Enterprise blockchain solutions&lt;br&gt;
•  Decentralized exchange software development &lt;br&gt;
•  blockchain HYIP software development&lt;br&gt;
•  Blockchain MLM software development&lt;br&gt;
•  Cryptocurrency exchange software development&lt;br&gt;
•  DAPP development &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.Radindev&lt;/strong&gt;  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sBlQrG37--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nhliwn0zripiqpq9utku.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sBlQrG37--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nhliwn0zripiqpq9utku.png" alt="radindev"&gt;&lt;/a&gt;&lt;br&gt;
Radindev provides full-stack Blockchain Development Services and solutions to startups and enterprises to assist them improve and grow their business. As a blockchain development company they provide robust and high quality services for any kinds of businesses that want to enter the cryptocurrency community. They have valuable experience in developing an effective blockchain solutions for various businesses. They have a team of experts in the field of blockchain which empowers them to develop secure blockchain solutions for different organization that want to launch their crypto exchange development website.&lt;br&gt;
This company has a golden portfolio in the following field:&lt;/p&gt;

&lt;p&gt;• Cryptocurrency exchange website Development&lt;br&gt;
• P2P Cryptocurrency Exchange software&lt;br&gt;
• White label exchange development &lt;br&gt;
• Web development&lt;br&gt;
• Mobile app development&lt;br&gt;
• MLM Software Development &lt;br&gt;
• Blockchain solution provider&lt;br&gt;
• Trust wallet clone app development &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.Antiersolution&lt;/strong&gt;&lt;br&gt;
Antiersolution is a blockchain development company that provides the crypto exchange services such as wallet development, coin development, p2p platform development, banking solutions, and many more. They have a team that supports you in every step of the blockchain development and they provide you 24/7 support. Through the search among their customer feedback, we understood that antiersolution is a company that they have a high speed of delivery and they deliver services and products with high quality to their client and yes this company was recommended by many of their clients. Because their focus is completely on blockchain development they have great experience in this field so they are successful in making their clients pleased with their services.&lt;br&gt;
The blockchain services they provide are:&lt;br&gt;
• White label exchange development&lt;br&gt;
• White label wallet development&lt;br&gt;
• Security token offering&lt;br&gt;
• Peer to peer platform development&lt;br&gt;
• Stable coin development &lt;br&gt;
• Blockchain consulting&lt;br&gt;
• Blockcahin  based MLM software development&lt;br&gt;
• Coin development &lt;br&gt;
• P2p exchange development &lt;br&gt;
• Binance-like exchange development&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KoLg1W4k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/611afp2hgys8lq531p19.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KoLg1W4k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/611afp2hgys8lq531p19.png" alt="customer reviews"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.openexcel&lt;/strong&gt;&lt;br&gt;
With the help and the support of the openexcel team, businesses and startups can scale up and improve faster and go to the market quickly. This country is a leading company in the field of developing reliable software and mobile app famous for providing innovative software solutions. They have 2000 customized software solutions in their resume.&lt;br&gt;
Openexcel services include:&lt;br&gt;
• Custom software development&lt;br&gt;
• Mobile application development&lt;br&gt;
• Product engineering&lt;br&gt;
• User experience research &amp;amp; design&lt;br&gt;
• Web applications development&lt;br&gt;
• QA &amp;amp; Testing&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.bitdeal&lt;/strong&gt;&lt;br&gt;
Bitdeal is one of the top cryptocurrency exchange and blockchain development companies. This company tries to reduce the risks of trading in bitcoin and support new digital currencies startups by offering reliable and hassle-free cryptocurrency exchange software. The various services that they provide are listed below:&lt;/p&gt;

&lt;p&gt;• Blockchain Development Services&lt;br&gt;
• P2P Exchange Development&lt;br&gt;
• Initial Coin Offering Services&lt;br&gt;
• Smart Contract Development Sevices&lt;br&gt;
• Cryptocurrency &amp;amp; Altcoin Development Services&lt;br&gt;
• ICO Marketing &amp;amp; Consulting Services&lt;br&gt;
• Security Token Offering Services&lt;br&gt;
• Dapps Development Services&lt;br&gt;
• Cryptocurrency Wallet Development&lt;br&gt;
• EthereumToken Development Services&lt;br&gt;
• Crypto Trading Bot Development&lt;br&gt;
• DeFi Development Services&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GZrouMAr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r5n0xc5af4ag3gzc5sso.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GZrouMAr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r5n0xc5af4ag3gzc5sso.png" alt="bitdeal client feedback"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;6.4irelabs&lt;/strong&gt;&lt;br&gt;
 4IRELABS has gathered a team of professionals together in order to develop better software and bolder financial platforms that will help your business to stands out among the competitors.&lt;br&gt;
According to the feedback of their long-term client, they are so good at implementing changes at high speed, because in startups the changes may happen that they change their mind about some idea and it may need to be changed, this company has the ability to implement the changes adequately with the suitable time.&lt;/p&gt;

&lt;p&gt;• Ideas validation&lt;br&gt;
• DApp development &lt;br&gt;
• Assets tokenization&lt;br&gt;
• Financial software development&lt;br&gt;
• Custom development on popular blockchains&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7.solulab&lt;/strong&gt;&lt;br&gt;
Solulab is on the list of top blockchain development companies in the USA. They have an experienced engineering team to build blockchain platforms and help businesses to improve and grow. They offer blockchain consultation and offer blockchain education.&lt;br&gt;
Based on the comments received from their client they are so satisfied with the services and products that they provide the features that they mentioned were that they have good communication with their clients they give you reports and the updates of the project frequently.&lt;/p&gt;

&lt;p&gt;Their expertise:&lt;br&gt;
• Blockchain development&lt;br&gt;
• Custom software solutions&lt;br&gt;
• Internet-of-Things&lt;br&gt;
• Machine learning&lt;br&gt;
• Data science&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8.cubix&lt;/strong&gt;&lt;br&gt;
Cubix is a leading company in the field of mobile app and web development this company provides a wide range of technology services. They are ready to build and consult their clients with thriving solutions for their businesses to assist them in designing, developing, and enter the market in the best way possible. Cubix offers 24/7 customer support for their client and ensures them that they are always ready to support them and solve their problems. The goal of this company is their customer satisfaction and by setting this goal they have achieved the best rank in different websites and they have gained a satisfied customer that is growing.&lt;/p&gt;

&lt;p&gt;Cubix works in the field of :&lt;br&gt;
• Business Intelligence &lt;br&gt;
• Mobile development &lt;br&gt;
• Game development &lt;br&gt;
• Artificial intelligence&lt;br&gt;
• Augmented reality &lt;br&gt;
• Enterprise portal&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Techno loader&lt;/strong&gt;&lt;br&gt;
Technoloader ensures the security and efficiency of the blockChain and try to make it suitable for the industries that want to use it.&lt;br&gt;
Techno loader is a leading blockchain  development company which provides various services such as: &lt;br&gt;
• blockchain development&lt;br&gt;
• supply chain development&lt;br&gt;
• crypto exchange development &lt;br&gt;
• Custom Blockchain Development&lt;br&gt;
• dApps Development&lt;br&gt;
• Smart Contract Development&lt;br&gt;
• Decentralized Exchange Development &lt;br&gt;
• Wallet Development&lt;br&gt;
• Website Design &lt;br&gt;
Based on their client reviews they are so updated when it comes to technology. They have recommended this company to others for developing blockchain websites and it shows that they are good at it because they could satisfy their clients.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pVOhwilS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ehwuxoo06b7tpk2dmofu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pVOhwilS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ehwuxoo06b7tpk2dmofu.png" alt="client feedback"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. Zab technologies&lt;/strong&gt;&lt;br&gt;
Zab technologies is a secure and reliable blockchain development company that has more than 40 blockchin engineers that their main focus is on creating blockchain solutions for different companies and startups.&lt;/p&gt;

&lt;p&gt;Their blockchain services are:&lt;br&gt;
• Private Blockchain Development&lt;br&gt;
• Crypto payment gateway development&lt;br&gt;
• Cryptocurrency Exchange Development&lt;br&gt;
• Smart ContractsDevelopment&lt;br&gt;
• Wallet Development&lt;br&gt;
• ICO (Initial Coin Offering) Development&lt;br&gt;
• Security Token Offering&lt;/p&gt;

&lt;p&gt;Zab technologies is a great company to develop your cryptocurrency exchange platform because when your project is in the hand of experts  you know that it is in the hand of the right person so you wait for the result with a peace of mind and  more confidentially . &lt;br&gt;
This company offers customized solutions that fit to the demands of each business because they provide exclusive solutions for various clients based on the clients’ requirements so they can adapt to any new changes in the platforms with high speed.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kSzlpvPe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rv3pzbv8asggjqugwk0c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kSzlpvPe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rv3pzbv8asggjqugwk0c.png" alt="customer focus"&gt;&lt;/a&gt;&lt;br&gt;
Table 1.The customer focus of each company&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-steps-of-launching-an-online-crypto-exchange-website"&gt;
  &lt;/a&gt;
  The steps of launching an online crypto exchange website
&lt;/h3&gt;

&lt;p&gt;for whatever reason, Individuals or companies that intend to set up an online cryptocurrency exchange platform may not be able to set up this facility on their own and without the help of other platforms. To meet this need, they can refer to platforms that provide these kinds of services and use their professional team, experience and skills In addition, they save the most of their time and energy. &lt;br&gt;
For this action you need to go through some steps. These steps may vary for each company but in general they are like the steps that are mentioned in the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; First of all you have to know the exact amount of your budget you want to spend on developing a cryptocurrency exchange software.&lt;/li&gt;
&lt;li&gt; Think of the features and options that you want to implement in your crypto exchange website.&lt;/li&gt;
&lt;li&gt; Decide about the method that you want to develop your crypto exchange website.
&lt;/li&gt;
&lt;li&gt; Finding a suitable and reliable company that provides the services that you need.&lt;/li&gt;
&lt;li&gt; After you have done the previous steps now it’s time to go through the packages that your chosen company provides. The cryptocurrency exchange development companies usually present various demoes of the platforms they have developed or can develop, you can check their demoes and read about their details. &lt;/li&gt;
&lt;li&gt; Also you can ask them to add clone scripts of popular and successful websites in the field of cryptocurrency to your platform.&lt;/li&gt;
&lt;li&gt; Now its time to order your desired platform. and complete your order &lt;/li&gt;
&lt;li&gt; After completing your order it’s time to communicate with the experts and their customer support team to run the project with each other. &lt;/li&gt;
&lt;li&gt; And in the end you they have to  provide you crypto exchange website based on your requirements and  the Contract
you have made together. &lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>blockchain</category>
      <category>cryptocurrency</category>
      <category>exchange</category>
      <category>crypto</category>
    </item>
  </channel>
</rss>
