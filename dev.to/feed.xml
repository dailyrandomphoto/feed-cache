<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Forecast Weather using Python</title>
      <author>Ayushi Rawat </author>
      <pubDate>Fri, 11 Jun 2021 13:22:52 +0000</pubDate>
      <link>https://dev.to/ayushi7rawat/forecast-weather-using-python-896</link>
      <guid>https://dev.to/ayushi7rawat/forecast-weather-using-python-896</guid>
      <description>&lt;p&gt;Hello reader!&lt;br&gt;
&lt;strong&gt;Weather&lt;/strong&gt; is the mix of events that happen each day in our atmosphere and is different in different parts of the world and changes over minutes, hours, days, and weeks. Rain and dull clouds, windy blue skies, cold snow, and sticky heat are very different conditions, yet they are all-weather. According to the Wikipedia definition:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Weather&lt;/strong&gt; is the state of the atmosphere. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this blog post, we will learn how to forecast weather details. We will see the implementation in Python with hardly a few lines of code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ayushi7rawat/Ultimate-Python-Resource-Hub"&gt;Check out the Repository for Ultimate Resource in python&lt;/a&gt;. Drop a star if you find it useful! Got anything to add? Open a PR on the same!&lt;/p&gt;

&lt;p&gt;You can refer to my &lt;strong&gt;YouTube video Tutorial&lt;/strong&gt; to see a working tutorial for better understanding and a step-by-step guide of the same. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/jAVVtOzQ5ww"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-will-be-covered-in-this-blog"&gt;
  &lt;/a&gt;
  What will be covered in this Blog
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;  &lt;span class="n"&gt;What&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;wttr&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;
&lt;span class="mf"&gt;2.&lt;/span&gt;  &lt;span class="n"&gt;What&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt; &lt;span class="n"&gt;Module&lt;/span&gt;
&lt;span class="mf"&gt;3.&lt;/span&gt;  &lt;span class="n"&gt;How&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;forecast&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;weather&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Let's get started!&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-wttr"&gt;
  &lt;/a&gt;
  What is wttr?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;wttr — the right way to check the weather!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;wttr.in is a console-oriented weather forecast service that supports various information representation methods like terminal-oriented ANSI-sequences for console HTTP clients (curl, httpie, or wget), HTML for web browsers, or PNG for graphical viewers.&lt;/p&gt;

&lt;p&gt;wttr.in uses &lt;a href="http://github.com/schachmat/wego"&gt;wego&lt;/a&gt; for visualization and various data sources for weather forecast information.&lt;/p&gt;

&lt;p&gt;If you wish to know more about it, you can refer to &lt;a href="https://github.com/chubin/wttr.in"&gt;&lt;strong&gt;wttr's&lt;/strong&gt; GitHub Repo&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#module-used"&gt;
  &lt;/a&gt;
  Module Used:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#requests-module"&gt;
  &lt;/a&gt;
  requests Module:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Requests&lt;/strong&gt; is a simple, yet elegant HTTP library. It allows you to send HTTP/1.1 requests extremely easily. Requests officially support Python 2.7 &amp;amp; 3.5+.&lt;/p&gt;

&lt;p&gt;If you wish to know more about it, you can refer to &lt;a href="https://docs.python-requests.org/en/master/"&gt;&lt;strong&gt;Requests Module&lt;/strong&gt; Documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now that you are familiar with &lt;em&gt;Requests Module&lt;/em&gt; basics and have acquired basic knowledge of &lt;em&gt;wttr,&lt;/em&gt; we can move forward to &lt;em&gt;the coding section.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#time-to-code"&gt;
  &lt;/a&gt;
  Time to Code!
&lt;/h2&gt;

&lt;p&gt;You can find all the code at my &lt;a href="https://github.com/ayushi7rawat/Youtube-Projects/tree/master/Weather%20Forecast"&gt;GitHub Repository&lt;/a&gt;. &lt;strong&gt;Drop a star&lt;/strong&gt; if you find it useful.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cifzmz8L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623385811809/P3sI8iBxw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cifzmz8L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623385811809/P3sI8iBxw.png" alt="carbon (1).png"&gt;&lt;/a&gt;&lt;br&gt;
In order to access the Python library, you need to install it into your Python environment&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we need to import the package into our python script. Use the following command to do so.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have imported the library using the command &lt;code&gt;import requests&lt;/code&gt;, let's proceed.&lt;/p&gt;

&lt;p&gt;Let's ask the user to input the city name for which he/she wishes to fetch the weather details.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;city&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'input the city name'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also hard-code the value if you will only check for yourself.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;city&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'bhopal'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's display a simple message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Displaying Weather report for: '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#output:
&lt;/span&gt;&lt;span class="n"&gt;Displaying&lt;/span&gt; &lt;span class="n"&gt;Weather&lt;/span&gt; &lt;span class="n"&gt;report&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;bhopal&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's define the URL, We will make use of &lt;code&gt;format&lt;/code&gt; to pass city as a parameter here.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'https://wttr.in/{}'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's time to make use of the &lt;code&gt;requests&lt;/code&gt; module.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our resultant data is stored in &lt;code&gt;res&lt;/code&gt;. We will make use of the &lt;code&gt;text&lt;/code&gt; method to extract our desired weather details and let's display the result.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how the Weather Forecast will look like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CQWIUZO8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623385775384/Hf5_78w-f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CQWIUZO8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623385775384/Hf5_78w-f.png" alt="output.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Isn't it beautiful? And with that, it's a wrap!  I hope you found the article useful! Share in the comments below.&lt;br&gt;
I create content about &lt;strong&gt;Career, Blogging, Programming, and Productivity&lt;/strong&gt;, If this is something that interests you, please share the article with your friends and connections. You can also subscribe to my newsletter to get updates every time I write something!&lt;/p&gt;

&lt;p&gt;Thank you for reading, If you have reached so far, please like the article, It will encourage me to write more such articles. Do share your valuable suggestions, I appreciate your honest feedback!&lt;/p&gt;

&lt;p&gt;I would strongly recommend you to Check out the &lt;a href="https://www.youtube.com/watch?v=jAOkWehMF6E"&gt;YouTube video&lt;/a&gt; of the same and &lt;strong&gt;don't forget to subscribe to my Channel&lt;/strong&gt;. I would love to connect with you at &lt;a href="https://twitter.com/ayushi7rawat"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/ayushi7rawat/"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You should definitely check out my other Blogs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/python-39-all-you-need-to-know"&gt;Python 3.9: All You need to know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/github-cli-10-all-you-need-to-know"&gt;GitHub CLI 1.0: All you need to know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/how-to-make-your-own-google-chrome-extension-1"&gt;How to make your own Google Chrome Extension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/run-javascript-from-python"&gt;Run Javascript from Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/automate-whatsapp-using-python"&gt;Automate WhatsApp using Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/automate-cowin-vaccine-slots-availablity-using-python"&gt;Automate Cowin Vaccine slots Availability using Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ayushirawat.com/what-is-competitive-programming-or-beginners-guide"&gt;What is Competitive Programming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scied.ucar.edu/learning-zone/how-weather-works/weather"&gt;https://scied.ucar.edu/learning-zone/how-weather-works/weather&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Weather"&gt;https://en.wikipedia.org/wiki/Weather&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chubin/wttr.in"&gt;https://github.com/chubin/wttr.in&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/requests/"&gt;https://pypi.org/project/requests/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python-requests.org/en/master/"&gt;https://docs.python-requests.org/en/master/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See you in my next Blog article, Take care!!&lt;/p&gt;

</description>
      <category>python</category>
      <category>computerscience</category>
      <category>career</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Using the GraphCMS Mutation API to import content from CSV</title>
      <author>Jamie Barton</author>
      <pubDate>Fri, 11 Jun 2021 13:19:01 +0000</pubDate>
      <link>https://dev.to/graphcms/using-the-graphcms-mutation-api-to-import-content-from-csv-4254</link>
      <guid>https://dev.to/graphcms/using-the-graphcms-mutation-api-to-import-content-from-csv-4254</guid>
      <description>&lt;p&gt;Migrating from any platform to another isn't a straightforward process, the same goes for a Headless CMS. GraphCMS provides the SDK, APIs, and UI to make the process easier to create, and manage your schema and content.&lt;/p&gt;

&lt;p&gt;The GraphCMS schema and Content API is completely designed by you. This means any content types, and fields you add will immediately be available via the API. There are a few system content types, and &lt;a href="https://graphcms.com/docs/schema/system-fields"&gt;system fields&lt;/a&gt; you get out of the box, but you can use as much, or as little as you need.&lt;/p&gt;

&lt;p&gt;Before you begin creating any schema, or content, take a look at what content, and content types (referred to as "models" at GraphCMS) you already have, and what they may look like in GraphCMS.&lt;/p&gt;

&lt;p&gt;GraphCMS supports over a dozen &lt;a href="https://graphcms.com/docs/schema/field-types"&gt;field types&lt;/a&gt;, everything from regular strings, booleans, dates, polymorphic relations (Union Types) to remote field level resolvers that let you fetch content from other APIs.&lt;/p&gt;

&lt;p&gt;You'll want to begin by deciding on the models, and fields you need.&lt;/p&gt;

&lt;p&gt;Some users migrating prefer to take the time now to normalize their schema in a way that could not be done before, but this can often lead to manual intervention when importing content.&lt;/p&gt;

&lt;p&gt;If you don't normalize this now, you can always use String, and JSON fields to represent as much of your data without any modification, however you'll lose some benefits with filtering that data at an API later if fields aren't set to their best field types.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-explore-your-current-data-and-relations"&gt;
  &lt;/a&gt;
  1. Explore your current data, and relations
&lt;/h2&gt;

&lt;p&gt;Look at your existing data, and export it to a format such as JSON, or CSV. You can use this export to inspect your existing content types, and field names, as well as any relations between data.&lt;/p&gt;

&lt;p&gt;For the purposes of this article, we'll use a very basic CSV of authors:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;firstName;lastName
Jamie;Barton
Michael;Lukaszczyk
Daniel;Winter
Jonas;Faber
Bruno;Scheufler
Aien;Saidi
Pablo;Fernandez Busch
Marcos;Pasqualino
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-create-your-new-schema"&gt;
  &lt;/a&gt;
  2. Create your new schema
&lt;/h2&gt;

&lt;p&gt;You can use the GraphCMS schema editor UI to manage your schema, or use the &lt;a href="https://github.com/graphcms/management-sdk"&gt;Management SDK&lt;/a&gt; to create your models, fields, enums, relations programmatically.&lt;/p&gt;

&lt;p&gt;In the example below we'll import the &lt;code&gt;@graphcms/management&lt;/code&gt; dependency, and create a model, and add some fields.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// migration.js&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;newMigration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;FieldType&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@graphcms/management&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;migration&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newMigration&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;authToken&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;migration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createModel&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;apiId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Author&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;apiIdPlural&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Authors&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Author&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;author&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addSimpleField&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;apiId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;firstName&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;First Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;FieldType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;author&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addSimpleField&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;apiId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lastName&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Last Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;FieldType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;migration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ℹ️ You'll need your GraphCMS endpoint, and a Permanent Auth Token with Management API access granted.&lt;/p&gt;

&lt;p&gt;Next you'll need to run this with node. If you'd like to see the result, or any errors of the migration, you can opt to run this migration in the foreground by passing &lt;code&gt;true&lt;/code&gt; as the first argument to &lt;code&gt;run()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;migration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;foreground&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Depending on what filename you gave the migration, you can run &lt;code&gt;node migration.js&lt;/code&gt; from the command line.&lt;/p&gt;

&lt;p&gt;ℹ️ If you &lt;a href="https://graphql.org/learn/introspection/"&gt;introspect&lt;/a&gt; your GraphCMS endpoint, or visit the &lt;a href="https://app.graphcms.com/"&gt;schema editor UI&lt;/a&gt;, you'll notice the model "Author" with the fields "First Name", and "Last Name".&lt;/p&gt;

&lt;p&gt;There are many other options available using the Management SDK, so it's recommended you read through the &lt;a href="https://github.com/graphcms/management-sdk"&gt;documentation&lt;/a&gt;, and understand everything that is available before using it.&lt;/p&gt;

&lt;p&gt;Now we've some schema, it's time to import content!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-import-your-existing-content"&gt;
  &lt;/a&gt;
  3. Import your existing content
&lt;/h2&gt;

&lt;p&gt;Before you can begin creating any content within GraphCMS, you'll want to inspect the &lt;a href="https://graphcms.com/docs/content-api/mutations#auto-generated-mutations"&gt;auto generated GraphQL mutations&lt;/a&gt; for your models.&lt;/p&gt;

&lt;p&gt;Let's take a look at mutations are added to the GraphCMS GraphQL schema for the new "Author" model:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="err"&gt;createAuthor(data:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorCreateInput&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="err"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Author&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;updateAuthor(where:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorWhereUniqueInput&lt;/span&gt;&lt;span class="p"&gt;!,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;data:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorUpdateInput&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="err"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Author&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;deleteAuthor(where:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorWhereUniqueInput&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="err"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Author&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;upsertAuthor(&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;where:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorWhereUniqueInput&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;upsert:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorUpsertInput&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Author&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;publishAuthor(&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;where:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorWhereUniqueInput&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;to:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[Stage&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[PUBLISHED]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Author&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;unpublishAuthor(&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;where:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorWhereUniqueInput&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;from:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[Stage&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[PUBLISHED]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Author&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;updateManyAuthorsConnection(&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;where:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorManyWhereInput&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;data:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorUpdateManyInput&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;skip:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;first:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;last:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;before:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;ID&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;after:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;ID&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorConnection&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;deleteManyAuthorsConnection(&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;where:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorManyWhereInput&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;skip:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;first:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;last:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;before:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;ID&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;after:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;ID&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorConnection&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;publishManyAuthorsConnection(&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;where:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorManyWhereInput&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;from:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Stage&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;DRAFT&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;to:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[Stage&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[PUBLISHED]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;skip:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;first:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;last:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;before:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;ID&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;after:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;ID&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorConnection&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;unpublishManyAuthorsConnection(&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;where:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorManyWhereInput&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;stage:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Stage&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;DRAFT&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;from:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[Stage&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[PUBLISHED]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;skip:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;first:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;last:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Int&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;before:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;ID&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;after:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;ID&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AuthorConnection&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll want to inspect the types referenced above, but if we take the &lt;code&gt;AuthorCreateInput&lt;/code&gt; which we'll need when importing content, you can see we provide some values:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;input&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;AuthorCreateInput&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;createdAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;updatedAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Creating an author will return the following &lt;code&gt;Author&lt;/code&gt; type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;interface&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;stage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Stage&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;implements&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;stage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Stage&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;documentInStages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;stages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Stage&lt;/span&gt;&lt;span class="p"&gt;!]!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;PUBLISHED&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DRAFT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;QA&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;includeCurrent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;inheritLocale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="p"&gt;!]!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;createdAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;createdBy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;locales&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Locale&lt;/span&gt;&lt;span class="p"&gt;!]):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;updatedAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;updatedBy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;locales&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Locale&lt;/span&gt;&lt;span class="p"&gt;!]):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;publishedAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;publishedBy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;locales&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Locale&lt;/span&gt;&lt;span class="p"&gt;!]):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;history&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;skip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;stageOverride&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Stage&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Version&lt;/span&gt;&lt;span class="p"&gt;!]!&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since your data is mostly like of a different shape, and structure than it was before, it's quite difficult to create a 1:1 mapping, and import from your existing database to GraphCMS. Because of this you will want to consider tweaking your current dataset to match your new input types.&lt;/p&gt;

&lt;p&gt;Now you're ready to import, you should manage the imports in a queue.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;csvToJson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getJsonFromCsv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./data.csv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;queue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Queue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;GraphCMS Import&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createJob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;backoff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fixed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;job succeeded&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;jobId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`[SUCCESS]: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;jobId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="nx"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;job failed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;jobId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`[FAILED]: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;jobId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; (&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;)`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;createContentEntry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When each job is processed, it executes the &lt;code&gt;createContentEntry&lt;/code&gt; function. This function is what will make a request to GraphCMS to perform a GraphQL mutation, specifically  &lt;code&gt;createAuthor&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createContentEntry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;variables&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;GraphQLClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GRAPHCMS_ENDPOINT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;Authorization&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`Bearer &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GRAPHCMS_TOKEN&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;gql&lt;/span&gt;&lt;span class="s2"&gt;`
    mutation createAuthor($firstName: String, $lastName: String) {
      createAuthor(data: { firstName: $firstName, lastName: $lastName }) {
        id
      }
    }
  `&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;variables&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it!&lt;/p&gt;

&lt;p&gt;Hopefully this article was useful for giving you some ideas on how you can manage importing content to GraphCMS.&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>headlesscms</category>
      <category>import</category>
    </item>
    <item>
      <title>Cloud automation in 2021: The new normal in the tech industry</title>
      <author>CAST AI</author>
      <pubDate>Fri, 11 Jun 2021 13:08:15 +0000</pubDate>
      <link>https://dev.to/castai/cloud-automation-in-2021-the-new-normal-in-the-tech-industry-1oc7</link>
      <guid>https://dev.to/castai/cloud-automation-in-2021-the-new-normal-in-the-tech-industry-1oc7</guid>
      <description>&lt;p&gt;Scaling, provisioning, and configuring cloud resources manually often results in errors that can affect your availability or performance. Solution? Cloud automation.&lt;/p&gt;

&lt;p&gt;Keep on reading to discover the most impactful use cases of cloud automation across the tech industry.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I prepared this guide to help you get started:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#whatis"&gt;What is cloud automation?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#benefits"&gt;What are the benefits of cloud automation?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#autovs"&gt;Cloud automation vs. orchestration - what’s the difference?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#usecases"&gt;Cloud automation use cases that showcase its power&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#usecase1"&gt;1. Auto-provisioning cloud resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usecase2"&gt;2. Mitigating cloud sprawl and avoiding waste&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usecase3"&gt;3. Enabling Infrastructure as Code (IaC)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usecase4"&gt;4. Enhancing application development and testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usecase5"&gt;5. Making hybrid cloud work&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#kubernetes"&gt;Does Kubernetes count as cloud automation?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#areyouready"&gt;Are you ready for cloud automation?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="whatis"&gt;What is cloud automation?&lt;/h2&gt;

&lt;p&gt;Cloud service providers have definitely made accessing resources on demand easier, but not managing them. Just imagine that you have to configure virtual machines, create VM clusters, set up virtual networks, and manage both the availability and performance. &lt;/p&gt;

&lt;p&gt;Automation takes all these tasks off your plate. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Cloud automation is a set of processes and tools that reduce the manual effort and time your team spends on provisioning and managing cloud workloads and services. And you can apply cloud automation to private, public, and hybrid environments.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The main value of automating your cloud setup is eliminating repetitive and manual processes of deploying and managing cloud workloads. They’re inefficient and error-prone, leading to troubleshooting that, in turn, affects your workload’s availability. &lt;/p&gt;

&lt;p&gt;Moreover, manual cloud deployment might result in security vulnerabilities that can put your company at risk. Automation also helps to reduce the variability and complexity of your infrastructure and tech stack.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The truth is that if you want DevOps to work, you need Infrastructure as Code (IaC), tight feedback loops, and continuous delivery. And they all rely on automation.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How do teams achieve automation? By using orchestration and automation tools that run on top of the virtualized environment.&lt;/p&gt;

&lt;h2 id="benefits"&gt;What are the benefits of cloud automation?&lt;/h2&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xSBVHWg8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/06/Benefits-of-cloud-automation.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xSBVHWg8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/06/Benefits-of-cloud-automation.png" alt="Benefits of cloud automation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Reducing IT infra expenses&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;By reducing the amount of manual effort in managing cloud-based operations, you’re going to accelerate your processes - or even carry them out without lifting a finger. &lt;/p&gt;

&lt;p&gt;Fewer manual processes mean fewer errors and less time wasted on diagnosing and debugging (and more time developing new things and innovating).&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Enabling continuous deployment&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The idea behind continuous deployment is automating the application deployment pipeline to enable more frequent updates. Teams striving to build a smooth continuous deployment process and working in line with DevOps best practices can reap a lot of benefits from automation tools that automate deployments to cloud-based environments.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Making the most of the cloud&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Cloud automation tools are here to help teams use cloud infrastructure to the fullest. It can cover and impact many areas like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;automated storage and backups, &lt;/li&gt;
&lt;li&gt;security and compliance management,&lt;/li&gt;
&lt;li&gt;applying changes to configurations and settings,&lt;/li&gt;
&lt;li&gt;deploying code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;strong&gt;Improving security and resilience&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Automating sensitive tasks is a smart move. That way, you will no longer need several people to log into mission-critical systems. This dramatically reduces the risk of human-made error and account compromise. &lt;/p&gt;

&lt;p&gt;Building security best practices into automated workflows is a path to enforcing security principles in every single deployment.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Enhancing backup processes&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;System backups are a must-have if you’re looking to protect your systems from risks ranging from equipment failure to cyber attacks. To improve your resilience, automate backups on the cloud or back up your on-premises systems automatically to a cloud-based environment. &lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Taking governance to the next level&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;When teams set up systems manually or on an ad-hoc basis, admins might end up with low visibility of what’s actually running. How can they control the infrastructure without a centralized view? &lt;/p&gt;

&lt;p&gt;This is another automation superpower. It sets up resources in a standardized way, giving you more control over the infrastructure running across your company.&lt;/p&gt;

&lt;h2 id="autovs"&gt;Cloud automation vs. orchestration - what’s the difference?&lt;/h2&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EGNh5bMt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/06/image-12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EGNh5bMt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/06/image-12.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cloud automation and cloud orchestration both come in handy for building an effective cloud strategy. But they’re not one and the same thing. Understanding the difference between them and their purposes is essential.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;Cloud automation &lt;/strong&gt;is about using cloud management tools for completing tasks without any manual work. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We’re talking about tasks like provisioning servers, backing up data, or identifying and eliminating processes that aren’t used. Cloud automation can do all of that without engaging any time or effort of your team. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;Cloud orchestration &lt;/strong&gt;is about achieving your goals in the cloud infrastructure by organizing automated tasks.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The idea is to bring low-level tasks together to create processes and then coordinate them throughout the entire infrastructure, often across multiple systems or locations. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;While &lt;strong&gt;cloud automation&lt;/strong&gt; defines the deployment and management tasks up for automation, &lt;strong&gt;cloud orchestration &lt;/strong&gt;coordinates these defined tasks into a strategic approach that brings you closer to your goals. &lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You can make automation work without orchestration, but combining these two techniques brings the best results.&lt;/p&gt;

&lt;h2 id="usecases"&gt;Cloud automation use cases that showcase its power&lt;/h2&gt;

&lt;h3 id="usecase1"&gt;1. Auto-provisioning cloud resources&lt;/h3&gt;

&lt;p&gt;Choosing &lt;a href="https://cast.ai/blog/aws-eks-vs-ecs-vs-fargate-where-to-manage-your-kubernetes/" rel="noreferrer noopener"&gt;the right VM for the job&lt;/a&gt; is tough because you’re facing many different choices with unique parameters. How are you supposed to know which ones have the optimal cost vs. performance ratio?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You can delegate the tasks of rightsizing and &lt;a href="https://thenewstack.io/reduce-kubernetes-costs-using-autoscaling-mechanisms" rel="noreferrer noopener"&gt;autoscaling&lt;/a&gt; to an instance selection algorithm. &lt;/strong&gt;It’s capable of choosing the best instance types that meet the requirements of your application whenever your cluster needs extra nodes. Your workloads will run at maximum performance and minimum cost.&lt;/p&gt;

&lt;p&gt;Here’s how it works if you run your app in a managed Kubernetes solution that takes care of automated provisioning: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YfrqWCeL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/I9Y1BfGZDMv74N0A1BDnDAttYaa64_2mIn9POQ91D0ghpKZswC2SqUDpOxmuJK7akpRiwQ5tICYhQccuy-gaNje0jNYWslNeDR_hud1S5LndLSKDbC38l5lFr6CcsNokW8sZtf4s" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YfrqWCeL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/I9Y1BfGZDMv74N0A1BDnDAttYaa64_2mIn9POQ91D0ghpKZswC2SqUDpOxmuJK7akpRiwQ5tICYhQccuy-gaNje0jNYWslNeDR_hud1S5LndLSKDbC38l5lFr6CcsNokW8sZtf4s" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;At 15:41, the application starts experiencing a surge of traffic. The tool creates new pods to handle it, but they have no place to run. We need new CPU cores.&lt;/li&gt;
&lt;li&gt;Within 2 minutes, the solution adds a new 16-core node automatically.&lt;/li&gt;
&lt;li&gt;At 15:45, some more traffic appears in the application. The tool adds an extra 8-core node within one minute so that the application can handle the traffic.&lt;/li&gt;
&lt;li&gt;Once the traffic is gone, the solution instantly retires 2 nodes to avoid resource waste.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="usecase2"&gt;2. Mitigating cloud sprawl and avoiding waste&lt;/h3&gt;

&lt;p&gt;Cloud automation solutions can shut down unused instances and processes to reduce your cloud costs. And losing track of cloud-deployed instances is more common than you think:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L70NWRXI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/jaLASR-L_l759KNHX8UaArI5pJM4-xZvsHukELJIUs9hhe-_Z_cKWUq00xgQKjlBGP-88l0wSvXa6XQsZG5x4EL8l_dYsmxN1_C6shHReQzJ5mIZT8xXYhhTQXJ88fivIYKipdRL" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L70NWRXI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/jaLASR-L_l759KNHX8UaArI5pJM4-xZvsHukELJIUs9hhe-_Z_cKWUq00xgQKjlBGP-88l0wSvXa6XQsZG5x4EL8l_dYsmxN1_C6shHReQzJ5mIZT8xXYhhTQXJ88fivIYKipdRL" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Many teams face orphaned instances that have no ownership or battle shadow IT projects that come with poorly accounted for resources in the cloud. Such examples of zombie infrastructure are still activated and generate a monthly bill, but you get zero value from the assets.&lt;/p&gt;

&lt;p&gt;Cloud automation can streamline the process of identifying zombie IT infrastructure and addressing the problem before it snowballs into a massive &lt;a href="https://cast.ai/blog/how-to-solve-the-costliest-cloud-bill-issues/"&gt;cloud bill&lt;/a&gt; at the end of the month.&lt;/p&gt;

&lt;h3 id="usecase3"&gt;3. Enabling Infrastructure as Code (IaC)&lt;/h3&gt;

&lt;p&gt;Establishing Infrastructure as Code (IaC) is another use case for cloud automation. In IaC, IT infrastructure is defined in configuration files and launched automatically in line with that configuration. These configuration files undergo the same processes as source code - they need to be kept in version control, managed, tested, and developed. &lt;/p&gt;

&lt;p&gt;With cloud automation, you can&lt;strong&gt; extend the control over nearly all infrastructure aspects to the cloud platform&lt;/strong&gt;, allowing orchestration of more complex systems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cloud automation processes can draw from resource pools and define common configuration items (like VMs, containers, or virtual private networks). &lt;/li&gt;
&lt;li&gt;Next, they can load these application components and services into the configuration items.&lt;/li&gt;
&lt;li&gt;Finally, they can assemble them to create an improved operational environment.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Here’s an example to show you how it works&lt;/strong&gt;. A cloud automation template can perform many tasks to make a microservices application work:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a number of containers for the application, &lt;/li&gt;
&lt;li&gt;Load components into the container clusters, &lt;/li&gt;
&lt;li&gt;Bring storage and database together, &lt;/li&gt;
&lt;li&gt;Seamlessly configure a virtual network, &lt;/li&gt;
&lt;li&gt;Create load balancers for the clusters, &lt;/li&gt;
&lt;li&gt;And open the workload to users.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="usecase4"&gt;4. Enhancing application development and testing&lt;/h3&gt;

&lt;p&gt;Continuous delivery and continuous deployment need automatically provisioned dev/test environments that are part of automated development pipelines. Automation on the public cloud is &lt;strong&gt;the primary method of serving the continuous delivery pipeline&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Modern development methods rely on a team’s ability to rapidly deploy resources and scale them to test new releases. When the testing is over, the resources should be released for reuse. Public clouds with automation tools can make that happen.&lt;/p&gt;

&lt;h3 id="usecase5"&gt;5. Making hybrid cloud work&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://cast.ai/blog/multi-cloud-vs-hybrid-cloud-whats-the-difference-and-why-does-it-matter/" rel="noreferrer noopener"&gt;Hybrid cloud environments&lt;/a&gt; are complicated, to say the least. They require careful integrations between on-premises and public cloud systems. This is where cloud automation can help. &lt;/p&gt;

&lt;p&gt;Automation solutions can &lt;strong&gt;synchronize assets between local data centers and cloud resources to make “cloud bursting” possible&lt;/strong&gt;. Cloud bursting is the process of moving loads to the cloud when the application exceeds local resources. &lt;/p&gt;

&lt;p&gt;The use of cloud automation in the hybrid cloud also enables disaster recovery scenarios with the remote site mirroring the on-premises environment.&lt;/p&gt;

&lt;h2 id="kubernetes"&gt;Does Kubernetes count as cloud automation?&lt;/h2&gt;

&lt;p&gt;If you’re using Kubernetes, you’re already one step ahead in the automation game. Sure, Kubernetes isn’t an automation solution since it doesn’t automate all the cloud resources you’re using. Still, it manages and orchestrates containers that can be used to run practically any workload on the cloud. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you’re wondering which Amazon Kubernetes service is the right fit for your application, take a look here: &lt;/em&gt;&lt;a href="https://cast.ai/blog/aws-eks-vs-ecs-vs-fargate-where-to-manage-your-kubernetes/" rel="noreferrer noopener"&gt;&lt;em&gt;AWS EKS vs. ECS vs. Fargate: Where to manage your Kubernetes?&lt;/em&gt;&lt;/a&gt;&lt;em&gt; &lt;/em&gt;&lt;/p&gt;

&lt;h2 id="areyouready"&gt;Are you ready for cloud automation?&lt;/h2&gt;

&lt;p&gt;Cloud automation saves your team lots of time and effort. It’s faster, more scalable, and more secure, allowing you to build more predictable and reliable workflows. &lt;/p&gt;

&lt;p&gt;The technology is emerging, but the implementations and reports so far show that effective automation is bound to become a real force multiplier for businesses. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Are you using any automation tools to provision, manage, or scale your cloud resources? Are you planning to experiment with automated Ops processes?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Give us a shout out in the comments, we’re happy to start a conversation about automating cloud processes.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>aws</category>
      <category>googlecloud</category>
      <category>azure</category>
    </item>
    <item>
      <title>How to Level Up Your React Conditionals</title>
      <author>Reed Barger</author>
      <pubDate>Fri, 11 Jun 2021 13:04:11 +0000</pubDate>
      <link>https://dev.to/reedbarger/how-to-level-up-your-react-conditionals-3hom</link>
      <guid>https://dev.to/reedbarger/how-to-level-up-your-react-conditionals-3hom</guid>
      <description>&lt;p&gt;Do you write conditionals correctly within your React applications?&lt;/p&gt;

&lt;p&gt;Good conditionals are an essential part of any React application. We use conditionals to show or hide elements or components in our application.&lt;/p&gt;

&lt;p&gt;In short--to be an effective React developer, you must know how to write good conditionals.&lt;/p&gt;

&lt;p&gt;Let's go over all of the major patterns you need to know to write clean, concise conditionals, plus what anti-patterns you should avoid.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#want-your-own-copy%E2%80%AC"&gt;
  &lt;/a&gt;
  Want Your Own Copy?‬ 📄
&lt;/h2&gt;

&lt;p&gt;*****&lt;strong&gt;&lt;em&gt;&lt;a href="http://bit.ly/react-conditionals-2021"&gt;Download the cheatsheet in PDF format here&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;***** (it takes 5 seconds).&lt;/p&gt;

&lt;p&gt;Here are some quick wins from grabbing the downloadable version:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Quick reference guide to review however and whenever&lt;/li&gt;
&lt;li&gt;  Tons of copyable code snippets for easy reuse&lt;/li&gt;
&lt;li&gt;  Read this massive guide wherever suits you best. On the train, at your desk, standing in line... anywhere.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There's a ton of great stuff to cover, so let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-use-ifstatements-primarily-no-need-for-else-or-elseif"&gt;
  &lt;/a&gt;
  1. Use if-statements primarily. No need for else or else-if.
&lt;/h2&gt;

&lt;p&gt;Let's start with the most basic type of conditional in React. If we have data, we want to display it. If not, we want to show nothing.&lt;/p&gt;

&lt;p&gt;Simple! How would we write that?&lt;/p&gt;

&lt;p&gt;Let's say we are fetching an array of posts data from an API. When it is fetching the data, &lt;code&gt;posts&lt;/code&gt; has a value of &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can check for that value with a simple if-statement.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usePosts&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// posts === undefined at first&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PostList&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The reason this patterns works is that we are returning early. If the condition is met (if &lt;code&gt;!posts&lt;/code&gt; is has a boolean value of &lt;code&gt;true&lt;/code&gt;), we display nothing in our component by returning &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If statements also work when you have multiple conditions that you want to check for.&lt;/p&gt;

&lt;p&gt;For example, if you want to check for loading and error states before you display your data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usePosts&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Loading&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isError&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PostList&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that we can reuse the if-statement and do not have to write if-else or if-else-if, which cuts down on the code that we have to write and is still just as readable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-use-the-ternary-operator-to-write-conditionals-in-your-jsx"&gt;
  &lt;/a&gt;
  2. Use the ternary operator to write conditionals in your JSX
&lt;/h2&gt;

&lt;p&gt;If-statements are great when we want to exit early and display nothing or a totally different component.&lt;/p&gt;

&lt;p&gt;However, what if we don't want to write a conditional separate from our returned JSX, but directly within it?&lt;/p&gt;

&lt;p&gt;In React, we must include expressions (something that resolves to a value), not statements within our JSX.&lt;/p&gt;

&lt;p&gt;This is why we must write conditionals in our JSX only with ternaries and not if-statements.&lt;/p&gt;

&lt;p&gt;For example, if we wanted to display one nested component on a mobile-sized screen and another on a larger screen, a ternary would be a perfect choice:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isMobile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useWindowSize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Header&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Sidebar&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isMobile&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MobileChat&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Chat&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/main&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Most developers think this the only pattern they can leverage when it comes to using ternaries.&lt;/p&gt;

&lt;p&gt;In fact, you don't have to clutter your component tree by including all of these ternaries directly in your returned JSX.&lt;/p&gt;

&lt;p&gt;Since ternaries resolve to a value, remember that you can assign the result of a ternary to a variable, which you can then use where you like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isMobile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useWindowSize&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ChatComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isMobile&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MobileChat&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Chat&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Header&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Sidebar&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ChatComponent&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/main&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-no-else-condition-use-the-ampamp-and-operator"&gt;
  &lt;/a&gt;
  3. No else condition? Use the &amp;amp;&amp;amp; (and) operator
&lt;/h2&gt;

&lt;p&gt;In many cases, you will want to use a ternary in your JSX, but will realize that if that condition is not met, you don't want to display anything.&lt;/p&gt;

&lt;p&gt;This ternary would look like the following: &lt;code&gt;condition ? &amp;lt;Component /&amp;gt; : null&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We&lt;/p&gt;

&lt;p&gt;If you don't have an else condition, use the &amp;amp;&amp;amp; operator&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;PostFeed&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hasFinished&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usePosts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PostList&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;hasFinished&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;You&lt;/span&gt; &lt;span class="nx"&gt;have&lt;/span&gt; &lt;span class="nx"&gt;reached&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;)}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-switch-statements-for-multiple-conditions"&gt;
  &lt;/a&gt;
  4. Switch statements for multiple conditions
&lt;/h2&gt;

&lt;p&gt;What if we are in a situation where have many different conditions, more than just one or two?&lt;/p&gt;

&lt;p&gt;We could certainly write multiple if-statements, but all of these if statements, as we've seen earlier, are written above our returned JSX.&lt;/p&gt;

&lt;p&gt;Too many if-statements can clutter our components. How do we make our code cleaner?&lt;/p&gt;

&lt;p&gt;We can often extract multiple conditions to a separate component which contains a switch statement.&lt;/p&gt;

&lt;p&gt;For example, we have a Menu component that we can toggle and display different tabs.&lt;/p&gt;

&lt;p&gt;We have tabs that can display user, chat and room data as you see below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Menu&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;menu&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setMenu&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;toggleMenu&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setMenu&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MenuItem&lt;/span&gt; &lt;span class="nx"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;menu&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggleMenu&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Toggle&lt;/span&gt; &lt;span class="nx"&gt;Menu&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MenuItem&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;menu&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;menu&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Chats&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Rooms&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we are using a dedicated MenuItem component with a switch statement, our parent Menu component is not cluttered by conditional logic and we can easily see what component will be displayed given the &lt;code&gt;menu&lt;/code&gt; state.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-want-conditionals-as-components-try-jsx-control-statements"&gt;
  &lt;/a&gt;
  5. Want conditionals as components? Try JSX Control Statements
&lt;/h2&gt;

&lt;p&gt;It's greatly beneficial to be able to use plain JavaScript within our React components, but if you want even more declarative and straightforward conditionals, check out the React library JSX control statements.&lt;/p&gt;

&lt;p&gt;You can bring it into your React projects by running the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save-dev&lt;/span&gt; babel-plugin-jsx-control-statements
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Additionally, you can list it in your .babelrc file like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"plugins"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"jsx-control-statements"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a Babel plugin that allows you to use React components directly within your JSX to write very easy to understand conditionals.&lt;/p&gt;

&lt;p&gt;The best way to understand the use of such a library is by taking a look at an example. Let's rewrite one of our previous examples with the help of JSX control statements:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usePosts&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Choose&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;When&lt;/span&gt; &lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Loading&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/When&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;When&lt;/span&gt; &lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isError&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/When&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Otherwise&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PostList&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Otherwise&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Choose&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see that there's no if or ternary statement in sight and we have a very readable component structure.&lt;/p&gt;

&lt;p&gt;Give JSX control statements a try in your next React project and see if a library like this is for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  ***&lt;strong&gt;&lt;em&gt;What's Next&lt;/em&gt;&lt;/strong&gt;***
&lt;/h2&gt;

&lt;p&gt;I hope this guide gave you some helpful patterns to write great React conditionals.&lt;/p&gt;

&lt;p&gt;If you want a copy of this cheatsheet to keep for learning purposes, you can &lt;a href="http://bit.ly/react-conditionals-2021"&gt;download a complete PDF version of this cheatsheet here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also check out these ultimate resources, made to take your React skills to the next level, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/react-for-beginners-2021/"&gt;React for beginners: The complete guide&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/how-to-code-react-hooks/"&gt;How to write custom React hooks&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/react-props-cheatsheet/"&gt;The complete guide to React props&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/fetch-data-in-react/"&gt;How to fetch data in React from front to back&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/react-app-node-backend/"&gt;How to build fullstack apps in React with Node&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/what-to-know-about-react-state/"&gt;Learn more about React state&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/react-router-cheatsheet/"&gt;How to add routing to your React app with React Router&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/react-cheatsheet-2021/"&gt;Learn every part of React with the advanced React cheatsheet&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Build your MEAN project with automatic Express.js management </title>
      <author>Kirk</author>
      <pubDate>Fri, 11 Jun 2021 12:20:34 +0000</pubDate>
      <link>https://dev.to/scaledynamics/build-your-mean-project-with-automatic-express-js-management-3a79</link>
      <guid>https://dev.to/scaledynamics/build-your-mean-project-with-automatic-express-js-management-3a79</guid>
      <description>&lt;p&gt;Hi there, some of you guys might already know that we built a &lt;a href="https://dev.to/scaledynamics/no-need-to-handle-express-js-with-this-mern-stack-project-template-1bm6"&gt;MERN stack template&lt;/a&gt; earlier that helps you skip Express.js.&lt;/p&gt;

&lt;p&gt;Regarding some of your requests, we would like to bring you a new open-source template. And this time, it is for MEAN stack 😉&lt;/p&gt;

&lt;p&gt;And you know what, you can still develop both front &amp;amp; backend with live-reload and deploy with a simple command-line while the Express.js part is managed 100% automatically, isn’t that great? 🤯&lt;/p&gt;

&lt;p&gt;Clone it right here 👉 &lt;a href="https://github.com/ScaleDynamics/angular-mongodb-template"&gt;MEAN ready-to-deploy template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let’s get to know how the template can help you!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-mean-stack-but-you-only-code-man"&gt;
  &lt;/a&gt;
  A MEAN stack but you only code MAN 🤯
&lt;/h2&gt;

&lt;p&gt;Besides the MERN stack that stands for MongoDB, Express, React and Node.js, we still have the MEAN stack for people who use Angular instead of React. It is also considered as a quite popular one for Full Stack JavaScript developers.&lt;/p&gt;

&lt;p&gt;Quite similar to the MERN template, this MEAN template is also configured specifically for the ScaleDynamics cloud platform on MIT license. It offers all you need to start developing your MEAN based apps/services:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;One command to develop with live-reload&lt;/li&gt;
&lt;li&gt;Another one to deploy, make your app/service available on a URL&lt;/li&gt;
&lt;li&gt;No Express.js layers management, the platform takes care of them automatically &lt;/li&gt;
&lt;li&gt;No HTTP/JSON coding as our compiler automatically generates its stubs required to call a Node.js function using JS objects.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don’t forget that you need a ScaleDynamics platform account, you can create your FREE  Community account &lt;a href="https://console.scaledynamics.com/auth/signup/"&gt;right here&lt;/a&gt;).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-the-template"&gt;
  &lt;/a&gt;
  How to use the template
&lt;/h2&gt;

&lt;p&gt;First of all, clone the template by:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ssh"&gt;&lt;code&gt;&lt;span class="k"&gt;git&lt;/span&gt; clone https://github.com/ScaleDynamics/angular-mongodb-template.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then you’ll have both frontend and backend template ready:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On the frontend, you’ll have a &lt;code&gt;angular-app&lt;/code&gt; web template app created with &lt;code&gt;angular-cli&lt;/code&gt;. To update it, open the &lt;code&gt;src&lt;/code&gt; folder where you can add, modify or delete components.&lt;/li&gt;
&lt;li&gt;The backend contains a node module and a MongoDB module. You can update the frontend/backend as you need to build your own app.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To start developing with the template, go in &lt;code&gt;frontend/angular-app&lt;/code&gt; folder and run those commands below:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-the-project"&gt;
  &lt;/a&gt;
  Install the project
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ssh"&gt;&lt;code&gt;&lt;span class="k"&gt;npm&lt;/span&gt; install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#log-in-to-the-scaledynamics-platform"&gt;
  &lt;/a&gt;
  Log in to the ScaleDynamics Platform
&lt;/h3&gt;

&lt;p&gt;Don’t forget to login to ScaleDynamics Platform to start developing. In case you don’t have an account yet, take 2 mins to create a free community account &lt;a href=""&gt;here&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ssh"&gt;&lt;code&gt;&lt;span class="k"&gt;npx&lt;/span&gt; warp login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#develop-with-livereload"&gt;
  &lt;/a&gt;
  Develop with live-reload
&lt;/h3&gt;

&lt;p&gt;Start a live-reload development session by using this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ssh"&gt;&lt;code&gt;&lt;span class="k"&gt;npm&lt;/span&gt; run start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can always update the frontend or the backend code, it will be rebuilt at each modification.&lt;/p&gt;

&lt;p&gt;Please note that you’ll need to select an existing project or create a new one as you want before running this command. On the ScaleDynamics platform, a project identifies an application or a microservice. For more details on projects, see the &lt;a href="https://docs.scaledynamics.com"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deploy-with-scaledynamics"&gt;
  &lt;/a&gt;
  Deploy with ScaleDynamics
&lt;/h3&gt;

&lt;p&gt;When it comes to deployment, you’ll need to compile and minimize your project for production by using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ssh"&gt;&lt;code&gt;&lt;span class="k"&gt;npm&lt;/span&gt; run build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then the deploy command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ssh"&gt;&lt;code&gt;&lt;span class="k"&gt;npm&lt;/span&gt; run deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, beside selecting a project, you’ll also have to select or create an environment which identifies the cloud execution environment to run your app. You can create as many as you want like ‘staging’, ‘demo’, ‘prod’... Each environment has its own URL. &lt;/p&gt;

&lt;p&gt;For more details on projects or environments, see the &lt;a href="https://docs.scaledynamics.com"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configure-mongodb-driver"&gt;
  &lt;/a&gt;
  Configure MongoDB driver
&lt;/h3&gt;

&lt;p&gt;In &lt;code&gt;src/mongodb.js&lt;/code&gt;. There is a template module that you can replace its &lt;code&gt;URI&lt;/code&gt; constant with your own.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;URI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongodb://[username:password@]host1[:port1][,...hostN[:portN]][/[defaultauthdb][?options]]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#youre-all-set"&gt;
  &lt;/a&gt;
  You’re all set!
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#creating-new-functions"&gt;
  &lt;/a&gt;
  Creating new functions
&lt;/h3&gt;

&lt;p&gt;With ScaleDynamics Platform, new functions can be called by the frontend. Add them in &lt;code&gt;index.js&lt;/code&gt; or into another module and export it. The platform manages the Express.js layers automatically.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// your code here&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;myFunction&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To access your new functions on the frontend side, adapt this code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Backend&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./.backend/hello.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;myFunction&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Backend&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#other-info"&gt;
  &lt;/a&gt;
  Other info
&lt;/h3&gt;

&lt;p&gt;And that’s it! If you need more information, check out these documentations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.scaledynamics.com/docs/frameworks"&gt;ScaleDynamics Platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angular.io/docs"&gt;Angular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/guides/"&gt;MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We hope you liked it, please let us know if you have any questions or feedback! &lt;br&gt;
Stay tuned for the Vue.js template coming up! you can subscribe, or follow us on &lt;a href="https://twitter.com/scaledynamics"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.facebook.com/scaledynamics.tech"&gt;Facebook&lt;/a&gt; and even &lt;a href="https://www.instagram.com/scaledynamicstech/"&gt;Instagram&lt;/a&gt; for more updates!&lt;br&gt;
Cheers!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How I got 1000 followers on DEV</title>
      <author>Coderslang: Become a Software Engineer</author>
      <pubDate>Fri, 11 Jun 2021 12:20:06 +0000</pubDate>
      <link>https://dev.to/coderslang/how-i-got-1000-followers-on-dev-34l7</link>
      <guid>https://dev.to/coderslang/how-i-got-1000-followers-on-dev-34l7</guid>
      <description>&lt;p&gt;I just hit my first significant milestone by getting 1000 followers on &lt;a href="http://dev.to"&gt;dev.to&lt;/a&gt; and I thank you all from the bottom of my heart. Now, I want to share my experience starting from the day I've created an account. I'm absolutely positive that you can achieve the same result (or way better) if you follow the plan.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-steps"&gt;
  &lt;/a&gt;
  First steps
&lt;/h2&gt;

&lt;p&gt;I've created an account at DEV a little over 6 months back. I was (and still am) building a &lt;a href="https://js.coderslang.com"&gt;Full-Stack JavaScript course&lt;/a&gt;, and I wanted to get feedback from the developer community.&lt;/p&gt;

&lt;p&gt;I've been coding for quite a few years, but I was completely new to writing a blog or promoting my product. I wasn't aware of any coding communities apart from Stack Overflow. And writing a personal blog on a separate domain isn't much fun when there's no one to read it.&lt;/p&gt;

&lt;p&gt;Brief googling uncovered 2 options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hashnode&lt;/li&gt;
&lt;li&gt;DEV&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I created accounts on both platforms but then decided to stick to DEV as the community seemed a lot more active here. It was Nov 27, 2020.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fur7yj8e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/dev-profile-header.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fur7yj8e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/dev-profile-header.png" alt="dev-profile-header"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#posting-into-the-void"&gt;
  &lt;/a&gt;
  Posting into the void
&lt;/h2&gt;

&lt;p&gt;As my primary goal was to get the attention of the beginner devs that want to &lt;a href="https://js.coderslang.com"&gt;learn Full-Stack JS&lt;/a&gt;, I started posting some things that I thought would be interesting for beginners.&lt;/p&gt;

&lt;p&gt;It was quite lonely as my posts didn't attract any readers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--48rpxjYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/dev-first-articles.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--48rpxjYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/dev-first-articles.png" alt="dev-first-articles"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Current numbers look fine, but they don't tell the full story. Most of the reads came in the recent weeks, and you see that there still is one article with &lt;code&gt;&amp;lt;25&lt;/code&gt; views. Probably it just sucks.&lt;/p&gt;

&lt;p&gt;I felt hopeless and was ready to declare growing my DEV following as (yet another) failed experiment, but then I got another idea.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#changing-the-strategy"&gt;
  &lt;/a&gt;
  Changing the strategy
&lt;/h2&gt;

&lt;p&gt;As the approach of "posting random things" and hoping for the better didn't quite work, I decided to change the strategy. What if I just stopped looking at the numbers and posted a new article every day?&lt;/p&gt;

&lt;p&gt;In February 2021 I decided to go for it. One day — one article.&lt;/p&gt;

&lt;p&gt;To make things easier, I only published the posts that I already wrote. This way I didn't have to spend too much time coming up with new ideas every day.&lt;/p&gt;

&lt;p&gt;Here's what I wrote in my first article about &lt;a href="https://dev.to/coderslang/js-test-1-type-conversion-in-javascript-1oed"&gt;Type Conversion in JavaScript&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A couple of months back, I've started posting &lt;a href="https://learn.coderslang.com/tags/js-test"&gt;colorful JavaScript code snippets that you can use to check your JS skills on my blog&lt;/a&gt;. Every problem has the correct answer and explanation. But I strongly suggest you first try to solve it yourself.&lt;br&gt;
Every day in February I'm going to post a new JS test here on DEV. Follow, like, comment if it's something you're interested in.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And the results immediately improved. After about a week of daily posting, I noticed that I get about 10 new followers each day.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uJIzoTny--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/dev-js-test-articles.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uJIzoTny--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/dev-js-test-articles.png" alt="dev-js-test-articles"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These aren't your regular coding tutorials or articles. Each of the posts I've published was about 200 words and consisted of 4 things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a JavaScript code snippet&lt;/li&gt;
&lt;li&gt;a question that an interviewer might ask&lt;/li&gt;
&lt;li&gt;an explanation of what's going on&lt;/li&gt;
&lt;li&gt;the correct answer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, last (but not least), I've already had the stock of those posts published at &lt;a href="http://learn.coderslang.com"&gt;learn.coderslang.com&lt;/a&gt;, so all I had to do was import them to DEV and log in once a day to hit "publish" and answer the comments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keeping-it-up"&gt;
  &lt;/a&gt;
  Keeping it up
&lt;/h2&gt;

&lt;p&gt;My February experiment was very successful. The main takeaway was that consistency and persistence are key. Show up every day, and the results will follow.&lt;/p&gt;

&lt;p&gt;The problem was the lack of new articles, so I couldn't keep up the pace and continue posting daily.&lt;/p&gt;

&lt;p&gt;I wrote a couple of longer-from articles (still under 10 minutes of reading time) and got featured in DEV Twitter with 230k followers! Here's the post about &lt;a href="https://dev.to/coderslang/javascript-asynchronous-programming-and-promises-1epl"&gt;JavaScript Promises&lt;/a&gt; that got a ton of views and likes from Twitter.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tb2Wj5Nw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/dev-twitter-post.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tb2Wj5Nw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/dev-twitter-post.png" alt="dev-twitter-post"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-better"&gt;
  &lt;/a&gt;
  Getting better
&lt;/h2&gt;

&lt;p&gt;The truth is, I'm not the best writer. And I'm not the best developer in the world either. And I'd be lying if I told you that it wouldn't matter. It definitely would.&lt;/p&gt;

&lt;p&gt;But I'm not here to compare myself with the celebrities with millions of followers. Nor am I here to brag about how great I am and how my success was inevitable.&lt;/p&gt;

&lt;p&gt;And have I told you that English is not my first language?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Got 1000 followers on DEV in 6 months 🥳&lt;/li&gt;
&lt;li&gt;Very little views/reactions in the first 3 months 🤷&lt;/li&gt;
&lt;li&gt;Consistent daily growth after I started posting a new article each day 💪&lt;/li&gt;
&lt;li&gt;Published 87 posts (average reading time - 2 minutes) ⚡️&lt;/li&gt;
&lt;li&gt;You can do the same 🚀&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uw6i1H0f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/dev-1000-followers.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uw6i1H0f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/dev-1000-followers.png" alt="dev-1000-followers.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now I have only one thing left to say.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  THANK YOU!
&lt;/h2&gt;

&lt;p&gt;And remember that if you want to get something or want to learn something new, don't let anyone stop you. Show up and get things done. The results will follow.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>devjournal</category>
      <category>motivation</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Simplify your Flutter app with Provider</title>
      <author>Carl Wills</author>
      <pubDate>Fri, 11 Jun 2021 11:50:39 +0000</pubDate>
      <link>https://dev.to/carlmobiledev/simplify-your-flutter-app-with-provider-2dkd</link>
      <guid>https://dev.to/carlmobiledev/simplify-your-flutter-app-with-provider-2dkd</guid>
      <description>&lt;p&gt;You may be aware of statefull and stateless widgets in flutter, but what if you want to share data between multiple different widgets in your app? You could pass the data between the widgets, but if you're creating something responsive that will change based on screen size, for example, you may need to structure your UI differently based on screen size or rotation. It becomes really tricky to manage the state of your application by passing that data to and from your widgets. Instead, I'd propose that you think about including a system of state management! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-state-management-anyway"&gt;
  &lt;/a&gt;
  What is State Management anyway?
&lt;/h2&gt;

&lt;p&gt;State management is the process to keep and share data across different components. It allows you to store data pertaining to the state of your application, and retrieve that data from anywhere else without needing to pass it around! You could say it helps you &lt;strong&gt;manage your state!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#okay-so-what-is-provider"&gt;
  &lt;/a&gt;
  Okay, so what is Provider?
&lt;/h2&gt;

&lt;p&gt;Provider is a package that helps with state management! In short, it inserts a widget into your widget tree that holds values of state for your app. Because of this, any children to that Provider widget can access that state because it exists within the same widget tree!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-i-start-working-with-provider"&gt;
  &lt;/a&gt;
  How do I start working with Provider?
&lt;/h2&gt;

&lt;p&gt;Just like with any package, it's a good idea to read through the documentation on pub.dev before continuing. Here's the link to the provider: &lt;a href="https://pub.dev/packages/provider"&gt;https://pub.dev/packages/provider&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Okay, so you've read the documentation, right? &lt;br&gt;
Now we can import it into our project, simply include this in your pubspec.yaml file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dependencies:
  provider: ^5.0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that you've imported the package we need start using it. To create the Provider into the widget tree you need to first identify the best spot in the widget tree (often right at the top level for small projects) and then create a Provider widget. Here's an example where I've decided to wrap my entire app in a Provider I've called &lt;strong&gt;MyProvider&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;void main() {
  runApp(ChangeNotifierProvider(
    create: (_) =&amp;gt; MyProvider(),
     child: MyApp()));
}

class MyProvider extends ChangeNotifier {
  int counter = 0;

  void increment() {
    counter++;
    notifyListeners();
  }

  void decrement() {
    counter--;
    notifyListeners();
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#so-how-do-we-access-this-and-update-it"&gt;
  &lt;/a&gt;
  So, how do we access this and update it?
&lt;/h2&gt;

&lt;p&gt;It's easy! There are a few different ways to interact with your provider. If you are trying to access or modify state from outside of a StatelessWidget.build or State.build method you must access it like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Provider.of&amp;lt;MyProvider&amp;gt;(context).increment();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are trying to access state within the build function, you can use this example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;context.watch&amp;lt;MyProvider&amp;gt;().counter;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's something really interesting about these two functions. They will trigger an update to the UI! By calling notifyListeners() at the end of the increment and decrement functions, we're telling the UI that it's state has changed and it should rebuild!&lt;/p&gt;

&lt;p&gt;There's a few other ways to read state from provider that I'd like to touch on:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;context.select((MyProvider myProvider) =&amp;gt; myProvider.counter);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Provider Select/Selector functionality is really powerful! It causes your widget to only watch for changes to a specific member of the state, instead of the whole state entity. This becomes really useful if you have multiple different variables you're trying to keep state in, but you only want your widget to care about a single one of them!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Selector&amp;lt;MyProvider, int&amp;gt;(
        builder: (context, data, child) {
          return Text("$data");
        },
        selector: (_, myProvider) =&amp;gt; myProvider.counter,
      ),
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's right! If you're building this directly in the build function and have widgets dependent on this data, you can create the appropriate Widgets that are equivalent to the context statements above! In this case I decided to make an example for the Selector widget. &lt;/p&gt;

&lt;p&gt;Lastly, if you're debugging, you can see the values of all of your providers in Flutter DevTools!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OoJCmMZu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4cezu1bb1jsk1ldh5qt5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OoJCmMZu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4cezu1bb1jsk1ldh5qt5.png" alt="Provider information shown in Flutter DevTools on the Providers tab"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I also want to mention that there's a newer state management package out the called &lt;em&gt;Riverpod&lt;/em&gt;. It's thought of as "Provider 2.0" by many and offers some awesome improvements. I'll be writing about Riverpod soon!&lt;/p&gt;

&lt;p&gt;I hope this quick run-through of the provider package and a few of its uses was helpful to you! I am not an expert at this, but knowledge sharing is always good and it's how we learn together. &lt;/p&gt;

&lt;p&gt;Thanks!&lt;br&gt;
Carl&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>mobile</category>
      <category>firstpost</category>
      <category>dart</category>
    </item>
    <item>
      <title>5 Reasons to use Django, the Python web framework</title>
      <author>Fabien Schlegel</author>
      <pubDate>Fri, 11 Jun 2021 11:50:27 +0000</pubDate>
      <link>https://dev.to/le_humch/5-reasons-to-use-django-the-python-web-framework-5adi</link>
      <guid>https://dev.to/le_humch/5-reasons-to-use-django-the-python-web-framework-5adi</guid>
      <description>&lt;p&gt;Django is a Python framework for web development. These are the five reasons why you should use it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#faster-development"&gt;
  &lt;/a&gt;
  Faster Development
&lt;/h2&gt;

&lt;p&gt;Python is really easy to learn. It is usually first language of choice for developers.&lt;/p&gt;

&lt;p&gt;Django follow Python philosophy as DRY (Don't Repeat Yourself) and Batteries Included (Almost of your needs are covered by the framework itself).&lt;/p&gt;

&lt;p&gt;It can be confusing at first, but Django handles a lot of stuff under the hood. So you don't worry about the details and it gets the job done.&lt;/p&gt;

&lt;p&gt;For example, migrate your data need in the majority of cases, only two commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;python manage.py makemigrations
python manage.py migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When more it's needed, Django provide help to integrate new fields, like default value.&lt;/p&gt;

&lt;p&gt;Django included it's own ORM (Object Relational Mapping) to deal with the database.&lt;/p&gt;

&lt;p&gt;There is a lot of included features like internationalization, routing, security, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#documentation"&gt;
  &lt;/a&gt;
  Documentation
&lt;/h2&gt;

&lt;p&gt;The documentation of the framework is always up to date,  covers all the supported versions. It contains an how to tutorial really detailed. Everything you need is accessible and you can easily inspect Django source code.&lt;/p&gt;

&lt;p&gt;All major additional libraries follows the same guide lines, like &lt;a href="https://www.django-rest-framework.org/"&gt;Django Rest Framework&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Because Django is popular and used worldwide, sites like Stack Overflow are flooded with Django content.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#admin"&gt;
  &lt;/a&gt;
  Admin
&lt;/h2&gt;

&lt;p&gt;With Django, create a project, add some models and remove comment for the admin path.&lt;/p&gt;

&lt;p&gt;It's all you need to have an admin interface to manage the data.&lt;/p&gt;

&lt;p&gt;And believe me, that's a huge advantage over other frameworks, it's will save you a lot of time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scalability"&gt;
  &lt;/a&gt;
  Scalability
&lt;/h2&gt;

&lt;p&gt;Scalability can be important when it comes to developing web apps. Django includes a series of default components that can be unplugged and replaced for more specific solutions, to handle scalability without efforts.&lt;/p&gt;

&lt;p&gt;What is more, Django lets you use plugins to extend your web app, and there are countless packages available to help you scale up your product.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#community"&gt;
  &lt;/a&gt;
  Community
&lt;/h2&gt;

&lt;p&gt;The community is huge. There are active developers in the community who develop great plugins to make app development easier.&lt;/p&gt;

&lt;p&gt;With the code being open-source, you can speed up development by modifying easily available resources. If you run into any difficulties with your project, you can count on the Django community to help you with your projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-to-not-use-it"&gt;
  &lt;/a&gt;
  When to not use it
&lt;/h2&gt;

&lt;p&gt;Even I have a high opinion about Django, like each framework or language, it's not the right answer in all cases.&lt;/p&gt;

&lt;p&gt;For example with a very basic app, Django is overkill. A front end framework with Firebase may be enough. And for a small API, you can use Flask instead of Django and Django Rest Framework.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-resources-that-have-really-helped-me"&gt;
  &lt;/a&gt;
  The resources that have really helped me
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.djangoproject.com/en/3.2/"&gt;Django Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.django-rest-framework.org/"&gt;Django Rest Framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.djangotemplatetagsandfilters.com/"&gt;Django Templates and Filters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devdocs.io/django~3.2-guides/"&gt;Dev Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ccbv.co.uk/"&gt;Class Based Views Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://simpleisbetterthancomplex.com/"&gt;simple is better than complex, a blog with useful posts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The learning curve for Django is low, and if you don't know Python, it's a good way to learn it.&lt;/p&gt;

&lt;p&gt;Now I use Django as a REST API with React as front end. You can create powerful and reliable app with this couple of frameworks.&lt;/p&gt;

&lt;p&gt;I hope this post will make you want to try Django.&lt;/p&gt;

&lt;p&gt;You want more content about Django or Python ? Feel free to ask me on &lt;a href="https://twitter.com/fabienschlegel"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>django</category>
      <category>python</category>
    </item>
    <item>
      <title>16 Tips on How to Make Remote Meetings More Efficient (+ Apps &amp; Tools)</title>
      <author>Anastasia 🏄🏻‍♀️</author>
      <pubDate>Fri, 11 Jun 2021 10:21:26 +0000</pubDate>
      <link>https://dev.to/actitime/16-tips-on-how-to-make-remote-meetings-more-efficient-apps-tools-1g9g</link>
      <guid>https://dev.to/actitime/16-tips-on-how-to-make-remote-meetings-more-efficient-apps-tools-1g9g</guid>
      <description>&lt;p&gt;With the outbreak of the global pandemic and the growing popularity of remote work, remote meetings became an essential part of every workflow. Most managers prefer face-to-face meetings and perceive remote ones as less productive. But the good news is that there is always a possibility to adapt and improve the remote collaboration processes and outcomes.&lt;/p&gt;

&lt;p&gt;To help you maximize the productivity of remote meetings, we’ve created the following list of tips. Read on to learn how to prepare for remote meetings, how to hold them effectively and what you can do to make sure that you and your team members will make the most of it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;p&gt;&lt;a href="#before"&gt;Before the Meeting&lt;/a&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#tools"&gt;Pick Meeting Tools&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="#agenda"&gt;Sharpen the Meeting Agenda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#settime"&gt;Set Time Properly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rules"&gt;Develop and Share the Rules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#icebreakers"&gt;Plan Ice-Breakers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#context"&gt;Communicate the Meeting Context&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#during"&gt;During the Meeting&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#mood"&gt;Set the Mood&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="#introduce"&gt;Introduce Everyone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#goal"&gt;Remind of the Meeting Goal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#roles"&gt;Split the Roles Between Attendants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#engaging"&gt;Be Engaging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#interactive"&gt;Use Interactive Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contribute"&gt;Ask Participants to Contribute&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#after"&gt;After the Meeting&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#takeaways"&gt;Clarify Takeaways&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="#followups"&gt;Send Follow-ups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#feedback"&gt;Ask for Feedback&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#stay"&gt;Remote Work is Here to Stay&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#before-the-meeting"&gt;
  &lt;/a&gt;
  Before the Meeting &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-pick-meeting-tools"&gt;
  &lt;/a&gt;
  1. Pick Meeting Tools &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Any remote meeting is based on three pillars: connection, collaboration and feedback. Here are our top suggestions for each category:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Connection tools:&lt;/strong&gt; &lt;a href="http://zoom.com/"&gt;Zoom&lt;/a&gt;, &lt;a href="https://www.microsoft.com/en-ca/microsoft-365/skype-for-business/download-app"&gt;Skype for Business&lt;/a&gt;, &lt;a href="https://www.skype.com/en/business/"&gt;Microsoft Teams&lt;/a&gt;, &lt;a href="https://discord.com/"&gt;Discord&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Collaboration tools:&lt;/strong&gt; &lt;a href="https://slack.com/intl/en-gb/"&gt;Slack&lt;/a&gt;, &lt;a href="https://www.google.com/intl/en/slides/about/"&gt;Google Slides&lt;/a&gt;, &lt;a href="https://workspace.google.com/products/jamboard/"&gt;Google Jamboard&lt;/a&gt;, &lt;a href="http://www.trello.com/"&gt;Trello&lt;/a&gt;, &lt;a href="https://coggle.it/"&gt;Coggle&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Feedback tools:&lt;/strong&gt; &lt;a href="https://workspace.google.com/intl/en/products/forms/"&gt;Google Forms&lt;/a&gt;, &lt;a href="https://www.surveymonkey.com/"&gt;SurveyMonkey&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With these essentials, you can be sure that participants will feel more engaged. Don’t forget to notify them about your choice of tools beforehand. Otherwise, you’ll have to waste some meeting time to set your meeting environment.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-sharpen-the-meeting-agenda"&gt;
  &lt;/a&gt;
  2. Sharpen the Meeting Agenda &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Meetings take the time and effort of all the participants, so the best way you can save these resources is to prepare the meeting agenda in advance. Create a detailed plan of all the items you plan to cover and make sure that this order of items is the most digestible one for your listeners.&lt;/p&gt;

&lt;p&gt;To make the most of the meeting, you may want to use questions instead of items for discussion in your meeting plan. Questions will allow you to get a better understanding of who should be invited to the meeting, what problems should be solved instead of abstract topics covered. When you cover all the questions from your agenda, you may be sure that you’ve reached the goal of the meeting.&lt;/p&gt;

&lt;p&gt;For maximum meeting productivity, share your agenda with the participants in advance so that they could prepare their questions and ideas.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our top picks of idea visualization tools:&lt;/strong&gt; Google Slides, &lt;a href="https://www.mindmeister.com/mind-map-pricing"&gt;MindMeister&lt;/a&gt;, &lt;a href="https://coggle.it/"&gt;Coggle&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-set-time-properly"&gt;
  &lt;/a&gt;
  3. Set Time Properly &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;When scheduling the meeting time, you need to decide whose priorities come first. For example, if you intend to include team members related to the client service, you’ll want to prioritize their needs and adjust meeting time to their schedules because clients always come first. Or if your team is scattered across the globe and different time zones, you need to consider their local time or schedule different meetings for participants from different parts of the world.&lt;/p&gt;

&lt;p&gt;Think about the duration of the meeting and don’t hesitate to schedule strict time limits. Check with your meeting agenda and make sure that you’ll have enough time to cover all the items and hold a discussion. At the same time, a shorter meeting length creates positive pressure and makes you focus on the most important ideas.&lt;/p&gt;

&lt;p&gt;For more productivity, notify your team about the start time of the meeting and its approximate duration so that all participants could schedule their time properly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-develop-and-share-the-rules"&gt;
  &lt;/a&gt;
  4. Develop and Share the Rules &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Regardless of the type of meeting, you need to develop the scenario to make it organized and productive. Are you going to ask introductory questions or go ahead with your speech first? Can participants ask questions as they arise or wait until you finish with the presentation? In which cases attendants should use voice and text chats? All these questions should be carefully thought through and communicated to the participants.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our top picks of chat tools:&lt;/strong&gt; &lt;a href="https://slack.com/intl/en-gb/"&gt;Slack&lt;/a&gt;, &lt;a href="https://fleep.io/"&gt;Fleep&lt;/a&gt;, &lt;a href="https://twist.com/"&gt;Twist&lt;/a&gt;, &lt;a href="https://discord.com/"&gt;Discord&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-plan-icebreakers"&gt;
  &lt;/a&gt;
  5. Plan Ice-Breakers &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Remote work creates not only physical but also emotional distance between employees. When you gather a remote meeting and see familiar faces joining the video call, you can’t expect them to be initiative right away after they’ve spent most of their day at home in a comfy atmosphere. So, if you hold remote meetings, it’s your responsibility to break the ice and make your team members engage in the conversation.&lt;/p&gt;

&lt;p&gt;When it comes to ideas of ice-breaking activities, your imagination and your corporate culture are the only restrictions. You can find dozens of ideas on the Internet, but below, we list our favorites to inspire you.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Coffee time.&lt;/strong&gt; Gather together in a video chat room and have tea or coffee together, just like during the office coffee breaks. Feel free to discuss the weather, hobbies, plans for weekends — anything that is not related to work.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Trivia quiz.&lt;/strong&gt; Create a quiz about any topic, share your screen, host the quiz and let your meeting participants discuss the answer options and submit the winning choice. Trivia quizzes can either be related to work (e.g., fact quiz that introduces participants to the topic of the meeting) or not related (e.g., team trivia quiz where participants should answer fun questions about their colleagues).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Team photo.&lt;/strong&gt; Take a funny team photo on the video chat platform. Allow the meeting participants to choose a funny video background photo, put on weird hats and clothes or decide which funny face to make. Give them a few minutes to get ready and snap.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Plan icebreakers and team-building activities before the start of the meeting and include them in your meeting plan.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our top picks of virtual icebreakers:&lt;/strong&gt; &lt;a href="https://www.bored.social/"&gt;Bored&lt;/a&gt;, &lt;a href="https://icebreaker.range.co/"&gt;IceBreakers&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-communicate-the-meeting-context"&gt;
  &lt;/a&gt;
  6. Communicate the Meeting Context &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Most remote meetings require introducing the participants to the details such as the topic of the meeting, its duration, what kind of participants’ interaction is expected. To do this, you may want to send pre-meeting emails or send a message to the meeting chat in Slack.&lt;/p&gt;

&lt;p&gt;Regular meetings, e.g., standup meetings, usually don’t require any introductions, but brainstorms could go either way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#during-the-meeting"&gt;
  &lt;/a&gt;
  During the Meeting &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#7-set-the-mood"&gt;
  &lt;/a&gt;
  7. Set the Mood &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Mood has a significant impact on how we feel and behave, especially in the working environment. As the meeting host, it’s important that you set the right meeting tone for the remote meeting. Start the meeting with energy and set a positive mood to encourage creativity and productivity.&lt;/p&gt;

&lt;p&gt;Introduce the planned ice-breaking activity at the onset of the meeting to create a positive atmosphere at the meeting. Hold a brainstorming session, create a trivia quiz or something fun to lighten the mood and encourage participants to engage. Keep this spirit alive through the whole meeting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-introduce-everyone"&gt;
  &lt;/a&gt;
  8. Introduce Everyone &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Not everyone turns their cameras on during the remote video meetings and a long list of participants may not display all the users present at the meeting. In any case, it is a good practice to introduce speakers and attendants of the meeting. You may also want to invite your participants to introduce themselves, if necessary.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-remind-of-the-meeting-goal"&gt;
  &lt;/a&gt;
  9. Remind of the Meeting Goal &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Introduce or remind the participants of the meeting goal and objectives. Use visual aids such as presentations, collaboration whiteboards and mind maps to make your introduction more engaging.&lt;/p&gt;

&lt;p&gt;After you introduce the agenda, it’s the best time to share the meeting rules and plan. Explain to the participants the meeting scenario, the order of topics and speakers, the rules on when they can ask the questions. For example, suppose you are planning to hold a brainstorming session. In that case, you may want to notify the participants about that in advance to avoid unnecessary interruptions during the course of the meeting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our top picks of task management apps:&lt;/strong&gt; &lt;a href="https://trello.com/"&gt;Trello&lt;/a&gt;, &lt;a href="https://todoist.com/"&gt;Todoist&lt;/a&gt;, &lt;a href="https://asana.com/"&gt;Asana&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-split-the-roles-between-attendants"&gt;
  &lt;/a&gt;
  10. Split the Roles Between Attendants &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;To hold an effective remote meeting, you need to keep track of many things, which makes it almost impossible to handle everything on your own. Pick a few attendants and assign special roles to them to help you hold the meeting.&lt;/p&gt;

&lt;p&gt;Here are a few role ideas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Facilitator&lt;/strong&gt; — responsible for guiding the attendants towards reaching the meeting goal by setting the meeting pace, asking open questions to start discussions, leading decisions and capturing action points.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Notetaker&lt;/strong&gt; — records key ideas, decisions, results. These notes are usually sent out in the follow-up letters after the meeting.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Timekeeper&lt;/strong&gt; — makes sure that every agenda item receives enough time and attention. For example, they limit time spent on each topic and notify the attendants about time running out.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In case of recurring meetings, assign these roles to different people or run a lottery so that nobody knows which role they’ll get the next time. This will improve the engagement of the meeting attendants.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our top picks of note-taking apps:&lt;/strong&gt; &lt;a href="https://evernote.com/intl/en/"&gt;Evernote&lt;/a&gt;, &lt;a href="https://www.microsoft.com/en-us/microsoft-365/onenote/digital-note-taking-app"&gt;OneNote&lt;/a&gt;, Google Drive &amp;amp; Docs, &lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our top picks of time tracking apps:&lt;/strong&gt; &lt;a href="http://actitime.com/?utm_source=dev.to&amp;amp;utm_medium=Syndication&amp;amp;utm_content=homepage"&gt;actiTIME&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-be-engaging"&gt;
  &lt;/a&gt;
  11. Be Engaging &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Speaking of engagement, no one likes boring meetings. We’ve already mentioned ice breakers that set the tone of the meeting. To keep the attendants’ attention, we advise the following ideas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Set expectations&lt;/strong&gt; for the participants’ engagement&lt;/li&gt;
&lt;li&gt;Run short &lt;strong&gt;team-building activities&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Take time to &lt;strong&gt;celebrate achievements&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Use &lt;strong&gt;quizzes&lt;/strong&gt; to introduce attendants to the meeting agenda&lt;/li&gt;
&lt;li&gt;Encourage the use of the &lt;strong&gt;text chat&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Use &lt;strong&gt;online whiteboards&lt;/strong&gt; to create flow charts and other visuals&lt;/li&gt;
&lt;li&gt;Run &lt;strong&gt;opinion polls&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Allow attendants to &lt;strong&gt;submit anonymous questions&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To understand the importance of this advice, think of college professors whose lectures are monotonous and tedious — their main mistake is that they prioritize information and facts over the audience. One of the key elements of any performance is to be mindful of your audience and encourage their participation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-use-interactive-tools"&gt;
  &lt;/a&gt;
  12. Use Interactive Tools &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;To encourage employee engagement and make the most of remote meetings, you can implement various online tools for surveying, brainstorming and visualizing. Here are some of our top picks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Polls and quizzes:&lt;/strong&gt; &lt;a href="https://www.google.com/intl/en/forms/about/"&gt;Google Forms&lt;/a&gt;, &lt;a href="https://www.mentimeter.com/"&gt;Mentimeter&lt;/a&gt;, &lt;a href="https://www.polleverywhere.com/"&gt;Poll Everywhere&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Whiteboards:&lt;/strong&gt; &lt;a href="https://miro.com/pricing/"&gt;Miro&lt;/a&gt;, &lt;a href="https://awwapp.com/"&gt;Aww&lt;/a&gt;, &lt;a href="https://www.microsoft.com/en-us/microsoft-365/microsoft-whiteboard/digital-whiteboard-app"&gt;Microsoft Whiteboard&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Mind maps:&lt;/strong&gt; &lt;a href="https://coggle.it/"&gt;Coggle&lt;/a&gt;, &lt;a href="https://www.mindmeister.com/"&gt;MindMeister&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Interactive apps will allow even the shyest employees to involve and participate in meeting activities. Whiteboards and mind maps will help the participants to come up with new ideas and grasp new concepts with more ease. At the same time, polls and quizzes will break the ice and help you to collect feedback.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13-ask-participants-to-contribute"&gt;
  &lt;/a&gt;
  13. Ask Participants to Contribute &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Remind participants of their responsibility to contribute to the meeting. The best way to do it is to ask attendees of their perspectives on the meeting agenda regardless of their position, e.g., ask your online marketers and customer support agents to share their thoughts on the product development. Or try the “&lt;a href="https://hbr.org/2020/03/how-to-get-people-to-actually-participate-in-virtual-meetings"&gt;nowhere to hide&lt;/a&gt;” rule: assign people to groups, define the problem they need to solve and give them a limited timeframe to come up with the solution.&lt;/p&gt;

&lt;p&gt;Here are a few more ideas of how to get people to participate in remote meetings:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Take polls.&lt;/strong&gt; Incorporate polls and surveys throughout the event. Take anonymous polls if it’s a sensitive topic.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Ask open questions.&lt;/strong&gt; As a meeting host, be genuinely interested in collecting as many opinions as possible. Ask questions that require creativity, imagination or analysis e.g., ask employees from other departments to review a new product feature and share their opinion.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Get them to collaborate.&lt;/strong&gt; Use online whiteboards for brainstorming sessions or encourage collective note-taking using Google Docs.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Take breaks.&lt;/strong&gt; After you introduce the agenda and finish your presentation, take a break to allow participants to digest and reflect on the information.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Remember that during remote meetings, participants can only hear one person at a time clearly, so establish the rules on how to take turns and mute those who ignore them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#after-the-meeting"&gt;
  &lt;/a&gt;
  After the Meeting &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#14-clarify-takeaways"&gt;
  &lt;/a&gt;
  14. Clarify Takeaways &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Before the meeting is over, refresh the key takeaways to keep in mind. Summarize the most important ideas, next steps or individual tasks and responsibilities that have been identified and assigned during the meeting. Here are a few ideas for the perfect takeaway part:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Highlight key ideas&lt;/li&gt;
&lt;li&gt;Ask for questions&lt;/li&gt;
&lt;li&gt;List action items&lt;/li&gt;
&lt;li&gt;Set deadlines&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This closing stage of the meeting is essential to the meeting’s success because it helps the participants remember and write them down if they haven’t done that yet.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#15-send-followups"&gt;
  &lt;/a&gt;
  15. Send Follow-ups &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;To make sure that all the participants can get back to the meeting takeaways anytime and people responsible for taking the next steps won’t forget about that, you need to send follow-ups to all the participants. Pick the distribution channel that will ensure that the follow-ups will reach as many people as possible e.g., for this reason, you may prefer to use a Slack channel over emails.&lt;/p&gt;

&lt;p&gt;Another best practice of engaging follow-ups is to add a touch of creativity and humor. Include gifs and funny pics, add funny quotes and ideas from the meeting, give thanks to the most participating attendants, celebrate the brightest ideas and make it a habit. Make the meeting participants wait for your next follow-up message each time after the meeting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#16-ask-for-feedback"&gt;
  &lt;/a&gt;
  16. Ask for Feedback &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Finally, one of the essential tips for meeting hosts is to ask for feedback and learn from it. Prepare quick online surveys where meeting participants can anonymously share their opinions and offer ideas for improvement. Use this feedback to reflect, learn and introduce new tools and approaches during your next meeting.&lt;/p&gt;

&lt;p&gt;To keep post-meeting messages and notifications to the minimum, include the link to the feedback-gathering form in the follow-up email or message.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our top picks of quiz apps:&lt;/strong&gt; &lt;a href="https://www.google.com/intl/en/forms/about/"&gt;Google Forms&lt;/a&gt;, &lt;a href="https://www.mentimeter.com/"&gt;Mentimeter&lt;/a&gt;, &lt;a href="https://www.polleverywhere.com/"&gt;Poll Everywhere&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#remote-work-is-here-to-stay"&gt;
  &lt;/a&gt;
  Remote Work is Here to Stay &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The global shift to remote work has proved many &lt;a href="https://www.actitime.com/remote-work-guide/remote-work-benefits/?utm_source=dev.to&amp;amp;utm_medium=Syndication&amp;amp;utm_content=remote-work-benefits"&gt;benefits for employers and employees&lt;/a&gt;. Companies are planning to cut their commercial space and allow most of their employees to work from home 2–4 days per week with only a few days in the office if needed. So, remote meetings and online tools became an essential part of every workflow.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.actitime.com/?utm_source=dev.to&amp;amp;utm_medium=Syndication&amp;amp;utm_content=homepage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9jT44Og5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619702589851/tlEoizZRK.jpeg%3Fauto%3Dcompress" alt="actiTIME - time tracking software"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>career</category>
      <category>management</category>
    </item>
    <item>
      <title>AWS Systems Manager Session Manager implementation</title>
      <author>Arun Kumar</author>
      <pubDate>Fri, 11 Jun 2021 10:06:05 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-systems-manager-session-manager-implementation-f9a</link>
      <guid>https://dev.to/aws-builders/aws-systems-manager-session-manager-implementation-f9a</guid>
      <description>&lt;p&gt;&lt;strong&gt;Session Manager Overview&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Session Manager is a fully managed AWS Systems Manager capability that lets you manage your Amazon EC2 instances through an interactive one-click browser-based shell or through the AWS CLI.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Session Manager provides secure and auditable instance management without the need to open inbound ports, maintain bastion hosts, or manage SSH keys.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Session Manager also makes it easy to comply with corporate policies that require controlled access to instances, strict security practices, and fully auditable logs with instance access details, while still providing end users with simple one-click cross-platform access to your Amazon EC2 instances.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Architecture&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-BQredz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1388riexvcwlh8xb1oxn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-BQredz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1388riexvcwlh8xb1oxn.png" alt="1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lZV505c9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/evifg8l5wb4w9z3le9cw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lZV505c9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/evifg8l5wb4w9z3le9cw.png" alt="2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How Session Manager works&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Admin users are authenticated through IAM roles and policies.&lt;/li&gt;
&lt;li&gt;If authentication is successful, SSM session manager is accessible by the AWS Management Console or AWS CLI (requires session manager CLI plugin).&lt;/li&gt;
&lt;li&gt;An agent running on each EC2 instance connects to then System Manager endpoints and executes the command over the instances.&lt;/li&gt;
&lt;li&gt;Any action performed over session manager is logged on CloudTrail.
Optional: Session outputs can be forwarded to CloudWatch logs and/or S3 buckets (Exception port-forwarding action logs will not be Pushed to cloudwatch logs and s3 bucket).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Main benefits&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Systems Manager components are reliable and highly available (AWS Console, AWS CLI, SSM endpoints).&lt;/li&gt;
&lt;li&gt;Session manager can leverage multi-factor authentication (by enforcing IAM policies).&lt;/li&gt;
&lt;li&gt;Centralization of access to EC2 instances and granular control over who can start sessions on specific instances.&lt;/li&gt;
&lt;li&gt;Open inbound SSH connection port for EC2 instances is no longer needed.&lt;/li&gt;
&lt;li&gt;Jump or Bastion host can be removed to improve security and save cost.&lt;/li&gt;
&lt;li&gt;Deploy and manage ssh-keys for EC2 instances is not necessary.&lt;/li&gt;
&lt;li&gt;Sessions are logged based on the IAM user. Logs include the executed command, outputs, time when the command was executed and more.&lt;/li&gt;
&lt;li&gt;Command outputs can be stored in S3.&lt;/li&gt;
&lt;li&gt;Command outputs can be forwarded to CloudWatch logs and generate alerts as response for undesired behavior.&lt;/li&gt;
&lt;li&gt;Full support for logging and auditing features in AWS (CloudTrail, S3, CloudWatch logs). (Exception port-forwarding action logs will not be Pushed to cloudwatch logs and s3 bucket)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;SSM agent installation&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;SSM agent should be installed in every Ec2 instances or on-premise machine with Administrative access.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Internet Access&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;SSM agent needs communication with the AWS API, this communication uses standard HTTPS ports. Because the agent always starts the communication, allow any inbound rules is not necessary.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;System Manager IAM setup&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;SSM requires an instance profile role that should be associated with each EC2 instances. In addition, an IAM service role is necessary for hybrid environment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Limitations&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;a) Transferring files is not possible by default with AWS Session Manager.&lt;/p&gt;

&lt;p&gt;b) For Windows, RDP is not supported (port forwarding can be used instead) and “Run As” capability is not available.&lt;/p&gt;

&lt;p&gt;c) Session manager is compatible with on premise system but requires the advanced on-premises instance tier (payment required).&lt;/p&gt;

&lt;p&gt;d) Session manager is not a native ssh service, most of the tools that can work with ssh are not supported.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IAM policy example for Session Manager&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "ssm:StartSession"
            ],
            "Resource": "arn:aws:ec2:*:*:instance/*",
            "Condition": {
                "StringEquals": {
                    "ssm:resourceTag/tag_key":[
                        "tag_value"
                    ]    
                }
            }
        },
        {
            "Effect": "Allow",
            "Action": [
                "ssm:GetConnectionStatus",
                "ssm:DescribeSessions",
                "ssm:DescribeInstanceProperties",
                "ec2:DescribeInstances"
            ],
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "ssm:TerminateSession"
            ],
            "Resource": [
                 "arn:aws:ssm:*:*:session/${aws:username}-*"
             ]
         }
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can set IAM EndUser and Administrator policies for Session Manager.&lt;/p&gt;

&lt;p&gt;[&lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/getting-started-restrict-access-quickstart.html"&gt;https://docs.aws.amazon.com/systems-manager/latest/userguide/getting-started-restrict-access-quickstart.html&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;You can also restrict access to specific instances individually or restrict based on tags, terminate only their specific sessions, allow full access to all sessions.&lt;/p&gt;

&lt;p&gt;[&lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/getting-started-restrict-access-examples.html"&gt;https://docs.aws.amazon.com/systems-manager/latest/userguide/getting-started-restrict-access-examples.html&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Recommended settings&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Enable “Run As” support for Linux instances&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;By default, sessions are launched using the credentials of a system-generated ssm-user account that is created on a managed instance.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can instead launch sessions using the credentials of an operating system account. You can do this either by tagging an IAM user or role or by specifying an OS user name in Session Manager preferences.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This setting allows start sessions using the credentials of a specified operation system user, instead of the default credential generated by the System Manager agent (ssm-user).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When this option is enabled, Session Manager checks for access as follows:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;a. If the user or role who is starting the session has been tagged with the key “SSMSessionRunAS”, Session Manager will check if the value for that key exist as an OS user inside the EC2 instance selected as target. If exists that user will be used, otherwise the connection will be rejected.&lt;/p&gt;

&lt;p&gt;b. If the user or role who is starting the session has not been tagged with the key “SSMSesisonRunAS”, Session Manager will use the OS username specified in the AWS account’s Session Manager preferences.&lt;br&gt;
Run As support always prevents sessions from being started using an ssm-user account on an instance.&lt;/p&gt;

&lt;p&gt;[&lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/session-preferences-run-as.html"&gt;https://docs.aws.amazon.com/systems-manager/latest/userguide/session-preferences-run-as.html&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Managing Account permissions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When a version of SSM Agent that supports Session Manager starts on an instance, it creates a user account with root or administrator privileges called ssm-user.&lt;/p&gt;

&lt;p&gt;If you want to prevent Session Manager users from running administrative commands on an instance, you can update its ssm-user permissions. You can also restore these permissions after they have been removed.&lt;/p&gt;

&lt;p&gt;You can disable or enable the ssm-user account sudo permissions on Linux or Windows instances.&lt;/p&gt;

&lt;p&gt;[&lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-getting-started-ssm-user-permissions.html"&gt;https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-getting-started-ssm-user-permissions.html&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Configure Session Manager to use AWS KMS key encryption&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Provides additional protection to the data transmitted between client machines and managed instances.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Configure Session Manager to create and send session history logs&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Logs can be stored on Simple Storage Service (Amazon S3) bucket and/or an Amazon CloudWatch Log group. The stored log data can be used for logging and auditing purposes or even to create security alerts.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Session Manager Settings&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Session manager allows several integrations with security services on AWS, the most relevant ones are listed below:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;CloudTrail&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Any action performed over the session manager API is logged in CloudTrail. API actions such as StartSession can easily generate security alerts by SNS or trigger another action on AWS as the result of sessions activity (lambda functions or SSM run command are good examples).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Simple storage Service&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As optional feature, Session Manager can store sessions outputs on S3 for further auditing. This option also allows run lambda functions that can be triggered every time when a session output is stored on a specific bucket. Lambda can analyses session outputs and perform any required action.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;CloudWatch logs&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Another service than can store session output logs for Session Manager is CloudWatch. This option is especially useful to create security alerts based on undesired behavior. By taking advantage of filters and metrics, CloudWatch logs can react and generate alerts if any user try to executes forbidden commands or performs any restricted action on the ssh/powershell sessions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tnBUOXZk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8qhzwy5vglmti78qs5o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tnBUOXZk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8qhzwy5vglmti78qs5o.png" alt="3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can create Session Manager preferences for your account in the selected AWS Region via AWS Cli. Session manager preferences can be created using a JSON file and running a SSM document SSM-SessionManagerRunShell. Check out the steps in below.&lt;/p&gt;

&lt;p&gt;[&lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/getting-started-create-preferences-cli.html"&gt;https://docs.aws.amazon.com/systems-manager/latest/userguide/getting-started-create-preferences-cli.html&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;To do the same via console -&lt;/p&gt;

&lt;p&gt;[&lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-logging-auditing.html#session-manager-logging-auditing-cloudwatch-logs"&gt;https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-logging-auditing.html#session-manager-logging-auditing-cloudwatch-logs&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Linux way of setting permission in instance.&lt;/p&gt;

&lt;p&gt;[&lt;a href="https://www.linux.com/tutorials/how-manage-users-groups-linux/"&gt;https://www.linux.com/tutorials/how-manage-users-groups-linux/&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Use the Run Command “UpdateSSMAgent” or send-command SSM action to execute the document to update your SSM agents -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;aws ssm send-command --instance-ids i-1234a i-1234b — document-name “AWS-UpdateSSMAgent”
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;How to use Session Manager&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Session Manager user requirements&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Federation&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You need to federate using your SAML role of your application for the required account. This role should have necessary policies attached for starting session using ssm.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;SSM Agent&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Version 2.3.68.0 or later must be installed on the target instances.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS CLI (Optional)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Required to use the AWS CLI to start sessions (instead of using AWS Manager console), version 1.16.12 or later of the CLI must be installed on the local machine (Instructions to install AWS CLI for all supported systems).&lt;/p&gt;

&lt;p&gt;In addition, the Session Manager plugin must be installed to start or terminate session over the EC2 instances. The plugin can be installed on supported versions of Microsoft Windows, macOS, Linux, and Ubuntu Server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Session Manager Plugin&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Install Session Manager Plugin on Linux&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;a. Download the Session Manager plugin RPM package:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;64-bit:
curl “https://s3.amazonaws.com/session-manager-downloads/plugin/latest/linux_64bit/
session-manager-plugin.rpm” -o “session-manager-plugin.rpm”

32-bit:
curl “https://s3.amazonaws.com/session-manager-downloads/plugin/latest/linux_32bit/
session-manager-plugin.rpm” -o “session-manager-plugin.rpm”
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;b. Run the install command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo yum install -y session-manager-plugin.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;c. Verify that the installation was successful running session-manager-plugin command. If the installation was successful, the following message is returned:&lt;/p&gt;

&lt;p&gt;The Session Manager plugin is installed successfully. Use the AWS CLI to start a session.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Install Session Manager Plugin on macOS&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;a. Download the bundled installer:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/mac/
sessionmanager-bundle.zip" -o "sessionmanager-bundle.zip"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;b.Unzip the package:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;unzip sessionmanager-bundle.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;c. Run the install command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo ./sessionmanager-bundle/install -i /usr/local/sessionmanagerplugin -b /usr/local/bin/session-manager-plugin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Install Session Manager Plugin on Windows&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;a. To install the Session Manager plugin using the EXE installer, download the installer using the following URL:&lt;/p&gt;

&lt;p&gt;[&lt;a href="https://s3.amazonaws.com/session-manager-downloads/plugin/latest/windows/SessionManagerPluginSetup.exe"&gt;https://s3.amazonaws.com/session-manager-downloads/plugin/latest/windows/SessionManagerPluginSetup.exe&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;b. Run the downloaded installer and follow the on-screen the instructions.&lt;/p&gt;

&lt;p&gt;c. Leave the install location box blank to install the plugin to the default directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;C:\%PROGRAMFILES%\Amazon\SessionManagerPlugin\bin\
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;d. Verify that the installation was successful.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Starting a Session (Console)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Users with the access right to use System Manager can start session directly in the AWS Management Console:&lt;/p&gt;

&lt;p&gt;a. In the navigation pane, choose Session Manager. In the AWS Systems Manager home page choose Session Manager menu.&lt;/p&gt;

&lt;p&gt;b. Select the target instance to start the connection, all the instances managed by SSM should be listed.&lt;/p&gt;

&lt;p&gt;c. Choose Start session.&lt;/p&gt;

&lt;p&gt;d. If the connection is successful, a bash commands (Linux) or PowerShell commands (Windows) will be opened.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Starting a Session (AWS CLI)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To start a session using the AWS CLI, run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;aws ssm start-session — target instance-id
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instance-id represents of the ID of an instance configured for use with AWS Systems Manager and its Session Manager capability. For example: i-02573cafcfEXAMPLE.&lt;/p&gt;

&lt;p&gt;NOTE: To use the AWS CLI to run session commands, the Session Manager plugin must also be installed on your local machine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Starting a Session (Port Forwarding)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;a. Port forwarding session can be used to start RDP session over Windows instances. To start a port forwarding session, run the following command from the CLI:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Linux example&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;aws ssm start-session — target Instance-id — document-name AWS-StartPortForwardingSession — parameters ‘{“portNumber”:[“3389”],”localPortNumber”:[“12345”]}’
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Windows example&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;aws ssm start-session — target Instance-id — document-name AWSS-tartPortForwardingSession — parameters ‘“portNumber”=[“3389”], “localPortNumber”=[“12345”]’
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instance-id represents of the ID of an instance configured for use with AWS Systems Manager. For example: i-08dbf6bb51edqew34.&lt;/p&gt;

&lt;p&gt;PortNumber represents the remote port on the instance where traffic should be redirected to. For example: 3389 to use RDP over windows.&lt;/p&gt;

&lt;p&gt;LocalPortNumber represents the local port on the client where traffic should be redirected to. For example: 56789. This port can be reached over the local instances by any service/tool.&lt;/p&gt;

&lt;p&gt;b. To reach RDP you can run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mstsc /v localhost:LocalPortNumber
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After credentials verifications, the RPD session should be opened.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Starting a Session (SSH)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Note:&lt;br&gt;
To start a session using SSH, your target instance must be configured to support SSH connections.&lt;/p&gt;

&lt;p&gt;Run the following command to start a session using SSH:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ssh -i /path/my-key-pair.pem username@instance-id
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Tip:&lt;br&gt;
When you start a session using SSH, you can copy local files to the target instance using the following command format.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;scp -i /path/my-key-pair.pem /path/SampleFile.txt username@instance-id:~
scp -i /path/my-key-pair.pem /path/SampleFile.txt ec2-user@instance-id:SampleFile.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;SSH via ProxyCommand&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On the local machine from which you want to connect to a managed instance using SSH, do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ensure that version 1.1.23.0 or later of the Session Manager plugin is installed.&lt;/li&gt;
&lt;li&gt;Update the SSH configuration file to enable running a proxy command that starts a Session Manager session and transfer all data through the connection.&lt;/li&gt;
&lt;li&gt;For RDS, you need to ensure that port 22 is opened on your EC2 instance as this is connecting via SSH instead of AWS SSM Session Manager.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Linux&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The SSH configuration file is typically located at ~/.ssh/config.&lt;/li&gt;
&lt;li&gt;Add the following to the configuration file on the local machine:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# SSH over Session Manager 
host i-* mi-*     
ProxyCommand sh -c "aws ssm start-session --target %h --document-name AWS-StartSSHSession --parameters 'portNumber=%p'"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Windows&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The SSH configuration file is typically located at 
C:\Users\username.ssh\config&lt;/li&gt;
&lt;li&gt;Add the following to the configuration file on the local machine:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# SSH over Session Manager 
host i-* mi-*     
ProxyCommand C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "aws ssm start-session --target %h --document-name AWS-StartSSHSession --parameters portNumber=%p"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note:&lt;br&gt;
If you want to do ssh to your EC2 instances, remember you are trying to reach a private subnet through internet. So if you want to use SSM in your local environment(cli/ssh), you need to open firewall between your local subnet and SSM DNS for your required region.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Troubleshooting&lt;/strong&gt;&lt;br&gt;
You can check ssm agent logs in below path in your instances.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/var/log/amazon/ssm/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can check session manager plugin logs in below path in your local.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/usr/local/sessionmanagerplugin/logs/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For debugging purposes, you can enable logging as below.&lt;/p&gt;

&lt;p&gt;[&lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html#install-plugin-configure-logs"&gt;https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html#install-plugin-configure-logs&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful commands for reference&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cli to ec2:
linux:
aws ssm start-session — target i-09b77018836663333
win: 
aws ssm start-session — target i-006d98bcda883e569
cli to ec2 using ssm port forwarding:
linux:
aws ssm start-session — target i-09b77013336667733 — document-name AWS-StartPortForwardingSession — parameters ‘{“portNumber”:[“22”],”localPortNumber”:[“9008”]}’
win:
aws ssm start-session — target i-006d98b23a88c2569 — document-name AWS-StartPortForwardingSession — parameters ‘{“portNumber”:[“3389”],”localPortNumber”:[“9009”]}’
cli to rds using ssm port forwarding:
&amp;lt;Not Supported&amp;gt;
ssh to ec2 without keypair:
ssh ec2-user@i-09b770132336667733
ssh to ec2 with keypair:
ssh -i key ec2-user@i-09b77238836667733
ssh to ec2 using local port forwarding:
ssh -nNT -L 9000:localhost:80 ec2-user@i-09b77032836667733
ssh to rds via ec2 using local port forwarding:
ssh -nNT -L 9011:&amp;lt;db-host&amp;gt;:3306 ec2-user@i-09b770182116667733
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;User authentication&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TbYAbAMo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky7mkfhb4qhaczj04nrw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TbYAbAMo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky7mkfhb4qhaczj04nrw.png" alt="4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Technical Workflow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nqS-GHt4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1kzq2e6l2a5cb05tdynd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nqS-GHt4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1kzq2e6l2a5cb05tdynd.png" alt="5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;End to End automation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DotDzDQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85ejz6bft6wjpd2zbi80.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DotDzDQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85ejz6bft6wjpd2zbi80.png" alt="6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This approach will provide end to end automation to install System Manager agent in Linux EC2 and attach instance profile to both Windows and Linux machines using AWS Lambda.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>ssm</category>
      <category>linux</category>
      <category>windows</category>
    </item>
    <item>
      <title>🤓 Task analytics as a path to effective implementation</title>
      <author>Vic Shóstak</author>
      <pubDate>Fri, 11 Jun 2021 10:03:48 +0000</pubDate>
      <link>https://dev.to/koddr/task-analytics-as-a-path-to-effective-implementation-171k</link>
      <guid>https://dev.to/koddr/task-analytics-as-a-path-to-effective-implementation-171k</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Hey, DEV people! 👋 It's time to share my experience on the topic of task analytics for programmers to execute them as efficiently as possible.&lt;/p&gt;

&lt;p&gt;Originally, I was inspired by &lt;a href="https://habr.com/ru/post/557182/"&gt;this&lt;/a&gt; article on &lt;strong&gt;Habr&lt;/strong&gt; (in Russian) and thought that I could modify some points from it a bit with my experience. &lt;/p&gt;

&lt;p&gt;And here you are reading what I got!&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  📝 Table of contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#analyzing-the-task-and-trying-to-identify-the-final-needs"&gt;Analyzing the task and trying to identify the final needs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exploring-a-subject-area"&gt;Exploring a subject area&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#matching-solution-options"&gt;Matching solution options&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#do-not-put-into-your-code-features-that-you-do-not-need-now"&gt;Do not put into your code features that you do not need now&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#trying-the-chosen-option-on-your-picture-of-understanding"&gt;Trying the chosen option on your picture of understanding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#specifying-details"&gt;Specifying details&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#implementing"&gt;Implementing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#analyzing-the-task-and-trying-to-identify-the-final-needs"&gt;
  &lt;/a&gt;
  Analyzing the task and trying to identify the final needs
&lt;/h2&gt;

&lt;p&gt;We read the task, think about it and try to understand what the programmer ultimately wants to get. It is not always possible to do this immediately, because other people &lt;strong&gt;think differently&lt;/strong&gt;, while programmers often have a "professional deformation", which makes it more difficult to understand what "non-programmer" is thinking.&lt;/p&gt;

&lt;p&gt;And here we have only two options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If the task refers to &lt;strong&gt;any part&lt;/strong&gt; of the product being developed, then go there, "click" the buttons and see what happens, re-read the task, check it against what you see on the screen.&lt;/li&gt;
&lt;li&gt;If the task concerns some &lt;strong&gt;new direction or function&lt;/strong&gt;, or &lt;strong&gt;does not concern&lt;/strong&gt; the developed product at all, then we study the business process. Here the base is the business process.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;☝️ Although the first option also has a business process, but it's not immediately visible.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As a result, the puzzle must come together in your head. I don't know about others (&lt;em&gt;please, share your experience in comments below&lt;/em&gt;), but in my head immediately arise possible solutions. &lt;/p&gt;

&lt;p&gt;Even without the period of understanding the task as such: if there are &lt;strong&gt;options for a solution&lt;/strong&gt;, then the task is understood and the goal of this stage is achieved!&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exploring-a-subject-area"&gt;
  &lt;/a&gt;
  Exploring a subject area
&lt;/h2&gt;

&lt;p&gt;This is more &lt;em&gt;complicated&lt;/em&gt; and &lt;em&gt;easier&lt;/em&gt; at the same time. At this stage, you don't have to think much, you have to &lt;strong&gt;research&lt;/strong&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First, the business process (&lt;em&gt;in the context of the stage, the business process is the environment in which the task will work&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;Then, the software products.&lt;/li&gt;
&lt;li&gt;Next, the implementation of existing parts.&lt;/li&gt;
&lt;li&gt;And finally, the environment in which the code works and dependencies.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It's important to know the architecture of the application. Especially, if you haven't worked with it before. But anyway, you must see if the architecture has been modified, and if so, what kinds. Over time, the architecture of the application, its external dependencies will always be in your head.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;☝️ This does not exclude the existence of documentation. It must be! There is simply &lt;strong&gt;no&lt;/strong&gt; other option.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Only after all the parts of the subject area have been put together in your head can you move on to solution options.&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L_aGCZ3---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jgudhjg0wo73dbs8zt9w.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L_aGCZ3---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jgudhjg0wo73dbs8zt9w.jpg" alt="matching solution options"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#matching-solution-options"&gt;
  &lt;/a&gt;
  Matching solution options
&lt;/h2&gt;

&lt;p&gt;Hopefully, you have previously researched and understood everything that is required. OK, now you can &lt;strong&gt;start thinking for real&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Yes, choosing the right option is sometimes &lt;em&gt;extremely&lt;/em&gt; difficult, because for the chosen variant it's necessary to be responsible. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;🤔 Responsibility is the biggest fear of almost everyone.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Each option &lt;strong&gt;must&lt;/strong&gt; meet several requirements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Solve the problem.&lt;/li&gt;
&lt;li&gt;Must be implementable in adequate time.&lt;/li&gt;
&lt;li&gt;Not "break" the architecture of the application.&lt;/li&gt;
&lt;li&gt;It should not introduce "trash" and unnecessary "crutches".&lt;/li&gt;
&lt;li&gt;Easy to use for the end users.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Have you chosen your options? Now, try to choose the one that is &lt;strong&gt;more useful&lt;/strong&gt;. There are two frontier states here:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It's done quickly, but it's a one-time solution;&lt;/li&gt;
&lt;li&gt;It takes longer, but it's universal;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Oh, but we need to choose something in between... To make it as efficient as possible, there are some little tips I've learned during more than 12 years of development in different teams. &lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#do-not-put-into-your-code-features-that-you-do-not-need-now"&gt;
  &lt;/a&gt;
  Do not put into your code features that you do not need now
&lt;/h3&gt;

&lt;p&gt;Immediately cut off the idea of features that you do not need now, but may need in the future. Usually, these features will "dead load" with ~70% probability.&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#trying-the-chosen-option-on-your-picture-of-understanding"&gt;
  &lt;/a&gt;
  Trying the chosen option on your picture of understanding
&lt;/h3&gt;

&lt;p&gt;And if I tell you that the chosen option is wrong? You will, of course, answer that it cannot be, because you have already gone through a bunch of options and chosen the right one.&lt;/p&gt;

&lt;p&gt;OK. So be it! But what happens if we start to implement it? What are the odds that nothing will break? Just these questions need to be answered at this stage. &lt;/p&gt;

&lt;p&gt;For a better understanding, I will give you an example of the &lt;a href="https://en.wikipedia.org/wiki/Ansible_(software)"&gt;Ansible&lt;/a&gt; approach.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;☝️ For those who are not familiar with &lt;strong&gt;Ansible&lt;/strong&gt;, it's a tool to automate the processes of deploying off-the-shelf infrastructure on a remote server. Please, read the &lt;a href="https://docs.ansible.com/ansible/latest/index.html"&gt;official docs&lt;/a&gt; for more information!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ansible has a special mode of operation, called "dry run", where it "plays" the given playbook (file in &lt;code&gt;YAML&lt;/code&gt; format), but does &lt;strong&gt;not&lt;/strong&gt; make any changes. After making sure that the option does not "break" anything, Ansible runs the &lt;em&gt;real change process&lt;/em&gt; on the target server.&lt;/p&gt;

&lt;p&gt;Similarly, you need to "dry run" in your head the chosen implementation and see what it will affect. And if there is a chance to "break" something, we go back a step and look for new options.&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#specifying-details"&gt;
  &lt;/a&gt;
  Specifying details
&lt;/h3&gt;

&lt;p&gt;Some additional data or examples may be needed &lt;strong&gt;before&lt;/strong&gt; implementation.&lt;/p&gt;

&lt;p&gt;If you have gathered everything you might need, you are ready. At this point, you have to understand that &lt;strong&gt;nothing&lt;/strong&gt; is stopping you from writing code:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Network works.&lt;/li&gt;
&lt;li&gt;Software licenses are alive.&lt;/li&gt;
&lt;li&gt;Your chair and table are comfortable.&lt;/li&gt;
&lt;li&gt;Coffee or tea poured into your favorite mug.&lt;/li&gt;
&lt;li&gt;...and so on 😉&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implementing"&gt;
  &lt;/a&gt;
  Implementing
&lt;/h3&gt;

&lt;p&gt;At last, we're writing code! Don't get too excited, this has its own pitfalls. It's highly probable that you will find things you haven't considered while writing the code.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;🤷‍♀️ Well, it happens! But let's not stand still and move on. It's important not to panic and not to consider it your fault.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Just answer the question: &lt;em&gt;does the new data interfere with realization, or is it just a correction&lt;/em&gt;? If they only make clarifications, then you are &lt;strong&gt;lucky&lt;/strong&gt;, and you can move on. &lt;/p&gt;

&lt;p&gt;But if they interfere with the implementation, then we &lt;strong&gt;go back&lt;/strong&gt; at least three steps. Yes, you read that correctly. In a critical scenario, it's better to go back and go all the way again with changed data.&lt;/p&gt;

&lt;p&gt;OK. But what about task's &lt;strong&gt;deadline&lt;/strong&gt;, if I've to turn back? &lt;/p&gt;

&lt;p&gt;That's exactly what many people are afraid of and can't accept responsibility for the implementation option they've chosen. And there is one simple recipe that has more than once saved me and my development team from inevitable technical debt and bad decisions.&lt;/p&gt;

&lt;p&gt;🎯 &lt;strong&gt;Let's take our time and do it right, not the way they make us do it&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Just talk to the person who gave you this task and try to explain the difficulties. Learn to assert your right to create truly great code!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;☝️ I assure you that no project manager would want to explain to a client after the project is delivered that the resulting product (&lt;em&gt;although it works now&lt;/em&gt;) has many unaccounted for moments that may be a problem for the project's development in the future.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#photos-and-videos-by"&gt;
  &lt;/a&gt;
  Photos and videos by
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Thought Catalog &lt;a href="https://unsplash.com/photos/Nv-vx3kUR2A"&gt;https://unsplash.com/photos/Nv-vx3kUR2A&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Avi Richards &lt;a href="https://unsplash.com/photos/Z3ownETsdNQ"&gt;https://unsplash.com/photos/Z3ownETsdNQ&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ps"&gt;
  &lt;/a&gt;
  P.S.
&lt;/h2&gt;

&lt;p&gt;If you want more → write a comment below &amp;amp; follow me. Thanks! 😘&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>devjournal</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Estereotipos y brecha de género en posiciones STEM</title>
      <author>Beatriz Iglesias Pino</author>
      <pubDate>Fri, 11 Jun 2021 10:02:19 +0000</pubDate>
      <link>https://dev.to/adevintaspain/estereotipos-y-brecha-de-genero-en-posiciones-stem-3fob</link>
      <guid>https://dev.to/adevintaspain/estereotipos-y-brecha-de-genero-en-posiciones-stem-3fob</guid>
      <description>&lt;p&gt;Actualmente, a pesar de los esfuerzos de las empresas por captar talento femenino a través de distintos planes de diversidad e inclusión, es muy difícil hacerlo. &lt;/p&gt;

&lt;p&gt;Básicamente porque apenas hay mujeres en carreras STEM (ciencia, tecnología, ingeniería y matemáticas).&lt;/p&gt;

&lt;p&gt;En la siguiente charla, Irene Zeller y yo tratamos de explicar esta brecha de género a través de la historia de las mujeres en la tecnología desde un punto de vista relacionado con los estereotipos que siempre se nos han asignado a las mujeres.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/J9MVRj7W3oM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>womenintech</category>
      <category>techtalks</category>
      <category>gendergap</category>
    </item>
  </channel>
</rss>
