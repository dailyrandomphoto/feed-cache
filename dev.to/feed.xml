<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Amazon SES and everything to set it up</title>
      <author>Jones Zachariah Noel</author>
      <pubDate>Sun, 12 Sep 2021 19:20:19 +0000</pubDate>
      <link>https://dev.to/awscommunity-asean/amazon-ses-and-everything-to-set-it-up-49c6</link>
      <guid>https://dev.to/awscommunity-asean/amazon-ses-and-everything-to-set-it-up-49c6</guid>
      <description>&lt;p&gt;&lt;a href="https://aws.amazon.com/ses/"&gt;Amazon Simple Email Service (SES)&lt;/a&gt; is a AWS provisioned Email service which is available for cloud native applications to integrate and implementing use-cases which requires email messages to be sent.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#key-takeaways-from-the-blog-"&gt;
  &lt;/a&gt;
  Key takeaways from the blog -
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Features of SES&lt;/li&gt;
&lt;li&gt;Common use-cases with SES&lt;/li&gt;
&lt;li&gt;Setting up SES on your AWS Account&lt;/li&gt;
&lt;li&gt;Working with SES&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#features-of-ses"&gt;
  &lt;/a&gt;
  Features of SES
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Sending emails to targeted audience.&lt;/li&gt;
&lt;li&gt;Analytics and monitoring of emails which are delivered, failed, bounced.&lt;/li&gt;
&lt;li&gt;Ease of integration with CLI and SDK.&lt;/li&gt;
&lt;li&gt;Verified the identities - email and domain which has permission to send emails.&lt;/li&gt;
&lt;li&gt;Highly scalable.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#common-usecases-with-ses"&gt;
  &lt;/a&gt;
  Common use-cases with SES
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Targeted email messages based on events or programmatically invoked from your application in Lambda Functions, EC2 instances or containers.&lt;/li&gt;
&lt;li&gt;Valid email templates which could be reused.&lt;/li&gt;
&lt;li&gt;With &lt;a href="https://aws.amazon.com/pinpoint/"&gt;Amazon Pinpoint&lt;/a&gt; and &lt;a href="https://aws.amazon.com/personalize/"&gt;Amazon Personalize&lt;/a&gt; sending marketing emails with content customized to user's preference.&lt;/li&gt;
&lt;li&gt;Bulk emails for easier communications with user specific data.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#setting-up-ses-on-your-aws-account"&gt;
  &lt;/a&gt;
  Setting up SES on your AWS Account
&lt;/h4&gt;

&lt;p&gt;To get started with SES, you would have to move your SES account out of sandbox environment to production so that you can send emails to any email address. Note, if your SES account is in sandbox environment then you would be able to send emails only to verified identities only.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g1uiy9V8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/15pwvhkewkqtclfuzhaf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g1uiy9V8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/15pwvhkewkqtclfuzhaf.png" alt="Sandbox environment"&gt;&lt;/a&gt;&lt;br&gt;
To move your SES account out of the sandbox, you would have to raise a support request with AWS and the use-case would evaluated based on which the account is moved to production access.&lt;br&gt;
You can rase the support directly by clicking on &lt;em&gt;Edit your account details&lt;/em&gt; button. And you would be prompted with the below screen, where you would have provide the email type and use-case description.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GSHDwcWF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qiqk1cc0yp30lmfefidh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GSHDwcWF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qiqk1cc0yp30lmfefidh.png" alt="Production access support"&gt;&lt;/a&gt;&lt;br&gt;
Another way to do it is, from the support page raising the limit increase support. &lt;br&gt;
You can find the detailed steps to move SES out of Sandbox in the &lt;a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/request-production-access.html"&gt;link&lt;/a&gt;.&lt;br&gt;
And once, the support request is approved, your SES account would be moved out of Sandbox environment. The sending quota would also be reflected for your account. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ll8wsVeg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3f9rn1s23hwlgunbgvxv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ll8wsVeg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3f9rn1s23hwlgunbgvxv.png" alt="Production access"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SES uses verified identities to send emails. The two type of identities supported by SES are - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Email addresses&lt;/strong&gt; : a valid email address should be verified by Amazon's verification process where the email identity would be receiving an email with a verification link.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gd2S05CO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g60pacqpp6b9gr5o57jm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gd2S05CO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g60pacqpp6b9gr5o57jm.png" alt="Email addresses"&gt;&lt;/a&gt;&lt;br&gt;
Once your email is verified, you can send a test email from the console. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dVyAGx51--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x06jjc7l4vvbc977xj8d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dVyAGx51--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x06jjc7l4vvbc977xj8d.png" alt="Send test email"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Domains&lt;/strong&gt; : a particular domain would be verified if the domain is on Route53, it automatically adds up DNS records for sending emails. Otherwise, it will prompt you with the DNS records which has to be added to your domain.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_RFmxaeR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fh9zuqv24kho5ihy0ewp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_RFmxaeR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fh9zuqv24kho5ihy0ewp.png" alt="Domains"&gt;&lt;/a&gt;&lt;br&gt;
Similar to email identities, once your domain is added and verified, you can send a test message. Now since your domain is enabled with email you can choose any email address of that domain.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c8JkZKKU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5makpmzo605l2ry36soq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c8JkZKKU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5makpmzo605l2ry36soq.png" alt="Send test email"&gt;&lt;/a&gt;&lt;br&gt;
Note, even though the domain is verified and the email address is also part of the same verified domain, the emails will have the from header as &lt;code&gt;amazonses.com&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#working-with-ses"&gt;
  &lt;/a&gt;
  Working with SES
&lt;/h4&gt;

&lt;p&gt;For sending emails with SES you can use both AWS CLI and AWS SDK. SDK also supports various languages, in this blog we will be using NodeJS SDK. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Creation of SES Email templates&lt;/strong&gt;&lt;br&gt;
To create a template on SES for that we would have to define a HTML and text content for the email along with parameters which would be sent when invoking a templated Email message. Create, update and delete of templates is only supported on CLI and SDK. Since this is a one-time execution, we would be doing it from the CLI.&lt;br&gt;
&lt;code&gt;template.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"Template"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"TemplateName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"SampleTemplate"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"SubjectPart"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Greetings, {{name}}!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"HtmlPart"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;h1&amp;gt;Hello {{name}},&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;this is a sample email with parameters -&amp;lt;br/&amp;gt; Name : {{name}}&amp;lt;br/&amp;gt;Email: {{email}}&amp;lt;br/&amp;gt;&amp;lt;/p&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"TextPart"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Dear {{name}},&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;Your email is {{email}}."&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;aws ses create-template &lt;span class="nt"&gt;--cli-input-json&lt;/span&gt; file://template.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;API reference : &lt;a href="https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/SES.html#createTemplate-property"&gt;JavaScript&lt;/a&gt;, &lt;a href="https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ses.html#SES.Client.create_template"&gt;Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Different ways of sending SES emails -&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Formatted email&lt;/strong&gt; : The email body is constructed and sent with &lt;code&gt;SendEmail&lt;/code&gt; API. This supports raw text format and also formatted HTML based content.  Here we can define multiple recipients (&lt;code&gt;to&lt;/code&gt;, &lt;code&gt;cc&lt;/code&gt; and &lt;code&gt;bcc&lt;/code&gt;) with email address separated with comma but this is limited to 50 recipients per email.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;Destination&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
   &lt;span class="na"&gt;CcAddresses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test@zachjonesnoel.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
   &lt;span class="p"&gt;],&lt;/span&gt; 
   &lt;span class="na"&gt;ToAddresses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;example@zachjonesnoel.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;demo@zachjonesnoel.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
   &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; 
  &lt;span class="na"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="na"&gt;Body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;Html&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;Charset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UTF-8&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
     &lt;span class="na"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;p&amp;gt;This message body contains &amp;lt;b&amp;gt;HTML&amp;lt;/b&amp;gt; formatting. It can, for example, contain links like this one: &amp;lt;a class=&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;ulink&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; href=&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;https://zachjonesnoel.com/&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; target=&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;_blank&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;zachjonesnoel&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; 
    &lt;span class="na"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;Charset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UTF-8&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
     &lt;span class="na"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This is the demo message.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;},&lt;/span&gt; 
   &lt;span class="na"&gt;Subject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;Charset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UTF-8&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="na"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Test email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; 
  &lt;span class="na"&gt;ReplyToAddresses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ro-repy@zachjonesnoel.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="p"&gt;],&lt;/span&gt; 
  &lt;span class="na"&gt;Source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ro-repy@zachjonesnoel.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="na"&gt;SourceArn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;
 &lt;span class="p"&gt;};&lt;/span&gt;
 &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;ses&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;API reference : &lt;a href="https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/SES.html#sendEmail-property"&gt;JavaScript&lt;/a&gt;, &lt;a href="https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ses.html#SES.Client.send_email"&gt;Python&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Raw email&lt;/strong&gt; : This is more flexible than &lt;em&gt;Simple Email&lt;/em&gt; and additionally we can also send attachments with this. The rest of the functionalities are same. The message is a base64 encoded string.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;Destinations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
     &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test@zachjonesnoel.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt; 
  &lt;span class="na"&gt;FromArn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;arn:aws:ses:us-east-1:xxxxxxxxx:identity/ro-repy@zachjonesnoel.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="na"&gt;RawMessage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="na"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Binary&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; 
  &lt;span class="na"&gt;Source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ro-repy@zachjonesnoel.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="na"&gt;SourceArn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;arn:aws:ses:us-east-1:xxxxxxxxx:identity/ro-repy@zachjonesnoel.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;ses&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendRawEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;API reference : &lt;a href="https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/SES.html#sendRawEmail-property"&gt;JavaScript&lt;/a&gt;, &lt;a href="https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ses.html#SES.Client.send_raw_email"&gt;Python&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Templated email&lt;/strong&gt; : The template of email is defined and the respective template is also created with API or CLI. And whenever the emails are programmatically sent, you would have pass the parameters which are defined in the email template.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Source&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;no-reply@zachjonesnoel.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Template&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SampleTemplate&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Destination&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ToAddresses&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test@zachjonesnoel.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;TemplateData&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zachjonesnoel&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test@zachjonesnoel.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;ses&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendTemplatedEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;API reference : &lt;a href="https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/SES.html#sendTemplatedEmail-property"&gt;JavaScript&lt;/a&gt;, &lt;a href="https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ses.html#SES.Client.send_templated_email"&gt;Python&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Bulk templated emails&lt;/strong&gt; : Bulk emails also use templates where the same template would be used for multiple emails where the parameters are specific to the users. This would send dedicated emails to each user.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Source&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;no-reply@zachjonesnoel.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Template&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SampleTemplate&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Destinations&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
           &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Destination&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ToAddresses&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                         &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test@zachjonesnoel.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ReplacementTags&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                         &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                         &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zach&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="p"&gt;},&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                         &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                         &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test@zachjonesnoel.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;]&lt;/span&gt;
           &lt;span class="p"&gt;},&lt;/span&gt;
           &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Destination&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ToAddresses&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                         &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;demo@zachjonesnoel.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ReplacementTags&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                         &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                         &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jones&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="p"&gt;},&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                         &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                         &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;demo@zachjonesnoel.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;]&lt;/span&gt;
           &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;ses&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendBulkTemplatedEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;API reference : &lt;a href="https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/SES.html#sendBulkTemplatedEmail-property"&gt;JavaScript&lt;/a&gt;, &lt;a href="https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ses.html#SES.Client.send_bulk_templated_email"&gt;Python&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h4&gt;

&lt;p&gt;AWS SES provides simplistic integration methods where application developers can leverage the SDK based APIs for &lt;code&gt;sendRawEmail&lt;/code&gt;, &lt;code&gt;sendEmail&lt;/code&gt;, &lt;code&gt;sendTemplatedEmail&lt;/code&gt;, &lt;code&gt;sendBulkTemplatedEmail&lt;/code&gt; available in JavaScript, Python, PHP, Go, Java and .NET. SES provides APIs where it eases sending emails from a verified email or domain so the authenticity of the sender is verified. This also provides good feasibility with HTML based templates and formatting of email content.&lt;br&gt;
Before getting started, don't forget to look into &lt;a href="https://aws.amazon.com/ses/pricing/"&gt;SES pricing&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This sample requires identities to be verified on AWS before sending emails, so haven't provided GitHub repository references. If you encounter any issues, don't hesitate to ping me on &lt;a href="https://twitter.com/ZachjNOEL"&gt;Twitter&lt;/a&gt; or &lt;a href="https://www.linkedin.com/in/jones-zachariah-noel-n"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>ses</category>
      <category>aws</category>
      <category>serverless</category>
      <category>lambda</category>
    </item>
    <item>
      <title>✅ Tell Me About A Time You Worked On Something Outside Your OKR | Facebook Behavioral Interview (Jedi) Series 🔥</title>
      <author>The Interview Sage</author>
      <pubDate>Sun, 12 Sep 2021 19:15:35 +0000</pubDate>
      <link>https://dev.to/theinterviewsage/tell-me-about-a-time-you-worked-on-something-outside-your-okr-facebook-behavioral-interview-jedi-series-1lj</link>
      <guid>https://dev.to/theinterviewsage/tell-me-about-a-time-you-worked-on-something-outside-your-okr-facebook-behavioral-interview-jedi-series-1lj</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/v_JHvdi0E5M"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Before we discuss this question, let us recap what the Behavioral Interview Round at Facebook is.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Behavioral Interview Round is also known as the Jedi Interview round at Facebook.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is about you and your history, your résumé, and your motivation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The purpose of this interview is to assess whether the candidate will thrive in Facebook's peer-to-peer, minimal process, and unstructured engineering organization.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For Software Engineers, the behavioral interview is actually part behavioral and part coding. The coding part is a shorter version of the usual coding interviews and is included to supplement the other two coding interviews to get an additional coding signal.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tips-amp-tricks-to-effectively-prepare-for-behavioral-interviews"&gt;
  &lt;/a&gt;
  Tips &amp;amp; Tricks to effectively prepare for Behavioral Interviews
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_kgnGQmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y9t832s7yc0j58aycqb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_kgnGQmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y9t832s7yc0j58aycqb.png" alt="Tips &amp;amp; Tricks to effectively prepare for Behavioral Interviews" title="Behavioral Interview Tips &amp;amp; Tricks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Know yourself! Take the time to review your résumé, as the interviewer will almost certainly ask about key events in your work history.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Have concrete examples or anecdotes to support each of the questions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Familiarize yourself with Facebook's mission statement and its five core values:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Be Bold&lt;/li&gt;
&lt;li&gt;Focus on Impact&lt;/li&gt;
&lt;li&gt;Move Fast&lt;/li&gt;
&lt;li&gt;Be Open&lt;/li&gt;
&lt;li&gt;Build Social Value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be yourself! Be open and honest about your successes and failures.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be humble and focus on teamwork, leadership, and mentorship qualities.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, let us review how to effectively answer this question.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#question-tell-me-about-a-time-you-worked-on-something-outside-your-okr"&gt;
  &lt;/a&gt;
  Question: Tell Me About A Time You Worked On Something Outside Your OKR
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VvZu188t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dpb9xwfg7o56n7uwcing.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VvZu188t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dpb9xwfg7o56n7uwcing.png" alt="Tell Me About A Time You Worked On Something Outside Your OKR" title="Tell Me About A Time You Worked On Something Outside Your OKR"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;a href="https://www.youtube.com/watch?v=Hr5UJnKxwyg&amp;amp;t=1301s"&gt;Video Explanation&lt;/a&gt; with Evaluation Criteria, Response Framework, Tips &amp;amp; Tricks, Sample Answer (Example), and a Special Case of "Don't Have Any Work Experience".&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;"Tell me about a time when you worked on something outside your OKR" is a popular open-ended question asked in behavioral interviews.&lt;/p&gt;

&lt;p&gt;OKR stands for Objectives and Key Results, which is a goal-setting framework for defining and tracking objectives and their outcomes.&lt;/p&gt;

&lt;p&gt;Interviewers also tend to ask this famous question in the following ways:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Tell me about a time when you went above and beyond.&lt;/li&gt;
&lt;li&gt;Tell me about a time when you exceeded your coworkers' or manager's expectations.&lt;/li&gt;
&lt;li&gt;Describe a time you went beyond the expectations of a customer.&lt;/li&gt;
&lt;li&gt;Have you ever exceeded expectations in one of your previous jobs?&lt;/li&gt;
&lt;li&gt;Have you ever worked on a side-project at your workplace?&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#evaluation-criteria"&gt;
  &lt;/a&gt;
  Evaluation Criteria
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CuUjuGf8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ixnhxmqap3n1qlkd8s0i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CuUjuGf8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ixnhxmqap3n1qlkd8s0i.png" alt="Evaluation Criteria for Tell Me About A Time You Worked On Something Outside Your OKR" title="Evaluation Criteria for 'Tell Me About A Time You Worked On Something Outside Your OKR'"&gt;&lt;/a&gt; &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DKamdITV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5vhsbvut1gi16fp4ita.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DKamdITV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5vhsbvut1gi16fp4ita.png" alt="Evaluation Criteria for Tell Me About A Time You Worked On Something Outside Your OKR" title="Evaluation Criteria for 'Tell Me About A Time You Worked On Something Outside Your OKR'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To grow in Software Engineering careers, employers expect developers to exceed expectations for promotions to the next level. By this question, the interviewer is trying to assess your:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Work ethic,&lt;/li&gt;
&lt;li&gt;Personality, and&lt;/li&gt;
&lt;li&gt;Motivation to take on new challenges with a positive attitude.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;They are trying to understand your ability to be proactive and your perseverance to learn new things continuously. Employers want to know if you are independent in your thought process and have the willingness to do more than what is expected from you.&lt;/p&gt;

&lt;p&gt;They are also evaluating your:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Communication,&lt;/li&gt;
&lt;li&gt;Time management,&lt;/li&gt;
&lt;li&gt;Problem-solving, and&lt;/li&gt;
&lt;li&gt;Decision-making skills.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#response-framework"&gt;
  &lt;/a&gt;
  Response Framework
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fV4dizGC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qo5j85z20wi4xm6pbwha.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fV4dizGC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qo5j85z20wi4xm6pbwha.png" alt="Response Framework for Tell Me About A Time You Worked On Something Outside Your OKR" title="Response Framework for 'Tell Me About A Time You Worked On Something Outside Your OKR'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our advice is to pick a compelling and honest story that can articulate a real-life experience where you worked on a project outside your OKRs.&lt;/p&gt;

&lt;p&gt;Describe the situation, explain the project, and elaborate on why you believed this would benefit your team and company. For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;While working on your current OKRs, you found a gap in a client library, for which you published an update that benefited multiple teams in your company.&lt;/li&gt;
&lt;li&gt;You created code review guidelines for your company.&lt;/li&gt;
&lt;li&gt;You collaborated with the recruiting team and hiring committees to improve your company's interview process.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Explain to the interviewer how you evaluated and executed your plan of action. Focus on your problem-solving and decision-making skills. Also, show how you communicated the updates to your manager and other stakeholders to keep them well informed.&lt;/p&gt;

&lt;p&gt;Finally, express how the outcome and the impact were beneficial to your team and company. Also, explain the learnings you took from this situation and how they helped you become a better engineer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tips-amp-tricks"&gt;
  &lt;/a&gt;
  Tips &amp;amp; Tricks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SbNwxIUg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jpx8g6eewugc46culamk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SbNwxIUg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jpx8g6eewugc46culamk.png" alt="Tips and Tricks for Tell Me About A Time You Worked On Something Outside Your OKR" title="Tips &amp;amp; Tricks for 'Tell Me About A Time You Worked On Something Outside Your OKR'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here are some tips and tricks that will help you effectively prepare this question for the behavioral interview.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use a compelling story that is honest and believable.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is most desirable to describe a real-life example to the interviewer to show that you have actually worked on something outside your OKR and not just talk about a hypothetical situation.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Always remain calm, composed, and confident while answering this question.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do not sugarcoat your answer with irrelevant details.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Spend more time talking about the project that you worked on outside your assigned goals.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Focus on the business impact that you had on your company or team.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Show that you proactively communicated the updates to all the key stakeholders to keep them well informed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The biggest way to mess up answering this question is by simply saying no to the interviewer.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Instead, try to use a real experience from your college or day-to-day life where you went above and beyond.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prepare the response for this question beforehand, as it will be tough to structure your answer on the spot during the interview.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not memorize the answer as it should come naturally, and you should sound confident to the interviewer.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#sample-answer-example"&gt;
  &lt;/a&gt;
  Sample Answer (Example)
&lt;/h2&gt;

&lt;p&gt;Here is Monica. She is currently working as a Software Engineer at a major technology company. She is interviewing for the role of Senior Software Engineer at Facebook.&lt;/p&gt;

&lt;p&gt;🎧 Listen to her response to this question in this &lt;a href="https://www.youtube.com/watch?v=Hr5UJnKxwyg&amp;amp;t=1544s"&gt;YouTube Video&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#special-case-dont-have-any-work-experience"&gt;
  &lt;/a&gt;
  Special Case: Don't Have Any Work Experience
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TjrxzIgk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xlcsw1cdlrrm5uv58hvx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TjrxzIgk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xlcsw1cdlrrm5uv58hvx.png" alt="Special Case: Don't Have Any Work Experience" title="Special Case: Don't Have Any Work Experience"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It may be the case that you don't have any work experience. New Grads and entry-level software engineers usually fall under this category.&lt;/p&gt;

&lt;p&gt;If you are in such a situation, do not end your answer by simply saying no to the interviewer. Instead, try to use a real experience from your college or everyday life where you went above and beyond. For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As a Teaching Assistant, you exceeded your professor's expectations by effectively teaching a few classes in his absence.&lt;/li&gt;
&lt;li&gt;For a course project, you went above and beyond by doing additional analysis, which was outside the project's scope.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will help the interviewer evaluate you on the following attributes mentioned earlier:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Your work ethic and personality,&lt;/li&gt;
&lt;li&gt;Motivation to take on new challenges with a positive attitude,&lt;/li&gt;
&lt;li&gt;Enthusiasm to learn new things,&lt;/li&gt;
&lt;li&gt;Communication skills,&lt;/li&gt;
&lt;li&gt;Problem-solving and decision-making skills, and&lt;/li&gt;
&lt;li&gt;Willingness to do more than what is expected from you.&lt;/li&gt;
&lt;/ol&gt;




&lt;h1&gt;
  &lt;a href="#preparation-material"&gt;
  &lt;/a&gt;
  Preparation Material
&lt;/h1&gt;

&lt;p&gt;Learn more about the Evaluation Criteria, Response Framework, Tips &amp;amp; Tricks, and Sample Answers (Examples) to effectively prepare and answer these top questions asked in the Behavioral Interviews at Facebook. Certain special cases are also discussed which are usually faced by the candidates during these interviews.&lt;/p&gt;

&lt;p&gt;⬇️ &lt;a href="https://www.buymeacoffee.com/interviewsage/e/40678"&gt;Detailed Notes on Top Facebook Behavioral Interview Questions - Part 2&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#cracking-the-facebook-behavioral-interview"&gt;
  &lt;/a&gt;
  Cracking the Facebook Behavioral Interview
&lt;/h1&gt;

&lt;p&gt;If you have not read our first article on Top Facebook Behavioral Interview Questions, we recommend reading it by clicking the below link:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/theinterviewsage" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/theinterviewsage/top-facebook-behavioral-interview-questions-part-1-2a0o" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;✅ Top Facebook Behavioral Interview Questions (Part 1) | Facebook Jedi Interview Round 🔥&lt;/h2&gt;
      &lt;h3&gt;The Interview Sage ・ May 15 ・ 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#cracking-the-facebook-system-design-interview"&gt;
  &lt;/a&gt;
  Cracking the Facebook System Design Interview
&lt;/h1&gt;

&lt;p&gt;In case if you have not read our series on Cracking the Facebook System Design Interview, we recommend reading it by clicking the below link:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/theinterviewsage" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/theinterviewsage/top-facebook-system-design-interview-questions-31np" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Top Facebook System Design Interview Questions (Part 1) | Facebook Pirate Interview Round&lt;/h2&gt;
      &lt;h3&gt;The Interview Sage ・ Jan 4 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful Links
&lt;/h1&gt;

&lt;p&gt;✅ &lt;a href="https://bit.ly/Educative-Unlimited"&gt;Educative.io Unlimited Plan [💰 10% off for first 100 users]&lt;/a&gt;&lt;br&gt;
✅ &lt;a href="https://bit.ly/Try-Exponent"&gt;TryExponent.com Membership [💰 Limited Time 10% offer]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;✅ &lt;a href="https://instagr.am/TheInterviewSage"&gt;Follow for Daily Coding Problem&lt;/a&gt;&lt;br&gt;
✅ &lt;a href="https://bit.ly/Join-Membership"&gt;Join our membership for exclusive benefits&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;👩‍💻 &lt;a href="https://www.educative.io/courses/grokking-the-system-design-interview?aff=KQZl"&gt;Best System Design Interview Course&lt;/a&gt;&lt;br&gt;
🚀 &lt;a href="https://bit.ly/SWE-Interview-Course"&gt;Complete SWE Interview Course [💰 Limited Time 10% offer]&lt;/a&gt;&lt;br&gt;
🙋‍♀️ &lt;a href="https://www.buymeacoffee.com/interviewsage/e/30176"&gt;Behavioral Interview Guide [💰 Special Discount]&lt;/a&gt;&lt;br&gt;
📚 &lt;a href="https://smarturl.it/InterviewPrepBook"&gt;Recommended Interview Preparation Book (on Amazon)&lt;/a&gt;&lt;/p&gt;




&lt;center&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/InterviewSage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--121vjxPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/o2l00b1bt3nl8fdfb0nn.png" alt="Buy Me a Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;☕️ Buy us a Coffee at &lt;a href="https://www.buymeacoffee.com/InterviewSage"&gt;BuyMeACoffee.com/InterviewSage&lt;/a&gt;&lt;/p&gt;


&lt;/center&gt;




&lt;center&gt;

&lt;p&gt;To stay updated about new posts, Subscribe &amp;amp; Follow Us!&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://www.youtube.com/TheInterviewSage?sub_confirmation=1"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CRCmz2gQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3uqifmelnuenxiik8pwx.png" alt="Subscribe to our YouTube channel" title="Subscribe to our YouTube channel"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://www.instagram.com/TheInterviewSage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OADCpudp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ovhcxjpg0v5z2tidtydk.png" alt="Follow us on Instagram" title="Follow us on Instagram"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://www.facebook.com/TheInterviewSage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zohyoISu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xyy3kyo44tmv645vvrqw.png" alt="Like &amp;amp; Follow us on Facebook" title="Like &amp;amp; Follow us on Facebook"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="http://twitter.com/intent/follow?source=followbutton&amp;amp;variant=1.0&amp;amp;screen_name=InterviewSage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UoV_1sI3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xwwcu44k00a0a8hpfbmf.png" alt="Follow us on Twitter" title="Follow us on Twitter"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://www.linkedin.com/in/TheInterviewSage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5QaEiEG6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zcrwzwc9tnv0q3zmkih8.png" alt="Follow &amp;amp; Connect on LinkedIn" title="Follow &amp;amp; Connect on LinkedIn"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;


&lt;/center&gt;



&lt;blockquote&gt;
&lt;p&gt;This article is part of the series on Behavioral Interviews at Facebook. So, follow us to get notified when our next article in this series is published. Thanks for reading! &lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__553012"&gt;
  
    .ltag__user__id__553012 .follow-action-button {
      background-color: #3b49df !important;
      color: #f9fafa !important;
      border-color: #3b49df !important;
    }
  
    &lt;a href="/theinterviewsage" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/theinterviewsage"&gt;The Interview Sage&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/theinterviewsage"&gt;Our goal is to create Software Eng Interview tutorials to help you get a job at companies like Facebook, Google, Apple, &amp;amp; Amazon. We will deep-dive into System Design, Coding, &amp;amp; Behavioral interviews.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;/blockquote&gt;

&lt;p&gt;📸 Some images used are from free&lt;span&gt;pik&lt;/span&gt;.com: Freepik, pch.vector, vectorjuice, pikisuperstar, raw&lt;span&gt;pixel&lt;/span&gt;.com, slidesgo, stories, Upklyak, jcomp, macrovector_official, syarifahbrit, redgreystock&lt;/p&gt;

&lt;p&gt;&lt;a href="https://disclosureanddisclaimer.theinterviewsage.com/"&gt;Full Disclosure &amp;amp; Disclaimer&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Python 3.9 Features for Noobs</title>
      <author>Kathan Vakharia</author>
      <pubDate>Sun, 12 Sep 2021 18:51:19 +0000</pubDate>
      <link>https://dev.to/kathanvakharia/python-3-9-features-for-noobs-11ok</link>
      <guid>https://dev.to/kathanvakharia/python-3-9-features-for-noobs-11ok</guid>
      <description>&lt;p&gt;In this post, I will discuss some of the interesting features added in python 3.9!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problem-merging-two-dictionaries"&gt;
  &lt;/a&gt;
  The Problem: Merging two dictionaries
&lt;/h2&gt;

&lt;p&gt;Prior to python 3.9, there were mainly two ways to merge or combine two &lt;code&gt;dictionaries&lt;/code&gt; in python,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;dict1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Salman"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"age"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"NA"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;dict2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"crimes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"lol"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"career_destroyed"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"uncountable"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Way1 : using update method
&lt;/span&gt;&lt;span class="n"&gt;dict1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dict2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"dict1 =&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dict1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Way2: using ugly ** unpacking
&lt;/span&gt;&lt;span class="n"&gt;new_dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;dict1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;dict2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"new_dict=&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_dict&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="s"&gt;"""OUPUT
dict1 =&amp;gt; {'name': 'Salman', 'age': 'NA', 
'crimes': 'lol', 'career_destroyed': 'uncountable'}
new_dict=&amp;gt; {'name': 'Salman', 'age': 'NA',
'crimes': 'lol', 'career_destroyed': 'uncountable'}

"""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But using these methods, have drawbacks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-raw-update-endraw-is-not-efficient-"&gt;
  &lt;/a&gt;
  Why &lt;code&gt;update&lt;/code&gt; is not efficient ?
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;d1.update(d2)&lt;/code&gt; modifies d1 &lt;em&gt;in-place&lt;/em&gt; i.e changes the content of d1 dictionary.&lt;/p&gt;

&lt;p&gt;But the problem is, it is using a &lt;em&gt;temporary&lt;/em&gt; variable internally to update d1 dict. This is very inefficient because consider a case when you want to merge two dictionaries containing thousands of key-value pair, It is a brutal waste of memory and CPU!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gjTGbAA7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s64aifdtffibgq859dpq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gjTGbAA7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s64aifdtffibgq859dpq.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;😛 Then why don't we use ** , because it is not readable and ugly!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#solution-addition-of-union-operators"&gt;
  &lt;/a&gt;
  Solution : Addition of Union Operators
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;📃 &lt;a href="https://www.python.org/dev/peps/pep-0584/"&gt;https://www.python.org/dev/peps/pep-0584/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's see how python3.9 solved the issue,&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#introducing-merge-operator-raw-endraw-"&gt;
  &lt;/a&gt;
  Introducing merge operator &lt;code&gt;|&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The merge operator , "|" will return a new &lt;code&gt;dict&lt;/code&gt; consisting of the left operand merged with the right operand, each of which must be a dict.&lt;/p&gt;

&lt;p&gt;This operation has a fancy name : &lt;strong&gt;Dict Union&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4E1xU-Bg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydqy4526hx7xux1xpowa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4E1xU-Bg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydqy4526hx7xux1xpowa.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#update-operator-raw-endraw-"&gt;
  &lt;/a&gt;
  update operator &lt;code&gt;|=&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;This operator performs an &lt;em&gt;inplace merge&lt;/em&gt; similar to update method but it doesn't waste memory by using a temporary variable!&lt;/p&gt;

&lt;p&gt;Fancy name : &lt;strong&gt;Augmented assignment&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZLB1yg2M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3u5ockqx8nqf2iamdrme.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZLB1yg2M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3u5ockqx8nqf2iamdrme.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-problem-how-to-remove-substrings-from-start-or-end-in-a-raw-str-endraw-"&gt;
  &lt;/a&gt;
  The Problem: How to remove sub-strings from start or end in a &lt;code&gt;str&lt;/code&gt; ?
&lt;/h2&gt;

&lt;p&gt;Prior to python3.9, you would do something like this,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# removing prefix or suffix prior to python 3.9
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;remove_prefix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inp_str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pref&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;"""
    This function deletes "pref" from the 
    beginning if it is present otherwise
    returns the original "inp_str"
    """&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;inp_str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pref&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;inp_str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pref&lt;/span&gt;&lt;span class="p"&gt;):]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;inp_str&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;remove_suffix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inp_str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;suff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;"""
    This function deletes "suff" from the 
    end if it is present otherwise
    returns the original "inp_str"
    """&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;inp_str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;suff&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;inp_str&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;suff&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;inp_str&lt;/span&gt;

&lt;span class="s"&gt;"""OUTPUT
&amp;gt;&amp;gt;&amp;gt; remove_suffix("Kathan", "an")
'Kath'
&amp;gt;&amp;gt;&amp;gt; remove_suffix("Kathan", "lol")
'Kathan'
&amp;gt;&amp;gt;&amp;gt; remove_prefix("Kathan","Ka")
'than'
&amp;gt;&amp;gt;&amp;gt; remove_prefix("Kathan","haha")
'Kathan'
"""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Isn't it too much, that  we need to define functions for such a simple task? Ofcourse you can create a one-liner using &lt;code&gt;lambda&lt;/code&gt; but what if you want a cleaner solution? &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution-string-methods-to-remove-prefixes-and-suffixes"&gt;
  &lt;/a&gt;
  Solution : String methods to remove prefixes and suffixes
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;📃 &lt;a href="https://www.python.org/dev/peps/pep-0616/"&gt;https://www.python.org/dev/peps/pep-0616/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To solve this issue, 2 new methods were added.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-removeprefix-endraw-method"&gt;
  &lt;/a&gt;
  &lt;code&gt;removeprefix&lt;/code&gt; method
&lt;/h3&gt;

&lt;p&gt;This method has implemented the prior discussed functionality of removing prefix for us so that we don't need to define our own function or lambda whatever.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PlN1K0ph--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ozj98ru60612jlw8mko.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PlN1K0ph--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ozj98ru60612jlw8mko.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-removesuffix-endraw-method"&gt;
  &lt;/a&gt;
  &lt;code&gt;removesuffix&lt;/code&gt; method
&lt;/h3&gt;

&lt;p&gt;This method has implemented the prior discussed functionality of removing suffix for us so that we don't need to define our own function.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mnZJ1TtV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zwzupr454onmkvzd8luz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mnZJ1TtV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zwzupr454onmkvzd8luz.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-improvised-math-module"&gt;
  &lt;/a&gt;
  🎁 Bonus : Improvised Math Module
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;📃 &lt;a href="https://docs.python.org/3/whatsnew/3.9.html#math"&gt;https://docs.python.org/3/whatsnew/3.9.html#math&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#-raw-mathgcd-endraw-function"&gt;
  &lt;/a&gt;
  &lt;code&gt;math.gcd()&lt;/code&gt; function
&lt;/h3&gt;

&lt;p&gt;Prior to python 3.9, this function only accepted &lt;em&gt;two&lt;/em&gt; arguments and returned their gcd.&lt;/p&gt;

&lt;p&gt;But quite often we need to find gcd of more than two numbers. GOOD NEWS! In python 3.9 you can add as many arguments you want into this function.&lt;/p&gt;

&lt;p&gt;Here's the error by the way, you used to get prior to python 3.9&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--shJ05CvT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/665b22dlxos5uaej609c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--shJ05CvT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/665b22dlxos5uaej609c.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-improved-raw-mathgcd-endraw-function"&gt;
  &lt;/a&gt;
  Using improved &lt;code&gt;math.gcd&lt;/code&gt; function
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QeD8wjWf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8h8zriql7uazjx6ae2ic.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QeD8wjWf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8h8zriql7uazjx6ae2ic.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-new-raw-mathlcm-endraw-function"&gt;
  &lt;/a&gt;
  The new &lt;code&gt;math.lcm()&lt;/code&gt; function
&lt;/h3&gt;

&lt;p&gt;Prior to python 3.9 there was no specifc function to calculate l.c.m. &lt;/p&gt;

&lt;p&gt;Developers though had a quirky workaround for finding l.c.m,&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q5uxZJ9k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ufyw06lpsf443ojropo5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q5uxZJ9k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ufyw06lpsf443ojropo5.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But if you ain't a math geek, you will be confused by the function 😓, So there was a need for l.c.m function!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#new-raw-mathlcm-endraw-function"&gt;
  &lt;/a&gt;
  NEW &lt;code&gt;math.lcm()&lt;/code&gt; function
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LQGEn__s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ssldjcr12rqwmd71g8yk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LQGEn__s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ssldjcr12rqwmd71g8yk.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it for this post :) Hope you enjoyed it. Check python 3.9 docs for lots of more fun stuff!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;📚 Further Read: &lt;a href="https://docs.python.org/3/whatsnew/3.9.html#what-s-new-in-python-3-9"&gt;https://docs.python.org/3/whatsnew/3.9.html#what-s-new-in-python-3-9&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>codenewbie</category>
      <category>programming</category>
    </item>
    <item>
      <title>Terraform: Good to know features - Post 1</title>
      <author>Arun Kumar Singh</author>
      <pubDate>Sun, 12 Sep 2021 18:00:18 +0000</pubDate>
      <link>https://dev.to/arunksingh16/terraform-good-to-know-features-post-1-3ofa</link>
      <guid>https://dev.to/arunksingh16/terraform-good-to-know-features-post-1-3ofa</guid>
      <description>&lt;h2&gt;
  &lt;a href="#terraform-validation"&gt;
  &lt;/a&gt;
  Terraform Validation
&lt;/h2&gt;

&lt;p&gt;Starting Terraform 0.13, Hashicorp has released Custom Variable Validation in HCL. Each variable block can have zero or more validation blocks and an error message. It's quite useful feature which gives you an edge to control the values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;variable "cloudenv" {
  type        = string
  description = "Cloud Environment"

  validation {
    condition = anytrue([
      var.env == "prd",
      var.env == "qa",
      var.env == "uat",
      var.env == "dev"
    ])
    error_message = "Must be a valid Cloud Env, values can be prd, qa, uat, or dev."
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#terraform-suppressing-values"&gt;
  &lt;/a&gt;
  Terraform Suppressing Values
&lt;/h2&gt;

&lt;p&gt;There are certain cases in which you want terraform not to print the information when you run &lt;code&gt;plan&lt;/code&gt; or &lt;code&gt;apply&lt;/code&gt;. Good part is terraform has a way for you. Setting a variable as sensitive prevents Terraform from showing its value in the plan or apply output.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;variable "user_information" {
  type = object({
    name    = string
    address = string
  })
  sensitive = true
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#debug-terraform"&gt;
  &lt;/a&gt;
  Debug terraform
&lt;/h2&gt;

&lt;p&gt;You can set TF_LOG to one of the log levels TRACE, DEBUG, INFO, WARN or ERROR to change the verbosity of the logs and push it to one of the files on disk for analysis.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir logs
export TF_LOG_PATH="./logs/terraform.log"
export TF_LOG="INFO" 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>terraform</category>
      <category>devops</category>
    </item>
    <item>
      <title>Others ways to contribute to open source</title>
      <author>Raissa Correia</author>
      <pubDate>Sun, 12 Sep 2021 18:00:04 +0000</pubDate>
      <link>https://dev.to/raissaccorreia/others-ways-to-contribute-to-open-source-32d7</link>
      <guid>https://dev.to/raissaccorreia/others-ways-to-contribute-to-open-source-32d7</guid>
      <description>&lt;p&gt;So many developers want to leave a contribution to projects they always use and know a lot, however, we always feel too inexperienced and intimidated to add any code to these projects. That's why I came up with alternative ways to contribute and start to be closer to the open-source community and your favorite projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#translation"&gt;
  &lt;/a&gt;
  Translation
&lt;/h2&gt;

&lt;p&gt;This is the easiest and more accessible in my opinion. No new content to be created by you, just the effort to bring help to developers that are not fully fluent in English. There are MANY things to translate: the app itself, documentation, tutorials...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#content"&gt;
  &lt;/a&gt;
  Content
&lt;/h2&gt;

&lt;p&gt;There is too much content these days for some things and too little for others, especially more advanced and niche examples, and it's a great way to show as a portfolio, not only content about how to use a tool but how a tool work. Remember that content is not only tutorials, in text or video, but also documentation, guides, books, and compilations of other articles/videos&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#discussions-and-forums"&gt;
  &lt;/a&gt;
  Discussions and Forums
&lt;/h2&gt;

&lt;p&gt;If something looks wrong, comment about it on forums, on GitHub issues, at least will make the developers more aware of a common mistake, or a bug, or an issue with a specific environment&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#donations"&gt;
  &lt;/a&gt;
  Donations
&lt;/h2&gt;

&lt;p&gt;Of course, all these projects need funds to hire people full-time and accelerate project development, if you can it will be really appreciated.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#noncode-accessibility-support"&gt;
  &lt;/a&gt;
  Non-code accessibility support
&lt;/h2&gt;

&lt;p&gt;This is part of the content section however I'll make this another section just to remember this neglected segment&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usability-tests"&gt;
  &lt;/a&gt;
  Usability tests
&lt;/h2&gt;

&lt;p&gt;Testing to make sure that user experience in several devices, for several segments of users is crucial to growth if it's destinated to non-tech consumers&lt;/p&gt;

</description>
    </item>
    <item>
      <title>When and where I use px, rem, vw and vh</title>
      <author>Osama</author>
      <pubDate>Sun, 12 Sep 2021 17:59:05 +0000</pubDate>
      <link>https://dev.to/bluec4p/when-and-where-i-use-px-rem-vw-and-vh-3bhp</link>
      <guid>https://dev.to/bluec4p/when-and-where-i-use-px-rem-vw-and-vh-3bhp</guid>
      <description>&lt;p&gt;Hi everyone.&lt;/p&gt;

&lt;p&gt;I have decided to create a post to share my point of view about units of measure in CSS.&lt;/p&gt;

&lt;p&gt;All that I am going to put next are things that I have learned in open source and personal projects, that is, by practicing a lot.&lt;/p&gt;

&lt;p&gt;I'm just going to talk about the units of measurement that I usually use. And it should be noted that the use cases that I am going to present are to make a responsive design&lt;/p&gt;

&lt;p&gt;px (pixel) :  px I only use it in very isolated and small cases, for example. When I want to give a fixed font size or even for fixed margins and paddings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7nU3GhTy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/guhthdm1g4mnvbattybj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7nU3GhTy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/guhthdm1g4mnvbattybj.png" alt="px-example-html"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qQVOlEyQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/38lauutxxm4lhwc1ng12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qQVOlEyQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/38lauutxxm4lhwc1ng12.png" alt="px-example-css"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;rem (root em) :  I use rem for the same elements in px, but with the difference that it is something variable or responsive, for example text fonts and responsive spacing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ol79oyFL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jq7um0co602qaf1zo76f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ol79oyFL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jq7um0co602qaf1zo76f.png" alt="rem-example-html"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qoGjI04Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u4b17y1qrqiutpzdlzde.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qoGjI04Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u4b17y1qrqiutpzdlzde.png" alt="rem-example-css"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;vh (view height) - vw (view width): These two measurements, being a reference to the size of the screen, are used to measure the layouts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e9a2zGS3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a2pw41cyc5zkirhg52tw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e9a2zGS3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a2pw41cyc5zkirhg52tw.png" alt="vh-vw-example-html"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sAIvSS9p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/foubayrcn4obx6gyd820.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sAIvSS9p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/foubayrcn4obx6gyd820.png" alt="vh-vw-example-css"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks so much for reading. If you have any input or comments, do not hesitate to let me know in the comments.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>css</category>
      <category>frontend</category>
    </item>
    <item>
      <title>Cool Hero Svg Waves</title>
      <author>K K UPGRADER</author>
      <pubDate>Sun, 12 Sep 2021 17:55:02 +0000</pubDate>
      <link>https://dev.to/kkupgrader/cool-hero-svg-waves-374k</link>
      <guid>https://dev.to/kkupgrader/cool-hero-svg-waves-374k</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/kkupgrader/embed/VwWWvRx?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
    </item>
    <item>
      <title>Hello Ghostfolio 👋 — Personal Finance Management Software</title>
      <author>Thomas Kaul</author>
      <pubDate>Sun, 12 Sep 2021 17:54:18 +0000</pubDate>
      <link>https://dev.to/dtslvr/hello-ghostfolio-personal-finance-management-software-1ap6</link>
      <guid>https://dev.to/dtslvr/hello-ghostfolio-personal-finance-management-software-1ap6</guid>
      <description>&lt;p&gt;In this article I would like to introduce my new open source project: &lt;a href="https://ghostfol.io"&gt;Ghostfolio&lt;/a&gt;, a web-based personal finance management software.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-problem-does-ghostfolio-solve"&gt;
  &lt;/a&gt;
  What problem does Ghostfolio solve?
&lt;/h2&gt;

&lt;p&gt;Due to rising inflation and negative interest rates, I have been looking for some time at how I can invest my assets in the most diversified way possible. Specifically, I follow a buy and hold strategy with investments in different asset classes spread across different platforms. Therefore, I was looking for an app that would holistically aggregate my portfolio. During my research on the internet and in app stores, I have tried several solutions, but none of them has convinced me completely: too complicated, too cluttered, not optimized for smartphones or not comprehensive enough.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-vision"&gt;
  &lt;/a&gt;
  The vision
&lt;/h2&gt;

&lt;p&gt;It is particularly important to me that I get an overview of all my assets in real time. Previously, I only had the prepared figures available once a year, when I had completed my annual tax declaration. In addition to the cash balance in the savings account, the overall picture also includes country-specific traits such as the voluntary pension plan (pillar 3a) in Switzerland.&lt;/p&gt;

&lt;p&gt;In the meantime, I have talked to many colleagues who have been investing for a longer time. Quite a few have created complex spreadsheets from the same considerations. I think that should be better in 2021.&lt;/p&gt;

&lt;p&gt;Ghostfolio is supposed to be a simple wealth management software. It presents the current assets at any time and supports the decision making of future investments. Whether rebalancing the portfolio in asset classes (stocks, cryptocurrencies, ETFs, etc.) or financing an apartment, Ghostfolio offers solid, data-driven decision support.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c1Cn0Z7k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5l359fgx282pc7pb3gav.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c1Cn0Z7k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5l359fgx282pc7pb3gav.png" alt="Ghostfolio Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As I value privacy, data protection is an integral part of Ghostfolio. As &lt;a href="https://github.com/ghostfolio/ghostfolio"&gt;open source software&lt;/a&gt; (OSS), Ghostfolio can be used completely anonymously, without the greedy eyes of big banks or big tech.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#from-idea-to-implementation"&gt;
  &lt;/a&gt;
  From idea to implementation
&lt;/h2&gt;

&lt;p&gt;With this background I have started the ambitious project and programmed with small steps a software that I could quickly use for myself. As a stack, I chose modern web technologies that are personally of particular interest or that I would like to learn and deepen. These include &lt;a href="https://www.docker.com"&gt;Docker&lt;/a&gt;, &lt;a href="https://nx.dev"&gt;Nx&lt;/a&gt; for the management of the monorepo, &lt;a href="https://nestjs.com"&gt;NestJS&lt;/a&gt; for the backend and &lt;a href="https://www.postgresql.org"&gt;PostgreSQL&lt;/a&gt; as a database. The code of the frontend and backend is written in &lt;a href="https://www.typescriptlang.org"&gt;TypeScript&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Since I have shortly reached my limits with some calculations, I have looked into different possibilities to get valuable support. Hoping that other people could also benefit from the solution and contribute with improvements if interested, I have released the existing code as open source software. Very soon, some developers contributed to Ghostfolio with great enhancements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-i-support-the-project"&gt;
  &lt;/a&gt;
  How can I support the project?
&lt;/h2&gt;

&lt;p&gt;Are you also obsessed with a maximally diversified investment strategy? I'm happy for everyone who tries Ghostfolio. Are you convinced of its potential? Any support for Ghostfolio is welcome. Be it with a star on &lt;a href="https://github.com/ghostfolio/ghostfolio"&gt;GitHub&lt;/a&gt;, feedback, bug reports, feature requests and of course contributions!&lt;/p&gt;

&lt;p&gt;Please find find my contact details &lt;a href="https://ghostfol.io/about"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I look forward to hearing from you.&lt;br&gt;
Thomas from Ghostfolio&lt;/p&gt;

</description>
      <category>contributorswanted</category>
      <category>finance</category>
      <category>showdev</category>
      <category>typescript</category>
    </item>
    <item>
      <title>What's new in TypeScript 4.4?</title>
      <author>Ankit Tanna</author>
      <pubDate>Sun, 12 Sep 2021 17:47:42 +0000</pubDate>
      <link>https://dev.to/ankittanna/what-s-new-in-typescript-4-4-ai7</link>
      <guid>https://dev.to/ankittanna/what-s-new-in-typescript-4-4-ai7</guid>
      <description>&lt;p&gt;TypeScript 4.4 came out with a lot of performance update plus some improved type checking. As a developer, you may be excited about a few of the features that are listed below.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-control-flow-analysis-of-aliased-conditions-and-discriminants"&gt;
  &lt;/a&gt;
  1. Control Flow Analysis of Aliased Conditions and Discriminants
&lt;/h1&gt;

&lt;p&gt;Quite a bad-ass name for a feature 😄.&lt;/p&gt;

&lt;p&gt;Its basically nothing but TypeScript becoming intelligent about the type of the variable if evaluated above.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#before"&gt;
  &lt;/a&gt;
  Before
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;unknown&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;arg&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#now"&gt;
  &lt;/a&gt;
  Now
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;unknown&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;argIsString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;arg&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;argIsString&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;TypeScript remembers that arg is evaluated and it's type is string. You dont need to perform the evaluation again and again.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-defaulting-to-unknown-type-in-catch-blocks"&gt;
  &lt;/a&gt;
  2. Defaulting to &lt;strong&gt;unknown&lt;/strong&gt; type in catch blocks
&lt;/h1&gt;

&lt;p&gt;We use try-catch blocks to handle the mess that we create. But since the mess(dirty stuff needed to be done in catch block) can be generated from the different sources, the Error parameter in the catch block has to be kept loosely typed OR an implictly-any defined parameter.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#before"&gt;
  &lt;/a&gt;
  Before
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Who knows what this might throw...&lt;/span&gt;
  &lt;span class="nx"&gt;executeSomeThirdPartyCode&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// err: any&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Allowed, because 'any'&lt;/span&gt;
  &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;thisWillProbablyFail&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Allowed, because 'any' :(&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you enable &lt;strong&gt;useUnknownInCatchVariables&lt;/strong&gt; in your TSConfig file, the Error parameter in the catch block becomes of type any. And you will start seeing below errors:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Property&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;does&lt;/span&gt; &lt;span class="nx"&gt;not&lt;/span&gt; &lt;span class="nx"&gt;exist&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;unknown&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;Property&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;does&lt;/span&gt; &lt;span class="nx"&gt;not&lt;/span&gt; &lt;span class="nx"&gt;exist&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;unknown&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;Property&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;does&lt;/span&gt; &lt;span class="nx"&gt;not&lt;/span&gt; &lt;span class="nx"&gt;exist&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;unknown&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#after"&gt;
  &lt;/a&gt;
  After
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Who knows what this might throw...&lt;/span&gt;
  &lt;span class="nx"&gt;executeSomeThirdPartyCode&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have a CustomError, you can create a class and make them extend with Error.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-exact-optional-property-types"&gt;
  &lt;/a&gt;
  3. Exact Optional Property Types
&lt;/h1&gt;

&lt;p&gt;This feature needs to be enabled in your TSConfig using the flag &lt;strong&gt;exactOptionalPropertyTypes&lt;/strong&gt;. In JavaScript, reading a missing property in an object returns &lt;strong&gt;undefined&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Currently, if you define an interface like below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The equivalent of the above interface was:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;which meant that an object with a property &lt;strong&gt;age&lt;/strong&gt; and it's value &lt;strong&gt;undefined&lt;/strong&gt; were totally fine.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Daniel&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// This is okay by default.&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;but actually it is supposed to be interpreted as an object of type Person must contain name and another property age is optional but if it is present, &lt;strong&gt;age&lt;/strong&gt; must be of type &lt;strong&gt;number&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;With the &lt;strong&gt;exactOptionalPropertyTypes&lt;/strong&gt; flag on, you can get be rest assured that if &lt;strong&gt;optional properties&lt;/strong&gt; are a part of your object, they are assigned a correct type value.&lt;/p&gt;

&lt;p&gt;PS - such things are good for type-geek devs like me! and you must enable it as well!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-static-blocks-in-classes"&gt;
  &lt;/a&gt;
  4. static blocks in classes
&lt;/h1&gt;

&lt;p&gt;Static blocks in classes are a new feature of ECMAScript features that can help you write complex initialization logic for static members&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Foo&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// This is a static block:&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;someCondition&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;Foo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Think of them as constructor for static properties 😄.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-inlay-hints"&gt;
  &lt;/a&gt;
  5. Inlay hints
&lt;/h1&gt;

&lt;p&gt;This is kind of a good feature when you have a lengthy list of parameters in a function and you have a tough time remembering the sequence of it. Inlay hints display useful information like parameter names and return types in your code. You can think of it as a sort of friendly “ghost text”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LqdRGqfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://devblogs.microsoft.com/typescript/wp-content/uploads/sites/11/2021/08/inlayHints-4.4-rc-ghd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LqdRGqfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://devblogs.microsoft.com/typescript/wp-content/uploads/sites/11/2021/08/inlayHints-4.4-rc-ghd.png" alt="TS inlay hints image" title="TS inlay hints"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6-no-initializers-for-abstract-properties"&gt;
  &lt;/a&gt;
  6. No initializers for Abstract properties
&lt;/h1&gt;

&lt;p&gt;Abstract properties cannot have initializers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;abstract&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;C&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;abstract&lt;/span&gt; &lt;span class="nx"&gt;prop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;//       ~~~~&lt;/span&gt;
  &lt;span class="c1"&gt;// Property 'prop' cannot have an initializer because it is marked abstract.&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#7-performance-improvements-and-other-goodies"&gt;
  &lt;/a&gt;
  7. Performance improvements and other goodies
&lt;/h1&gt;

&lt;p&gt;There have been many behind the scenes improvement like below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Faster declaration emits (symbols of classes that are accessible)&lt;/li&gt;
&lt;li&gt;Faster path normalization (basically translating ../../ --&amp;gt; to a proper path)&lt;/li&gt;
&lt;li&gt;Faster incremental builds if &lt;strong&gt;--strict&lt;/strong&gt; flag is on. This will certainly give you nightmares in your initial days and if your project is big, it will take some amount of time to clear up this mess!&lt;/li&gt;
&lt;li&gt;Faster source map generation (Do leave in the comments, do we need source maps now?)&lt;/li&gt;
&lt;li&gt;Better spelling suggestions&lt;/li&gt;
&lt;li&gt;Auto-imports showing true/complete path&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope you enjoyed this brief read about TypeScript and it's new features. If you are geeky and are not able to sleep, you can go and read the &lt;a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-4-4.html"&gt;TypeScript Release Notes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I run a small YouTube channel named &lt;a href="https://youtube.com/EverydayJavaScript"&gt;EverydayJavaScript&lt;/a&gt;. Please do subscribe to it if you haven't fallen asleep reading the release notes!&lt;/p&gt;

&lt;p&gt;Happy TypeScript-ing!&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>angular</category>
    </item>
    <item>
      <title>How to Manage Multiple SSH Keys for GitHub, GitLab, etc.</title>
      <author>Karolis Šarapnickis</author>
      <pubDate>Sun, 12 Sep 2021 17:15:56 +0000</pubDate>
      <link>https://dev.to/karolis_sh/how-to-manage-multiple-ssh-keys-for-github-gitlab-etc-4f98</link>
      <guid>https://dev.to/karolis_sh/how-to-manage-multiple-ssh-keys-for-github-gitlab-etc-4f98</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Short tutorial on how to structure projects and setup multi-user Git SSH workflow.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When using a single machine with multiple git accounts, you might encounter some obstacles with SSH setup. The easiest way to achieve a multi-user setup is to structure git repositories by respective directories, e.g.:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;projects
├── work
│   ├── enterprise-fiz-buz
│   └── ...
└── personal
    ├── karolis.sh
    └── ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This short tutorial will help you set up SHH for such workflow.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#generating-a-new-ssh-key"&gt;
  &lt;/a&gt;
  Generating a new SSH key
&lt;/h2&gt;

&lt;p&gt;To generate a new SSH key, use the provided template script (or check the &lt;a href="https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh"&gt;docs&lt;/a&gt;):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;EMAIL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;karolis.sarapnickis@work.com
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;SSH_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.ssh/id_rsa_work
ssh-keygen &lt;span class="nt"&gt;-t&lt;/span&gt; rsa &lt;span class="nt"&gt;-b&lt;/span&gt; 4096 &lt;span class="nt"&gt;-C&lt;/span&gt; &lt;span class="nv"&gt;$EMAIL&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="nv"&gt;$SSH_FILE&lt;/span&gt;
ssh-add &lt;span class="nt"&gt;-K&lt;/span&gt; &lt;span class="nv"&gt;$SSH_FILE&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"🔽 PUBLIC KEY BELOW 🔽"&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cat&lt;/span&gt; &lt;span class="nv"&gt;$SSH_FILE&lt;/span&gt;.pub
pbcopy &amp;lt; &lt;span class="nv"&gt;$SSH_FILE&lt;/span&gt;.pub
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What's left is to add the SSH key to your &lt;a href="https://github.com/settings/keys"&gt;GitHub&lt;/a&gt;/&lt;a href="https://gitlab.com/-/profile/keys"&gt;GitLab&lt;/a&gt;/etc. account.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#multiuser-git-ssh-setup"&gt;
  &lt;/a&gt;
  Multi-user Git SSH setup
&lt;/h2&gt;

&lt;p&gt;The general idea is that you use specific &lt;a href="https://git-scm.com/docs/git-config.html#Documentation/git-config.txt-coresshCommand"&gt;ssh command&lt;/a&gt; based on your working directory with the help of &lt;a href="https://git-scm.com/docs/git-config.html#_includes"&gt;git includes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Update the &lt;code&gt;~/.gitconfig&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[user]
  name = Karolis Šarapnickis
  email = pastas.k@gmail.com
[core]
  sshCommand = ssh -i ~/.ssh/id_rsa
[push]
  default = current
[includeIf "gitdir:~/projects/work/"]
  path = ~/.gitconfig.work
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the &lt;code&gt;~/.gitconfig.work&lt;/code&gt; file:&lt;/p&gt;

&lt;p&gt;And that's it! Appropriate SSH setup will be used based on directory location, no extra actions are needed.&lt;/p&gt;

</description>
      <category>ssh</category>
      <category>github</category>
      <category>gitlab</category>
    </item>
    <item>
      <title>How To Send Email Using PHPMailer in PHP</title>
      <author>Prosper Yong</author>
      <pubDate>Sun, 12 Sep 2021 17:09:11 +0000</pubDate>
      <link>https://dev.to/yongdev/how-to-send-email-using-phpmailer-in-php-23pk</link>
      <guid>https://dev.to/yongdev/how-to-send-email-using-phpmailer-in-php-23pk</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;In order to add email services to your PHP application, the PHPMailer class is the ideal choice. PHP frameworks of all kinds are supported (Laravel or Symfony are based on the SwiftMailer library, though, but it is still possible to use PHPMailer as well.) An HTML email with attachments is created using this sophisticated tool, which can then be sent out through SMTP or web server on your local network to a large number of recipients in real time. At the end of this article You'll be able to send a mail using the php library.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;The following criteria must be met in order to follow along with this guide:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A PHP development environment that runs at least PHP 7.0.&lt;/li&gt;
&lt;li&gt;(Optional) Composer.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;You can send emails using mail(), Sendmail or Qmail, or you can send them directly to SMTP servers.&lt;br&gt;
Additional advanced features include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SSL/SMTP Authentication&lt;/li&gt;
&lt;li&gt;Attachments in fs, string, and binary&lt;/li&gt;
&lt;li&gt;A plain-text email can be sent to clients that do not support HTML email.&lt;/li&gt;
&lt;li&gt;An active development community maintains it secure and current.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#installing-phpmailer"&gt;
  &lt;/a&gt;
  Installing PHPMailer
&lt;/h2&gt;

&lt;p&gt;You must install PHPMailer through Composer, a dependency management for PHP, starting with version 6.0 released in August 2017. This method is suggested by PHPMailer's developers on Github. &lt;br&gt;
In your terminal, type the following code to install the library:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;composer require phpmailer/phpmailer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;PHPMailer can be added manually if you don't want to install Composer in a testing environment, for example. PHPMailer source code files may be downloaded &lt;a href="https://github.com/PHPMailer/PHPMailer"&gt;here&lt;/a&gt;. Once downloaded, transfer the PHPMailer folder to one of the include path directories provided in your PHP setup, then manually load each class file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;PHPMailer\PHPMailer\PHPMailer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;PHPMailer\PHPMailer\Exception&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'path_to_PHPMailer/src/Exception.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'path_to_PHPMailer/src/PHPMailer.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'path_to_PHPMailer/src/SMTP.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See the PHPMailer documentation on Github for comprehensive information on how to install the package without composer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-phpmailer-to-send-emails-from-a-local-server"&gt;
  &lt;/a&gt;
  Use PHPMailer to send emails from a local server
&lt;/h2&gt;

&lt;p&gt;The most likely scenario is that you will utilize HTML to create your email message  As a result, you'll be using HTML techniques and attributes to deliver the messages to recipients.&lt;br&gt;
Include the &lt;code&gt;autoload.php&lt;/code&gt; file created by Composer if you have used Composer to install:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'path/to/composer/vendor/autoload.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how to use PHPMailer if you have manually installed it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'path_to_PHPMailer/src/PHPMailer.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'path_to_PHPMailer/src/SMTP.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'path_to_PHPMailer/src/Exception.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then include the PHPMailer class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;PHPMailer\PHPMailer\PHPMailer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;PHPMailer\PHPMailer\Exception&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Creating a new PHPMailer object is the next stage in the process:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="nv"&gt;$mail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;PHPMailer&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the next step, we'll provide the headers:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;setFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'noreply@example.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Admin'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//Add a sender&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addAddress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'joe@example.net'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'User'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//Add a recipient&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addReplyTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'info@example.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Information'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//Add an address that the mail reply should be sent&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addCC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cc@example.com'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//Add a more recipient&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addBCC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'bcc@example.com'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//Add a more recipient&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you need to add many addresses, create a new code for each one:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;AddBCC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'bcc2@example.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'mick'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;AddBCC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'bcc3@example.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'doe'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A file can be attached by specifying its path. Also, you can specify a filename, although it's not required: the script will use the real filename:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addAttachment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'path_to/file.csv'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'file.csv'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In other to add image,you use CID attachments to embed an image here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addEmbeddedImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'path_to/image_file.jpg'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'image'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and in the message body add&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;img src="cid:image"&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add a subject, indicate that it should delivered with sendmail, and specify that the message contains HTML.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Subject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Test Email Using PHPMailer'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;IsSendmail&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="n"&gt;sets&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;send&lt;/span&gt; &lt;span class="n"&gt;mail&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="nc"&gt;Sendmail&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;isHTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//Set email format to HTML&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You may now enter the email body:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;   &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;H1&amp;gt;Mail body in HTML&amp;lt;/H1&amp;gt;&amp;lt;p&amp;gt;Email testing&amp;lt;/p&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;AltBody&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"This is the plain text version of the email content"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly, define the email sending features as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;send&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Message has been sent successfully"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Exception&lt;/span&gt; &lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Mailer Error: "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;ErrorInfo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, let's put all the code you've created to send an email together.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'path/to/composer/vendor/autoload.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;PHPMailer\PHPMailer\PHPMailer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;PHPMailer\PHPMailer\Exception&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;PHPMailer&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;setFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'noreply@example.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Admin'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//Add a sender&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addAddress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'joe@example.net'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'User'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//Add a recipient&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addReplyTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'info@example.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Information'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//Add an address that the mail reply should be sent&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addCC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cc@example.com'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//Add a more recipient&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addBCC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'bcc@example.com'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//Add a more recipient&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addAttachment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'path_to/file.csv'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'file.csv'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addEmbeddedImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'path_to/image_file.jpg'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'image'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Subject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Test Email Using PHPMailer'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;IsSendmail&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="n"&gt;sets&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;send&lt;/span&gt; &lt;span class="n"&gt;mail&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="nc"&gt;Sendmail&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;
    &lt;span class="nf"&gt;isHTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;sets&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="no"&gt;HTML&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;isHTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//Set email format to HTML&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;H1&amp;gt;Mail body in HTML&amp;lt;/H1&amp;gt;&amp;lt;p&amp;gt;Email testing&amp;lt;img src="&lt;/span&gt;&lt;span class="n"&gt;cid&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="s2"&gt;"&amp;gt;&amp;lt;/p&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;AltBody&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"This is the plain text version of the email content"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;send&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Message has been sent successfully"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Exception&lt;/span&gt; &lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Mailer Error: "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;ErrorInfo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#sending-emails-with-smtp-server"&gt;
  &lt;/a&gt;
  Sending emails with SMTP server
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;
 &lt;span class="c1"&gt;//Server settings&lt;/span&gt;
&lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;SMTPDebug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//Enable SMTP debugging &lt;/span&gt;
&lt;span class="c1"&gt;//Send using SMTP &lt;/span&gt;
 &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;isSMTP&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
&lt;span class="c1"&gt;//Enable SMTP authentication&lt;/span&gt;
&lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;SMTPAuth&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//SMTP Host&lt;/span&gt;
&lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'smtp.example.com'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="c1"&gt;//SMTP username                            &lt;/span&gt;
&lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'user@example.com'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//SMTP password                     &lt;/span&gt;
&lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'secret'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
&lt;span class="c1"&gt;//Enable implicit TLS encryption                            &lt;/span&gt;
&lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;SMTPSecure&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nc"&gt;PHPMailer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;ENCRYPTION_SMTPS&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="c1"&gt;//TCP port to connect           &lt;/span&gt;
&lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;465&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;isHTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//Set email format to HTML&lt;/span&gt;
&lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;H1&amp;gt;Mail body in HTML&amp;lt;/H1&amp;gt;&amp;lt;p&amp;gt;Email testing&amp;lt;/p&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;AltBody&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"This is the plain text version of the email content"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;send&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Message has been sent successfully"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Exception&lt;/span&gt; &lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Mailer Error: "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;ErrorInfo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's go through the variables now&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;$mail-&amp;gt;SMTPDebug&lt;/code&gt; is used to enable debugging and display error messages.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;$mail-&amp;gt;isSMTP()&lt;/code&gt; is used to notify the PHPMailer to use SMTP to convey messages.&lt;/li&gt;
&lt;li&gt; &lt;code&gt;$mail-&amp;gt;SMTPAuth&lt;/code&gt; is used to set authentication.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;$mail-&amp;gt;Host&lt;/code&gt; is used to define server host&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;$mail-&amp;gt;Username&lt;/code&gt; is used to define the username for smtp server host account.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;$mail-&amp;gt;Password&lt;/code&gt; is used to define the password for smtp server host account&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;$mail-&amp;gt;SMTPSecure&lt;/code&gt; sets the encryption type.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;$mail-&amp;gt;Port&lt;/code&gt;  is used to define server port in which the email should be sent.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As a PHP developer, there's little chance you'll be able to avoid sending emails through script. Using third-party services like Mandrill or SendGrid may be a possibility in some cases, but developing your own email sending library may not be feasible. Therein lies the value of PHPMailer and its equivalents (such as Zend Mail and Swift Mailer).&lt;br&gt;
Here we've covered the most frequent uses of Phpmailer: delivering pictures and attachments in HTML emails over SMTP or localhost, as well as debugging settings. This library should allow you to send an email.&lt;/p&gt;

</description>
      <category>php</category>
      <category>email</category>
      <category>code</category>
      <category>dev</category>
    </item>
    <item>
      <title>Query through Elasticsearch Indices with Laravel</title>
      <author>Nasrul Hazim Bin Mohamad</author>
      <pubDate>Sun, 12 Sep 2021 16:52:11 +0000</pubDate>
      <link>https://dev.to/nasrulhazim/query-through-elasticsearch-indices-with-laravel-o0g</link>
      <guid>https://dev.to/nasrulhazim/query-through-elasticsearch-indices-with-laravel-o0g</guid>
      <description>&lt;p&gt;Just come across a use case during my daily works, to query through Elasticearch indices, in Laravel.&lt;/p&gt;

&lt;p&gt;I'm assuming you have installed Elasticsearch, have indices, index pattern defined and of course, data populated in the index documents.&lt;/p&gt;

&lt;p&gt;Then, create a Laravel project and install this &lt;a href="https://github.com/cviebrock/laravel-elasticsearch"&gt;Laravel Elasticsearch&lt;/a&gt; package.&lt;/p&gt;

&lt;p&gt;Then, let's create a file in your laravel project - I've create a directory called &lt;code&gt;tinker/&lt;/code&gt; and created &lt;code&gt;tinker/es.php&lt;/code&gt; in it.&lt;/p&gt;

&lt;p&gt;Then paste the following codes in the file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 

&lt;span class="nv"&gt;$stat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Elasticsearch&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;indices&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;stats&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'index'&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s1"&gt;'your-index-*'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="nv"&gt;$indices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$stat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'indices'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nv"&gt;$field&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'username.keyword'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$keyword&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'xyz'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$indices&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="kc"&gt;PHP_EOL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;'index'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'body'&lt;/span&gt;  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s1"&gt;'query'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="s1"&gt;'match'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                    &lt;span class="nv"&gt;$field&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$keyword&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="nv"&gt;$list&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Elasticsearch&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;dd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$list&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the above command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;php artisan tinker tinker/es.php
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code should return something like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;your-index-2021.09.12
array:1 [
  0 =&amp;gt; array:4 [
    "took" =&amp;gt; 5
    "timed_out" =&amp;gt; false
    "_shards" =&amp;gt; array:4 [
      "total" =&amp;gt; 1
      "successful" =&amp;gt; 1
      "skipped" =&amp;gt; 0
      "failed" =&amp;gt; 0
    ]
    "hits" =&amp;gt; array:3 [
      "total" =&amp;gt; array:2 [
        "value" =&amp;gt; 1
        "relation" =&amp;gt; "eq"
      ]
      "max_score" =&amp;gt; 0.2876821
      "hits" =&amp;gt; array:1 [
        0 =&amp;gt; array:5 [
          "_index" =&amp;gt; "your-index-2021.09.12"
          "_type" =&amp;gt; "_doc"
          "_id" =&amp;gt; "xH652nsBOpLioOpWB7gH"
          "_score" =&amp;gt; 0.2876821
          "_source" =&amp;gt; array:7 [
            "password" =&amp;gt; "xyz"
            "username" =&amp;gt; "xyz"
            "@timestamp" =&amp;gt; "2021-09-12T15:56:03.935Z"
            "port" =&amp;gt; 50784
            "tags" =&amp;gt; array:1 [
              0 =&amp;gt; "your-index"
            ]
            "@version" =&amp;gt; "1"
            "host" =&amp;gt; "localhost"
          ]
        ]
      ]
    ]
  ]
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;em&gt;The cover image is an incoming event for JomLaunch 2021. You can buy tickets from &lt;a href="https://launch.jomweb.my/"&gt;https://launch.jomweb.my/&lt;/a&gt;. Every year, the JOMWEB Facebook Group community (facebook.com/groups/jomweb) which consists of programmers, developers, UI/UX designers, security experts, and other ICT activists in the country gather to highlight their projects. This is all to celebrate the country's ICT talents and expertise, and take the opportunity to get to know and learn from each other. This year 2021, JOMLAUNCH continues again, digitally.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>elasticsearch</category>
    </item>
  </channel>
</rss>
