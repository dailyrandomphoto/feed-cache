<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>🤷‍♀️ 🤷‍♂️ Tailwind CSS with Heroicons: The SVG path stoke-width issue resolve</title>
      <author>Vic Shóstak</author>
      <pubDate>Mon, 18 Oct 2021 13:18:34 +0000</pubDate>
      <link>https://dev.to/koddr/tailwind-css-with-heroicons-the-svg-path-stoke-width-issue-resolve-2702</link>
      <guid>https://dev.to/koddr/tailwind-css-with-heroicons-the-svg-path-stoke-width-issue-resolve-2702</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Hello, wonderful DEV people! 👋 &lt;/p&gt;

&lt;p&gt;This is not exactly a standard “simple error”, but rather a feature that the developers cannot bring to the &lt;a href="https://heroicons.com/"&gt;Heroicons&lt;/a&gt; project in any way. The community has already &lt;a href="https://github.com/tailwindlabs/heroicons/issues/241"&gt;paid attention&lt;/a&gt; to this and even formed a &lt;a href="https://github.com/tailwindlabs/heroicons/pull/281"&gt;PR&lt;/a&gt;, but it was closed.&lt;/p&gt;

&lt;p&gt;I will describe the solution for the &lt;strong&gt;Vue.js&lt;/strong&gt; (with TypeScript) web application, but you can apply it to &lt;strong&gt;React&lt;/strong&gt;, &lt;strong&gt;Svelte&lt;/strong&gt;, or any other (&lt;em&gt;or no framework at all&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Come on, let's resolve this problem! 👇&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  📝 Table of contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#explanation-of-the-problem"&gt;Explanation of the problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#resolving-the-issue"&gt;Resolving the issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusions"&gt;Conclusions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#explanation-of-the-problem"&gt;
  &lt;/a&gt;
  Explanation of the problem
&lt;/h2&gt;

&lt;p&gt;When we enlarge the icons, for example, through the built-in Tailwind CSS classes of that particular component, we may notice that the icon thickness becomes not quite what we expected.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;NewspaperIcon&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-10 w-10"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;          
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yes, Tailwind CSS has a class &lt;code&gt;stroke-{number}&lt;/code&gt; that allows you to customize this attribute only for the element that has it. But in the &lt;strong&gt;Heroicons&lt;/strong&gt; implementation, this &lt;code&gt;stroke-width&lt;/code&gt; attribute specified on the &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; nested elements, not on the &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; wrapper (&lt;em&gt;to which we have access&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tSdL70j1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e333gphs0n99xawssrm4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tSdL70j1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e333gphs0n99xawssrm4.png" alt="tw docs 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;☝️ &lt;strong&gt;By the way:&lt;/strong&gt; The &lt;code&gt;stroke-width&lt;/code&gt; attribute is a presentation attribute defining the width of the stroke to be applied to the shape. &lt;/p&gt;

&lt;p&gt;More info about &lt;code&gt;stroke-width&lt;/code&gt; is &lt;a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Therefore, we will have to write our styles to perform the desired behavior. There's nothing wrong with that, just watch the comments in the code!&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5r4-tfDY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4up9zk4pg5b1rv9a1buh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5r4-tfDY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4up9zk4pg5b1rv9a1buh.jpg" alt="resolving the issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resolving-the-issue"&gt;
  &lt;/a&gt;
  Resolving the issue
&lt;/h2&gt;

&lt;p&gt;Okay, here's a typical application structure on the Vue.js framework:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="c"&gt;.
&lt;/span&gt;&lt;span class="go"&gt;├── src
│   ├── assets
│   │   └── css
│   │       ├── ...
&lt;/span&gt;&lt;span class="gp"&gt;│   │       ├── heroicons.css #&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;&lt;span class="nt"&gt;--&lt;/span&gt; styles &lt;span class="k"&gt;for &lt;/span&gt;Heroicons
&lt;span class="gp"&gt;│   │       └── style.css     #&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;&lt;span class="nt"&gt;--&lt;/span&gt; styles &lt;span class="k"&gt;for &lt;/span&gt;Tailwind CSS
&lt;span class="go"&gt;│   ├── components
│   │   ├── ...
&lt;/span&gt;&lt;span class="gp"&gt;│   │   └── App.vue           #&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;&lt;span class="nt"&gt;--&lt;/span&gt; main app component
&lt;span class="gp"&gt;│   ├── main.ts               #&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;&lt;span class="nt"&gt;--&lt;/span&gt; main app script
&lt;span class="go"&gt;│   └── ...
└── ...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this is the main TypeScript file where our styles mounted and the Vue instance created:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ./src/main.ts&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createApp&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="c1"&gt;// Import styles.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./src/assets/css/style.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./src/assets/css/heroicons.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;-- styles for Heroicons&lt;/span&gt;

&lt;span class="c1"&gt;// Import main component.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./src/components/App.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="c1"&gt;// Create a new Vue instance.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To avoid conflicts, please verify that all styles you want to add or override satisfy these rules:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Place them strictly after the basic Tailwind CSS style import;&lt;/li&gt;
&lt;li&gt;New styles have an associative class name;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now let's form new styles to override the &lt;code&gt;stoke-width&lt;/code&gt; attribute of the Vue component of Heroicons:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* ./src/assets/css/heroicons.css */&lt;/span&gt;

&lt;span class="nc"&gt;.heroicon-stroke-w-0&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="err"&gt;4&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;path&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;stroke-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.heroicon-stroke-w-0&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="err"&gt;8&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;path&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;stroke-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.heroicon-stroke-w-1&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;path&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;stroke-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.heroicon-stroke-w-1&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;path&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;stroke-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.heroicon-stroke-w-1&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="err"&gt;6&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;path&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;stroke-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the CSS code above, I decided to add icon styles to my project to cover these &lt;code&gt;stroke-width&lt;/code&gt; values: &lt;code&gt;0.4&lt;/code&gt;, &lt;code&gt;0.8&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;1.2&lt;/code&gt;, and &lt;code&gt;1.6&lt;/code&gt;. And by default, without specifying the &lt;code&gt;.heroicon-stroke-w-{number}&lt;/code&gt; class, the icons will show up with a value of &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And now, we're ready to use these classes like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;router-link&lt;/span&gt; &lt;span class="na"&gt;:to=&lt;/span&gt;&lt;span class="s"&gt;"{ name: 'news' }"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;NewspaperIcon&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-10 w-10 heroicon-stroke-w-1.2"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/router-link&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NewspaperIcon&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@heroicons/vue/outline&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;--&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="nx"&gt;outline&lt;/span&gt; &lt;span class="nx"&gt;Heroicons&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Menu&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;NewspaperIcon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// add newspaper icon component&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This should be enough for any of my needs in the project, but you (&lt;em&gt;having understood the principle&lt;/em&gt;) can add any to your taste.&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h2&gt;

&lt;p&gt;I really hope that the developers will listen to their users and introduce a normal built-in way to determine the &lt;code&gt;stroke-width&lt;/code&gt; attribute in Heroicons in the next versions of their wonderful product.&lt;/p&gt;

&lt;p&gt;Have a successful work and let simple errors (&lt;em&gt;or such CSS complexities&lt;/em&gt;) &lt;strong&gt;never stop you&lt;/strong&gt; on the way to realizing your projects! 😉&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#photos-and-videos-by"&gt;
  &lt;/a&gt;
  Photos and videos by
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Maik Jonietz &lt;a href="https://unsplash.com/photos/_yMciiStJyY"&gt;https://unsplash.com/photos/_yMciiStJyY&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Alessandro Bianchi &lt;a href="https://unsplash.com/photos/_kdTyfnUFAc"&gt;https://unsplash.com/photos/_kdTyfnUFAc&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ps"&gt;
  &lt;/a&gt;
  P.S.
&lt;/h2&gt;

&lt;p&gt;If you want more articles like this on this blog, then post a comment below and subscribe to me. Thanks! 😘&lt;/p&gt;

</description>
      <category>css</category>
      <category>tailwindcss</category>
      <category>vue</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Web development ROADMAP in 2021</title>
      <author>Kavindu Santhusa</author>
      <pubDate>Mon, 18 Oct 2021 13:11:46 +0000</pubDate>
      <link>https://dev.to/ksengine/web-development-roadmap-in-2021-pbd</link>
      <guid>https://dev.to/ksengine/web-development-roadmap-in-2021-pbd</guid>
      <description>&lt;p&gt;Today I'm going to introduce the roadmap to be a web developer. This is the first article explaining the basics of this series . In future articles I'll discuss about all the facts one by one.&lt;/p&gt;

&lt;p&gt;If you have any questions &lt;strong&gt;ask me&lt;/strong&gt; through comments or contact me via E-mail.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ho5KNseC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/kamranahmedse/developer-roadmap/raw/master/img/intro.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ho5KNseC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/kamranahmedse/developer-roadmap/raw/master/img/intro.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's learn it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-is-the-web-developer"&gt;
  &lt;/a&gt;
  Who is the Web Developer?
&lt;/h2&gt;

&lt;p&gt;A &lt;strong&gt;web developer&lt;/strong&gt; is a programmer who specializes in, or is specifically engaged in, the development of World Wide Web(&lt;a href="http://www........"&gt;www........&lt;/a&gt;) application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-front-end"&gt;
  &lt;/a&gt;
  What is front end?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fj9NYgWu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://source.unsplash.com/NIo8Fd-RngE" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fj9NYgWu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://source.unsplash.com/NIo8Fd-RngE" alt="Photo of front end Unsplash"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Front-end web development&lt;/strong&gt;  is the development of the  graphical user interface of a website, so that users can view and interact with that website.&lt;br&gt;
You can learn more about front end in future articles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-back-end"&gt;
  &lt;/a&gt;
  What is back end?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kq7H-Hmh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://source.unsplash.com/yLDabpoCL3s" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kq7H-Hmh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://source.unsplash.com/yLDabpoCL3s" alt="Photo of back end Unsplash"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The back end refers to parts of a computer application or a program's code that allow it to operate and that cannot be accessed by a user. ... The back end is also called the  &lt;strong&gt;data access layer of software or hardware&lt;/strong&gt;  and includes any functionality that needs to be accessed and navigated to by digital means. You can learn more about back end in future articles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-devops"&gt;
  &lt;/a&gt;
  What is DevOps?
&lt;/h2&gt;

&lt;p&gt;&lt;a title="Kharnagy, CC BY-SA 4.0 &amp;lt;https://creativecommons.org/licenses/by-sa/4.0&amp;gt;, via Wikimedia Commons" href="https://commons.wikimedia.org/wiki/File:Devops-toolchain.svg"&gt;&lt;img alt="Devops-toolchain" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xn3SlMme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/thumb/0/05/Devops-toolchain.svg/512px-Devops-toolchain.svg.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DevOps&lt;/strong&gt; is the  &lt;strong&gt;combination of cultural philosophies, practices, and tools&lt;/strong&gt;  that increases an organization's ability to deliver applications and services at high velocity: evolving and improving products at a faster pace than organizations using traditional software development and infrastructure management processes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#required-tools"&gt;
  &lt;/a&gt;
  Required tools
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-git"&gt;
  &lt;/a&gt;
  What is Git?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NdzEKFml--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://git-scm.com/images/logo%402x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NdzEKFml--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://git-scm.com/images/logo%402x.png" alt="Git"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Git&lt;/strong&gt; is software for tracking changes in any set of files, usually used for coordinating work among programmers collaboratively developing source code during software development. Its goals include speed, data integrity, and support for distributed, non-linear workflows (thousands of parallel branches running on different systems).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Wait for the the next article to learn more about Git.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#what-is-terminal"&gt;
  &lt;/a&gt;
  What is Terminal?
&lt;/h3&gt;

&lt;p&gt;Terminal means CLI.&lt;br&gt;
&lt;a title="Microsoft Corporation, Public domain, via Wikimedia Commons" href="https://commons.wikimedia.org/wiki/File:Windows_PowerShell_1.0_PD.png"&gt;&lt;img alt="Windows PowerShell 1.0 PD" src="https://res.cloudinary.com/practicaldev/image/fetch/s--JSP_6zLT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Windows_PowerShell_1.0_PD.png/512px-Windows_PowerShell_1.0_PD.png"&gt;&lt;/a&gt;&lt;br&gt;
A command-line interface (CLI) processes commands to a computer program in the form of lines of text. The program which handles the interface is called a command-line interpreter or command-line processor. Operating systems implement a command-line interface in a shell for interactive access to operating system functions or services. &lt;br&gt;
You can learn more about terminal in future articles.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-means-data-structures-and-algorithms"&gt;
  &lt;/a&gt;
  What means Data structures and Algorithms?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gfcJ5VFW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://source.unsplash.com/cV9-hOgoaok" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gfcJ5VFW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://source.unsplash.com/cV9-hOgoaok" alt="Photo of back end Unsplash"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simply a &lt;strong&gt;Data structure&lt;/strong&gt; is a place for computer programme to store data.&lt;br&gt;
Algorithm is a method to solve a problem related to programming.&lt;/p&gt;

&lt;p&gt;You can learn more about them in future articles.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-github"&gt;
  &lt;/a&gt;
  What is Github?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zWuniqxt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.githubassets.com/images/modules/site/home/globe-700.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zWuniqxt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.githubassets.com/images/modules/site/home/globe-700.jpg" alt="Github and world"&gt;&lt;/a&gt;&lt;br&gt;
Millions of developers and companies build, ship, and maintain their software on GitHub—the largest and most advanced development platform in the world.&lt;/p&gt;

&lt;p&gt;You can learn more about Github in future articles.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-licenses"&gt;
  &lt;/a&gt;
  What are licenses?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fzZkKcud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://source.unsplash.com/yCdPU73kGSc" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fzZkKcud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://source.unsplash.com/yCdPU73kGSc" alt="The law"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An license protects contributors and users. Businesses and savvy developers won’t touch a project without this protection.&lt;br&gt;
You can learn more about Licenses in future articles.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-semver"&gt;
  &lt;/a&gt;
  What is SemVer?
&lt;/h3&gt;

&lt;h1&gt;Semantic Versioning 2.0.0&lt;/h1&gt;

&lt;p&gt;Semantic versioning is  &lt;strong&gt;a formal convention for specifying compatibility using a three-part version number&lt;/strong&gt;: major version; minor version; and patch. The patch number is incremented for minor changes and bug fixes which do not change the software's application programming interface (API). &lt;br&gt;
You can learn more about versioning in future articles.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-ssh"&gt;
  &lt;/a&gt;
  What is SSh?
&lt;/h3&gt;

&lt;p&gt;SSH means &lt;strong&gt;S&lt;/strong&gt;ecure &lt;strong&gt;Sh&lt;/strong&gt;ell.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rIkU1NZa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://source.unsplash.com/DoWZMPZ-M9s" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rIkU1NZa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://source.unsplash.com/DoWZMPZ-M9s" alt="A locked phone"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Secure Shell is a cryptographic network protocol for operating network services securely over an unsecured network. Typical applications include remote command-line, login, and remote command execution, but any network service can be secured with SSH.&lt;br&gt;
You can learn more about SSH in future articles.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-httphttps-and-apis"&gt;
  &lt;/a&gt;
  What are HTTP/HTTPS and APIs.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;HTTP - Hypertext Transfer Protocol&lt;/li&gt;
&lt;li&gt;HTTPS - Hypertext Transfer Protocol Secure&lt;/li&gt;
&lt;li&gt;API - application programming interface
&lt;a title="IETF HTTP Working Group (HTTPbis), Public domain, via Wikimedia Commons" href="https://commons.wikimedia.org/wiki/File:HTTP_logo.svg"&gt;&lt;img alt="HTTP logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ClwViq-e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/thumb/5/5b/HTTP_logo.svg/512px-HTTP_logo.svg.png"&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Hypertext Transfer Protocol is an application layer protocol in the Internet protocol suite model for distributed, collaborative, hypermedia information systems.&lt;/p&gt;

&lt;p&gt;Hypertext Transfer Protocol Secure is an extension of the Hypertext Transfer Protocol. It is used for secure communication over a computer network, and is widely used on the Internet. In HTTPS, the communication protocol is encrypted using Transport Layer Security or, formerly, Secure Sockets Layer.&lt;/p&gt;

&lt;p&gt;An application programming interface is a connection between computers or between computer programs. It is a type of software interface, offering a service to other pieces of software. A document or standard that describes how to build or use such a connection or interface is called an API specification.&lt;/p&gt;

&lt;p&gt;You can learn more about them in future articles.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-design-patterns"&gt;
  &lt;/a&gt;
  What are design patterns?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jcmvbw1Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://source.unsplash.com/I7I4cir4dTc" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jcmvbw1Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://source.unsplash.com/I7I4cir4dTc" alt="A pattern"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In software engineering, a software design pattern is a general, reusable solution to a commonly occurring problem within a given context in software design. It is not a finished design that can be transformed directly into source or machine code. Rather, it is a description or template for how to solve a problem that can be used in many different situations. Design patterns are formalized best practices that the programmer can use to solve common problems when designing an application or system.&lt;br&gt;
You can learn more about them in future articles.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-character-encodings"&gt;
  &lt;/a&gt;
  What are character encodings?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BGGPayg_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://source.unsplash.com/KgLtFCgfC28" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BGGPayg_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://source.unsplash.com/KgLtFCgfC28" alt="A pattern"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In computing, data storage, and data transmission, character encoding is used to represent a repertoire of characters by some kind of encoding system that assigns a number to each character for digital representation.&lt;br&gt;
You can learn more about them in future articles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-end"&gt;
  &lt;/a&gt;
  The End.
&lt;/h2&gt;

&lt;p&gt;I think this article is a complete roadmap for you.&lt;br&gt;
If you have any questions &lt;strong&gt;ask me&lt;/strong&gt; through comments or contact me via E-mail.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The next article is about &lt;strong&gt;Git&lt;/strong&gt;.&lt;br&gt;
&lt;strong&gt;🏃‍♀️🏃‍♂️ Follow me&lt;/strong&gt; for more articles..&lt;br&gt;
Please &lt;strong&gt;⭐ vote to this article&lt;/strong&gt; if you love this article.&lt;br&gt;
Thanks 💖💖💖.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>devops</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Are recruiters worth it in the tech world?</title>
      <author>Jelle Smeets</author>
      <pubDate>Mon, 18 Oct 2021 12:46:37 +0000</pubDate>
      <link>https://dev.to/smeetsmeister/are-recruiters-worth-it-in-the-tech-world-49k9</link>
      <guid>https://dev.to/smeetsmeister/are-recruiters-worth-it-in-the-tech-world-49k9</guid>
      <description>&lt;p&gt;Everyone in tech must have noticed it is a job-seekers market. Software engineers are hot, and if you have a Linkedin profile you will probably get attention from recruiters. Over the years I have had bad recruiters contact me. Found my phone number somewhere (because I definitely did not put it on Linkedin or gave it to them) and called me with non-relevant job offers. The same recruiters don't know the difference between Java and Javascript.&lt;/p&gt;

&lt;p&gt;Over the last few years, I have done as much as I can to get my personal data removed, to stop the recruiter spam. With a little bit of help from the GDPR laws in Europe, I was able to remove my personal data from a scraper tool a few recruitment agencies use. Have quite a few recruiters blacklisted on my phone, and many more things.&lt;/p&gt;

&lt;p&gt;But how bad are the recruiters really? Are my negative experiences the rule, or the exception? If I was looking for a new job, can I get a matching position or are they all trash? Let's do an experiment to find out!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-experiment"&gt;
  &lt;/a&gt;
  The experiment
&lt;/h2&gt;

&lt;p&gt;The experiment I wanted to do was to put my Linkedin status, that I am open for a new job, so you won't have to ;). I made it as real looking as I could, I was open for Scrum Master, Team lead, or Engineering manager positions in the regions close to Apeldoorn, The Netherlands.&lt;/p&gt;

&lt;p&gt;But how do you track if a message is genuine and not spam sent to multiple recipients? I found this very interesting tweet by Kelly Vaughn that caught my attention.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
    &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__two-pics"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jrJtIlde--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EgtWVg6XsAIl7S2.jpg" alt="unknown tweet media content"&gt;
    &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--qmOMP-Rn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1412540626357395458/zQ2a2EhB_normal.jpg" alt="Kelly Vaughn profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Kelly Vaughn
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @kvlly
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I saw a post on LinkedIn that recommended adding an emoji at the beginning of your name because you could see who was using some sort of automation tool to send out connection requests.&lt;br&gt;&lt;br&gt;I can now confirm it works. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      00:24 AM - 31 Aug 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1300227848402329601" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1300227848402329601" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1300227848402329601" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#what-do-we-want-to-know"&gt;
  &lt;/a&gt;
  What do we want to know?
&lt;/h2&gt;

&lt;p&gt;I tracked all messages I got when I changed my profile that I was open to working. Per message I kept track of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Company&lt;/li&gt;
&lt;li&gt;Does it contain my real name, or my emoji first name?&lt;/li&gt;
&lt;li&gt;Does it contain any personalized information in the message itself?&lt;/li&gt;
&lt;li&gt;Does it come from a recruitment agency or an inhouse recruiter?&lt;/li&gt;
&lt;li&gt;Does the message contain for which company/job it is?

&lt;ul&gt;
&lt;li&gt;If yes, is the job actually relevant to what I posted as my preferences?&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this information I would like to answers the following questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is the ratio of low effort and personalized messages?&lt;/li&gt;
&lt;li&gt;What is the ration between job positions with my preference and without.&lt;/li&gt;
&lt;li&gt;Is it worth the effort for someone in tech to use Linkedin to find a relevant job?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-results"&gt;
  &lt;/a&gt;
  The results
&lt;/h2&gt;

&lt;p&gt;In the first &lt;strong&gt;4&lt;/strong&gt; days, I got &lt;strong&gt;15&lt;/strong&gt; messages on Linkedin. After those 4 days the messages dried up, and no other messages were received. Let's take a closer look at what was in those messages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-the-ratio-of-bad-and-good-messages"&gt;
  &lt;/a&gt;
  What is the ratio of bad and good messages?
&lt;/h3&gt;

&lt;p&gt;The first question I would like to answer is what the ratio of good to bad messages is. The experience I had in the past was that I mostly get bad messages from Recruiters trying to get an easy score. But is that actually the case?&lt;/p&gt;

&lt;p&gt;From all messages, &lt;strong&gt;80&lt;/strong&gt;% contained no personal information whatsoever. No names, no job, just messages to get me to call them, get my phone number, or accept an invite for a connection.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ffyhkJ8T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hwir7pb92p60k5wm90vq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ffyhkJ8T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hwir7pb92p60k5wm90vq.png" alt="mount of messages that contained personalized information"&gt;&lt;/a&gt;&lt;br&gt;
Amount of messages that contained personalized information&lt;/p&gt;

&lt;p&gt;I was also curious how many recruiters would fell for the "emoji as a first name" tactic I talked about at the beginning of the blog post. In total &lt;strong&gt;33.3&lt;/strong&gt;% of messages contained the emoji. The funniest one was a message that was written to make it look like they actually put effort into writing a personal message, and they are not "like the other recruiters". But sent the message to Dear Emoji.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g4SdSh4q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fid0jvmt7y4mnjk1wzf7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g4SdSh4q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fid0jvmt7y4mnjk1wzf7.png" alt="Amount of messages that used emoji as my first name"&gt;&lt;/a&gt;&lt;br&gt;
Amount of messages that used emoji as my first name&lt;/p&gt;

&lt;p&gt;During the experiment, I got an e-mail from Linkedin that confirmed my suspicions. From the 13 messages I received at that point, only 6 of them actually viewed my profile.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hjNygih0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/98k8zmhq37d5zdnopk0c.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hjNygih0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/98k8zmhq37d5zdnopk0c.jpg" alt="Linkedin giving me an update"&gt;&lt;/a&gt;&lt;br&gt;
Linkedin giving me an update&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-the-ratio-between-job-positions-with-and-without-my-preference"&gt;
  &lt;/a&gt;
  What is the ratio between job positions with and without my preference?
&lt;/h3&gt;

&lt;p&gt;Another heard complaint is recruiters reaching out to you for anything related to a computer. Java developer for someone with PHP on their resume? For some recruiters, this is no problem.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4xn1ZldF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tjaz9kvd3z31ha9x4zcd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4xn1ZldF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tjaz9kvd3z31ha9x4zcd.png" alt="Did the message include job information?"&gt;&lt;/a&gt;&lt;br&gt;
Did the message include job information?&lt;/p&gt;

&lt;p&gt;The data shows that only &lt;strong&gt;13.3&lt;/strong&gt;% of the messages actually contain a job position and company. While some only contain a title, some also contain for which company. So far only two messages included both the title and the company, and those were both from in-house recruiters and had personalized messages. From recruitment agencies, 3 messages included a job title. They were all for a development role (lead, front end, PHP). You can almost spot the pattern there. In the graph below you can see the overlap. All personal messages that contained good information on the job and company where not send from a recruiter at an Agency.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zXrj-rIZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iql563j075fa5iuxdbd1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zXrj-rIZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iql563j075fa5iuxdbd1.png" alt="Did the message come from an agency?"&gt;&lt;/a&gt;&lt;br&gt;
Did the message come from an agency?&lt;/p&gt;

&lt;p&gt;I have noticed there are some agencies that will stand out, in a bad way. Two agencies reached out to me from 3 recruiters, which indicates they don't have a really good internal process for following up on possible candidates. Certainly, if those are all low-effort messages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#is-it-worth-the-effort"&gt;
  &lt;/a&gt;
  Is it worth the effort?
&lt;/h3&gt;

&lt;p&gt;Is it worth the effort to use recruiters on Linkedin? I would say it depends. It takes a little bit of time to filter through the spammy messages and finding the real offers. There are some ways to make it easier to spot them, the Emoji trick helped quite a bit.&lt;/p&gt;

&lt;p&gt;In the end, I got to know about 2 job positions on paper I would be interested in. In conclusion that is the main takeaway of this experiment for me. If you are looking for a new job, you can through Linkedin, therefore you should focus on the messages that are good, instead of focussing on all the garbage messages you get. This experiment and my past experiences have shown most recruitment agencies just don't work for me. If I would look for a new job, I would probably only use the in-house recruiters.&lt;/p&gt;

&lt;p&gt;What are your experiences with recruiters? Do you think they are a good way to find a new job, or do they only send job offers you are not interested in? Let me know down below.&lt;/p&gt;

&lt;p&gt;If you liked this blog post consider subscribing to the &lt;a href="https://blog.jellesmeets.nl/newsletter-signup/"&gt;newsletter&lt;/a&gt;. That way you won't have to miss any new blog posts!&lt;/p&gt;

</description>
      <category>career</category>
      <category>beginners</category>
      <category>experiment</category>
      <category>jobs</category>
    </item>
    <item>
      <title>How to Start a Digital Business on an Old IT Infrastructure</title>
      <author>tarantool</author>
      <pubDate>Mon, 18 Oct 2021 12:45:51 +0000</pubDate>
      <link>https://dev.to/tarantool/how-to-start-a-digital-business-on-an-old-it-infrastructure-14jo</link>
      <guid>https://dev.to/tarantool/how-to-start-a-digital-business-on-an-old-it-infrastructure-14jo</guid>
      <description>&lt;p&gt;Author: Ilya Letunov&lt;br&gt;
Most enterprises base their IT infrastructure on systems developed 10 or even 15 years ago. Ilya Letunov, head of the Tarantool platform and VK Cloud Solutions, explains how it affects the technological development of the business and how to launch new digital services using an outdated infrastructure.&lt;/p&gt;

&lt;p&gt;For a long time, the market had been developing in highly comfortable conditions. There was a practical product, a monetization model, and a client that we saw and understood. But the year 2021 undermined the existing models of consumer behavior. Now customers choose digital services and expect the best possible experience with them.&lt;/p&gt;

&lt;p&gt;The IT infrastructure of many companies was not ready for the traffic surge that followed the transition to remote work. Businesses need to process hundreds of thousands of orders at once, ensure fast and accurate logistics and delivery, store personalized customer profiles, and rely on the omnichannel strategy. Previously, all this gave the business a competitive edge, but now it is a necessity.&lt;/p&gt;

&lt;p&gt;Another change I see is the growth of business data. According to IDC estimates, the total global volume of data generated by companies in 2020 was 59 zettabytes. By 2025, it will be as much as 173 zettabytes, which is three times more. Even the IT systems of the market leaders are no longer able to cope with such loads.&lt;/p&gt;

&lt;p&gt;The base layer of corporate IT systems is really outdated and not designed for modern workloads. The number of requests to IT systems is growing, but the speed of their processing is not.&lt;/p&gt;

&lt;p&gt;Most top managers see the negative effect right away, they don't even have to enter the technical maze.&lt;/p&gt;

&lt;p&gt;Due to a low data transfer rate, an online service customer can put an out-of-stock item in the shopping cart. The result is disappointing: no purchase, no consumer satisfaction, and no company profit. On the other hand, rapid information transfer between the user-side service and the infrastructure improves customer experience, increases loyalty, and, most importantly, directly affects sales growth.&lt;/p&gt;

&lt;p&gt;There is a contradiction here. Outdated and legacy IT systems prevent the development of digital services. But they cannot be completely thrown away. In a large business, this can lead to a restructuring of such a scale that it would be easier to create a new company from scratch.&lt;/p&gt;

&lt;p&gt;What do we do with this?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-threespeed-it-infrastructure"&gt;
  &lt;/a&gt;
  A Three-Speed IT Infrastructure
&lt;/h2&gt;

&lt;p&gt;You can speed up your legacy systems without getting rid of them, using the concept of three-speed IT. This method is gaining popularity around the world and allows accelerating digital services without global IT restructuring. The acceleration is achieved by developing an intermediate layer of IT services. It connects the top level of user and business applications with the company's critical root systems (OSS, BSS, billing, BI, ERP, CRM).&lt;/p&gt;

&lt;p&gt;Usually, those critical systems were developed 10-15 years ago, and their code is outdated. Making changes to them requires a lot of effort, time, and money.&lt;/p&gt;

&lt;p&gt;The top IT layer includes &lt;a href="https://rb.ru/tag/mobile/"&gt;mobile applications&lt;/a&gt;, personal accounts, &lt;a href="https://rb.ru/tag/ecommerce/"&gt;online stores&lt;/a&gt;, call center integration, real-time analytics, etc. These are all the trendy IT solutions that we have witnessed developing in recent years. The update speed requirements at the top IT level are measured in days and if a new service is launched, even in hours.&lt;/p&gt;

&lt;p&gt;The intermediate layer creates a balance between the slow legacy systems and the speed-demanding user services. Hence the name вЂ” three-speed IT.&lt;/p&gt;

&lt;p&gt;Most digital transformation projects are stalled by fear of tampering with what already works. Top managers have a point here: with the current speed of change and the fiercest competition, business processes cannot be stopped even for a minute. They must be improved and accelerated on the fly. Additionally, there is always the risk of implementing an expensive ITВ solution that will be quickly replaced by a new one, X times more efficient.&lt;/p&gt;

&lt;p&gt;The three IT layers concept removes the risks and offers evolutionary development instead of erratic veering between new solutions. Thus, it gives more room to maneuver and experiment.&lt;/p&gt;

&lt;p&gt;I will now explain how three-speed IT works. My first example will be the &lt;a href="https://rb.ru/tag/retail/"&gt;retail business&lt;/a&gt;. Retail is where major players have been actively launching new sales channels and testing digital business models for several years.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-1-retail"&gt;
  &lt;/a&gt;
  Example 1. Retail
&lt;/h3&gt;

&lt;p&gt;In terms of IT infrastructure, many large retailers have been focused on offline customers for a long time. IT had only a supporting role. But as soon as online commerce and express delivery services began to grow rapidly, retailers had to master new sales channels and monetization models. This determined the vector of IT development in traditional offline retail.&lt;/p&gt;

&lt;p&gt;In the late summer of 2020, &lt;a href="https://rb.ru/tag/%D0%BC%D0%B0%D0%B3%D0%BD%D0%B8%D1%82/"&gt;Magnit&lt;/a&gt; decided to launch its express delivery of groceries through the Delivery Club service. It means "delivery to your door in 30 minutes or less" for most grocery store items. The difficulty was that Magnit's corporate IT systems, containing the data on what's in stock, technically had no integration point with the express delivery service.&lt;/p&gt;

&lt;p&gt;The company faced the choice: either completely rebuild its IT infrastructure towards the new direction or create an intermediate layer connecting the upper, user-facing IT level with the lower, business-critical one.&lt;/p&gt;

&lt;p&gt;As a result, the company created an integration layer. It helped accelerate and organize two streams of information вЂ” one regarding products from the central storage and the other about the stock balances of each store.&lt;/p&gt;

&lt;p&gt;With traditional methods, integration usually takes up to six months, but the new IT tool reduced the time approximately threefold. The intermediate IT layer allowed launching a new business model while eliminating the costs of rebuilding, adapting, and configuring the infrastructure.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-2-banks"&gt;
  &lt;/a&gt;
  Example 2. Banks
&lt;/h3&gt;

&lt;p&gt;The banking industry is highly developed technologically, especially in Russia. Nevertheless, banks have faced and continue to deal with a serious challenge вЂ” the many times increased burden on their IT systems. The growing popularity of mobile applications and remote banking services contributes to the situation.&lt;/p&gt;

&lt;p&gt;An increase in customer service requests prompted &lt;a href="https://rb.ru/tag/%D0%B3%D0%B0%D0%B7%D0%BF%D1%80%D0%BE%D0%BC%D0%B1%D0%B0%D0%BD%D0%BA/"&gt;Gazprombank&lt;/a&gt; to look for an accelerator for its IT systems. The bank implemented an intermediate IT layer, which connected critical systems with business applications operated by contact center employees, in-office workers, and remote staff. The new solution made it possible to load client data into RAM and have them instantly displayed in business applications. As a result, the rate of data transfer from the lower layer to the functional services increased by 50 times at once.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-3-telecommunications"&gt;
  &lt;/a&gt;
  Example 3. Telecommunications
&lt;/h3&gt;

&lt;p&gt;Telecommunications is a spectacular example of a dynamic competitive environment. At &lt;a href="https://rb.ru/tag/megafon/"&gt;MegaFon&lt;/a&gt;, with 80 million active users, new projects required improving the digital ecosystem and creating a technological base. You can imagine how large the IT landscape of a major telecom operator is.&lt;/p&gt;

&lt;p&gt;Therefore, MegaFon took the evolutionary path of IT infrastructure development, where new systems did not replace but supplemented the existing ones. Such a move alleviated the burden on the underlying platforms, increased the availability of services, and reduced time to market.&lt;/p&gt;

&lt;p&gt;After transferring the load to a fast data storage "add-on," MegaFon launched more than 25 services in just a few months. Those services now work for 80 million subscribers in 10 time zones without delays or downtime.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-future-of-the-threespeed-model"&gt;
  &lt;/a&gt;
  The Future of the Three-Speed Model
&lt;/h2&gt;

&lt;p&gt;I believe that the speed of change and adaptation to new conditions are crucial factors for a modern enterprise to achieve success. The technical limitations of legacy IT systems devalue promising ideas and business models. At the same time, the costs of rebuilding the IT infrastructure and the losses due to interrupted business processes are many times greater than the potential benefits of a full revamp.&lt;/p&gt;

&lt;p&gt;The development of the IT infrastructure should be approached carefully, iteratively. In this case, it will bring additional value to the company instead of becoming an item of expenditure. The concept of three-speed IT creates an environment for a smooth evolutionary development of the infrastructure. This is probably one of the most effective ways for a business to go digital today.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://www.tarantool.io/en/download/os-installation/docker-hub/?utm_source=dev&amp;amp;utm_medium=referrer&amp;amp;utm_campaign=2021"&gt;Get Tarantool on our website&lt;/a&gt;&lt;br&gt;
&lt;a href="http://t.me/tarantool?utm_source=dev&amp;amp;utm_medium=referrer&amp;amp;utm_campaign=2021"&gt;Get help in our telegram channel&lt;/a&gt;&lt;/p&gt;

</description>
      <category>it</category>
      <category>innovations</category>
      <category>business</category>
      <category>programming</category>
    </item>
    <item>
      <title>How would you refactor this JS function?</title>
      <author>Lars Grammel</author>
      <pubDate>Mon, 18 Oct 2021 12:45:01 +0000</pubDate>
      <link>https://dev.to/p42/how-would-you-refactor-this-js-function-4n71</link>
      <guid>https://dev.to/p42/how-would-you-refactor-this-js-function-4n71</guid>
      <description>&lt;p&gt;During the weekend, I found the following small JS function in a &lt;a href="https://dev.to/luigizaccagnini/refactoring-code-in-octo-3397"&gt;blog post&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lineChecker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isFirstLine&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;``&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;isFirstLine&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;h1&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/h1&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isFirstLine&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/p&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br /&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I refactored it and was thinking that it could be an excellent beginner-level refactoring kata.&lt;/p&gt;

&lt;p&gt;How would you refactor it?&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>javascript</category>
      <category>refactoring</category>
      <category>webdev</category>
    </item>
    <item>
      <title>You are reading environment variables the wrong way in Next.js</title>
      <author>Austin Shelby</author>
      <pubDate>Mon, 18 Oct 2021 12:38:54 +0000</pubDate>
      <link>https://dev.to/austinshelby/you-are-reading-environment-variables-the-wrong-way-in-nextjs-45da</link>
      <guid>https://dev.to/austinshelby/you-are-reading-environment-variables-the-wrong-way-in-nextjs-45da</guid>
      <description>&lt;p&gt;If you have ever written code that looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://www.example.com/api/blog?api_key=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;API_KEY&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Then you are doing it wrong!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here's why this is a bad idea.&lt;/p&gt;

&lt;p&gt;In a scenario where you build the application without having set the &lt;code&gt;API_KEY&lt;/code&gt; environment variable the application will use &lt;code&gt;undefined&lt;/code&gt; instead.&lt;/p&gt;

&lt;p&gt;Obviously &lt;code&gt;undefined&lt;/code&gt; is not the correct api key which will make any request using that URL fail.&lt;/p&gt;

&lt;p&gt;The problem here is that when the error surfaces, the message will be very misleading and look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Error: Unauthorized
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this error will only show up when you try to use the url to fetch the blog posts.&lt;/p&gt;

&lt;p&gt;If fetching the blog posts is an essential feature, &lt;strong&gt;the application should not have even compiled without the api key being available&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Naively expecting the &lt;code&gt;API_KEY&lt;/code&gt; environment variable to exist will hide the bug and make this problem a pain to debug due to the misleading error message.&lt;/p&gt;

&lt;p&gt;To fix this issue we need two things.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;When a problem exists that causes the application to not function, the application needs to fail immediately and visibly.&lt;/li&gt;
&lt;li&gt;A meaningful abstraction to encapsulate the loading of environment variables.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#how-to-load-environment-variables-in-nextjs"&gt;
  &lt;/a&gt;
  How to load environment variables in Next.js
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;This works with any node.js application. Next.js just makes this easier, as it comes with a lot of necessary boilerplate code&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Let me show you how to use environment variables in Next.js correctly, and then explain why this works.&lt;/p&gt;

&lt;p&gt;Create a &lt;code&gt;.env.local&lt;/code&gt; file. Here you will put all of your environment variables you want to use on your local development environment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;API_KEY=secret
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next.js automatically adds this file to &lt;code&gt;.gitignore&lt;/code&gt; so you don't have to worry about it ending up in your version control system.&lt;/p&gt;

&lt;p&gt;If you are using any other framework than Next.js you need to use a package like &lt;a href="https://www.npmjs.com/package/dotenv"&gt;dotenv&lt;/a&gt; to read the environment variables from a file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now to the bread and butter&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Create a &lt;code&gt;config.ts&lt;/code&gt; file with this code to read the environment variables into your config.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getEnvironmentVariable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;environmentVariable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;unvalidatedEnvironmentVariable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;environmentVariable&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;unvalidatedEnvironmentVariable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="s2"&gt;`Couldn't find environment variable: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;environmentVariable&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;unvalidatedEnvironmentVariable&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;getEnvironmentVariable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;API_KEY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And change code that we wrote earlier into this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./config&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://www.example.com/api/blog?api_key=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#why-this-is-the-correct-way-to-load-environment-variables"&gt;
  &lt;/a&gt;
  Why this is the correct way to load environment variables
&lt;/h2&gt;

&lt;p&gt;In a case where you forgot to add the environment variable &lt;code&gt;API_KEY&lt;/code&gt; the application won't even build/compile, and it will throw an error like this: &lt;code&gt;Couldn't find environment variable: API_KEY&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our application now fails immediately and visibly.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is called &lt;em&gt;failing fast&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;It is part of the clean code principles, which you can read more about here: &lt;a href="https://www.martinfowler.com/ieeeSoftware/failFast.pdf"&gt;https://www.martinfowler.com/ieeeSoftware/failFast.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Because we are using TypeScript, we can be 100% sure that all the values in the config exist.&lt;/p&gt;

&lt;p&gt;Additionally, TypeScript helps us avoid small bugs.&lt;/p&gt;

&lt;p&gt;If we make a typo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://www.example.com/api/blog?api_key=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apiKeu&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;TypeScript will give us the following error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Property 'apiKeu' does not exist on type '{ apiKey: string; }'. Did you mean 'apiKey'?
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;How cool is that!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It's like coding with superpowers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#encapsulating-logic"&gt;
  &lt;/a&gt;
  Encapsulating logic
&lt;/h2&gt;

&lt;p&gt;Let's look at the example we started with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://www.example.com/api/blog?api_key=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;API_KEY&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Do you notice that &lt;code&gt;process.env&lt;/code&gt; part there?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why should the functionality of fetching blog posts know anything about the user environment the application is currently running in?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Well it shouldn't.&lt;/p&gt;

&lt;p&gt;The logic of fetching blog posts doesn't care where it gets the api key from. If it comes from the user environment, text file, or an API doesn't make any difference to it.&lt;/p&gt;

&lt;p&gt;Therefore, it shouldn't rely on &lt;code&gt;process.env&lt;/code&gt; or any other low-level abstractions.&lt;/p&gt;

&lt;p&gt;Creating a config for the sole purpose of reading environment variables encapsulates this functionality and creates a meaningful high-level abstraction.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A config&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Thanks to this, we can change the way we get the config values (like the api key) without touching the blog post functionality at all!&lt;/p&gt;

&lt;p&gt;Another very hidden benefit is that unit testing just became ten times easier. Instead of playing around with our user environment, we can just mock the config with the values we want to.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;While this might seem pedantic, keeping these small things in your mind while writing code will make you a better software engineer.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>nextjs</category>
    </item>
    <item>
      <title>Simplicity as a Prerequisite for Reliability in Modern Software Development: Introduction</title>
      <author>DevSimplicity|Simple, Not Easy</author>
      <pubDate>Mon, 18 Oct 2021 12:29:51 +0000</pubDate>
      <link>https://dev.to/devsimplicity/simplicity-as-a-prerequisite-for-reliability-in-modern-software-development-introduction-4nfe</link>
      <guid>https://dev.to/devsimplicity/simplicity-as-a-prerequisite-for-reliability-in-modern-software-development-introduction-4nfe</guid>
      <description>&lt;p&gt;"Simplicity as a Prerequisite for Reliability in Modern Software Development" is a new, in-progress series of topics focused on the problems of drastically increasing complexity in the modern software development. Instead of trying to solve the problems of too many failing, complex and costly abstractions by adding even more complexity and bloat, let's try to move into the opposite direction.&lt;/p&gt;

&lt;p&gt;In his article from 1975, &lt;a href="https://www.cs.utexas.edu/users/EWD/transcriptions/EWD04xx/EWD498.html"&gt;How do we tell truths that might hurt?&lt;/a&gt;, Edsger W. Dijkstra said "Simplicity is prerequisite for reliability". This words are now more important than ever.&lt;/p&gt;




&lt;p&gt;A little background: I've been working on software development for over two decades - with various tech stacks at different levels and positions (development, system administration, architecture; small companies, big companies, my own projects). I've seen technologies come and go and too many times experienced the horrors of working on the software written by &lt;a href="https://devsimplicity.com/resume-driven-development"&gt;resume driven development&lt;/a&gt; and &lt;a href="https://devsimplicity.com/cargo-cult-programming"&gt;cargo cult programming&lt;/a&gt; followers.&lt;/p&gt;

&lt;p&gt;Production software at most places today is often a huge, experimental ball of mud with ever increasing tower of duct-tape fixes upon duct-tape fixes.&lt;/p&gt;

&lt;p&gt;To try to understand the problem, we need to dig a bit deeper into the underlying issues.&lt;/p&gt;

&lt;h2 id="snake-oil-marketing"&gt;Snake-oil marketing&lt;/h2&gt;

&lt;p&gt;Two first comments in this HN thread: &lt;a href="https://news.ycombinator.com/item?id=17175479"&gt;Will Kubernetes Collapse Under the Weight of Its Complexity?&lt;/a&gt; sums this issue well:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This whole image, to me, represents a big problem with software engineering today: &lt;a href="https://twitter.com/dankohn1/status/989956137603747840"&gt;https://twitter.com/dankohn1/status/989956137603747840&lt;/a&gt;&lt;br&gt;The industry is full of engineers who are experts in weirdly named "technologies" (which are really just products and libraries) but have no idea how the actual technologies (e.g. TCP/IP, file systems, memory hierarchy etc.) work. I don't know what to think when I meet engineers who know how to setup an ELB on AWS but don't quite understand what a socket is...&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;The overemphasis on products is a real problem because it makes the industry so susceptible to marketing snake-oil.&lt;br&gt;Who would trust a doctor who proclaims his expertise in terms of brand names: "I've got ten years of experience in Cipro and Amoxil. Lately I've been prescribing Zithromax too! It's exciting to write that big Z. I really like Pfizer's community, their Slack is so helpful."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Unfortunately, it's incredibly easy to sell the snake oil in our industry today and popular tech blogs are incredibly successful in that.&lt;/p&gt;

&lt;h1 id="short-vs-long-term-thinking"&gt;Short vs. long term thinking&lt;/h1&gt;

&lt;p&gt;Another aspect of the problem is the short vs long term thinking. Our industry is obsessed with getting results as quickly as possible, no matter what are the long term costs. Designing things that will survive the test of the time is not easy, it takes a lot of time and effort.&lt;/p&gt;

&lt;h1 id="simple-vs-easy"&gt;Simple vs. easy&lt;/h1&gt;

&lt;p&gt;This is directly related to the another important concept: easy vs simple thinking. People often conflate this two words, but they are very different. Complex means intertwined, braided together, the opposite of simple. A lot of things in software development these days are easy to start with, but later (when that buried complexity rears its ugly head) turn into painful and costly mess.&lt;/p&gt;

&lt;p&gt;These problems are nothing new, but it's becoming much, much worse.&lt;/p&gt;

&lt;p&gt;Our whole society is obsessed with making everything bigger and more complex. It's not surprising that this is also reflecting on the software development. The purpose of this series of topics is also to inspire you to try to approach things in a different way. To quote the great Ernst F. Schumacher:&lt;/p&gt;

&lt;p&gt;"Any intelligent fool can make things bigger, more complex, and more violent. It takes a touch of genius — and a lot of courage to move in the opposite direction."&lt;/p&gt;




&lt;p&gt;To get the idea of what we'll be talking about, see the &lt;a href="https://devsimplicity.com/topic-list"&gt;Topic List&lt;/a&gt; (WIP).&lt;/p&gt;

&lt;p&gt;If you're interested in the updates, feel free to follow me here: &lt;a href="https://twitter.com/devsimplicity"&gt;https://twitter.com/devsimplicity&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>showdev</category>
      <category>linux</category>
    </item>
    <item>
      <title>Continuously deploy a Flask App using Gunicorn on Koyeb</title>
      <author>Edouard Bonlieu</author>
      <pubDate>Mon, 18 Oct 2021 12:26:10 +0000</pubDate>
      <link>https://dev.to/koyeb/continuously-deploy-a-flask-app-using-gunicorn-on-koyeb-5065</link>
      <guid>https://dev.to/koyeb/continuously-deploy-a-flask-app-using-gunicorn-on-koyeb-5065</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Flask is a lightweight web framework written in Python that offers developers powerful tools and features to create web applications with ease and flexibility. &lt;/p&gt;

&lt;p&gt;This guide demonstrates how to deploy a Flask application using Gunicorn on the Koyeb Severless Platform. You will create a "Hello World" Flask application, push your code to a GitHub repository, and then deploy your application on the Koyeb platform using its git-driven deployment.&lt;/p&gt;

&lt;p&gt;With Koyeb's git-driven deployment, your application benefits from a built-in continuous deployment pipeline because each git push you make to your repository automatically triggers a new build and deployment for your application on the Koyeb Serverless Platform. &lt;/p&gt;

&lt;p&gt;For those who prefer deploying Docker containers, we also published a guide explaining how to dockerize and deploy a &lt;a href="https://www.koyeb.com/tutorials/python-flask-application-deployment-on-koyeb"&gt;Python Flask application on the Koyeb Serverless Platform&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h2&gt;

&lt;p&gt;To successfully follow and complete this guide, you need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;a href="////app.koyeb.com/auth/signin"&gt;&lt;strong&gt;Koyeb account&lt;/strong&gt;&lt;/a&gt; to deploy and run your Python Flask application&lt;/li&gt;
&lt;li&gt;
&lt;a href="////www.python.org/downloads/"&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/a&gt; installed on your computer&lt;/li&gt;
&lt;li&gt;A &lt;a href="////github.com/"&gt;&lt;strong&gt;GitHub account&lt;/strong&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#steps"&gt;
  &lt;/a&gt;
  Steps
&lt;/h2&gt;

&lt;p&gt;To successfully create and deploy Flask application on Koyeb using git-driven deployment, you will need to follow these steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#create-a-flask-application"&gt;Create a Flask application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deploy-the-flask-application-on-koyeb"&gt;Deploy the Flask application on Koyeb&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#create-a-flask-application"&gt;
  &lt;/a&gt;
  Create a Flask application
&lt;/h2&gt;

&lt;p&gt;Begin by creating a directory where our application will live and moving into it by running the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir flask-on-koyeb
cd flask-on-koyeb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-a-virtual-environment"&gt;
  &lt;/a&gt;
  Create a virtual environment
&lt;/h3&gt;

&lt;p&gt;Next, we will create a virtual environment, also known as virtualenv. Virtual environments allow you to create an isolated Python environment to avoid interfering with Python's system packages or other virtual environments.&lt;/p&gt;

&lt;p&gt;To create a virtual environment, execute:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python3 -m venv ~/.venv/flask-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command creates a new directory &lt;code&gt;flask-app&lt;/code&gt; in the ~/.venv directory. The virtualenv contains a copy of the Python interpreter, pip, the standard library, and various supporting files.&lt;/p&gt;

&lt;p&gt;To activate the virtualenv we just created, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;source ~/.venv/flask-app/bin/activate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The virtualenv python and pip executables are now added into your shell’s PATH.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-dependencies"&gt;
  &lt;/a&gt;
  Install Dependencies
&lt;/h3&gt;

&lt;p&gt;Next, install the dependencies required to run the application. In this case, we need Flask and Gunicorn. Flask is the lightweight Python framework we are using for this application and Gunicorn is a web server gateway interface (WSGI) server implementation used to run Python web apps. Gunicorn is a high-performing server better suited for production traffic.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install Flask Gunicorn # Install Flask and Gunicorn
pip freeze &amp;gt; requirements.txt # Create the requirements.txt to store the dependencies and version of each package required to run our application.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-the-flask-application"&gt;
  &lt;/a&gt;
  Create the Flask application
&lt;/h3&gt;

&lt;p&gt;In your &lt;code&gt;flask-on-koyeb&lt;/code&gt; directory, create a new &lt;code&gt;app.py&lt;/code&gt; file with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from flask import Flask
app = Flask(__name__)

@app.route('/')
def hello_world():
    return 'Hello, World!'

if __name__ == "__main__":
    app.run()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This file is storing our Flask application code. In the snipper above, we define a route to handle &lt;code&gt;/&lt;/code&gt; requests and return &lt;code&gt;Hello, World!&lt;/code&gt; as a response.&lt;/p&gt;

&lt;p&gt;Check to see if the application is working locally by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python3 app.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your browser, go to &lt;code&gt;http://localhost:5000&lt;/code&gt; and you will see &lt;code&gt;Hello, World!&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-git-directory-for-the-flask-application"&gt;
  &lt;/a&gt;
  Create a git directory for the Flask application
&lt;/h2&gt;

&lt;p&gt;Now that we have created our Flask application, we will create a git directory to store it.&lt;/p&gt;

&lt;p&gt;Initialize a new git directory for your Flask project by running the following in your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To keep only the necessary files in the repository, add this .gitignore file to exclude unnecessary files.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl https://raw.githubusercontent.com/github/gitignore/master/Python.gitignore &amp;gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, execute the following command to add your files and commit the changes to your repository:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add .
git commit -m "Flask app initial commit"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open a new tab in your browser and go to GitHub. Create a new repository named &lt;code&gt;flask-on-koyeb&lt;/code&gt; and click the &lt;em&gt;Create repository&lt;/em&gt; button. Then, go back to your terminal and add GitHub as a remote repository by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git remote add origin git@github.com:YOUR_GITHUB_USERNAME/flask-on-koyeb.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Rename the repository default branch to main executing:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git branch -M main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, push your changes to the GitHub repository by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push -u origin main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, you are ready to deploy your application on Koyeb.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploy-the-flask-application-on-koyeb"&gt;
  &lt;/a&gt;
  Deploy the Flask application on Koyeb
&lt;/h2&gt;

&lt;p&gt;On the &lt;a href="////app.koyeb.com/apps"&gt;Koyeb Control Panel&lt;/a&gt;, click the &lt;strong&gt;Create App&lt;/strong&gt; button.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In the form, select &lt;code&gt;GitHub&lt;/code&gt; as your deployment method.&lt;/li&gt;
&lt;li&gt;Under &lt;strong&gt;&lt;em&gt;Repository&lt;/em&gt;&lt;/strong&gt;, select your repository and specify the &lt;strong&gt;&lt;em&gt;Branch&lt;/em&gt;&lt;/strong&gt;. For this demo, put &lt;code&gt;Main&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Specify &lt;code&gt;gunicorn app:app&lt;/code&gt; for your &lt;strong&gt;&lt;em&gt;Run command&lt;/em&gt;&lt;/strong&gt; to let Koyeb know how to launch your application.&lt;/li&gt;
&lt;li&gt;Then, give your App a name, i.e &lt;code&gt;koyeb-flask-demo&lt;/code&gt;, and click &lt;strong&gt;Create App.&lt;/strong&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Note: You can add more regions, change the instance size, set environment variables, and define horizontal scaling according to your needs.&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;You land on the deployment page of your service where you can follow the progress of your Flask application's deployment. Koyeb will take care to build and deploy your application. Once these steps are completed, you can access your application by clicking your App URL ending with koyeb.app in the Koyeb control panel.&lt;/p&gt;

&lt;p&gt;If you want to learn about how Koyeb automatically builds your applications from git, make sure to read our &lt;a href="https://koyeb.com/docs/apps/build-from-git"&gt;how we build from git&lt;/a&gt; documentation.&lt;/p&gt;

&lt;p&gt;Your Flask application is now running on Koyeb and benefits from native autoscaling, automatic HTTPS (SSL), auto-healing, and global load-balancing across our edge network.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this guide, you learned how to deploy a Flask application on Koyeb and benefit from its built-in continuous deployment pipeline. Each change you push to your repository will automatically trigger a new build and deployment on the Koyeb Serverless Platform. Your changes then go live as soon as the deployment passes all necessary health checks. In case of a failure during one of your deployments, we ensure to keep the latest working deployment active so your application is always up and running.&lt;/p&gt;

&lt;p&gt;Other great benefits to deploying your Python Flask application on Koyeb include the platform's built-in autoscaling, automatic HTTPS (SSL), high availability, global load-balancing and edge network.&lt;/p&gt;

&lt;p&gt;All of these features and more work out-of-the-box and from the getgo. You focus on your code while Koyeb handles all the necessary underlying infrastructure to keep your services scalable, high performing and available.&lt;/p&gt;

&lt;p&gt;Give Koyeb a try with your application! If you have any questions or suggestions to improve this guide, feel free to reach out to us on &lt;a href="////slack.koyeb.com"&gt;Slack&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>python</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>WEB DEVELOPMENT</title>
      <author>Rajat Raj</author>
      <pubDate>Mon, 18 Oct 2021 12:16:18 +0000</pubDate>
      <link>https://dev.to/rajatrajblog/web-development-17if</link>
      <guid>https://dev.to/rajatrajblog/web-development-17if</guid>
      <description>&lt;p&gt;&lt;em&gt;Hi, there&lt;/em&gt;&lt;br&gt;
Today we are in that world where different technologies are emerging which is helpful for our daily life. From these different categories of technologies &lt;strong&gt;WEB DEVELOPMENT&lt;/strong&gt; is one of them.&lt;/p&gt;

&lt;p&gt;So, here I am trying to define and share my path to become a web developer, hope this will helpful for you all.&lt;/p&gt;

&lt;p&gt;Let's Start,&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-start-with-a-most-important-question-that-what-is-web-development"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Let's start with a most important question that what is web development.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Web development is the work involved in developing a Web site for the Internet or an intranet. Web development can range from developing a simple single Web page with plain text and some images, static page to complex web pages, web applications, electronic businesses, and even social media websites.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-web-developer"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Types of Web Developer&lt;/strong&gt;
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#1frontend-developer"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1&lt;/strong&gt;.Front-End Developer
&lt;/h4&gt;

&lt;p&gt;A front end developer has one general responsibility: to ensure that website visitors can easily interact with the page. They do this through the combination of design, technology and programming to code a website's appearance, as well as taking care of debugging.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2backend-developer"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2&lt;/strong&gt;.Back-End Developer
&lt;/h4&gt;

&lt;p&gt;Backend Development is also known as server-side development. It is everything that the users don't see and contains behind-the-scenes activities that occur when performing any action on a website. It focuses primarily on databases, backend logic, APIs, and Servers. Thus, it is known as the backend.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3full-stack-developer"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3&lt;/strong&gt;.Full Stack Developer
&lt;/h4&gt;

&lt;p&gt;A full stack web developer is a person who can develop both client and server software. In addition to mastering HTML and CSS, he/she also knows how to: Program a browser (like using JavaScript, jQuery, Angular, or Vue) Program a server (like using PHP, ASP, Python, or Node).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HNCPTpWs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xw2gul3m1bkmk6aq0dtl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HNCPTpWs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xw2gul3m1bkmk6aq0dtl.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;So&lt;/em&gt;, First make a table depending on you that in how many days you can complete course.&lt;br&gt;
There are many different courses on Internet through which you can learn web development.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#1coursera"&gt;
  &lt;/a&gt;
  1.&lt;em&gt;Coursera&lt;/em&gt;
&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;WEB DESIGN FOR EVERYBODY: BASICS OF WEB DEVELOPMENT AND CODING SPECIALIZATION&lt;/em&gt;&lt;br&gt;
This is really a amazing course for beginner. I am sure it will really help you all to develop a basics in web development. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>Nuevo en python</title>
      <author>David Cordero Rosales</author>
      <pubDate>Mon, 18 Oct 2021 12:13:05 +0000</pubDate>
      <link>https://dev.to/webdesigncuba/nuevo-en-python-12pl</link>
      <guid>https://dev.to/webdesigncuba/nuevo-en-python-12pl</guid>
      <description>&lt;p&gt;Buenos días, soy nuevo en. Python y estoy aprendiendo sobre este maravilloso lenguaje y quisiera conocer donde encontrar buenos tutoriales y pcursos y recursos para avanzar en este. &lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>JavaScript String Length property explained</title>
      <author>hrishikesh1990</author>
      <pubDate>Mon, 18 Oct 2021 12:06:19 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/javascript-string-length-property-explained-56g6</link>
      <guid>https://dev.to/hrishikesh1990/javascript-string-length-property-explained-56g6</guid>
      <description>&lt;p&gt;In this short tutorial, we learn about the JavaScript string length properly. We also look at how JavaScript finds the length of a particular string.&lt;/p&gt;

&lt;p&gt;This tutorial is a part of our initiative at &lt;a href="https://flexiple.com/"&gt;Flexiple&lt;/a&gt;, to write short curated tutorials around often used or interesting concepts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents-javascript-startswith"&gt;
  &lt;/a&gt;
  Table of Contents - JavaScript startsWith():
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#javascript-string-length-property"&gt;JavaScript string length property&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-do-you-find-the-length-of-a-string-in-javascript"&gt;How do you find the length of a string in JavaScript?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts"&gt;Closing thoughts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#javascript-string-length-property"&gt;
  &lt;/a&gt;
  JavaScript String Length Property:
&lt;/h2&gt;

&lt;p&gt;The JavaScript string property is used to return the length of a string in JavaScript. Although this property is commonly used with other JavaScript methods it is important to remember that length in itself is not a method.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-does-javascript-return-the-length-of-a-string"&gt;
  &lt;/a&gt;
  How does JavaScript return the length of a string?
&lt;/h3&gt;

&lt;p&gt;JavaScript does not return the length but rather returns the code units occupied by the string. It uses the UTF-16 string formatting methods to store characters. This essentially means that the characters in your string are encoded into a 16-bit long binary number before being stored.&lt;/p&gt;

&lt;p&gt;So whenever the .length property is involved, JavaScript looks up and returns the number of code units occupied by the string. This is why JavaScript returns 2 when the length property is called upon by certain characters such as emojis, etc. It does this because these characters take up 2 code units.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-you-find-the-length-of-a-string-in-javascript"&gt;
  &lt;/a&gt;
  How do you find the length of a string in JavaScript?
&lt;/h2&gt;

&lt;p&gt;The length of a string in JavaScript can be found using the .length property. Since .length is a property it must be called through an instance of a string class.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax:
&lt;/h3&gt;

&lt;p&gt;The syntax to use the length property is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, “string” refers to the string whose length you are looking to return.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-and-explanation"&gt;
  &lt;/a&gt;
  Code and Explanation:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Join our community of freelance developers&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a common problem while using a switch case, this can be solved by using new blocks for each case. However, this is not a problem while using the var keyword. The below code snippet should give an idea of the case:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 2&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;// 4&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code snippet returns the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The length of the string is 42.&lt;/p&gt;

&lt;p&gt;Earlier we had methods through which the length property would return a higher number in the case of a few characters. We have an example of the same below.&lt;/p&gt;

&lt;p&gt;Here we have involved the length property upon a string containing an emoji:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;emoji&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;😀&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;emoji&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code snippet returns the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see it returns 2, this is because this emoji takes up 2 code units.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts:
&lt;/h2&gt;

&lt;p&gt;Once you are done practicing I would recommend you look up other string properties. For the few of you who are curious how UTF-16 works you can use this link to read more.&lt;/p&gt;

&lt;p&gt;Apart from this, in case you haven’t already figured it out - The JavaScript string length would return 0 when invoked on an empty string.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Today's Fun Joke For Developers - Daily Developer Jokes</title>
      <author>Daily Developer Jokes</author>
      <pubDate>Mon, 18 Oct 2021 12:00:05 +0000</pubDate>
      <link>https://dev.to/dailydeveloperjokes/todays-fun-joke-for-developers-daily-developer-jokes-53d6</link>
      <guid>https://dev.to/dailydeveloperjokes/todays-fun-joke-for-developers-daily-developer-jokes-53d6</guid>
      <description>&lt;p&gt;Hi there! Here's today's Daily Developer Joke. We hope you enjoy it; it's a good one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i1vfNh5i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e1259a6b60d2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i1vfNh5i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e1259a6b60d2.png" alt="Joke Image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;For more jokes, and to submit your own joke to get featured, check out the &lt;a href="https://dailydeveloperjokes.github.io/"&gt;Daily Developer Jokes Website&lt;/a&gt;. We're also open sourced, so feel free to view &lt;a href="https://github.com/dailydeveloperjokes"&gt;our GitHub Profile&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#leave-this-post-a-if-you-liked-todays-joke-and-stay-tuned-for-tomorrows-joke-too"&gt;
  &lt;/a&gt;
  Leave this post a ❤️ if you liked today's joke, and stay tuned for tomorrow's joke too!
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;This joke comes from &lt;a href="https://github.com/wesbos/dad-jokes"&gt;Dad-Jokes GitHub Repo by Wes Bos&lt;/a&gt; (thank you!), whose owner has given me permission to use this joke with credit.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>jokes</category>
      <category>dailydeveloperjokes</category>
    </item>
  </channel>
</rss>
