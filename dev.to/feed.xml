<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Solution: Triangle</title>
      <author>seanpgallivan</author>
      <pubDate>Wed, 21 Apr 2021 08:28:35 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-triangle-1lg0</link>
      <guid>https://dev.to/seanpgallivan/solution-triangle-1lg0</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/triangle/discuss/1169353"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-120-medium-triangle"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/triangle/"&gt;Leetcode Problem #120 (&lt;em&gt;Medium&lt;/em&gt;): Triangle&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given a &lt;code&gt;triangle&lt;/code&gt; array, return the minimum path sum from top to bottom.&lt;/p&gt;

&lt;p&gt;For each step, you may move to an adjacent number of the row below. More formally, if you are on index &lt;code&gt;i&lt;/code&gt; on the current row, you may move to either index &lt;code&gt;i&lt;/code&gt; or index &lt;code&gt;i + 1&lt;/code&gt; on the next row.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;triangle = [[2],[3,4],[6,5,7],[4,1,8,3]]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;The minimum path sum from top to bottom is 2 + 3 + 5 + 1 = 11 (underlined below).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual:&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8IwupUjR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/DvMgoK1.png" alt="Example 1 Visual"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;triangle = [[-10]]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;-10&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= triangle.length &amp;lt;= 200&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;triangle[0].length == 1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;triangle[i].length == triangle[i - 1].length + 1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-10^4 &amp;lt;= triangle[i][j] &amp;lt;= 10^4&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;In order to find the best path from the top of the input triangle array (&lt;strong&gt;T&lt;/strong&gt;) to the bottom, we should be able to find the best path to any intermediate spot along that path, as well. That should immediately bring to mind a &lt;strong&gt;dynamic programming&lt;/strong&gt; (&lt;strong&gt;DP&lt;/strong&gt;) solution, as we can divide this solution up into smaller pieces and then build those up to our eventual solution.&lt;/p&gt;

&lt;p&gt;The naive idea here might be to do a &lt;strong&gt;bottom-up&lt;/strong&gt; DP approach (which is actually from the start of the path, or the top of &lt;strong&gt;T&lt;/strong&gt;, to the end of the path, or the bottom of &lt;strong&gt;T&lt;/strong&gt;), since that reflects the normal path progression and branching. If we do this, however, we'll need to write extra code to avoid going out-of-bounds when checking the previously completed rows of the DP array. We'll also have to then check the entire bottom row of our DP array to find the best value.&lt;/p&gt;

&lt;p&gt;If we use a &lt;strong&gt;top-down&lt;/strong&gt; DP approach (visually bottom to top of &lt;strong&gt;T&lt;/strong&gt;), however, we can avoid having to check for out-of-bounds conditions, as we'll be going from larger rows to smaller rows. Also, we won't need to search for the best solution, because it will automatically be isolated in &lt;strong&gt;T[0][0]&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Furthermore, since we'll never need to backtrack to previous rows, we can use &lt;strong&gt;T&lt;/strong&gt; as its own &lt;strong&gt;in-place&lt;/strong&gt; DP array, updating the values as we go, in order to achieve a &lt;strong&gt;space complexity&lt;/strong&gt; of &lt;strong&gt;O(1)&lt;/strong&gt; extra space.&lt;/p&gt;

&lt;p&gt;In order to accomplish this, we'll just need to iterate backwards through the rows, starting from the second to the last, and figure out what the best path to the bottom would be from each location in the row. Since the values in the row below will already represent the best path from that point, we can just add the lower of the two possible branches to the current location (&lt;strong&gt;T[i][j]&lt;/strong&gt;) at each iteration.&lt;/p&gt;

&lt;p&gt;Once we're done, we can simply &lt;strong&gt;return T[0][0]&lt;/strong&gt;.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;For Java, using an &lt;strong&gt;in-place DP&lt;/strong&gt; approach, while saving on &lt;strong&gt;space complexity&lt;/strong&gt;, is less performant than using an &lt;strong&gt;O(N)&lt;/strong&gt; DP array.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;minimumTotal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
            &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;minimumTotal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;minimumTotal&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--)&lt;/span&gt; 
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;--)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;min&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;min&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
                &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;set&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;minimumTotal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
                &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Complete Road Map of Python Programming Basic to Advance</title>
      <author>Ashish Yadav</author>
      <pubDate>Wed, 21 Apr 2021 08:01:38 +0000</pubDate>
      <link>https://dev.to/expoashish/complete-road-map-of-python-programming-basic-to-advance-2o8f</link>
      <guid>https://dev.to/expoashish/complete-road-map-of-python-programming-basic-to-advance-2o8f</guid>
      <description>&lt;p&gt;&lt;em&gt;In this tutorial, you will see basic to advance roadmap for python programming.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://expoashish.blogspot.com/"&gt;Visit My Blogs--&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-1introduction"&gt;
  &lt;/a&gt;
  Step 1.Introduction
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Introduction to Python&lt;/li&gt;
&lt;li&gt;History of Python&lt;/li&gt;
&lt;li&gt;Installation and Setup of Python&lt;/li&gt;
&lt;li&gt;Applications and Features of Python&lt;/li&gt;
&lt;li&gt;Career in Python&lt;/li&gt;
&lt;li&gt;Python vs R&lt;/li&gt;
&lt;li&gt;Python vs Php&lt;/li&gt;
&lt;li&gt;Python vs JavaScript&lt;/li&gt;
&lt;li&gt;Compilers vs Interpreters&lt;/li&gt;
&lt;li&gt;Flavours of Python&lt;/li&gt;
&lt;li&gt;Python Environment Setup&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#step-2basics-concept"&gt;
  &lt;/a&gt;
  Step 2.Basics Concept
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Python Variables&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Comments In Python:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  Single-line
  Multi-line
  Docstring
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Newline in Python&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Escape Sequences in Python&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python input and output&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Data Types in Python:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  Numbers
  String
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python Operators:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  Arithmetic Operators
  Assignment Operators
  Comparison Operators
  Logical Operators
  Identity Operators
  Membership Operators
  Bitwise Operators
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Type Conversion in Python&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Booleans&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Indentation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python Conditional Structure:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  If
  Else
  If-else
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python Decision Structure:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Switch-case in Python
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Range() in Python&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python Looping Structure:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;For Loop
While Loop
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Break and Continue Statement   &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python Strings:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;String Formatters and Escape Sequences
String Functions and Operations
The repr() Function
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#step-3data-structure-in-python"&gt;
  &lt;/a&gt;
  Step 3.Data Structure in Python
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Python List:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;List Comprehension
List Slices
Operation of List
List Function

&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python Tuple:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Tuple vs List
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python Dictionary&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python Sets&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#step-4functional-programming"&gt;
  &lt;/a&gt;
  Step 4.Functional Programming
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Pure Function&lt;/li&gt;
&lt;li&gt;Immutable Data Structures&lt;/li&gt;
&lt;li&gt;Functions in Python&lt;/li&gt;
&lt;li&gt;Lambda Expressions&lt;/li&gt;
&lt;li&gt;The filter() Function&lt;/li&gt;
&lt;li&gt;The map() Function&lt;/li&gt;
&lt;li&gt;The reduce() Function&lt;/li&gt;
&lt;li&gt;Recursion Function in Python&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Built-in Functions:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;exec()
eval()
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Decorators in Python&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Closure in Python&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Working with itertools&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#step-5python-modules-and-packages"&gt;
  &lt;/a&gt;
  Step 5.Python Modules and Packages
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Modules:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Counter
Defaultdict
OrderedDict
namedtuple
Numeric Modules- math, decimal, random
sys
Generating Random Numbers
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Packages:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip and PyPI
Modules vs Package
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#step-6exception-handling"&gt;
  &lt;/a&gt;
  Step 6.Exception Handling
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Errors and Exceptions&lt;/li&gt;
&lt;li&gt;Exception Handling&lt;/li&gt;
&lt;li&gt;Finally Blocks&lt;/li&gt;
&lt;li&gt;Testing with unittest&lt;/li&gt;
&lt;li&gt;Assertion in Python&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#step-7file-handling"&gt;
  &lt;/a&gt;
  Step 7.File Handling
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Opening and Closing Files&lt;/li&gt;
&lt;li&gt;Reading and Writing Files&lt;/li&gt;
&lt;li&gt;Managing Directories and Files&lt;/li&gt;
&lt;li&gt;Renaming Files in Python&lt;/li&gt;
&lt;li&gt;Copying Files in Python&lt;/li&gt;
&lt;li&gt;Zipping Files in Python&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#step-8advance-concept-in-python"&gt;
  &lt;/a&gt;
  Step 8.Advance Concept in Python
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Python Regular Expressions&lt;/li&gt;
&lt;li&gt;Text Analyzer&lt;/li&gt;
&lt;li&gt;Metacharacters&lt;/li&gt;
&lt;li&gt;Multithreading in Python&lt;/li&gt;
&lt;li&gt;Packing and Unpacking Feature&lt;/li&gt;
&lt;li&gt;Virtual Environments and Packages&lt;/li&gt;
&lt;li&gt;The calendar Module&lt;/li&gt;
&lt;li&gt;The Python Debugger&lt;/li&gt;
&lt;li&gt;Pretty-Printing with pprint&lt;/li&gt;
&lt;li&gt;CGI Programming with Python&lt;/li&gt;
&lt;li&gt;Understanding urllibDeep Copy vs Shallow Copy&lt;/li&gt;
&lt;li&gt;Assert Statements in Python&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#step-9object-oriented-programming"&gt;
  &lt;/a&gt;
  Step 9.Object Oriented Programming
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Python Objects&lt;/li&gt;
&lt;li&gt;Classes in Python&lt;/li&gt;
&lt;li&gt;Init()&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Methods in Python:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Methods vs Functions
Magic (Dunder) Methods
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Magic Methods&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Abstraction in Python&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Abstract class&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Concrete class&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Access Specifiers in Python&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Polymorphism in Python&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Encapsulation in Python&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Inheritance in Python:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    Single Inheritance
    Multiple Inheritance
    Multilevel Inheritance
    Hierarchical Inheritance
    Hybrid Inheritance
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Python Operator Overloading&lt;/li&gt;
&lt;li&gt;Python Function Overloading&lt;/li&gt;
&lt;li&gt;Generators in Python&lt;/li&gt;
&lt;li&gt;Iterators in Python&lt;/li&gt;
&lt;li&gt;Properties in Python&lt;/li&gt;
&lt;li&gt;Generators vs Iterators&lt;/li&gt;
&lt;li&gt;The property Decorator&lt;/li&gt;
&lt;li&gt;Serialization with pickle&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#step-10popular-frameworks"&gt;
  &lt;/a&gt;
  Step 10.Popular Frameworks
&lt;/h1&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Django
Flask
CherryPy
Selenium
Pyramid
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h1&gt;
  &lt;a href="#step-11best-python-libraries"&gt;
  &lt;/a&gt;
  Step 11.Best Python Libraries
&lt;/h1&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. Selenium
2. MoviePy
3. Pandas
4. Pygame
5. Tkinter
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;a href="https://expoashish.blogspot.com/2021/04/5-best-python-modules-every-developer.html"&gt;Read more--&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-12best-python-libraries-for-machine-learning"&gt;
  &lt;/a&gt;
  Step 12.Best Python Libraries For Machine Learning
&lt;/h1&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. NumPy
2. SciPy
3. Scikit-learn
4. Theano
5. Tensor Flow
6. Keras
7. PyTorch
8. Pandas
9. Matplotlib
10. Seaborn Python
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;a href="https://expoashish.blogspot.com/2021/04/10-best-python-libraries-for-machine.html"&gt;Read more--&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-13python-projects-for-beginners"&gt;
  &lt;/a&gt;
  Step 13.Python Projects for Beginners
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://youtu.be/QCseldsUGq8"&gt;Student Management System&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/AzBTUkZ1HAg"&gt;University Management System&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/pfXOYmYUkKM"&gt;Contact Management System&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/4_M3aqnqJ00"&gt;Bank Management System&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/wJExlPfKOVU"&gt;Contact Book Project in Django&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Thank you for reading this blog. I wish you the best in your journey in learning and mastering in Python Programming.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Add Voice Search with a Few Lines of Code (for free)</title>
      <author>Ottomatias Peura</author>
      <pubDate>Wed, 21 Apr 2021 07:24:45 +0000</pubDate>
      <link>https://dev.to/ottomatias/add-voice-search-with-a-few-lines-of-code-for-free-1hkc</link>
      <guid>https://dev.to/ottomatias/add-voice-search-with-a-few-lines-of-code-for-free-1hkc</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Just want to develop? Click &lt;a href="https://www.speechly.com/solutions/voice-search/"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Voice search means for most optimizing your website to support natural language queries. This is important, because many are searching on Google by using voice instead of typing and typically these queries are somewhat different.&lt;/p&gt;

&lt;p&gt;For instance, searching for the population of US by typing the keywords might result in a query such as "us population" whereas searching for the same thing by voice might be natural by asking "what is the population of the United States?". In fact, already &lt;a href="https://www.speechly.com/blog/voice-insights/"&gt;20% of Google App searches&lt;/a&gt; are done by using voice.&lt;/p&gt;

&lt;p&gt;However, when the user eventually lands to a page they were looking for by using their voice, they are back to the "old-school" way of operating websites. Instead of voice, they'll have to resort to typing, clicking and scrolling.&lt;/p&gt;

&lt;p&gt;While most of us are very familiar with those UI patterns, they are nowhere near perfect. A typical eCommerce search with a few category filters (such as blue Nike t-shirts in size large for men) takes easily around half a minute or more, even for a somewhat experienced user. &lt;/p&gt;

&lt;p&gt;This is because the order, names, and even the existence of these filters vary widely in eCommerce stores. Some stores don't offer color filters, some categorize t-shirts under shirts and some have a separate category for them and so on. Sometimes the filters are on the sidebar, sometimes on top and sometimes they require opening a hamburger menu. &lt;/p&gt;

&lt;p&gt;What if this tedious filtering could be &lt;a href="https://www.speechly.com/blog/voice-search/"&gt;replaced with voice&lt;/a&gt;? Let's see an example.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Q2gwzTWADns"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Voice is a very natural way for creating search experiences. While a text-based menu can't include all the synonyms because of lack of screen real estate, voice UI can support as many synonyms and different ways to express things as required. As the filters are updated in real time as the user keeps on speaking, the user gets visual feedback and is encouraged to go on with filtering. On the other hand, if they misspeak or if the system recognizes something wrong, they can naturally correct themselves.&lt;/p&gt;

&lt;p&gt;We have created a fully streaming voice UI API that enables building this kind of experiences very easily. Instead of the traditional "voice assistant" style that resembles Microsoft's Clippy, our solution is based on directly manipulating the graphical user interface with voice. &lt;/p&gt;

&lt;p&gt;As most of the eCommerce stores have already implemented some kind of a category filtering, adding Speechly enables their users to replace searching and selecting for the correct filters by simply saying out loud their preferences. The user interface stays the same and doesn't require any other updates than adding the microphone button. We even provide a customizable microphone button for easy integration.&lt;/p&gt;

&lt;p&gt;We have productized voice search as a very simple solution that enables developers to add voice search to their website in a few lines of code. We have also created a demo to showcase a real-life application using this pattern. You can try out the demo &lt;a href="http://fashion.speechly.com/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Instructions for integrating voice search to your website can be found &lt;a href="https://www.speechly.com/solutions/voice-search/"&gt;here&lt;/a&gt;. There's also a simple &lt;a href="https://codepen.io/hheikinh/pen/PoWepoM"&gt;Codepen example&lt;/a&gt; that you can edit yourself and see the full code for a simple implementation.&lt;/p&gt;

&lt;p&gt;You can use Speechly for free for up to 20 hours a month.&lt;br&gt;
If you need any help creating your models or integrating it, you can contact our support at &lt;a href="mailto:hello@speechly.com"&gt;hello@speechly.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Would be great to hear your thoughts! &lt;/p&gt;

</description>
      <category>voice</category>
      <category>javascript</category>
      <category>ux</category>
      <category>webdev</category>
    </item>
    <item>
      <title>☸ Install and Configure WildFly (JBoss) on Ubuntu 20.04 LTS</title>
      <author>Orestis Pantazos</author>
      <pubDate>Wed, 21 Apr 2021 07:21:41 +0000</pubDate>
      <link>https://dev.to/orestispantazos/install-and-configure-wildfly-jboss-on-ubuntu-20-04-lts-266f</link>
      <guid>https://dev.to/orestispantazos/install-and-configure-wildfly-jboss-on-ubuntu-20-04-lts-266f</guid>
      <description>&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Open the Terminal&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Update repository index&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Install the OpenJDK package from APT&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo apt-get install default-jdk&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Create a user and group for WildFly&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo groupadd -r wildfly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo useradd -r -g wildfly -d /opt/wildfly -s /sbin/nologin wildfly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; Download the WildFly Installation file&lt;/p&gt;

&lt;p&gt;Version_Number=22.0.1.Final&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;wget https://download.jboss.org/wildfly/&lt;span class="nv"&gt;$Version_Number&lt;/span&gt;/wildfly-&lt;span class="nv"&gt;$Version_Number&lt;/span&gt;.tar.gz &lt;span class="nt"&gt;-P&lt;/span&gt; /tmp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; Extract the WildFly tar.gz file to /opt folder&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo tar xf /tmp/wildfly-$Version_Number.tar.gz -C /opt/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 7:&lt;/strong&gt; Create a symbolic link to point to the WildFly installation directory&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo ln -s /opt/wildfly-$Version_Number /opt/wildfly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 8:&lt;/strong&gt; Give access to WildFly group and user&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo chown -RH wildfly: /opt/wildfly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 9:&lt;/strong&gt; Configure Wildfly to be run as a service&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo mkdir -p /etc/wildfly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo cp /opt/wildfly/docs/contrib/scripts/systemd/wildfly.conf /etc/wildfly/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo nano /etc/wildfly/wildfly.conf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;**WILDFLY_BIND=0.0.0.0**&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo cp /opt/wildfly/docs/contrib/scripts/systemd/launch.sh /opt/wildfly/bin/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo sh -c 'chmod +x /opt/wildfly/bin/*.sh'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo cp /opt/wildfly/docs/contrib/scripts/systemd/wildfly.service /etc/systemd/system/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo systemctl daemon-reload&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 10:&lt;/strong&gt; Start the WildFly service&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo systemctl start wildfly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo systemctl status wildfly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo systemctl enable wildfly&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configure-wildfly"&gt;
  &lt;/a&gt;
  Configure WildFly
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Allow traffic on port 8080&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo ufw allow 8080/tcp&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Create a WildFly Administrator&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo /opt/wildfly/bin/add-user.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Access and verify the successful setup of WildFly&lt;/p&gt;

&lt;p&gt;IP address: &lt;code&gt;**http://192.168.1.8:8080**&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Managing the Administrative console remotely&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo nano /etc/wildfly/wildfly.conf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;WILDFLY_CONSOLE_BIND=0.0.0.0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo nano /opt/wildfly/bin/launch.sh&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$WILDFLY_HOME&lt;/span&gt;/bin/domain.sh &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="nv"&gt;$2&lt;/span&gt; &lt;span class="nt"&gt;-b&lt;/span&gt; &lt;span class="nv"&gt;$3&lt;/span&gt; &lt;span class="nt"&gt;-bmanagement&lt;/span&gt; &lt;span class="nv"&gt;$4&lt;/span&gt;

&lt;span class="k"&gt;else&lt;/span&gt;

&lt;span class="nv"&gt;$WILDFLY_HOME&lt;/span&gt;/bin/standalone.sh &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="nv"&gt;$2&lt;/span&gt; &lt;span class="nt"&gt;-b&lt;/span&gt; &lt;span class="nv"&gt;$3&lt;/span&gt; &lt;span class="nt"&gt;-bmanagement&lt;/span&gt; &lt;span class="nv"&gt;$4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;sudo systemctl restart wildfly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo nano /etc/systemd/system/wildfly.service&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ExecStart=/opt/wildfly/bin/launch.sh $WILDFLY_MODE $WILDFLY_CONFIG $WILDFLY_BIND $WILDFLY_CONSOLE_BIND&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo systemctl daemon-reload&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo systemctl restart wildfly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open the Administrative Console CLI&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cd /opt/wildfly/bin/&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./jboss-cli.sh &lt;span class="nt"&gt;--connect&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>jboss</category>
      <category>wildfly</category>
      <category>web</category>
      <category>ubuntu</category>
    </item>
    <item>
      <title>What kind of developer are you?</title>
      <author>Sandor Dargo</author>
      <pubDate>Wed, 21 Apr 2021 06:37:42 +0000</pubDate>
      <link>https://dev.to/sandordargo/what-kind-of-developer-are-you-4ic3</link>
      <guid>https://dev.to/sandordargo/what-kind-of-developer-are-you-4ic3</guid>
      <description>&lt;p&gt;I've seen &lt;a href="https://www.youtube.com/watch?v=EsSnw50udSA"&gt;this video&lt;/a&gt; recently by Clément Mihailescu the guy who created AlgoExpert. No, this video is not about algorithms. It's about the 4+1 different kind of developers he identified during his career. In this post, I am going to reflect on this video, I'll do a self-analysis and share my opinion on why I think that the Clément is right and we should be aware of what kinds of developers we are and who we are working with.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-41-kinds-of-different-programmers"&gt;
  &lt;/a&gt;
  The 4+1 kinds of different programmers
&lt;/h2&gt;

&lt;p&gt;Alright, so here are the 4+1 different kinds:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The coding machine&lt;/li&gt;
&lt;li&gt;The product-oriented programmer&lt;/li&gt;
&lt;li&gt;Domain expert/domain specialist&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Process-oriented programmer&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;+1 Jack of all trades&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let me give you a very brief overview of each before I go into the self-analysis.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-coding-machine"&gt;
  &lt;/a&gt;
  The coding machine
&lt;/h3&gt;

&lt;p&gt;Simple, right? This kind of programmer wants to code, code and code a little bit more. Such programmers are rather unhappy by going to meetings (frequently) and doesn't really care about what service or product he is working on. He takes pride in his work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-productoriented-programmer"&gt;
  &lt;/a&gt;
  The product-oriented programmer
&lt;/h3&gt;

&lt;p&gt;Unlike the &lt;em&gt;coding machine&lt;/em&gt;, the &lt;em&gt;product-oriented programmer&lt;/em&gt; takes pride rather in the product of her work. She cares deeply about the product, in fact, she will be unhappy if she has to work on the wrong product. She is likely to enjoy meetings as she wants to have an influence on where the product goes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-domain-specialist"&gt;
  &lt;/a&gt;
  The domain specialist
&lt;/h3&gt;

&lt;p&gt;The &lt;em&gt;domain specialist&lt;/em&gt; is somewhere in between the first two categories. He will be passionate about the product, but he also might end up as a coding machine if and only if he can work in his niche domain of speciality. Clément's example was someone caring so much about React that he only wants to work with React, preferably in the React team of Facebook or at some other companies/teams specialized in React.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-processoriented-programmer"&gt;
  &lt;/a&gt;
  The process-oriented programmer
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;The process-oriented programmer&lt;/em&gt; is characterized by the &lt;em&gt;3 Rs&lt;/em&gt;. She is all for rigid, robust and rigorous processes. To make her feel happy, everything should be planned out, everyone should understand what the others working on. It should be clear how code reviews are done, who approves what. Probably she is also working on a style guide. She cares more about the how than the why or what. She takes pride in building the right way, not the right thing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-the-jack-of-all-trades"&gt;
  &lt;/a&gt;
  +1 The Jack of all trades
&lt;/h3&gt;

&lt;p&gt;We are not black and white, the jack of all trades is a little bit of everything.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wellfunctioning-teams-need-diversity"&gt;
  &lt;/a&gt;
  Well-functioning teams need diversity
&lt;/h2&gt;

&lt;p&gt;Clément thinks it's important to do an introspection and understand what kind of developers we are. I completely agree that it's important to understand ourselves. If we want to be happy we should do what challenges us and brings us joy at the same time. Challenge without interest leads only to pain. If you understand what brings you pride, you'll have a chance to lead your career in the direction you want. You can read more on that in &lt;a href="https://leanpub.com/thesenioritytrap/"&gt;The Seniority Trap&lt;/a&gt;, please subscribe!&lt;/p&gt;

&lt;p&gt;Understanding ourselves is good, but understanding others is even better. especially if we manage a team. But even in an agile environment where the team is supposed to organize itself. Understanding the preferences of the individuals in a team helps to build a better functioning team where everyone can enjoy their work and contribute in a way that feels natural to them.&lt;/p&gt;

&lt;p&gt;A well-functioning team needs diversity. Like a football team. No team can succeed only with forwards, you need a goalkeeper, some defenders and midfielders as well.&lt;/p&gt;

&lt;p&gt;A development team is no different. You need people with different skillsets, roles and preferences. Understanding the &lt;em&gt;"types"&lt;/em&gt; of developers is also the recipe to build a truly diverse team. You'll need all of these people. Some who can build the processes and make sure that operability doesn't suffer because of ad-hoc actions. Obviously, there must be people who are inherently interested in the product and can be a bridge between business/customers and the developers. And which team can function without some coding machines who can turn down their heads and code, code and code and make the dreams come true?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-am-i"&gt;
  &lt;/a&gt;
  Who am I?
&lt;/h2&gt;

&lt;p&gt;When Clément started to talk about the coding machine, I quickly said that's me! My role is far beyond being a programmer, but whatever project I join, I soon find a way to code something. It's not always about working on the C++ backends that I prefer, sometimes it's about automating some monkey tasks. Maybe it's about creating the integration pipeline. Whatever! I want to code, code and code! I'm definitely a coding machine who wants to get far from meetings.&lt;/p&gt;

&lt;p&gt;Well, it's not exactly true. I want to get away from unstructured too broad meetings. Meetings with less than 5 people I specifically like. They lead to real knowledge sharing, they let people conduct real conversations whereas above 7 people it's never effective and for most of the participants a note about the minutes would be enough.&lt;/p&gt;

&lt;p&gt;But that says nothing about whether I'm a product-oriented developer. Definitely not at the core. Only on the veto level. I wouldn't work on something harmful - but in fact, harmful is very vague. You might find something harmful that I find useful. And the other way around. I know I wouldn't work for Facebook. Even considering their role in easing communication and getting in touch with you, dear reader, I think they limit freedom of speech and they are bad for democracy. But I don't really care about whether the product I work on is inspiring people or if it's just useful. Well, it should bring enough money for the company to pay me...&lt;/p&gt;

&lt;p&gt;So far, I'm a not very much product-oriented coding machine. But what about being a domain expert. Clément only spoke about React as a domain. What can a domain be? To me, it can be a framework, an aspect of a language (like performance optimization in C++) but a domain can also be a business domain.&lt;/p&gt;

&lt;p&gt;I don't consider myself a domain specialist. Even though as a developer I've only worked in the travel industry so far and I understand the different flows, I've seen many problems, I don't see myself as a domain expert, and I don't feel tied to this domain. I've been working for Amadeus for almost 8 years and I'm working on rental car reservation systems for more than 3 years, the reason I haven't changed is not the domain, but fear. Just kidding, I still have a lot to learn, and I haven't plateaued.&lt;/p&gt;

&lt;p&gt;I find it important that a part of my job is about C++ and I would reject any change or new job where I cannot exercise C++ because I decided to become a C++ expert. I'm personally invested and it makes no sense at this point of my career to jump between frameworks and languages. But C++ is not a domain or at least it's too vague with my (not very high) level of expertise.&lt;/p&gt;

&lt;p&gt;All in all, I'm not a domain expert, but I think I might become one in the near future.&lt;/p&gt;

&lt;p&gt;Lastly, am I a process-oriented developer? When I first heard it in the video, I laughed and said, hell no! I'm not so much fond of processes. But then I listened on and I realized that one of my first contribution to the team was about our git workflow, then I spoke about the importance of coding guidelines at multiple conferences and these days a part of my job is being a member of our internal C++ coding guidelines board.&lt;/p&gt;

&lt;p&gt;So who am I?&lt;/p&gt;

&lt;p&gt;A process-oriented coding machine who might become a domain expert with some feelings towards not working on the bad product.&lt;/p&gt;

&lt;p&gt;Sort of a jack of all trades. It makes sense as I prefer having a portfolio job, I prefer being a mentor, a coder, an author at the same time. Why would I be a simple coding machine?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-are-you"&gt;
  &lt;/a&gt;
  Who are you?
&lt;/h2&gt;

&lt;p&gt;Today, I presented you an interesting video by Clément Mihailescu that divides developers into 4+1 categories: the tireless coding machine, the product-oriented developer, the domain expert and the rigorous process-oriented developer the and of course the mandatory jack of all trades.&lt;/p&gt;

&lt;p&gt;I shared with you who I am, but who are you? Let me know in the comments or drop a mail!&lt;/p&gt;

</description>
      <category>career</category>
      <category>psychology</category>
      <category>watercooler</category>
      <category>diversity</category>
    </item>
    <item>
      <title>REACT - setState Object</title>
      <author>Ha Tuan Em</author>
      <pubDate>Wed, 21 Apr 2021 06:32:06 +0000</pubDate>
      <link>https://dev.to/hte305/react-setstate-object-4eh</link>
      <guid>https://dev.to/hte305/react-setstate-object-4eh</guid>
      <description>&lt;p&gt;Sometimes, we need to use the React Hook to store the object rather than the single field. Here is example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0jZ7gdRw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jl1pu9vt6vjw2o7m38s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0jZ7gdRw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jl1pu9vt6vjw2o7m38s.png" alt="setState object"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;: PS/&lt;br&gt;
Hope to help you with something.&lt;br&gt;
Thanks&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#devnote"&gt;
  &lt;/a&gt;
  devnote
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#react"&gt;
  &lt;/a&gt;
  react
&lt;/h1&gt;

</description>
      <category>reactnative</category>
      <category>react</category>
    </item>
    <item>
      <title>The simplest way to validate file input type</title>
      <author>Joanna Otmianowska</author>
      <pubDate>Wed, 21 Apr 2021 06:14:18 +0000</pubDate>
      <link>https://dev.to/joannaotmianowska/the-simplest-way-to-validate-file-input-type-1dm9</link>
      <guid>https://dev.to/joannaotmianowska/the-simplest-way-to-validate-file-input-type-1dm9</guid>
      <description>&lt;p&gt;I've been working on a form lately and one day I got a task to add type validation to field input. My first thought was to simply check the file type after the file is being uploaded and, based on that, store this file in the list in my app or drop it. The idea was to have extensions whitelist and allow user to add only files that are on that whitelist to make sure that there is nothing insecure being introduced to our system.&lt;/p&gt;

&lt;p&gt;I wanted to make sure that I covered all needed extensions so I ended up checking what were possible types supported by input field. And then I found it - &lt;code&gt;accept&lt;/code&gt; attribute in file input itself. Thanks to that user experience is just great - files not listed in the &lt;code&gt;accept&lt;/code&gt; attribute are simply greyed out so user can't select them. It allows to avoid confusion, dedicated error message and clearly shows the user what he or she can and cannot add to the form.&lt;/p&gt;

&lt;p&gt;I recommend you to check the details in the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept"&gt;docs&lt;/a&gt;, I just want to emphasise that this attribute can accept both file extensions and unique file type specifier. See examples below (taken from &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept"&gt;here&lt;/a&gt;) &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;accept="image/png"&lt;/code&gt; or &lt;code&gt;accept=".png"&lt;/code&gt; — Accepts PNG files.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;accept="image/png, image/jpeg"&lt;/code&gt; or &lt;code&gt;accept=".png, .jpg, .jpeg"&lt;/code&gt; — Accept PNG or JPEG files.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;accept="image/*"&lt;/code&gt; — Accept any file with an &lt;code&gt;image/*&lt;/code&gt; MIME type. (Many mobile devices also let the user take a picture with the camera when this is used.)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;accept=".doc,.docx,.xml,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document"&lt;/code&gt; — accept anything that smells like an MS Word document.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Using &lt;code&gt;accept&lt;/code&gt; attribute instead of checking every file manually and then adding it to the list speeded my work. I didn't have to throw an error every time wrong file is added and explain to the user what he or she should do now. However, I wanted to be 1000% sure that there is no way to attach wrong file in the form. That's true that &lt;code&gt;accept&lt;/code&gt; attribute doesn't allow user to select file with type I didn't specify but you know... the form can be always compromised with external script. This is why I decided to add one more step before adding files to the list and wrote the function checking if selected file type is included in the extensions whitelist I have in the app.  If it is not there - nothing happens (no error for the user is needed as this is edge case only if someone compromises the form). And the app is safe.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Weekly web development resources #70</title>
      <author>Vincent Will</author>
      <pubDate>Wed, 21 Apr 2021 05:57:46 +0000</pubDate>
      <link>https://dev.to/vincenius/weekly-web-development-resources-70-1ehj</link>
      <guid>https://dev.to/vincenius/weekly-web-development-resources-70-1ehj</guid>
      <description>

&lt;h2&gt;
  &lt;a href="#design-resources"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/MohamedYoussouf/Design-Resources"&gt;Design Resources&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/MohamedYoussouf/Design-Resources"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1iMimF6A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wwebdev-images.s3.eu-central-1.amazonaws.com/content/weekly/70/design-resources.jpg" alt="Design Resources"&gt;&lt;/a&gt;&lt;br&gt;
A curated list of design resources from design templates, stock photos, icons, colors, and more.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#creating-a-smart-navbar-with-vanilla-javascript"&gt;
  &lt;/a&gt;
  &lt;a href="https://css-tricks.com/creating-a-smart-navbar-with-vanilla-javascript/"&gt;Creating a Smart Navbar With Vanilla JavaScript&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://css-tricks.com/creating-a-smart-navbar-with-vanilla-javascript/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VN5QoCr_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wwebdev-images.s3.eu-central-1.amazonaws.com/content/weekly/70/smart-nav.jpg" alt="Creating a Smart Navbar With Vanilla JavaScript"&gt;&lt;/a&gt;&lt;br&gt;
Create a navbar that gets visible when the user scrolls up.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#understanding-browser-cookies"&gt;
  &lt;/a&gt;
  &lt;a href="https://chenhuijing.com/blog/understanding-browser-cookies"&gt;Understanding browser cookies&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://chenhuijing.com/blog/understanding-browser-cookies"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vMv7Y2im--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wwebdev-images.s3.eu-central-1.amazonaws.com/content/weekly/70/cookie.jpg" alt="Understanding browser cookies"&gt;&lt;/a&gt;&lt;br&gt;
A nice article that explains the basics of browser cookies.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#github-theme"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=GitHub.github-vscode-theme"&gt;GitHub Theme&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=GitHub.github-vscode-theme"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J5Mmlj6T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wwebdev-images.s3.eu-central-1.amazonaws.com/content/weekly/70/github-theme.jpg" alt="GitHub Theme"&gt;&lt;/a&gt;&lt;br&gt;
A theme for Visual Studio Code, that is made and used by GitHub.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#directshare"&gt;
  &lt;/a&gt;
  &lt;a href="https://directshare.io/"&gt;DirectShare&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://directshare.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P-BAOwUC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wwebdev-images.s3.eu-central-1.amazonaws.com/content/weekly/70/directShare.jpg" alt="DirectShare"&gt;&lt;/a&gt;&lt;br&gt;
A free and secured file transfer solution with no size constraint.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#beautiful-pdfs-from-html"&gt;
  &lt;/a&gt;
  &lt;a href="https://pdf.math.dev/"&gt;Beautiful PDFs from HTML&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://pdf.math.dev/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CA85ZGlf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wwebdev-images.s3.eu-central-1.amazonaws.com/content/weekly/70/pdf-html.jpg" alt="Beautiful PDFs from HTML"&gt;&lt;/a&gt;&lt;br&gt;
A guide, that provides a basic tutorial to using paged.js.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#natto"&gt;
  &lt;/a&gt;
  &lt;a href="https://natto.dev"&gt;natto&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://natto.dev"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kzG1yjml--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wwebdev-images.s3.eu-central-1.amazonaws.com/content/weekly/70/natto.jpg" alt="natto"&gt;&lt;/a&gt;&lt;br&gt;
A tool for fidgeting with JavaScript. Write and manipulate JavaScript expressions on a spatial canvas.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#frontend-toolkit"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.fetoolkit.io/"&gt;Frontend Toolkit&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.fetoolkit.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pgJ4rVaz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wwebdev-images.s3.eu-central-1.amazonaws.com/content/weekly/70/fe-toolkit.jpg" alt="Frontend Toolkit"&gt;&lt;/a&gt;&lt;br&gt;
A customizable dashboard for your recurring Frontend tasks&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#wave"&gt;
  &lt;/a&gt;
  &lt;a href="https://loading.io/background/m-wave/"&gt;Wave&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://loading.io/background/m-wave/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3bCjf1xv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wwebdev-images.s3.eu-central-1.amazonaws.com/content/weekly/70/wave.jpg" alt="Wave"&gt;&lt;/a&gt;&lt;br&gt;
A generator for smooth gradient waves in multiple layers, that flowing slowly.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#winbox"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/nextapps-de/winbox"&gt;WinBox&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/nextapps-de/winbox"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3VJtdi69--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wwebdev-images.s3.eu-central-1.amazonaws.com/content/weekly/70/winbox.jpg" alt="WinBox"&gt;&lt;/a&gt;&lt;br&gt;
A modern window manager for the web&lt;/p&gt;




&lt;p&gt;To see all the weeklies check: &lt;a href="https://wweb.dev/weekly"&gt;wweb.dev/weekly&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>weekly</category>
    </item>
    <item>
      <title>How to Deploy React Router Based Application to Netlify</title>
      <author>Yogesh Chavan</author>
      <pubDate>Wed, 21 Apr 2021 05:57:27 +0000</pubDate>
      <link>https://dev.to/myogeshchavan97/how-to-deploy-react-router-based-application-to-netlify-2kce</link>
      <guid>https://dev.to/myogeshchavan97/how-to-deploy-react-router-based-application-to-netlify-2kce</guid>
      <description>&lt;p&gt;Deploying a Routing based React app to production is not similar to deploying a normal React application.&lt;/p&gt;

&lt;p&gt;In this article, we'll see the most popular ways of deploying React app to Netlify and learn the configuration changes needed for deploying a Routing based React app.&lt;/p&gt;

&lt;p&gt;The thing I loved about &lt;a href="https://www.netlify.com/"&gt;Netlify&lt;/a&gt; is that it provides a lot of useful features&lt;br&gt;
for free such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A way to deploy a static website within seconds&lt;/li&gt;
&lt;li&gt;Provides continuous deployment which means when you connect your Github/Gitlab/Bitbucket repository, it automatically triggers deployment when new commits are pushed to the repository&lt;/li&gt;
&lt;li&gt;Website never goes down even during new deployments&lt;/li&gt;
&lt;li&gt;Allows to easily rollback to any previous working version of your site with a single click&lt;/li&gt;
&lt;li&gt;Quickly preview any of the previously deployed version of the app&lt;/li&gt;
&lt;li&gt;Change domain or subdomain of your site instantly&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and much more.&lt;/p&gt;

&lt;p&gt;So let's see how to deploy React app to Netlify.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Want to learn Redux from the absolute beginning and build a food ordering app from scratch? Check out the &lt;a href="https://master-redux.yogeshchavan.dev/"&gt;Mastering Redux&lt;/a&gt; course.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#drag-and-drop-the-build-folder-in-netlify"&gt;
  &lt;/a&gt;
  Drag and Drop the Build Folder in Netlify
&lt;/h2&gt;

&lt;p&gt;The fastest and easy way to deploy React application is just to drag and drop the build folder in Netlify.&lt;/p&gt;

&lt;p&gt;To create a build folder, just execute the &lt;code&gt;npm run build&lt;/code&gt; or &lt;code&gt;yarn build&lt;/code&gt; command from the command line from your project folder.&lt;/p&gt;

&lt;p&gt;Once the build folder is created, you just need to drop the folder to the drop area under the &lt;code&gt;sites&lt;/code&gt; menu as shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BLL4aoQO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983845998/Uq0H0y7FG.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BLL4aoQO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983845998/Uq0H0y7FG.gif" alt="drag_drop.gif"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-deploy-an-app-to-netlify-from-a-github-repository"&gt;
  &lt;/a&gt;
  How to Deploy an App to Netlify from a GitHub Repository
&lt;/h2&gt;

&lt;p&gt;This is my favorite way of deploying applications on Netlify. &lt;/p&gt;

&lt;p&gt;Because whenever you push any changes to the GitHub repository, it will automatically be deployed to Netlify. You can also see all deployed versions and easily roll back to any previously working version of code with just a single click.&lt;/p&gt;

&lt;p&gt;If you already have a repository pushed to Github, then you just need to connect it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Login to your Netlify account&lt;/li&gt;
&lt;li&gt;In the dashboard, click on the &lt;code&gt;New site from Git&lt;/code&gt; button&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7pJNAy1O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983866694/ohpSrCjxS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7pJNAy1O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983866694/ohpSrCjxS.png" alt="netlify_home.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Click on the &lt;code&gt;GitHub&lt;/code&gt; button to connect your GitHub repository&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KZsDlcbe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983880444/CDjoHCKRg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KZsDlcbe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983880444/CDjoHCKRg.png" alt="git_provider.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It will open a new tab. Make sure the popup is enabled in your browser.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uRn1DP7t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983932965/loWt3gM3i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uRn1DP7t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983932965/loWt3gM3i.png" alt="select_repository.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Search for the GitHub repository in the &lt;code&gt;Search repos&lt;/code&gt; search box. If your repository is not getting displayed then click on the &lt;code&gt;Configure the Netlify app on GitHub&lt;/code&gt; button at the bottom of the page. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--USAIeCiB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983953882/ZWZSAlm79.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--USAIeCiB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983953882/ZWZSAlm79.png" alt="configure_netlify.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Once clicked, scroll down on the page and click on the &lt;code&gt;Select repositories&lt;/code&gt; dropdown and search for your repository and click on the &lt;code&gt;save&lt;/code&gt; button.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SjoUuiI1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983963504/K7TLSYm4Y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SjoUuiI1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983963504/K7TLSYm4Y.png" alt="select_repo.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You will be redirected to the previous page showing all the available repositories.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Search for the repository you want to deploy. For this article, I have selected &lt;a href="https://github.com/myogeshchavan97/react-book-management-app"&gt;react-book-management-app&lt;/a&gt; repository which was created in my &lt;a href="https://dev.to/myogeshchavan97/react-crud-app-tutorial-build-a-book-management-app-in-react-from-scratch-f7b"&gt;previous article&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vhzwfdep--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983981796/TRQV_7t00.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vhzwfdep--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983981796/TRQV_7t00.png" alt="find_repository.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Once you select the repository, you will see the following screen:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c4oiUf0Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983991516/FY5eCCmXX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c4oiUf0Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983991516/FY5eCCmXX.png" alt="deploy_repository.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;For this application, we don't need to change anything&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Your &lt;code&gt;Build command&lt;/code&gt; and &lt;code&gt;Publish directory&lt;/code&gt; will be automatically populated. Make sure to enter these fields, if you have different command in &lt;code&gt;package.json&lt;/code&gt; to build your app or those fields are not auto-populated. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now, click on the &lt;code&gt;Deploy site&lt;/code&gt; button.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Once clicked, you will see the &lt;code&gt;Site deploy in progress&lt;/code&gt; message.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CPl1egJk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984004201/yPUDClsQ_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CPl1egJk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984004201/yPUDClsQ_.png" alt="deploying.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Wait for some time while deployment is going on. Once deployment is completed, you will see the following screen:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fqo5tVtD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984013606/opx3KEkuz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fqo5tVtD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984013606/opx3KEkuz.png" alt="deployed.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open the link in the new tab and you will see your application deployed live.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o4GbJdF7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984027101/vnd0sAFTs.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o4GbJdF7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984027101/vnd0sAFTs.gif" alt="deployed_app.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Awesome! Now, If you make any change in the source code and push that change to GitHub, Netlify will detect that change and will re-deploy your application with your latest changes.&lt;/p&gt;

&lt;p&gt;If you check the application, you will see that the application works just fine with the navigation and you're able to add/edit/delete a book.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m9oNWxq6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984042902/0jjMDT_C9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m9oNWxq6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984042902/0jjMDT_C9.gif" alt="working_app.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But there is one issue. If you directly access the &lt;code&gt;/add&lt;/code&gt; route or refresh the &lt;code&gt;/add&lt;/code&gt; route page, you will get a page not found error as shown below:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JsRiXPNS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984058971/mL68SFxTb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JsRiXPNS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984058971/mL68SFxTb.gif" alt="page_not_found.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is because when we access any route on our local machine, React Router handles the routing but when we deploy the application on any server, directly accessing the route will send the request to the server itself (Netlify in our case).&lt;/p&gt;

&lt;p&gt;But as there is no &lt;code&gt;/add&lt;/code&gt; route handler on the server-side you will see a page not found error. But Netlify provides a way to fix this.&lt;/p&gt;

&lt;p&gt;Create a new file with the name &lt;code&gt;_redirects&lt;/code&gt; inside the &lt;code&gt;public&lt;/code&gt; folder of our project and add the following contents inside it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* /index.html 200
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we're telling Netlify to redirect all routes to the &lt;code&gt;index.html&lt;/code&gt; file. &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;index.html&lt;/code&gt; file contains our entire React app code which gets generated inside the &lt;code&gt;build&lt;/code&gt; folder when the &lt;code&gt;yarn build&lt;/code&gt; command is executed by Netlify while deploying the app.&lt;/p&gt;

&lt;p&gt;And as routing is handled by our React app which is contained in the &lt;code&gt;index.html&lt;/code&gt; file, our application will work without a page not found issue.&lt;/p&gt;

&lt;p&gt;Now, push the changes to the GitHub repository so Netlify will deploy the app again with these changes.&lt;/p&gt;

&lt;p&gt;And once deployed, If you check the deployed application, you will see that the application works fine and we don't get any page not found error now.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_TJta-J1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984074087/lnvzavw4o.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_TJta-J1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984074087/lnvzavw4o.gif" alt="no_page_not_found.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it. We're all done with deploying our application to Netlify.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-easily-change-a-site-name-in-netlify"&gt;
  &lt;/a&gt;
  How to Easily Change a Site Name in Netlify
&lt;/h2&gt;

&lt;p&gt;If you check the name of the deployed site you will see that, it's not easy to remember, If you have a lot of applications deployed. But Netlify provides a way to easily change that.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Click on the &lt;code&gt;Site settings&lt;/code&gt; button displayed on the &lt;code&gt;Site overview&lt;/code&gt; section.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NNtXsaup--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984087676/eSggx4693.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NNtXsaup--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984087676/eSggx4693.png" alt="site_settings.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Then click on the &lt;code&gt;Change site name&lt;/code&gt; button and enter a new name and click on the &lt;code&gt;Save&lt;/code&gt; button and now you can access your application with the changed name. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rm7PKwcj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984101053/Wv5VNp41g.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rm7PKwcj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984101053/Wv5VNp41g.gif" alt="changed_site_name.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I usually like to give the same name as the repository name so It's easy to find out a particular application If you have a lot of deployed applications on Netlify.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;If you want to know how to deploy React + Node.js application to production, check out my &lt;a href="https://dev.to/myogeshchavan97/how-to-deploy-react-node-js-application-to-heroku-4jb4"&gt;this article&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h3&gt;

&lt;p&gt;You can find the complete GitHub source code along with this redirection change in &lt;a href="https://github.com/myogeshchavan97/netlify-react-book-management-app"&gt;this repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You can see the live demo of the deployed application &lt;a href="https://react-book-management-app.netlify.app/"&gt;here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Want to learn all ES6+ features in detail including let and const, promises, various promise methods, array and object destructuring, arrow functions, async/await, import and export and a whole lot more from scratch?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Check out my &lt;a href="https://modernjavascript.yogeshchavan.dev/"&gt;Mastering Modern JavaScript&lt;/a&gt; book. This book covers all the pre-requisites for learning React and helps you to become better at JavaScript and React.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Check out free preview contents of the book &lt;a href="https://www.freecodecamp.org/news/learn-modern-javascript/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also, you can check out my &lt;strong&gt;free&lt;/strong&gt; &lt;a href="https://yogeshchavan.podia.com/react-router-introduction"&gt;Introduction to React Router&lt;/a&gt; course to learn React Router from scratch.&lt;/p&gt;

&lt;p&gt;Want to stay up to date with regular content regarding JavaScript, React, Node.js? &lt;a href="https://www.linkedin.com/in/yogesh-chavan97/"&gt;Follow me on LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3w0DGum"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Taa9-Eif--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/98ae4f4ead57fde8d47fcf7641220b72/raw/c3e4265df4396d639a7938a83bffd570130483b1/banner.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Accepting payments with Stripe, Nuxt. js and vercel </title>
      <author>Fayaz Ahmed</author>
      <pubDate>Wed, 21 Apr 2021 05:52:35 +0000</pubDate>
      <link>https://dev.to/fayaz/accepting-payments-with-stripe-nuxt-js-and-vercel-1m14</link>
      <guid>https://dev.to/fayaz/accepting-payments-with-stripe-nuxt-js-and-vercel-1m14</guid>
      <description>&lt;p&gt;It's been a long time since my last post and I wanted to write a small article on how to accept payments with Stripe, as I was integrating Stripe into my SaaS project, which I am currently building. &lt;/p&gt;

&lt;p&gt;Accepting payments is not that difficult and you don't even need a server.&lt;/p&gt;

&lt;p&gt;I will be building this app with Nuxt.js, Tailwindcss and host it on vercel.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;TLDR; the code and the live demo can be found at the bottom of this post&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The site I have made is not complete and not responsive, but if someone wants to raise a PR and get it working, please go ahead.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;Scaffold a new Nuxt project with &lt;code&gt;yarn create nuxt-app stripe-nuxt&lt;/code&gt; and you can select a CSS framework of your choice, I chose Tailwindcss, choose axios and I have also used nuxt-content for this, for storing the products database.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Clear the index.vue page and remove styles from default.vue files.&lt;/p&gt;

&lt;p&gt;Add this markup and the script in index.vue, this will show a grid of products on the home page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;main&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"min-h-screen"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"p-8 max-w-4xl mx-auto"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"grid grid-cols-1 lg:grid-cols-3 xl:grid-cols-3 gap-6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;nuxt-link&lt;/span&gt;
          &lt;span class="na"&gt;:to=&lt;/span&gt;&lt;span class="s"&gt;"product.slug"&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"overflow-hidden text-center"&lt;/span&gt;
          &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"(product, p) in products"&lt;/span&gt;
          &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"p"&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;:src=&lt;/span&gt;&lt;span class="s"&gt;"product.images[0]"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"product.name"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mb-4"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"font-semibold text-gray-700 mb-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            {{ product.name }}
          &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-sm"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;$ {{ product.amount }}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/nuxt-link&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fade&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;asyncData&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;$content&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;products&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code will be rendered and look something like this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LIcIJb1V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tjme19qzngi5qwxwx94z.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LIcIJb1V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tjme19qzngi5qwxwx94z.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make a new file and name it &lt;code&gt;_slug.vue&lt;/code&gt; in the same directory as index.vue, this will act as our product page and fill it with the below code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;main&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-1/2 h-screen flex items-center justify-center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;:src=&lt;/span&gt;&lt;span class="s"&gt;"product.images[0]"&lt;/span&gt; &lt;span class="na"&gt;:alt=&lt;/span&gt;&lt;span class="s"&gt;"product.name"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
            &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-1/2 h-screen text-white flex items-center justify-center p-8 relative"&lt;/span&gt;
            &lt;span class="na"&gt;:style=&lt;/span&gt;&lt;span class="s"&gt;"{ backgroundColor: `#${product.color.hex}` }"&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;nuxt-link&lt;/span&gt;
               &lt;span class="na"&gt;to=&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;
               &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex items-center space-x-2 absolute top-8 left-8"&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt;
                  &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-5 h-5"&lt;/span&gt;
                  &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt;
                  &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt;
                  &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 24 24"&lt;/span&gt;
                  &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt;
                     &lt;span class="na"&gt;stroke-linecap=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt;
                     &lt;span class="na"&gt;stroke-linejoin=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt;
                     &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;
                     &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M7 16l-4-4m0 0l4-4m-4 4h18"&lt;/span&gt;
                     &lt;span class="nt"&gt;&amp;gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Home&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/nuxt-link&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"space-y-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-2xl font-bold"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ product.name }}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;$ {{ product.amount }}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-gray-100 text-sm"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ product.description }}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;
                  &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click=&lt;/span&gt;&lt;span class="s"&gt;"buy()"&lt;/span&gt;
                  &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-full py-3 bg-white text-gray-800 font-semibold flex items-center justify-center space-x-2"&lt;/span&gt;
                  &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"{ 'opacity-50 cursor-not-allowed': loading }"&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;btn-loader&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"loading"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Buy Now&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
   &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fade&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;asyncData&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;products&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
     &lt;span class="p"&gt;},&lt;/span&gt;
     &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="na"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="na"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="p"&gt;};&lt;/span&gt;
     &lt;span class="p"&gt;},&lt;/span&gt;
     &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;buy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
           &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/api/checkout&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
             &lt;span class="na"&gt;order&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
               &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="na"&gt;images&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;images&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="na"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="na"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="na"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="p"&gt;},&lt;/span&gt;
             &lt;span class="na"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$route&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="p"&gt;});&lt;/span&gt;
           &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;redirectToCheckout&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;sessionId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
           &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="p"&gt;},&lt;/span&gt;
     &lt;span class="p"&gt;},&lt;/span&gt;
     &lt;span class="nx"&gt;mounted&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stripe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Stripe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pk_test_ZaFKDdkCzVR4hCmDsUKWodm200fZIzrcmf&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="p"&gt;},&lt;/span&gt;
   &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will make a page looking like this, not very fancy, but looks good (not responsive).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nmonHooq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xy6hq9zbojgnmg8r03yy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nmonHooq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xy6hq9zbojgnmg8r03yy.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We need to add the stripe checkout script in the &lt;code&gt;nuxt.config.js&lt;/code&gt; file, add this in the head object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://js.stripe.com/v3/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's focus on the script and see what's going on.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e2AQM9pd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwnqq12ts7h0rebz0pbh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e2AQM9pd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwnqq12ts7h0rebz0pbh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create an empty stripe object, this is where we will initialize the stripe object.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now pass the stripe public key to the Stripe method(the one we added in our head tag), you can get your public key from stripe &lt;a href="https://dashboard.stripe.com/dashboard"&gt;dashboard&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Let's make a checkout API and use Vercels serverless functions. Any js file we add under a folder called &lt;code&gt;api&lt;/code&gt; will act as a serverless function in Vercel, pretty cool right. So, I made one called checkout.js and wrote a small script.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;stripe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;STRIPE_TEST_SK&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hostUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:3000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;payment_method_types&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;card&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;line_items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;order&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;success_url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;hostUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;?session_id={CHECKOUT_SESSION_ID}`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;cancel_url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;hostUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;?failed=true`&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You need to install the stripe package and import it and this is all you need to create a checkout session (the secret key can be found in the stripe dashboard).&lt;br&gt;
The success URL and the cancel URL as the name suggest, tell stripe where to redirect respectively.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Now that we have received a session id, just pass it the stripe redirect method
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;redirectToCheckout&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;sessionId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's the &lt;a href="https://github.com/fayazara/nuxt-stripe"&gt;code&lt;/a&gt; and here's the live &lt;a href="https://nuxt-stripe-amber.vercel.app/"&gt;demo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you like my work and want to get updates, please subscribe to my &lt;a href="https://www.getrevue.co/profile/fayaz"&gt;newsletter&lt;/a&gt; or if you'd like to buy me some coffee, you can donate &lt;a href="https://fayazz.co/coffee"&gt;here&lt;/a&gt;, we could have a online session over coffee.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
      <category>vue</category>
    </item>
    <item>
      <title>Demystify Pointers in Go</title>
      <author>Sagar Jadhav</author>
      <pubDate>Wed, 21 Apr 2021 05:46:04 +0000</pubDate>
      <link>https://dev.to/sagarjadhv23/demystify-pointers-in-go-3anj</link>
      <guid>https://dev.to/sagarjadhv23/demystify-pointers-in-go-3anj</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pass-by-value"&gt;Pass By Value&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pointer-in-action"&gt;Pointer in Action&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pointer-receiver"&gt;Pointer Receiver&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Pointers is Go is one of the most complex concepts especially for beginners. In this blog, I have explained the Pointers in a very simple format through visualization and point-by-point explanation. Please read the full blog for complete understanding. To start with let me give you the definition of Pointers:&lt;br&gt;
&lt;code&gt;&lt;br&gt;
Pointer stores the memory address of the variable instead of the value of a variable. &lt;br&gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This makes it different from other types of variables.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pass-by-value"&gt;
  &lt;/a&gt;
  Pass By Value
&lt;/h2&gt;

&lt;p&gt;Let me explain to you the concept of &lt;code&gt;Pass By Value&lt;/code&gt; before going deep in understanding Pointers. If you understand this then It will help you in understanding the code with extensive use of Pointers. In &lt;code&gt;Pass By Value&lt;/code&gt; the value of a variable is copied into the calling method argument instead of the reference or memory address of the variable. Just remember this simple formula:&lt;br&gt;
&lt;code&gt;&lt;br&gt;
 Go always follows Pass By Value and not Pass By Reference&lt;br&gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let's see How &lt;code&gt;Pass By Value&lt;/code&gt; works in Go.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jQXwlyO0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ty3dmxann6uhitawqvhr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jQXwlyO0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ty3dmxann6uhitawqvhr.png" alt="Pass By Value"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Variable &lt;code&gt;x&lt;/code&gt; of type string is defined and the value "Sagar" is assigned to it.&lt;/li&gt;
&lt;li&gt;Method &lt;code&gt;addSurname()&lt;/code&gt; is called with &lt;code&gt;x&lt;/code&gt;, Here the value of &lt;code&gt;x&lt;/code&gt; that is "Sagar" is copied to variable &lt;code&gt;y&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;String "Jadhav" is appended to the value of &lt;code&gt;y&lt;/code&gt; and the result is assigned back to &lt;code&gt;y&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So updating the value of &lt;code&gt;y&lt;/code&gt; doesn't update the value of &lt;code&gt;x&lt;/code&gt; as both are different variables but storing the same value.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pointer-in-action"&gt;
  &lt;/a&gt;
  Pointer in Action
&lt;/h2&gt;

&lt;p&gt;In the above example How to change the value of &lt;code&gt;x&lt;/code&gt; by updating the value of &lt;code&gt;y&lt;/code&gt;? Here Pointers come into the action. Yes, It is possible to update the value of one variable through other variables with the help of Pointers. Let me explain you through the below example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NI0nGLJJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mmz1p9tsh52lk1brm3hw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NI0nGLJJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mmz1p9tsh52lk1brm3hw.png" alt="Pointer in Action"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Variable &lt;code&gt;x&lt;/code&gt; of type string is defined and the value "Sagar" is assigned to it.&lt;/li&gt;
&lt;li&gt;Variable &lt;code&gt;y&lt;/code&gt; of type string pointer is defined and the address of &lt;code&gt;x&lt;/code&gt; is assigned to it.&lt;/li&gt;
&lt;li&gt;Method &lt;code&gt;addSurname()&lt;/code&gt; is called with &lt;code&gt;y&lt;/code&gt;, Here the value of &lt;code&gt;y&lt;/code&gt; that is the address of &lt;code&gt;x&lt;/code&gt; is copied to variable &lt;code&gt;z&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;String "Jadhav" is appended to the value at address stored in &lt;code&gt;z&lt;/code&gt; and the result "Sagar Jadhav" is assigned back to the variable at the address stored in &lt;code&gt;z&lt;/code&gt;. Sounds complicated, Map this point with the above picture for better understanding.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#pointer-receiver"&gt;
  &lt;/a&gt;
  Pointer Receiver
&lt;/h2&gt;

&lt;p&gt;The use of Pointer with Structs is very common, Hence understanding this concept is a must. Let's get deep-dive through the below example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D3Y4qkYV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nk4jh9puh8tc0smfklq3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D3Y4qkYV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nk4jh9puh8tc0smfklq3.png" alt="Pointer Receiver"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PD4lkwxT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jf8j8kkdh7a5r4cu7owf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PD4lkwxT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jf8j8kkdh7a5r4cu7owf.png" alt="Pointer Receiver"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Variable &lt;code&gt;emp&lt;/code&gt; of type employee struct is defined and the property &lt;code&gt;Name&lt;/code&gt; is initialized with value "Sagar".&lt;/li&gt;
&lt;li&gt;Method Receiver &lt;code&gt;addTitle()&lt;/code&gt; is called with string "Mr.", Here the string "Mr." is copied to variable &lt;code&gt;t&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Value of &lt;code&gt;Name&lt;/code&gt; property is appended to Value of &lt;code&gt;t&lt;/code&gt; and the result "Mr. Sagar" is assigned back to the &lt;code&gt;Name&lt;/code&gt; property. But here the &lt;code&gt;Name&lt;/code&gt; property of &lt;code&gt;emp&lt;/code&gt; is not updated because &lt;code&gt;addTitle()&lt;/code&gt; is a method receiver so when it is called, Value of &lt;code&gt;emp&lt;/code&gt; variable is copied to another variable &lt;code&gt;e&lt;/code&gt;. So any update &lt;code&gt;e&lt;/code&gt; will not affect &lt;code&gt;emp&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Pointer receiver &lt;code&gt;addSurname()&lt;/code&gt; is called with string "Jadhav", Here the string "Jadhav" is copied to variable &lt;code&gt;s&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Value of &lt;code&gt;s&lt;/code&gt; is appended to the value of &lt;code&gt;Name&lt;/code&gt; property and the result "Sagar Jadhav" assigned back to the &lt;code&gt;Name&lt;/code&gt; property. Here &lt;code&gt;emp&lt;/code&gt; variable is updated because variable &lt;code&gt;e&lt;/code&gt; is a pointer to &lt;code&gt;emp&lt;/code&gt; so any changes in &lt;code&gt;e&lt;/code&gt; will also affect &lt;code&gt;emp&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Checkout &lt;a href="https://tour.golang.org/methods/4"&gt;here&lt;/a&gt; for more details. &lt;/p&gt;

</description>
      <category>go</category>
      <category>opensource</category>
      <category>programming</category>
    </item>
    <item>
      <title>7 Websites To Find Remote Developer Jobs</title>
      <author>The Code Lounge</author>
      <pubDate>Wed, 21 Apr 2021 05:45:44 +0000</pubDate>
      <link>https://dev.to/codeloungedev/7-websites-to-find-remote-developer-jobs-3g76</link>
      <guid>https://dev.to/codeloungedev/7-websites-to-find-remote-developer-jobs-3g76</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Find a developer job that allows you to work from anywhere&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://codelounge.dev"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oZGLRauQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617198357271/uoNdlXnwM.png" alt="cover (1).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Originally posted on the codelounge.dev blog =&amp;gt; &lt;a href="https://codelounge.dev/7-websites-to-find-remote-developer-jobs"&gt;7 Websites To Find Remote Developer Jobs&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;The way people work has changed dramatically in the last few years. The working world shifted to remote work, with more and more people working remotely nowadays.&lt;/p&gt;

&lt;p&gt;That's the case with developers. However, sometimes it can be difficult to find remote developer jobs. As a result, below you can see 7 websites to find remote developer jobs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://weworkremotely.com/"&gt;We Work Remotely&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/jobs/remote-developer-jobs"&gt;Stackoverflow Remote Developer Jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/remoteintech/remote-jobs"&gt;Remote Jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://remoteok.io/remote-dev-jobs"&gt;Remote OK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://remote.co/remote-jobs/developer"&gt;Remote Developer Jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://remoteleads.io/"&gt;Remote Leads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/spreadsheets/d/1TLJSlNxCbwRNxy14Toe1PYwbCTY7h0CNHeer9J0VRzE/htmlview#gid=1279011369"&gt;Remotive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://remoteleads.io/"&gt;Remote Leaf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/spreadsheets/d/1Sr0vy3eDn2fcEhxOdkPv0BjsWBR7JntDJqRM6_hyjbE/edit#gid=0"&gt;Companies with open remote positions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hopefully, the list helps you find a remote developer position. If you find it useful, share it with others!&lt;/p&gt;

</description>
      <category>career</category>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
