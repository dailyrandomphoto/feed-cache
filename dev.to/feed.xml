<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Social Networking Websites Design</title>
      <author>Moinul_h</author>
      <pubDate>Wed, 06 Oct 2021 15:20:52 +0000</pubDate>
      <link>https://dev.to/gphmoinul/social-networking-websites-design-4a12</link>
      <guid>https://dev.to/gphmoinul/social-networking-websites-design-4a12</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YnEVzRk_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4rkqlserb8my83544ty.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YnEVzRk_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4rkqlserb8my83544ty.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Hi Designers! Social Networking Websites Design is a page with form tied together for your social media brand.  Here we will be posting updates and important news for this network so stay tuned in. For now, you can register on this page for updates when they become available or you can visit one of the many pages in our network which you can find at the bottom of every page on the website.&lt;/p&gt;

&lt;p&gt;You will get it with 3 types of files to customize, these are Figma, Sketch, and Adobe XD.&lt;/p&gt;

&lt;p&gt;This Free Social Networking Websites Design, web app design available file Figma, Sketch, Adobe XD&lt;/p&gt;

&lt;p&gt;Download up to fourteen thousand web templates, mobile app templates, illustrations, 3d illustrations, SVG icons, and graphic assets for Figma, Sketch, and Adobe XD. from UIHUT.&lt;/p&gt;

&lt;p&gt;UIHUT is a design resources platform for UX/UI designers, developers, and founders. Our high-quality design resources will help you to speed up the design process. Resources:&lt;/p&gt;

&lt;p&gt;1000+ Web Templates (Figma, Sketch, XD)&lt;br&gt;
 2500+ Illustrations (Figma, Sketch, XD)&lt;br&gt;
8000+ SVG Icons&lt;br&gt;
500+ Mobile App Screens (Figma, Sketch, XD)&lt;br&gt;
 100+ UI Assets for Web Application (Figma, Sketch, XD)&lt;br&gt;
After all, you can go to UIHUT use this coupon code ‘moy10’ to get a 10% extra off for a lifetime deal.&lt;/p&gt;

&lt;p&gt;We are uploading more resources every day.&lt;/p&gt;

</description>
      <category>landingpagetemplate</category>
      <category>socialnetworkinglandingpage</category>
      <category>weblandingpage</category>
      <category>youtubewebtemplate</category>
    </item>
    <item>
      <title>Introduction to SolidJS and Reactive Primitives</title>
      <author>Can Burak Sofyalioglu</author>
      <pubDate>Wed, 06 Oct 2021 15:14:37 +0000</pubDate>
      <link>https://dev.to/canburaks/introduction-to-solidjs-and-reactive-primitives-1o6h</link>
      <guid>https://dev.to/canburaks/introduction-to-solidjs-and-reactive-primitives-1o6h</guid>
      <description>&lt;p&gt;SolidJS is a true reactive library that allows you to use JSX for your frontend projects. In this blog post, I'll share my first impressions on the &lt;em&gt;SolidJS UI library&lt;/em&gt; and its reactive primitives. The original article can be found here: &lt;a href="https://www.cbsofyalioglu.com/code/solidjs-and-reactive-primitives/"&gt;"Introduction to SolidJS"&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;I like the concept of reactivity when building frontend projects. Despite its name, React is not a truly reactive library. I also like the Svelte because of its reactivity. I previously wrote a tutorial about &lt;a href="https://www.cbsofyalioglu.com/post/django-and-modern-js-libraries-svelte/"&gt;Django and Svelte&lt;/a&gt;. However, I realized that writing projects with Svelte are not so scalable like React projects because React and JSX provide great modularity.&lt;/p&gt;

&lt;p&gt;However, SolidJS offers the best of both worlds.&lt;/p&gt;

&lt;p&gt;I'm currently not planning to do a real project with SolidJS until I use it. Currently, I'm building an e-commerce store, &lt;a href="https://www.opendigitalgallery.com/"&gt;Duvar Posterleri&lt;/a&gt; (Wall Posters), and I would work with SolidJS for small scripts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;OK, let's dive into the topic. Before reviewing SolidJS, it is better to get familiar with the concepts. I'll shortly talk about &lt;em&gt;What are reactive systems?&lt;/em&gt; and &lt;em&gt;what are those reactive primitives?&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-reactive-systems"&gt;
  &lt;/a&gt;
  What are reactive systems?
&lt;/h3&gt;

&lt;p&gt;According to &lt;a href="https://www.reactivemanifesto.org/"&gt;The Reactive Manifesto&lt;/a&gt;,  reactive systems are responsive, resilient, elastic, and message-driven. We call these Reactive Systems.&lt;/p&gt;

&lt;p&gt;Systems built as Reactive Systems are more flexible, loosely coupled, and scalable. This makes them easier to develop and amenable to change.&lt;/p&gt;

&lt;p&gt;They are significantly more tolerant of failure, and when failure does occur they meet it with elegance rather than a disaster.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-reactive-systems-do"&gt;
  &lt;/a&gt;
  What Reactive Systems do
&lt;/h3&gt;

&lt;p&gt;There are numerous reactive libraries in many programming languages like SolidJS in JS.&lt;/p&gt;

&lt;p&gt;Reactive systems must react to data changes. Generally, these changes occur when new data is received or the old one is updated.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#characteristics-of-reactive-programming"&gt;
  &lt;/a&gt;
  Characteristics of Reactive Programming
&lt;/h3&gt;

&lt;p&gt;The reactive manifesto defines the key characteristics of it, like that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Responsive: Those systems respond on time. Here, of course, timely will differ depending upon the application and domain.&lt;/li&gt;
&lt;li&gt;Resilient. Reactive systems stay responsive in the face of failure.&lt;/li&gt;
&lt;li&gt;Elastic. As the workload grows, the system should continue to be responsive.&lt;/li&gt;
&lt;li&gt;Message Driven. Information is exchanged between elements of a reactive system using messages. This ensures loose coupling, isolation, and location transparency between these components.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-reactive-primitives-of-solidjs"&gt;
  &lt;/a&gt;
  What are the reactive primitives of SolidJS?
&lt;/h3&gt;

&lt;p&gt;In  SolidJS, the author of the library &lt;a href="https://dev.to/ryansolid/a-hands-on-introduction-to-fine-grained-reactivity-3ndf"&gt;Ryan Carniato&lt;/a&gt; defines them as much like network primitives rather than JavaScript's primitives.  As you will see later, Signals are basically observables.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation-of-solidjs-template"&gt;
  &lt;/a&gt;
  Installation of SolidJS Template
&lt;/h2&gt;

&lt;p&gt;You can easily install a starter &lt;em&gt;SolidJS&lt;/em&gt; template with degit. You can also check other official templates from here: &lt;a href="https://github.com/solidjs/templates"&gt;SolidJS Official Templates&lt;/a&gt;. I prefer a JS template rather than a TypeScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Javascript template&lt;/span&gt;
npx degit solidjs/templates/js solid
&lt;span class="nb"&gt;cd &lt;/span&gt;solid

&lt;span class="c"&gt;# install the dependencies&lt;/span&gt;
yarn &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The template uses Vite as a development tool. Also, this is the first time I have used Vite. Vite is so super fast that I had to check twice that if it reloaded the rendered page. When the installation is done, the project directory looks like that:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vtB-ROQY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cbsofyalioglu.com/wp-content/uploads/2021/09/solidjs-starter-template-direcotry.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vtB-ROQY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cbsofyalioglu.com/wp-content/uploads/2021/09/solidjs-starter-template-direcotry.webp" alt="SolidJS directory"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is very similar to React in many cases. I will check some component rendering processes'.&lt;/p&gt;

&lt;p&gt;In this post, I am going to explore SolidJS in an introductory manner. I'll also create a Counter component first and check its re-render process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-reactive-javascript-library-solidjs"&gt;
  &lt;/a&gt;
  A Reactive JavaScript Library: SolidJS
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#a-reactive-primitives-createsignal"&gt;
  &lt;/a&gt;
  A) Reactive primitives: createSignal
&lt;/h3&gt;

&lt;p&gt;SolidJS has some basic reactive primitives, and Signals are one of them. It looks like it is a "useState" alternative of React Hooks. One difference to the "useState" hook is that a Signal returns two functions: a getter and a setter. Here is the official example of creating a signal:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;createSignal function takes an initial value and returns an array with an access and update function.&lt;/li&gt;
&lt;li&gt;You should execute the getter function (access) in order to get the value.&lt;/li&gt;
&lt;li&gt;You can pass function to update function (set function). In this function, you can access the previous state also.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;getValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createSignal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialValue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// read value&lt;/span&gt;
&lt;span class="nx"&gt;getValue&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// set value&lt;/span&gt;
&lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nextValue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// set value with a function setter&lt;/span&gt;
&lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PxaQNpY8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cbsofyalioglu.com/wp-content/uploads/2021/09/SolidJS-Create-Signal-Component-2-1270x762.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PxaQNpY8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cbsofyalioglu.com/wp-content/uploads/2021/09/SolidJS-Create-Signal-Component-2-1270x762.webp" alt="Solid JS createSignal"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createSignal&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;solid-js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;initial&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createSignal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initial&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* Notice the usage of count! It is a function*/&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#1-component-state-access-and-update"&gt;
  &lt;/a&gt;
  1) Component State Access and Update
&lt;/h4&gt;

&lt;p&gt;SolidJS call the state elements as signals. However, I prefer to use state rather than signal.  Let's make a Counter component within the App component. Fill the &lt;code&gt;App.jsx&lt;/code&gt; file as follows:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L6evaLPw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cbsofyalioglu.com/wp-content/uploads/2021/09/SolidJS-Component-State-Change-1-1270x681.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L6evaLPw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cbsofyalioglu.com/wp-content/uploads/2021/09/SolidJS-Component-State-Change-1-1270x681.webp" alt="SolidJS change state"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;logo&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./logo.svg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styles&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.module.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createSignal&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;solid-js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/**
     * CHECKPOINT
     * if the App component renders
     * it will print to console
     */&lt;/span&gt;
    &lt;span class="c1"&gt;//&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App component rendered.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;header&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;logo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;logo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nx"&gt;Edit&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;jsx&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/code&amp;gt; and save to reload&lt;/span&gt;&lt;span class="err"&gt;.
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;
                    &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://github.com/solidjs/solid&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_blank&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="nx"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;noopener noreferrer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nx"&gt;Learn&lt;/span&gt; &lt;span class="nx"&gt;Solid&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Counter&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/header&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;initial&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createSignal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initial&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * CHECKPOINT
     * if the Counter component renders. it will print to console.
     * Also, I put another print statement for the count function.
     */&lt;/span&gt;
    &lt;span class="c1"&gt;//&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Counter component rendered.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Counter component count value: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* Notice the usage of count! It is a function*/&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Increase&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Decrease&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's check the browser and the first render of SolidJS. As you see, there is no extra component render. If it were React, we should have seen many times "Counter component rendered" text on the console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--brxucviV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.cbsofyalioglu.com/wp-content/uploads/2021/09/solidjs-reactivity.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--brxucviV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.cbsofyalioglu.com/wp-content/uploads/2021/09/solidjs-reactivity.gif" alt="SolidJS's Reactivity"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-parent-component-state-access-and-update"&gt;
  &lt;/a&gt;
  2) Parent Component State Access and Update
&lt;/h4&gt;

&lt;p&gt;Let's make it further and pass the signal setter to the child component and use it from there. Change both App and Counter components like that:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--udIAE1xQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cbsofyalioglu.com/wp-content/uploads/2021/09/SolidJS-Changing-State-of-the-Parent-Component-1-1270x681.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--udIAE1xQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.cbsofyalioglu.com/wp-content/uploads/2021/09/SolidJS-Changing-State-of-the-Parent-Component-1-1270x681.webp" alt="SolidJS change parent state"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/**
     * CHECKPOINT
     * if the App component renders
     * it will print to console
     */&lt;/span&gt;
    &lt;span class="c1"&gt;//&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;appCount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setAppCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createSignal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App: count: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;appCount&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App component rendered.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;header&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;logo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;logo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nx"&gt;Edit&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;jsx&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/code&amp;gt; and save to reload&lt;/span&gt;&lt;span class="err"&gt;.
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;
                    &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://github.com/solidjs/solid&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_blank&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="nx"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;noopener noreferrer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nx"&gt;Learn&lt;/span&gt; &lt;span class="nx"&gt;Solid&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* NEW */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="nx"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;appCount&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Counter&lt;/span&gt;
                    &lt;span class="nx"&gt;initial&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;appCount&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;
                    &lt;span class="nx"&gt;setAppCount&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;setAppCount&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// NEW&lt;/span&gt;
                &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/header&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;initial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setAppCount&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createSignal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initial&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * CHECKPOINT
     * if the Counter component renders. it will print to console.
     * Also, I put another print statement for the count function.
     */&lt;/span&gt;
    &lt;span class="c1"&gt;//&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Counter component rendered.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Counter component count value: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* Notice the usage of count! It is a function*/&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Increase&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Decrease&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;hr&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;

            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* Buttons changes the signal value of its parent component */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setAppCount&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nx"&gt;AppCount&lt;/span&gt; &lt;span class="nx"&gt;Increase&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setAppCount&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nx"&gt;AppCount&lt;/span&gt; &lt;span class="nx"&gt;Decrease&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, there is not any component re-rendering. It's awesome.🥳&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8IViwvwG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.cbsofyalioglu.com/wp-content/uploads/2021/09/solidjs-change-state-of-parent-component.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8IViwvwG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.cbsofyalioglu.com/wp-content/uploads/2021/09/solidjs-change-state-of-parent-component.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#b-reactive-primitives-createeffect"&gt;
  &lt;/a&gt;
  B) Reactive primitives: createEffect
&lt;/h3&gt;

&lt;p&gt;As you might expect, &lt;code&gt;createEffect&lt;/code&gt; is the equivalent of the &lt;code&gt;useEffect&lt;/code&gt; hook in React. The official explanation and example are as follows:&lt;/p&gt;

&lt;p&gt;Creates a new computation that automatically tracks dependencies and runs after each render where a dependency has changed. Ideal for using &lt;code&gt;ref&lt;/code&gt;s and managing other side effects.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const [a, setA] = createSignal(initialValue);

// effect that depends on signal `a`
createEffect(() =&amp;gt; doSideEffect(a()));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's time to play with this function. The official example returns a function (doSideEffect) that takes state value as its argument. Even if the returning function doesn't take the state value as its argument but as an inner value, the &lt;code&gt;createEffect&lt;/code&gt; function successfully makes a side-effect.&lt;/p&gt;

&lt;p&gt;Let's add those to the &lt;code&gt;App&lt;/code&gt; component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="c1"&gt;// The function creates side-effect&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;changeTitle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`#App: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// effect that depends on signal `a`&lt;/span&gt;
    &lt;span class="nx"&gt;createEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;changeTitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;appCount&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We created a function (changeTitle) responsible for the side-effect. It takes a value and changes the document title according to that. It also takes the state value of the App component which is appCount. Your app component should look like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;appCount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setAppCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createSignal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App: count: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;appCount&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App component rendered.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// The function creates side-effect&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;changeTitle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`#App: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// effect that depends on signal `a`&lt;/span&gt;
    &lt;span class="nx"&gt;createEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;changeTitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;appCount&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;header&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;logo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;logo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nx"&gt;Edit&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;jsx&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/code&amp;gt; and save to reload&lt;/span&gt;&lt;span class="err"&gt;.
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;
                    &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://github.com/solidjs/solid&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_blank&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="nx"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;noopener noreferrer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nx"&gt;Learn&lt;/span&gt; &lt;span class="nx"&gt;Solid&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* NEW */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="nx"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;appCount&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Counter&lt;/span&gt;
                    &lt;span class="nx"&gt;initial&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;appCount&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;
                    &lt;span class="nx"&gt;setAppCount&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;setAppCount&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// NEW&lt;/span&gt;
                &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/header&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll easily differentiate that when the app renders the first time, the document title was &lt;code&gt;App: 0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After, when I clicked and increased the appCount value, the document title also changed to the corresponding value. You'll also notice that there will be no component re-render.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s-i4CW1V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.cbsofyalioglu.com/wp-content/uploads/2021/09/solidjs-create-effect.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s-i4CW1V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.cbsofyalioglu.com/wp-content/uploads/2021/09/solidjs-create-effect.gif" alt="SolidJS createEffect"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#c-reactive-primitives-creatememo"&gt;
  &lt;/a&gt;
  C) Reactive primitives: createMemo
&lt;/h3&gt;

&lt;p&gt;This reactive primitive returns a function that returns a read-only derived signal. Its value is recalculated whenever dependencies are updated. &lt;code&gt;createMemo&lt;/code&gt; primitive is the equivalent of &lt;code&gt;useMemo&lt;/code&gt; hook.&lt;/p&gt;

&lt;p&gt;Edt the App component according to those:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="c1"&gt;// Add those to the App component&lt;/span&gt;
    &lt;span class="c1"&gt;// It recalculate the value whenever the dependencies are updates.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;makeDouble&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doubleCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createMemo&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;makeDouble&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;appCount&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;doubleCount &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;doubleCount&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, update the content of the App component. By doing this, we can see the &lt;code&gt;doubleCount&lt;/code&gt; signal in work. You can also check the code location from the image below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Double&lt;/span&gt; &lt;span class="nx"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;doubleCount&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N9F8-b3U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.cbsofyalioglu.com/wp-content/uploads/2021/09/SolidJS-createMemo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N9F8-b3U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.cbsofyalioglu.com/wp-content/uploads/2021/09/SolidJS-createMemo.gif" alt="SolidJS createMemo function"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#d-reactive-primitives-createresource"&gt;
  &lt;/a&gt;
  D) Reactive primitives: createResource
&lt;/h3&gt;

&lt;p&gt;This function creates a signal that is responsible for async requests. The official explanation and example are here:&lt;/p&gt;

&lt;p&gt;Creates a signal that can manage async requests. The &lt;code&gt;fetcher&lt;/code&gt; is an async function that accepts the return value of the source if provided, and returns a Promise whose resolved value is set in the resource. The fetcher is not reactive, so use the optional first argument if you want it to run more than once. If the source resolves to false, null, or undefined will not fetch. Also, &lt;code&gt;loading&lt;/code&gt; and &lt;code&gt;error&lt;/code&gt; are reactive getters and can be tracked.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;mutate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;refetch&lt;/span&gt; &lt;span class="p"&gt;}]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createResource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getQuery&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fetchData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// read value&lt;/span&gt;
&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// check if loading&lt;/span&gt;
&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// check if errored&lt;/span&gt;
&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// directly set value without creating promise&lt;/span&gt;
&lt;span class="nx"&gt;mutate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;optimisticValue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// refetch last request just because&lt;/span&gt;
&lt;span class="nx"&gt;refetch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;My first impressions of SolidJS are amazing. Up to this point, there is no overhead that you always face with React. I will be watching the development of SolidJS with interest.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Top 5 reasons to not work on any projects</title>
      <author>Karthik Pariti</author>
      <pubDate>Wed, 06 Oct 2021 15:14:36 +0000</pubDate>
      <link>https://dev.to/byteslash/top-5-reasons-to-not-work-on-any-projects-1ma0</link>
      <guid>https://dev.to/byteslash/top-5-reasons-to-not-work-on-any-projects-1ma0</guid>
      <description>&lt;p&gt;Everyone aspires to do amazing projects and tries to impress everyone with those projects. But why should you not do any projects?&lt;/p&gt;

&lt;p&gt;Here are the &lt;strong&gt;Top 5 reasons to not work on any projects&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So let's get started!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wz9JZmwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/14xmy8xmswb0vyuqcyy6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wz9JZmwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/14xmy8xmswb0vyuqcyy6.gif" alt="Let's get started!"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reason-1-doing-projects-is-hard-rather-not-do-it-at-all"&gt;
  &lt;/a&gt;
  Reason 1: Doing projects is hard! Rather not do it at all!
&lt;/h2&gt;

&lt;p&gt;I give up on projects before even doing them. Why to waste my time on a thing that is hard? I'll rather continue doing the same old things which I please to do.&lt;/p&gt;

&lt;p&gt;Doing projects is hard indeed!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reason-2-you-shouldnt-do-projects-so-that-you-can-have-a-noob-resume"&gt;
  &lt;/a&gt;
  Reason 2: You shouldn't do projects so that you can have a noob resume
&lt;/h2&gt;

&lt;p&gt;Don't do projects so that you can have a very noob and basic portfolio/resume having nothing other than your degree certificate&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reason-3-to-be-in-the-tutorial-loop-forever"&gt;
  &lt;/a&gt;
  Reason 3: To be in the tutorial loop forever
&lt;/h2&gt;

&lt;p&gt;Why do projects when you can watch tutorial after tutorial and keep on doing whatever the guy making the tutorial says and follow them blindly? A very captivating reason indeed! Yes sir!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reason-4-dont-do-projects-to-have-zero-confidence-in-yourself-and-in-your-skills"&gt;
  &lt;/a&gt;
  Reason 4: Don't do projects to have zero confidence in yourself and in your skills
&lt;/h2&gt;

&lt;p&gt;Taking up a project, doing it, and finishing it gives you confidence in yourself and in your skills. But that is exactly what &lt;strong&gt;mustn't&lt;/strong&gt; be done!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reason-5-dont-do-projects-to-not-learn-things-faster"&gt;
  &lt;/a&gt;
  Reason 5: Don't do projects to not learn things faster
&lt;/h2&gt;

&lt;p&gt;Why learn faster by doing projects when you can just do it at your own slow pace and especially when it's said The learning process must be slow and steady for everyone to grasp it easily. Another captivating reason! Yes sir Yes sir!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reason-6-doing-projects-makes-you-an-expert-in-your-field"&gt;
  &lt;/a&gt;
  Reason 6: Doing projects makes you an expert in your field!
&lt;/h2&gt;

&lt;p&gt;The reason is fine, but who actually said it? Absolutely &lt;strong&gt;NO&lt;/strong&gt; one. So it is something you absolutely &lt;strong&gt;mustn't&lt;/strong&gt; and &lt;strong&gt;shouldn't&lt;/strong&gt; do!&lt;/p&gt;

&lt;p&gt;And finally, don't react to this article, don't comment your views in the comments section, and don't forget &lt;strong&gt;to not do&lt;/strong&gt; any projects!&lt;/p&gt;

&lt;p&gt;Hoping that you are convinced to &lt;strong&gt;NOT&lt;/strong&gt; work on any projects now!&lt;/p&gt;

&lt;p&gt;Also, don't join the &lt;a href="https://discord.gg/MfgSdjXA7u"&gt;ByteSlash Community&lt;/a&gt; to &lt;strong&gt;NOT&lt;/strong&gt; work on amazing projects with a supporting and fun community, and &lt;a href="https://links-app-kardev07.vercel.app/"&gt;let's not connect&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>resume</category>
    </item>
    <item>
      <title>On Buttons and Links</title>
      <author>Cory LaViska</author>
      <pubDate>Wed, 06 Oct 2021 14:32:46 +0000</pubDate>
      <link>https://dev.to/claviska/on-buttons-and-links-2o77</link>
      <guid>https://dev.to/claviska/on-buttons-and-links-2o77</guid>
      <description>&lt;p&gt;I posted a tweet yesterday that was met with some controversy, so I thought it would be a good idea to unravel it.&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;Unpopular opinion: in a design system, a "link" and a "button" should be one component.&lt;/p&gt;— Cory LaViska (&lt;a class="mentioned-user" href="https://dev.to/claviska"&gt;@claviska&lt;/a&gt;
) &lt;a href="https://twitter.com/claviska/status/1445479402532261892?ref_src=twsrc%5Etfw"&gt;October 5, 2021&lt;/a&gt;
&lt;/blockquote&gt; 

&lt;p&gt;At face value, I understand why people are upset with this. It's hard to provide context in 280 characters, though, so &lt;a href="https://twitter.com/claviska/status/1445479402532261892"&gt;I made it a thread&lt;/a&gt;. That was a mistake, because people don't always read the thread so the intent gets lost and assumptions get made. Twitter is a wonderful place.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#semantically-different"&gt;
  &lt;/a&gt;
  Semantically Different
&lt;/h2&gt;

&lt;p&gt;Let's start by stating the obvious. A &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; and a &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; are &lt;a href="https://www.webaxe.org/proper-use-buttons-links/"&gt;semantically different HTML elements&lt;/a&gt;, so no need to bust out the keyboard to tell me that. The idea of merging the two into a single component comes from real world experience working on multiple design system teams for large companies.&lt;/p&gt;

&lt;p&gt;The fact is that designers always, always ask for links that look like buttons and buttons that look like links. I know, &lt;a href="https://twitter.com/oliverturner/status/1445724464860127244?s=20"&gt;designers shouldn't do this&lt;/a&gt;. But this isn't a fantasy, it's our reality, and &lt;a href="https://twitter.com/claviska/status/1445722314889437184"&gt;when it costs your organization measurable value&lt;/a&gt; in terms of conversions, sales, etc., you're not going to win that argument.&lt;/p&gt;

&lt;p&gt;Emotions aside, this often leads to developers producing two separate &lt;a href="https://explore.fast.design/components/fast-button"&gt;button&lt;/a&gt; and &lt;a href="https://explore.fast.design/components/fast-anchor"&gt;link&lt;/a&gt; components with the same styles and logic, and consumers end up misusing them just like &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To alleviate this, &lt;a href="https://twitter.com/claviska/status/1445480631832436747"&gt;I propose that a custom element&lt;/a&gt; such as &lt;code&gt;&amp;lt;my-button&amp;gt;&lt;/code&gt; should render the same "button" visually, but based on the presense of an optional &lt;code&gt;href&lt;/code&gt; attribute, it will use a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; or an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; under the hood.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;my-button&amp;gt;&lt;/span&gt;Save&lt;span class="nt"&gt;&amp;lt;/my-button&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- 👉 &amp;lt;button class="button button--primary"&amp;gt;Save&amp;lt;/button&amp;gt; --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;my-button&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/new"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;New&lt;span class="nt"&gt;&amp;lt;/my-button&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- 👉 &amp;lt;a class="button button--primary" href="/new"&amp;gt;New&amp;lt;/a&amp;gt; --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This makes it more foolproof — if it goes somewhere, it becomes a link. If not, it's remains a button. So far, we're more or less aligned with the Twittersphere…&lt;a href="https://twitter.com/EmmaJ_PR/status/1445664177821925387?s=20"&gt;except for one detail&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;They should look different because they should do different things.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#visually-different"&gt;
  &lt;/a&gt;
  Visually Different?
&lt;/h2&gt;

&lt;p&gt;As much as I want to agree with this statement, it falls apart in practice. &lt;em&gt;Links will inevitably need to look like buttons from time to time.&lt;/em&gt; No, buttons and links are not &lt;em&gt;semantically&lt;/em&gt; the same, but there are times when they need to be &lt;em&gt;visually&lt;/em&gt; the same.&lt;/p&gt;

&lt;p&gt;In web apps, the function of buttons and links is often blended. Some actions, such as "new," might simply open a new page. Others aren't as obvious. "Save" might fire off an &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"&gt;XHR&lt;/a&gt; and redirect you to another page if the response is successful — or go nowhere and show an error if the response fails.&lt;/p&gt;

&lt;p&gt;Suddenly, the line between "button" and "link" is more blurry. Should it still be a link if it takes me somewhere only &lt;em&gt;after&lt;/em&gt; an XHR is successful? What if the request errors out and doesn't redirect? What if you click a link and the app prevents navigation because you have unsaved changes? There are so many scenarios and "what ifs" that, in practice, it's hard to settle on a 100% agreeable definition.&lt;/p&gt;

&lt;p&gt;And then comes the design team with a Figma for the app's toolbar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--azPAdFaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tj4buvuhvzp5vjiel8wd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--azPAdFaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tj4buvuhvzp5vjiel8wd.png" alt="Button group with four actions: new, edit, settings, download"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We'll assume that "New" takes you to &lt;code&gt;/new&lt;/code&gt; and "Edit" takes you to &lt;code&gt;/edit/:id&lt;/code&gt;. Those should definitely be links! But wait — "Settings" doesn't go anywhere. It just opens up a dialog, so it needs to be a button. And instead of creating an endpoint on the server that downloads the file, we'll use the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-download"&gt;&lt;code&gt;download&lt;/code&gt;&lt;/a&gt; attribute so that also needs to be a link.&lt;/p&gt;

&lt;p&gt;Let's adjust the design to account for the idea that buttons and links &lt;em&gt;must&lt;/em&gt; be visually different.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AQUCdFtx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ztqg0xv5j1t388tbzyzg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AQUCdFtx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ztqg0xv5j1t388tbzyzg.png" alt="A button group with a new link, edit link, settings button, and a download link"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do you think the design team is going to be thrilled with these changes to the toolbar? Do you think your customers will prefer this toolbar over the previous one?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-users-expect"&gt;
  &lt;/a&gt;
  What Users Expect
&lt;/h2&gt;

&lt;p&gt;If the user is presented with a set of actions, &lt;em&gt;they don't care if you use buttons or links under the hood&lt;/em&gt;. They care that it's consistent and that each control does what it's supposed to do. Remember that in all cases, each control's action is clearly inferred from its label.&lt;/p&gt;

&lt;p&gt;Whether clicking "Delete" takes the user to a new page to confirm or opens a dialog to confirm is irrelevant. To the user, they're all just "buttons" that do something.*&lt;/p&gt;

&lt;p&gt;It is true that links and buttons have different behaviors and the decision to make them look visually similar should be carefully considered. For example, CMD or CTRL + click typically opens a link in a new window. When buttons and links are identical, it can put users at a disadvantage.&lt;/p&gt;

&lt;p&gt;I would recommend &lt;em&gt;not&lt;/em&gt; making buttons and links look the same if you can reasonably expect the user will desire such behaviors. Some environments are more predictable than others . But accessibility isn't binary, so thought and consideration is still required from both design and development regardless of your approach.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enforcement-via-api"&gt;
  &lt;/a&gt;
  Enforcement via API
&lt;/h2&gt;

&lt;p&gt;The suggestion I'm making enforces the semantic definition of "button" and "link" by leaning on API design to ensure DRY principles and remove the burden of thought from consumers. This solves the problem of when to use a link or button under the hood.&lt;/p&gt;

&lt;p&gt;It does not answer the question of "&lt;em&gt;should buttons and links be visually similar&lt;/em&gt;?" That's a topic I'd love to have a conversation about because there are plenty of use cases that suggest at least sometimes they should.&lt;/p&gt;

&lt;p&gt;Just know that, if you're working on a design system, it's extremely likely you will come across this requirement!&lt;/p&gt;




&lt;p&gt;&lt;small&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;*This doesn't mean you should throw the baby out with the bathwater. It just means there might be situations where you need to use a link as a button, and the user doesn't care as long as it works. The download example comes do mind.&lt;/p&gt;






&lt;p&gt;&lt;em&gt;This post originally appeared on &lt;a href="https://www.abeautifulsite.net/posts/on-buttons-and-links/"&gt;the author's blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webcomponents</category>
      <category>designsystems</category>
      <category>design</category>
      <category>css</category>
    </item>
    <item>
      <title>KubeMQ: A Modern Alternative to Kafka</title>
      <author>Michael Bogan</author>
      <pubDate>Wed, 06 Oct 2021 14:21:57 +0000</pubDate>
      <link>https://dev.to/mbogan/kubemq-a-modern-alternative-to-kafka-1mga</link>
      <guid>https://dev.to/mbogan/kubemq-a-modern-alternative-to-kafka-1mga</guid>
      <description>&lt;p&gt;Modern applications are complex, with many different moving parts. Even for the most basic fulfillment center application, front-end interfaces trigger payment processing transactions, which in turn trigger manufacturing and shipping events. These services need a reliable way to communicate with one another regardless of the underlying network or the availability of other services.&lt;/p&gt;

&lt;p&gt;To make such complex operations happen, there has to be some type of service “post office” to keep track of all the requests and alerts flying back and forth. The tool that achieves this is the &lt;em&gt;message queue&lt;/em&gt;. A message queue is a specialized application that acts as an intermediary between different services of a distributed application or between different applications. It decouples the application services from one another, ensuring that processing occurs whether or not the recipient of a message is available. The message queue ensures all messages are &lt;em&gt;eventually&lt;/em&gt; received successfully.&lt;/p&gt;

&lt;p&gt;Common use cases for message queues include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Asynchronous processing between disparate applications.&lt;/li&gt;
&lt;li&gt;Microservice-based applications where reliable communication between the different components is critical.&lt;/li&gt;
&lt;li&gt;Transaction ordering and throttling.&lt;/li&gt;
&lt;li&gt;Data processing operations that can benefit from the streamlined efficiency of batching.&lt;/li&gt;
&lt;li&gt;Applications that must be scalable to meet sudden and unexpected changes in demand.&lt;/li&gt;
&lt;li&gt;Applications that must be resilient enough to recover from crashes and unexpected failures.&lt;/li&gt;
&lt;li&gt;Throttling resource consumption by long-running processes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There’s no shortage of vendors in the message queue field. Larger cloud platforms like Amazon Web Services, Microsoft Azure, and Google Cloud have their own offerings (AWS Simple Queue Service, Azure’s Service Bus, and Google’s Pub/Sub). There are also standalone, general-purpose message brokers such as RabbitMQ, Apache’s ActiveMQ, and Kafka.&lt;/p&gt;

&lt;p&gt;This article introduces a modern, Kubernetes-native message queue called KubeMQ, to show how organizations trying to implement—or already using—Kafka on Kubernetes can benefit from it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introducing-apache-kafka"&gt;
  &lt;/a&gt;
  Introducing Apache Kafka
&lt;/h2&gt;

&lt;p&gt;To understand the full value of KubeMQ, we’ll first need to spend some time with Kafka. Kafka was originally created by LinkedIn engineers as a software bus for tracking LinkedIn user activities. It was later released as an open source product and today, Kafka is developed and managed by the Apache Software Foundation. &lt;/p&gt;

&lt;p&gt;Apache notes that &lt;a href="https://kafka.apache.org/"&gt;more than 80% of Fortune 100 companies trust and use Kafka&lt;/a&gt;. Despite being open source, it’s known to be a highly scalable system that can connect to a wide range of event producers and consumers. It can be configured to perform complex functions with data streams and can work well even in limited network environments. With widely available support within the online user community, Kafka has several commercial offerings as well. For example, AWS offers managed Kafka, as does Confluent.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#limitations-of-kafka"&gt;
  &lt;/a&gt;
  Limitations of Kafka
&lt;/h2&gt;

&lt;p&gt;Despite its high adoption, Kafka isn’t always the best choice as a message queuing system. It has a monolithic architecture, suitable for on-premise clusters or high-end multi-VM setups. Given how much memory and storage Kafka needs, quickly spinning up a multi-node cluster on a standalone workstation for testing purposes can be a challenge.&lt;/p&gt;

&lt;p&gt;Simply put, it’s not easy to successfully bring together all the complex pieces necessary to integrate Kafka with your infrastructure. This is particularly the case with a Kubernetes-based architecture.&lt;/p&gt;

&lt;p&gt;As you can see from the image below, there are different moving parts to a Kubernetes-based Kafka deployment. Besides provisioning the underlying compute, network, and storage infrastructure for a basic Kubernetes cluster (if you are implementing it on-prem), you’ll also need to install and integrate all the Kafka pieces with a package manager like Helm. These components can include an orchestrator like ZooKeeper or Mesos for managing Kafka’s brokers and topics. Other areas needing attention include dependencies, logs, partitions, and so on. If even one element is either missing or misconfigured, things won’t work—deploying Kafka successfully isn’t trivial.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7xv9JKxS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzmyfvv8ibcr33u5s120.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7xv9JKxS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzmyfvv8ibcr33u5s120.png" alt="Kafka on Kubernetes Architecture"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Kafka on Kubernetes Architecture&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Another area to be aware of is Kafka’s reliance on the Java Virtual Machine (JVM). The JVM adds significant memory overhead to Kubernetes as each running container will require a large memory footprint. Configuring Kafka JVM for optimal performance can require a significant amount of tweaking. &lt;/p&gt;

&lt;p&gt;In addition to the JVM parameters, Kafka already comes with a large number of configuration settings. Most product environments will also need to fine-tune those settings, adding to the overall setup time. &lt;/p&gt;

&lt;p&gt;Adding a new Kafka node to a Kubernetes cluster requires complex manual balancing to maintain optimal resource usage. And that’s why there’s no simple way to manage and ensure a reliable backup and recovery strategy; it’s not easy to disaster-proof a Kafka cluster running on a large number of nodes. Unlike Kubernetes clusters where data is persisted outside the pod, and the orchestrator spins up a failed pod automatically, there’s no such native fail-proof mechanism for Kafka. &lt;/p&gt;

&lt;p&gt;Finally, effective monitoring of Kafka/ZooKeeper/Kubernetes deployments requires third-party tools.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introducing-kubemq"&gt;
  &lt;/a&gt;
  Introducing KubeMQ
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;KubeMQ&lt;/em&gt; is a messaging service that was built from the ground up with Kubernetes in mind. Following the container architecture best practices, KubeMQ is intended to be stateless and ephemeral. That is, a KubeMQ node will remain unchanged, predictable, and reproducible for its entire lifecycle. If configuration changes are needed, nodes are shut down and replaced. &lt;/p&gt;

&lt;p&gt;This reproducibility means that, unlike Kafka, KubeMQ comes with a zero-configuration setup, needing no configuration tweaking after it’s installed. &lt;/p&gt;

&lt;p&gt;KubeMQ was designed to accommodate the widest range of message patterns. It’s a message broker and message queue that supports the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pub/Sub with or without persistence&lt;/li&gt;
&lt;li&gt;Request/Reply (synchronous, asynchronous)&lt;/li&gt;
&lt;li&gt;At Most Once Delivery&lt;/li&gt;
&lt;li&gt;At Least Once Delivery&lt;/li&gt;
&lt;li&gt;Streaming patterns&lt;/li&gt;
&lt;li&gt;RPC&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Comparatively, Kafka only supports Pub/Sub with persistence and streaming. RPC and Request/Reply patterns are not supported by Kafka at all.&lt;/p&gt;

&lt;p&gt;In terms of resource usage, KubeMQ outshines Kafka with its minimal footprint. The KubeMQ docker container takes up only 30MB of space. Such a small footprint contributes to a fault-tolerant setup and streamlined deployments. Unlike Kafka, adding KubeMQ to a small development Kubernetes environment in a local workstation is straightforward. But at the same time, KubeMQ is scalable enough to be deployed in a hybrid environment running on hundreds of on-premise and cloud-hosted nodes. At the core of this deployment ease is &lt;a href="https://github.com/kubemq-io/kubemqctl"&gt;kubemqctl&lt;/a&gt;, the command line interface tool for KubeMQ, analogous to Kubernetes’ kubectl. &lt;/p&gt;

&lt;p&gt;Another area where KubeMQ outperforms Kafka is its speed. Kafka was written in Java and Scala while KubeMQ was written in Go, ensuring fast operation. In an internal benchmark operation, KubeMQ processed one million messages 20% faster than Kafka. &lt;/p&gt;

&lt;p&gt;Going back to the “configuration-free” side of KubeMQ, a &lt;em&gt;channel&lt;/em&gt; is the only object developers will need to create. You can forget all about brokers, exchanges, and orchestrators—KubeMQ’s Raft does all that instead of ZooKeeper.&lt;/p&gt;

&lt;p&gt;From a monitoring perspective, dashboards via Prometheus and Grafana come fully integrated with KubeMQ, so you won’t have the added work of manually integrating third-party observability tools. However, you can still use your existing logging and monitoring solutions with KubeMQ, thanks to its native integration with tools including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fluentd, Elastic, and Datadog, for monitoring&lt;/li&gt;
&lt;li&gt;Loggly, for logging&lt;/li&gt;
&lt;li&gt;Jaeger and Open Tracing, for tracing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since &lt;a href="https://kubemq.io/kafka-vs-kubemq/"&gt;Kafka isn’t a native part&lt;/a&gt; of the Cloud Native Computing Foundation (CNCF) landscape, integration with CNCF tools often is not supported and has to be manually configured.&lt;/p&gt;

&lt;p&gt;If configured, connectivity can happen through the open source gRPC remote procedure call system, whose superior compatibility with Kubernetes &lt;a href="https://blog.cloudflare.com/moving-k8s-communication-to-grpc/"&gt;is well known&lt;/a&gt;. Kafka’s own proprietary connectivity mechanism doesn’t necessarily deliver comparable results.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#transparent-migration-from-kafka-to-kubemq"&gt;
  &lt;/a&gt;
  Transparent Migration from Kafka to KubeMQ
&lt;/h2&gt;

&lt;p&gt;In addition to the simplicity of deployment and operation for KubeMQ, porting an existing Kafka setup to KubeMQ is simple. &lt;/p&gt;

&lt;p&gt;To do this, developers can start by using the KubeMQ Kafka connector. KubeMQ target and source connectors are configured to convert messages from Kafka. At a high level, KubeMQ source connectors consume messages from a Kafka source topic as a subscriber, convert the message to a KubeMQ message format, and then send the message to an internal journal. KubeMQ target connectors subscribe to an output journal that contains the converted message, and then sends the messages to a target topic in Kafka. The high-level architecture is shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tq1VCNSy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ixspr96o892zocfrk9o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tq1VCNSy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ixspr96o892zocfrk9o.png" alt="Kafka Integration with KubeMQ"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Kafka Integration with KubeMQ&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Additionally, any messaging patterns supported by Kafka are all supported by KubeMQ. For example, Kafka only supports Pub / Sub with persistence, and streaming. KubeMQ is a message queue and a message broker that supports Pub / Sub (with or without persistence) Request / Reply (sync, async), at least one delivery, streaming patterns, and RPC. So, there’s no need to refactor application code and accommodate complicated logic changes when migrating from Kafka to KubeMQ. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final Words
&lt;/h2&gt;

&lt;p&gt;For most workloads, the simplicity, light footprint, and container-first integration built into &lt;a href="https://kubemq.io/request-a-demo/"&gt;KubeMQ&lt;/a&gt; will deliver performance superior to Kafka. In addition, the almost null configuration needed will save many hours of administration and setup. As we mentioned, migration is straightforward. &lt;/p&gt;

&lt;p&gt;KubeMQ is a free download that comes with a free, six-month development trial. If you are working with OpenShift, KubeMQ is available in &lt;a href="https://marketplace.redhat.com/en-us"&gt;the Red Hat Marketplace&lt;/a&gt;. It’s also available for all the major cloud environments, including GCP, AWS, Azure, and DigitalOcean.&lt;/p&gt;

</description>
      <category>microservices</category>
      <category>architecture</category>
    </item>
    <item>
      <title>Best Corporate Business Website Landing Page Design</title>
      <author>Moinul_h</author>
      <pubDate>Wed, 06 Oct 2021 14:10:34 +0000</pubDate>
      <link>https://dev.to/gphmoinul/best-corporate-business-website-landing-page-design-d83</link>
      <guid>https://dev.to/gphmoinul/best-corporate-business-website-landing-page-design-d83</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KiuHUCaV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i18p802e3pqr296fjsnq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KiuHUCaV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i18p802e3pqr296fjsnq.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello Designers! If you’re looking for a Corporate Business Website landing page, look no further than that Best Corporate Business landing page. It’s very clean and professional wanting you to pick from their services. They have different packages for different businesses. They have a very comprehensive pricing list on the bottom of their website which is good because they don’t want to leave anything else out. You can find more information about them on UIHUT, they will guide you through every step of the way. You will get it with 3 types of files to customize, these are Figma, Sketch, and Adobe XD.&lt;/p&gt;

&lt;p&gt;This Free Best Corporate Business Website, web app design available file Figma, Sketch, Adobe XD&lt;/p&gt;

&lt;p&gt;Download up to fourteen thousand web templates, mobile app templates, illustrations, 3d illustrations, SVG icons, and graphic assets for Figma, Sketch, and Adobe XD. from UIHUT.&lt;/p&gt;

&lt;p&gt;UIHUT is a design resources platform for UX/UI designers, developers, and founders. Our high-quality design resources will help you to speed up the design process. Resources:&lt;/p&gt;

&lt;p&gt;1000+ Web Templates (Figma, Sketch, XD)&lt;br&gt;
 2500+ Illustrations (Figma, Sketch, XD)&lt;br&gt;
8000+ SVG Icons&lt;br&gt;
500+ Mobile App Screens (Figma, Sketch, XD)&lt;br&gt;
 100+ UI Assets for Web Application (Figma, Sketch, XD)&lt;br&gt;
After all, you can go to UIHUT use this coupon code ‘moy10’ to get a 10% extra off for a lifetime deal.&lt;/p&gt;

&lt;p&gt;We are uploading more resources every day.&lt;/p&gt;

</description>
      <category>uidesignsoftware</category>
      <category>webdesignagency</category>
      <category>conceptwebtemplate</category>
      <category>webdesignsoftware</category>
    </item>
    <item>
      <title>Kubernetes: best videos from September, 2021</title>
      <author>MeetupFeed</author>
      <pubDate>Wed, 06 Oct 2021 14:10:24 +0000</pubDate>
      <link>https://dev.to/meetupfeedio/kubernetes-best-videos-from-september-2021-56n9</link>
      <guid>https://dev.to/meetupfeedio/kubernetes-best-videos-from-september-2021-56n9</guid>
      <description>&lt;p&gt;Let’s get down to Kubernetes and check out the most outstanding videos in September. Lessons learned, benefits unfolded and best practices were revealed last month.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://meetupfeed.io/talk/modernizing-a-legacy-app-using-windows-containers-and-kubernetes-challenges-and-lessons-learned"&gt;Modernizing a legacy app using Windows Containers and Kubernetes: Challenges and Lessons learned&lt;/a&gt;&lt;br&gt;
The main purpose of modernizing the hosting was to scale down maintenance efforts and costs. The speaker will take you through the hosting options, solution implementation, experienced challenges and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://meetupfeed.io/talk/benefits-of-switching-to-civo-kubernetes-keptn-case-study"&gt;Benefits of switching to Civo – Keptn case study&lt;/a&gt;&lt;br&gt;
You can obtain how Keptn utilizes Civo’s simplicity and speed from Juergen and how it benefits them in their day-to-day cloud native development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://meetupfeed.io/talk/kubernetes-security-101-best-practices"&gt;Security 101 – Best Practices&lt;/a&gt;&lt;br&gt;
Get an overview of Kubernetes’ working while learning a few practices on how to secure your cluster when deploying a new cluster. This video covers everything you need from A-Z.&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Deploying Medusa on Qovery for a 100% open-source ecommerce stack</title>
      <author>Oliver Juhl</author>
      <pubDate>Wed, 06 Oct 2021 14:03:24 +0000</pubDate>
      <link>https://dev.to/medusajs/deploying-medusa-on-qovery-for-a-100-open-source-ecommerce-stack-phe</link>
      <guid>https://dev.to/medusajs/deploying-medusa-on-qovery-for-a-100-open-source-ecommerce-stack-phe</guid>
      <description>&lt;p&gt;This is a guide for deploying a &lt;a href="https://www.medusa-commerce.com"&gt;Medusa&lt;/a&gt; project to &lt;a href="https://www.qovery.com"&gt;Qovery&lt;/a&gt;. Qovery is a Continuous Deployment Platform, that provides you with the developer experience of Heroku on top of your cloud provider (e.g. AWS, DigitalOcean).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It is assumed, that you are currently running a local instance of Medusa. If not, check out our &lt;a href="https://github.com/medusajs/medusa#-quickstart"&gt;Quickstart&lt;/a&gt; or use &lt;code&gt;npx create-medusa-app&lt;/code&gt; to set up your application in a matter of minutes. For the latter, see &lt;a href="https://docs.medusa-commerce.com/how-to/create-medusa-app"&gt;this guide&lt;/a&gt; for a small walkthrough.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#1-qovery-console"&gt;
  &lt;/a&gt;
  1. Qovery Console
&lt;/h3&gt;

&lt;p&gt;Create an account on &lt;a href="https://console.qovery.com/login"&gt;Qovery&lt;/a&gt; on their free community plan and jump into the console.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-setup"&gt;
  &lt;/a&gt;
  2. Setup
&lt;/h3&gt;

&lt;p&gt;Create a project and an environment.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-add-your-medusa-app"&gt;
  &lt;/a&gt;
  3. Add your Medusa app
&lt;/h3&gt;

&lt;p&gt;Add a new app to your Qovery environment and connect the Git repository that holds your Medusa project. In your application settings, set the port to 9000 unless something else is specified in your setup.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you used our &lt;code&gt;npx&lt;/code&gt; starter, your repository will most likely hold all components; storefront, admin and backend. Ensure that &lt;strong&gt;Root application path&lt;/strong&gt; in Qovery is pointing to your Medusa project (&lt;code&gt;/backend&lt;/code&gt;).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#4-add-a-database"&gt;
  &lt;/a&gt;
  4. Add a database
&lt;/h3&gt;

&lt;p&gt;Navigate to your environment overview and add the databases required by Medusa.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add Postgres database version 10, 11 or 12&lt;/li&gt;
&lt;li&gt;Add Redis database version 5 or 6&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#5-configure-medusa"&gt;
  &lt;/a&gt;
  5. Configure Medusa
&lt;/h3&gt;

&lt;p&gt;Our Medusa project needs a bit of configuration to fit the needs of Qovery.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#update-raw-medusaconfigjs-endraw-"&gt;
  &lt;/a&gt;
  Update &lt;code&gt;medusa-config.js&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;First, add the Postgres and Redis database url to your &lt;code&gt;medusa-config.js&lt;/code&gt;. In Qovery, click on your Medusa app in the environment overview. Navigate to environment variables in the sidebar on the left. Among the secret variables you should find your database urls. They should look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;QOVERY_REDIS_123456789_DATABASE_URL
QOVERY_POSTGRESQL_123456789_DATABASE_URL
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add these to your &lt;code&gt;medusa-config.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const DATABASE_URL = process.env.QOVERY_POSTGRESQL_123456789_DATABASE_URL
const REDIS_URL= process.env.QOVERY_REDIS_123456789_DATABASE_URL
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Furthermore, update &lt;code&gt;module.exports&lt;/code&gt; to include the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;module.exports = {
  projectConfig: {
    redis_url: REDIS_URL,
    database_url: DATABASE_URL,
    database_type: "postgres",
    store_cors: STORE_CORS,
    admin_cors: ADMIN_CORS,
    database_extra: { }
  },
  plugins,
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;: We are using the Qovery community plan, that does not allow SSL connections for the database, so this is disabled.&lt;/p&gt;

&lt;p&gt;In a production environment, you would need the following in the config:&lt;br&gt;
&lt;code&gt;database_extra: { ssl: { rejectUnauthorized: false } }&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#add-some-extra-variables"&gt;
  &lt;/a&gt;
  Add some extra variables
&lt;/h4&gt;

&lt;p&gt;We need to add a couple of more environment variables in Qovery. Add the following variables in your Console with an application scope:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;JTW_SECRET=something_secret_jwt
COOKIE_SECRET=something_secret_cookie
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Make sure to use actual secrets in a production environment.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#update-raw-packagejson-endraw-"&gt;
  &lt;/a&gt;
  Update &lt;code&gt;package.json&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;Update &lt;code&gt;scripts&lt;/code&gt; to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"scripts": {
    "serve": "medusa start",
    "start": "medusa migrations run &amp;amp;&amp;amp; medusa start",
    "prepare": "npm run build",
    "build": "babel src -d dist --extensions \".ts,.js\""
  },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-deploy-medusa"&gt;
  &lt;/a&gt;
  6. Deploy Medusa
&lt;/h3&gt;

&lt;p&gt;Finally, deploy your Redis and Postgres followed by your Medusa application.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#deploy-databases"&gt;
  &lt;/a&gt;
  Deploy databases
&lt;/h4&gt;

&lt;p&gt;In your environment overview in Qovery, deploy your databases one after the other. Only when these are deployed, proceed to next step.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#push-changes-to-your-repository"&gt;
  &lt;/a&gt;
  Push changes to your repository
&lt;/h4&gt;

&lt;p&gt;To initialise your first build Qovery, simply commit and push your changes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add .
git commit -m "chore: Qovery setup"
git push origin main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-try-it-out"&gt;
  &lt;/a&gt;
  6. Try it out!
&lt;/h3&gt;

&lt;p&gt;In Qovery, click on your Medusa app in the environment overview. In the top right you are able to open up your application. Navigate to &lt;code&gt;/health&lt;/code&gt; to ensure, that the app is running.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's next?
&lt;/h3&gt;

&lt;p&gt;You now have an application running on Qovery. This can be scaled and configured to fit your business needs. As mentioned, we used the community plan, so this should be upgraded when moving to production.&lt;/p&gt;

&lt;p&gt;Furthermore, you can deploy Medusa Admin for your application, such that you can start managing your store from an interface.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.medusa-commerce.com/how-to/deploying-admin-on-netlify"&gt;Deploy Admin on Netlify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Deploy Admin on Gatsby Cloud (Coming soon)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Explore our &lt;a href="https://github.com/medusajs/medusa"&gt;Github&lt;/a&gt; or join our &lt;a href="https://discord.gg/MvfArDW6f4"&gt;community&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>javascript</category>
      <category>cloud</category>
      <category>jamstack</category>
    </item>
    <item>
      <title>Anvil's new Beta Editor is here!</title>
      <author>Eli Holderness</author>
      <pubDate>Wed, 06 Oct 2021 14:02:25 +0000</pubDate>
      <link>https://dev.to/anvil/anvil-s-new-beta-editor-is-here-3gi1</link>
      <guid>https://dev.to/anvil/anvil-s-new-beta-editor-is-here-3gi1</guid>
      <description>&lt;p&gt;We've rebuilt the Anvil Editor with new version control and dev / staging / prod deployments, as well as a clean new look, tabbed editing and Dark Mode.&lt;/p&gt;

&lt;p&gt;Anvil's web app builder is now easier and more powerful than ever. Try it out today!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#introducing-the-new-anvil-editor"&gt;
  &lt;/a&gt;
  Introducing the New Anvil Editor
&lt;/h1&gt;

&lt;p&gt;The Anvil Editor allows you to build web applications quickly, easily and &lt;a href="https://anvil.works/articles/python-gui-builder-web"&gt;entirely in Python&lt;/a&gt;. Today, we are excited to announce a beta release of a brand new, easier and more powerful Editor.&lt;/p&gt;

&lt;p&gt;The new Beta Editor doesn't just bring a slick new look, tabbed editing, and Dark Mode. It's also a major upgrade for how you collaborate with your colleagues, manage deployments of your apps, and much more.&lt;/p&gt;

&lt;p&gt;This is a beta release, so there's lots more to come. And if you're a stickler for the old ways, don't worry: the Classic Anvil Editor is still available. Your old apps with work with the Beta Editor and vice versa. We think you'll love the new update, so start building today!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://anvil.works/new-build"&gt;Start building with the Beta Editor!&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#so-whats-new"&gt;
  &lt;/a&gt;
  So what's new?
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#version-control-and-collaboration"&gt;
  &lt;/a&gt;
  Version control and collaboration
&lt;/h2&gt;

&lt;p&gt;At the bottom of the Editor is a version control tab that lets you create branches, commit changes, merge branches and resolve conflicts, all without leaving Anvil. You can now easily invite colleagues to edit your app, and the new version control tools mean you won't get in each other's way. Let the collaboration commence!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tpUED_qG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://anvil.works/docs/version-control-new-ide/img/_index/merge-result.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tpUED_qG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://anvil.works/docs/version-control-new-ide/img/_index/merge-result.png" alt="The version control panel in the new Anvil editor showing two branches and multiple commits"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://anvil.works/beta-docs/version-control-new-ide"&gt;Docs: Version Control and Collaboration&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b3REbv2Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://anvil.works/blog/img/announcing-new-editor/owen-campbell.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b3REbv2Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://anvil.works/blog/img/announcing-new-editor/owen-campbell.jpg" alt="Owen Campbell, Director at Empiria"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;"As a consultant, collaborating with clients is a crucial part of my job. The collaboration features in the new Anvil Editor mean I can work seamlessly with my clients."&lt;br&gt;
&lt;em&gt;- Owen Campbell, Director at Empiria&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#manage-your-deployments"&gt;
  &lt;/a&gt;
  Manage your deployments
&lt;/h2&gt;

&lt;p&gt;Manage separate URLs for development, staging and production deployments, all in one place:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QH_kwamD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://anvil.works/blog/img/announcing-new-editor/deploy-staging-prod-sm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QH_kwamD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://anvil.works/blog/img/announcing-new-editor/deploy-staging-prod-sm.png" alt="Deployment configuration showing staging and production environments"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ebAKVfOD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://anvil.works/blog/img/announcing-new-editor/staging-and-prod.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ebAKVfOD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://anvil.works/blog/img/announcing-new-editor/staging-and-prod.png" alt="The version control panel in the new Anvil editor showing staging and production environments"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://anvil.works/beta-docs/deployment-new-ide/environments"&gt;Docs: Deployment Environments&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CnMoAOox--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://anvil.works/blog/img/community-showcase/kevin.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CnMoAOox--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://anvil.works/blog/img/community-showcase/kevin.jpg" alt="Kevin Dalias, Founder at Eave Data"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;"I get more done in less time, and the environments are a total gamechanger for deployment."&lt;br&gt;
&lt;em&gt;- Kevin Dalias, Founder at Eave Data&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tabbed-editing"&gt;
  &lt;/a&gt;
  Tabbed editing
&lt;/h2&gt;

&lt;p&gt;You can now open multiple forms and modules in separate tabs, and switch between them easily. Switch from writing client code to writing server code to editing your data tables to editing your assets and back again:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZOhoxXlE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://anvil.works/blog/img/announcing-new-editor/new-ide-tabs.png" alt="Multiple tabs open in the new Anvil editor"&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#split-view"&gt;
  &lt;/a&gt;
  Split view
&lt;/h2&gt;

&lt;p&gt;With the Beta Editor, you can view your client code and your UI design side-by-side. You can now write Python code and tweak your UI without the need to switch back and forth. At the top of the Editor, there is a toggle to switch between code, design and split view.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ytkTuom0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://anvil.works/blog/img/split-view-new-ide.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ytkTuom0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://anvil.works/blog/img/split-view-new-ide.png" alt="Split view in the new Anvil editor showing the design view on the left and code view on the right"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#multiple-databases"&gt;
  &lt;/a&gt;
  Multiple databases
&lt;/h2&gt;

&lt;p&gt;Each Anvil app can now have multiple databases. This is handy if you want different deployment environments to use different databases – for example, so you can test your app without affecting production data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vQMVmRfZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://anvil.works/docs/data-tables/img/multiple-databases/new-database.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vQMVmRfZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://anvil.works/docs/data-tables/img/multiple-databases/new-database.png" alt="A screenshot of the new Anvil Editor showing two databases, one called 'Default database' and the other called 'Dev database'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you move your app into production, Anvil will help you migrate your database, for example if you've added columns or tables.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://anvil.works/beta-docs/data-tables/multiple-databases"&gt;Docs: Using Multiple Database&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#dark-mode"&gt;
  &lt;/a&gt;
  Dark Mode
&lt;/h2&gt;

&lt;p&gt;Do you like things... a little darker? Switch the Editor into the new Dark theme:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HrJOIa4W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://anvil.works/blog/img/announcing-new-editor/dark-mode.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HrJOIa4W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://anvil.works/blog/img/announcing-new-editor/dark-mode.png" alt="A screenshot of the new Anvil Editor in Dark Mode"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#and-more"&gt;
  &lt;/a&gt;
  And more...
&lt;/h2&gt;

&lt;p&gt;There is so much more that we can't fit into a blog post. &lt;a href="https://anvil.works/new-build"&gt;Try out the Beta Editor for yourself&lt;/a&gt; and be sure to read our &lt;a href="https://anvil.works/beta-docs/editor/new-editor-beta"&gt;updated documentation&lt;/a&gt;. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's Next?
&lt;/h2&gt;

&lt;p&gt;The new Editor is still in beta, so we have a few more updates up our sleeves. We're looking forward to hearing what you think! As always, you can ask questions and give us feedback on the &lt;a href="https://anvil.works/forum"&gt;Anvil forum&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can still use the current ("Classic") Editor, and switch between editors as much as you like, even editing the same app. (See &lt;a href="https://anvil.works/beta-docs/editor/new-editor-beta"&gt;the docs&lt;/a&gt; for the details.)&lt;/p&gt;

&lt;p&gt;So why not give it a try?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://anvil.works/new-build"&gt;Start building for free with the Anvil Beta Editor!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>python</category>
      <category>saas</category>
    </item>
    <item>
      <title>More things you might want to hear from an experienced developer</title>
      <author>Annika_H</author>
      <pubDate>Wed, 06 Oct 2021 13:46:53 +0000</pubDate>
      <link>https://dev.to/s2engineers/more-things-you-might-want-to-hear-from-an-experienced-developer-34im</link>
      <guid>https://dev.to/s2engineers/more-things-you-might-want-to-hear-from-an-experienced-developer-34im</guid>
      <description>&lt;p&gt;&lt;em&gt;“What being a developer really means” - that’s the name of a new internal series initiated by my colleague Feli. When I spoke to her after the first session, she told me that she was so surprised to see how many people joined. I think she hit a nerve.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This assumption was confirmed in the second session. This time she asked our colleague Lasse (Senior Product Engineer) questions and it was interesting and reassuring to hear that everybody struggles from time to time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#its-okay-not-to-know-everything"&gt;
  &lt;/a&gt;
  It’s okay not to know everything
&lt;/h2&gt;

&lt;p&gt;To kick off the session, Lasse answered Feli’s question about what he’d like to share with Junior developers with “It’s ok to not know everything”. It’s not bad at all to &lt;strong&gt;ask questions&lt;/strong&gt; and nobody will think any less of you. Basically everybody has questions. Maybe they already know the answer to yours but they are still learning and asking questions. When Lasse first did pair programming, he struggled with &lt;strong&gt;imposter syndrome&lt;/strong&gt; because he was he was afraid of being judged if he made a mistake. Nowadays this is how he prefers to work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-never-ending-need-to-google"&gt;
  &lt;/a&gt;
  The never ending need to Google
&lt;/h2&gt;

&lt;p&gt;Does anybody actually claim to never use Google (or any other search engine) at all? I think they wouldn’t tell the truth. It’s 2021 and Google saves our lives on a regular basis. Of course, Lasse makes use of Google and Stack Overflow as well. We already learned in the previous session with Raffaele that &lt;strong&gt;googling or researching is a skill of its own&lt;/strong&gt;. It’s not just about looking random things up, it takes more to find solutions and potential inspirations. It’s super important to know which questions to ask and &lt;strong&gt;how to break down a problem.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#communication-is-key"&gt;
  &lt;/a&gt;
  Communication is key
&lt;/h2&gt;

&lt;p&gt;It’s okay and completely natural to get frustrated from time to time. Lasse tries not to get angry with code, though. Still, &lt;strong&gt;something that really annoys him is when someone doesn’t communicate properly&lt;/strong&gt; and consequently disrespects his and his colleague's time. Writing code without documentation, for instance or unclear commit messages put Lasse’s patience to the test. If this happens, he tries to talk to that person and sets out to find the &lt;strong&gt;source of the problem&lt;/strong&gt;. Maybe the person doesn’t know how to do it the right way or always did it like this in a previous job. Even if it’s hard, &lt;strong&gt;being patient and talking it out helps in most cases.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks Feli and Lasse for this session and the insights and tipps. They certainly help many!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>watercooler</category>
      <category>motivation</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Awesome Penetration Testing</title>
      <author>AmnaAbd</author>
      <pubDate>Wed, 06 Oct 2021 13:37:53 +0000</pubDate>
      <link>https://dev.to/amnaabd/awesome-penetration-testing-1lcb</link>
      <guid>https://dev.to/amnaabd/awesome-penetration-testing-1lcb</guid>
      <description>&lt;h1&gt;
  &lt;a href="#awesome-penetration-testing"&gt;
  &lt;/a&gt;
  Awesome Penetration Testing &lt;a href="https://awesome.re"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VRsQTlDu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://awesome.re/badge-flat2.svg" alt="Awesome"&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;A collection of awesome penetration testing and offensive cybersecurity resources.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Penetration_test"&gt;Penetration testing&lt;/a&gt; is the practice of launching authorized, simulated attacks against computer systems and their physical infrastructure to expose potential security weaknesses and vulnerabilities.&lt;/p&gt;

&lt;p&gt;Your contributions and suggestions are heartily♥ welcome. (✿◕‿◕). Please check the &lt;a href="//CONTRIBUTING.md"&gt;Contributing Guidelines&lt;/a&gt; for more details. This work is licensed under a &lt;a href="https://creativecommons.org/licenses/by/4.0/"&gt;Creative Commons Attribution 4.0 International License&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.netsparker.com/?utm_source=github.com&amp;amp;utm_content=awesome+penetration+testing&amp;amp;utm_medium=referral&amp;amp;utm_campaign=generic+advert"&gt;This project is supported by Netsparker Web Application Security Scanner&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contents"&gt;
  &lt;/a&gt;
  Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#android-utilities"&gt;Android Utilities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#anonymity-tools"&gt;Anonymity Tools&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#tor-tools"&gt;Tor Tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#anti-virus-evasion-tools"&gt;Anti-virus Evasion Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#books"&gt;Books&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#malware-analysis-books"&gt;Malware Analysis Books&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#ctf-tools"&gt;CTF Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#collaboration-tools"&gt;Collaboration Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#conferences-and-events"&gt;Conferences and Events&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#asia"&gt;Asia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#europe"&gt;Europe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#north-america"&gt;North America&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#south-america"&gt;South America&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#zealandia"&gt;Zealandia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#exfiltration-tools"&gt;Exfiltration Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exploit-development-tools"&gt;Exploit Development Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#file-format-analysis-tools"&gt;File Format Analysis Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gnulinux-utilities"&gt;GNU/Linux Utilities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hash-cracking-tools"&gt;Hash Cracking Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hex-editors"&gt;Hex Editors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#industrial-control-and-scada-systems"&gt;Industrial Control and SCADA Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#intentionally-vulnerable-systems"&gt;Intentionally Vulnerable Systems&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#intentionally-vulnerable-systems-as-docker-containers"&gt;Intentionally Vulnerable Systems as Docker Containers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#lock-picking"&gt;Lock Picking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#macos-utilities"&gt;macOS Utilities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#multi-paradigm-frameworks"&gt;Multi-paradigm Frameworks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#network-tools"&gt;Network Tools&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#ddos-tools"&gt;DDoS Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#network-reconnaissance-tools"&gt;Network Reconnaissance Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#protocol-analyzers-and-sniffers"&gt;Protocol Analyzers and Sniffers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#network-traffic-replay-and-editing-tools"&gt;Network Traffic Replay and Editing Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#proxies-and-machine-in-the-middle-mitm-tools"&gt;Proxies and Machine-in-the-Middle (MITM) Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#transport-layer-security-tools"&gt;Transport Layer Security Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#wireless-network-tools"&gt;Wireless Network Tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#network-vulnerability-scanners"&gt;Network Vulnerability Scanners&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#web-vulnerability-scanners"&gt;Web Vulnerability Scanners&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#open-sources-intelligence-osint"&gt;Open Sources Intelligence (OSINT)&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#data-broker-and-search-engine-services"&gt;Data broker and search engine services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dorking-tools"&gt;Dorking tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#email-search-and-analysis-tools"&gt;Email search and analysis tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#metadata-harvesting-and-analysis"&gt;Metadata harvesting and analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#network-device-discovery-tools"&gt;Network device discovery tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#osint-online-resources"&gt;OSINT Online Resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#source-code-repository-searching-tools"&gt;Source code repository searching tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#web-application-and-resource-analysis-tools"&gt;Web application and resource analysis tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#online-resources"&gt;Online Resources&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#online-code-samples-and-examples"&gt;Online Code Samples and Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#online-exploit-development-resources"&gt;Online Exploit Development Resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#online-lock-picking-resources"&gt;Online Lock Picking Resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#online-operating-systems-resources"&gt;Online Operating Systems Resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#online-penetration-testing-resources"&gt;Online Penetration Testing Resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-lists-online"&gt;Other Lists Online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#penetration-testing-report-templates"&gt;Penetration Testing Report Templates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#operating-system-distributions"&gt;Operating System Distributions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#periodicals"&gt;Periodicals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#physical-access-tools"&gt;Physical Access Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#privilege-escalation-tools"&gt;Privilege Escalation Tools&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#password-spraying-tools"&gt;Password Spraying Tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#reverse-engineering"&gt;Reverse Engineering&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#reverse-engineering-books"&gt;Reverse Engineering Books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reverse-engineering-tools"&gt;Reverse Engineering Tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#security-education-courses"&gt;Security Education Courses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exploit-development-online-resources"&gt;Shellcoding Guides and Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#side-channel-tools"&gt;Side-channel Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#social-engineering"&gt;Social Engineering&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#social-engineering-books"&gt;Social Engineering Books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#social-engineering-online-resources"&gt;Social Engineering Online Resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#social-engineering-tools"&gt;Social Engineering Tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#static-analyzers"&gt;Static Analyzers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#steganography-tools"&gt;Steganography Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vulnerability-databases"&gt;Vulnerability Databases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#web-exploitation"&gt;Web Exploitation&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#intercepting-web-proxies"&gt;Intercepting Web proxies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#web-file-inclusion-tools"&gt;Web file inclusion tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#web-injection-tools"&gt;Web injection tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#web-path-discovery-and-bruteforcing-tools"&gt;Web path discovery and bruteforcing tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#web-shells-and-c2-frameworks"&gt;Web shells and C2 frameworks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#web-accessible-source-code-ripping-tools"&gt;Web-accessible source code ripping tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#web-exploitation-books"&gt;Web Exploitation Books&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#windows-utilities"&gt;Windows Utilities&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#android-utilities"&gt;
  &lt;/a&gt;
  Android Utilities
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.csploit.org/"&gt;cSploit&lt;/a&gt; - Advanced IT security professional toolkit on Android featuring an integrated Metasploit daemon and MITM capabilities.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.fing.com/products/fing-app/"&gt;Fing&lt;/a&gt; - Network scanning and host enumeration app that performs NetBIOS, UPnP, Bonjour, SNMP, and various other advanced device fingerprinting techniques.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#anonymity-tools"&gt;
  &lt;/a&gt;
  Anonymity Tools
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://geti2p.net/"&gt;I2P&lt;/a&gt; - The Invisible Internet Project.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://0xacab.org/jvoisin/mat2"&gt;Metadata Anonymization Toolkit (MAT)&lt;/a&gt; - Metadata removal tool, supporting a wide range of commonly used file formats, written in Python3.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://webkay.robinlinus.com/"&gt;What Every Browser Knows About You&lt;/a&gt; - Comprehensive detection page to test your own Web browser's configuration for privacy and identity leaks.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#tor-tools"&gt;
  &lt;/a&gt;
  Tor Tools
&lt;/h3&gt;

&lt;p&gt;See also &lt;a href="https://github.com/ajvb/awesome-tor"&gt;awesome-tor&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/GouveaHeitor/nipe"&gt;Nipe&lt;/a&gt; - Script to redirect all traffic from the machine to the Tor network.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://onionscan.org/"&gt;OnionScan&lt;/a&gt; - Tool for investigating the Dark Web by finding operational security issues introduced by Tor hidden service operators.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://tails.boum.org/"&gt;Tails&lt;/a&gt; - Live operating system aiming to preserve your privacy and anonymity.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.torproject.org/"&gt;Tor&lt;/a&gt; - Free software and onion routed overlay network that helps you defend against traffic analysis.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/skizap/dos-over-tor"&gt;dos-over-tor&lt;/a&gt; - Proof of concept denial of service over Tor stress test tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/brainfuckSec/kalitorify"&gt;kalitorify&lt;/a&gt; - Transparent proxy through Tor for Kali Linux OS.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#antivirus-evasion-tools"&gt;
  &lt;/a&gt;
  Anti-virus Evasion Tools
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/govolution/avet"&gt;AntiVirus Evasion Tool (AVET)&lt;/a&gt; - Post-process exploits containing executable files targeted for Windows machines to avoid being recognized by antivirus software.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/paranoidninja/CarbonCopy"&gt;CarbonCopy&lt;/a&gt; - Tool that creates a spoofed certificate of any online website and signs an Executable for AV evasion.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://nullsecurity.net/tools/binary.html"&gt;Hyperion&lt;/a&gt; - Runtime encryptor for 32-bit portable executables ("PE &lt;code&gt;.exe&lt;/code&gt;s").&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.shellterproject.com/"&gt;Shellter&lt;/a&gt; - Dynamic shellcode injection tool, and the first truly dynamic PE infector ever created.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Mr-Un1k0d3r/UniByAv"&gt;UniByAv&lt;/a&gt; - Simple obfuscator that takes raw shellcode and generates Anti-Virus friendly executables by using a brute-forcable, 32-bit XOR key.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.veil-framework.com/"&gt;Veil&lt;/a&gt; - Generate metasploit payloads that bypass common anti-virus solutions.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/v-p-b/peCloakCapstone"&gt;peCloakCapstone&lt;/a&gt; - Multi-platform fork of the peCloak.py automated malware antivirus evasion tool.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#books"&gt;
  &lt;/a&gt;
  Books
&lt;/h2&gt;

&lt;p&gt;See also &lt;a href="https://www.defcon.org/html/links/book-list.html"&gt;DEF CON Suggested Reading&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/Advanced-Penetration-Testing-Hacking-Networks/dp/1119367689/"&gt;Advanced Penetration Testing by Wil Allsopp, 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.packtpub.com/networking-and-servers/advanced-penetration-testing-highly-secured-environments-ultimate-security-gu"&gt;Advanced Penetration Testing for Highly-Secured Environments by Lee Allen, 2012&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.amazon.com/Advanced-Persistent-Threat-Hacking-Organization/dp/0071828362"&gt;Advanced Persistent Threat Hacking: The Art and Science of Hacking Any Organization by Tyler Wrightson, 2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.wiley.com/WileyCDA/WileyTitle/productCd-111860864X.html"&gt;Android Hacker's Handbook by Joshua J. Drake et al., 2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.de/Blue-Team-Field-Manual-BTFM/dp/154101636X"&gt;BTFM: Blue Team Field Manual by Alan J White &amp;amp; Ben Clark, 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.amazon.com/Black-Hat-Python-Programming-Pentesters/dp/1593275900"&gt;Black Hat Python: Python Programming for Hackers and Pentesters by Justin Seitz, 2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nostarch.com/bughunter"&gt;Bug Hunter's Diary by Tobias Klein, 2011&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nostarch.com/carhacking"&gt;Car Hacker's Handbook by Craig Smith, 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.fuzzing.org/"&gt;Fuzzing: Brute Force Vulnerability Discovery by Michael Sutton et al., 2007&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nostarch.com/metasploit"&gt;Metasploit: The Penetration Tester's Guide by David Kennedy et al., 2011&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nostarch.com/pentesting"&gt;Penetration Testing: A Hands-On Introduction to Hacking by Georgia Weidman, 2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.amazon.com/Penetration-Testing-Procedures-Methodologies-EC-Council/dp/1435483677"&gt;Penetration Testing: Procedures &amp;amp; Methodologies by EC-Council, 2010&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.elsevier.com/books/professional-penetration-testing/wilhelm/978-1-59749-993-4"&gt;Professional Penetration Testing by Thomas Wilhelm, 2013&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.amazon.com/Rtfm-Red-Team-Field-Manual/dp/1494295504/"&gt;RTFM: Red Team Field Manual by Ben Clark, 2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nostarch.com/hacking2.htm"&gt;The Art of Exploitation by Jon Erickson, 2008&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.elsevier.com/books/the-basics-of-hacking-and-penetration-testing/engebretson/978-1-59749-655-1"&gt;The Basics of Hacking and Penetration Testing by Patrick Engebretson, 2013&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.wiley.com/WileyCDA/WileyTitle/productCd-0764578014.html"&gt;The Database Hacker's Handbook, David Litchfield et al., 2005&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.amazon.com/The-Hacker-Playbook-Practical-Penetration/dp/1494932636/"&gt;The Hacker Playbook by Peter Kim, 2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.wiley.com/WileyCDA/WileyTitle/productCd-0470395362.html"&gt;The Mac Hacker's Handbook by Charlie Miller &amp;amp; Dino Dai Zovi, 2009&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.wiley.com/WileyCDA/WileyTitle/productCd-1118958500.html"&gt;The Mobile Application Hacker's Handbook by Dominic Chell et al., 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.amazon.com/Unauthorised-Access-Physical-Penetration-Security-ebook/dp/B005DIAPKE"&gt;Unauthorised Access: Physical Penetration Testing For IT Security Teams by Wil Allsopp, 2010&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.elsevier.com/books/violent-python/unknown/978-1-59749-957-6"&gt;Violent Python by TJ O'Connor, 2012&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.wiley.com/WileyCDA/WileyTitle/productCd-1118204123.html"&gt;iOS Hacker's Handbook by Charlie Miller et al., 2012&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#malware-analysis-books"&gt;
  &lt;/a&gt;
  Malware Analysis Books
&lt;/h3&gt;

&lt;p&gt;See &lt;a href="https://github.com/rshipp/awesome-malware-analysis#books"&gt;awesome-malware-analysis § Books&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ctf-tools"&gt;
  &lt;/a&gt;
  CTF Tools
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://trailofbits.github.io/ctf/"&gt;CTF Field Guide&lt;/a&gt; - Everything you need to win your next CTF competition.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ciphey/ciphey"&gt;Ciphey&lt;/a&gt; - Automated decryption tool using artificial intelligence and natural language processing.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Ganapati/RsaCtfTool"&gt;RsaCtfTool&lt;/a&gt; - Decrypt data enciphered using weak RSA keys, and recover private keys from public keys using a variety of automated attacks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/zardus/ctf-tools"&gt;ctf-tools&lt;/a&gt; - Collection of setup scripts to install various security research tools easily and quickly deployable to new machines.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/0x00-0x00/shellpop"&gt;shellpop&lt;/a&gt; - Easily generate sophisticated reverse or bind shell commands to help you save time during penetration tests.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#collaboration-tools"&gt;
  &lt;/a&gt;
  Collaboration Tools
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://dradisframework.com"&gt;Dradis&lt;/a&gt; - Open-source reporting and collaboration tool for IT security professionals.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/lair-framework/lair/wiki"&gt;Lair&lt;/a&gt; - Reactive attack collaboration framework and web application built with meteor.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://gitlab.com/invuls/pentest-projects/pcf"&gt;Pentest Collaboration Framework (PCF)&lt;/a&gt; - Open source, cross-platform, and portable toolkit for automating routine pentest processes with a team.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://reconmap.org/"&gt;Reconmap&lt;/a&gt; - Open-source collaboration platform for InfoSec professionals that streamlines the pentest process.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/outflanknl/RedELK"&gt;RedELK&lt;/a&gt; - Track and alarm about Blue Team activities while providing better usability in long term offensive operations.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conferences-and-events"&gt;
  &lt;/a&gt;
  Conferences and Events
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://www.securitybsides.com/"&gt;BSides&lt;/a&gt; - Framework for organising and holding security conferences.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://ctftime.org/"&gt;CTFTime.org&lt;/a&gt; - Directory of upcoming and archive of past Capture The Flag (CTF) competitions with links to challenge writeups.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#asia"&gt;
  &lt;/a&gt;
  Asia
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://conference.hitb.org/"&gt;HITB&lt;/a&gt; - Deep-knowledge security conference held in Malaysia and The Netherlands.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hitcon.org/"&gt;HITCON&lt;/a&gt; - Hacks In Taiwan Conference held in Taiwan.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://nullcon.net/website/"&gt;Nullcon&lt;/a&gt; - Annual conference in Delhi and Goa, India.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://secuinside.com"&gt;SECUINSIDE&lt;/a&gt; - Security Conference in Seoul.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#europe"&gt;
  &lt;/a&gt;
  Europe
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://44con.com/"&gt;44Con&lt;/a&gt; - Annual Security Conference held in London.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.balccon.org"&gt;BalCCon&lt;/a&gt; - Balkan Computer Congress, annually held in Novi Sad, Serbia.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://brucon.org"&gt;BruCON&lt;/a&gt; - Annual security conference in Belgium.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://events.ccc.de/congress/"&gt;CCC&lt;/a&gt; - Annual meeting of the international hacker scene in Germany.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepsec.net/"&gt;DeepSec&lt;/a&gt; - Security Conference in Vienna, Austria.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://def.camp/"&gt;DefCamp&lt;/a&gt; - Largest Security Conference in Eastern Europe, held annually in Bucharest, Romania.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://fsec.foi.hr"&gt;FSec&lt;/a&gt; - FSec - Croatian Information Security Gathering in Varaždin, Croatia.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hack.lu/"&gt;Hack.lu&lt;/a&gt; - Annual conference held in Luxembourg.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.infosecurityeurope.com/"&gt;Infosecurity Europe&lt;/a&gt; - Europe's number one information security event, held in London, UK.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.steelcon.info/"&gt;SteelCon&lt;/a&gt; - Security conference in Sheffield UK.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.swisscyberstorm.com/"&gt;Swiss Cyber Storm&lt;/a&gt; - Annual security conference in Lucerne, Switzerland.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.troopers.de"&gt;Troopers&lt;/a&gt; - Annual international IT Security event with workshops held in Heidelberg, Germany.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://honeycon.eu/"&gt;HoneyCON&lt;/a&gt; - Annual Security Conference in Guadalajara, Spain. Organized by the HoneySEC association.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#north-america"&gt;
  &lt;/a&gt;
  North America
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://appsecusa.org/"&gt;AppSecUSA&lt;/a&gt; - Annual conference organized by OWASP.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.blackhat.com/"&gt;Black Hat&lt;/a&gt; - Annual security conference in Las Vegas.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://carolinacon.org/"&gt;CarolinaCon&lt;/a&gt; - Infosec conference, held annually in North Carolina.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.defcon.org/"&gt;DEF CON&lt;/a&gt; - Annual hacker convention in Las Vegas.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.derbycon.com/"&gt;DerbyCon&lt;/a&gt; - Annual hacker conference based in Louisville.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hnd.techlearningcollective.com/"&gt;Hackers Next Door&lt;/a&gt; - Cybersecurity and social technology conference held in New York City.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hope.net/"&gt;Hackers On Planet Earth (HOPE)&lt;/a&gt; - Semi-annual conference held in New York City.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hackfest.ca"&gt;Hackfest&lt;/a&gt; - Largest hacking conference in Canada.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.layerone.org/"&gt;LayerOne&lt;/a&gt; - Annual US security conference held every spring in Los Angeles.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.nationalcybersummit.com/"&gt;National Cyber Summit&lt;/a&gt; - Annual US security conference and Capture the Flag event, held in Huntsville, Alabama, USA.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://phreaknic.info/"&gt;PhreakNIC&lt;/a&gt; - Technology conference held annually in middle Tennessee.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.rsaconference.com/"&gt;RSA Conference USA&lt;/a&gt; - Annual security conference in San Francisco, California, USA.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://shmoocon.org/"&gt;ShmooCon&lt;/a&gt; - Annual US East coast hacker convention.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.skydogcon.com/"&gt;SkyDogCon&lt;/a&gt; - Technology conference in Nashville.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.summercon.org/"&gt;SummerCon&lt;/a&gt; - One of the oldest hacker conventions in America, held during Summer.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://thotcon.org/"&gt;ThotCon&lt;/a&gt; - Annual US hacker conference held in Chicago.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.virusbulletin.com/conference/index"&gt;Virus Bulletin Conference&lt;/a&gt; - Annual conference going to be held in Denver, USA for 2016.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#south-america"&gt;
  &lt;/a&gt;
  South America
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://www.ekoparty.org"&gt;Ekoparty&lt;/a&gt; - Largest Security Conference in Latin America, held annually in Buenos Aires, Argentina.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.h2hc.com.br/"&gt;Hackers to Hackers Conference (H2HC)&lt;/a&gt; - Oldest security research (hacking) conference in Latin America and one of the oldest ones still active in the world.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#zealandia"&gt;
  &lt;/a&gt;
  Zealandia
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://chcon.nz"&gt;CHCon&lt;/a&gt; - Christchurch Hacker Con, Only South Island of New Zealand hacker con.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#exfiltration-tools"&gt;
  &lt;/a&gt;
  Exfiltration Tools
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/sensepost/DET"&gt;DET&lt;/a&gt; - Proof of concept to perform data exfiltration using either single or multiple channel(s) at the same time.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://code.kryo.se/iodine/"&gt;Iodine&lt;/a&gt; - Tunnel IPv4 data through a DNS server; useful for exfiltration from networks where Internet access is firewalled, but DNS queries are allowed.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trustedsec/trevorc2"&gt;TrevorC2&lt;/a&gt; - Client/server tool for masking command and control and data exfiltration through a normally browsable website, not typical HTTP POST requests.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/iagox86/dnscat2"&gt;dnscat2&lt;/a&gt; - Tool designed to create an encrypted command and control channel over the DNS protocol, which is an effective tunnel out of almost every network.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/samyk/pwnat"&gt;pwnat&lt;/a&gt; - Punches holes in firewalls and NATs.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://tgcd.sourceforge.net/"&gt;tgcd&lt;/a&gt; - Simple Unix network utility to extend the accessibility of TCP/IP based network services beyond firewalls.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ariary/QueenSono"&gt;QueenSono&lt;/a&gt; - Client/Server Binaries for data exfiltration with ICMP. Useful in a network where ICMP protocol is less monitored than others (which is a common case).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#exploit-development-tools"&gt;
  &lt;/a&gt;
  Exploit Development Tools
&lt;/h2&gt;

&lt;p&gt;See also &lt;em&gt;&lt;a href="#reverse-engineering-tools"&gt;Reverse Engineering Tools&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/trustedsec/unicorn"&gt;Magic Unicorn&lt;/a&gt; - Shellcode generator for numerous attack vectors, including Microsoft Office macros, PowerShell, HTML applications (HTA), or &lt;code&gt;certutil&lt;/code&gt; (using fake certificates).&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Gallopsled/pwntools"&gt;Pwntools&lt;/a&gt; - Rapid exploit development framework built for use in CTFs.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/longld/peda"&gt;peda&lt;/a&gt; - Python Exploit Development Assistance for GDB.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rastating/wordpress-exploit-framework"&gt;Wordpress Exploit Framework&lt;/a&gt; - Ruby framework for developing and using modules which aid in the penetration testing of WordPress powered websites and systems.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#file-format-analysis-tools"&gt;
  &lt;/a&gt;
  File Format Analysis Tools
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.sno.phy.queensu.ca/~phil/exiftool/"&gt;ExifTool&lt;/a&gt; - Platform-independent Perl library plus a command-line application for reading, writing and editing meta information in a wide variety of files.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hachoir.readthedocs.io/"&gt;Hachoir&lt;/a&gt; - Python library to view and edit a binary stream as tree of fields and tools for metadata extraction.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://kaitai.io/"&gt;Kaitai Struct&lt;/a&gt; - File formats and network protocols dissection language and web IDE, generating parsers in C++, C#, Java, JavaScript, Perl, PHP, Python, Ruby.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://eternal-todo.com/tools/peepdf-pdf-analysis-tool"&gt;peepdf&lt;/a&gt; - Python tool to explore PDF files in order to find out if the file can be harmful or not.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://codisec.com/veles/"&gt;Veles&lt;/a&gt; - Binary data visualization and analysis tool.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#gnulinux-utilities"&gt;
  &lt;/a&gt;
  GNU/Linux Utilities
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/n00py/Hwacha"&gt;Hwacha&lt;/a&gt; - Post-exploitation tool to quickly execute payloads via SSH on one or more Linux systems simultaneously.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/PenturaLabs/Linux_Exploit_Suggester"&gt;Linux Exploit Suggester&lt;/a&gt; - Heuristic reporting on potentially viable exploits for a given GNU/Linux system.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cisofy.com/lynis/"&gt;Lynis&lt;/a&gt; - Auditing tool for UNIX-based systems.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.trapkit.de/tools/checksec.html"&gt;checksec.sh&lt;/a&gt; - Shell script designed to test what standard Linux OS and PaX security features are being used.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#hash-cracking-tools"&gt;
  &lt;/a&gt;
  Hash Cracking Tools
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/glv2/bruteforce-wallet"&gt;BruteForce Wallet&lt;/a&gt; - Find the password of an encrypted wallet file (i.e. &lt;code&gt;wallet.dat&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://digi.ninja/projects/cewl.php"&gt;CeWL&lt;/a&gt; - Generates custom wordlists by spidering a target's website and collecting unique words.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nil0x42/duplicut"&gt;duplicut&lt;/a&gt; - Quickly remove duplicates, without changing the order, and without getting OOM on huge wordlists.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/fireeye/gocrack"&gt;GoCrack&lt;/a&gt; - Management Web frontend for distributed password cracking sessions using hashcat (or other supported tools) written in Go.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://hashcat.net/hashcat/"&gt;Hashcat&lt;/a&gt; - The more fast hash cracker.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trustedsec/hate_crack"&gt;hate_crack&lt;/a&gt; - Tool for automating cracking methodologies through Hashcat.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/lmammino/jwt-cracker"&gt;JWT Cracker&lt;/a&gt; - Simple HS256 JSON Web Token (JWT) token brute force cracker.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.openwall.com/john/"&gt;John the Ripper&lt;/a&gt; - Fast password cracker.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://rarcrack.sourceforge.net"&gt;Rar Crack&lt;/a&gt; - RAR bruteforce cracker.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#hex-editors"&gt;
  &lt;/a&gt;
  Hex Editors
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/bwrsandman/Bless"&gt;Bless&lt;/a&gt; - High quality, full featured, cross-platform graphical hex editor written in Gtk#.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://frhed.sourceforge.net/"&gt;Frhed&lt;/a&gt; - Binary file editor for Windows.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://ridiculousfish.com/hexfiend/"&gt;Hex Fiend&lt;/a&gt; - Fast, open source, hex editor for macOS with support for viewing  binary diffs.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hexed.it"&gt;HexEdit.js&lt;/a&gt; - Browser-based hex editing.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hexinator.com/"&gt;Hexinator&lt;/a&gt; - World's finest (proprietary, commercial) Hex Editor.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pixel/hexedit"&gt;hexedit&lt;/a&gt; - Simple, fast, console-based hex editor.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.wxhexeditor.org/"&gt;wxHexEditor&lt;/a&gt; - Free GUI hex editor for GNU/Linux, macOS, and Windows.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#industrial-control-and-scada-systems"&gt;
  &lt;/a&gt;
  Industrial Control and SCADA Systems
&lt;/h2&gt;

&lt;p&gt;See also &lt;a href="https://github.com/hslatman/awesome-industrial-control-system-security"&gt;awesome-industrial-control-system-security&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/dark-lbp/isf"&gt;Industrial Exploitation Framework (ISF)&lt;/a&gt; - Metasploit-like exploit framework based on routersploit designed to target Industrial Control Systems (ICS), SCADA devices, PLC firmware, and more.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/klsecservices/s7scan"&gt;s7scan&lt;/a&gt; - Scanner for enumerating Siemens S7 PLCs on a TCP/IP or LLC network.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#intentionally-vulnerable-systems"&gt;
  &lt;/a&gt;
  Intentionally Vulnerable Systems
&lt;/h2&gt;

&lt;p&gt;See also &lt;a href="https://github.com/kaiiyer/awesome-vulnerable"&gt;awesome-vulnerable&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#intentionally-vulnerable-systems-as-docker-containers"&gt;
  &lt;/a&gt;
  Intentionally Vulnerable Systems as Docker Containers
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://hub.docker.com/r/citizenstig/dvwa/"&gt;Damn Vulnerable Web Application (DVWA)&lt;/a&gt; - &lt;code&gt;docker pull citizenstig/dvwa&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bkimminich/juice-shop#docker-container--"&gt;OWASP Juice Shop&lt;/a&gt; - &lt;code&gt;docker pull bkimminich/juice-shop&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hub.docker.com/r/citizenstig/nowasp/"&gt;OWASP Mutillidae II Web Pen-Test Practice Application&lt;/a&gt; - &lt;code&gt;docker pull citizenstig/nowasp&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/owasp/nodegoat#option-3---run-nodegoat-on-docker"&gt;OWASP NodeGoat&lt;/a&gt; - &lt;code&gt;docker-compose build &amp;amp;&amp;amp; docker-compose up&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hub.docker.com/r/ismisepaul/securityshepherd/"&gt;OWASP Security Shepherd&lt;/a&gt; - &lt;code&gt;docker pull ismisepaul/securityshepherd&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hub.docker.com/r/webgoat/webgoat-7.1/"&gt;OWASP WebGoat Project 7.1 docker image&lt;/a&gt; - &lt;code&gt;docker pull webgoat/webgoat-7.1&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hub.docker.com/r/webgoat/webgoat-8.0/"&gt;OWASP WebGoat Project 8.0 docker image&lt;/a&gt; - &lt;code&gt;docker pull webgoat/webgoat-8.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hub.docker.com/r/hmlio/vaas-cve-2014-0160/"&gt;Vulnerability as a service: Heartbleed&lt;/a&gt; - &lt;code&gt;docker pull hmlio/vaas-cve-2014-0160&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hub.docker.com/r/vulnerables/cve-2017-7494/"&gt;Vulnerability as a service: SambaCry&lt;/a&gt; - &lt;code&gt;docker pull vulnerables/cve-2017-7494&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hub.docker.com/r/hmlio/vaas-cve-2014-6271/"&gt;Vulnerability as a service: Shellshock&lt;/a&gt; - &lt;code&gt;docker pull hmlio/vaas-cve-2014-6271&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hub.docker.com/r/wpscanteam/vulnerablewordpress/"&gt;Vulnerable WordPress Installation&lt;/a&gt; - &lt;code&gt;docker pull wpscanteam/vulnerablewordpress&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#lock-picking"&gt;
  &lt;/a&gt;
  Lock Picking
&lt;/h2&gt;

&lt;p&gt;See &lt;a href="https://github.com/fabacab/awesome-lockpicking"&gt;awesome-lockpicking&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#macos-utilities"&gt;
  &lt;/a&gt;
  macOS Utilities
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/kdaoudieh/Bella"&gt;Bella&lt;/a&gt; - Pure Python post-exploitation data mining and remote administration tool for macOS.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Marten4n6/EvilOSX"&gt;EvilOSX&lt;/a&gt; - Modular RAT that uses numerous evasion and exfiltration techniques out-of-the-box.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#multiparadigm-frameworks"&gt;
  &lt;/a&gt;
  Multi-paradigm Frameworks
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://fastandeasyhacking.com/"&gt;Armitage&lt;/a&gt; - Java-based GUI front-end for the Metasploit Framework.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/NullArray/AutoSploit"&gt;AutoSploit&lt;/a&gt; - Automated mass exploiter, which collects target by employing the Shodan.io API and programmatically chooses Metasploit exploit modules based on the Shodan query.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/stevenaldinger/decker"&gt;Decker&lt;/a&gt; - Penetration testing orchestration and automation framework, which allows writing declarative, reusable configurations capable of ingesting variables and using outputs of tools it has run as inputs to others.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/infobyte/faraday"&gt;Faraday&lt;/a&gt; - Multiuser integrated pentesting environment for red teams performing cooperative penetration tests, security audits, and risk assessments.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.metasploit.com/"&gt;Metasploit&lt;/a&gt; - Software for offensive security teams to help verify vulnerabilities and manage security assessments.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/n1nj4sec/pupy"&gt;Pupy&lt;/a&gt; - Cross-platform (Windows, Linux, macOS, Android) remote administration and post-exploitation tool.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#network-tools"&gt;
  &lt;/a&gt;
  Network Tools
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/byt3bl33d3r/CrackMapExec"&gt;CrackMapExec&lt;/a&gt; - Swiss army knife for pentesting networks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/SpiderLabs/ikeforce"&gt;IKEForce&lt;/a&gt; - Command line IPSEC VPN brute forcing tool for Linux that allows group name/ID enumeration and XAUTH brute forcing capabilities.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://sniff.su/"&gt;Intercepter-NG&lt;/a&gt; - Multifunctional network toolkit.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/GoVanguard/legion"&gt;Legion&lt;/a&gt; - Graphical semi-automated discovery and reconnaissance framework based on Python 3  and forked from SPARTA.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://network-tools.com/"&gt;Network-Tools.com&lt;/a&gt; - Website offering an interface to numerous basic network utilities like &lt;code&gt;ping&lt;/code&gt;, &lt;code&gt;traceroute&lt;/code&gt;, &lt;code&gt;whois&lt;/code&gt;, and more.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://nmap.org/ncrack/"&gt;Ncrack&lt;/a&gt; - High-speed network authentication cracking tool built to help companies secure their networks by proactively testing all their hosts and networking devices for poor passwords.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://h.foofus.net/?page_id=218"&gt;Praeda&lt;/a&gt; - Automated multi-function printer data harvester for gathering usable data during security assessments.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/RUB-NDS/PRET"&gt;Printer Exploitation Toolkit (PRET)&lt;/a&gt; - Tool for printer security testing capable of IP and USB connectivity, fuzzing, and exploitation of PostScript, PJL, and PCL printer language features.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://sparta.secforce.com/"&gt;SPARTA&lt;/a&gt; - Graphical interface offering scriptable, configurable access to existing network infrastructure scanning and enumeration tools.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/SigPloiter/SigPloit"&gt;SigPloit&lt;/a&gt; - Signaling security testing framework dedicated to telecom security for researching vulnerabilites in the signaling protocols used in mobile (cellular phone) operators.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Sab0tag3d/SIET"&gt;Smart Install Exploitation Tool (SIET)&lt;/a&gt; - Scripts for identifying Cisco Smart Install-enabled switches on a network and then manipulating them.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/vanhauser-thc/thc-hydra"&gt;THC Hydra&lt;/a&gt; - Online password cracking tool with built-in support for many network protocols, including HTTP, SMB, FTP, telnet, ICQ, MySQL, LDAP, IMAP, VNC, and more.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/google/tsunami-security-scanner"&gt;Tsunami&lt;/a&gt; - General purpose network security scanner with an extensible plugin system for detecting high severity vulnerabilities with high confidence.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/hatRiot/zarp"&gt;Zarp&lt;/a&gt; - Network attack tool centered around the exploitation of local networks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/elceef/dnstwist"&gt;dnstwist&lt;/a&gt; - Domain name permutation engine for detecting typo squatting, phishing and corporate espionage.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.monkey.org/~dugsong/dsniff/"&gt;dsniff&lt;/a&gt; - Collection of tools for network auditing and pentesting.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/CoreSecurity/impacket"&gt;impacket&lt;/a&gt; - Collection of Python classes for working with network protocols.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/RedTeamOperations/PivotSuite"&gt;pivotsuite&lt;/a&gt; - Portable, platform independent and powerful network pivoting toolkit.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/reverse-shell/routersploit"&gt;routersploit&lt;/a&gt; - Open source exploitation framework similar to Metasploit but dedicated to embedded devices.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kpcyrd/rshijack"&gt;rshijack&lt;/a&gt; - TCP connection hijacker, Rust rewrite of &lt;code&gt;shijack&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#ddos-tools"&gt;
  &lt;/a&gt;
  DDoS Tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/rozgo/anevicon"&gt;Anevicon&lt;/a&gt; - Powerful UDP-based load generator, written in Rust.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://sourceforge.net/projects/high-orbit-ion-cannon/"&gt;HOIC&lt;/a&gt; - Updated version of Low Orbit Ion Cannon, has 'boosters' to get around common counter measures.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/NewEraCracker/LOIC"&gt;Low Orbit Ion Canon (LOIC)&lt;/a&gt; - Open source network stress tool written for Windows.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/649/Memcrashed-DDoS-Exploit"&gt;Memcrashed&lt;/a&gt; - DDoS attack tool for sending forged UDP packets to vulnerable Memcached servers obtained using Shodan API.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/gkbrk/slowloris"&gt;SlowLoris&lt;/a&gt; - DoS tool that uses low bandwidth on the attacking side.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://gitlab.com/fredericopissarra/t50/"&gt;T50&lt;/a&gt; - Faster network stress tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/epsylon/ufonet"&gt;UFONet&lt;/a&gt; - Abuses OSI layer 7 HTTP to create/manage 'zombies' and to conduct different attacks using; &lt;code&gt;GET&lt;/code&gt;/&lt;code&gt;POST&lt;/code&gt;, multithreading, proxies, origin spoofing methods, cache evasion techniques, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#network-reconnaissance-tools"&gt;
  &lt;/a&gt;
  Network Reconnaissance Tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/cyberark/ACLight"&gt;ACLight&lt;/a&gt; - Script for advanced discovery of sensitive Privileged Accounts - includes Shadow Admins.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/michenriksen/aquatone"&gt;AQUATONE&lt;/a&gt; - Subdomain discovery tool utilizing various open sources producing a report that can be used as input to other tools.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/m0rtem/CloudFail"&gt;CloudFail&lt;/a&gt; - Unmask server IP addresses hidden behind Cloudflare by searching old database records and detecting misconfigured DNS.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dnsdumpster.com/"&gt;DNSDumpster&lt;/a&gt; - Online DNS recon and search service.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/robertdavidgraham/masscan"&gt;Mass Scan&lt;/a&gt; - TCP port scanner, spews SYN packets asynchronously, scanning entire Internet in under 5 minutes.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/OWASP/Amass"&gt;OWASP Amass&lt;/a&gt; - Subdomain enumeration via scraping, web archives, brute forcing, permutations, reverse DNS sweeping, TLS certificates, passive DNS data sources, etc.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/johnnyxmas/ScanCannon"&gt;ScanCannon&lt;/a&gt; - Python script to quickly enumerate large networks by calling &lt;code&gt;masscan&lt;/code&gt; to quickly identify open ports and then &lt;code&gt;nmap&lt;/code&gt; to gain details on the systems/services on those ports.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/evilsocket/xray"&gt;XRay&lt;/a&gt; - Network (sub)domain discovery and reconnaissance automation tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/fwaeytens/dnsenum/"&gt;dnsenum&lt;/a&gt; - Perl script that enumerates DNS information from a domain, attempts zone transfers, performs a brute force dictionary style attack, and then performs reverse look-ups on the results.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/makefu/dnsmap/"&gt;dnsmap&lt;/a&gt; - Passive DNS network mapper.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/darkoperator/dnsrecon/"&gt;dnsrecon&lt;/a&gt; - DNS enumeration script.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.mavetju.org/unix/dnstracer.php"&gt;dnstracer&lt;/a&gt; - Determines where a given DNS server gets its information from, and follows the chain of DNS servers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mschwager/fierce"&gt;fierce&lt;/a&gt; - Python3 port of the original &lt;code&gt;fierce.pl&lt;/code&gt; DNS reconnaissance tool for locating non-contiguous IP space.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://nmap.org/"&gt;nmap&lt;/a&gt; - Free security scanner for network exploration &amp;amp; security audits.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/chrislee35/passivedns-client"&gt;passivedns-client&lt;/a&gt; - Library and query tool for querying several passive DNS providers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/gamelinux/passivedns"&gt;passivedns&lt;/a&gt; - Network sniffer that logs all DNS server replies for use in a passive DNS setup.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rustscan/rustscan"&gt;RustScan&lt;/a&gt; - Lightweight and quick open-source port scanner designed to automatically pipe open ports into Nmap.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/vesche/scanless"&gt;scanless&lt;/a&gt; - Utility for using websites to perform port scans on your behalf so as not to reveal your own IP.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ShawnDEvans/smbmap"&gt;smbmap&lt;/a&gt; - Handy SMB enumeration tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/TheRook/subbrute"&gt;subbrute&lt;/a&gt; - DNS meta-query spider that enumerates DNS records, and subdomains.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://zmap.io/"&gt;zmap&lt;/a&gt; - Open source network scanner that enables researchers to easily perform Internet-wide network studies.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#protocol-analyzers-and-sniffers"&gt;
  &lt;/a&gt;
  Protocol Analyzers and Sniffers
&lt;/h3&gt;

&lt;p&gt;See also &lt;a href="https://github.com/caesar0301/awesome-pcaptools"&gt;awesome-pcaptools&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://www.iwaxx.com/debookee/"&gt;Debookee&lt;/a&gt; - Simple and powerful network traffic analyzer for macOS.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/USArmyResearchLab/Dshell"&gt;Dshell&lt;/a&gt; - Network forensic analysis framework.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/netzob/netzob"&gt;Netzob&lt;/a&gt; - Reverse engineering, traffic generation and fuzzing of communication protocols.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.wireshark.org/"&gt;Wireshark&lt;/a&gt; - Widely-used graphical, cross-platform network protocol analyzer.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/netsniff-ng/netsniff-ng"&gt;netsniff-ng&lt;/a&gt; - Swiss army knife for network sniffing.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kpcyrd/sniffglue"&gt;sniffglue&lt;/a&gt; - Secure multithreaded packet sniffer.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.tcpdump.org/"&gt;tcpdump/libpcap&lt;/a&gt; - Common packet analyzer that runs under the command line.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#network-traffic-replay-and-editing-tools"&gt;
  &lt;/a&gt;
  Network Traffic Replay and Editing Tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.tracewrangler.com/"&gt;TraceWrangler&lt;/a&gt; - Network capture file toolkit that can edit and merge &lt;code&gt;pcap&lt;/code&gt; or &lt;code&gt;pcapng&lt;/code&gt; files with batch editing features.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://wireedit.com/"&gt;WireEdit&lt;/a&gt; - Full stack WYSIWYG pcap editor (requires a free license to edit packets).&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://bittwist.sourceforge.net/"&gt;bittwist&lt;/a&gt; - Simple yet powerful libpcap-based Ethernet packet generator useful in simulating networking traffic or scenario, testing firewall, IDS, and IPS, and troubleshooting various network problems.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/antirez/hping"&gt;hping3&lt;/a&gt; - Network tool able to send custom TCP/IP packets.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rafael-santiago/pig"&gt;pig&lt;/a&gt; - GNU/Linux packet crafting tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/secdev/scapy"&gt;scapy&lt;/a&gt; - Python-based interactive packet manipulation program and library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://tcpreplay.appneta.com/"&gt;tcpreplay&lt;/a&gt; - Suite of free Open Source utilities for editing and replaying previously captured network traffic.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#proxies-and-machineinthemiddle-mitm-tools"&gt;
  &lt;/a&gt;
  Proxies and Machine-in-the-Middle (MITM) Tools
&lt;/h3&gt;

&lt;p&gt;See also &lt;em&gt;&lt;a href="#intercepting-web-proxies"&gt;Intercepting Web proxies&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.bettercap.org/"&gt;BetterCAP&lt;/a&gt; - Modular, portable and easily extensible MITM framework.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.ettercap-project.org"&gt;Ettercap&lt;/a&gt; - Comprehensive, mature suite for machine-in-the-middle attacks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/portantier/habu"&gt;Habu&lt;/a&gt; - Python utility implementing a variety of network attacks, such as ARP poisoning, DHCP starvation, and more.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/puresec/lambda-proxy"&gt;Lambda-Proxy&lt;/a&gt; - Utility for testing SQL Injection vulnerabilities on AWS Lambda serverless functions.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/byt3bl33d3r/MITMf"&gt;MITMf&lt;/a&gt; - Framework for Man-In-The-Middle attacks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/r00t-3xp10it/morpheus"&gt;Morpheus&lt;/a&gt; - Automated ettercap TCP/IP Hijacking tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jtesta/ssh-mitm"&gt;SSH MITM&lt;/a&gt; - Intercept SSH connections with a proxy; all plaintext passwords and sessions are logged to disk.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/iphelix/dnschef"&gt;dnschef&lt;/a&gt; - Highly configurable DNS proxy for pentesters.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/infobyte/evilgrade"&gt;evilgrade&lt;/a&gt; - Modular framework to take advantage of poor upgrade implementations by injecting fake updates.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/justmao945/mallory"&gt;mallory&lt;/a&gt; - HTTP/HTTPS proxy over SSH.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nametoolong/oregano"&gt;oregano&lt;/a&gt; - Python module that runs as a machine-in-the-middle (MITM) accepting Tor client requests.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dlrobertson.github.io/sylkie/"&gt;sylkie&lt;/a&gt; - Command line tool and library for testing networks for common address spoofing security vulnerabilities in IPv6 networks using the Neighbor Discovery Protocol.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#transport-layer-security-tools"&gt;
  &lt;/a&gt;
  Transport Layer Security Tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/nabla-c0d3/sslyze"&gt;SSLyze&lt;/a&gt; - Fast and comprehensive TLS/SSL configuration analyzer to help identify security mis-configurations.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/crackpkcs12/crackpkcs12"&gt;crackpkcs12&lt;/a&gt; - Multithreaded program to crack PKCS#12 files (&lt;code&gt;.p12&lt;/code&gt; and &lt;code&gt;.pfx&lt;/code&gt; extensions), such as TLS/SSL certificates.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/drwetter/testssl.sh"&gt;testssl.sh&lt;/a&gt; - Command line tool which checks a server's service on any port for the support of TLS/SSL ciphers, protocols as well as some cryptographic flaws.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/WestpointLtd/tls_prober"&gt;tls_prober&lt;/a&gt; - Fingerprint a server's SSL/TLS implementation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#wireless-network-tools"&gt;
  &lt;/a&gt;
  Wireless Network Tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://www.aircrack-ng.org/"&gt;Aircrack-ng&lt;/a&gt; - Set of tools for auditing wireless networks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/v1s1t0r1sh3r3/airgeddon"&gt;Airgeddon&lt;/a&gt; - Multi-use bash script for Linux systems to audit wireless networks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/MisterBianco/BoopSuite"&gt;BoopSuite&lt;/a&gt; - Suite of tools written in Python for wireless auditing.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://git.kali.org/gitweb/?p=packages/bully.git;a=summary"&gt;Bully&lt;/a&gt; - Implementation of the WPS brute force attack, written in C.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/joswr1ght/cowpatty"&gt;Cowpatty&lt;/a&gt; - Brute-force dictionary attack against WPA-PSK.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/FluxionNetwork/fluxion"&gt;Fluxion&lt;/a&gt; - Suite of automated social engineering based WPA attacks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/securingsam/krackdetector"&gt;KRACK Detector&lt;/a&gt; - Detect and prevent KRACK attacks in your network.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://kismetwireless.net/"&gt;Kismet&lt;/a&gt; - Wireless network detector, sniffer, and IDS.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/soxrok2212/PSKracker"&gt;PSKracker&lt;/a&gt; - Collection of WPA/WPA2/WPS default algorithms, password generators, and PIN generators written in C.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://code.google.com/archive/p/reaver-wps"&gt;Reaver&lt;/a&gt; - Brute force attack against WiFi Protected Setup.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.wifipineapple.com/"&gt;WiFi Pineapple&lt;/a&gt; - Wireless auditing and penetration testing platform.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/P0cL4bs/WiFi-Pumpkin"&gt;WiFi-Pumpkin&lt;/a&gt; - Framework for rogue Wi-Fi access point attack.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/derv82/wifite"&gt;Wifite&lt;/a&gt; - Automated wireless attack tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/entropy1337/infernal-twin"&gt;infernal-twin&lt;/a&gt; - Automated wireless hacking tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/vanhoefm/krackattacks-scripts"&gt;krackattacks-scripts&lt;/a&gt; - WPA2 Krack attack scripts.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/evilsocket/pwnagotchi"&gt;pwnagotchi&lt;/a&gt; - Deep reinforcement learning based AI that learns from the Wi-Fi environment and instruments BetterCAP in order to maximize the WPA key material captured.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/0x90/wifi-arsenal"&gt;wifi-arsenal&lt;/a&gt; - Resources for Wi-Fi Pentesting.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#network-vulnerability-scanners"&gt;
  &lt;/a&gt;
  Network Vulnerability Scanners
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/sethsec/celerystalk"&gt;celerystalk&lt;/a&gt; - Asynchronous enumeration and vulnerability scanner that "runs all the tools on all the hosts" in a configurable manner.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://kube-hunter.aquasec.com/"&gt;kube-hunter&lt;/a&gt; - Open-source tool that runs a set of tests ("hunters") for security issues in Kubernetes clusters from either outside ("attacker's view") or inside a cluster.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.tenable.com/products/nessus-vulnerability-scanner"&gt;Nessus&lt;/a&gt; - Commercial vulnerability management, configuration, and compliance assessment platform, sold by Tenable.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.netsparker.com/pricing/"&gt;Netsparker Application Security Scanner&lt;/a&gt; - Application security scanner to automatically find security flaws.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.rapid7.com/products/nexpose/"&gt;Nexpose&lt;/a&gt; - Commercial vulnerability and risk management assessment engine that integrates with Metasploit, sold by Rapid7.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.openvas.org/"&gt;OpenVAS&lt;/a&gt; - Free software implementation of the popular Nessus vulnerability assessment system.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/future-architect/vuls"&gt;Vuls&lt;/a&gt; - Agentless vulnerability scanner for GNU/Linux and FreeBSD, written in Go.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#web-vulnerability-scanners"&gt;
  &lt;/a&gt;
  Web Vulnerability Scanners
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/tijme/angularjs-csti-scanner"&gt;ACSTIS&lt;/a&gt; - Automated client-side template injection (sandbox escape/bypass) detection for AngularJS.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.arachni-scanner.com/"&gt;Arachni&lt;/a&gt; - Scriptable framework for evaluating the security of web applications.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/TheM4hd1/JCS"&gt;JCS&lt;/a&gt; - Joomla Vulnerability Component Scanner with automatic database updater from exploitdb and packetstorm.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cirt.net/nikto2"&gt;Nikto&lt;/a&gt; - Noisy but fast black box web server and web application vulnerability scanner.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/UltimateHackers/sqlmate"&gt;SQLmate&lt;/a&gt; - Friend of &lt;code&gt;sqlmap&lt;/code&gt; that identifies SQLi vulnerabilities based on a given dork and (optional) website.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://secapps.com/"&gt;SecApps&lt;/a&gt; - In-browser web application security testing suite.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://wpscan.org/"&gt;WPScan&lt;/a&gt; - Black box WordPress vulnerability scanner.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://wapiti.sourceforge.net/"&gt;Wapiti&lt;/a&gt; - Black box web application vulnerability scanner with built-in fuzzer.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.webreaver.com/"&gt;WebReaver&lt;/a&gt; - Commercial, graphical web application vulnerability scanner designed for macOS.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://code.google.com/archive/p/cms-explorer/"&gt;cms-explorer&lt;/a&gt; - Reveal the specific modules, plugins, components and themes that various websites powered by content management systems are running.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.owasp.org/index.php/Category:OWASP_Joomla_Vulnerability_Scanner_Project"&gt;joomscan&lt;/a&gt; - Joomla vulnerability scanner.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/andresriancho/w3af"&gt;w3af&lt;/a&gt; - Web application attack and audit framework.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#online-resources"&gt;
  &lt;/a&gt;
  Online Resources
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#online-operating-systems-resources"&gt;
  &lt;/a&gt;
  Online Operating Systems Resources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://distrowatch.com/search.php?category=Security"&gt;DistroWatch.com's Security Category&lt;/a&gt; - Website dedicated to talking about, reviewing, and keeping up to date with open source operating systems.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#online-penetration-testing-resources"&gt;
  &lt;/a&gt;
  Online Penetration Testing Resources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://attack.mitre.org/"&gt;MITRE's Adversarial Tactics, Techniques &amp;amp; Common Knowledge (ATT&amp;amp;CK)&lt;/a&gt; - Curated knowledge base and model for cyber adversary behavior.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.offensive-security.com/metasploit-unleashed/"&gt;Metasploit Unleashed&lt;/a&gt; - Free Offensive Security Metasploit course.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.owasp.org/index.php/Main_Page"&gt;Open Web Application Security Project (OWASP)&lt;/a&gt; - Worldwide not-for-profit charitable organization focused on improving the security of especially Web-based and Application-layer software.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nixawk/pentest-wiki"&gt;PENTEST-WIKI&lt;/a&gt; - Free online security knowledge library for pentesters and researchers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.pentest-standard.org/"&gt;Penetration Testing Execution Standard (PTES)&lt;/a&gt; - Documentation designed to provide a common language and scope for performing and reporting the results of a penetration test.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.vulnerabilityassessment.co.uk/Penetration%20Test.html"&gt;Penetration Testing Framework (PTF)&lt;/a&gt; - Outline for performing penetration tests compiled as a general framework usable by vulnerability analysts and penetration testers alike.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.xss-payloads.com"&gt;XSS-Payloads&lt;/a&gt; - Resource dedicated to all things XSS (cross-site), including payloads, tools, games, and documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#other-lists-online"&gt;
  &lt;/a&gt;
  Other Lists Online
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/quozd/awesome-dotnet"&gt;.NET Programming&lt;/a&gt; - Software framework for Microsoft Windows platform development.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://administraitor.video"&gt;Infosec/hacking videos recorded by cooper&lt;/a&gt; - Collection of security conferences recorded by Cooper.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sundaysec/Android-Exploits"&gt;Android Exploits&lt;/a&gt; - Guide on Android Exploitation and Hacks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ashishb/android-security-awesome"&gt;Android Security&lt;/a&gt; - Collection of Android security related resources.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/paragonie/awesome-appsec"&gt;AppSec&lt;/a&gt; - Resources for learning about application security.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bayandin/awesome-awesomeness"&gt;Awesome Awesomness&lt;/a&gt; - The List of the Lists.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/fabacab/awesome-malware"&gt;Awesome Malware&lt;/a&gt; - Curated collection of awesome malware, botnets, and other post-exploitation tools.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jakejarvis/awesome-shodan-queries"&gt;Awesome Shodan Queries&lt;/a&gt; - Awesome list of useful, funny, and depressing search queries for Shodan.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/toniblyx/my-arsenal-of-aws-security-tools"&gt;AWS Tool Arsenal&lt;/a&gt; - List of tools for testing and securing AWS environments.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/fabacab/awesome-cybersecurity-blueteam"&gt;Blue Team&lt;/a&gt; - Awesome resources, tools, and other shiny things for cybersecurity blue teams.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/fffaraz/awesome-cpp"&gt;C/C++ Programming&lt;/a&gt; - One of the main language for open source security tools.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/apsdehal/awesome-ctf"&gt;CTFs&lt;/a&gt; - Capture The Flag frameworks, libraries, etc.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Cugu/awesome-forensics"&gt;Forensics&lt;/a&gt; - Free (mostly open source) forensic analysis tools and resources.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/carpedm20/awesome-hacking"&gt;Hacking&lt;/a&gt; - Tutorials, tools, and resources.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/paralax/awesome-honeypots"&gt;Honeypots&lt;/a&gt; - Honeypots, tools, components, and more.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/AnarchoTechNYC/meta/wiki/InfoSec#hacking-challenges"&gt;InfoSec § Hacking challenges&lt;/a&gt; - Comprehensive directory of CTFs, wargames, hacking challenge websites, pentest practice lab exercises, and more.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/onlurking/awesome-infosec"&gt;Infosec&lt;/a&gt; - Information security resources for pentesting, forensics, and more.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sorrycc/awesome-javascript"&gt;JavaScript Programming&lt;/a&gt; - In-browser development and scripting.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://tools.kali.org/tools-listing"&gt;Kali Linux Tools&lt;/a&gt; - List of tools present in Kali Linux.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome-nodejs"&gt;Node.js Programming by @sindresorhus&lt;/a&gt; - Curated list of delightful Node.js packages and resources.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/coreb1t/awesome-pentest-cheat-sheets"&gt;Pentest Cheat Sheets&lt;/a&gt; - Awesome Pentest Cheat Sheets.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/svaksha/pythonidae"&gt;Python Programming by @svaksha&lt;/a&gt; - General Python programming.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/vinta/awesome-python"&gt;Python Programming by @vinta&lt;/a&gt; - General Python programming.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dloss/python-pentest-tools"&gt;Python tools for penetration testers&lt;/a&gt; - Lots of pentesting tools are written in Python.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/yeyintminthuhtut/Awesome-Red-Teaming"&gt;Red Teaming&lt;/a&gt; - List of Awesome Red Teaming Resources.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Sdogruyol/awesome-ruby"&gt;Ruby Programming by @Sdogruyol&lt;/a&gt; - The de-facto language for writing exploits.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dreikanter/ruby-bookmarks"&gt;Ruby Programming by @dreikanter&lt;/a&gt; - The de-facto language for writing exploits.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/markets/awesome-ruby"&gt;Ruby Programming by @markets&lt;/a&gt; - The de-facto language for writing exploits.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/danielmiessler/SecLists"&gt;SecLists&lt;/a&gt; - Collection of multiple types of lists used during security assessments.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://sectools.org/"&gt;SecTools&lt;/a&gt; - Top 125 Network Security Tools.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/PaulSec/awesome-sec-talks"&gt;Security Talks&lt;/a&gt; - Curated list of security conferences.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sbilly/awesome-security"&gt;Security&lt;/a&gt; - Software, libraries, documents, and other resources.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/puresec/awesome-serverless-security/"&gt;Serverless Security&lt;/a&gt; - Curated list of awesome serverless security resources such as (e)books, articles, whitepapers, blogs and research papers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/alebcay/awesome-shell"&gt;Shell Scripting&lt;/a&gt; - Command line frameworks, toolkits, guides and gizmos.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/InQuest/awesome-yara"&gt;YARA&lt;/a&gt; - YARA rules, tools, and people.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#penetration-testing-report-templates"&gt;
  &lt;/a&gt;
  Penetration Testing Report Templates
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/juliocesarfort/public-pentesting-reports"&gt;Public Pentesting Reports&lt;/a&gt; - Curated list of public penetration test reports released by several consulting firms and academic security groups.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.testandverification.com/wp-content/uploads/template-penetration-testing-report-v03.pdf"&gt;T&amp;amp;VS Pentesting Report Template&lt;/a&gt; - Pentest report template provided by Test and Verification Services, Ltd.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://lucideus.com/pdf/stw.pdf"&gt;Web Application Security Assessment Report Template&lt;/a&gt; - Sample Web application security assessment reporting template provided by Lucideus.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#open-sources-intelligence-osint"&gt;
  &lt;/a&gt;
  Open Sources Intelligence (OSINT)
&lt;/h2&gt;

&lt;p&gt;See also &lt;a href="https://github.com/jivoi/awesome-osint"&gt;awesome-osint&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/upgoingstar/datasploit"&gt;DataSploit&lt;/a&gt; - OSINT visualizer utilizing Shodan, Censys, Clearbit, EmailHunter, FullContact, and Zoomeye behind the scenes.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/beurtschipper/Depix"&gt;Depix&lt;/a&gt; - Tool for recovering passwords from pixelized screenshots (by de-pixelating text).&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/gyoisamurai/GyoiThon"&gt;GyoiThon&lt;/a&gt; - GyoiThon is an Intelligence Gathering tool using Machine Learning.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://intrigue.io"&gt;Intrigue&lt;/a&gt; - Automated OSINT &amp;amp; Attack Surface discovery framework with powerful API, UI and CLI.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.maltego.com/"&gt;Maltego&lt;/a&gt; - Proprietary software for open sources intelligence and forensics.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://packettotal.com/"&gt;PacketTotal&lt;/a&gt; - Simple, free, high-quality packet capture file analysis facilitating the quick detection of network-borne malware (using Zeek and Suricata IDS signatures under the hood).&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/xillwillx/skiptracer"&gt;Skiptracer&lt;/a&gt; - OSINT scraping framework that utilizes basic Python webscraping (BeautifulSoup) of PII paywall sites to compile passive information on a target on a ramen noodle budget.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/1N3/Sn1per"&gt;Sn1per&lt;/a&gt; - Automated Pentest Recon Scanner.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.spiderfoot.net/"&gt;Spiderfoot&lt;/a&gt; - Multi-source OSINT automation tool with a Web UI and report visualizations.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ilektrojohn/creepy"&gt;creepy&lt;/a&gt; - Geolocation OSINT tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Nhoya/gOSINT"&gt;gOSINT&lt;/a&gt; - OSINT tool with multiple modules and a telegram scraper.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ascribe/image-match"&gt;image-match&lt;/a&gt; - Quickly search over billions of images.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/lanmaster53/recon-ng"&gt;recon-ng&lt;/a&gt; - Full-featured Web Reconnaissance framework written in Python.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kpcyrd/sn0int"&gt;sn0int&lt;/a&gt; - Semi-automatic OSINT framework and package manager.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#data-broker-and-search-engine-services"&gt;
  &lt;/a&gt;
  Data Broker and Search Engine Services
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://hunter.io/"&gt;Hunter.io&lt;/a&gt; - Data broker providing a Web search interface for discovering the email addresses and other organizational details of a company.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.threatcrowd.org/"&gt;Threat Crowd&lt;/a&gt; - Search engine for threats.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.virustotal.com/"&gt;Virus Total&lt;/a&gt; - Free service that analyzes suspicious files and URLs and facilitates the quick detection of viruses, worms, trojans, and all kinds of malware.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kisom/surfraw"&gt;surfraw&lt;/a&gt; - Fast UNIX command line interface to a variety of popular WWW search engines.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#dorking-tools"&gt;
  &lt;/a&gt;
  Dorking tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/Hood3dRob1n/BinGoo"&gt;BinGoo&lt;/a&gt; - GNU/Linux bash based Bing and Google Dorking Tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/utiso/dorkbot"&gt;dorkbot&lt;/a&gt; - Command-line tool to scan Google (or other) search results for vulnerabilities.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/techgaun/github-dorks"&gt;github-dorks&lt;/a&gt; - CLI tool to scan GitHub repos/organizations for potential sensitive information leaks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/k3170makan/GooDork"&gt;GooDork&lt;/a&gt; - Command line Google dorking tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.exploit-db.com/google-hacking-database/"&gt;Google Hacking Database&lt;/a&gt; - Database of Google dorks; can be used for recon.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jgor/dork-cli"&gt;dork-cli&lt;/a&gt; - Command line Google dork tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/USSCltd/dorks"&gt;dorks&lt;/a&gt; - Google hack database automation tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/DanMcInerney/fast-recon"&gt;fast-recon&lt;/a&gt; - Perform Google dorks against a domain.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/opsdisk/pagodo"&gt;pagodo&lt;/a&gt; - Automate Google Hacking Database scraping.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Smaash/snitch"&gt;snitch&lt;/a&gt; - Information gathering via dorks.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#email-search-and-analysis-tools"&gt;
  &lt;/a&gt;
  Email search and analysis tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/SimplySecurity/SimplyEmail"&gt;SimplyEmail&lt;/a&gt; - Email recon made fast and easy.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Ekultek/WhatBreach"&gt;WhatBreach&lt;/a&gt; - Search email addresses and discover all known breaches that this email has been seen in, and download the breached database if it is publicly available.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#metadata-harvesting-and-analysis"&gt;
  &lt;/a&gt;
  Metadata harvesting and analysis
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.elevenpaths.com/labstools/foca/"&gt;FOCA (Fingerprinting Organizations with Collected Archives)&lt;/a&gt; - Automated document harvester that searches Google, Bing, and DuckDuckGo to find and extrapolate internal company organizational structures.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/laramies/metagoofil"&gt;metagoofil&lt;/a&gt; - Metadata harvester.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/laramies/theHarvester"&gt;theHarvester&lt;/a&gt; - E-mail, subdomain and people names harvester.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#network-device-discovery-tools"&gt;
  &lt;/a&gt;
  Network device discovery tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.censys.io/"&gt;Censys&lt;/a&gt; - Collects data on hosts and websites through daily ZMap and ZGrab scans.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.shodan.io/"&gt;Shodan&lt;/a&gt; - World's first search engine for Internet-connected devices.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.zoomeye.org/"&gt;ZoomEye&lt;/a&gt; - Search engine for cyberspace that lets the user find specific network components.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#osint-online-resources"&gt;
  &lt;/a&gt;
  OSINT Online Resources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/lanrat/certgraph"&gt;CertGraph&lt;/a&gt; - Crawls a domain's SSL/TLS certificates for its certificate alternative names.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://ghostproject.fr/"&gt;GhostProject&lt;/a&gt; - Searchable database of billions of cleartext passwords, partially visible for free.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://netbootcamp.org/osinttools/"&gt;NetBootcamp OSINT Tools&lt;/a&gt; - Collection of OSINT links and custom Web interfaces to other services.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://osintframework.com/"&gt;OSINT Framework&lt;/a&gt; - Collection of various OSINT tools broken out by category.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://wigle.net/"&gt;WiGLE.net&lt;/a&gt; - Information about wireless networks world-wide, with user-friendly desktop and web applications.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#source-code-repository-searching-tools"&gt;
  &lt;/a&gt;
  Source code repository searching tools
&lt;/h3&gt;

&lt;p&gt;See also &lt;em&gt;&lt;a href="#web-accessible-source-code-ripping-tools"&gt;Web-accessible source code ripping tools&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/melvinsh/vcsmap"&gt;vcsmap&lt;/a&gt; - Plugin-based tool to scan public version control systems for sensitive information.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Furduhlutur/yar"&gt;Yar&lt;/a&gt; - Clone git repositories to search through the whole commit history in order of commit time for secrets, tokens, or passwords.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#web-application-and-resource-analysis-tools"&gt;
  &lt;/a&gt;
  Web application and resource analysis tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://blindelephant.sourceforge.net/"&gt;BlindElephant&lt;/a&gt; - Web application fingerprinter.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ChrisTruncer/EyeWitness"&gt;EyeWitness&lt;/a&gt; - Tool to take screenshots of websites, provide some server header info, and identify default credentials if possible.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/codingo/VHostScan"&gt;VHostScan&lt;/a&gt; - Virtual host scanner that performs reverse lookups, can be used with pivot tools, detect catch-all scenarios, aliases and dynamic default pages.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.wappalyzer.com/"&gt;Wappalyzer&lt;/a&gt; - Wappalyzer uncovers the technologies used on websites.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Ekultek/WhatWaf"&gt;WhatWaf&lt;/a&gt; - Detect and bypass web application firewalls and protection systems.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/urbanadventurer/WhatWeb"&gt;WhatWeb&lt;/a&gt; - Website fingerprinter.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EnableSecurity/wafw00f"&gt;wafw00f&lt;/a&gt; - Identifies and fingerprints Web Application Firewall (WAF) products.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/maaaaz/webscreenshot"&gt;webscreenshot&lt;/a&gt; - Simple script to take screenshots of websites from a list of sites.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#operating-system-distributions"&gt;
  &lt;/a&gt;
  Operating System Distributions
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://androidtamer.com/"&gt;Android Tamer&lt;/a&gt; - Distribution built for Android security professionals that includes tools required for Android security testing.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://archstrike.org/"&gt;ArchStrike&lt;/a&gt; - Arch GNU/Linux repository for security professionals and enthusiasts.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/adi0x90/attifyos"&gt;AttifyOS&lt;/a&gt; - GNU/Linux distribution focused on tools useful during Internet of Things (IoT) security assessments.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.blackarch.org/"&gt;BlackArch&lt;/a&gt; - Arch GNU/Linux-based distribution for penetration testers and security researchers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://inteltechniques.com/buscador/"&gt;Buscador&lt;/a&gt; - GNU/Linux virtual machine that is pre-configured for online investigators.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.kali.org/"&gt;Kali&lt;/a&gt; - Rolling Debian-based GNU/Linux distribution designed for penetration testing and digital forensics.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://networksecuritytoolkit.org/"&gt;Network Security Toolkit (NST)&lt;/a&gt; - Fedora-based GNU/Linux bootable live Operating System designed to provide easy access to best-of-breed open source network security applications.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://parrotlinux.org/"&gt;Parrot&lt;/a&gt; - Distribution similar to Kali, with support for multiple hardware architectures.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pentestbox.org/"&gt;PentestBox&lt;/a&gt; - Open source pre-configured portable penetration testing environment for the Windows Operating System.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trustedsec/ptf"&gt;The Pentesters Framework&lt;/a&gt; - Distro organized around the Penetration Testing Execution Standard (PTES), providing a curated collection of utilities that omits less frequently used utilities.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#periodicals"&gt;
  &lt;/a&gt;
  Periodicals
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.2600.com/Magazine/DigitalEditions"&gt;2600: The Hacker Quarterly&lt;/a&gt; - American publication about technology and computer "underground" culture.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.phrack.org/"&gt;Phrack Magazine&lt;/a&gt; - By far the longest running hacker zine.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#physical-access-tools"&gt;
  &lt;/a&gt;
  Physical Access Tools
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://atcommands.org/"&gt;AT Commands&lt;/a&gt; - Use AT commands over an Android device's USB port to rewrite device firmware, bypass security mechanisms, exfiltrate sensitive information, perform screen unlocks, and inject touch events.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.hak5.org/gear/bash-bunny"&gt;Bash Bunny&lt;/a&gt; - Local exploit delivery tool in the form of a USB thumbdrive in which you write payloads in a DSL called BunnyScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://lanturtle.com/"&gt;LAN Turtle&lt;/a&gt; - Covert "USB Ethernet Adapter" that provides remote access, network intelligence gathering, and MITM capabilities when installed in a local network.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ufrisk/pcileech"&gt;PCILeech&lt;/a&gt; - Uses PCIe hardware devices to read and write from the target system memory via Direct Memory Access (DMA) over PCIe.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.hak5.org/gear/packet-squirrel"&gt;Packet Squirrel&lt;/a&gt; - Ethernet multi-tool designed to enable covert remote access, painless packet captures, and secure VPN connections with the flip of a switch.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://samy.pl/poisontap/"&gt;Poisontap&lt;/a&gt; - Siphons cookies, exposes internal (LAN-side) router and installs web backdoor on locked computers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://proxmark3.com/"&gt;Proxmark3&lt;/a&gt; - RFID/NFC cloning, replay, and spoofing toolkit often used for analyzing and attacking proximity cards/readers, wireless keys/keyfobs, and more.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://thunderclap.io/"&gt;Thunderclap&lt;/a&gt; - Open source I/O security research platform for auditing physical DMA-enabled hardware peripheral ports.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://usbrubberducky.com/"&gt;USB Rubber Ducky&lt;/a&gt; - Customizable keystroke injection attack platform masquerading as a USB thumbdrive.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#privilege-escalation-tools"&gt;
  &lt;/a&gt;
  Privilege Escalation Tools
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/hausec/ADAPE-Script"&gt;Active Directory and Privilege Escalation (ADAPE)&lt;/a&gt; - Umbrella script that automates numerous useful PowerShell modules to discover security misconfigurations and attempt privilege escalation against Active Directory.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rebootuser/LinEnum"&gt;LinEnum&lt;/a&gt; - Scripted local Linux enumeration and privilege escalation checker useful for auditing a host and during CTF gaming.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mbahadou/postenum"&gt;Postenum&lt;/a&gt; - Shell script used for enumerating possible privilege escalation opportunities on a local GNU/Linux system.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pentestmonkey/unix-privesc-check"&gt;unix-privesc-check&lt;/a&gt; - Shell script to check for simple privilege escalation vectors on UNIX systems.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#password-spraying-tools"&gt;
  &lt;/a&gt;
  Password Spraying Tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/dafthack/DomainPasswordSpray"&gt;DomainPasswordSpray&lt;/a&gt; - Tool written in PowerShell to perform a password spray attack against users of a domain.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/byt3bl33d3r/SprayingToolkit"&gt;SprayingToolkit&lt;/a&gt; - Scripts to make password spraying attacks against Lync/S4B, Outlook Web Access (OWA) and Office 365 (O365) a lot quicker, less painful and more efficient.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#reverse-engineering"&gt;
  &lt;/a&gt;
  Reverse Engineering
&lt;/h2&gt;

&lt;p&gt;See also &lt;a href="https://github.com/tylerha97/awesome-reversing"&gt;awesome-reversing&lt;/a&gt;, &lt;a href="#exploit-development-tools"&gt;&lt;em&gt;Exploit Development Tools&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reverse-engineering-books"&gt;
  &lt;/a&gt;
  Reverse Engineering Books
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.amazon.com/Hacking-Ethical-Hackers-Handbook-Edition/dp/0071832386"&gt;Gray Hat Hacking The Ethical Hacker's Handbook by Daniel Regalado et al., 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nostarch.com/xbox.htm"&gt;Hacking the Xbox by Andrew Huang, 2003&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.wiley.com/WileyCDA/WileyTitle/productCd-1118787315.html"&gt;Practical Reverse Engineering by Bruce Dang et al., 2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://beginners.re/"&gt;Reverse Engineering for Beginners by Dennis Yurichev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nostarch.com/idapro2.htm"&gt;The IDA Pro Book by Chris Eagle, 2011&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#reverse-engineering-tools"&gt;
  &lt;/a&gt;
  Reverse Engineering Tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://angr.io/"&gt;angr&lt;/a&gt; - Platform-agnostic binary analysis framework.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.capstone-engine.org/"&gt;Capstone&lt;/a&gt; - Lightweight multi-platform, multi-architecture disassembly framework.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/horsicq/Detect-It-Easy"&gt;Detect It Easy(DiE)&lt;/a&gt; - Program for determining types of files for Windows, Linux and MacOS.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.codef00.com/projects#debugger"&gt;Evan's Debugger&lt;/a&gt; - OllyDbg-like debugger for GNU/Linux.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.frida.re/"&gt;Frida&lt;/a&gt; - Dynamic instrumentation toolkit for developers, reverse-engineers, and security researchers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/NorthwaveNL/fridax"&gt;Fridax&lt;/a&gt; - Read variables and intercept/hook functions in Xamarin/Mono JIT and AOT compiled iOS/Android applications.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.ghidra-sre.org/"&gt;Ghidra&lt;/a&gt; - Suite of free software reverse engineering tools developed by NSA's Research Directorate originally exposed in WikiLeaks's "Vault 7" publication and now maintained as open source software.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://immunityinc.com/products/debugger/"&gt;Immunity Debugger&lt;/a&gt; - Powerful way to write exploits and analyze malware.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.hex-rays.com/products/ida/"&gt;Interactive Disassembler (IDA Pro)&lt;/a&gt; - Proprietary multi-processor disassembler and debugger for Windows, GNU/Linux, or macOS; also has a free version, &lt;a href="https://www.hex-rays.com/products/ida/support/download_freeware.shtml"&gt;IDA Free&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/wisk/medusa"&gt;Medusa&lt;/a&gt; - Open source, cross-platform interactive disassembler.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.ollydbg.de/"&gt;OllyDbg&lt;/a&gt; - x86 debugger for Windows binaries that emphasizes binary code analysis.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Cisco-Talos/pyrebox"&gt;PyREBox&lt;/a&gt; - Python scriptable Reverse Engineering sandbox by Cisco-Talos.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://rada.re/r/index.html"&gt;Radare2&lt;/a&gt; - Open source, crossplatform reverse engineering framework.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/LongSoft/UEFITool"&gt;UEFITool&lt;/a&gt; - UEFI firmware image viewer and editor.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/snare/voltron"&gt;Voltron&lt;/a&gt; - Extensible debugger UI toolkit written in Python.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/debugger-download-tools"&gt;WDK/WinDbg&lt;/a&gt; - Windows Driver Kit and WinDbg.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/devttys0/binwalk"&gt;binwalk&lt;/a&gt; - Fast, easy to use tool for analyzing, reverse engineering, and extracting firmware images.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kpcyrd/boxxy-rs"&gt;boxxy&lt;/a&gt; - Linkable sandbox explorer.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/0xd4d/dnSpy"&gt;dnSpy&lt;/a&gt; - Tool to reverse engineer .NET assemblies.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/joelpx/plasma"&gt;plasma&lt;/a&gt; - Interactive disassembler for x86/ARM/MIPS. Generates indented pseudo-code with colored syntax code.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pwndbg/pwndbg"&gt;pwndbg&lt;/a&gt; - GDB plug-in that eases debugging with GDB, with a focus on features needed by low-level software developers, hardware hackers, reverse-engineers, and exploit developers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/fireeye/rVMI"&gt;rVMI&lt;/a&gt; - Debugger on steroids; inspect userspace processes, kernel drivers, and preboot environments in a single tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://x64dbg.com/"&gt;x64dbg&lt;/a&gt; - Open source x64/x32 debugger for windows.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#security-education-courses"&gt;
  &lt;/a&gt;
  Security Education Courses
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://azcwr.org/"&gt;ARIZONA CYBER WARFARE RANGE&lt;/a&gt; - 24x7 live fire exercises for beginners through real world operations; capability for upward progression into the real world of cyber warfare.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://cybrary.it"&gt;Cybrary&lt;/a&gt; - Free courses in ethical hacking and advanced penetration testing. Advanced penetration testing courses are based on the book 'Penetration Testing for Highly Secured Environments'.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.enisa.europa.eu/topics/trainings-for-cybersecurity-specialists/online-training-material"&gt;European Union Agency for Network and Information Security&lt;/a&gt; - ENISA Cyber Security Training material.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.offensive-security.com/information-security-training/"&gt;Offensive Security Training&lt;/a&gt; - Training from BackTrack/Kali developers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://opensecuritytraining.info/"&gt;Open Security Training&lt;/a&gt; - Training material for computer security classes.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.sans.org/"&gt;SANS Security Training&lt;/a&gt; - Computer Security Training &amp;amp; Certification.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#shellcoding-guides-and-tutorials"&gt;
  &lt;/a&gt;
  Shellcoding Guides and Tutorials
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.corelan.be/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/"&gt;Exploit Writing Tutorials&lt;/a&gt; - Tutorials on how to develop exploits.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://shell-storm.org/shellcode/"&gt;Shellcode Examples&lt;/a&gt; - Shellcodes database.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.vividmachines.com/shellcode/shellcode.html"&gt;Shellcode Tutorial&lt;/a&gt; - Tutorial on how to write shellcode.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.wiley.com/WileyCDA/WileyTitle/productCd-047008023X.html"&gt;The Shellcoder's Handbook by Chris Anley et al., 2007&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#sidechannel-tools"&gt;
  &lt;/a&gt;
  Side-channel Tools
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://chipwhisperer.com"&gt;ChipWhisperer&lt;/a&gt; - Complete open-source toolchain for side-channel power analysis and glitching attacks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jovanbulck/sgx-step"&gt;SGX-Step&lt;/a&gt; - Open-source framework to facilitate side-channel attack research on Intel x86 processors in general and Intel SGX (Software Guard Extensions) platforms in particular.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/vusec/trrespass"&gt;TRRespass&lt;/a&gt; - Many-sided rowhammer tool suite able to reverse engineer the contents of DDR3 and DDR4 memory chips protected by Target Row Refresh mitigations.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#social-engineering"&gt;
  &lt;/a&gt;
  Social Engineering
&lt;/h2&gt;

&lt;p&gt;See also &lt;a href="https://github.com/v2-dev/awesome-social-engineering"&gt;awesome-social-engineering&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#social-engineering-books"&gt;
  &lt;/a&gt;
  Social Engineering Books
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hachettebookgroup.com/titles/kevin-mitnick/ghost-in-the-wires/9780316134477/"&gt;Ghost in the Wires by Kevin D. Mitnick &amp;amp; William L. Simon, 2011&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.elsevier.com/books/no-tech-hacking/mitnick/978-1-59749-215-7"&gt;No Tech Hacking by Johnny Long &amp;amp; Jack Wiles, 2008&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mhprofessional.com/9780071818469-usa-social-engineering-in-it-security-tools-tactics-and-techniques-group"&gt;Social Engineering in IT Security: Tools, Tactics, and Techniques by Sharon Conheady, 2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.wiley.com/WileyCDA/WileyTitle/productCd-0471237124.html"&gt;The Art of Deception by Kevin D. Mitnick &amp;amp; William L. Simon, 2002&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.wiley.com/WileyCDA/WileyTitle/productCd-0764569597.html"&gt;The Art of Intrusion by Kevin D. Mitnick &amp;amp; William L. Simon, 2005&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.wiley.com/WileyCDA/WileyTitle/productCd-1118608577.html"&gt;Unmasking the Social Engineer: The Human Element of Security by Christopher Hadnagy, 2014&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#social-engineering-online-resources"&gt;
  &lt;/a&gt;
  Social Engineering Online Resources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://www.social-engineer.org/framework/general-discussion/"&gt;Social Engineering Framework&lt;/a&gt; - Information resource for social engineers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#social-engineering-tools"&gt;
  &lt;/a&gt;
  Social Engineering Tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/4w4k3/BeeLogger"&gt;Beelogger&lt;/a&gt; - Tool for generating keylooger.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ring0lab/catphish"&gt;Catphish&lt;/a&gt; - Tool for phishing and corporate espionage written in Ruby.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kgretzky/evilginx2"&gt;Evilginx2&lt;/a&gt; - Standalone Machine-in-the-Middle (MitM) reverse proxy attack framework for setting up phishing pages capable of defeating most forms of 2FA security schemes.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Raikia/FiercePhish"&gt;FiercePhish&lt;/a&gt; - Full-fledged phishing framework to manage all phishing engagements.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://getgophish.com"&gt;Gophish&lt;/a&gt; - Open-source phishing framework.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/securestate/king-phisher"&gt;King Phisher&lt;/a&gt; - Phishing campaign toolkit used for creating and managing multiple simultaneous phishing attacks with custom email and server content.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/drk1wi/Modlishka"&gt;Modlishka&lt;/a&gt; - Flexible and powerful reverse proxy with real-time two-factor authentication.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/fireeye/ReelPhish"&gt;ReelPhish&lt;/a&gt; - Real-time two-factor phishing tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trustedsec/social-engineer-toolkit"&gt;Social Engineer Toolkit (SET)&lt;/a&gt; - Open source pentesting framework designed for social engineering featuring a number of custom attack vectors to make believable attacks quickly.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/UndeadSec/SocialFish"&gt;SocialFish&lt;/a&gt; - Social media phishing framework that can run on an Android phone or in a Docker container.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ryhanson/phishery"&gt;phishery&lt;/a&gt; - TLS/SSL enabled Basic Auth credential harvester.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sophron/wifiphisher"&gt;wifiphisher&lt;/a&gt; - Automated phishing attacks against WiFi networks.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#static-analyzers"&gt;
  &lt;/a&gt;
  Static Analyzers
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/presidentbeef/brakeman"&gt;Brakeman&lt;/a&gt; - Static analysis security vulnerability scanner for Ruby on Rails applications.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://findbugs.sourceforge.net/"&gt;FindBugs&lt;/a&gt; - Free software static analyzer to look for bugs in Java code.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/designsecurity/progpilot"&gt;Progpilot&lt;/a&gt; - Static security analysis tool for PHP code.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jagracey/RegEx-DoS"&gt;RegEx-DoS&lt;/a&gt; - Analyzes source code for Regular Expressions susceptible to Denial of Service attacks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pypi.python.org/pypi/bandit/"&gt;bandit&lt;/a&gt; - Security oriented static analyser for Python code.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://cppcheck.sourceforge.net/"&gt;cppcheck&lt;/a&gt; - Extensible C/C++ static analyzer focused on finding bugs.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nccgroup/sobelow"&gt;sobelow&lt;/a&gt; - Security-focused static analysis for the Phoenix Framework.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/fkie-cad/cwe_checker"&gt;cwe_checker&lt;/a&gt; - Suite of tools built atop the Binary Analysis Platform (BAP) to heuristically detect CWEs in compiled binaries and firmware.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#steganography-tools"&gt;
  &lt;/a&gt;
  Steganography Tools
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/TryCatchHCF/Cloakify"&gt;Cloakify&lt;/a&gt; - Textual steganography toolkit that converts any filetype into lists of everyday strings.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://stegonline.georgeom.net/"&gt;StegOnline&lt;/a&gt; - Web-based, enhanced, and open-source port of StegSolve.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Paradoxis/StegCracker"&gt;StegCracker&lt;/a&gt; - Steganography brute-force utility to uncover hidden data inside files.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#vulnerability-databases"&gt;
  &lt;/a&gt;
  Vulnerability Databases
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://www.securityfocus.com/bid/"&gt;Bugtraq (BID)&lt;/a&gt; - Software security bug identification database compiled from submissions to the SecurityFocus mailing list and other sources, operated by Symantec, Inc.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cxsecurity.com/"&gt;CXSecurity&lt;/a&gt; - Archive of published CVE and Bugtraq software vulnerabilities cross-referenced with a Google dork database for discovering the listed vulnerability.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.cnnvd.org.cn/"&gt;China National Vulnerability Database (CNNVD)&lt;/a&gt; - Chinese government-run vulnerability database analoguous to the United States's CVE database hosted by Mitre Corporation.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cve.mitre.org/"&gt;Common Vulnerabilities and Exposures (CVE)&lt;/a&gt; - Dictionary of common names (i.e., CVE Identifiers) for publicly known security vulnerabilities.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.exploit-db.com/"&gt;Exploit-DB&lt;/a&gt; - Non-profit project hosting exploits for software vulnerabilities, provided as a public service by Offensive Security.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://seclists.org/fulldisclosure/"&gt;Full-Disclosure&lt;/a&gt; - Public, vendor-neutral forum for detailed discussion of vulnerabilities, often publishes details before many other sources.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/advisories/"&gt;GitHub Advisories&lt;/a&gt; - Public vulnerability advisories published by or affecting codebases hosted by GitHub, including open source projects.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hpi-vdb.de/"&gt;HPI-VDB&lt;/a&gt; - Aggregator of cross-referenced software vulnerabilities offering free-of-charge API access, provided by the Hasso-Plattner Institute, Potsdam.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.0day.today/"&gt;Inj3ct0r&lt;/a&gt; - Exploit marketplace and vulnerability information aggregator. (&lt;a href="http://mvfjfugdwgc5uwho.onion/"&gt;Onion service&lt;/a&gt;.)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/security-updates/"&gt;Microsoft Security Advisories and Bulletins&lt;/a&gt; - Archive and announcements of security advisories impacting Microsoft software, published by the Microsoft Security Response Center (MSRC).&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.mozilla.org/security/advisories/"&gt;Mozilla Foundation Security Advisories&lt;/a&gt; - Archive of security advisories impacting Mozilla software, including the Firefox Web Browser.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://nvd.nist.gov/"&gt;National Vulnerability Database (NVD)&lt;/a&gt; - United States government's National Vulnerability Database provides additional meta-data (CPE, CVSS scoring) of the standard CVE List along with a fine-grained search engine.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://osv.dev/"&gt;Open Source Vulnerabilities (OSV)&lt;/a&gt; - Database of vulnerabilities affecting open source software, queryable by project, Git commit, or version.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://packetstormsecurity.com/files/"&gt;Packet Storm&lt;/a&gt; - Compendium of exploits, advisories, tools, and other security-related resources aggregated from across the industry.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.securiteam.com/"&gt;SecuriTeam&lt;/a&gt; - Independent source of software vulnerability information.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://snyk.io/vuln/"&gt;Snyk Vulnerability DB&lt;/a&gt; - Detailed information and remediation guidance for vulnerabilities known by Snyk.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.kb.cert.org/vuls/"&gt;US-CERT Vulnerability Notes Database&lt;/a&gt; - Summaries, technical details, remediation information, and lists of vendors affected by software vulnerabilities, aggregated by the United States Computer Emergency Response Team (US-CERT).&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.vulnerability-lab.com/"&gt;Vulnerability Lab&lt;/a&gt; - Open forum for security advisories organized by category of exploit target.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://vulners.com/"&gt;Vulners&lt;/a&gt; - Security database of software vulnerabilities.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://vulmon.com/"&gt;Vulmon&lt;/a&gt; - Vulnerability search engine with vulnerability intelligence features that conducts full text searches in its database.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://zerodayinitiative.com/advisories/published/"&gt;Zero Day Initiative&lt;/a&gt; - Bug bounty program with publicly accessible archive of published security advisories, operated by TippingPoint.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#web-exploitation"&gt;
  &lt;/a&gt;
  Web Exploitation
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/fuzzdb-project/fuzzdb"&gt;FuzzDB&lt;/a&gt; - Dictionary of attack patterns and primitives for black-box application fault injection and resource discovery.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.owasp.org/index.php/OWASP_OWTF"&gt;Offensive Web Testing Framework (OWTF)&lt;/a&gt; - Python-based framework for pentesting Web applications based on the OWASP Testing Guide.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/evyatarmeged/Raccoon"&gt;Raccoon&lt;/a&gt; - High performance offensive security tool for reconnaissance and vulnerability scanning.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/espreto/wpsploit"&gt;WPSploit&lt;/a&gt; - Exploit WordPress-powered websites with Metasploit.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2017/march/autochrome/"&gt;autochrome&lt;/a&gt; - Chrome browser profile preconfigured with appropriate settings needed for web application testing.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kpcyrd/badtouch"&gt;badtouch&lt;/a&gt; - Scriptable network authentication cracker.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/LeonardoNve/sslstrip2"&gt;sslstrip2&lt;/a&gt; - SSLStrip version to defeat HSTS.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.thoughtcrime.org/software/sslstrip/"&gt;sslstrip&lt;/a&gt; - Demonstration of the HTTPS stripping attacks.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#intercepting-web-proxies"&gt;
  &lt;/a&gt;
  Intercepting Web proxies
&lt;/h3&gt;

&lt;p&gt;See also &lt;em&gt;&lt;a href="#proxies-and-machine-in-the-middle-mitm-tools"&gt;Proxies and Machine-in-the-Middle (MITM) Tools&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://portswigger.net/burp/"&gt;Burp Suite&lt;/a&gt; - Integrated platform for performing security testing of web applications.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.telerik.com/fiddler"&gt;Fiddler&lt;/a&gt; - Free cross-platform web debugging proxy with user-friendly companion tools.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.zaproxy.org/"&gt;OWASP Zed Attack Proxy (ZAP)&lt;/a&gt; - Feature-rich, scriptable HTTP intercepting proxy and fuzzer for penetration testing web applications.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://mitmproxy.org/"&gt;mitmproxy&lt;/a&gt; - Interactive TLS-capable intercepting HTTP proxy for penetration testers and software developers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#web-file-inclusion-tools"&gt;
  &lt;/a&gt;
  Web file inclusion tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/P0cL4bs/Kadimus"&gt;Kadimus&lt;/a&gt; - LFI scan and exploit tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/D35m0nd142/LFISuite"&gt;LFISuite&lt;/a&gt; - Automatic LFI scanner and exploiter.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kurobeats/fimap"&gt;fimap&lt;/a&gt; - Find, prepare, audit, exploit and even Google automatically for LFI/RFI bugs.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/hvqzao/liffy"&gt;liffy&lt;/a&gt; - LFI exploitation tool.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#web-injection-tools"&gt;
  &lt;/a&gt;
  Web injection tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/commixproject/commix"&gt;Commix&lt;/a&gt; - Automated all-in-one operating system command injection and exploitation tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/codingo/NoSQLMap"&gt;NoSQLmap&lt;/a&gt; - Automatic NoSQL injection and database takeover tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://sqlmap.org/"&gt;SQLmap&lt;/a&gt; - Automatic SQL injection and database takeover tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/epinna/tplmap"&gt;tplmap&lt;/a&gt; - Automatic server-side template injection and Web server takeover tool.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#web-path-discovery-and-bruteforcing-tools"&gt;
  &lt;/a&gt;
  Web path discovery and bruteforcing tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/maurosoria/dirsearch"&gt;dirsearch&lt;/a&gt; - Web path scanner.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/c-sto/recursebuster"&gt;recursebuster&lt;/a&gt; - Content discovery tool to perform directory and file bruteforcing.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#web-shells-and-c2-frameworks"&gt;
  &lt;/a&gt;
  Web shells and C2 frameworks
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/beefproject/beef"&gt;Browser Exploitation Framework (BeEF)&lt;/a&gt; - Command and control server for delivering exploits to commandeered Web browsers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dotcppfile/DAws"&gt;DAws&lt;/a&gt; - Advanced Web shell.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/antonioCoco/SharPyShell"&gt;SharPyShell&lt;/a&gt; - Tiny and obfuscated ASP.NET webshell for C# web applications.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nil0x42/phpsploit"&gt;PhpSploit&lt;/a&gt; - Full-featured C2 framework which silently persists on webserver via evil PHP oneliner.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/epinna/weevely3"&gt;weevely3&lt;/a&gt; - Weaponized PHP-based web shell.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#webaccessible-source-code-ripping-tools"&gt;
  &lt;/a&gt;
  Web-accessible source code ripping tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/kost/dvcs-ripper"&gt;DVCS Ripper&lt;/a&gt; - Rip web accessible (distributed) version control systems: SVN/GIT/HG/BZR.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/internetwache/GitTools"&gt;GitTools&lt;/a&gt; - Automatically find and download Web-accessible &lt;code&gt;.git&lt;/code&gt; repositories.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/arthaud/git-dumper"&gt;git-dumper&lt;/a&gt; - Tool to dump a git repository from a website.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/HightechSec/git-scanner"&gt;git-scanner&lt;/a&gt; - Tool for bug hunting or pentesting websites that have open &lt;code&gt;.git&lt;/code&gt; repositories available in public.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#web-exploitation-books"&gt;
  &lt;/a&gt;
  Web Exploitation Books
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.wiley.com/WileyCDA/WileyTitle/productCd-1118662091.html"&gt;The Browser Hacker's Handbook by Wade Alcorn et al., 2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.wiley.com/WileyCDA/WileyTitle/productCd-1118026470.html"&gt;The Web Application Hacker's Handbook by D. Stuttard, M. Pinto, 2011&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#windows-utilities"&gt;
  &lt;/a&gt;
  Windows Utilities
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/adaptivethreat/Bloodhound/wiki"&gt;Bloodhound&lt;/a&gt; - Graphical Active Directory trust relationship explorer.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/fireeye/commando-vm"&gt;Commando VM&lt;/a&gt; - Automated installation of over 140 Windows software packages for penetration testing and red teaming.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/cobbr/Covenant"&gt;Covenant&lt;/a&gt; - ASP.NET Core application that serves as a collaborative command and control platform for red teamers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/taviso/ctftool"&gt;ctftool&lt;/a&gt; - Interactive Collaborative Translation Framework (CTF) exploration tool capable of launching cross-session edit session attacks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/byt3bl33d3r/DeathStar"&gt;DeathStar&lt;/a&gt; - Python script that uses Empire's RESTful API to automate gaining Domain Admin rights in Active Directory environments.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.powershellempire.com/"&gt;Empire&lt;/a&gt; - Pure PowerShell post-exploitation agent.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rabbitstack/fibratus"&gt;Fibratus&lt;/a&gt; - Tool for exploration and tracing of the Windows kernel.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Kevin-Robertson/Inveigh"&gt;Inveigh&lt;/a&gt; - Windows PowerShell ADIDNS/LLMNR/mDNS/NBNS spoofer/machine-in-the-middle tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/AlessandroZ/LaZagne"&gt;LaZagne&lt;/a&gt; - Credentials recovery project.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dafthack/MailSniper"&gt;MailSniper&lt;/a&gt; - Modular tool for searching through email in a Microsoft Exchange environment, gathering the Global Address List from Outlook Web Access (OWA) and Exchange Web Services (EWS), and more.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/PowerShellMafia/PowerSploit"&gt;PowerSploit&lt;/a&gt; - PowerShell Post-Exploitation Framework.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trustedsec/ridenum"&gt;RID_ENUM&lt;/a&gt; - Python script that can enumerate all users from a Windows Domain Controller and crack those user's passwords using brute-force.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/SpiderLabs/Responder"&gt;Responder&lt;/a&gt; - Link-Local Multicast Name Resolution (LLMNR), NBT-NS, and mDNS poisoner.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/GhostPack/Rubeus"&gt;Rubeus&lt;/a&gt; - Toolset for raw Kerberos interaction and abuses.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sensepost/ruler"&gt;Ruler&lt;/a&gt; - Abuses client-side Outlook features to gain a remote shell on a Microsoft Exchange server.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nccgroup/SCOMDecrypt"&gt;SCOMDecrypt&lt;/a&gt; - Retrieve and decrypt RunAs credentials stored within Microsoft System Center Operations Manager (SCOM) databases.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/sysinternals/downloads/sysinternals-suite"&gt;Sysinternals Suite&lt;/a&gt; - The Sysinternals Troubleshooting Utilities.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.ampliasecurity.com/research/windows-credentials-editor/"&gt;Windows Credentials Editor&lt;/a&gt; - Inspect logon sessions and add, change, list, and delete associated credentials, including Kerberos tickets.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/GDSSecurity/Windows-Exploit-Suggester"&gt;Windows Exploit Suggester&lt;/a&gt; - Detects potential missing patches on the target.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://blog.gentilkiwi.com/mimikatz"&gt;mimikatz&lt;/a&gt; - Credentials extraction tool for Windows operating system.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nccgroup/redsnarf"&gt;redsnarf&lt;/a&gt; - Post-exploitation tool for retrieving password hashes and credentials from Windows workstations, servers, and domain controllers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://labs.mwrinfosecurity.com/tools/wepwnise/"&gt;wePWNise&lt;/a&gt; - Generates architecture independent VBA code to be used in Office documents or templates and automates bypassing application control and exploit mitigation software.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/SecureThisShit/WinPwn"&gt;WinPwn&lt;/a&gt; - Internal penetration test script to perform local and domain reconnaissance, privilege escalation and exploitation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#license"&gt;
  &lt;/a&gt;
  License
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://creativecommons.org/licenses/by/4.0/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0Pl6feko--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mirrors.creativecommons.org/presskit/buttons/88x31/svg/by.svg" alt="CC-BY"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This work is licensed under a &lt;a href="https://creativecommons.org/licenses/by/4.0/"&gt;Creative Commons Attribution 4.0 International License&lt;/a&gt;.&lt;/p&gt;



&lt;h3&gt;Connect with me:&lt;/h3&gt;

&lt;p&gt;
&lt;a href="https://discord.gg/HKxUV6jXPj"&gt;
  &lt;img alt="AmnaAbd's Discord" src="https://res.cloudinary.com/practicaldev/image/fetch/s--qpcpFaS3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/peterthehan/peterthehan/master/assets/discord.svg"&gt;
&lt;/a&gt;
&lt;a href="https://twitter.com/AmnaAbd22"&gt;
  &lt;img alt="Amna Abdallah | Twitter" src="https://res.cloudinary.com/practicaldev/image/fetch/s--55PHPPhV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/peterthehan/peterthehan/master/assets/twitter.svg"&gt;
&lt;/a&gt;
&lt;a href="https://www.linkedin.com/in/amna-abdallah-2b615572/"&gt;
  &lt;img alt="AmnaAbd's LinkedIN" src="https://res.cloudinary.com/practicaldev/image/fetch/s--opORli7b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/peterthehan/peterthehan/master/assets/linkedin.svg"&gt;
&lt;/a&gt;
&lt;a href="https://open.spotify.com/user/vzhpqhqmrep0yz70cxzpi45b5"&gt;
  &lt;img alt="Amna's Spotify" src="https://res.cloudinary.com/practicaldev/image/fetch/s--mBvRh3aP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/peterthehan/peterthehan/master/assets/spotify.svg"&gt;
&lt;/a&gt;
&lt;a href="https://codepen.io/AmnaAbd"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--myiCxFTx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.jsdelivr.net/npm/simple-icons%403.0.1/icons/codepen.svg" alt="amnaabd"&gt;&lt;/a&gt;
&lt;a href="https://dev.to/amnaabd"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ec4IN74C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.jsdelivr.net/npm/simple-icons%403.0.1/icons/dev-dot-to.svg" alt="amnaabd"&gt;&lt;/a&gt;
&lt;a href="https://instagram.com/amna.amouna.3114"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6jSVYXZc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.jsdelivr.net/npm/simple-icons%403.0.1/icons/instagram.svg" alt="amnaabd"&gt;&lt;/a&gt;
&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>terraform</category>
      <category>webdev</category>
      <category>security</category>
    </item>
    <item>
      <title>Jaeger vs New Relic - Key differences, use-cases and alternatives</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Wed, 06 Oct 2021 13:15:45 +0000</pubDate>
      <link>https://dev.to/signoz/jaeger-vs-new-relic-key-differences-use-cases-and-alternatives-74p</link>
      <guid>https://dev.to/signoz/jaeger-vs-new-relic-key-differences-use-cases-and-alternatives-74p</guid>
      <description>&lt;p&gt;Jaeger and New Relic are tools used in the application monitoring and observability domain. While Jaeger is an open source tool under Cloud Native Computing Foundation, New Relic is a SaaS vendor in the observability domain. Let us explore the key differences between Jaeger and New Relic in this article.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;New Relic is an extensive SaaS tool and provides application performance as well as infrastructure monitoring. Jaeger provides an open-source solution for end-to-end distributed tracing. Before we dive in, let's first understand in brief what is distributed tracing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-distributed-tracing"&gt;
  &lt;/a&gt;
  What is distributed tracing?
&lt;/h2&gt;

&lt;p&gt;Distributed tracing gives you insight into how a particular service is performing as part of the whole in a distributed software system. In a microservice architecture, a transaction can travel through hundreds of services before completing a user request. So how do you know the exact cause of issues causing latency?&lt;/p&gt;

&lt;p&gt;That's where distributed tracing comes into the picture. User requests are broken down into spans.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What are spans?&lt;br&gt;&lt;br&gt;
Spans represent a single operation within a trace. Thus, it represents work done by a single service which can be broken down further depending on the use case.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A trace context is passed along when requests travel between services, which tracks a user request across services. You can see how a user request performs across services and identify what exactly needs your attention without manually shifting through multiple dashboards.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZXTMH1wS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/opentelemetry_distributed_tracing-min.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZXTMH1wS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/opentelemetry_distributed_tracing-min.png" alt="Trace context is passed to track user requests across services"&gt;&lt;/a&gt;A trace context is passed when user requests pass from one service to another&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-features-of-jaeger"&gt;
  &lt;/a&gt;
  Key Features of Jaeger
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.jaegertracing.io/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Jaeger&lt;/b&gt;&lt;/a&gt; was originally built by teams at Uber and then open-sourced. It is used for end-to-end distributed tracing for microservices. Some of the key features of Jaeger includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Distributed context propagation&lt;/strong&gt;&lt;br&gt;
One of the challenges of distributed systems is to have a standard format for passing context across process boundaries and services. Jaeger provides client libraries that supports code instrumentation in multiple languages to propagate context across services&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Distributed transaction monitoring&lt;/strong&gt;&lt;br&gt;
Jaeger comes with a web UI written in Javascript. The dashboard can be used to see traces and spans across services.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Root Cause Analysis&lt;/strong&gt;&lt;br&gt;
Using traces you can drill down to services  causing latency in particular user request.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Server dependency analysis&lt;/strong&gt;&lt;br&gt;
Using Jaeger's web UI, you can see how requests flow through different services and different servers interact while serving user requets.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Performance/latency optimization&lt;/strong&gt;&lt;br&gt;
Once you have identified, which service or query is creating latency, you can use the information to optimize it.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PBiBbLYG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/jaeger_ui-min.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PBiBbLYG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/jaeger_ui-min.png" alt="Jaeger's UI showing traces"&gt;&lt;/a&gt;Jaeger's UI showing traces for selected services&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-features-of-new-relic"&gt;
  &lt;/a&gt;
  Key Features of New Relic
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://newrelic.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;New Relic&lt;/b&gt;&lt;/a&gt; is one of the oldest companies in the observability domain. Its observability tool enables you to visualize, analyze and troubleshoot your software stack in one platform. It also supports auto-instrumentation for eight popular programming languages.&lt;/p&gt;

&lt;p&gt;Some of the key features and services that New Relic provides:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Infrastructure monitoring&lt;/strong&gt;&lt;br&gt;
New Relic can connect your application performance with your infrastructure health to provide you better insights for quick troubleshooting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Telemetry Data platform&lt;/strong&gt;&lt;br&gt;
It provides 300+ agents and integrations, including OpenTelemetry to ingest all kinds of telemetry data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;AIOps&lt;/strong&gt;&lt;br&gt;
New relic also provides artificial intelligence capabilities to detect, diagnose and resolve issues before customer notices.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Log management&lt;/strong&gt;&lt;br&gt;
You can also deploy log management using New Relic. It provides a fast query service on top of your log data so that you're always on top of your log data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Integrations with tools and open standards&lt;/strong&gt;&lt;br&gt;
New Relic provides integrations with all leading cloud providers and also supports popular open-source standards like OpenTelemetry.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rkx4gHgh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/New_relic_dashboard-min.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rkx4gHgh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/New_relic_dashboard-min.png" alt="New Relic Dashboard"&gt;&lt;/a&gt;New Relic Dashboard (Source: New Relic website)&lt;/p&gt;

&lt;p&gt;As New Relic is a SaaS vendor, it is not free. Standard offering includes plans for teams up to 5 full users. Their pricing depends on the amount of data ingested with 100 GB free data ingest and $0.25 per extra GB.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comparing-jaeger-and-new-relic"&gt;
  &lt;/a&gt;
  Comparing Jaeger and New Relic
&lt;/h2&gt;

&lt;p&gt;From the description above, you might have a good idea about the differences between Jaeger and New Relic. The key difference between the two projects is their scope. While Jaeger is an end-to-end distributed tracing tool, New Relic is a SaaS vendor offering many out-of-the-box services.&lt;/p&gt;

&lt;p&gt;Apart from distributed tracing, New Relic offers log management, infrastructure monitoring, network monitoring, and application monitoring. It also provides AIOps capabilities.&lt;/p&gt;

&lt;p&gt;Let's focus on the distributed tracing capabilities of both the tools and see their key differences:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Jaeger's instrumentation is based on &lt;a href="https://opentracing.io/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;OpenTracing&lt;/b&gt;&lt;/a&gt; standards, and it provides client libraries in the following languages: Go, Java, Node.js, Python, C++, and C#. New Relic provides APM language agents for C, Go, Java, Node.js, .NET, PHP, Python, and Ruby to help you get started with distributed tracing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Jaeger offers two popular open-source databases for storing trace data: Cassandra and Elasticsearch. New Relic offers its own custom-built time-series database called New Relic Database to store trace data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;New Relic's tracing UI is more elaborate than Jaeger's, as you can relate data from other types of monitoring in a single dashboard.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n-gHkpDw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/new_relic_distributed_tracing-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n-gHkpDw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/new_relic_distributed_tracing-min.jpg" alt="New Relic Dashboard"&gt;&lt;/a&gt;New Relic's distributed tracing dashboard (Source: New Relic Website)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qEk5a2BH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/jaeger_gantt_charts-min.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qEk5a2BH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/jaeger_gantt_charts-min.png" alt="Jaeger's distributed tracing UI"&gt;&lt;/a&gt;Jaeger's distributed tracing UI&lt;/p&gt;

&lt;p&gt;It's no surprise that New Relic has better features than Jaeger as it's paid. Pricing of most APM tools is not cheap, and the call to use one should be made on the basis of your business impact.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#alternative-to-jaeger-and-new-relic"&gt;
  &lt;/a&gt;
  Alternative to Jaeger and New Relic
&lt;/h2&gt;

&lt;p&gt;Jaeger and New Relic are both established tools in the observability domain. But Jaeger fells short on providing a robust observability framework since it only does distributed tracing. SaaS vendors like New Relic come with their own set of concerns, like sending your data to a 3rd party cloud vendor.&lt;/p&gt;

&lt;p&gt;That's where &lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt; comes into the picture. &lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt; is a full-stack open-source application performance monitoring and observability tool which can be used in place of Jaeger. SigNoz is built to support OpenTelemetry natively. It also provides users flexibility in terms of storage. You can choose between ClickHouse or Kafka + Druid as your backend storage while installing SigNoz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6BdjoEB_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/SigNoz_architecture_clickhouse.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6BdjoEB_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/SigNoz_architecture_clickhouse.png" alt="Architecture of SigNoz with OpenTelemetry and ClickHouse"&gt;&lt;/a&gt;Architecture of SigNoz with ClickHouse as storage backend and OpenTelemetry for code instrumentatiion&lt;/p&gt;

&lt;p&gt;SigNoz comes with out of box visualization of things like RED metrics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OKFqZ_PP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_charts_application_metrics.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OKFqZ_PP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_charts_application_metrics.png" alt="SigNoz UI showing the popular RED metrics"&gt;&lt;/a&gt;SigNoz UI showing application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/p&gt;

&lt;p&gt;Some of the things SigNoz can help you track:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/li&gt;
&lt;li&gt;Slowest endpoints in your application&lt;/li&gt;
&lt;li&gt;See exact request trace to figure out issues in downstream services, slow DB queries, call to 3rd party services like payment gateways, etc&lt;/li&gt;
&lt;li&gt;Filter traces by service name, operation, latency, error, tags/annotations.&lt;/li&gt;
&lt;li&gt;Run aggregates on trace data&lt;/li&gt;
&lt;li&gt;Unified UI for both metrics and traces&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can check out SigNoz's GitHub repo here 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>microservices</category>
      <category>monitoring</category>
      <category>tracing</category>
      <category>jaeger</category>
    </item>
  </channel>
</rss>
