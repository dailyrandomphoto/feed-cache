<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Secure our website  using JWT (JSON Web Token) in nodeJS or expressJS</title>
      <author>Deepak</author>
      <pubDate>Sat, 18 Dec 2021 13:14:55 +0000</pubDate>
      <link>https://dev.to/deepakjaiswal/secure-our-website-using-jwt-json-web-token-in-nodejs-or-expressjs-5a7d</link>
      <guid>https://dev.to/deepakjaiswal/secure-our-website-using-jwt-json-web-token-in-nodejs-or-expressjs-5a7d</guid>
      <description>&lt;h2&gt;
  &lt;a href="#here-we-are-using-jwt-to-secure-our-application-or-website-from-unauthenticated-user-they-try-to-access-our-data"&gt;
  &lt;/a&gt;
  here we are using JWT to secure our application or website from unauthenticated user they try to access our data.
&lt;/h2&gt;

&lt;p&gt;In npmjs a library named is &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;jsonwebtoken &lt;/p&gt;

&lt;p&gt;npm i jsonwebtoken&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;if we only check user isAuthenticated or not we simply pass the middleware in between request and response&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#authjs"&gt;
  &lt;/a&gt;
  auth.js
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;export default function getTokenFromUser(req: Request) {&lt;br&gt;
  const authorization = req.headers.token;&lt;br&gt;
  var decoded = jwt.verify(authorization, 'secret');&lt;br&gt;
  if (!decoded) {&lt;br&gt;
    throw new TokenError("No Authorization Header");&lt;br&gt;
  }&lt;br&gt;
  try {&lt;br&gt;
    const token = decoded?.split("User data ")[1];&lt;br&gt;
    return token;&lt;br&gt;
  } catch {&lt;br&gt;
    throw new TokenError("Invalid Token Format");&lt;br&gt;
  }&lt;br&gt;
}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;we simple pass this auth of in between req,res&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;app.post('/api/post',auth,(req,res)=&amp;gt;{
//if some operation on code we use middleware
const token=jwt.sign({
  data: 'your data to store as token'
}, 'secret', { expiresIn: '1h' });

res.header('token',token).send("success")
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;we ensure that you can save your secret key in your config file.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>9 Open Source Python Projects to join in 2022! </title>
      <author>Code_Jedi</author>
      <pubDate>Sat, 18 Dec 2021 12:16:45 +0000</pubDate>
      <link>https://dev.to/code_jedi/9-open-source-python-projects-to-join-in-2022-3c8o</link>
      <guid>https://dev.to/code_jedi/9-open-source-python-projects-to-join-in-2022-3c8o</guid>
      <description>&lt;p&gt;Contributing to open source projects is great for your reputation, skill development and knowledge as a developer.&lt;br&gt;
In this article, I will be going through 9 open source Python projects that you can join today!&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#9-django"&gt;
  &lt;/a&gt;
  9. Django
&lt;/h1&gt;

&lt;p&gt;Ah yes, the famous web development framework made for Python. It has more than 60k stars on Github and is used by millions of Python developers around the world.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/django"&gt;
        django
      &lt;/a&gt; / &lt;a href="https://github.com/django/django"&gt;
        django
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The Web framework for perfectionists with deadlines.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="rst"&gt;
&lt;h1&gt;
Django&lt;/h1&gt;
&lt;p&gt;Django is a high-level Python web framework that encourages rapid development
and clean, pragmatic design. Thanks for checking it out.&lt;/p&gt;
&lt;p&gt;All documentation is in the "&lt;code&gt;docs&lt;/code&gt;" directory and online at
&lt;a href="https://docs.djangoproject.com/en/stable/" rel="nofollow"&gt;https://docs.djangoproject.com/en/stable/&lt;/a&gt;. If you're just getting started
here's how we recommend you read the docs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First, read &lt;code&gt;docs/intro/install.txt&lt;/code&gt; for instructions on installing Django.&lt;/li&gt;
&lt;li&gt;Next, work through the tutorials in order (&lt;code&gt;docs/intro/tutorial01.txt&lt;/code&gt;
&lt;code&gt;docs/intro/tutorial02.txt&lt;/code&gt;, etc.).&lt;/li&gt;
&lt;li&gt;If you want to set up an actual deployment server, read
&lt;code&gt;docs/howto/deployment/index.txt&lt;/code&gt; for instructions.&lt;/li&gt;
&lt;li&gt;You'll probably want to read through the topical guides (in &lt;code&gt;docs/topics&lt;/code&gt;)
next; from there you can jump to the HOWTOs (in &lt;code&gt;docs/howto&lt;/code&gt;) for specific
problems, and check out the reference (&lt;code&gt;docs/ref&lt;/code&gt;) for gory details.&lt;/li&gt;
&lt;li&gt;See &lt;code&gt;docs/README&lt;/code&gt; for instructions on building an HTML version of the docs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Docs are updated rigorously. If you find any problems in the docs, or think
they should be…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/django/django"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;If you have experience with web development in Python and are looking to join an open source project, Django is the project for you!&lt;br&gt;
Start contributing to Django &lt;a href="https://docs.djangoproject.com/en/dev/internals/contributing/#:~:text=Contributing%20to%20Django%20Django%20is%20a%20community%20that,the%20framework%20itself%20or%20in%20the%20wider%20ecosystem."&gt;here&lt;/a&gt;.&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#8-scrapy"&gt;
  &lt;/a&gt;
  8. Scrapy
&lt;/h1&gt;

&lt;p&gt;Scrapy is the most popular Python web scraping library with over 40k stars on github.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/scrapy"&gt;
        scrapy
      &lt;/a&gt; / &lt;a href="https://github.com/scrapy/scrapy"&gt;
        scrapy
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Scrapy, a fast high-level web crawling &amp;amp; scraping framework for Python.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="rst"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/scrapy/scrapy/artwork/scrapy-logo.jpg"&gt;&lt;img alt="/artwork/scrapy-logo.jpg" src="https://res.cloudinary.com/practicaldev/image/fetch/s--RyQONOX8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/scrapy/scrapy/artwork/scrapy-logo.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Scrapy&lt;/h2&gt;
&lt;a href="https://pypi.python.org/pypi/Scrapy" rel="nofollow"&gt;&lt;img alt="PyPI Version" src="https://camo.githubusercontent.com/6e6da7d9936802efc8790230859776a579f5d783bc33d45ad76acaeff07748e8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f5363726170792e737667"&gt;
&lt;/a&gt;
&lt;a href="https://pypi.python.org/pypi/Scrapy" rel="nofollow"&gt;&lt;img alt="Supported Python Versions" src="https://camo.githubusercontent.com/a0ace508aac035c0728a9ccfacf3e1ee4e35064dfe46c0b106945a55f2c2bed6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f5363726170792e737667"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/scrapy/scrapy/actions?query=workflow%3AUbuntu"&gt;&lt;img alt="Ubuntu" src="https://res.cloudinary.com/practicaldev/image/fetch/s--4UA9znDq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/scrapy/scrapy/workflows/Ubuntu/badge.svg"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/scrapy/scrapy/actions?query=workflow%3AmacOS"&gt;&lt;img alt="macOS" src="https://res.cloudinary.com/practicaldev/image/fetch/s--UQFgCtQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/scrapy/scrapy/workflows/macOS/badge.svg"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/scrapy/scrapy/actions?query=workflow%3AWindows"&gt;&lt;img alt="Windows" src="https://res.cloudinary.com/practicaldev/image/fetch/s--QDYBLGMm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/scrapy/scrapy/workflows/Windows/badge.svg"&gt;
&lt;/a&gt;
&lt;a href="https://pypi.python.org/pypi/Scrapy" rel="nofollow"&gt;&lt;img alt="Wheel Status" src="https://camo.githubusercontent.com/ef40cf44e0798077b1588fd1043671d41ceb8c2718f66e08e83e39bce7fa994f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f776865656c2d7965732d627269676874677265656e2e737667"&gt;
&lt;/a&gt;
&lt;a href="https://codecov.io/github/scrapy/scrapy?branch=master" rel="nofollow"&gt;&lt;img alt="Coverage report" src="https://camo.githubusercontent.com/ab60318bd0f92f54d96ce365912c21cd459821f8e939c014484ce213ee751601/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f7363726170792f7363726170792f6d61737465722e737667"&gt;
&lt;/a&gt;
&lt;a href="https://anaconda.org/conda-forge/scrapy" rel="nofollow"&gt;&lt;img alt="Conda Version" src="https://camo.githubusercontent.com/39dd0624e0dd8d9b71b9831bf4225ff67aaab3ee36427834f9c97e9baf5a3d73/68747470733a2f2f616e61636f6e64612e6f72672f636f6e64612d666f7267652f7363726170792f6261646765732f76657273696f6e2e737667"&gt;
&lt;/a&gt;
&lt;h3&gt;
Overview&lt;/h3&gt;
&lt;p&gt;Scrapy is a fast high-level web crawling and web scraping framework, used to
crawl websites and extract structured data from their pages. It can be used for
a wide range of purposes, from data mining to monitoring and automated testing.&lt;/p&gt;
&lt;p&gt;Scrapy is maintained by &lt;a href="https://www.zyte.com/" rel="nofollow"&gt;Zyte&lt;/a&gt; (formerly Scrapinghub) and &lt;a href="https://github.com/scrapy/scrapy/graphs/contributors"&gt;many other
contributors&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check the Scrapy homepage at &lt;a href="https://scrapy.org" rel="nofollow"&gt;https://scrapy.org&lt;/a&gt; for more information
including a list of features.&lt;/p&gt;

&lt;h3&gt;
Requirements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Python 3.6+&lt;/li&gt;
&lt;li&gt;Works on Linux, Windows, macOS, BSD&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
Install&lt;/h3&gt;
&lt;p&gt;The quick way:&lt;/p&gt;
&lt;pre&gt;pip install scrapy
&lt;/pre&gt;
&lt;p&gt;See the install section in the documentation at
&lt;a href="https://docs.scrapy.org/en/latest/intro/install.html" rel="nofollow"&gt;https://docs.scrapy.org/en/latest/intro/install.html&lt;/a&gt; for more details.&lt;/p&gt;

&lt;h3&gt;
Documentation&lt;/h3&gt;
&lt;p&gt;Documentation is available online at &lt;a href="https://docs.scrapy.org/" rel="nofollow"&gt;https://docs.scrapy.org/&lt;/a&gt; and in the &lt;code&gt;docs&lt;/code&gt;
directory.&lt;/p&gt;

&lt;h3&gt;
Releases&lt;/h3&gt;
&lt;p&gt;You can check &lt;a href="https://docs.scrapy.org/en/latest/news.html" rel="nofollow"&gt;https://docs.scrapy.org/en/latest/news.html&lt;/a&gt; for the release notes.&lt;/p&gt;

&lt;h3&gt;
Community (blog, twitter, mail list, IRC)&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://scrapy.org/community/" rel="nofollow"&gt;https://scrapy.org/community/&lt;/a&gt; for details.&lt;/p&gt;

&lt;h3&gt;
Contributing&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://docs.scrapy.org/en/master/contributing.html" rel="nofollow"&gt;https://docs.scrapy.org/en/master/contributing.html&lt;/a&gt; for details.&lt;/p&gt;

&lt;h4&gt;
Code of Conduct&lt;/h4&gt;
&lt;p&gt;Please note that this project is released with a Contributor Code of Conduct
(see &lt;a href="https://github.com/scrapy/scrapy/blob/master/CODE_OF_CONDUCT.md"&gt;https://github.com/scrapy/scrapy/blob/master/CODE_OF_CONDUCT.md&lt;/a&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/scrapy/scrapy"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;If you're into web scraping with Python and want to work on improving the web scraping library used by thousands of Python developers, start contributing to Scrapy through &lt;a href="https://docs.scrapy.org/en/latest/contributing.html"&gt;this page&lt;/a&gt;.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#7-scikitlearn"&gt;
  &lt;/a&gt;
  7. Scikit-Learn
&lt;/h1&gt;

&lt;p&gt;If you've been involved in machine learning with Python for some time, you've probably come across this library.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/scikit-learn"&gt;
        scikit-learn
      &lt;/a&gt; / &lt;a href="https://github.com/scikit-learn/scikit-learn"&gt;
        scikit-learn
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      scikit-learn: machine learning in Python
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="rst"&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/scikit-learn/scikit-learn/_build/latest?definitionId=1&amp;amp;branchName=main" rel="nofollow"&gt;&lt;img alt="Azure" src="https://camo.githubusercontent.com/20eae0ee5a048822868c22e93ae8fb0fdcf46865a8efdd220e331c6d156d1975/68747470733a2f2f6465762e617a7572652e636f6d2f7363696b69742d6c6561726e2f7363696b69742d6c6561726e2f5f617069732f6275696c642f7374617475732f7363696b69742d6c6561726e2e7363696b69742d6c6561726e3f6272616e63684e616d653d6d61696e"&gt;&lt;/a&gt; &lt;a href="https://app.travis-ci.com/github/scikit-learn/scikit-learn" rel="nofollow"&gt;&lt;img alt="Travis" src="https://camo.githubusercontent.com/2bcce572d6e2cc6efb45f0257d1c407f6ce921e7fc87b808d4286b37eb6eecf8/68747470733a2f2f6170692e7472617669732d63692e636f6d2f7363696b69742d6c6561726e2f7363696b69742d6c6561726e2e7376673f6272616e63683d6d61696e"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/scikit-learn/scikit-learn" rel="nofollow"&gt;&lt;img alt="Codecov" src="https://camo.githubusercontent.com/4218349860fdfb6262472f8bb560a803676b400086465d55a6419d7c04f8697d/68747470733a2f2f636f6465636f762e696f2f67682f7363696b69742d6c6561726e2f7363696b69742d6c6561726e2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d506b3847396767337939"&gt;&lt;/a&gt; &lt;a href="https://circleci.com/gh/scikit-learn/scikit-learn" rel="nofollow"&gt;&lt;img alt="CircleCI" src="https://camo.githubusercontent.com/76759ef257ed71d5317b754c37e2549d4baeae912a830a1d256c2001575614aa/68747470733a2f2f636972636c6563692e636f6d2f67682f7363696b69742d6c6561726e2f7363696b69742d6c6561726e2f747265652f6d61696e2e7376673f7374796c653d736869656c6426636972636c652d746f6b656e3d3a636972636c652d746f6b656e"&gt;&lt;/a&gt; &lt;a href="https://github.com/scikit-learn/scikit-learn/actions?query=workflow%3A%22Wheel+builder%22+event%3Aschedule"&gt;&lt;img alt="Nightly wheels" src="https://res.cloudinary.com/practicaldev/image/fetch/s--b0JLZYPo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/scikit-learn/scikit-learn/workflows/Wheel%2520builder/badge.svg%3Fevent%3Dschedule"&gt;&lt;/a&gt; &lt;a href="https://github.com/psf/black"&gt;&lt;img alt="Black" src="https://camo.githubusercontent.com/d91ed7ac7abbd5a6102cbe988dd8e9ac21bde0a73d97be7603b891ad08ce3479/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667"&gt;
&lt;/a&gt; &lt;a href="https://img.shields.io/badge/python-3.7%20%7C%203.8%20%7C%203.9-blue" rel="nofollow"&gt;&lt;img alt="PythonVersion" src="https://camo.githubusercontent.com/acc13c1b7f5461decb407bb7549ffe06b887fa463a6529b784650aebfffa9886/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e37253230253743253230332e38253230253743253230332e392d626c7565"&gt;&lt;/a&gt; &lt;a href="https://pypi.org/project/scikit-learn" rel="nofollow"&gt;&lt;img alt="PyPi" src="https://camo.githubusercontent.com/4d84e5e8df28f93d6758e9a0827080d454cbe8c7779cfde157060184c97a49ac/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7363696b69742d6c6561726e"&gt;&lt;/a&gt; &lt;a href="https://zenodo.org/badge/latestdoi/21369/scikit-learn/scikit-learn" rel="nofollow"&gt;&lt;img alt="DOI" src="https://camo.githubusercontent.com/d15c5bb658dcbd6e1c6e889ac6332fcbde13031b233bc49229e36357a9b8f482/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f32313336392f7363696b69742d6c6561726e2f7363696b69742d6c6561726e2e737667"&gt;
&lt;/a&gt; &lt;a href="https://scikit-learn.org/scikit-learn-benchmarks/" rel="nofollow"&gt;&lt;img alt="Benchmark" src="https://camo.githubusercontent.com/5ce113299e92d5264298d3e71c9bb0c44199849a70b57406a97fcc94057488d1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f42656e63686d61726b656425323062792d6173762d626c7565"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;a href="https://scikit-learn.org/" rel="nofollow"&gt;&lt;img alt="https://raw.githubusercontent.com/scikit-learn/scikit-learn/main/doc/logos/scikit-learn-logo.png" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8pGzwEZ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/scikit-learn/scikit-learn/main/doc/logos/scikit-learn-logo.png"&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;scikit-learn&lt;/strong&gt; is a Python module for machine learning built on top of
SciPy and is distributed under the 3-Clause BSD license.&lt;/p&gt;
&lt;p&gt;The project was started in 2007 by David Cournapeau as a Google Summer
of Code project, and since then many volunteers have contributed. See
the &lt;a href="https://scikit-learn.org/dev/about.html#authors" rel="nofollow"&gt;About us&lt;/a&gt; page
for a list of core contributors.&lt;/p&gt;
&lt;p&gt;It is currently maintained by a team of volunteers.&lt;/p&gt;
&lt;p&gt;Website: &lt;a href="https://scikit-learn.org" rel="nofollow"&gt;https://scikit-learn.org&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;h3&gt;
Dependencies&lt;/h3&gt;
&lt;p&gt;scikit-learn requires:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python (&amp;gt;= 3.7)&lt;/li&gt;
&lt;li&gt;NumPy (&amp;gt;= 1.14.6)&lt;/li&gt;
&lt;li&gt;SciPy (&amp;gt;= 1.1.0)&lt;/li&gt;
&lt;li&gt;joblib (&amp;gt;= 0.11)&lt;/li&gt;
&lt;li&gt;threadpoolctl (&amp;gt;= 2.0.0)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Scikit-learn 0.20 was the last version to support Python 2.7 and Python 3.4.&lt;/strong&gt;
scikit-learn 0.23 and later require Python 3.6 or newer
scikit-learn 1.0 and later require Python 3.7 or newer.&lt;/p&gt;
&lt;p&gt;Scikit-learn plotting capabilities (i.e., functions start with &lt;code&gt;plot_&lt;/code&gt; and
classes end with "Display") require Matplotlib (&amp;gt;= 2.2.3)
For running the examples Matplotlib &amp;gt;= 2.2.3 is required.
A few examples require scikit-image &amp;gt;= 0.14.5, a…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/scikit-learn/scikit-learn"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;If you have experience with machine learning and data visualization with Python and want to contribute to one of the most popular Python machine learning libraries, start contributing to scikit-learn &lt;a href="https://scikit-learn.org/stable/developers/contributing.html"&gt;here&lt;/a&gt;.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#6-pandas"&gt;
  &lt;/a&gt;
  6. Pandas
&lt;/h1&gt;

&lt;p&gt;Pandas is the most popular data analysis/manipulation library for Python.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pandas-dev"&gt;
        pandas-dev
      &lt;/a&gt; / &lt;a href="https://github.com/pandas-dev/pandas"&gt;
        pandas
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Flexible and powerful data analysis / manipulation library for Python, providing labeled data structures similar to R data.frame objects, statistical functions, and much more
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/981d48e57e23a4907cebc4eb481799b5882595ea978261f22a3e131dcd6ebee6/68747470733a2f2f70616e6461732e7079646174612e6f72672f7374617469632f696d672f70616e6461732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/981d48e57e23a4907cebc4eb481799b5882595ea978261f22a3e131dcd6ebee6/68747470733a2f2f70616e6461732e7079646174612e6f72672f7374617469632f696d672f70616e6461732e737667"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/div&gt;

&lt;h1&gt;
pandas: powerful Python data analysis toolkit&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://pypi.org/project/pandas/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/74cb3c88c43d4266705ae6ec7fddc1bbf603eb6d15bf2202ceb3416cd26b7c0d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70616e6461732e737667" alt="PyPI Latest Release"&gt;&lt;/a&gt;
&lt;a href="https://anaconda.org/anaconda/pandas/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3946e75037eae5c757c1f87dca16d9308da064caedba9966f56622d7426a0176/68747470733a2f2f616e61636f6e64612e6f72672f636f6e64612d666f7267652f70616e6461732f6261646765732f76657273696f6e2e737667" alt="Conda Latest Release"&gt;&lt;/a&gt;
&lt;a href="https://doi.org/10.5281/zenodo.3509134" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dc1862109b52a1a02893ed309db67a17104c54b66e050dee3d23c858c2514140/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e333530393133342e737667" alt="DOI"&gt;&lt;/a&gt;
&lt;a href="https://pypi.org/project/pandas/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/caf1bfd611737461f1d62e150d6753e05602727131be954051dd3a41dc901101/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f70616e6461732e737667" alt="Package Status"&gt;&lt;/a&gt;
&lt;a href="https://github.com/pandas-dev/pandas/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/810dee2f0ccde96614200a43630598d77394709e8699d531d6c6f7bbaaf53841/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f70616e6461732e737667" alt="License"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/pandas-dev/pandas/_build/latest?definitionId=1&amp;amp;branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ea3fd2ce7f1812de38f19234b73bf9058233f5f4e28b1967196121463ad4f49c/68747470733a2f2f6465762e617a7572652e636f6d2f70616e6461732d6465762f70616e6461732f5f617069732f6275696c642f7374617475732f70616e6461732d6465762e70616e6461733f6272616e63683d6d6173746572" alt="Azure Build Status"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/pandas-dev/pandas" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a47a452ac4b46e7072ea605773a8175580826ef69da550de1f409f3d642429dc/68747470733a2f2f636f6465636f762e696f2f6769746875622f70616e6461732d6465762f70616e6461732f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="Coverage"&gt;&lt;/a&gt;
&lt;a href="https://pepy.tech/project/pandas" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5b1c7be9058d78c455dc07ff2d2da7f4042ddafb85d1061a88ff11be195dcd23/68747470733a2f2f7374617469632e706570792e746563682f706572736f6e616c697a65642d62616467652f70616e6461733f706572696f643d6d6f6e746826756e6974733d696e7465726e6174696f6e616c5f73797374656d266c6566745f636f6c6f723d626c61636b2672696768745f636f6c6f723d6f72616e6765266c6566745f746578743d50795049253230646f776e6c6f6164732532307065722532306d6f6e7468" alt="Downloads"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/pydata/pandas" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5dbac0213da25c445bd11f168587c11a200ba153ef3014e8408e462e410169b3/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter"&gt;&lt;/a&gt;
&lt;a href="https://numfocus.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/42ca0da5f59b4fa9dd410434fa62cf8942c437d06669273fa7783c15d1be9cee/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706f776572656425323062792d4e756d464f4355532d6f72616e67652e7376673f7374796c653d666c617426636f6c6f72413d45313532334426636f6c6f72423d303037443841" alt="Powered by NumFOCUS"&gt;&lt;/a&gt;
&lt;a href="https://github.com/psf/black"&gt;&lt;img src="https://camo.githubusercontent.com/d91ed7ac7abbd5a6102cbe988dd8e9ac21bde0a73d97be7603b891ad08ce3479/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667" alt="Code style: black"&gt;&lt;/a&gt;
&lt;a href="https://pycqa.github.io/isort/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fe4a658dd745f746410f961ae45d44355db1cc0e4c09c7877d265c1380248943/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f253230696d706f7274732d69736f72742d2532333136373462313f7374796c653d666c6174266c6162656c436f6c6f723d656638333336" alt="Imports: isort"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
What is it?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;pandas&lt;/strong&gt; is a Python package that provides fast, flexible, and expressive data
structures designed to make working with "relational" or "labeled" data both
easy and intuitive. It aims to be the fundamental high-level building block for
doing practical, &lt;strong&gt;real world&lt;/strong&gt; data analysis in Python. Additionally, it has
the broader goal of becoming &lt;strong&gt;the most powerful and flexible open source data
analysis / manipulation tool available in any language&lt;/strong&gt;. It is already well on
its way towards this goal.&lt;/p&gt;
&lt;h2&gt;
Main Features&lt;/h2&gt;
&lt;p&gt;Here are just a few of the things that pandas does well:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Easy handling of &lt;a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/missing_data.html" rel="nofollow"&gt;&lt;strong&gt;missing data&lt;/strong&gt;&lt;/a&gt; (represented as
&lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;NA&lt;/code&gt;, or &lt;code&gt;NaT&lt;/code&gt;) in floating point as well as non-floating point data&lt;/li&gt;
&lt;li&gt;Size mutability: columns can be &lt;a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/dsintro.html#column-selection-addition-deletion" rel="nofollow"&gt;&lt;strong&gt;inserted and
deleted&lt;/strong&gt;&lt;/a&gt; from DataFrame and higher dimensional
objects&lt;/li&gt;
&lt;li&gt;Automatic and explicit &lt;a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/dsintro.html?highlight=alignment#intro-to-data-structures" rel="nofollow"&gt;&lt;strong&gt;data alignment&lt;/strong&gt;&lt;/a&gt;: objects can
be explicitly aligned…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pandas-dev/pandas"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;If you know how to work with data in Python and want to help build the future of data analysis/manipulation in Python, start contributing to pandas &lt;a href="https://pandas.pydata.org/pandas-docs/stable/development/contributing.html"&gt;here&lt;/a&gt;.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#5-flask"&gt;
  &lt;/a&gt;
  5. Flask
&lt;/h1&gt;

&lt;p&gt;Flask is another popular Python web development library with over 50k stars on Github.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pallets"&gt;
        pallets
      &lt;/a&gt; / &lt;a href="https://github.com/pallets/flask"&gt;
        flask
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The Python micro framework for building web applications.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="rst"&gt;
&lt;h1&gt;
Flask&lt;/h1&gt;
&lt;p&gt;Flask is a lightweight &lt;a href="https://wsgi.readthedocs.io/" rel="nofollow"&gt;WSGI&lt;/a&gt; web application framework. It is designed
to make getting started quick and easy, with the ability to scale up to
complex applications. It began as a simple wrapper around &lt;a href="https://werkzeug.palletsprojects.com/" rel="nofollow"&gt;Werkzeug&lt;/a&gt;
and &lt;a href="https://jinja.palletsprojects.com/" rel="nofollow"&gt;Jinja&lt;/a&gt; and has become one of the most popular Python web
application frameworks.&lt;/p&gt;
&lt;p&gt;Flask offers suggestions, but doesn't enforce any dependencies or
project layout. It is up to the developer to choose the tools and
libraries they want to use. There are many extensions provided by the
community that make adding new functionality easy.&lt;/p&gt;
&lt;h2&gt;
Installing&lt;/h2&gt;
&lt;p&gt;Install and update using &lt;a href="https://pip.pypa.io/en/stable/getting-started/" rel="nofollow"&gt;pip&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;$ pip install -U Flask
&lt;/pre&gt;
&lt;h2&gt;
A Simple Example&lt;/h2&gt;
&lt;div class="highlight highlight-source-python position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;# save this as app.py&lt;/span&gt;
&lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s1"&gt;flask&lt;/span&gt; &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;Flask&lt;/span&gt;

&lt;span class="pl-s1"&gt;app&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-v"&gt;Flask&lt;/span&gt;(&lt;span class="pl-s1"&gt;__name__&lt;/span&gt;)

&lt;span class="pl-en"&gt;@&lt;span class="pl-s1"&gt;app&lt;/span&gt;.&lt;span class="pl-en"&gt;route&lt;/span&gt;(&lt;span class="pl-s"&gt;"/"&lt;/span&gt;)&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;hello&lt;/span&gt;():
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;"Hello, World!"&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;pre&gt;$ flask run
  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
&lt;/pre&gt;

&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;For guidance on setting…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pallets/flask"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;If you're looking to help build the future of web development with Python, start contributing to flask &lt;a href="https://azcv.readthedocs.io/en/latest/contributing.html"&gt;here&lt;/a&gt;.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#4-requests"&gt;
  &lt;/a&gt;
  4. Requests
&lt;/h1&gt;

&lt;p&gt;Requests, the OG library used by millions that is used for making HTTP requests with Python. This might be pretty underwhelming, but you see, the requests library is used to connect to API endpoints, authenticate web connections, scrape data from the web, test web endpoints and more!&lt;br&gt;
Without the requests library, Python wouldn't be where it is today.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/psf"&gt;
        psf
      &lt;/a&gt; / &lt;a href="https://github.com/psf/requests"&gt;
        requests
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A simple, yet elegant, HTTP library.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Requests&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Requests&lt;/strong&gt; is a simple, yet elegant, HTTP library.&lt;/p&gt;
&lt;div class="highlight highlight-source-python position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c1"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s1"&gt;requests&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s1"&gt;r&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s1"&gt;requests&lt;/span&gt;.&lt;span class="pl-en"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;'https://api.github.com/user'&lt;/span&gt;, &lt;span class="pl-s1"&gt;auth&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;(&lt;span class="pl-s"&gt;'user'&lt;/span&gt;, &lt;span class="pl-s"&gt;'pass'&lt;/span&gt;))
&lt;span class="pl-c1"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s1"&gt;r&lt;/span&gt;.&lt;span class="pl-s1"&gt;status_code&lt;/span&gt;
&lt;span class="pl-c1"&gt;200&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s1"&gt;r&lt;/span&gt;.&lt;span class="pl-s1"&gt;headers&lt;/span&gt;[&lt;span class="pl-s"&gt;'content-type'&lt;/span&gt;]
&lt;span class="pl-s"&gt;'application/json; charset=utf8'&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s1"&gt;r&lt;/span&gt;.&lt;span class="pl-s1"&gt;encoding&lt;/span&gt;
&lt;span class="pl-s"&gt;'utf-8'&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s1"&gt;r&lt;/span&gt;.&lt;span class="pl-s1"&gt;text&lt;/span&gt;
&lt;span class="pl-s"&gt;'{"type":"User"...'&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-s1"&gt;r&lt;/span&gt;.&lt;span class="pl-en"&gt;json&lt;/span&gt;()
{&lt;span class="pl-s"&gt;'disk_usage'&lt;/span&gt;: &lt;span class="pl-c1"&gt;368627&lt;/span&gt;, &lt;span class="pl-s"&gt;'private_gists'&lt;/span&gt;: &lt;span class="pl-c1"&gt;484&lt;/span&gt;, ...}&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Requests allows you to send HTTP/1.1 requests extremely easily. There’s no need to manually add query strings to your URLs, or to form-encode your &lt;code&gt;PUT&lt;/code&gt; &amp;amp; &lt;code&gt;POST&lt;/code&gt; data — but nowadays, just use the &lt;code&gt;json&lt;/code&gt; method!&lt;/p&gt;
&lt;p&gt;Requests is one of the most downloaded Python packages today, pulling in around &lt;code&gt;30M downloads / week&lt;/code&gt;— according to GitHub, Requests is currently &lt;a href="https://github.com/psf/requests/network/dependents?package_id=UGFja2FnZS01NzA4OTExNg%3D%3D"&gt;depended upon&lt;/a&gt; by &lt;code&gt;500,000+&lt;/code&gt; repositories. You may certainly put your trust in this code.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pepy.tech/project/requests" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d4f511b33402ca109f324ccbd2a1106288cbeec458cd8073730503441b2ab936/68747470733a2f2f706570792e746563682f62616467652f72657175657374732f6d6f6e7468" alt="Downloads"&gt;&lt;/a&gt;
&lt;a href="https://pypi.org/project/requests" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6749e2352acc2dd44be9bcf1cfede548894131b6798c76cedb647c5448df5433/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f72657175657374732e737667" alt="Supported Versions"&gt;&lt;/a&gt;
&lt;a href="https://github.com/psf/requests/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/546be78b159c18e98376d504e9ea6a7450c1899f1c39b8102ac4494b567cd1ae/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f7073662f72657175657374732e737667" alt="Contributors"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Installing Requests&lt;/h2&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/psf/requests"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Start contributing to requests &lt;a href="https://docs.python-requests.org/en/latest/dev/contributing/"&gt;here&lt;/a&gt;.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#3-matplotlib"&gt;
  &lt;/a&gt;
  3. Matplotlib
&lt;/h1&gt;

&lt;p&gt;Matplotlib is the most popular data visualization library for Python. &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/matplotlib"&gt;
        matplotlib
      &lt;/a&gt; / &lt;a href="https://github.com/matplotlib/matplotlib"&gt;
        matplotlib
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      matplotlib: plotting with Python
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="rst"&gt;
&lt;p&gt;&lt;a href="https://badge.fury.io/py/matplotlib" rel="nofollow"&gt;&lt;img alt="PyPi" src="https://camo.githubusercontent.com/14cb8dc3674d1dc61b3251b07b0cffd1d17fc7edf8171dceca934826201f4891/68747470733a2f2f62616467652e667572792e696f2f70792f6d6174706c6f746c69622e737667"&gt;
&lt;/a&gt; &lt;a href="https://pepy.tech/project/matplotlib" rel="nofollow"&gt;&lt;img alt="Downloads" src="https://camo.githubusercontent.com/cb6bfebe68a6eb430e0c953877bb8cf23be68337aec6dcab6bd65ae0a71c7bee/68747470733a2f2f706570792e746563682f62616467652f6d6174706c6f746c69622f6d6f6e7468"&gt;&lt;/a&gt; &lt;a href="https://numfocus.org" rel="nofollow"&gt;&lt;img alt="NUMFocus" src="https://camo.githubusercontent.com/42ca0da5f59b4fa9dd410434fa62cf8942c437d06669273fa7783c15d1be9cee/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706f776572656425323062792d4e756d464f4355532d6f72616e67652e7376673f7374796c653d666c617426636f6c6f72413d45313532334426636f6c6f72423d303037443841"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://discourse.matplotlib.org" rel="nofollow"&gt;&lt;img alt="DiscourseBadge" src="https://camo.githubusercontent.com/37a2ae902beb5bcbdd5898b67f91662067241d07e35d269d6fe9de0aec60fca7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f68656c705f666f72756d2d646973636f757273652d626c75652e737667"&gt;
&lt;/a&gt; &lt;a href="https://gitter.im/matplotlib/matplotlib" rel="nofollow"&gt;&lt;img alt="Gitter" src="https://camo.githubusercontent.com/d80272f79ab7aeed2ea3bfbb2a2728c5914681414a7f91ccad955a622d42961e/68747470733a2f2f6261646765732e6769747465722e696d2f6d6174706c6f746c69622f6d6174706c6f746c69622e737667"&gt;
&lt;/a&gt; &lt;a href="https://github.com/matplotlib/matplotlib/issues"&gt;&lt;img alt="GitHubIssues" src="https://camo.githubusercontent.com/5e3863bec2a88b0ad9cdfc503064abc3c85bc3bd0e93a2550b50ae11efcb9917/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f69737375655f747261636b696e672d6769746875622d626c75652e737667"&gt;
&lt;/a&gt; &lt;a href="https://git-scm.com/book/en/v2/GitHub-Contributing-to-a-Project" rel="nofollow"&gt;&lt;img alt="GitTutorial" src="https://camo.githubusercontent.com/37e48b3ca9130628708aa78490bea23af8a3de7c42d66a54d8b433ca4c70a3c1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f50522d57656c636f6d652d2532334646383330302e7376673f"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/matplotlib/matplotlib/actions?query=workflow%3ATests"&gt;&lt;img alt="GitHubActions" src="https://res.cloudinary.com/practicaldev/image/fetch/s--kYJNaURl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/matplotlib/matplotlib/workflows/Tests/badge.svg"&gt;
&lt;/a&gt; &lt;a href="https://dev.azure.com/matplotlib/matplotlib/_build/latest?definitionId=1&amp;amp;branchName=main" rel="nofollow"&gt;&lt;img alt="AzurePipelines" src="https://camo.githubusercontent.com/ab26ffde10bfb68297abef2f1d46abf6271cee9d27ba35005dcfb1a2b60135bc/68747470733a2f2f6465762e617a7572652e636f6d2f6d6174706c6f746c69622f6d6174706c6f746c69622f5f617069732f6275696c642f7374617475732f6d6174706c6f746c69622e6d6174706c6f746c69623f6272616e63684e616d653d6d61696e"&gt;&lt;/a&gt; &lt;a href="https://ci.appveyor.com/project/matplotlib/matplotlib" rel="nofollow"&gt;&lt;img alt="AppVeyor" src="https://camo.githubusercontent.com/39a7add7af7ed5aab363c06749bac4047c8b65726c9b66053039ba6de4795d6c/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6d6174706c6f746c69622f6d6174706c6f746c69623f6272616e63683d6d61696e267376673d74727565"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/github/matplotlib/matplotlib?branch=main" rel="nofollow"&gt;&lt;img alt="Codecov" src="https://camo.githubusercontent.com/c004be0e30cc47e3b87e638d69df0fef792d5eb85648813f860f33450cb7109e/68747470733a2f2f636f6465636f762e696f2f6769746875622f6d6174706c6f746c69622f6d6174706c6f746c69622f62616467652e7376673f6272616e63683d6d61696e26736572766963653d676974687562"&gt;&lt;/a&gt; &lt;a href="https://lgtm.com/projects/g/matplotlib/matplotlib" rel="nofollow"&gt;&lt;img alt="LGTM" src="https://camo.githubusercontent.com/720d31b5d417a59438fef42b3c85cd6c7e15464e0777fcb8c2679519558513f5/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f707974686f6e2f6769746875622f6d6174706c6f746c69622f6d6174706c6f746c69622e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/109927a15915074d15313889468aa9aa688de3b9e38cc4359a01f665d351114e/68747470733a2f2f6d6174706c6f746c69622e6f72672f5f7374617469632f6c6f676f322e737667"&gt;&lt;img src="https://camo.githubusercontent.com/109927a15915074d15313889468aa9aa688de3b9e38cc4359a01f665d351114e/68747470733a2f2f6d6174706c6f746c69622e6f72672f5f7374617469632f6c6f676f322e737667"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Matplotlib is a comprehensive library for creating static, animated, and
interactive visualizations in Python.&lt;/p&gt;
&lt;p&gt;Check out our &lt;a href="https://matplotlib.org/" rel="nofollow"&gt;home page&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/daba81876385ae6bbe523f69083f914dcae4c3faaee87bdd1274197c1c9551c1/68747470733a2f2f6d6174706c6f746c69622e6f72672f5f7374617469632f726561646d655f707265766965772e706e67"&gt;&lt;img alt="https://matplotlib.org/_static/readme_preview.png" src="https://camo.githubusercontent.com/daba81876385ae6bbe523f69083f914dcae4c3faaee87bdd1274197c1c9551c1/68747470733a2f2f6d6174706c6f746c69622e6f72672f5f7374617469632f726561646d655f707265766965772e706e67"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Matplotlib produces publication-quality figures in a variety of hardcopy
formats and interactive environments across platforms. Matplotlib can be used
in Python scripts, the Python and IPython shell, web application servers, and
various graphical user interface toolkits.&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;p&gt;For installation instructions and requirements, see the &lt;a href="https://matplotlib.org/stable/users/installing/index.html" rel="nofollow"&gt;install documentation&lt;/a&gt; or
&lt;a href="https://github.com/matplotlib/matplotlibdoc/users/installing/index.rst"&gt;installing.rst&lt;/a&gt; in the source.&lt;/p&gt;
&lt;h2&gt;
Contribute&lt;/h2&gt;
&lt;p&gt;You've discovered a bug or something else you want to change - excellent!&lt;/p&gt;
&lt;p&gt;You've worked out a way to fix it – even better!&lt;/p&gt;
&lt;p&gt;You want to tell us about it – best of all!&lt;/p&gt;
&lt;p&gt;Start at the &lt;a href="https://matplotlib.org/devdocs/devel/contributing.html" rel="nofollow"&gt;contributing guide&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;
Contact&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://discourse.matplotlib.org/" rel="nofollow"&gt;Discourse&lt;/a&gt; is the discussion forum for
general questions and discussions and our recommended starting point.&lt;/p&gt;
&lt;p&gt;Our active mailing lists (which are mirrored on Discourse) are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://mail.python.org/mailman/listinfo/matplotlib-users" rel="nofollow"&gt;Users&lt;/a&gt; mailing
list: &lt;a href="https://github.com/matplotlib/matplotlibmailto:matplotlib-users@python.org"&gt;matplotlib-users@python.org&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://mail.python.org/mailman/listinfo/matplotlib-announce" rel="nofollow"&gt;Announcement&lt;/a&gt; mailing
list: &lt;a href="https://github.com/matplotlib/matplotlibmailto:matplotlib-announce@python.org"&gt;matplotlib-announce@python.org&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://mail.python.org/mailman/listinfo/matplotlib-devel" rel="nofollow"&gt;Development&lt;/a&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/matplotlib/matplotlib"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;If you're involved with data visualization with Python and want to contribute to the most used and versatile data visualization library in Python, start contributing to Matplotlib &lt;a href="https://matplotlib.org/stable/devel/contributing.html"&gt;here&lt;/a&gt;.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#2-keras"&gt;
  &lt;/a&gt;
  2. Keras
&lt;/h1&gt;

&lt;p&gt;With over 50k stars on Github, Keras is a simple, versatile and robust library for building neural networks with Python.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/keras-team"&gt;
        keras-team
      &lt;/a&gt; / &lt;a href="https://github.com/keras-team/keras"&gt;
        keras
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Deep Learning for humans
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Keras: Deep Learning for humans&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/906e661107a3bc03104ca5d88336d1f4b0e80fdcac65efaf7904041d371c747f/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6b657261732e696f2f696d672f6b657261732d6c6f676f2d323031382d6c617267652d313230302e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/906e661107a3bc03104ca5d88336d1f4b0e80fdcac65efaf7904041d371c747f/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6b657261732e696f2f696d672f6b657261732d6c6f676f2d323031382d6c617267652d313230302e706e67" alt="Keras logo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This repository hosts the development of the Keras library
Read the documentation at &lt;a href="https://keras.io/" rel="nofollow"&gt;keras.io&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
About Keras&lt;/h2&gt;
&lt;p&gt;Keras is a deep learning API written in Python
running on top of the machine learning platform &lt;a href="https://github.com/tensorflow/tensorflow"&gt;TensorFlow&lt;/a&gt;
It was developed with a focus on enabling fast experimentation.
&lt;em&gt;Being able to go from idea to result as fast as possible is key to doing good research.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Keras is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Simple&lt;/strong&gt; -- but not simplistic. Keras reduces developer &lt;em&gt;cognitive load&lt;/em&gt;
to free you to focus on the parts of the problem that really matter.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Flexible&lt;/strong&gt; -- Keras adopts the principle of &lt;em&gt;progressive disclosure of complexity&lt;/em&gt;
simple workflows should be quick and easy, while arbitrarily advanced workflows
should be &lt;em&gt;possible&lt;/em&gt; via a clear path that builds upon what you've already learned.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Powerful&lt;/strong&gt; -- Keras provides industry-strength performance and scalability
it is used by organizations and companies including NASA, YouTube,…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/keras-team/keras"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Start contributing to Keras &lt;a href="https://github.com/keras-team/keras-contrib"&gt;here&lt;/a&gt;.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#1-tensorflow"&gt;
  &lt;/a&gt;
  1. TensorFlow
&lt;/h1&gt;

&lt;p&gt;TensorFlow is a sophisticated Python neural network, deep learning and machine learning library used by millions with over 160k stars on Github. &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/tensorflow"&gt;
        tensorflow
      &lt;/a&gt; / &lt;a href="https://github.com/tensorflow/tensorflow"&gt;
        tensorflow
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      An Open Source Machine Learning Framework for Everyone
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/aeb4f612bd9b40d81c62fcbebd6db44a5d4344b8b962be0138817e18c9c06963/68747470733a2f2f7777772e74656e736f72666c6f772e6f72672f696d616765732f74665f6c6f676f5f686f72697a6f6e74616c2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/aeb4f612bd9b40d81c62fcbebd6db44a5d4344b8b962be0138817e18c9c06963/68747470733a2f2f7777772e74656e736f72666c6f772e6f72672f696d616765732f74665f6c6f676f5f686f72697a6f6e74616c2e706e67"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href="https://badge.fury.io/py/tensorflow" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a7b5b417de938c1faf3602c7f48f26fde8761a977be85390fd6c0d191e210ba8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f74656e736f72666c6f772e7376673f7374796c653d706c6173746963" alt="Python"&gt;&lt;/a&gt;
&lt;a href="https://badge.fury.io/py/tensorflow" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/52c9f14cae5a90816da6b63cc5c6b57c20fbe2788e643cf0ab8160d3cd9a9ecf/68747470733a2f2f62616467652e667572792e696f2f70792f74656e736f72666c6f772e737667" alt="PyPI"&gt;&lt;/a&gt;
&lt;a href="https://doi.org/10.5281/zenodo.4724125" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cbb1b583e9445f1dc96b629d833b9f51c1b32971f0def04f0bf4be181d08bff1/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e343732343132352e737667" alt="DOI"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;code&gt;Documentation&lt;/code&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.tensorflow.org/api_docs/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5fee71a94d467d0fa33c4469ad6e6ef356042a8ca784a0c0eae6a04796b77d38/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6170692d7265666572656e63652d626c75652e737667" alt="Documentation"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://www.tensorflow.org/" rel="nofollow"&gt;TensorFlow&lt;/a&gt; is an end-to-end open source platform
for machine learning. It has a comprehensive, flexible ecosystem of
&lt;a href="https://www.tensorflow.org/resources/tools" rel="nofollow"&gt;tools&lt;/a&gt;
&lt;a href="https://www.tensorflow.org/resources/libraries-extensions" rel="nofollow"&gt;libraries&lt;/a&gt;, and
&lt;a href="https://www.tensorflow.org/community" rel="nofollow"&gt;community&lt;/a&gt; resources that lets
researchers push the state-of-the-art in ML and developers easily build and
deploy ML-powered applications.&lt;/p&gt;
&lt;p&gt;TensorFlow was originally developed by researchers and engineers working on the
Google Brain team within Google's Machine Intelligence Research organization to
conduct machine learning and deep neural networks research. The system is
general enough to be applicable in a wide variety of other domains, as well.&lt;/p&gt;
&lt;p&gt;TensorFlow provides stable &lt;a href="https://www.tensorflow.org/api_docs/python" rel="nofollow"&gt;Python&lt;/a&gt;
and &lt;a href="https://www.tensorflow.org/api_docs/cc" rel="nofollow"&gt;C++&lt;/a&gt; APIs, as well as
non-guaranteed backward compatible API for
&lt;a href="https://www.tensorflow.org/api_docs" rel="nofollow"&gt;other languages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Keep up-to-date with release announcements and security updates by subscribing
to
&lt;a href="https://groups.google.com/a/tensorflow.org/forum/#!forum/announce" rel="nofollow"&gt;announce@tensorflow.org&lt;/a&gt;
See all the &lt;a href="https://www.tensorflow.org/community/forums" rel="nofollow"&gt;mailing lists&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://www.tensorflow.org/install" rel="nofollow"&gt;TensorFlow install guide&lt;/a&gt; for the
&lt;a href="https://www.tensorflow.org/install/pip" rel="nofollow"&gt;pip package&lt;/a&gt;, to
&lt;a href="https://www.tensorflow.org/install/gpu" rel="nofollow"&gt;enable GPU support&lt;/a&gt;, use a
&lt;a href="https://www.tensorflow.org/install/docker" rel="nofollow"&gt;Docker container&lt;/a&gt;, and
&lt;a href="https://www.tensorflow.org/install/source" rel="nofollow"&gt;build from source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/tensorflow/tensorflow"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Start contributing to TensorFlow &lt;a href="https://www.tensorflow.org/community/contribute"&gt;here&lt;/a&gt;.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;I hope that in this article, you've found the open source project that you would like to contribute to, and help build the future of Python.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#educative"&gt;
  &lt;/a&gt;
  Educative
&lt;/h2&gt;

&lt;p&gt;Before I end this article, I'd like to recommend &lt;a href="https://bit.ly/3rVIDoN"&gt;Educative&lt;/a&gt; for developers looking to learn.&lt;br&gt;
&lt;strong&gt;Why Educative?&lt;/strong&gt;&lt;br&gt;
It is home to hundreds of development courses, hands on tutorials, guides and demonstrations to help you stay ahead of the curve in your development journey.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You can get started with Educative &lt;a href="https://bit.ly/3EeDfAi"&gt;here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Byeeee👋&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>opensource</category>
      <category>github</category>
    </item>
    <item>
      <title>Let's Install Heroku CLI On Termux an android app.</title>
      <author>Shrikant Dhayje</author>
      <pubDate>Sat, 18 Dec 2021 11:53:05 +0000</pubDate>
      <link>https://dev.to/shriekdj/lets-install-heroku-cli-on-termux-an-android-app-19hb</link>
      <guid>https://dev.to/shriekdj/lets-install-heroku-cli-on-termux-an-android-app-19hb</guid>
      <description>&lt;p&gt;Today I Tried To Install Heroku CLI On Termux But It Does Not Worked i Tried To Install Nodejs First For Building The Heroku CLI From Built but It Does Not Work At All.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;apt install heroku&lt;/code&gt;&lt;br&gt;
does not work said heroku not available&lt;br&gt;
snapd package also unable to install on termux.&lt;br&gt;
and also when tried same error&lt;br&gt;
&lt;code&gt;npm install heroku&lt;/code&gt;&lt;br&gt;
it shows error &lt;em&gt;sudo&lt;/em&gt; permissions need&lt;/p&gt;

&lt;p&gt;At Last This Last Commands Worked&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;apt-get &lt;span class="nb"&gt;install &lt;/span&gt;proot-distro

proot-distro &lt;span class="nb"&gt;install &lt;/span&gt;ubuntu

proot-distro login ubuntu

apt-get &lt;span class="nb"&gt;install &lt;/span&gt;curl

curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You Can Run Ubuntu and Also Other Distro Like ArchLinux, Fedora, OpenSuse, etc.,&lt;/p&gt;

&lt;p&gt;I Know It Is Not A Good Practice to Install these Things On Android Mobile But termux also works on Android Television.&lt;/p&gt;

&lt;p&gt;You Can Use Your Android TV As Backup Linux Machine think About It.&lt;/p&gt;

</description>
      <category>termux</category>
      <category>ubuntu</category>
      <category>heroku</category>
      <category>android</category>
    </item>
    <item>
      <title>How Can You Get Noticed Without a Github Account?</title>
      <author>Fernando Doglio</author>
      <pubDate>Sat, 18 Dec 2021 11:47:14 +0000</pubDate>
      <link>https://dev.to/deleteman123/how-can-you-get-noticed-without-a-github-account-2h1h</link>
      <guid>https://dev.to/deleteman123/how-can-you-get-noticed-without-a-github-account-2h1h</guid>
      <description>&lt;p&gt;I’ve had conversations with many developers trying to understand how to get their first job without any experience. And my go-to solution is: create a Github account and start uploading code projects you’ve worked on. Either that, or create new ones and publish them there.&lt;/p&gt;

&lt;p&gt;Sadly, not everyone has access to Github, given how the platform is part of Microsoft and given the latter is a US company, it needs to comply with the US export law. Thus developers from countries such as Iran, Syria, Crimea and others are blocked by the platform.&lt;/p&gt;

&lt;p&gt;This puts a harsh roadblock in their chances of getting their first job, especially if they’re applying for a remote position or a freelance gig. Either way, the main code repository for developers is out of their reach, so how can they find ways to show what they know how to do?&lt;/p&gt;

&lt;p&gt;Let’s take a look at some options.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#build-a-wordpress-site"&gt;
  &lt;/a&gt;
  Build a WordPress site
&lt;/h2&gt;

&lt;p&gt;Granted, this is not a code repository, but we’re going barebone here.&lt;/p&gt;

&lt;p&gt;Other public code repositories like Bitbucket are also blocked in many countries, so we’re looking for alternatives.&lt;/p&gt;

&lt;p&gt;Wordress.com allows you to set up a blog for free, where you can add whatever content you want. So let’s take a look at this and consider the opportunity it represents:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You’re free to show our code however we want.&lt;/li&gt;
&lt;li&gt;You’re able to provide samples of code through direct download links, or through directly showing what it looks like.&lt;/li&gt;
&lt;li&gt;You can also write content around that code. Are you showing a project you built? Create a series of articles around that project and link it to the code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can also take advantage of WordPress plugins such as &lt;a href="https://wordpress.org/plugins/code-prettify/"&gt;code-prettify&lt;/a&gt; which lets you highlight code on your posts. That way you generate a similar look and feel users would get by reading code directly on Github.&lt;/p&gt;

&lt;p&gt;If you have access to hosting and a domain name (ideally something like your name .com) you can even download the free version of WordPress from Wordpress.org and install it yourself. This would give you a lot more control over how your site works.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#launchpad"&gt;
  &lt;/a&gt;
  LaunchPad
&lt;/h2&gt;

&lt;p&gt;If you’re looking for something similar to Github but that it’s not blocked, you might want to give &lt;a href="https://launchpad.net/"&gt;LaunchPad&lt;/a&gt; a try.&lt;/p&gt;

&lt;p&gt;It’s similar to Github in the sense that you can publish your project’s code, track bugs and issues, perform code reviews and more. And while the tutorials are written following the use of &lt;a href="http://doc.bazaar.canonical.com/bzr.dev/en/mini-tutorial/index.html"&gt;Bazaar&lt;/a&gt; instead of Git, they claim that the latter is also an option.&lt;/p&gt;

&lt;p&gt;Projects such as &lt;a href="https://launchpad.net/inkscape"&gt;Inkscape&lt;/a&gt;, the Photoshop open-source alternative or &lt;a href="https://launchpad.net/ubuntu-mate"&gt;Ubuntu MATE&lt;/a&gt;, the Linux distro, are hosted there and you can see the type of information that you could potentially show to others.&lt;/p&gt;

&lt;p&gt;Granted, the visual aspect is not the highlight of LaunchPad, considering they don’t allow you to show a lot, in fact, there seems to not be a place for a Readme file. However, you can definitely add a link to an external website, so that way you can provide extra information about the project if you want, and focus on giving access to your code through this platform.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writing"&gt;
  &lt;/a&gt;
  Writing!
&lt;/h2&gt;

&lt;p&gt;Writing is an alternative to showing projects done. It’s definitely not the same, however, as part of technical articles you can definitely show some aspects of your coding skills.&lt;/p&gt;

&lt;p&gt;And that is what we’re after here, isn’t it? Trying to show potential employees that you know what you’re talking about and that the list of skills on your resume is definitely true.&lt;/p&gt;

&lt;p&gt;Writing in a lot of places is free and public, so you don’t need to spend any money if you don’t want to. And if you’re doing this for a resume, I would strongly suggest you write about the subjects you claim to know. Maybe not about all of them, but the most relevant at least.&lt;/p&gt;

&lt;p&gt;If you’re lucky and some of those articles get some traction, they can even be picked up by newsletters such as &lt;a href="https://javascriptweekly.com/"&gt;JavaScriptWeekly&lt;/a&gt;. That’s a nice greeting card, especially if your interviewer is already a subscriber.&lt;/p&gt;

&lt;p&gt;But even if you’re just getting started, spend some time honing your writing skills, their return of investment is huge considering how much they can affect your communication skills.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#go-to-meetups-conferences-and-speak"&gt;
  &lt;/a&gt;
  Go to meet-ups / conferences and speak
&lt;/h2&gt;

&lt;p&gt;Granted, this one might be a little bit extreme, but what better way to get in front of everyone you want to be hired by than assisting the same social events they do.&lt;/p&gt;

&lt;p&gt;Some of the biggest (and sometimes not so big) software companies normally either sponsor some meet-ups or the big conferences, and they tend to send some of their employees as well. It’s a great opportunity for you to be there, speak about something relevant to your experience and network!&lt;/p&gt;

&lt;p&gt;I understand that it’s not easy for everyone. Especially conferences require travel and not all of them are willing to pay for your plane ticket and hotel room. But at least do the research, there is a ton of information online about the different conferences you could be speaking at and they normally tell you if they have some travel budget or not.&lt;/p&gt;

&lt;p&gt;Think about it, it might sound like a lot, but you’re also putting your name out there. The video of your talk will surely be on YouTube a little bit after, and anybody interested in you will only have to google your name. This is definitely a powerful, yet scary, opportunity.&lt;/p&gt;

&lt;p&gt;Do not discard it until you’ve done the research.&lt;/p&gt;




&lt;p&gt;Getting noticed is not all about code, but it definitely helps. The thing is that when I say “code”, you usually go straight into “side-project”, and from there you go right into Github, and that is where the plan collapses. No Github access, no side-project, no new job. Done.&lt;/p&gt;

&lt;p&gt;But that’s not the case, find alternative ways of showing what you know how to do, either by finding less popular (or user-friendly) alternatives, or by doing other things around your projects (like writing or speaking about it).&lt;/p&gt;

&lt;p&gt;What else would you suggest to a new dev looking for their first job as an alternative to having a portfolio on Github?&lt;/p&gt;




&lt;p&gt;&lt;em&gt;If you liked what you read, consider joining my Free newsletter to get insight into the software development career!&lt;/em&gt; &lt;a href="https://fernandodoglio.substack.com"&gt;https://fernandodoglio.substack.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>beginners</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Running while(true) in JS</title>
      <author>Abhishek Raj</author>
      <pubDate>Sat, 18 Dec 2021 11:37:53 +0000</pubDate>
      <link>https://dev.to/abhishekraj272/running-whiletrue-in-js-1aoh</link>
      <guid>https://dev.to/abhishekraj272/running-whiletrue-in-js-1aoh</guid>
      <description>&lt;p&gt;You must be wondering this guy is MAD, we can't run while/for loop &lt;strong&gt;synchronously&lt;/strong&gt; client side in &lt;em&gt;javascript&lt;/em&gt;, it will block the main thread and will FREEZE the page.&lt;/p&gt;

&lt;p&gt;Well, it is possible to run it but not a good way to do it and might introduce some bugs in your program.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#web-worker"&gt;
  &lt;/a&gt;
  Web Worker
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;Web Worker runs in a single thread isolated from the main thread, so you can run any synchronous operation without blocking the thread.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can run the loop in Web Worker and send the send the data from Web Worker to Main Thread using &lt;em&gt;postMessage&lt;/em&gt; method. It will run as good as main thread.&lt;/p&gt;

&lt;p&gt;You can try it in the below code snippet&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/abhishekraj272/embed/WNZjWMe?height=600&amp;amp;default-tab=result,js&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: Running synchronous loop is not advised in browser, unless there is a such requirement.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Connect Me @ &lt;a href="https://www.linkedin.com/in/abhishekraj272/"&gt;Linkedin&lt;/a&gt;, &lt;a href="https://github.com/abhishekraj272"&gt;Github&lt;/a&gt;, &lt;a href="https://twitter.com/abhishekraj272"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.youtube.com/channel/UCvHn2T8DSJzEWzYDdK3Dt8A"&gt;Youtube&lt;/a&gt; 😇&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
    <item>
      <title>Logistic Regression</title>
      <author>Swayam Singh</author>
      <pubDate>Sat, 18 Dec 2021 11:36:11 +0000</pubDate>
      <link>https://dev.to/_s_w_a_y_a_m_/logistic-regression-li9</link>
      <guid>https://dev.to/_s_w_a_y_a_m_/logistic-regression-li9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;Welcome to the 3&lt;sup&gt;rd&lt;/sup&gt; article of the &lt;a href="https://swayam-blog.hashnode.dev/series/demystifying-ml"&gt;&lt;strong&gt;Demystifying Machine Learning&lt;/strong&gt;&lt;/a&gt; series. In this article, we are going to discuss a supervised classification algorithm &lt;strong&gt;Logistic Regression&lt;/strong&gt;, how it works, why it's important, mathematics behind the scenes, linear and non-linear separation and Regularization.&lt;/p&gt;

&lt;p&gt;A good grasp of Linear Regression is needed to understand this algorithm and luckily we already covered it, for reference you can read it from &lt;a href="https://swayam-blog.hashnode.dev/linear-regression-using-gradient-descent"&gt;here&lt;/a&gt;. &lt;strong&gt;Logistic Regression&lt;/strong&gt; builds the base of &lt;strong&gt;Neural Networks&lt;/strong&gt;,  so it gets very important to understand the terms and working of this algorithm.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Logistic Regression&lt;/strong&gt; is not a regression algorithm, its name does consist of the word "Regression" but it's a classification algorithm.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-is-logistic-regression"&gt;
  &lt;/a&gt;
  What is Logistic Regression?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Logistic Regression&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;also known as Perceptron algorithm is a supervised classification algorithm i.e. we teach our hypothesis with categorical labelled data and it predicts the classes (or categories) with some certain probability&lt;/em&gt;&lt;/strong&gt;.  The reason this algorithm is called Logistic Regression is maybe that it's working is pretty similar to that of Linear Regression and the term "Logistic" is because we use a Logistic function in this algorithm (&lt;em&gt;we'll going to see it later&lt;/em&gt;). The difference is that with Linear Regression we intend to predict the continuous values but with Logistic Regression we want to predict the categorical value. Like whether the student gets enrolled in a university or not, if the picture contains a cat or not, etc.&lt;/p&gt;

&lt;p&gt;Here's a representation of how Logistic Regression classifies the data points.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kef-WziO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639752060348/CzQh-pR6T.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kef-WziO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639752060348/CzQh-pR6T.png" alt="1.png" width="640" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can see that the &lt;em&gt;blue points&lt;/em&gt; are separated from the &lt;em&gt;orange points&lt;/em&gt; through a line and we call this line a &lt;strong&gt;decision boundary&lt;/strong&gt;. Basically, with Logistic Regression we separate the classes (or categories) with the help of decision boundaries, they can be linear or non-linear. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#working-of-logistic-regression"&gt;
  &lt;/a&gt;
  Working of Logistic Regression
&lt;/h2&gt;

&lt;p&gt;Let's revise what we learnt in &lt;a href="https://swayam-blog.hashnode.dev/linear-regression-using-gradient-descent"&gt;Linear Regression&lt;/a&gt;, we initialise the parameters with all 0s, then with the help of Gradient Descent calculate the optimal parameters by reducing the cost function and lastly draw the hypothesis to predict the continuous-valued target. &lt;/p&gt;

&lt;p&gt;But here we don't need continuous values, instead, we want to output the probability that lies between [0,1]. So the question arises, &lt;strong&gt;how we can get probability or a number between [0,1] from the continuous values of Linear Regression?&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sigmoid-function"&gt;
  &lt;/a&gt;
  Sigmoid function
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Sigmoid function&lt;/strong&gt; is a type of &lt;strong&gt;&lt;em&gt;logistic function&lt;/em&gt;&lt;/strong&gt; which takes a real number as input and gives out a real number between [0,1] as output. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TPac8HFh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756326745/bI7AUi4gX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TPac8HFh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756326745/bI7AUi4gX.png" alt="1.png" width="880" height="90"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c6-acedH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639752080151/XSs-lCUma.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c6-acedH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639752080151/XSs-lCUma.png" alt="2.png" width="880" height="527"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So basically we'll generate the continuous values using Linear Regression and convert those continuous values into probability i.e. between [0,1] by passing through &lt;strong&gt;sigmoid function&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pmGjnM5B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756341261/wJM47_tPB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pmGjnM5B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756341261/wJM47_tPB.png" alt="2.png" width="880" height="106"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So in the end our final hypothesis will look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qf10WZCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756529024/Hsdngqks9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qf10WZCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756529024/Hsdngqks9.png" alt="3.png" width="880" height="118"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This hypothesis is different from the hypothesis of Linear Regression. Yeah looks fair enough, let me give you a visualisation about overall how Logistic Regression works.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vCX7SFsd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639752100559/4t7OW4zk5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vCX7SFsd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639752100559/4t7OW4zk5.png" alt="13.png" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note:- X0 is basically 1, we will it later why?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So it's very clear from the above representation that the part behind the &lt;code&gt;sigmoid&lt;/code&gt; function is very similar to that of Linear Regression. Let's now move ahead and define the cost function for Logistic Regression.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cost-function"&gt;
  &lt;/a&gt;
  Cost function
&lt;/h3&gt;

&lt;p&gt;Our hypothesis is different from that of Linear Regression, so we need to define a new cost function. We already learnt in our &lt;a href="https://swayam-blog.hashnode.dev/linear-regression-using-gradient-descent"&gt;2nd article&lt;/a&gt; about what is cost function is and how to define one for our algorithm. Let's use those concepts and define one for Logistic Regression.&lt;/p&gt;

&lt;p&gt;For simplicity let's consider the case of binary classification which means our target value will be either 1(True) or 0(False). For example, the image contains a cat (1, True) or the image does not contain a cat (0, False). This means that our predicted values will also be either 0 or 1.&lt;/p&gt;

&lt;p&gt;Let me first show you what is the cost function for Logistic Regression and then we'll try to understand its derivation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bw9jlVEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756571823/yAX5pAFqL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bw9jlVEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756571823/yAX5pAFqL.png" alt="4.png" width="880" height="100"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Combining both the conditions and taking their mean for &lt;strong&gt;m&lt;/strong&gt; samples in a dataset:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wySl1UBN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756596078/c2xN6n22Z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wySl1UBN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756596078/c2xN6n22Z.png" alt="5.png" width="880" height="100"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The equation shown above is of the cost function for Logistic Regression and it looks very different than that of Linear Regression, let's break it down and understand how we came up with the above cost function? Get ready, probability class is about to begin...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RsjKG7ZM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756622846/xcBIW7ru-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RsjKG7ZM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756622846/xcBIW7ru-.png" alt="6.png" width="880" height="272"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There's a negative sign in the original cost function because when training the algorithm we want probabilities to be large but here we are representing it to minimize the cost.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;minimise loss =&amp;gt; max log probability&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Okay, that's a lot of maths, but it's all basics. Focus on the general form in the above equation and that's more than enough to understand how we came up with such a complex looking cost function. Let's see how to calculate the cost for &lt;strong&gt;m&lt;/strong&gt; examples for some datasets:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LLFIrlby--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756647909/EFS95vPVG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LLFIrlby--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756647909/EFS95vPVG.png" alt="7.png" width="880" height="347"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gradient-descent"&gt;
  &lt;/a&gt;
  Gradient Descent
&lt;/h3&gt;

&lt;p&gt;We already covered the working of gradient descent in our &lt;a href="https://swayam-blog.hashnode.dev/linear-regression-using-gradient-descent"&gt;2nd article&lt;/a&gt;, you can refer to it for revision. In this section, we'll be looking at formulas of gradients and updating the parameters.&lt;/p&gt;

&lt;p&gt;The gradient of the cost is a vector of the same length as θ where the jth parameter (for j=0,1,⋯,n) is defined as follows:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---kAGMKI_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756666029/ZE6goQy68.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---kAGMKI_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756666029/ZE6goQy68.png" alt="8.png" width="880" height="170"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Calculation of gradients from cost function is demonstrated in &lt;a href="https://swayam-blog.hashnode.dev/linear-regression-using-gradient-descent"&gt;2nd Article&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As we can see that the formula for calculating gradients is pretty similar to that of Linear Regression but note that the values for hθ(x&lt;sup&gt;i&lt;/sup&gt;) are different due to the use of &lt;code&gt;sigmoid function&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After calculating gradients we can simultaneously update our parameter θ as :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JK2SrwSs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756688657/HRoDBUBKs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JK2SrwSs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756688657/HRoDBUBKs.png" alt="9.png" width="880" height="145"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great now we have all the ingredients for writing our own Logistic Regression from scratch, Let's get started with it in the next section. Till now have a break for 15 minutes cause you just studied a hell of lot of maths by now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-implementation"&gt;
  &lt;/a&gt;
  Code Implementation
&lt;/h2&gt;

&lt;p&gt;In this section, we'll be writing our &lt;code&gt;LogisticRegression&lt;/code&gt; class using Python.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note: You can find all the codes for this article from &lt;a href="https://swayam-blog.hashnode.dev/linear-regression-using-gradient-descent"&gt;here&lt;/a&gt;. It's highly recommended to follow the Jupyter notebook while going through this section.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's begin 🙂&lt;/p&gt;

&lt;p&gt;Let me give you a basic overall working of this class. Firstly it'll take your &lt;em&gt;feature&lt;/em&gt; and &lt;em&gt;target&lt;/em&gt; arrays as input then it'll normalize the features around mean (if you want to) and add an extra column of all 1s to your &lt;em&gt;feature&lt;/em&gt; array for the bias term, as we know from Linear Regression that &lt;code&gt;y=wx+b&lt;/code&gt;. So this &lt;code&gt;b&lt;/code&gt; gets handled by this extra column of 1s with matrix multiplication of &lt;em&gt;features&lt;/em&gt; and &lt;em&gt;parameters&lt;/em&gt; arrays.&lt;/p&gt;

&lt;p&gt;for example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tcu0H1WV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756741748/e70XrL7kZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tcu0H1WV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756741748/e70XrL7kZ.png" alt="10.png" width="880" height="478"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then it initializes the parameter array with all 0s after that training loop starts till the epoch count and it calculates the cost and gradient for certain parameters and simultaneously keep updating the parameters with a certain learning rate.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LogisticRegression&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cost_history&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sigma&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sigmoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; 

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;calculate_cost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;"""
        Returns the cost and gradients.
        parameters: None

        Returns:
            cost : Caculated loss (scalar).
            gradients: array containing the gradients w.r.t each parameter

        """&lt;/span&gt;

        &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float128&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;y_hat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sigmoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;cost&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_hat&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;y_hat&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

        &lt;span class="n"&gt;gradients&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
            &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;y_hat&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="n"&gt;gradients&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;

        &lt;span class="c1"&gt;# Vectorized form
&lt;/span&gt;        &lt;span class="c1"&gt;#  gradients = np.dot(self.X.T, error)/m 
&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gradients&lt;/span&gt;


    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;init_parameters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;"""
        Initialize the parameters as array of 0s
        parameters: None

        Returns: None

        """&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;feature_normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;"""
        Normalize the samples.
        parameters: 
            X : input/feature matrix

        Returns:
            X_norm : Normalized X.

        """&lt;/span&gt;
        &lt;span class="n"&gt;X_norm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;mu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;sigma&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mu&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sigma&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sigma&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
            &lt;span class="n"&gt;X_norm&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_norm&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;mu&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;sigma&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;X_norm&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;learning_rate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.01&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;epochs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;is_normalize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;verbose&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;"""
        Iterates and find the optimal parameters for input dataset
        parameters: 
            x : input/feature matrix
            y : target matrix
            learning_rate: between 0 and 1 (default is 0.01)
            epochs: number of iterations (default is 500)
            is_normalize: boolean, for normalizing features (default is True)
            verbose: iterations after to print cost

        Returns:
            parameters : Array of optimal value of weights.

        """&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cost_history&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ndim&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;# adding extra dimension, if X is a 1-D array
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;is_normalize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;is_normalize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;feature_normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concatenate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ones&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init_parameters&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;epochs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gradients&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;calculate_cost&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cost_history&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;learning_rate&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;gradients&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;verbose&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;verbose&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Cost after &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; epochs: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;


    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;is_normalize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;threshold&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;"""
        Returns the predictions after fitting.
        parameters: 
            x : input/feature matrix

        Returns:
            predictions: Array of predicted target values.

        """&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# converting list to numpy array
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ndim&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;is_normalize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
                &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mu&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sigma&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concatenate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ones&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;threshold&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sigmoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code looks pretty similar to that of Linear Regression using Gradient Descent. If you are following this series you'll be pretty familiar with this implementation. Still, I like to point out a few methods of this class:-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;code&gt;sigmoid&lt;/code&gt;&lt;/strong&gt;: We added this new method to calculate the sigmoid of the continuous values generated from the linear hypothesis i.e. from θ&lt;sup&gt;T&lt;/sup&gt;X to get the probabilities.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;code&gt;calculate_cost&lt;/code&gt;&lt;/strong&gt;: We change the definition of this function because our cost function is changed too, it's not confusing if you are well aware of the formulas I gave and the &lt;code&gt;numpy&lt;/code&gt; library then it won't be difficult for you to understand.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/strong&gt;: This function takes the input and returns the array of predicted values 0 and 1. There's an extra parameter &lt;code&gt;threshold&lt;/code&gt; which had a default value of 0.5, if the predicted value &amp;gt; 0.5 then it'll predict 1 otherwise 0 for the predicted array. You can change this &lt;code&gt;threshold&lt;/code&gt; according to your confidence level.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#trying-it-out-on-a-dataset"&gt;
  &lt;/a&gt;
  Trying it out on a dataset
&lt;/h3&gt;

&lt;p&gt;In this sub-section, we will use our class on the dataset to check how it's working.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;All the codes and implementations are provided in this &lt;a href="https://github.com/practice404/demystifying_machine_learning/blob/master/logistic_regression/notebook.ipynb"&gt;jupyter notebook&lt;/a&gt;, follow it for better understanding in this section.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For the dataset, we have records of students' marks for some Exam1 and Exam2 and the target column represents whether they get admitted into the university or not. Let's visualize it using a plot:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uuLiJiJC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639752142703/GNP0R62nW.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uuLiJiJC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639752142703/GNP0R62nW.png" alt="3.png" width="778" height="528"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So what we basically want from Logistic Regression is to tell us whether a certain student with some scores of Exam1 and Exam2 is admitted or not. Let's create an instance of the &lt;code&gt;LogisticRegression&lt;/code&gt; class and try it out.&lt;/p&gt;

&lt;p&gt;Firstly I'm going to find the optimal parameters for this dataset and I'm going to show you two ways of doing it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Using our custom class&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C_GbZVHn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639755806863/-skmJvfk3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C_GbZVHn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639755806863/-skmJvfk3.png" alt="4.png" width="880" height="355"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Using Scipy's optimize module&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sometimes using gradient descent takes a lot of time so for time-saving, I'll show you how you can easily find the parameters by just using &lt;code&gt;scipy.optimize.minimize&lt;/code&gt; function bypassing the cost function into it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g7V2reys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639755824131/E1q3mdC80.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g7V2reys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639755824131/E1q3mdC80.png" alt="5.png" width="880" height="592"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Firstly I appended an extra column of 1s for bias term then pass my &lt;code&gt;costFunction&lt;/code&gt;, &lt;code&gt;initial_theta&lt;/code&gt;  (initially 0s) and my    &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;Y&lt;/code&gt; as arguments. It easily calculated the optimal parameters in 0.3 seconds much faster than gradient descent which took about 6.5 seconds.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note: &lt;code&gt;costFunction&lt;/code&gt; is similar to what we have in our class method as &lt;code&gt;calculate_cost&lt;/code&gt;, I just put it outside to show you the work of &lt;code&gt;scipy.optimize.minimize&lt;/code&gt; function.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Great now let's see how well it's performed by printing out its accuracy on the training set.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kQIrEIUC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639755839852/VjGQjf-gg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kQIrEIUC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639755839852/VjGQjf-gg.png" alt="6.png" width="880" height="295"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hmmm, around 89%, it seems good although there are a few algorithms that we'll be covering in future that can perform way much better than this. Now let me show you its decision boundary, as we can see that we didn't perform any polynomial transformation (for more refer to &lt;a href="https://swayam-blog.hashnode.dev/linear-regression-using-gradient-descent"&gt;article 2&lt;/a&gt;) on our input features so the decision boundary is going to be a straight line.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NeicB5ZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639755907860/N8MYuSOL9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NeicB5ZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639755907860/N8MYuSOL9.png" alt="7.png" width="880" height="579"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's so great we just implemented our &lt;code&gt;LogisticRegression&lt;/code&gt; class on the student's dataset. Let's move ahead and understand the problem of overfitting in the next section. Till then have a short 5-minute break.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#problem-of-overfitting"&gt;
  &lt;/a&gt;
  Problem of Overfitting
&lt;/h2&gt;

&lt;p&gt;In order to understand overfitting in Logistic Regression, I'll show you an implementation of this algorithm on another dataset where we need to fit a non-linear decision boundary. Let's visualize our 2nd dataset on the graph:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wk-WIH5l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639755934992/5-pXUnqBv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wk-WIH5l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639755934992/5-pXUnqBv.png" alt="8.png" width="880" height="569"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we can see, it's not linearly separable data so we need to fit a non-linear decision boundary. If you went through the &lt;a href="https://swayam-blog.hashnode.dev/linear-regression-using-gradient-descent"&gt;2nd article&lt;/a&gt; of this series then you probably know how we do this, but in brief, we take our original features and apply polynomial transformations on them, like squaring, cubing or multiplying with each other to obtain new features and then training our algorithm on those new features results in non-linear classification.&lt;/p&gt;

&lt;p&gt;In the &lt;a href="https://github.com/practice404/demystifying_machine_learning/blob/master/logistic_regression/notebook.ipynb"&gt;notebook&lt;/a&gt; you'll find a function &lt;code&gt;mapFeature&lt;/code&gt; that take individual features as input and return new transformed features. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you wanna know how it's working then consider referring to the &lt;a href="https://github.com/practice404/demystifying_machine_learning/blob/master/logistic_regression/notebook.ipynb"&gt;notebook&lt;/a&gt; and it's recommended to follow it while reading this article.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After getting the new transformed features and following the exact steps we followed in the above section, you'll be able to print out its decision boundary that will look something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5iyAUtOB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639755949600/JSXj2eNSn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5iyAUtOB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639755949600/JSXj2eNSn.png" alt="9.png" width="880" height="568"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After seeing it, you probably may say that "WOW!, it performed so well almost classified all the training points". Well, it does seem good but in reality, it's worst. Our hypothesis fitted so well on the training set that it loses the generality that means if we provide a new set of points that is not in the training set then our hypothesis will not be able to classify it clearly.&lt;/p&gt;

&lt;p&gt;In short, it's necessary to maintain the generality in our hypothesis so that it can perform well on the data it is never seen. &lt;strong&gt;Regularization&lt;/strong&gt; is the way to achieve it. Let's see how to maintain generality using Regularization in the next section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#regularization"&gt;
  &lt;/a&gt;
  Regularization
&lt;/h2&gt;

&lt;p&gt;In this section, we'll be discussing how to implement regularization. &lt;strong&gt;&lt;em&gt;Overfitting occurs when the algorithm provides heavy parameters to some features according to the training dataset and hyperparameters. This makes those features dominant in the overall hypothesis and lead to a nice fit in the training set but not so good on the samples outside the training set.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;The plan is to add the square of parameters by multiplying them with some big number (λ) to the cost function because our algorithms' main motive is to decrease the cost function, so in this way, the algorithm will end up giving the small parameters just to cancel the effect addition of parameters by multiplying with a large number (&amp;amp;&lt;/em&gt;&lt;/strong&gt;lambda;). So our final cost function gets modified to:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QhWM5yOy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756780412/aW2HU1RZv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QhWM5yOy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756780412/aW2HU1RZv.png" alt="11.png" width="880" height="95"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note: We denote the bias term as θ0 and it's not needed to regularized the bias term that's why we are only considering only θ1 to θn parameters.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Since our cost function is changed that's why our formulas for gradients were also get affected. The new formula for the gradient are:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vg6YuANb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756795932/Yh788isRU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vg6YuANb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756795932/Yh788isRU.png" alt="12.png" width="880" height="167"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The new formulas for gradients can be easily derived by partially differentiating the new cost function J(θ) w.r.t to some θj. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Calculating of gradients from cost function is demonstrated in &lt;a href="https://swayam-blog.hashnode.dev/linear-regression-using-gradient-descent"&gt;2nd Article&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;λ is known as a regularization parameter and it should be greater than 0. &lt;strong&gt;&lt;em&gt;Large value of λ leads to underfitting and very small values lead to overfitting&lt;/em&gt;&lt;/strong&gt;, so you need to pick the right one for your dataset through iterating on some sample values.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implementing-regularization-on-raw-logisticregression-endraw-class"&gt;
  &lt;/a&gt;
  Implementing Regularization on &lt;code&gt;LogisticRegression&lt;/code&gt; class
&lt;/h3&gt;

&lt;p&gt;We only need to modify the &lt;code&gt;calculate_cost&lt;/code&gt; method because only this method is responsible for calculating both cost and gradients. The modified version is shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RegLogisticRegression&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cost_history&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sigma&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sigmoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; 

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sigmoid_derivative&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;derivative&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sigmoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sigmoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;derivative&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;calculate_cost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lambda_&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;"""
        Returns the cost and gradients.
        parameters: None

        Returns:
            cost : Caculated loss (scalar).
            gradients: array containing the gradients w.r.t each parameter

        """&lt;/span&gt;

        &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float128&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;y_hat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sigmoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;cost&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_hat&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;y_hat&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;lambda_&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;gradients&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;y_hat&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;y_hat&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;lambda_&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;
            &lt;span class="n"&gt;gradients&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;

        &lt;span class="c1"&gt;# gradients = np.dot(self.X.T, error)/m
&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gradients&lt;/span&gt;


    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;init_parameters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;"""
        Initialize the parameters as array of 0s
        parameters: None

        Returns:None

        """&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;feature_normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;"""
        Normalize the samples.
        parameters: 
            X : input/feature matrix

        Returns:
            X_norm : Normalized X.

        """&lt;/span&gt;
        &lt;span class="n"&gt;X_norm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;mu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;sigma&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mu&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sigma&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sigma&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
            &lt;span class="n"&gt;X_norm&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_norm&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;mu&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;sigma&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;X_norm&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;learning_rate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.01&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;epochs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lambda_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;is_normalize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;verbose&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;"""
        Iterates and find the optimal parameters for input dataset
        parameters: 
            x : input/feature matrix
            y : target matrix
            learning_rate: between 0 and 1 (default is 0.01)
            epochs: number of iterations (default is 500)
            is_normalize: boolean, for normalizing features (default is True)
            verbose: iterations after to print cost

        Returns:
            parameters : Array of optimal value of weights.

        """&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cost_history&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ndim&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;# adding extra dimension, if X is a 1-D array
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;is_normalize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;is_normalize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;feature_normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concatenate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ones&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init_parameters&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;epochs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gradients&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;calculate_cost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lambda_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;lambda_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cost_history&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;learning_rate&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;gradients&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;verbose&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;verbose&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Cost after &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; epochs: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;


    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;is_normalize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;threshold&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;"""
        Returns the predictions after fitting.
        parameters: 
            x : input/feature matrix

        Returns:
            predictions : Array of predicted target values.

        """&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# converting list to numpy array
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ndim&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;is_normalize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
                &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mu&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sigma&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concatenate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ones&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;threshold&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sigmoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have our regularized version of &lt;code&gt;RegLogisticRegression&lt;/code&gt; class. Let's address the previous problem of overfitting on polynomial regression by using a set of values for λ to pick the right one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yhcsvsQb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639755979522/0MXdt0T4B.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yhcsvsQb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639755979522/0MXdt0T4B.png" alt="10.png" width="880" height="251"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RUtUIEmm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756009035/JPqLNcv2r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RUtUIEmm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756009035/JPqLNcv2r.png" alt="11.png" width="880" height="217"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I can say that λ=1 and λ=10 looks pretty good and they both are able to maintain the generality in hypothesis, the curve is more smooth and less wiggling type. But we can see that as we keep increasing the value if λ the more our hypothesis starts to &lt;strong&gt;underfit&lt;/strong&gt; the data. It basically means that it starts to perform even worst on the training set. Let's visualise the underfitting by plotting cost functions for each λ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rRue2bZ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756025955/gX8nPqCOC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rRue2bZ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639756025955/gX8nPqCOC.png" alt="12.png" width="880" height="259"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can see that as λ increases cost also increases. So it's advised to select the value for λ carefully according to your custom dataset.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Great work everyone, we successfully learnt and implemented Logistic Regression. Most people don't write their Machine Learning algorithm from scratch instead they use libraries like Scikit-Learn. Scikit-Learn contains wrappers for many Machine Learning algorithms and it's really flexible and easy to use. But it's not harmful to know about the algorithm you're going to use and the best way of doing it is to understand the underlying mathematics and implement it from scratch.&lt;/p&gt;

&lt;p&gt;So in the next article, we'll be making a classification project using the Scikit-Learn library and you'll see how easy it is to use for making some really nice creative projects.&lt;/p&gt;

&lt;p&gt;I hope you have learnt something new, for more updates on upcoming articles get connected with me through &lt;a href="https://twitter.com/_s_w_a_y_a_m_"&gt;Twitter&lt;/a&gt; and stay tuned for more. Till then enjoy your day and keep learning.&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>python</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Backup my way</title>
      <author>Young Yoshie</author>
      <pubDate>Sat, 18 Dec 2021 11:11:56 +0000</pubDate>
      <link>https://dev.to/youngyoshie/backup-my-way-b78</link>
      <guid>https://dev.to/youngyoshie/backup-my-way-b78</guid>
      <description>&lt;p&gt;First thing first, I want to list my own devices, which I have through the years:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Laptop Samsung NP300E4Z-S06VN (Old laptop which I give to my mom)&lt;/li&gt;
&lt;li&gt;Laptop Dell Inspiron 15 3567 (My mom bought it for me when I go to college, I give it to my sister afterward)&lt;/li&gt;
&lt;li&gt;Laptop Acer Nitro AN515-45 (Gaming laptop which I buy for gaming, of course)&lt;/li&gt;
&lt;li&gt;MacBook Pro M1 2020 (My company laptop)&lt;/li&gt;
&lt;li&gt;Phone LG G3 d851 (Kinda broken, the phone I used a long time ago)&lt;/li&gt;
&lt;li&gt;Phone Xiaomi Poco X3 NFC (Primary phone which I use daily)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;App/Service I use daily:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bitwarden.com/"&gt;Bitwarden&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getaegis.app/"&gt;Aegis Authenticator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rclone.org/"&gt;Rclone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailscale.com/"&gt;Tailscale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Google Keep&lt;/li&gt;
&lt;li&gt;Google Drive (I use 200GB plan)&lt;/li&gt;
&lt;li&gt;GitHub&lt;/li&gt;
&lt;li&gt;GitLab&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The purpose is that I want my data to be safe, secure, and can be easily recovered if I lost some devices;&lt;br&gt;
or in the worst situation, I lost all.&lt;br&gt;
Because you know, it is hard to guess what is waiting for us in the future.&lt;/p&gt;

&lt;p&gt;There are 2 sections which I want to share, the first is &lt;strong&gt;How to backup&lt;/strong&gt;, the second is &lt;strong&gt;Recover strategy&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-backup"&gt;
  &lt;/a&gt;
  How to backup
&lt;/h2&gt;

&lt;p&gt;Before I talk about backup, I want to talk about data.&lt;br&gt;
In specifically, which data should I backup?&lt;/p&gt;

&lt;p&gt;I use Arch Linux and macOS, primarily work in the terminal so I have too many dotfiles, for example, &lt;code&gt;~/.config/nvim/init.config&lt;/code&gt;.&lt;br&gt;
Each time I reinstall Arch Linux (I like it a lot), I need to reconfigure all the settings, and it is time-consuming.&lt;/p&gt;

&lt;p&gt;So for the DE and UI settings, I keep it as default as possible, unless it's getting in my way, I leave the default setting there and forget about it.&lt;br&gt;
The others are dotfiles, which I write my own &lt;a href="https://github.com/haunt98/dotfiles"&gt;dotfiles tool&lt;/a&gt; to backup and reconfigure easily and quickly.&lt;br&gt;
Also, I know that installing Arch Linux is not easy, despite I install it too many times (Like thousand times since I was in high school).&lt;br&gt;
Not because it is hard, but as life goes on, the &lt;a href="https://wiki.archlinux.org/title/installation_guide"&gt;official install guide&lt;/a&gt; keeps getting new update and covering too many cases for my own personal use, so I write my own &lt;a href="https://github.com/haunt98/til/blob/main/install-archlinux.md"&gt;guide&lt;/a&gt; to quickly capture what I need to do.&lt;br&gt;
I back up all my dotfiles inside my dotfiles tool in GitHub and GitLab as I trust them both.&lt;/p&gt;

&lt;p&gt;So that is my dotfiles, for my regular data, like Wallpaper or Books, Images, I use Google Drive (Actually I pay for it).&lt;br&gt;
But the step: open the webpage, click the upload button and choose files seems boring and time-consuming.&lt;br&gt;
So I use Rclone, it supports Google Drive, One Drive and many providers but I only use Google Drive for now.&lt;br&gt;
The commands are simple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Sync from local to remote&lt;/span&gt;
rclone &lt;span class="nb"&gt;sync &lt;/span&gt;MyBooks remote:MyBooks &lt;span class="nt"&gt;-P&lt;/span&gt; &lt;span class="nt"&gt;--exclude&lt;/span&gt; .DS_Store

&lt;span class="c"&gt;# Sync from remote to local&lt;/span&gt;
rclone &lt;span class="nb"&gt;sync &lt;/span&gt;remote:MyBooks MyBooks &lt;span class="nt"&gt;-P&lt;/span&gt; &lt;span class="nt"&gt;--exclude&lt;/span&gt; .DS_Store
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Before you use Rclone to sync to Google Drive, you should read &lt;a href="https://rclone.org/drive/"&gt;Google Drive rclone configuration&lt;/a&gt; first.&lt;/p&gt;

&lt;p&gt;The next data is my passwords and my OTPs.&lt;br&gt;
These are the things which I'm scare to lose the most.&lt;br&gt;
First thing first, I enable 2-Step Verification for all of my important accounts, should use both OTP and phone method.&lt;/p&gt;

&lt;p&gt;I use Bitwarden for passwords (That is a long story, coming from Google Password manager to Firefox Lockwise and then settle down with Bitwarden) and Aegis for OTPs.&lt;br&gt;
The reason I choose Aegis, not Authy (I use Authy for so long but Aegis is definitely better) is because Aegis allows me to extract all the OTPs to a single file (Can be encrypted), which I use to transfer or backup easily.&lt;/p&gt;

&lt;p&gt;As long as Bitwarden provides free passwords stored, I use all of its apps, extensions so that I can easily sync passwords between laptops and phones.&lt;br&gt;
The thing I need to remember is the master password of Bitwarden in my head.&lt;/p&gt;

&lt;p&gt;With Aegis, I export the data, then sync it to Google Drive in my main phone, then sync it back to my backup phone.&lt;br&gt;
For safety, I also store Aegis data locally on all of my laptops (Encrypted of course).&lt;br&gt;
The rule is you always need 2 phones for OTPs, one for carrying around, one always stays at home.&lt;/p&gt;

&lt;p&gt;The main problem here is the OTP, I can not store all of my OTPs in the cloud completely.&lt;br&gt;
Because if I want to access my OTPs in the cloud, I should log in, and then input my OTP, this is a circle, my friends.&lt;br&gt;
The easiest answer is the old phone, which is safe at home.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recovery-strategy"&gt;
  &lt;/a&gt;
  Recovery strategy
&lt;/h2&gt;

&lt;p&gt;There are many strategies that I process to react as if something strange is happening to my devices.&lt;/p&gt;

&lt;p&gt;If I lost my laptops, single laptop or all, do not panic as long as I have my phones.&lt;br&gt;
The OTPs are in there, the passwords are in Bitwarden cloud, other data is in Google Drive so nothing is lost here.&lt;/p&gt;

&lt;p&gt;If I lost my main phone, but not my laptop, I use the OTPs which are stored locally in my laptops.&lt;/p&gt;

&lt;p&gt;If I lost my main phone, and my laptops, I use the OTPs in my old phone.&lt;br&gt;
Then I go to the nearest SIM store to recover my SIM, as I register my ID with it.&lt;/p&gt;

&lt;p&gt;In the worst situation, I lost everything, my laptops, my phones (Main phone and old).&lt;br&gt;
The first step is to recover my SIM, then log in to Google account using the password and SMS OTP.&lt;br&gt;
After that, log in to Bitwarden account using the master password and OTP from Gmail, which I open previously.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-end"&gt;
  &lt;/a&gt;
  The end
&lt;/h2&gt;

&lt;p&gt;This guide will be updated regularly I promise.&lt;/p&gt;

</description>
      <category>backup</category>
      <category>linux</category>
    </item>
    <item>
      <title>5 Best Django Courses to learn Web Development with Python</title>
      <author>javinpaul</author>
      <pubDate>Sat, 18 Dec 2021 11:11:20 +0000</pubDate>
      <link>https://dev.to/javinpaul/5-best-django-courses-to-learn-web-development-with-python-4hn8</link>
      <guid>https://dev.to/javinpaul/5-best-django-courses-to-learn-web-development-with-python-4hn8</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educative.io/courses/django-python-web-development?affiliate_id=5073518643380224"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N68HHoZd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://external-preview.redd.it/YOMVd8z_ttokGrqR74CywDM4007m3Fj4I41QUTLdXR8.jpg%3Fauto%3Dwebp%26s%3D5eb605b4454ba7d7b96604304e2607e55673d0b2" alt="best Django courses for beginners in 2022" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello Devs, if you want to become a Python web developer and looking for the best online courses to learn Django, Flask, and Python web development, then you have come to the right place. &lt;/p&gt;

&lt;p&gt;In the past, I have shared the &lt;a href="https://www.java67.com/2020/05/top-5-courses-to-learn-python-in-depth.html"&gt;&lt;strong&gt;best Python courses&lt;/strong&gt;&lt;/a&gt; and the &lt;a href="https://javarevisited.blogspot.com/2020/01/top-5-courses-to-learn-flask-for-web-development-with-python.html"&gt;&lt;strong&gt;best Flask courses&lt;/strong&gt;&lt;/a&gt;, and today, I will share the best course to learn everything about Python web development. &lt;/p&gt;

&lt;p&gt;You may know that Python is a multi-purpose programming language meaning that you can use it in different fields such as GUI application, artificial intelligence, and web application, and much more, just to name a few.&lt;/p&gt;

&lt;p&gt;Apart from &lt;a href="https://www.java67.com/2018/10/top-10-data-science-and-machine-learning-courses.html"&gt;Data Science&lt;/a&gt;, Web development is another area where &lt;a href="https://www.java67.com/2018/02/5-free-python-online-courses-for-beginners.html"&gt;Python&lt;/a&gt; shines because of its excellent tools, libraries, and frameworks. &lt;/p&gt;

&lt;p&gt;And, when we talk about web applications, one of the best python frameworks that are popular is the Django framework which allows you to create a Python web application very quickly and easily.&lt;/p&gt;

&lt;p&gt;Django is a robust Python framework that is used to create web applications; this tool is considered one of the &lt;strong&gt;&lt;a href="https://javarevisited.blogspot.com/2019/04/top-5-python-web-development-frameworks.html"&gt;best web development frameworks&lt;/a&gt;&lt;/strong&gt; to develop websites that work with databases such as content management systems (CMS), customer relationship management (CRM), Object Relational Mapping (ORM), and much more.&lt;/p&gt;

&lt;p&gt;If you are getting started with web development in Python or want to become a Python web developer and looking for some online training courses to &lt;strong&gt;learn Django in 2022&lt;/strong&gt; then you have come to the right place.&lt;/p&gt;

&lt;p&gt;In this blog post, we will see some of the &lt;em&gt;best Django courses&lt;/em&gt; designed to take to the advanced level on using this framework to create your own web application.  &lt;/p&gt;

&lt;p&gt;By the way, you should know how to code in Python and if you don't you can join &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fcomplete-python-bootcamp%2F"&gt;The 2022 Complete Python Bootcamp: From Zero to Hero in Python&lt;/a&gt;&lt;/strong&gt; course in Udemy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fcomplete-python-bootcamp%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ppVrHAqb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-wvvMKCCo6UM/X3XZA5ym08I/AAAAAAAAjlk/EwfpqT2m-nQ46CW0_EwzNJ2B3KmzygXzACLcBGAsYHQ/w640-h360/The%252BComplete%252BPython%252B3%252BBootcamp.webp" alt="Javarevisited: Udemy&amp;amp;#39;s The 2022 Complete Python Bootcamp From Zero to Hero  in Python Review" width="640" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will learn everything about Python including how to utilize Object-Oriented Programming and construct graphical user interfaces and games. There are 20 parts in all, as well as two milestone projects. Students will gain access to 21.5 hours of video, materials, and activities on demand.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#5-best-online-courses-to-learn-django-in-2022"&gt;
  &lt;/a&gt;
  5 Best Online Courses to learn Django in 2022
&lt;/h2&gt;

&lt;p&gt;Without wasting any more of your time, here are the best Django courses for Web Development. The list contains hands-on project-based online training courses from &lt;a href="https://javarevisited.blogspot.com/2019/08/top-10-udemy-courses-and-certifications-for-programmers.html"&gt;Udemy&lt;/a&gt; and &lt;a href="https://javarevisited.blogspot.com/2017/12/top-10-pluralsight-courses-java-and-web-developers.html"&gt;Pluralsight&lt;/a&gt; to learn the Django web development framework.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-python-django-dev-to-deployment-udemy"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fpython-django-dev-to-deployment%2F"&gt;Python Django Dev To Deployment&lt;/a&gt; [Udemy]
&lt;/h3&gt;

&lt;p&gt;If you want to learn Django and web development through practical exercises, this course is suitable. This is probably the best Udemy course to learn Python and Django. &lt;/p&gt;

&lt;p&gt;It is designed to take you to an advanced level of web development from the beginning of the python programming language basic syntax until the deployment of the web application.&lt;/p&gt;

&lt;p&gt;Here are the main things you will learn in this course:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  How to use Python even if you are a beginner.&lt;/li&gt;
&lt;li&gt;  Building a real estate website with Django and &lt;a href="https://javarevisited.blogspot.com/2020/02/top-5-courses-to-learn-postgresql-in.html"&gt;PostgreSQL&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;  Creating a virtual environment and deploying the web app.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Created by Brad Traversy, this Python and Django course has more than 11 hours of practical videos and many examples, such as creating a real estate website. In short, one of the best Django courses for beginners to learn online in 2022. It's also very affordable, and you can get it for just $10 on Udemy sales.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fpython-django-dev-to-deployment%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--28AEKGGy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-Wul9MLgvdac/XtZCb3wdxJI/AAAAAAAAfjM/jcOQSe7iI2UfTQ8oOk1irHyYzPdc7-kIwCLcBGAsYHQ/s400/Python%252BDjango%252BDev%252BTo%252BDeployment%252BUdemy%252Bcourse%252BBy%252BBrade%252BTraversy.png" alt="5 Best Courses to learn Django and Python for Web Development" width="400" height="225"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-django-and-python-complete-bundle-django-actual-project-2022"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fpython-django-tkinter-complete-bundle-advance%2F"&gt;Django and Python: complete BUNDLE + Django actual project 2022&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This one is another top course to learn Django and Python from Udemy. In this complete course on Django, you see how to use Python first from beginning to advance than will take you to use &lt;a href="https://medium.com/javarevisited/my-favorite-courses-to-learn-django-for-beginners-2020-ac172e2ab920"&gt;Django&lt;/a&gt; as a professional developer and learn how to design an exemplary user interface, send emails, web scrapping, security, advanced search, and much more that you can explore.&lt;/p&gt;

&lt;p&gt;Here are the main things you will learn in this course:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  How to create real websites in Python Django.&lt;/li&gt;
&lt;li&gt;  How to make and run a real-world text-based RPG game.&lt;/li&gt;
&lt;li&gt;  How to use the &lt;a href="https://javarevisited.blogspot.com/2020/07/top-5-courses-to-learn-django-in-2020.html"&gt;Django&lt;/a&gt; and &lt;a href="https://javarevisited.blogspot.com/2020/07/top-5-courses-to-learn-bootstrap-in.html"&gt;Bootstrap&lt;/a&gt; frameworks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to get a complete course on how to master the Django framework, then this complete bundle is the right for you. If you are looking for project-based courses to learn Python and Django, then this Udemy course is perfect for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fpython-django-tkinter-complete-bundle-advance%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cf4u8_tp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-wVf5wr-cfSE/XtZCbQ1yWaI/AAAAAAAAfjI/2EGc-V5nsCwnhu9cTzPR6BKJxSE7HS-jwCLcBGAsYHQ/w400-h225/Django%252Band%252BPython%252Bcomplete%252BBUNDLE%252B%25252B%252BDjango%252Breal%252Bproject%252B2020%252Bbest%252BUdemy%252Bcourse.png" alt="best online course to learn Django and Python" width="400" height="225"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-django-getting-started-pluralsight"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fdjango-getting-started"&gt;Django: Getting Started&lt;/a&gt; [Pluralsight]
&lt;/h3&gt;

&lt;p&gt;Suppose you recently completed a python course and want to jump into some introduction to web application development. In that case, I will suggest this Django Fundamentals course offered in Pluralsight to you.&lt;/p&gt;

&lt;p&gt;As the name speaks for itself, it shows you how to create and build a complete web application after going to the basics of this framework. After that, you will see how to style pages using Django templates and add URLs to these pages, handle user interaction, and more.&lt;/p&gt;

&lt;p&gt;Here are the main things you will learn in this course:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Basics of the &lt;a href="https://medium.com/javarevisited/my-favorite-courses-to-learn-django-for-beginners-2020-ac172e2ab920"&gt;Django framework&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;  Create attractively styled pages using Django templates.&lt;/li&gt;
&lt;li&gt;  Store and manipulate data with API and a user interface.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After completing this course, you will know how to build your own complete web application using the Django framework. For beginners, this is probably the best Django course on Pluralsight to learn online.&lt;/p&gt;

&lt;p&gt;By the way, you would need a Pluralsight membership to join this course, which costs around $29 per month or $299 per year and gives access to more than 7000+ online courses to learn the latest technologies. Alternative. You can also use their &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;&lt;strong&gt;10-day-free-pass&lt;/strong&gt;&lt;/a&gt; to watch this course for free.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fdjango-getting-started"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F402Lf_m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-VBTmhpI3qpk/XtZCbUZ9VtI/AAAAAAAAfjE/gVvpG6FVGToogzHGYCmhjgrjyJbKVKg9QCLcBGAsYHQ/s400/Django%252BGetting%252BStarted%252BCourse%252Bby%252BPluralsight.png" alt="best online course to learn Django and Python on Pluralsight" width="400" height="225"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-cs50s-web-programming-with-python-and-javascript-edx"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://www.awin1.com/cread.php?awinmid=6798&amp;amp;awinaffid=631878&amp;amp;clickref=&amp;amp;p=%5B%5Bhttps%3A%2F%2Fwww.edx.org%2Fcourse%2Fcs50s-web-programming-with-python-and-javascript"&gt;CS50's Web Programming with Python and JavaScript&lt;/a&gt; [edX]
&lt;/h3&gt;

&lt;p&gt;One of the best courses available online to learn Django web programming is the CS50's Web Programming with Python and JavaScript course on the &lt;a href="https://www.awin1.com/cread.php?awinmid=6798&amp;amp;awinaffid=631878&amp;amp;clickref=&amp;amp;p="&gt;edX platform&lt;/a&gt; offered by Harvard University. &lt;/p&gt;

&lt;p&gt;This is also a free course you can take to learn Django online. You only need to pay when you need a certificate.&lt;/p&gt;

&lt;p&gt;This course picks up where the classic &lt;strong&gt;CS50 course&lt;/strong&gt; (most popular online computer science course) leaves off, diving more deeply into the design and implementation of web apps with Python, JavaScript, and SQL using frameworks like &lt;a href="https://medium.com/javarevisited/5-best-python-flask-courses-for-beginners-2f262f8e23da"&gt;Flask&lt;/a&gt;, &lt;a href="https://medium.com/javarevisited/7-free-courses-to-learn-django-framework-in-python-bd50acc8484"&gt;Django&lt;/a&gt;, and &lt;a href="https://medium.com/javarevisited/6-best-bootstrap-online-courses-for-web-designers-and-developers-a688e192b2e2"&gt;Bootstrap&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here are the main things you will learn in this course:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  How to design and create a database for your web application.&lt;/li&gt;
&lt;li&gt;  How to use Django to create your own web application.&lt;/li&gt;
&lt;li&gt;  How to deploy your web application on the internet.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This &lt;a href="https://medium.com/@javinpaul/my-favorite-courses-to-learn-django-for-beginners-2020-ac172e2ab920"&gt;&lt;strong&gt;best Django course on edX&lt;/strong&gt;&lt;/a&gt; will show you how to create databases for your web application and other topics like scalability, security, to user experience. Throughout their practice exercises, you will learn some exciting projects like writing and using APIs and creating interactive UI.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.awin1.com/cread.php?awinmid=6798&amp;amp;awinaffid=631878&amp;amp;clickref=&amp;amp;p=%5B%5Bhttps%3A%2F%2Fwww.edx.org%2Fcourse%2Fcs50s-web-programming-with-python-and-javascript"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9SnPsThy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-dJoTssTKWcI/XtZENpGW8AI/AAAAAAAAfjk/n1l3FrJQTjshpp5lwkmL4unpgbth13atQCLcBGAsYHQ/s400/CS50s%252BWeb%252BProgramming%252Bwith%252BPython%252Band%252BJavaScript%252B-%252Bbest%252BDjango%252Bcourse%252Bby%252BedX%252Band%252BHarvard%252BUniversity.png" alt="best Python and Django course by edX and Harvard" width="400" height="224"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-python-and-django-full-stack-web-developer-bootcamp-udemy"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fpython-and-django-full-stack-web-developer-bootcamp%2F"&gt;Python and Django Full Stack Web Developer Bootcamp&lt;/a&gt; [Udemy]
&lt;/h3&gt;

&lt;p&gt;In Udemy, many courses talk about the Django framework, but if you want to practice more to enhance your knowledge, consider looking at this excellent Django course by Jose Portilla. &lt;/p&gt;

&lt;p&gt;This course will build real-world projects like blogs and social media clones using the Django Framework.&lt;/p&gt;

&lt;p&gt;Here are the main things you will learn in this course:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Learn the Django web framework.&lt;/li&gt;
&lt;li&gt;  Learn web development.&lt;/li&gt;
&lt;li&gt;  Develop a couple of projects to master Django&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, this course will show you some of the &lt;a href="https://medium.com/javarevisited/5-free-html-and-css-courses-to-learn-front-end-web-development-online-8b04517c6ecb"&gt;HTML&lt;/a&gt;, &lt;a href="https://hackernoon.com/top-5-free-online-courses-to-learn-html-css-web-development-in-2020-ae8e7466dfa7"&gt;CSS&lt;/a&gt;, &lt;a href="https://medium.com/javarevisited/12-free-courses-to-learn-javascript-and-es6-for-beginners-and-experienced-developers-aa35874c9a32"&gt;JavaScript&lt;/a&gt;, and &lt;a href="https://www.java67.com/2018/04/top-5-free-jquery-courses-for-web-developers.html"&gt;jQuery&lt;/a&gt; and is aimed to be for beginners and intermediate level Python programmers. &lt;/p&gt;

&lt;p&gt;This course was created by Jose Portilla, one of the best Python instructors on Udemy and also the author of the Python 3 Bootcamp course, which is the most popular Python course on Udemy with almost 1 million students.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fpython-and-django-full-stack-web-developer-bootcamp%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TpZW1rfu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-8Pj478FhMQA/XtZCcfSB5fI/AAAAAAAAfjQ/WQAIIwgQT_0jZEnXWmeDyyGrqmFyAHFaQCLcBGAsYHQ/s400/Python%252Band%252BDjango%252BFull%252BStack%252BWeb%252BDeveloper%252BBootcamp%252BUdemy%252Bcourse.jpg" alt="best Python and Django course on Udemy" width="400" height="225"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all about the &lt;strong&gt;best online courses to learn Django for Python web development&lt;/strong&gt; or anyone who wants to learn web development using Django and Python framework. &lt;/p&gt;

&lt;p&gt;You don't need to go through all these courses; you can choose where you better connect with the instructor. I strongly suggest you watch previews of these courses, and if you watch previews without skipping, it's a good sign that you are connecting with the class and instructor.&lt;/p&gt;

&lt;p&gt;Other &lt;strong&gt;Python Programming Articles&lt;/strong&gt; you may like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.java67.com/2020/05/top-5-courses-to-learn-python-in-depth.html"&gt;Top 5 Courses to learn Python in depth&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/05/10-reasons-to-learn-python-programming.html"&gt;10 Reasons to Learn Python in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/@javinpaul/8-projects-you-can-buil-to-learn-python-in-2020-251dd5350d56"&gt;8 Python Projects for Beginners and Intermediate Developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/python-or-java-which-programming-language-beginners-should-learn-in-2020-de992b2650ec"&gt;Python vs. Java - Which is better to start with&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/08/top-5-python-books-for-data-science-and-machine-learning.html"&gt;5 Books to learn Python for Data Science&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/10-free-python-tutorials-and-courses-from-google-microsoft-and-coursera-for-beginners-96b9ad20b4e6"&gt;Free Python Tutorials from Google and Microsoft&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/02/10-best-coursera-courses--for-python.html"&gt;10 Best Python Specialization and Certificates from Coursera&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-python-for-web-development-in-2020-best-of-lot-efe11fb6d212"&gt;Top 5 Courses to learn Flask for Python web development&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/10/top-8-python-libraries-for-data-science-machine-learning.html"&gt;8 Python Libraries for Machine Learning&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.java67.com/2019/08/top-5-books-to-learn-python-for-beginners.html"&gt;Top 5 Books to learn Python in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/swlh/5-free-python-courses-for-beginners-to-learn-online-e1ca90687caf"&gt;15 Free courses to learn Python for Beginners&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://becominghuman.ai/9-data-science-and-machine-learning-courses-by-harvard-ibm-udemy-and-others-12a0c7c23ec1"&gt;9 Data Science courses from Harvard and IBM&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.sg/2018/01/10-unit-testing-and-integration-tools-for-java-programmers.html"&gt;10 Testing Libraries Every Java Developer Should Know&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/04/top-5-python-web-development-frameworks.html"&gt;5 Python Frameworks you can learn for Web development&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/better-programming/top-5-courses-to-learn-python-in-2018-best-of-lot-26644a99e7ec"&gt;10 Best Python Courses for Beginners in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/swlh/5-free-python-courses-for-beginners-to-learn-online-e1ca90687caf"&gt;15 Free Courses to learn Python for Junior Developers&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this article so far. Please share these *best Python and Django online course*s with your friends and colleagues if you find them useful. If you have any questions or feedback, then please drop a note.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt; - If you want to learn Python programming but can't afford these online training courses or are looking for a free resource to start with Python programming, I suggest you look at this **&lt;a href="http://bit.ly/2D5vvnV"&gt;Introduction To Python Programming [FREE]&lt;/a&gt; **course on Udemy. It's completely free and trusted by more than 490K students from all over the world.&lt;/p&gt;

</description>
      <category>python</category>
      <category>django</category>
      <category>webdev</category>
      <category>development</category>
    </item>
    <item>
      <title>Bypassing Captchas - the easy way ;)</title>
      <author>Ayesha Sahar</author>
      <pubDate>Sat, 18 Dec 2021 10:43:45 +0000</pubDate>
      <link>https://dev.to/iayeshasahar/bypassing-captchas-the-easy-way--577g</link>
      <guid>https://dev.to/iayeshasahar/bypassing-captchas-the-easy-way--577g</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Introduction&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;In this ever-evolving world of technology, spams are on the rise! Website or any web product owners are at risk due to those bots crawling all over the internet. In order to filter out those vicious things, CAPTCHAs are used frequently.&lt;/p&gt;

&lt;p&gt;I'm sure you've seen CAPTCHAs all over the internet for over a decade now. CAPTCHAs are those weird lines, words, puzzles, or numbers that block your way when you try to log in, sign up, or even post a comment anywhere. Pretty annoying, aren't they? I'm sure there are a lot of other ways to verify if someone is a bot or a human, but of course, what's the fun if we don't use the most annoying one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uJygHqeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639505683037/1J8vMuStS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uJygHqeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639505683037/1J8vMuStS.png" alt="image.png" width="300" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-are-captchas"&gt;
  &lt;/a&gt;
  &lt;strong&gt;So, what are Captchas?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;The word CAPTCHA is actually an acronym that stands for “Completely Automated Public Turing test to tell Computers and Humans Apart”. To be honest, it's quite a mouthful. &lt;/p&gt;

&lt;p&gt;In simple words, it is a challenge-response test. One side asks a question or challenge and the other side must provide a valid answer or response in order to be "authenticated".&lt;/p&gt;

&lt;p&gt;The idea behind CAPTCHA originated from the Turing test (a method with which a machine’s ability to exhibit intelligent behavior equivalent to that of a human being can be tested). A CAPTCHA is a reverse Turing test. That's because it is a computer creating the test in the first place that will challenge humans and not the other way around.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#issues-with-captchas"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Issues with CAPTCHAs&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Sometimes, CAPTCHAs are based on reading texts. This is a huge problem for people who are visually impaired. Hence, not everyone can access a protected resource, even if they are human. A solution would be to allow a person to opt for an audio or sound-based CAPTCHA.&lt;/p&gt;

&lt;p&gt;Moreover, there are cases when CAPTCHA images are not properly distorted. This will not prevent bots from accessing protected resources. That is because it is like reading normal text, which is something a bot can easily do. On the other hand, even the simplest things can confuse humans. Let's all face it, we do tend to overthink, don't we?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--91ePhpwk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639507865708/5sBhDEYlI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--91ePhpwk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639507865708/5sBhDEYlI.png" alt="image.png" width="880" height="1173"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0KZIGVf1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639507885583/j_Qa-3KZV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0KZIGVf1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639507885583/j_Qa-3KZV.png" alt="image.png" width="640" height="697"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Be honest people, what would you do here? &lt;/p&gt;

&lt;p&gt;As for me, I never know what to do in such situations😂&lt;/p&gt;

&lt;p&gt;CAPTCHAs are good but bad. They are a bad UX (remember what we discussed about visually impaired people?). Also, most of us are overthinkers and most of us get these bad due to our overthinking. Don't worry people, I'm one of you. I always end up overthinking while solving CAPTCHAs and always end up filling them wrong on my first try.&lt;/p&gt;

&lt;p&gt;In normal situations, you can have as many tries as you want. The world is currently in a state of healing, which means it hasn't healed fully from the ongoing pandemic. A lot of schools and colleges are still on the online mode. I remember that last semester I had an online quiz in which we had 10 mins of time to solve MCQs. Every second counts in such situations. But of course, in order to access the quiz, a CAPTCHA had to be solved. Guess what happened? I spent 5mins, half the total time, solving CAPTCHAs. I realized, that for such situations, I should have something to automatically solve these for me. Therefore, I researched and found some "reliable" and "working" methods.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#captcha-bypass-or-automation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;CAPTCHA bypass or automation&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;The fruits of my research were something called "Puppeteer" and "2Captcha". Honestly speaking, I didn't really understand much of how Puppeteer worked but 2Captcha was easy peesy, lemon squeezy ;)&lt;/p&gt;

&lt;p&gt;Puppeteer is a Node (JavaScript Framework) library that provides a high-level API to control headless Chrome or Chromium over the DevTools Protocol. It can also be configured to use full (non-headless) Chrome. This seemed way too complex so I opted for 2Captcha.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-is-2captcha"&gt;
  &lt;/a&gt;
  &lt;strong&gt;So, what is 2Captcha?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Their workers are humans, that's why 2captcha.com can recognize all humanly readable types of captchas. Still, their service is fully automated, so you just have to configure your software once and just let it do all the work for you. Their average response time is less than 12sec so no more wastage of time. Might have aced my quiz if I actually didn't waste my time on solving Captchas. Anyways, their service is for a low price, starting just from $0.50 for 1000 solved CAPTCHAs. Well, everything good comes with a price :)&lt;/p&gt;

&lt;p&gt;You might be curious, how does 2Captcha work? &lt;/p&gt;

&lt;p&gt;Here's your answer:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;First of all, you upload a captcha on 2captcha.com/in.php&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Their server stores your captcha and returns you the ID of your request.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Their server then immediately distributes your captcha to a worker.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;One of their workers solves the captcha and sends the answer back to the server.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#a-small-bonus-for-my-readers-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;A small bonus for my readers ;)&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Let me tell you a secret. You guys can even earn money from here! Yes, you heard me right! It's a pretty good and easy way to earn some pocket money to buy that dress or new sneakers that you like ;)&lt;/p&gt;

&lt;p&gt;In order to get started, all you need is just a computer or a smartphone with an internet connection. You'll have to pass their simple training that literally takes 5-10 minutes &lt;/p&gt;

&lt;p&gt;Working for them is really simple. You just have to click the start button and their system will start to show you the images with the text. Then you have to type that text in the form and that’s it. Moreover, there are no payout fees so the exact amount you earned can directly be available in your wallet. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-apis-to-bypass-captchas"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Using APIs to bypass CAPTCHAs&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Once again, 2Captcha is the hero. It provides an API that allows users to automate the process and integrate your software to the 2Captcha service. There are a few easy steps for solving the captcha problem via their API:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Just send your image or captcha to their servers &lt;/li&gt;
&lt;li&gt;You'll be allotted an ID for your task by 2Captcha &lt;/li&gt;
&lt;li&gt;Begin the cycle that checks if your task is completed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This might seem a lot but this process happens in seconds ;)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;CAPTCHAs are there to prevent bad people from manipulating content for fraudulent or malicious purposes in attack campaigns that run into millions of requests. There are many legitimate reasons why you might want to use such methods to automate or bypass CAPTCHAs. I mean, let's face the reality, most of the time, they don't block the bots and end up blocking real humans. That's why we can use such services like 2Captcha to prevent the headaches and consequences that come from bad CAPTCHAs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let's connect!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;✨ &lt;a href="https://twitter.com/IAyeshaSahar"&gt;Twitter&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;✨ &lt;a href="https://github.com/AyeshaSahar"&gt;Github&lt;/a&gt; &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Which programming language should you learn in 2022 to remain relevant and also increase your revenue.</title>
      <author>Ifeanyi Okeakwalam</author>
      <pubDate>Sat, 18 Dec 2021 10:19:22 +0000</pubDate>
      <link>https://dev.to/ifycoool/which-programming-language-should-you-learn-in-2022-to-remain-relevant-and-also-increase-your-revenue-2gh9</link>
      <guid>https://dev.to/ifycoool/which-programming-language-should-you-learn-in-2022-to-remain-relevant-and-also-increase-your-revenue-2gh9</guid>
      <description>&lt;p&gt;The advice I got was to learn Java, because during that period Java was reigning in my geographical location at least. I did my research and I felt why not Java. &lt;/p&gt;

&lt;p&gt;Often times when we make up our mind to become a software developer most of us think like this, but the simple truth is that things are more complicated than anyone thinking of the technology to start their software career with, just to be an instant hit in no time.&lt;/p&gt;

&lt;p&gt;Let's get the point straight, am not saying you shouldn't look out for a promising tech skill to acquire on the contrary am saying the tech space is hug and if you must be relevant in that hug tech space you need first choose which part to function in that hug tech space and then learn the most promising technology for part.&lt;/p&gt;

&lt;p&gt;In the Tech space you can decide to be a frontend dev, backend dev, machine learning expert, data analyst, etc... These different fields have different programming languages, libraries and frameworks people have learned to use for them, take for example Frontend engineers often use Javascript and maybe ReactJS or Vue. &lt;/p&gt;

&lt;p&gt;It's important to first know if you would love to be a Frontend or backend developer, before choosing a programming language to learn. When choosing a language to learn as a starter is best to choose the most promising, when I use the word promising I mean acquiring a tech skill that is in high demand today and will be tomorrow, yes that's possible. &lt;/p&gt;

&lt;p&gt;Every developer wants to remain relevant in the Tech space and the best way to achieve that today is to identify the language of today and of the FUTURE. Talking about the language of the future, first we need ask how far in the future are we talking?&lt;/p&gt;

&lt;p&gt;More than a decade out? Hard to say. More than two? Impossible. Looking at current trends, though:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;JavaScript is taking over almost everything.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;TypeScript is catching up as the best way to use JavaScript.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python is nailing machine learning, but losing momentum on servers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Julia could come up from behind and displace Python in Machine learning.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java is pretty well embedded in the enterprise space, but there are cracks around the edge of its dominance.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Go might survive due to strong Google backing, though I have a hard time recommending it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Swift is likely to stick around as the Apple platform language for the foreseeable future. But it doesn't seem likely to make the jump to anywhere else.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Kotlin could displace Java. Scala has had its chance, but it appears to have failed in garnering market share. I frankly don't see that changing any time soon.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;C# is probably going to persist in some enterprise companies, and as the language of Unity3d and Xamarin.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On the high performance end, it's a hard call. C++ has ruled this roost for two decades, and has received some recent updates that look great. But Rust seems to have a strictly better type system, which provides better compile-time code verification with equivalent or better performance.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;C is the low level language of the past. Like COBOL, there's a crap ton of code written for it, so it won't just vanish. But except in narrow cases I don't see C as being a good language for new development. Rust is strictly better for anything that you might want to start in C today. I think this will be increasingly true. So in that respect, Rust may be more likely to be a major language in the future.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This are noticeable trends anyways, so dig in choose your area of relevance (e.g Frontend), research more about a technology to learn maybe Python or JavaScript, start learning and start building things. &lt;/p&gt;

&lt;p&gt;The first language will be hardest, because you're learning how to program for the first time. After that, the second language will be easier, and so forth. &lt;/p&gt;

&lt;p&gt;If you gained something from this article, take a minute of your time, hit the share button and share this piece with your network on social media, also give me a follow on all social media platform via &lt;a class="mentioned-user" href="https://dev.to/ifycoool"&gt;@ifycoool&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Visit my official blog via &lt;a href="https://www.blog.ifeanyiokeakwam.com"&gt;https://www.blog.ifeanyiokeakwam.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>kotlin</category>
      <category>java</category>
    </item>
    <item>
      <title>The easiest way to unsubscribe from Observables in Angular</title>
      <author>Volodymyr Yepishev</author>
      <pubDate>Sat, 18 Dec 2021 09:19:36 +0000</pubDate>
      <link>https://dev.to/bwca/the-easiest-way-to-unsubscribe-from-observables-in-angular-4cg4</link>
      <guid>https://dev.to/bwca/the-easiest-way-to-unsubscribe-from-observables-in-angular-4cg4</guid>
      <description>&lt;p&gt;...is of course using the &lt;code&gt;async&lt;/code&gt; pipe, but the article is not about it. It's about situations where you need to subscribe inside component's &lt;code&gt;ts&lt;/code&gt; file and how to deal with it. This article is about dealing with repetitive logic of cancelling subscription in different components.&lt;/p&gt;

&lt;p&gt;(The actual repo used for this article can be found &lt;a href="https://github.com/Bwca/easy-ubsubscribe-from-observable-in-angular-with-a-service"&gt;here&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Managing subscriptions in Angular can get quite repetitive and even imperative if you are not using the &lt;code&gt;async&lt;/code&gt; pipe. The rule of thumb is if you subscribe, you should always unsubscribe. Indeed, there are finite observables which autocomplete, but those are separate cases.&lt;/p&gt;

&lt;p&gt;In this article we will:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create an Angular application with memory leaks caused by the absence of unsubscribing from an &lt;code&gt;Observable&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;fix the leaks with a custom unsubscribe service.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The only things we are going to use are &lt;code&gt;rxjs&lt;/code&gt; and Angular features.&lt;/p&gt;

&lt;p&gt;Now let's create our applications and add some components. I'll be using &lt;code&gt;npx&lt;/code&gt; since I don't install any packages globally.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx @angular/cli new ng-super-easy-unsubscribe &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;ng-super-easy-unsubscribe
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To illustrate leaks we need two more things: a service to emit infinite number of values via an &lt;code&gt;Observable&lt;/code&gt; and a component that will subscribe to it, perform some memory consuming operation in subscribe function and never unsubscribe.&lt;/p&gt;

&lt;p&gt;Then we will proceed switching it on and off to cause memory leaks and see how it goes :)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx @angular/cli generate component careless
npx @angular/cli generate service services/interval/interval
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As I have already stated the interval service is just for endless emissions of observables, so we'll put only &lt;code&gt;interval&lt;/code&gt; there:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/app/services/interval/interval.service.ts&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Injectable&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rxjs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Injectable&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;providedIn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;IntervalService&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;getInterval&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The application component is going to be busy with nothing else than toggling the &lt;code&gt;CarelessComponent&lt;/code&gt; on and off, with mere 4 lines of template we can put it directly in the &lt;code&gt;ts&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/app/app.component.ts&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app-root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`
    &amp;lt;section&amp;gt;
      &amp;lt;button (click)="toggleChild()"&amp;gt;toggle child&amp;lt;/button&amp;gt;
    &amp;lt;/section&amp;gt;
    &amp;lt;app-careless *ngIf="isChildVisible"&amp;gt;&amp;lt;/app-careless&amp;gt;
  `&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;styleUrls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app.component.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;AppComponent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;isChildVisible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;toggleChild&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isChildVisible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isChildVisible&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get a better view of memory leaks it is a good idea to just dump some random string arrays into a bigger array of trash on every &lt;code&gt;Observable&lt;/code&gt; emission.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/app/careless/careless.component.ts&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;OnInit&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;IntervalService&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../services/interval/interval.service&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;UnsubscribeService&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../services/unsubscribe/unsubscribe.service&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app-careless&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;p&amp;gt;ಠ_ಠ&amp;lt;/p&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;CarelessComponent&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;OnInit&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;garbage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[][]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;intervalService&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;IntervalService&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;ngOnInit&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;intervalService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getInterval&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;garbage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;some trash&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Start the application, go to developer tools in the browser and check Total JS heap size, it is relatively small.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IoPP-Ti1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x745yynjuhlno6ofae8z.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IoPP-Ti1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x745yynjuhlno6ofae8z.jpg" alt='"No leaking yet"' width="468" height="451"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If in addition to piling garbage in component property you log it to console, you can crash the page pretty quickly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pAosdvyu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7e93f2kq3u00ppkpj8j0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pAosdvyu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7e93f2kq3u00ppkpj8j0.jpg" alt='"Tab crashed"' width="880" height="368"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Because the allocated memory is never released, it will keep adding more junk every time &lt;code&gt;CarelessComponent&lt;/code&gt; instance comes to life.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v6SvwF-1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vrtqqbxd3pjuufkqtykg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v6SvwF-1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vrtqqbxd3pjuufkqtykg.jpg" alt='"No released"' width="861" height="135"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So what happened? We've leaked and crashed because each toggle on cause new subscription and each toggle off did not cause any subscription cancelling to fire.&lt;/p&gt;

&lt;p&gt;In order to avoid it we should unsubscribe when the component gets destroyed. We could place that logic in our component, or create a base component with that logic and extend it or... we can actually create a service that provides a custom &lt;code&gt;rxjs&lt;/code&gt; operator that unsubscribes once the component is destroyed.&lt;/p&gt;

&lt;p&gt;How will a service know the component is being destroyed? Normally services are provided as singletons on root level, but if we remove the &lt;code&gt;providedIn&lt;/code&gt; property in the &lt;code&gt;@Injectable&lt;/code&gt; decorator, we can provide the service on component level, which allows us to access &lt;code&gt;OnDestroy&lt;/code&gt; hook in the service. And this is how we will know component is being destroyed, because the service will be destroyed too.&lt;/p&gt;

&lt;p&gt;Let's do it!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx @angular/cli generate service services/unsubscribe/unsubscribe
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the service we place the good old subscription cancelling logic with &lt;code&gt;Subject&lt;/code&gt; and &lt;code&gt;takeUntil&lt;/code&gt; operator:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Injectable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;OnDestroy&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Subject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;takeUntil&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rxjs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Injectable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;UnsubscriberService&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;OnDestroy&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;destroy$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Subject&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Subject&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;untilDestroyed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;source$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;source$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;takeUntil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destroy$&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;ngOnDestroy&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destroy$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destroy$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unsubscribe&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that an arrow function is used for the &lt;code&gt;untilDestroyed&lt;/code&gt; method, as when used as &lt;code&gt;rxjs&lt;/code&gt; operator we will lose the context unless we use arrow function.&lt;/p&gt;

&lt;p&gt;Alternatively instead of using arrow function in a property we could also have used a getter to return an arrow function, which would look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;untilDestroyed&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;source$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;source&lt;/span&gt;&lt;span class="na"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;source$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;takeUntil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destroy$&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I'll go with the getter variant because I do not enjoy arrow function in class properties.&lt;/p&gt;

&lt;p&gt;Now on to fixing our careless component, we add &lt;code&gt;UnsubscribeService&lt;/code&gt; to its &lt;code&gt;providers&lt;/code&gt; array, inject it into the constructor and apply its operator in our subscription pipe:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;OnInit&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;IntervalService&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../services/interval/interval.service&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;UnsubscribeService&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../services/unsubscribe/unsubscribe.service&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app-careless&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;p&amp;gt;ಠ_ಠ&amp;lt;/p&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;providers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;UnsubscribeService&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;CarelessComponent&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;OnInit&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;intervalService&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;IntervalService&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;unsubscribeService&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;UnsubscribeService&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;ngOnInit&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;intervalService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getInterval&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unsubscribeService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;untilDestroyed&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;permutations&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;findPermutations&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abcdefg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you go back to the application and try toggling the child component on and off you will notice that it doesn't leak anymore.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gp1Fmy6R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/00lp2niw8gktmg6ltm06.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gp1Fmy6R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/00lp2niw8gktmg6ltm06.jpg" alt='"No more leaks"' width="693" height="93"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No imperative cancelling subscription logic in the component, no &lt;code&gt;async&lt;/code&gt; pipes, no external packages needed.&lt;/p&gt;

&lt;p&gt;Easy peasy lemon squeezy :)&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>angular</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Yielding Bells 🔔  - generators in PHP</title>
      <author>Anders Björkland</author>
      <pubDate>Sat, 18 Dec 2021 08:51:30 +0000</pubDate>
      <link>https://dev.to/andersbjorkland/yielding-bells-generators-in-php-2521</link>
      <guid>https://dev.to/andersbjorkland/yielding-bells-generators-in-php-2521</guid>
      <description>&lt;p&gt;Today we want us some bells in our Christmas, so let's create them. PHP has a neat feature called generators. Generators are functions that can be used to create iterators, and they don't need a large overhead to create them. For performance sake, let's compare two code snippets.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Snippet 1&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;produceBells&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;$num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$bells&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;$num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$bells&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'🔔'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$bells&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$hundredBells&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;produceBells&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 8.3KB&lt;/span&gt;

&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$hundredBells&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$bell&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$bell&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Snippet 2&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;generateBells&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;$num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;$num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="s1"&gt;'🔔'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$hundredBells&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;generateBells&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//544 bytes&lt;/span&gt;

&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$hundredBells&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$bell&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$bell&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Both these snippets will produce this output:&lt;br&gt;&lt;br&gt;
🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔 🔔&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Is that a hundred bells? I sure hope so, I get lost when counting them!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The question is now, which is less memory intensive, and why is &lt;strong&gt;Snippet 2&lt;/strong&gt;?! I ran both snippets with profile-mode on Xdebug and found the following result:  &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Snippet&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Memory usage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Array&lt;/td&gt;
&lt;td&gt;8280 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Generator&lt;/td&gt;
&lt;td&gt;544 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;As we can see, the generator is a lot more memory efficient than the array. The reason for this is that generators are lazy, and only generate the values when they are needed. This means that the memory usage is only as high as the amount of values that are actually needed. And as we loop through one item at a time to echo it out, that is as much memory as will be used. You could output a million of these things if you like, and the memory usage would not be that much higher. (In fact, it remained at 544 bytes when I ran it.)&lt;/p&gt;

&lt;p&gt;So what's the cost? Generators, while memory efficient, are not as time efficient. My machine is not stable enough (poor potato), to do a fair benchmarking. But at a thousand bells we got 9.2 ms for the array and 11.6 ms for the generator. So is it worth it for you to use generators? That question has not only to do with time versus memory cost. If you don't know how often you will need to access an array (or iterator) value, you may need to use a generator anyway.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-about-you"&gt;
  &lt;/a&gt;
  What about you?
&lt;/h2&gt;

&lt;p&gt;Have you ever tried a generator before? What use cases do you have or think you would have for generators? Comment below and let us know what you think ✍&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further Reading
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Generators Overview: &lt;a href="https://www.php.net/manual/en/language.generators.overview.php"&gt;https://www.php.net/manual/en/language.generators.overview.php&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>php</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
