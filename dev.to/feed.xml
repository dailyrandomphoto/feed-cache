<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>dev.peviitor.ro; scraper[1]</title>
      <author>Boga Sebastian Nicolae</author>
      <pubDate>Sat, 01 Jan 2022 13:56:30 +0000</pubDate>
      <link>https://dev.to/sebiboga/devpeviitorro-scraper1-1n42</link>
      <guid>https://dev.to/sebiboga/devpeviitorro-scraper1-1n42</guid>
      <description>&lt;h4&gt;
  &lt;a href="#ce-este-scraperul"&gt;
  &lt;/a&gt;
  Ce este scraperul?
&lt;/h4&gt;

&lt;p&gt;Scraperul este componenta motorului de cautare care preia datele de pe website-ul companiei. &lt;br&gt;
In sectiunea de Cariere pe website-ul companiei gasim o lista de locuri de munca. Ele devin oportunitati in motorul de cautare abia cand aceste locuri de munca sunt inserate in index.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ce-trebuie-sa-faci-pentru-a-scrie-un-scraper"&gt;
  &lt;/a&gt;
  Ce trebuie sa faci pentru a scrie un scraper?
&lt;/h4&gt;

&lt;p&gt;Te-ai hotarat ca vrei sa contribui la acest proiect OPEN SOURCE cu popularea datelor de pe website-ul companiilor. Perfect!&lt;br&gt;
Primul pas este sa te inscrii pe &lt;a href="https://dev.peviitor.ro/"&gt;https://dev.peviitor.ro/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WFDLIwtv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yvcki1i7hf9i9f9ltl6z.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WFDLIwtv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yvcki1i7hf9i9f9ltl6z.jpg" alt="dev_peviitor" width="880" height="451"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ce-este-devpeviitorro"&gt;
  &lt;/a&gt;
  Ce este &lt;strong&gt;dev.peviitor.ro&lt;/strong&gt;?
&lt;/h4&gt;

&lt;p&gt;In sectiunea dezvoltator al motorului de cautare, pur si simplu iti declari intentia de a contribui la motorul de cautare cu date. Datele in cazul nostru reprezinta locurile de munca.&lt;/p&gt;

&lt;p&gt;Partea importanta este ca de aici, din &lt;code&gt;dev.peviitor.ro&lt;/code&gt; iti generezi o cheie API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--elhd5WGq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/16ekzl5g5xcxk81pw07n.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--elhd5WGq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/16ekzl5g5xcxk81pw07n.jpg" alt="dev_companie" width="582" height="694"&gt;&lt;/a&gt;&lt;br&gt;
Pentru a folosi API-ul (incepand cu versiunea 3), partea de inserare date si stergere date, vei avea nevoie de o cheie API.&lt;/p&gt;

&lt;p&gt;Aceasta cheie API este unica pentru o companie, astfel vei defini ce companie vrei sa reprezinti.&lt;/p&gt;

&lt;p&gt;Autentificarea in dev.peviitor.ro se face pe baza unui cont de GitHUB sau GitLAB. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rYUOGcz8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/67f63mpscmgg1t3fxe3g.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rYUOGcz8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/67f63mpscmgg1t3fxe3g.jpg" alt="login_github" width="689" height="484"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#limitari"&gt;
  &lt;/a&gt;
  Limitari
&lt;/h4&gt;

&lt;p&gt;Esti limitat la a prelua date de pe un singur website si astfel poti adauga in motorul de cautare doar o companie.&lt;/p&gt;

&lt;p&gt;De ce aceasta limitare?&lt;br&gt;
In timp, companiile isi schimba partea de UI al website-ului si astfel scraperul va trebui updatat o data cu un upgrade al interfetei utilizator. Vrem ca atunci cand iti asumi aceasta responsabilitate de a popula locurile de munca pentru o companie, sa reusesti a face update atunci cand compania decide o modificare de interfata. E de ajuns o persoana sa raspunda de locurile de munca dintr-o anumita companie. &lt;/p&gt;

&lt;p&gt;Daca intampini probleme cu autentificarea sau nu reusesti sa te descurci, lasa-ne un comentariu pe pagina de comunitate de pe github: &lt;a href="https://github.com/peviitor-ro/community/discussions"&gt;comunitate&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BQkhhvLg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/onatnl8vs9tz2q1g66nh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BQkhhvLg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/onatnl8vs9tz2q1g66nh.png" alt="comunitate" width="880" height="626"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>peviitor</category>
      <category>scraper</category>
      <category>locuridemunca</category>
      <category>job</category>
    </item>
    <item>
      <title>Striver's SDE Sheet Journey - #10 Find the duplicate in an array</title>
      <author>sachin26</author>
      <pubDate>Sat, 01 Jan 2022 13:20:32 +0000</pubDate>
      <link>https://dev.to/sachin26/strivers-sde-sheet-journey-10-find-the-duplicate-in-an-array-4lgi</link>
      <guid>https://dev.to/sachin26/strivers-sde-sheet-journey-10-find-the-duplicate-in-an-array-4lgi</guid>
      <description>&lt;p&gt;hi Dev,&lt;br&gt;
today we are going to solve the 10th problem from the sheet, which is &lt;strong&gt;Find the duplicate in an array&lt;/strong&gt;.&lt;br&gt;
lets start....&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;u&gt;Problem Statement&lt;/u&gt; :-&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;There is only one repeated number in nums, return this repeated number.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#solution-1"&gt;
  &lt;/a&gt;
  &lt;u&gt;Solution 1&lt;/u&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;using sorting, we can easily find the duplicate number by linearly checking the one which has the same at the next position.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-1&lt;/strong&gt; first sort the array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-2&lt;/strong&gt; run a loop from &lt;code&gt;i=0&lt;/code&gt; to &lt;code&gt;n&lt;/code&gt;,then&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;if &lt;code&gt;nums[i] == nums[i+1]&lt;/code&gt;, then return the &lt;code&gt;nums[i]&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;step-3&lt;/strong&gt; end.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#java"&gt;
  &lt;/a&gt;
  Java
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;findDuplicate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Time Complexity :&lt;/strong&gt; &lt;strong&gt;O(nlogn)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Space Complexity :&lt;/strong&gt; &lt;strong&gt;O(1)&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#solution-2"&gt;
  &lt;/a&gt;
  &lt;u&gt;Solution 2&lt;/u&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Since we know that. The range of the array’s number is 1 to N. so, we can use the array indices for marking the visited number.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-1&lt;/strong&gt; run a loop from &lt;code&gt;i=0&lt;/code&gt; to &lt;code&gt;N&lt;/code&gt;, then&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; get the i'th number from the array.&lt;br&gt;
 &lt;code&gt;index = nums[i]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; mark the index value, as visited, by multiply -1&lt;br&gt;
 &lt;code&gt;nums[abs(index)] *= -1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Check, is it already marked, then return the number&lt;br&gt;
if nums[abs(index)] &amp;gt; 0, then return abs(nums[i])&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;step-2&lt;/strong&gt; end.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Java&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;findDuplicate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;


        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;abs&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

            &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;abs&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Time Complexity :&lt;/strong&gt; &lt;strong&gt;O(n)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Space Complexity :&lt;/strong&gt; &lt;strong&gt;O(1)&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution-3"&gt;
  &lt;/a&gt;
  &lt;u&gt;Solution 3&lt;/u&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;this problem can be solve by using &lt;strong&gt;Binary Search&lt;/strong&gt; algorithm&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Since the numbers are 1 to N,traverse through the array and count the numbers which are less than or equal to mid .&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;If the count is less than mid, then duplicate number should be on the right side.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If the count is greater than mid, then duplicate number should be on the left side.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;then narrow down the search space by updating the left &amp;amp; right value.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;lets understand this algo step by step.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-1&lt;/strong&gt; initialise the variables &lt;code&gt;left=0&lt;/code&gt;, &lt;code&gt;right=arrLen&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-2&lt;/strong&gt; run a loop if &lt;code&gt;left &amp;lt; right,&lt;/code&gt; then&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; initialise &lt;code&gt;count=0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; calculate the mid&lt;br&gt;
 &lt;code&gt;mid = (left + right) / 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; run a loop from &lt;code&gt;i=0&lt;/code&gt; to &lt;code&gt;n&lt;/code&gt; , then&lt;br&gt;
if nums[i] &amp;lt;= mid, then &lt;code&gt;count++&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; if &lt;code&gt;count &amp;gt; mid&lt;/code&gt; then update &lt;code&gt;right&lt;/code&gt;&lt;br&gt;
&lt;code&gt;right = mid&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; if &lt;code&gt;count &amp;lt; mid&lt;/code&gt; then update &lt;code&gt;left&lt;/code&gt;&lt;br&gt;
&lt;code&gt;left = mid+1&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;step-3&lt;/strong&gt; return the &lt;code&gt;left&lt;/code&gt; variable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-4&lt;/strong&gt; end.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Java&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;findDuplicate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

            &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++;&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;
                &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Time Complexity :&lt;/strong&gt; &lt;strong&gt;O(nlogn)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Space Complexity :&lt;/strong&gt; &lt;strong&gt;O(1)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;thank you for reading this article, if you find any mistakes, let me know in the comment section&lt;/em&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>beginners</category>
      <category>computerscience</category>
      <category>java</category>
    </item>
    <item>
      <title>What’s the Best Programming Language to Learn First? </title>
      <author>Abhishek kushwaha</author>
      <pubDate>Sat, 01 Jan 2022 13:16:19 +0000</pubDate>
      <link>https://dev.to/abbhiishek/whats-the-best-programming-language-to-learn-first-1l4o</link>
      <guid>https://dev.to/abbhiishek/whats-the-best-programming-language-to-learn-first-1l4o</guid>
      <description>&lt;p&gt;Whether you’re looking to begin coding as a hobby, a new career, or just to enhance your current role, the first thing you’ll have to do is decide which programming language you want to start with.&lt;/p&gt;

&lt;p&gt;honestly, there is no right answer. Choosing a first language will depend on what kind of projects you want to work on, who you want to work for, or how easy you want it to be. Hopefully, this guide will help give you a better idea of which one you should pursue.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Python is always recommended if you’re looking for an easy and even fun programming language to learn first. Rather than having to jump into strict syntax rules, Python reads like English and is simple to understand for someone who’s new to programming. This allows you to obtain a basic knowledge of coding practices without having to obsess over smaller details that are often important in other languages.&lt;/p&gt;

&lt;p&gt;Python also is ideal for web development, graphic user interfaces (GUIs), and software development. In fact, it was used to build Instagram, YouTube, and Spotify, so it’s clearly in demand among employers in addition to having a faster onboarding.&lt;/p&gt;

&lt;p&gt;Though it has it’s advantages, Python is often thought of as a slow language that requires more testing and is not as practical for developing mobile apps as other languages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/"&gt;C#&lt;/a&gt;&lt;br&gt;
While C is one of the more difficult languages to learn, it’s still an excellent first language pick up because almost all programming languages are implemented in it. This means that once you learn C, it’ll be simple to learn more languages like C++ and C#.&lt;/p&gt;

&lt;p&gt;Because C is more “machine-level”, learning it is great for teaching you how a computer functions. Software Developer Joel Spolsky compares it to understanding basic anatomy before becoming a medical doctor, making it the best way to code efficiently.&lt;/p&gt;

&lt;p&gt;In this way, C is an exceptional choice to become a master coder and a talented developer from the get-go if you’re willing to take on the challenge.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.java.com/en/"&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
Java is an object-oriented and feature-heavy programming language that’s in high demand. It’s been built under the premise of “Write once, run anywhere,” meaning that it can be written on any device and work cross-platform.&lt;/p&gt;

&lt;p&gt;This makes it one of the most desired (yes, we mean high-paid) language skills. So, if you’re looking to learn a language that’s going to get you a great career, this might be the one, especially since top employers for Java programmers including Ebay, Amazon, and IBM.&lt;/p&gt;

&lt;p&gt;Additionally, Java is often used for Android and iOS app development, as it’s the basis of the Android operating system, which makes it one of the best choices if you want to build mobile apps.&lt;/p&gt;

&lt;p&gt;While it may not be as easy to pick up as Python, Java is a high-level language, and so it’s still relatively beginner-friendly. However, it has a slow startup and will take beginners much longer to deploy their first project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.javascript.com/"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
JavaScript is another incredibly popular language. Many websites that you use every day rely on JavaScript including Twitter, Gmail, Spotify, Facebook, and Instagram according to General Assembly.&lt;/p&gt;

&lt;p&gt;Additionally, it’s a must-have when adding interactivity to websites because it communicates with HTML and CSS. This makes it essential for front-end development and consumer-facing websites while becoming increasingly important in back-end development and growing in demand all the time. Because of its popularity, JavaScript is also the leading the charge in test automation frameworks, being the backbone of frameworks like Protractor and Nightwatch.JS.&lt;/p&gt;

&lt;p&gt;There’s nothing to install with JavaScript since it’s already built into browsers, so it’s the easiest language to get started with in terms of set-up. The con here is that this means it’s interpreted differently across browsers (you’ll need to do some extra cross-browser testing) and may have deficiencies in responsive design compared to server-side scripts.&lt;/p&gt;

&lt;p&gt;Again, while it’s not the most difficult to learn, it certainly isn’t as easy as Python. If Javascript does seem difficult at first, try out this Javascript tutorial that’s so easy a cat could do it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rubyonrails.org/"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ruby is similar to Python in that it’s one of the easiest languages for people with no prior programming experience to read. You don’t need to know a ton of commands or programming vocabulary to learn it, and it has a multitude of libraries and tools that come in handy.&lt;/p&gt;

&lt;p&gt;A big reason people like Ruby is because of the awesome full-stack framework, Ruby on Rails, which is becoming increasingly popular among startups and enterprise solutions. Airbnb, Groupon, Hulu, and Soundcloud are just a few of the websites that were built with Ruby on Rails, and Ruby has quite the active developer community today.&lt;/p&gt;

&lt;p&gt;The reason it’s so popular for small businesses, however, is often one of the many criticisms against it. Ruby can have the challenge of scalability across a large system and may have a hard time with performance on larger websites. Additionally, while Ruby is certainly easy to learn, you’ll find most of the opportunities come from learning Ruby on Rails, which may slow down your learning curve if you were just expecting to take the easy way out to create a website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So, What’s the Best Programming Language to Learn?&lt;/strong&gt;&lt;br&gt;
If you’re looking for something easy: &lt;strong&gt;Python&lt;/strong&gt;&lt;br&gt;
If you want a solid foundation to make you a master developer: &lt;strong&gt;C&lt;/strong&gt;&lt;br&gt;
If you’re looking for a job or want to make mobile apps: &lt;strong&gt;Java&lt;/strong&gt;&lt;br&gt;
If you want to try front-end development: &lt;strong&gt;Javascript&lt;/strong&gt;&lt;br&gt;
If you’re programming for your startup’s website: &lt;strong&gt;Ruby&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aJXeMUeB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ptxbgx2uqjquesvdivpl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aJXeMUeB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ptxbgx2uqjquesvdivpl.png" alt="Choose the best as per your need !" width="880" height="972"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;All the credits goes to their respective Creator !&lt;/em&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>People disable javascript in their browser? 😱  Give 'em something to cry about!</title>
      <author>IroncladDev</author>
      <pubDate>Sat, 01 Jan 2022 13:16:06 +0000</pubDate>
      <link>https://dev.to/ironcladdev/people-disable-javascript-in-their-browser-give-em-something-to-cry-about-4mif</link>
      <guid>https://dev.to/ironcladdev/people-disable-javascript-in-their-browser-give-em-something-to-cry-about-4mif</guid>
      <description>&lt;p&gt;Did you know that two percent of people that use the internet disable javascript in their browser?  That's a &lt;em&gt;surprising&lt;/em&gt; amount.&lt;/p&gt;

&lt;p&gt;Guess what?  If you're a web developer using react, jquery, or some other js lib, it's gonna go haywire on them.  Pitiful, eh?  It won't even run!  If you are using react on the client side for a simple application, it won't even run.&lt;/p&gt;

&lt;p&gt;In this article, I'm going to show you some pretty (dark) techniques to make them turn javascript on forever.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-the-tag"&gt;
  &lt;/a&gt;
  1. The  tag
&lt;/h2&gt;

&lt;p&gt;This tag will display an html document on top of the existing one if javascript is disabled.  All you have to do is put it in your html somewhere.  You can not only store text, but also meta tags, headers, html bodies, and more!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;noscript&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Only Monkeys don't use javascript in their browser!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/noscript&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Something I've found useful on stackoverflow is redirecting them to a different page in your site.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;noscript&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"refresh"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"0;URL=/monkeysdontusejs"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/noscript&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pro Tip: Store a massive gif that takes up almost the whole screen size in the noscript tag or a rickroll video.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-the-ip-logger-prank"&gt;
  &lt;/a&gt;
  2. The IP logger prank
&lt;/h2&gt;

&lt;p&gt;You can still log user IP addresses even when a client lives with javascript disabled.&lt;/p&gt;

&lt;p&gt;I used Next.js for this since it does server-side rendering and can collect some sweet props from the backend and pass it to the frontend for you.&lt;/p&gt;

&lt;p&gt;What I did was use the &lt;code&gt;request-ip&lt;/code&gt; npm package and pass that as a prop from the backend with &lt;code&gt;getServerSideProps&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;requestIp&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;request-ip&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getServerSideProps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;addr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;requestIp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getClientIp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's the example: &lt;a href="https://next-gen-noscript-killer.ironcladdev.repl.co/"&gt;https://next-gen-noscript-killer.ironcladdev.repl.co/&lt;/a&gt;&lt;br&gt;
And the code: &lt;a href="https://replit.com/@IroncladDev/next-gen-noscript-killer"&gt;https://replit.com/@IroncladDev/next-gen-noscript-killer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And I promise I'm not logging and stealing IPs.  I don't even know what to do with one if I have it.&lt;/p&gt;

&lt;p&gt;Well, what can you do with this?  Maybe state something about still being able to log ips which makes no difference or that disabling javascript is a security vulnerability.  Go wild!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-render-your-whole-website-with-javascript"&gt;
  &lt;/a&gt;
  3. Render your whole website with javascript
&lt;/h2&gt;

&lt;p&gt;That'll make them feel left out.  Even if a client has javascript disabled, they'll turn it on for a few sites that require it.&lt;/p&gt;

&lt;p&gt;This isn't recommended for production websites, but yeah it works well.&lt;/p&gt;

&lt;p&gt;If you don't want to do that, maybe render your css with javascript or make it so that they can't interact with any apis/backend functions.  Get dirty!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-whoops"&gt;
  &lt;/a&gt;
  4. Whoops.
&lt;/h2&gt;

&lt;p&gt;Looks like &lt;a class="mentioned-user" href="https://dev.to/inhuofficial"&gt;@inhuofficial&lt;/a&gt; is gonna come after me for writing about making accessibility worse.&lt;/p&gt;

&lt;p&gt;This article was for fun, and should be used for fun and not in production-level websites.&lt;/p&gt;

&lt;p&gt;Adding some of these to your personal website or making a prank site would be reasonable.&lt;/p&gt;

&lt;p&gt;Welp, have fun, don't get too dirty, and please share your ideas with me on how to take this a step further!&lt;/p&gt;

&lt;p&gt;Also, happy new year!&lt;/p&gt;




&lt;p&gt;Liked this post?  Be sure to subscribe to my &lt;a href="https://www.connerow.dev"&gt;newsletter&lt;/a&gt; for new posts, new projects, recaps, and more!&lt;/p&gt;

&lt;p&gt;Join my &lt;a href="https://discord.gg/TZCc8P2cyH"&gt;discord&lt;/a&gt; to get in touch and hang out!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>webdev</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>Critical Security Areas That Software Engineers Have To Know To Secure Their Solutions</title>
      <author>Vulcanus</author>
      <pubDate>Sat, 01 Jan 2022 12:44:16 +0000</pubDate>
      <link>https://dev.to/vulcanus/critical-security-areas-that-software-engineers-have-to-know-to-secure-their-solutions-3pkc</link>
      <guid>https://dev.to/vulcanus/critical-security-areas-that-software-engineers-have-to-know-to-secure-their-solutions-3pkc</guid>
      <description>&lt;p&gt;Societies in industrialized countries depend more and more on software. The rising impact of cyber-physical systems on the real world as well as the amount of personally identifiable information collected and processed shows that systems must be secure. This is not easy to achieve due to rising complexity of those systems.&lt;/p&gt;

&lt;p&gt;Organizations have information security departments that support securing business functions and train employees in a variety of security topics to show how to react on certain events and how to handle classified information. While there are trainings for administrators to show them how to secure a system, often little to none effort is put into teaching software engineers and developers on how to develop a secure software solution. This is quite a big issue I'd like to address and raise awareness about.&lt;/p&gt;

&lt;p&gt;The Open Web Application Security Project (OWASP) created the "&lt;a href="https://owasp.org/www-project-proactive-controls/"&gt;OWASP TOP 10 Proactive Controls project (OPC)&lt;/a&gt;" to encourage developers starting with application security. This blog entry summarizes the content of it and adds hints and information to it too. Please keep in mind that this should only raise awareness and is a starting point to help get deeper into this topic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#define-security-requirements"&gt;
  &lt;/a&gt;
  Define Security Requirements
&lt;/h2&gt;

&lt;p&gt;Security falls under the category non-functional requirements. It should define the needed security functionality the software has to satisfy. To save up time and not re-invent the wheel on each new project, you can select security requirements from a catalog. There is a general one called "&lt;a href="https://owasp.org/www-project-application-security-verification-standard/"&gt;Application Security Verification Standard (ASVS)&lt;/a&gt;" and one for the mobile named "&lt;a href="https://github.com/OWASP/owasp-masvs"&gt;Mobile Application Verification Standard (MASVS)&lt;/a&gt;". They contain a collection of requirements which are best practices for each listed category. Fortunately they have mapped those requirements with CWE (common weakness enumeration which is basically a list of software and hardware weaknesses). Depending on the used tools, those CWEs can be automatically scanned in your code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#leverage-security-frameworks-and-libraries"&gt;
  &lt;/a&gt;
  Leverage Security Frameworks and Libraries
&lt;/h2&gt;

&lt;p&gt;Normally third-party libraries/frameworks are included into the project to re-use already written code. You should only use those from trusted sources, which are actively maintained and used by many applications. Keep them up to date and encapsulate the library, so you only expose the required need into your software. There are quite some dependency checkers out there to help you select dependencies and keep them up to date.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#secure-database-access"&gt;
  &lt;/a&gt;
  Secure Database Access
&lt;/h2&gt;

&lt;p&gt;This has some subitems, but we'll go through them quite quickly. Secure your queries. We all know those funny SQL injection jokes, but you can solve this problem quite easily with query parameterization. You can find a cheat sheet from OWASP &lt;a href="https://cheatsheetseries.owasp.org/cheatsheets/Query_Parameterization_Cheat_Sheet.html"&gt;here&lt;/a&gt; and another one from Bobby Tables &lt;a href="https://bobby-tables.com/"&gt;here&lt;/a&gt;.&lt;br&gt;
Database management systems are not always "secure by default" configured. There are guidelines and benchmarks available out there which you should check out like &lt;a href="https://www.cisecurity.org/cis-benchmarks/"&gt;here&lt;/a&gt;.&lt;br&gt;
Access to the database should be properly authenticated. This should take place over a secure channel, and your credentials should be properly secured. Besides authenticating with credentials, you should also check out if it's possible to access it instead with your managed identity.&lt;br&gt;
The last point is secure communication. Encrypting your data in transit by having a end-to-end communication security when sensitive data is transmitted over any network. This can be done via TLS. There are guides there helping you choose the minimum allowed TLS version and choosing a cipher suite.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#encode-and-escape-data"&gt;
  &lt;/a&gt;
  Encode And Escape Data
&lt;/h2&gt;

&lt;p&gt;And here we reach injection attacks again. By encoding characters we ensure that special characters are not processed for malicious intends. This means that the content will be displayed but not executed. For example, instead of sending &lt;code&gt;"&amp;lt;script&amp;gt;"&lt;/code&gt; we encode special characters inputted by the user and send &lt;code&gt;"&amp;amp;lt;script&amp;amp;gt;"&lt;/code&gt; which will be displayed on the browser like &lt;code&gt;"&amp;lt;script&amp;gt;"&lt;/code&gt; but will not be executed. This output encoding should be applied before the content is passed to the target interpreter, to defend against XSS. There are some examples for &lt;a href="https://docs.microsoft.com/en-us/aspnet/core/security/cross-site-scripting"&gt;C#&lt;/a&gt;, &lt;a href="https://owasp.org/www-project-java-encoder/"&gt;Java&lt;/a&gt; and &lt;a href="https://github.com/zendframework/zend-escaper"&gt;PHP&lt;/a&gt;. There are also other types of encoding and injection defenses like "shell escaping" for os command input. Forms of escaping are not limited to those examples listed here. Look for guidelines and best practices when using user input for certain operations.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#validate-all-inputs"&gt;
  &lt;/a&gt;
  Validate All Inputs
&lt;/h2&gt;

&lt;p&gt;You might have already noticed that you can't trust input from clients which means that the data has to be validated before usage.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0nXtL0EI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nux3sea4j58pmp9lue9g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0nXtL0EI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nux3sea4j58pmp9lue9g.png" alt="Exploits of a Mom" width="666" height="205"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Data should be checked that its syntax and semantic is valid. &lt;br&gt;
Syntax validity ensures that data are in a expected form and should not allow any deviations. If three digits are expected, it should be checked that the input consists only of digits and has three digits in length.&lt;br&gt;
Semantic validity accepts input only in an acceptable range specified by the applications functionality and its context. For example a start date has to be before an end date.&lt;/p&gt;

&lt;p&gt;Those validations can be performed both on the client and server side, but security related validations always have to be done on the server side, since the validation on client side can be bypassed.&lt;/p&gt;

&lt;p&gt;There are in general two approaches for syntax validation: blacklisting and whitelisting. While blacklisting blocks exact texts (e.g. &lt;code&gt;"&amp;lt;script&amp;gt;"&lt;/code&gt;) to prevent injections, is whitelisting checking for data set matches. In general it is recommended to use whitelisting on a minimal approach, instead of blacklisting since it is prone to bypasses. In other words, whitelisting limits attack surface, while blacklisting detects and stops obvious attacks.&lt;br&gt;
Bear in mind that those validations have limits. Since complexity allows more variations and posibilities, valid data cann still be dangerous.&lt;/p&gt;

&lt;p&gt;Another way to check whether data matches a specific pattern is the usage of &lt;a href="https://en.wikipedia.org/wiki/Regular_expression"&gt;regular expressions&lt;/a&gt;. This should be used with caution since expressions can get quite complex as well as hard to maintain. It also enables a &lt;a href="https://en.wikipedia.org/wiki/ReDoS"&gt;regular expression denial of service attack&lt;/a&gt; (ReDOS) which produces a denial of service due to the exploitation of the exponential time worst-case scenario.&lt;/p&gt;

&lt;p&gt;There are plenty validation libraries that can be leveraged to validate data. PHP has &lt;a href="https://www.w3schools.com/php/php_ref_filter.asp"&gt;filter functions&lt;/a&gt;, and Java has the &lt;a href="https://hibernate.org/validator/"&gt;Hibernate Validator&lt;/a&gt; and C# the &lt;a href="https://github.com/FluentValidation/FluentValidation"&gt;FluentValidation&lt;/a&gt;. You can also sanitize your data to erase not needed data in your input. Please keep in mind that input validation should not be your primary method to prevent injections and other attacks.&lt;/p&gt;

&lt;p&gt;Another problem you might encounter is the validation of serialized data. &lt;a href="https://owasp.org/www-project-top-ten/2017/A8_2017-Insecure_Deserialization"&gt;Avoid deserializing data from untrusted sources&lt;/a&gt;. If this is not possible, you might want to implement integrity checks or encryption to prevent tampering. Enforce strict type constraints and possibly run code in a low privilege environment like in a temporary container to deserialize data. Log exceptions and failures such as the not expecting  incoming type or failure in deserialization.&lt;/p&gt;

&lt;p&gt;Apart from serialized data, there is also the problem with autobinding. Some frameworks support automatic binding of HTTP request parameters to server-side objects consumed by the application. Those bindings enable an attack vector to exploit a vulnerability called "Mass assignment". For example the user can set a parameter like "isAdmin" to true to elevate privileges. There are two ways to handle this, by either avoid autobinding and use Data Transfer Objects (TDOs) which are basically POCOs, or setup whitelist rules to define which fields are allowed to be auto-bound. There is a cheat sheet by OWASP you might to check out &lt;a href="https://cheatsheetseries.owasp.org/cheatsheets/Mass_Assignment_Cheat_Sheet.html"&gt;here&lt;/a&gt; to get more information on how to resolve this issue.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#enforce-access-controls"&gt;
  &lt;/a&gt;
  Enforce Access Controls
&lt;/h2&gt;

&lt;p&gt;Access Controls manages the access to systems as well as resources and ensures that only authorized users/systems have access. It should be forced that all requests go through the access control to ensure that every request is checked and authorized to pass. You may already come across of the terms privilege, right and permission. Those are not interchangeable terms! For more information, read Wentz Wus &lt;a href="https://wentzwu.com/2020/07/21/privileges-rights-permissions/"&gt;article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This topic should be thoroughly designed up front and taken early into account in the designing phase.&lt;br&gt;
There are different types of access controls that should be considered (but not limited to):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Discretionary_access_control"&gt;Discretionary Access Control&lt;/a&gt; (DAC): lets people manage content by their own.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Mandatory_access_control"&gt;Mandatory Access Control&lt;/a&gt; (MAC): restricts access based on sensitivity (by a label) of the information and the authorization of the user to access such sensitivity.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Role-based_access_control"&gt;Role Based Access Control&lt;/a&gt; (RBAC): controls access to resources based on defined rules. Performed actions are identified with roles rather than with individual subject identities.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Attribute-based_access_control"&gt;Attribute Based Access Control&lt;/a&gt; (ABAC) manages the request based on policies which combines attributes of the user and object.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are two principles that you should embed when using access controls. The first is deny by default. This means that if a request is not specifically allowed it must be denied. The second is the principle of least privilege. Ensure that only the least and only necessary access is possible. Often when time passes, it can happen that &lt;a href="https://www.techtarget.com/searchsecurity/definition/privilege-creep"&gt;privilege creep&lt;/a&gt; occurs. This means that an identity accumulated access rights and has higher privileges than necessary, so keep that in mind and check regularly if certain permissions and rights are needed.&lt;/p&gt;

&lt;p&gt;Linked to a granular access control is the programmed check of permissions. Many applications use access controls that are role based. This limits the developers and adds dangers to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hasRole&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"SuperUser"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;||&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hasRole&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Admin"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;doAction&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead your should implement rights and check for them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hasRight&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"RightX"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;doAction&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With this, you don't need to re-deploy everything if new roles are added that should have the privilege to perform actions and it is easier to maintain. It also enables for a more granular access control which helps administrators to configure the system more securely.&lt;/p&gt;

&lt;p&gt;Furthermore, you should ensure that all access control failures should be logged to ensure &lt;a href="https://en.wikipedia.org/wiki/Non-repudiation"&gt;non-repudiation&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-protection"&gt;
  &lt;/a&gt;
  Data Protection
&lt;/h2&gt;

&lt;p&gt;Data can contain sensitive information which requires more protection, since it may fall under laws and regulations. It is important to classify data in your system to determine sensitivity. Depending on those classifications it may also add security requirements to the system/infrastructure that collects, processes or stores this data.&lt;/p&gt;

&lt;p&gt;Data can be in three states. At rest, in transit or in use. Depending on the classification you have to secure the data in each state to avoid information disclosure.&lt;/p&gt;

&lt;p&gt;Application secrets should never be stored in code, configs or other files. Keep them in a secret vault like Azure KeyVault or Amazon KMS. Besides security this also gives more flexibility on configuring your solution.&lt;/p&gt;

&lt;p&gt;I would like to add here to also think about &lt;a href="https://en.wikipedia.org/wiki/Data_retention"&gt;data retention&lt;/a&gt; as well as backup strategies. For data retention you have to keep laws and regulations in mind. Consult with a specialist or lawyer to know what the requirements are. &lt;/p&gt;

&lt;p&gt;Backup strategies should not only be planned and executed, but also the results tested. There is a saying that you do not have a backup when you did not test it. In the end, you do not want to be on several tech blogs because of some &lt;a href="https://techcrunch.com/2017/02/01/gitlab-suffers-major-backup-failure-after-data-deletion-incident/"&gt;deletion incident and backup failure like GitLab&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implement-security-logging-and-monitoring"&gt;
  &lt;/a&gt;
  Implement Security Logging and Monitoring
&lt;/h2&gt;

&lt;p&gt;The concept of Security logging is to log security information during runtime. It can be used for forensic analysis and investigations, as well as satisfying regulatory compliance requests. Monitoring is the live review of logs using various forms of automation.&lt;/p&gt;

&lt;p&gt;Logging solutions must be designed, build and managed in a secure way. Encode and validate dangerous characters before logging to prevent &lt;a href="https://owasp.org/www-community/attacks/Log_Injection"&gt;injections or forging attacks&lt;/a&gt;. Ensure log integrity to protect against tampering. When logging, remove any sensitive information to avoid information disclosure. There should also be a common logging format to be consistent. Keep also an eye on time syncing across systems to have consistent timestamps in your logs. Furthermore, you should forward logs to a central, secure logging service to allow centralized monitoring and securing log data.&lt;/p&gt;

&lt;p&gt;To identify potentially malicious activties, following activies can be logged as high severity:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Submitted data that is outside of an expected range&lt;/li&gt;
&lt;li&gt;Submitted data that contains changes that should not be modifiable&lt;/li&gt;
&lt;li&gt;Requests violating access control rules&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For a more comprehensive list, check out OWASPs AppSensor Detection_points tab here.&lt;br&gt;
When encountering those activties, the application should respond to possible attacks and shut them down.&lt;/p&gt;

&lt;p&gt;There is also a small cheat sheet related to application security logging here.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#handle-all-errors-and-exceptions"&gt;
  &lt;/a&gt;
  Handle all Errors and Exceptions
&lt;/h2&gt;

&lt;p&gt;Exceptions can happen in various ways and should be handled accordingly. This handling occurs in all areas of the application including business logic and security features. It is also important for intrusion detection. Certain attacks against the application may trigger errors which can help detect attacks in progress.&lt;/p&gt;

&lt;p&gt;Manage exceptions in a centralized manner to avoid duplicated try/catch blocks and ensure all unexpected behavior is correctly handled. When displaying the error message to the user, be sure that you do not leak any critical information but still provide enough information to respond properly.&lt;br&gt;
When logging error messages, provide enough information so that the support, forensics and incident response teams understand the problem.&lt;/p&gt;

&lt;p&gt;To help discover possible failures early, you can also use Netflix's &lt;a href="https://github.com/netflix/chaosmonkey"&gt;Chaos Monkey&lt;/a&gt;. It randomly terminates VMs and containers to show how resilient your services are.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-more-information"&gt;
  &lt;/a&gt;
  Some more Information
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#code-review"&gt;
  &lt;/a&gt;
  Code Review
&lt;/h3&gt;

&lt;p&gt;Besides the mentioned areas, you should also have a look at OWASP's &lt;a href="https://owasp.org/www-project-code-review-guide/"&gt;Code Review Guide&lt;/a&gt;. It is quite comprehensive but also raises awareness on different topics, containing code examples and figures to illustrate in an easy way to show what has to be considered when reviewing code besides clean code practices and business logic.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#do-not-write-your-own-encryption"&gt;
  &lt;/a&gt;
  Do not write your own encryption
&lt;/h3&gt;

&lt;p&gt;Some developers are tempted to rollout their own encryption. &lt;a href="https://www.schneier.com/blog/archives/2011/04/schneiers_law.html"&gt;Schneir's Law&lt;/a&gt; states&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Anyone, from the most clueless amateur to the best cryptographer, can create an algorithm that he himself can't break.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since those persons believe that they can not break their cipher, they use it as evidence that it is unbreakable. This is a good example of the &lt;a href="https://en.wikipedia.org/wiki/Dunning%E2%80%93Kruger_effect"&gt;Dunning-Kruger effect&lt;/a&gt;. There is a &lt;a href="https://crypto.stackexchange.com/questions/43272/why-is-writing-your-own-encryption-discouraged"&gt;discussion&lt;/a&gt; on why it is discouraged to write your own encryption on Stack Exchange.&lt;br&gt;
Therefore use existing solutions that are recognized by the industry and follow their best practices.&lt;/p&gt;

</description>
      <category>cybersecurity</category>
      <category>security</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>08 Advantages Of Using Illustrations In UI Design</title>
      <author>imanbhuiyan96</author>
      <pubDate>Sat, 01 Jan 2022 12:24:56 +0000</pubDate>
      <link>https://dev.to/imanbhuiyan96/08-advantages-of-using-illustrations-in-ui-design-f87</link>
      <guid>https://dev.to/imanbhuiyan96/08-advantages-of-using-illustrations-in-ui-design-f87</guid>
      <description>&lt;p&gt;Let’s &lt;a href="https://vector.cx/08-advantages-of-using-illustrations-in-ui-design/"&gt;talk about&lt;/a&gt; how illustrations can help designers increase the usability of their visual designs and encourage users to keep on reading or interacting with your interfaces.&lt;br&gt;
&lt;a href="https://vector.cx/08-advantages-of-using-illustrations-in-ui-design/"&gt;https://vector.cx/08-advantages-of-using-illustrations-in-ui-design/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>design</category>
      <category>uiweekly</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Add some effects to text using JavaScript</title>
      <author>mohamedfrindi</author>
      <pubDate>Sat, 01 Jan 2022 12:22:37 +0000</pubDate>
      <link>https://dev.to/mohamedfrindi/add-some-effects-to-text-using-javascript-1nk5</link>
      <guid>https://dev.to/mohamedfrindi/add-some-effects-to-text-using-javascript-1nk5</guid>
      <description>&lt;p&gt;You can add some simple effects to texts through this simple library using JavaScript&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;demo&lt;/strong&gt; : &lt;a href="https://github.com/mohamedfrindi/TxtAnime.js"&gt;https://github.com/mohamedfrindi/TxtAnime.js&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>My Roadmap 2022 : you are not a real developer yet 😅</title>
      <author>Rawan Amr Abdulsattar</author>
      <pubDate>Sat, 01 Jan 2022 11:38:49 +0000</pubDate>
      <link>https://dev.to/rawan_amr_abdulsattar/my-roadmap-2022-from-a-beginner-to-advanced-developer-1cp4</link>
      <guid>https://dev.to/rawan_amr_abdulsattar/my-roadmap-2022-from-a-beginner-to-advanced-developer-1cp4</guid>
      <description>&lt;p&gt;At the end of &lt;strong&gt;2021&lt;/strong&gt; I found myself a programmer who only knows about some programming languages and some frameworks but with no real programming experience,no projects and no achievements. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-"&gt;
  &lt;/a&gt;
  Why ?
&lt;/h2&gt;

&lt;p&gt;It was because I didn't start with the &lt;strong&gt;fundamentals&lt;/strong&gt;, I didn't learn about algorithms, data structures or anything important as Big O.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-decision"&gt;
  &lt;/a&gt;
  My Decision
&lt;/h2&gt;

&lt;p&gt;I decided to start from the beginning as if I learnt nothing before, and then wrote my goals of 2022, &lt;strong&gt;a modified roadmap every beginner should use.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;My Roadmap 2022:&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-introduction-to-programming"&gt;
  &lt;/a&gt;
  1- Introduction to programming:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--586swKkh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/27fm0ravp7i1pmwjzi4i.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--586swKkh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/27fm0ravp7i1pmwjzi4i.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
Programming is writing computer code to create a program, to solve a problem. Programs are created to implement algorithms . Algorithms can be represented as pseudocode or a flowchart , and programming is the translation of these into a computer program.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=zOjov-2OZ0E&amp;amp;t=378s"&gt;Freecodecamp video&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2algorithms-and-data-structures"&gt;
  &lt;/a&gt;
  2-Algorithms and data structures
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SST-1-rv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w00hhh69j0sbv5ravlhp.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SST-1-rv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w00hhh69j0sbv5ravlhp.jpeg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
A data structure is a named location that can be used to store and organize data. And, an algorithm is a collection of steps to solve a particular problem. Learning data structures and algorithms allow us to write efficient and optimized computer programs.&lt;br&gt;
Freecodecamp videos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First video : &lt;a href="https://www.youtube.com/watch?v=RBSGKlAvoiM&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=4"&gt;https://www.youtube.com/watch?v=RBSGKlAvoiM&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=4&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Second video: &lt;a href="https://www.youtube.com/watch?v=zg9ih6SVACc&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=5"&gt;https://www.youtube.com/watch?v=zg9ih6SVACc&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=5&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Third video: &lt;a href="https://www.youtube.com/watch?v=BBpAmxU_NQo&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=8"&gt;https://www.youtube.com/watch?v=BBpAmxU_NQo&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=8&lt;/a&gt;&lt;br&gt;
)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-learn-dynamic-programming"&gt;
  &lt;/a&gt;
  3- Learn dynamic programming
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xdWsKXKL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fkx4hhs9tplp1rabydj1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xdWsKXKL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fkx4hhs9tplp1rabydj1.png" alt="Image description" width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dynamic programming is both a mathematical optimization method and a computer programming method. &lt;br&gt;
Freecodecamp dynamic programming video: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=oBt53YbR9Kk&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=7"&gt;https://www.youtube.com/watch?v=oBt53YbR9Kk&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=7&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-take-cs50-course"&gt;
  &lt;/a&gt;
  4- Take CS50 Course:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZFD5Cm7d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q41284kkcsupetnz4uai.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZFD5Cm7d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q41284kkcsupetnz4uai.jpg" alt="Image description" width="650" height="327"&gt;&lt;/a&gt;&lt;br&gt;
CS50 is an on-campus and online introductory course on computer science taught at Harvard University and Yale University. In 2016, CS50 became available to high school students as an Advanced Placement Computer Science course&lt;/p&gt;

&lt;p&gt;Most Important lectures in my opinion are :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=tI_tIZFyKBw&amp;amp;list=PLzHzhIMAxNqybs6a-CaQ_ClV2BhKpWtjj&amp;amp;index=3"&gt;Arrays&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=gR6nycuZKlM&amp;amp;list=PLzHzhIMAxNqybs6a-CaQ_ClV2BhKpWtjj&amp;amp;index=4"&gt;Algorithms&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=NKTfNv2T0FE&amp;amp;list=PLzHzhIMAxNqybs6a-CaQ_ClV2BhKpWtjj&amp;amp;index=5"&gt;Memory&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=2T-A_GFuoTo&amp;amp;list=PLzHzhIMAxNqybs6a-CaQ_ClV2BhKpWtjj&amp;amp;index=6"&gt;Data structures&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=ZEQh45W_UDo&amp;amp;list=PLzHzhIMAxNqybs6a-CaQ_ClV2BhKpWtjj&amp;amp;index=7"&gt;Python&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Wb0DM9I8RDo&amp;amp;list=PLzHzhIMAxNqybs6a-CaQ_ClV2BhKpWtjj&amp;amp;index=8"&gt;SQL&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-learn-about-big-o-notation"&gt;
  &lt;/a&gt;
  5- learn about BIG O notation:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1qVd7nvE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j80rkuszey1qiyrhq9ey.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1qVd7nvE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j80rkuszey1qiyrhq9ey.png" alt="Image description" width="880" height="440"&gt;&lt;/a&gt;&lt;br&gt;
Big O notation is a mathematical notation that describes the limiting behavior of a function when the argument tends towards a particular value or infinity.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Freecodecamp : &lt;a href="https://www.youtube.com/watch?v=Mo4vesaut8g&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=1"&gt;https://www.youtube.com/watch?v=Mo4vesaut8g&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CS dojo: &lt;a href="https://www.youtube.com/watch?v=D6xkbGLQesk&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=2"&gt;https://www.youtube.com/watch?v=D6xkbGLQesk&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=2&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hacker rank: &lt;a href="https://www.youtube.com/watch?v=v4cd1O4zkGw&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=3"&gt;https://www.youtube.com/watch?v=v4cd1O4zkGw&amp;amp;list=PLFHhlerk7ViiaNgD65WA0LhdILaxPbOcx&amp;amp;index=3&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#6-learn-dart-and-flutter"&gt;
  &lt;/a&gt;
  6- Learn Dart and flutter:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UKgllGO8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tdp7atz4s3th5g09hw9h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UKgllGO8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tdp7atz4s3th5g09hw9h.png" alt="Image description" width="880" height="440"&gt;&lt;/a&gt;&lt;br&gt;
Flutter is a cross-platform software development framework that was presented by Google in 2015 and received its first release in May of 2017. Flutter nowadays has steadily grown and provided possibilities not only for iOS and Android mobile development but also for web and desktop applications as well.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Freecodecamp : &lt;a href="https://www.youtube.com/watch?v=pTJJsmejUOQ&amp;amp;t=35s"&gt;https://www.youtube.com/watch?v=pTJJsmejUOQ&amp;amp;t=35s&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Acadmind: &lt;a href="https://www.youtube.com/watch?v=x0uinJvhNxI&amp;amp;t=272s"&gt;https://www.youtube.com/watch?v=x0uinJvhNxI&amp;amp;t=272s&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The net ninja : &lt;a href="https://www.youtube.com/watch?v=1ukSR1GRtMU&amp;amp;list=PL4cUxeGkcC9jLYyp2Aoh6hcWuxFDX6PBJ"&gt;https://www.youtube.com/watch?v=1ukSR1GRtMU&amp;amp;list=PL4cUxeGkcC9jLYyp2Aoh6hcWuxFDX6PBJ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#7program-projects-on-your-own"&gt;
  &lt;/a&gt;
  7-Program projects on your own
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5cOgslQM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/abl1vpwux2mmq7xewcha.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5cOgslQM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/abl1vpwux2mmq7xewcha.jpg" alt="Image description" width="710" height="311"&gt;&lt;/a&gt;&lt;br&gt;
After you practice projects in the coursesyou should make at least 4-6 projects on your own from scratch and upload them on GitHub&lt;/p&gt;

&lt;p&gt;project ideas:&lt;/p&gt;

&lt;p&gt;👉 Uber Clone with Flutter. ...&lt;br&gt;
👉 E-Commerce App using Flutter. ...&lt;br&gt;
👉 Clubhouse Clone UI using Flutter. ...&lt;br&gt;
👉 SpaceX Go - Launch Tracker using Flutter. ...&lt;br&gt;
👉 Tetris Game using Flutter. ...&lt;br&gt;
👉 Build a Beautiful Pokedex (Pokemon) App using Flutter. ...&lt;br&gt;
👉 Game Store using Flutter. ...&lt;br&gt;
👉 Proximity - Flutter Widgets App.&lt;/p&gt;

&lt;p&gt;Read this &lt;a href="https://www.theinsaneapp.com/2021/06/flutter-projects-with-source-code.html"&gt;article&lt;/a&gt; for more project ideas&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-read-books"&gt;
  &lt;/a&gt;
  8- Read books
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gqwa24_s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/52j1s7dofierl8m8qg7j.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gqwa24_s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/52j1s7dofierl8m8qg7j.jpeg" alt="Image description" width="880" height="440"&gt;&lt;/a&gt;&lt;br&gt;
You must read one book at least about programming and it will help you.&lt;/p&gt;

&lt;p&gt;Books about flutter:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Beginning App Development with Flutter.&lt;/li&gt;
&lt;li&gt;Beginning Flutter: A Hands On Guide to App Development.&lt;/li&gt;
&lt;li&gt;Flutter Apprentice.&lt;/li&gt;
&lt;li&gt;Flutter Complete Reference.&lt;/li&gt;
&lt;li&gt;Flutter: Développez vos applications mobiles multiplateformes avec Dart.&lt;/li&gt;
&lt;li&gt;Flutter for Beginners.&lt;/li&gt;
&lt;li&gt;Flutter in Action.&lt;/li&gt;
&lt;li&gt;Flutter Libraries We Love.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#9-build-your-resume"&gt;
  &lt;/a&gt;
  9- Build your resume
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LgsRDNOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n0kglli3mrvr1nflk319.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LgsRDNOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n0kglli3mrvr1nflk319.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
Build a nice resume to land your first job, and it should include :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Your name, email address, and social media accounts&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;skills with the percentage of experience&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;project links on GitHub&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;your education level and degree if you have one&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;course certifications if present&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;languages you speak and mention your mother language&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#so"&gt;
  &lt;/a&gt;
  So,
&lt;/h2&gt;

&lt;p&gt;That was it for this post , follow me , like ,share if you like it and if you have any comments type them in the comment section below and thanks for reading.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#information-about-me-"&gt;
  &lt;/a&gt;
  Information about me :
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Name: Rawan Amr Abdulsattar&lt;/li&gt;
&lt;li&gt;Gender: female&lt;/li&gt;
&lt;li&gt;Nationality: Egyptian&lt;/li&gt;
&lt;li&gt;Blog: &lt;a href="https://codewithrona.blogspot.com/"&gt;https://codewithrona.blogspot.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Email address: &lt;a href="mailto:rawanamrabdulsattar@gmail.com"&gt;rawanamrabdulsattar@gmail.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Dev.To account: &lt;a href="https://dev.to/rawan_amr_abdulsattar"&gt;https://dev.to/rawan_amr_abdulsattar&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Twitter : &lt;a href="https://twitter.com/RawanAmr1552006"&gt;https://twitter.com/RawanAmr1552006&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Instagram : &lt;a href="https://www.instagram.com/rawanamr1552006/"&gt;https://www.instagram.com/rawanamr1552006/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>beginners</category>
      <category>android</category>
      <category>flutter</category>
      <category>mobile</category>
    </item>
    <item>
      <title>Create Image slider using Js and CSS</title>
      <author>anomaly3108</author>
      <pubDate>Sat, 01 Jan 2022 11:25:25 +0000</pubDate>
      <link>https://dev.to/anomaly3108/create-image-slider-using-js-and-css-48l3</link>
      <guid>https://dev.to/anomaly3108/create-image-slider-using-js-and-css-48l3</guid>
      <description>&lt;p&gt;In this article, we are going to make an Image Slider with a clean UI and smooth transition. First, Let's see what are we building.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#preview"&gt;
  &lt;/a&gt;
  PREVIEW
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1VPCyh4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lkchj8pzdo19yd1sqmz2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1VPCyh4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lkchj8pzdo19yd1sqmz2.gif" alt="Image description" width="575" height="402"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="container"&amp;gt;
     &amp;lt;div class="img-comp-container"&amp;gt;
          &amp;lt;div class="img-comp-img"&amp;gt;
               &amp;lt;img src="a.png" height="400" width="300"&amp;gt;
          &amp;lt;/div&amp;gt;
          &amp;lt;div class="img-comp-img img-comp-overlay"&amp;gt;
               &amp;lt;img src="b.png" height="400" width="300"&amp;gt;
          &amp;lt;/div&amp;gt;
     &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will have an outer div with class &lt;code&gt;.img-comp-container&lt;/code&gt;. It will have two separate children.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;.img-comp-img&lt;/code&gt;: It will contain the first image.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;.img-comp-overlay&lt;/code&gt;: It will contain the second image for overlay. This image will be overlayed over the top of first image to create the effect of sliding.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I guess now you have an overview of what are we doing. Now let's get into the CSS.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;* {
    box-sizing: border-box;
}

.img-comp-container {
    position: relative;
    height: 500px;
}

.img-comp-img {
    position: absolute;
    width: auto;
    height: auto;
    overflow: hidden;
}

.img-comp-img img {
    padding: 20px;
    display: table-row;
}
.container {
    display: table;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This CSS is for the image that will be displayed on the screen.&lt;br&gt;
Everything above is self-explanatory but If you have any queries then comment down.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.img-comp-slider {
    position: absolute;
    z-index: 9;
    cursor: ew-resize;
    /*set the appearance of the slider:*/
    width: 40px;
    height: 40px;
    background: url(slider_icon.jpg);
    background-color: #ffffff70;
    background-repeat: round;
    backdrop-filter: blur(5px);
    border-radius: 50%;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;this CSS is for the slider button &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  Javascript
&lt;/h1&gt;

&lt;p&gt;This is where the fun begins. Let's see from the scratch.&lt;br&gt;
First, we need to find all elements with an "overlay" (&lt;code&gt;img-comp-overlay&lt;/code&gt;) class&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var x, i;
    /*find all elements with an "overlay" class:*/
    x = document.getElementsByClassName("img-comp-overlay");
    for (i = 0; i &amp;lt; x.length; i++) {
        /*once for each "overlay" element:
        pass the "overlay" element as a parameter when executing the compareImages function:*/
        compareImages(x[i]);
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we will create a function &lt;code&gt;compareImages&lt;/code&gt; with an &lt;code&gt;img&lt;/code&gt; parameter&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function compareImages(img) {
   var slider, img, clicked = 0, w, h;
   /*get the width and height of the img element*/
   w = img.offsetWidth;
   h = img.offsetHeight;
   /*set the width of the img element to 50%:*/
   img.style.width = (w / 2) + "px";
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, We will create the slider using Js in the same function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/*create slider:*/
slider = document.createElement("DIV");
slider.setAttribute("class", "img-comp-slider");
/*insert slider*/
img.parentElement.insertBefore(slider, img);
position the slider in the middle:*/
slider.style.top = (h / 2) - (slider.offsetHeight / 2) + "px";
slider.style.left = (w / 2) - (slider.offsetWidth / 2) + "px";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, Let us add the listeners that will be triggered when we press the mouse button.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/*execute a function when the mouse button is pressed:*/
slider.addEventListener("mousedown", slideReady);
/*and another function when the mouse button is released:*/
window.addEventListener("mouseup", slideFinish);    
/*or touched (for touch screens:*/
slider.addEventListener("touchstart", slideReady);
/*and released (for touch screens:*/
window.addEventListener("touchstop", slideFinish);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, Basic structure of our slider is created. Next we need to create some functions that will perform the main functionality of the slider. i.e, Slide over the the image.&lt;/p&gt;

&lt;p&gt;For this we will first create &lt;code&gt;slideReady&lt;/code&gt; Function inside the &lt;code&gt;compareImages&lt;/code&gt; Function that will be executed when mouse button is pressed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function slideReady(e) {
    /*prevent any other actions that may occur when moving over the image:*/
    e.preventDefault();
    /*the slider is now clicked and ready to move:*/
    clicked = 1;
    /*execute a function when the slider is moved:*/
    window.addEventListener("mousemove", slideMove);
    window.addEventListener("touchmove", slideMove);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, create another Function inside the &lt;code&gt;compareImages&lt;/code&gt; Function when the slider is no longer clicked&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function slideFinish() {
    /*the slider is no longer clicked:*/
    clicked = 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we will create 3 more functions in &lt;code&gt;compareImages&lt;/code&gt; with which we will get the cursor position and move the slider accordingly across the Image window&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function slideMove(e) {
    var pos;
    /*if the slider is no longer clicked, exit this function:*/
    if (clicked == 0) return false;
    /*get the cursor's x position:*/
    pos = getCursorPos(e)
        /*prevent the slider from being positioned outside the image:*/
    if (pos &amp;lt; 0) pos = 0;
    if (pos &amp;gt; w) pos = w;
    /*execute a function that will resize the overlay image according to the cursor:*/
    slide(pos);
}

function getCursorPos(e) {
    var a, x = 0;
    e = e || window.event;
    /*get the x positions of the image:*/
    a = img.getBoundingClientRect();
    /*calculate the cursor's x coordinate, relative to the image:*/
    x = e.pageX - a.left;
    /*consider any page scrolling:*/
    x = x - window.pageXOffset;
    return x;
}

function slide(x) {
    /*resize the image:*/
    img.style.width = x + "px";
    /*position the slider:*/
    slider.style.left = img.offsetWidth - (slider.offsetWidth / 2) + "px";
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Wrap it all in a parent function with name &lt;code&gt;initComparisons&lt;/code&gt;.&lt;br&gt;
Now we have covered all the aspects of this now let's see the full  &lt;code&gt;Scripts.js&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function initComparisons() {
    var x, i;
    /*find all elements with an "overlay" class:*/
    x = document.getElementsByClassName("img-comp-overlay");
    for (i = 0; i &amp;lt; x.length; i++) {
        /*once for each "overlay" element:
        pass the "overlay" element as a parameter when executing the compareImages function:*/
        compareImages(x[i]);
    }

    function compareImages(img) {
        var slider, img, clicked = 0,
            w, h;
        /*get the width and height of the img element*/
        w = img.offsetWidth;
        h = img.offsetHeight;
        /*set the width of the img element to 50%:*/
        img.style.width = (w / 2) + "px";
        /*create slider:*/
        slider = document.createElement("DIV");
        slider.setAttribute("class", "img-comp-slider");
        /*insert slider*/
        img.parentElement.insertBefore(slider, img);
        /*position the slider in the middle:*/
        slider.style.top = (h / 2) - (slider.offsetHeight / 2) + "px";
        slider.style.left = (w / 2) - (slider.offsetWidth / 2) + "px";
        /*execute a function when the mouse button is pressed:*/
        slider.addEventListener("mousedown", slideReady);
        /*and another function when the mouse button is released:*/
        window.addEventListener("mouseup", slideFinish);
        /*or touched (for touch screens:*/
        slider.addEventListener("touchstart", slideReady);
        /*and released (for touch screens:*/
        window.addEventListener("touchstop", slideFinish);

        function slideReady(e) {
            /*prevent any other actions that may occur when moving over the image:*/
            e.preventDefault();
            /*the slider is now clicked and ready to move:*/
            clicked = 1;
            /*execute a function when the slider is moved:*/
            window.addEventListener("mousemove", slideMove);
            window.addEventListener("touchmove", slideMove);
        }

        function slideFinish() {
            /*the slider is no longer clicked:*/
            clicked = 0;
        }

        function slideMove(e) {
            var pos;
            /*if the slider is no longer clicked, exit this function:*/
            if (clicked == 0) return false;
            /*get the cursor's x position:*/
            pos = getCursorPos(e)
                /*prevent the slider from being positioned outside the image:*/
            if (pos &amp;lt; 0) pos = 0;
            if (pos &amp;gt; w) pos = w;
            /*execute a function that will resize the overlay image according to the cursor:*/
            slide(pos);
        }

        function getCursorPos(e) {
            var a, x = 0;
            e = e || window.event;
            /*get the x positions of the image:*/
            a = img.getBoundingClientRect();
            /*calculate the cursor's x coordinate, relative to the image:*/
            x = e.pageX - a.left;
            /*consider any page scrolling:*/
            x = x - window.pageXOffset;
            return x;
        }

        function slide(x) {
            /*resize the image:*/
            img.style.width = x + "px";
            /*position the slider:*/
            slider.style.left = img.offsetWidth - (slider.offsetWidth / 2) + "px";
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the final step, use this script in HTML and call the &lt;code&gt;initComparisons&lt;/code&gt; function at the starting of the page where you want the slider.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    initComparisons();
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The final product will look like:-&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yvv3x-Ro--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/044pq2jwhnu83l1lgrwj.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yvv3x-Ro--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/044pq2jwhnu83l1lgrwj.gif" alt="Image description" width="400" height="540"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h1&gt;

&lt;p&gt;I hope you enjoyed the article, if yes then don't forget to press ❤️. You can also bookmark it for later use. It was fun to make this slider and If you have any queries or suggestions don't hesitate to drop them. See you. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>css</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Upload multiple images and rename them using drag &amp; drop UI using dropzone.js</title>
      <author>Sahil kashyap</author>
      <pubDate>Sat, 01 Jan 2022 11:18:17 +0000</pubDate>
      <link>https://dev.to/sahilkashyap64/upload-multiple-images-and-rename-them-using-drag-drop-ui-using-dropzonejs-3e0j</link>
      <guid>https://dev.to/sahilkashyap64/upload-multiple-images-and-rename-them-using-drag-drop-ui-using-dropzonejs-3e0j</guid>
      <description>&lt;h2&gt;
  &lt;a href="#dropzonejs-multiupload-with-rename-functionality"&gt;
  &lt;/a&gt;
  Dropzone.js Multiupload with rename functionality
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#scenrio-user-wants-to-upload-logos-of-tv-channelssports-team-etc-if-he-uploads-one-by-one-it-is-a-hassle"&gt;
  &lt;/a&gt;
  Scenrio: User wants to upload logos of tv channels/sports team etc, if he uploads one by one it is a hassle.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Rough design, how UI might look(How I intially imagined it to be)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z2FA-uSH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/sahilkashyap64/dropzone-sortablejs-multiupload-rename/master/img/UI%2520formultiupload%2520and%2520rename.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z2FA-uSH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/sahilkashyap64/dropzone-sortablejs-multiupload-rename/master/img/UI%2520formultiupload%2520and%2520rename.png" alt="UI drawn using excalidraw" width="880" height="263"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#used-these-js-lib"&gt;
  &lt;/a&gt;
  Used these js lib
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Lib&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;Use&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;dropzone.min.js&lt;/td&gt;
&lt;td&gt;^5.9.3&lt;/td&gt;
&lt;td&gt;Multi drop images&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sortable.js&lt;/td&gt;
&lt;td&gt;^*&lt;/td&gt;
&lt;td&gt;Sort dropzone instances&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select2.min.js&lt;/td&gt;
&lt;td&gt;^4.0.13&lt;/td&gt;
&lt;td&gt;For multiselect&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;jquery.js&lt;/td&gt;
&lt;td&gt;^0.3.1&lt;/td&gt;
&lt;td&gt;simple add/remove items from dom&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Using Html drag and drop API, was able to create the ui.&lt;br&gt;
Renaming is done via server side(Laravel php),I just pass 2 arrays&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Files&lt;/li&gt;
&lt;li&gt;Names&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Simply merge the arrays,save the file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/32007662/147849196-5ba3c92c-1fd4-49e4-a83f-e7e998ba05bb.mp4"&gt;video demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/sahilkashyap64/dropzone-sortablejs-multiupload-rename"&gt;Github&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For backend check gist &lt;a href="https://gist.github.com/sahilkashyap64/7db7a3d0e2877158bcd293223564707e"&gt;code&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>ux</category>
      <category>webdev</category>
      <category>php</category>
    </item>
    <item>
      <title>Docker - Run/Refactor PHP code from a web interface</title>
      <author>Christophe Avonture</author>
      <pubDate>Sat, 01 Jan 2022 11:11:31 +0000</pubDate>
      <link>https://dev.to/cavo789/docker-runrefactor-php-code-from-a-web-interface-1ffn</link>
      <guid>https://dev.to/cavo789/docker-runrefactor-php-code-from-a-web-interface-1ffn</guid>
      <description>&lt;p&gt;As a loyal reader of several forums for years, I frequently find unreadable PHP code posted by beginners asking for help. Before we can try to help them, it is sometimes useful to reformat the code and rewrite it partially. This can take times...&lt;/p&gt;

&lt;p&gt;To execute the code to see where the problem is before fixing it, I have been using the &lt;a href="https://github.com/websiteduck/Run-PHP-Code"&gt;Run-PHP-Code&lt;/a&gt; tool for a few years but it does not meet the need for reformatting (&lt;a href="https://github.com/FriendsOfPHP/PHP-CS-Fixer"&gt;php-cs-fixer&lt;/a&gt; / &lt;a href="https://github.com/squizlabs/PHP_CodeSniffer/"&gt;php code-beautifier&lt;/a&gt;) or refactoring (&lt;a href="https://github.com/rectorphp/rector"&gt;rector&lt;/a&gt;). Second disadvantage here (since I don't trust the PHP code), &lt;em&gt;Run-PHP-Code&lt;/em&gt; is running on my localhost i.e. on my machine and that can represent a risk (creation/deletion of files, ...). The ideal is to execute the code in a sandbox.&lt;/p&gt;

&lt;p&gt;It had been a while since I wanted to do it: I took some hours to take the code of &lt;em&gt;Run-PHP-Code&lt;/em&gt; to make his own Docker image, based on PHP 7.4.26 and thus to allow to run it in a secure environment.&lt;/p&gt;

&lt;p&gt;I also took the time to add a "refactor" button which then calls php-cs-fixer, phpcbf and Rector.&lt;/p&gt;

&lt;p&gt;The result is this ready-to-use Docker image: &lt;a href="https://hub.docker.com/r/cavo789/runcode"&gt;https://hub.docker.com/r/cavo789/runcode&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In only two CLI commands, you will have a web interface with an editor where, on the left side, you can copy/paste or type a PHP code and on the right side visualize the result of its execution (button &lt;code&gt;Run&lt;/code&gt;) or its refactoring (button &lt;code&gt;Refactor&lt;/code&gt;); the whole running in a Docker container and thus isolated from your machine. &lt;/p&gt;

&lt;p&gt;Pretty easy and helpful when trying to give support on forums.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--33DZxp0n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25uvrxisg07nwr7sygsz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--33DZxp0n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25uvrxisg07nwr7sygsz.png" alt="Run and refactor php from an isolated environment" width="880" height="488"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>docker</category>
      <category>php</category>
      <category>tooling</category>
      <category>refactorit</category>
    </item>
    <item>
      <title>One of the most powerful Software Development tool - 2 mins read</title>
      <author>Burhanuddin Bhopalwala</author>
      <pubDate>Sat, 01 Jan 2022 10:40:45 +0000</pubDate>
      <link>https://dev.to/burhanuddinbhopalwala/one-of-the-most-powerful-software-development-tool-2-mins-read-24li</link>
      <guid>https://dev.to/burhanuddinbhopalwala/one-of-the-most-powerful-software-development-tool-2-mins-read-24li</guid>
      <description>&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#chapter-1"&gt;Tool Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-2"&gt;Tool Management/Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#chapter-3"&gt;Best practices and tips&lt;/a&gt;
...&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#tool-introduction"&gt;
  &lt;/a&gt;
  Tool Introduction &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Hello everyone! In this short article, I wanted to share with the DEV community here a utility tool that immensely me in 2021 for managing and developing the Software(s) I worked on.&lt;/p&gt;

&lt;p&gt;I am talking about &lt;code&gt;asdf&lt;/code&gt;. While most of the PRO developers out there are aware of it. This article is to share with community members who are unaware of this like I was a few months back.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;asdf&lt;/code&gt; is a CLI tool for managing &lt;strong&gt;multiple runtime(s)&lt;/strong&gt; via extendable plugins - docs at &lt;a href="//asdf-vm.com"&gt;asdf&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With this one single CLI tool, not only you can &lt;strong&gt;manage and switch to multiple runtime/s and its version/s&lt;/strong&gt; but can also simply avoid the &lt;strong&gt;installation overhead&lt;/strong&gt;. Thus, having a levy to switch the runtime versions in between projects you are working on. &lt;/p&gt;

&lt;p&gt;So how does it works? I will be explaining this in brief in the following content.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tool-managementusage"&gt;
  &lt;/a&gt;
  Tool Management/Usage &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;You can easily install &lt;code&gt;asdf&lt;/code&gt; from &lt;a href="http://asdf-vm.com/guide/getting-started.html#_3-install-asdf"&gt;here&lt;/a&gt;. It has all the details and has good documentation available.&lt;/p&gt;

&lt;p&gt;So, It's really simple, &lt;code&gt;asdf&lt;/code&gt; for each runtime uses a &lt;code&gt;git&lt;/code&gt; plugin. A plugin shares one-to-one mapping with the runtime you want to install. After adding a plugin you can now install multiple versions of the runtime using the same plugin. Here are the simple 4 steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Search for a plugin&lt;br&gt;
&lt;code&gt;asdf plugin-list-all | grep python&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install/Add a plugin&lt;br&gt;
&lt;code&gt;asdf plugin-add python&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install a runtime version of your choice, default is the latest stable head/version&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;asdf install python latest&lt;/code&gt;&lt;br&gt;
&lt;code&gt;asdf global python latest&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Above command will make an entry into an &lt;code&gt;$HOME/.tool-versions&lt;/code&gt; file (more details to follow on this config file)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;You can not install other runtime versions by repeating the above step no need to add a plugin as it's a one-time process&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;asdf install python 3.8.7&lt;/code&gt;&lt;br&gt;
&lt;code&gt;asdf local python 3.8.7&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Above command will make an entry into an &lt;code&gt;$WORK_DIR/.tool-versions&lt;/code&gt; file (more details to follow on this config file)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;By using local scope you can set the asdf version for local project scope runs on python 3.8.7 and not on python latest/3.10.1&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8Yx-AbHB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x3rz1g87rjymltfvcpjf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Yx-AbHB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x3rz1g87rjymltfvcpjf.png" alt="asdf runtime/python installation" width="880" height="890"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Another example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FAFzd-3v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9f3pfh3w0ox09yks4hip.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FAFzd-3v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9f3pfh3w0ox09yks4hip.png" alt="asdf runtime/scala installation" width="880" height="723"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Currently, with the help of &lt;code&gt;asdf&lt;/code&gt;, I can easily manage all the below runtimes some with even multiple versions like for &lt;code&gt;nodeJS&lt;/code&gt;, &lt;code&gt;python&lt;/code&gt; etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j8u8uitT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h1bk2j9h8veeme9drfzj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j8u8uitT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h1bk2j9h8veeme9drfzj.png" alt="asdf multiple runtime installations" width="880" height="544"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Attaching the code block below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;❯ asdf plugin-list --urls --refs
act         https://github.com/grimoh/asdf-act.git master 8729029
aws-vault   https://github.com/beardix/asdf-aws-vault.git master 937a1db
awscli      https://github.com/MetricMike/asdf-awscli.git main b9ba4c7
docker-slim https://github.com/everpeace/asdf-docker-slim.git master 4ee75a3
golang      https://github.com/kennyp/asdf-golang.git master 1f388f1
helm        https://github.com/Antiarchitect/asdf-helm.git master 87eef5a
java        https://github.com/halcyon/asdf-java.git master f0c702f
jq          https://github.com/ryodocx/asdf-jq.git master 3144577
kubectl     https://github.com/asdf-community/asdf-kubectl.git master da7bb0b
minikube    https://github.com/alvarobp/asdf-minikube.git master 8ca7b8d
mysql       https://github.com/iroddis/asdf-mysql.git master 3aaf756
nodejs      https://github.com/asdf-vm/asdf-nodejs.git master cb61e3d
perl        https://github.com/ouest/asdf-perl.git master 31bb799
php         https://github.com/asdf-community/asdf-php.git master 759843b
postgres    https://github.com/smashedtoatoms/asdf-postgres.git master 4f8b356
python      https://github.com/danhper/asdf-python.git master 8ab052f
redis       https://github.com/smashedtoatoms/asdf-redis.git master bf1276e
ruby        https://github.com/asdf-vm/asdf-ruby.git master f134c2d
sbt         https://github.com/bram2000/asdf-sbt.git master 33f9637
scala       https://github.com/asdf-community/asdf-scala.git master 1206055
skaffold    https://github.com/virtualstaticvoid/asdf-skaffold.git master c942ecf
spark       https://github.com/joshuaballoch/asdf-spark.git master 6fe49de
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#best-practices-and-tips"&gt;
  &lt;/a&gt;
  Best practices and tips &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#1-use-of-raw-hometoolversions-endraw-"&gt;
  &lt;/a&gt;
  1: Use of &lt;code&gt;$HOME/.tool-versions&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;I want to share some useful tips to make full use of &lt;code&gt;asdf&lt;/code&gt;. For most of the runtimes (particularly for a programming language(s), we maintain a &lt;em&gt;version file&lt;/em&gt; as a satellite file inside the project.&lt;/p&gt;

&lt;p&gt;For &lt;em&gt;python&lt;/em&gt; it is &lt;code&gt;.python-version&lt;/code&gt;, for &lt;em&gt;nodeJS&lt;/em&gt; it is &lt;code&gt;.nvmrc&lt;/code&gt; and for &lt;em&gt;RoR&lt;/em&gt; it is &lt;code&gt;.ruby-version&lt;/code&gt;. These files are recognized as &lt;em&gt;legacy&lt;/em&gt; files to &lt;code&gt;asdf&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For &lt;code&gt;asdf&lt;/code&gt; that satellite file is called &lt;code&gt;.tool-versions&lt;/code&gt;. You can maintain one copy under a &lt;code&gt;$HOME/.tool-versions&lt;/code&gt; directory to mention the version you want to use globally.&lt;/p&gt;

&lt;p&gt;For local projects, you can add another &lt;code&gt;.tool_verisons&lt;/code&gt; file under &lt;code&gt;$WORK_DIR/.tool-versions&lt;/code&gt;. So every time you check-in into the project &lt;code&gt;asdf&lt;/code&gt; knows which version to switch for a particular runtime.&lt;/p&gt;

&lt;p&gt;This is what my &lt;code&gt;~/.tool-versions&lt;/code&gt; file looks like (globally) attaching for reference.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rXXHPbAB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fv5esgjgrnafenhlacow.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rXXHPbAB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fv5esgjgrnafenhlacow.png" alt="Global tool-versions" width="880" height="1481"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-use-of-raw-homeasdfrc-endraw-"&gt;
  &lt;/a&gt;
  2: Use of &lt;code&gt;$HOME/.asdfrc&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;You may not want to use/manage multiple satellite files just for the sake of auto-switching of the runtime version. In such a case we can you one config file &lt;code&gt;~/.asdfrc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;~/.asdfrc&lt;/code&gt; is the configuration file for managing &lt;code&gt;asdf&lt;/code&gt;. As spells out from the file name it is based on &lt;strong&gt;cosmic config&lt;/strong&gt; configuration.&lt;/p&gt;

&lt;p&gt;For &lt;code&gt;asdf&lt;/code&gt; to work with the legacy version file you need to turn on the switch for &lt;code&gt;legacy_version_file&lt;/code&gt; under &lt;code&gt;$HOME/.asdfrc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;legacy_version_file = yes&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If this config is turned on it means that &lt;code&gt;asdf&lt;/code&gt; can globally/locally pick the versions based on the legacy file if the &lt;code&gt;.tool-versions&lt;/code&gt; file is not found. More details &lt;a href="//ide/getting-started.html#using-existing-tool-version-files"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A more generic use case is to have one &lt;code&gt;.tool-versions&lt;/code&gt; file for a project which builds on using multiple runtimes of a particular version. It makes lots of sense to switch to a single &lt;code&gt;.tool-versions&lt;/code&gt; file instead of maintaining multiple &lt;code&gt;legacy&lt;/code&gt; files. O/w in most cases legacy files are usually preferred! and &lt;code&gt;asdf&lt;/code&gt; support that as well via the &lt;code&gt;.asdfrc&lt;/code&gt; config file as mentioned above.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-from-my-experience-with-this-tool"&gt;
  &lt;/a&gt;
  3: From my experience with this tool
&lt;/h4&gt;

&lt;p&gt;It may happen that you for some runtimes/tools you are not able to install/list a plugin, in such cases, a google search will help. For example below plugin URL, I found by searching on Google.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W95nL45J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c6j62fva8es0tjci7i1o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W95nL45J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c6j62fva8es0tjci7i1o.png" alt="asdf built-in plugin not found" width="880" height="357"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope, this article may help the DEV community who are unaware of this cool utility software development till the time of reading this post. &lt;/p&gt;

&lt;p&gt;It not only help to manage &lt;strong&gt;multiple runtime(s)&lt;/strong&gt; in a single click but at the same time helps in avoiding all the &lt;strong&gt;installation overhead&lt;/strong&gt; and conflicts among them.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Lastly, you might be wondering about the full form/meaning of &lt;code&gt;asdf&lt;/code&gt; let me tell you its a series of keys on your keyboard :)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Thanks for reading.&lt;br&gt;
&lt;a href="https://medium.com/@burhanuddinbhopalwala"&gt;https://medium.com/@burhanuddinbhopalwala&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
