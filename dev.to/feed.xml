<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>CSS variables: Everything you need to know about</title>
      <author>Anjan Shomooder</author>
      <pubDate>Sat, 13 Nov 2021 17:39:59 +0000</pubDate>
      <link>https://dev.to/thatanjan/css-variables-everything-you-need-to-know-about-3jjn</link>
      <guid>https://dev.to/thatanjan/css-variables-everything-you-need-to-know-about-3jjn</guid>
      <description>&lt;p&gt;In this blog, you will learn about css variables also known as custom properties.&lt;/p&gt;

&lt;p&gt;You will learn:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Why do Css variables exist?&lt;/li&gt;
&lt;li&gt;How to use it?&lt;/li&gt;
&lt;li&gt;How cascading works with Css variables?&lt;/li&gt;
&lt;li&gt;How to access css variables in javascript?&lt;/li&gt;
&lt;li&gt;How to change css variables with javascript?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example, You have 5 containers on your webpage. All of the container&lt;br&gt;
the background color will be red.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container4&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container5&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ok. That works fine. But after some time you started to think that the background color should be blue. Now you want to change the color. But now you have to every single container and apply the change. It will work but that is too much work. So,&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-solution"&gt;
  &lt;/a&gt;
  What is the solution?
&lt;/h2&gt;

&lt;p&gt;What if we can change the color once and that will be applied everywhere?&lt;/p&gt;

&lt;p&gt;Yes, we can do that with the help of css variables. Css variables are officially known as custom properties.&lt;/p&gt;

&lt;p&gt;So,&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-css-variables"&gt;
  &lt;/a&gt;
  How to use Css variables?
&lt;/h2&gt;

&lt;p&gt;We normally define variables at the root.&lt;/p&gt;

&lt;p&gt;At the top of your css file select the root like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the root you have to declare the variables just like you use properties and value in CSS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h4&gt;

&lt;p&gt;Variable name has to start will &lt;code&gt;--&lt;/code&gt;(double dash). For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--primary-bg-color&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--secondary-bg-color&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--primary-font-color&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now you can use those variables as a value in any valid css property. Let's apply it to our example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container4&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container5&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if you want to change the color, just change the value of the variable. And changes will be applied everywhere.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container4&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container5&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By the way, this blog is originally published on &lt;a href="https://www.culescoding.space/blog/everything-you-need-to-know-about-css-variables"&gt;cules coding website.&lt;/a&gt;. I would be glad if you give it a visit.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mTaJS2V0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o8prhg8kqtkbx9ssk0w6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mTaJS2V0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o8prhg8kqtkbx9ssk0w6.png" alt="Cules Coding - Everything you need to know about css variables" width="880" height="453"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-cascading-works-with-css-variables"&gt;
  &lt;/a&gt;
  How cascading works with Css variables?
&lt;/h2&gt;

&lt;p&gt;You can re-declare the value for any css selector. Like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container4&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container5&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the &lt;code&gt;.container2&lt;/code&gt; will have a background color of &lt;code&gt;green&lt;/code&gt;. But other containers' background colors will not change. But why?&lt;/p&gt;

&lt;p&gt;All of the places that you are using CSS variables are just inheriting values from the &lt;code&gt;root&lt;/code&gt;. But when you redeclare the variable for &lt;code&gt;.container2&lt;/code&gt; all of the elements inside the &lt;code&gt;.container2&lt;/code&gt; are just inheriting the value from the &lt;code&gt;.container2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If the .container2 would look like below, what would be the color of &lt;code&gt;.subcontainer2&lt;/code&gt;?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container2&lt;/span&gt; &lt;span class="nc"&gt;.subcontainer1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;teal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container2&lt;/span&gt; &lt;span class="nc"&gt;.subcontainer1&lt;/span&gt; &lt;span class="nc"&gt;.subcontainer2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Will it be green or blue???&lt;/p&gt;

&lt;p&gt;It will be green. Why?&lt;/p&gt;

&lt;p&gt;Because&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The CSS parser will check inside &lt;code&gt;.subcontainer2&lt;/code&gt; first. Then it will not find anything.&lt;/li&gt;
&lt;li&gt;Then it will check &lt;code&gt;subcontainer2&lt;/code&gt;'s parent &lt;code&gt;.subcontainer1&lt;/code&gt;. Again it will find anything.&lt;/li&gt;
&lt;li&gt;Then it will check &lt;code&gt;.subcontainer1&lt;/code&gt;'s parent &lt;code&gt;.container&lt;/code&gt;. This time the parser will see a
variable declaration that has the value green. It will not check anything.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, this is how it works:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lj9toxxc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f1z2s90tm935gdsv32na.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lj9toxxc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f1z2s90tm935gdsv32na.png" alt="Css variables cascading demonstratition" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I know it sounds complex. If you know javascript, it is like scope chain in javscript&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-access-css-variables-in-javascript"&gt;
  &lt;/a&gt;
  How to access CSS variables in javascript?
&lt;/h2&gt;

&lt;p&gt;Yes, you can access css variables in javascript and also you can manipulate them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;allStyles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getComputedStyle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// returns all css styles as an object&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bgColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;allStyles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getPropertyValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;primary&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;bg&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bgColor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// green or whatever the value is&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-to-change-css-variables-with-javascript"&gt;
  &lt;/a&gt;
  How to change css variables with javascript?
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Get the root element&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;:root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// changing the value of variable&lt;/span&gt;
&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--primary-bg-color&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's all you need to know about css variables.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shameless-plug"&gt;
  &lt;/a&gt;
  Shameless Plug
&lt;/h2&gt;

&lt;p&gt;I have made a video about how to build a carousel postcard with React, Material-UI, and Swiper.js.&lt;br&gt;
If you are interested you can check the video.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/NDyjI7hd4uE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;You can also demo the application form &lt;a href="https://insta-carousel-demo.vercel.app/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sXlAWXXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/thatanjan/insta-carousel-yt/development/public/Screenshot%2520of%2520the%2520App.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sXlAWXXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/thatanjan/insta-carousel-yt/development/public/Screenshot%2520of%2520the%2520App.png" alt="Screenshot of Insta Carousel" width="880" height="445"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please like and subscribe to &lt;a href="https://www.youtube.com/channel/UCBaGowNYTUsm3IDaHbLRMYw?sub_confirmation=1"&gt;Cules Coding&lt;/a&gt;. It motivates me to create more content like this.&lt;/p&gt;

&lt;p&gt;If you have any questions, please comment down below.&lt;br&gt;
You can reach out to me on social media as &lt;a class="mentioned-user" href="https://dev.to/thatanjan"&gt;@thatanjan&lt;/a&gt;
.&lt;br&gt;
Stay safe. Goodbye.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#about-me"&gt;
  &lt;/a&gt;
  About me
&lt;/h2&gt;
&lt;h4&gt;
  &lt;a href="#why-do-i-do-what-i-do"&gt;
  &lt;/a&gt;
  Why do I do what I do?
&lt;/h4&gt;

&lt;p&gt;The Internet has revolutionized our life. I want to make the internet more beautiful and useful.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-do-i-do"&gt;
  &lt;/a&gt;
  What do I do?
&lt;/h4&gt;

&lt;p&gt;I ended up being a full-stack software engineer.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-can-i-do"&gt;
  &lt;/a&gt;
  What can I do?
&lt;/h4&gt;

&lt;p&gt;I can develop complex full-stack web applications like social media applications or e-commerce sites.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-have-i-done"&gt;
  &lt;/a&gt;
  What have I done?
&lt;/h4&gt;

&lt;p&gt;I have developed a social media application called &lt;a href="https://con-fession.vercel.app/"&gt;Confession&lt;/a&gt;. The goal of this application is to help people overcome their imposter syndrome by sharing our failure stories.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XbQiTDS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gjay62pz7byne4d8ja8v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XbQiTDS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gjay62pz7byne4d8ja8v.png" alt="Alt Text" width="880" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I also love to share my knowledge. So, I run a youtube channel called &lt;a href="https://www.youtube.com/channel/UCBaGowNYTUsm3IDaHbLRMYw?sub_confirmation=1"&gt;Cules Coding&lt;/a&gt; where I teach people full-stack web development, data structure algorithms, and many more. So, Subscribe to Cules Coding so that you don't miss the cool stuff.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#want-to-work-with-me"&gt;
  &lt;/a&gt;
  Want to work with me?
&lt;/h2&gt;

&lt;p&gt;I am looking for a team where I can show my ambition and passion and produce great value for them.&lt;br&gt;
Contact me through my email or any social media as &lt;a class="mentioned-user" href="https://dev.to/thatanjan"&gt;@thatanjan&lt;/a&gt;
. I would be happy to have a touch with you.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#contacts"&gt;
  &lt;/a&gt;
  Contacts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Email: &lt;a href="mailto:thatanjan@gmail.com"&gt;thatanjan@gmail.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;linkedin: &lt;a href="https://linkedin.com/in/thatanjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;portfolio: &lt;a href="https://thatanjan.me/"&gt;anjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Github: &lt;a href="https://github.com/thatAnjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Instagram (personal): &lt;a href="https://instagram.com/thatAnjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Instagram (youtube channel): &lt;a href="https://instagram.com/cules_coding/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a href="https://twitter.com/thatAnjan"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Facebook: &lt;a href="https://www.facebook.com/thatanjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Blogs you might want to read:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/setup-eslint-prettier-with-typescript-and-react"&gt; Eslint, prettier setup with TypeScript and react &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/what-is-client-side-rendering"&gt;What is Client-Side Rendering?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/what-is-server-side-rendering"&gt;What is Server Side Rendering?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/everything-you-need-to-know-about-tree-data-structure"&gt;Everything you need to know about tree data structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/13-reasons-why-you-should-use-Nextjs"&gt;13 reasons why you should use Nextjs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Videos might you might want to watch:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/rSa8sUC8m_4"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/T-n0mrssDiw"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/0an2g0lq7LU"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Be_C_Op8Tx8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>My Neovim journey</title>
      <author>Andreas Sander</author>
      <pubDate>Sat, 13 Nov 2021 17:36:09 +0000</pubDate>
      <link>https://dev.to/andi1984/my-neovim-journey-3on6</link>
      <guid>https://dev.to/andi1984/my-neovim-journey-3on6</guid>
      <description>&lt;p&gt;Do you know &lt;a href="https://www.vim.org/"&gt;Vim&lt;/a&gt;? This lightweight, but&lt;br&gt;
weird-feeling, editor you might (need) to use on a server shell&lt;br&gt;
for looking through files etc.?&lt;/p&gt;

&lt;p&gt;I never got comfortable with it, but I also did not spend time&lt;br&gt;
looking into it...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#neovim-to-vim-is-like-yarn-to-npm"&gt;
  &lt;/a&gt;
  Neovim to Vim is like Yarn to NPM?
&lt;/h2&gt;

&lt;p&gt;Now there is &lt;a href="https://neovim.io/"&gt;Neovim&lt;/a&gt;. Neovim is a &lt;em&gt;fork&lt;/em&gt;,&lt;br&gt;
an implementation of Vim. And it is actually quite&lt;br&gt;
&lt;a href="https://twitter.com/github_tracker/status/1446845600826372100"&gt;popular&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Neovim is an implementation of Vim, but focused on&lt;br&gt;
extensibility and usability. The key feature is asynchronous&lt;br&gt;
plugins (mostly) compatible with Vim, which significantly&lt;br&gt;
improves performance for things like code-completion and&lt;br&gt;
linting.&lt;br&gt;
-- &lt;cite&gt;&lt;a href="https://console.dev/articles/neovim-best-code-editor-ide-for-developers/"&gt;console.dev&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#how-did-i-get-there"&gt;
  &lt;/a&gt;
  How did I get there?
&lt;/h2&gt;

&lt;p&gt;How did I, as a &lt;a href="https://code.visualstudio.com/"&gt;VSCode&lt;/a&gt; power user and&lt;br&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=andi1984.tinypng"&gt;extension&lt;/a&gt;&lt;br&gt;
creator, ended up in using Neovim?&lt;/p&gt;

&lt;p&gt;Well, VSCode is based on &lt;a href="https://www.electronjs.org/"&gt;Electron&lt;/a&gt; and in the end&lt;br&gt;
with dozens of extensions enabled, you basically use a Chromium browser with&lt;br&gt;
extensions under the hood that keep any fans - except the M1 ones -&lt;br&gt;
busy. Due to RAM memory limitations on my machine, I ended up in constant&lt;br&gt;
memory (swap) management recently.&lt;/p&gt;

&lt;p&gt;Thus, my primary motivation to try out Neovim was: reducing load on my&lt;br&gt;
machine.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mouse-is-lava"&gt;
  &lt;/a&gt;
  Mouse is lava
&lt;/h2&gt;

&lt;p&gt;One of the key concepts of (neo)Vim is to not &lt;em&gt;waste&lt;/em&gt; any time moving your&lt;br&gt;
fingers away from keyboard (e.g. for using your mouse to interact with the&lt;br&gt;
editor's UI).&lt;/p&gt;

&lt;p&gt;It is all about your &lt;a href="https://en.wikipedia.org/wiki/Muscle_memory"&gt;muscle&lt;br&gt;
memory&lt;/a&gt; to optimize your workflow&lt;br&gt;
by using default keyboard navigation, custom shortcuts, but also plugins you&lt;br&gt;
can install as you can do in VSCode. &lt;/p&gt;

&lt;p&gt;Thus after many, many years of training, your Neovim muscle memory is huge enough to &lt;br&gt;
fight against &lt;a href="https://www.youtube.com/watch?v=H3o4l4GVLW0"&gt;The Primeagen&lt;/a&gt; who&lt;br&gt;
is typing and navigating faster within Vim than coconut oil is dripping - pun intended.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-to-start"&gt;
  &lt;/a&gt;
  Where to start
&lt;/h2&gt;

&lt;p&gt;You may say:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"I am overwhelmed! Help me!"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Calm down - I have been there before. Due to the steep learning curve, you need&lt;br&gt;
to have some kind of motivation to start looking into the Vim ecosystem - in&lt;br&gt;
my case it was due to hardware limitation reasons.&lt;/p&gt;

&lt;p&gt;Without any kind of motivation, you will open and close it frustratingly after&lt;br&gt;
half a minute of question marks popping up inside your brain. I did this for&lt;br&gt;
many years, piling up a little more frustration on every occasion when I failed&lt;br&gt;
doing basic work and navigation within Vim (e.g. while ssh'ing on a server).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#online-resources"&gt;
  &lt;/a&gt;
  Online Resources
&lt;/h3&gt;

&lt;p&gt;As Vim was introduced in &lt;a href="https://de.wikipedia.org/wiki/Vim"&gt;&lt;em&gt;1991&lt;/em&gt;&lt;/a&gt; which is&lt;br&gt;
maybe even before your own "release" date, you can imagine that there are A LOT&lt;br&gt;
of resources out there on the web.&lt;/p&gt;

&lt;p&gt;Here are just a few that I collected over time (tbc.):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://thevaluale.dev/vim-beginner/"&gt;Beginner guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vimhelp.org/"&gt;Online-version of the help page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devhints.io/vim"&gt;Cheatsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vim.fandom.com/wiki/Vim_Tips_Wiki"&gt;Tips Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vimawesome.com/"&gt;Plugin Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://themouseless.dev/vim/"&gt;(Unpublished) Book "Learning to play Vim"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://elijahmanor.com/blog/neovim-tmux"&gt;"Neovim and Tmux for JavaScript development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#the-community"&gt;
  &lt;/a&gt;
  The community
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://www.vim.org/community.php"&gt;Vim&lt;/a&gt; and&lt;br&gt;
&lt;a href="https://neovim.io/community/"&gt;Neovim&lt;/a&gt; community is quite new to me, but there&lt;br&gt;
are definitely some "vimstigator" or at least quite famous people on the social&lt;br&gt;
interwebs.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#theprimeagen"&gt;
  &lt;/a&gt;
  ThePrimeagen
&lt;/h4&gt;

&lt;p&gt;The first one I came across is ThePrimeagen. I randomly landed on one of his&lt;br&gt;
&lt;a href="https://www.twitch.tv/theprimeagen"&gt;streams&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;IMHO Prime - I even don't know his real name - is a proud dad, &lt;a href="https://twitter.com/ThePrimeagen/status/1446177392536477703"&gt;cow&lt;br&gt;
owner&lt;/a&gt;, &lt;a href="https://twitter.com/ThePrimeagen/status/1445163951201955847"&gt;nature&lt;br&gt;
guy&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;No, seriously. He works at Netflix and thus he is a pretty smart guy. But at&lt;br&gt;
the same time he is a born entertainer which results in a stream with hundreds&lt;br&gt;
watching him working on a C++ implementation of a network layer for Netflix. &lt;em&gt;I&lt;br&gt;
am not kidding!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And his Vim skills are crazy as he is - but in a good way. If you have prepared&lt;br&gt;
yourself with enough coconut oil, you are safe to watch his streams. :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tj-devries"&gt;
  &lt;/a&gt;
  TJ DeVries
&lt;/h3&gt;

&lt;p&gt;If you know ThePrimeagen, you most probably also know TJ.&lt;br&gt;
&lt;a href="https://github.com/tjdevries"&gt;TJ&lt;/a&gt; is actually a&lt;br&gt;
&lt;em&gt;core maintainer of Neovim&lt;/em&gt;! So he is building the thing I try you to tell&lt;br&gt;
about. But he can do probably hundred times better than me and knows all the&lt;br&gt;
insights.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vimconf"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.vimconf.live/"&gt;VimConf&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;At the 29th to the 30th of October 2021 there will be a second version of&lt;br&gt;
VimConf happening online. I think this event will be a good opportunity to get&lt;br&gt;
in contact with the community and learn new, awesome stuff.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dotfiles-plugins-configurations"&gt;
  &lt;/a&gt;
  Dotfiles, Plugins, Configurations...
&lt;/h3&gt;

&lt;p&gt;Take your time!&lt;/p&gt;

&lt;p&gt;Altogether it is important that you &lt;em&gt;start your vim journey on your own&lt;/em&gt; with&lt;br&gt;
the help of others. But it is all about &lt;em&gt;your workflows&lt;/em&gt;, &lt;em&gt;your needs&lt;/em&gt; and&lt;br&gt;
&lt;em&gt;your muscle memory&lt;/em&gt;!&lt;/p&gt;

&lt;p&gt;Over time you will find out which settings you want to (un)set, which plugins&lt;br&gt;
might be helpful for your work and which configurations you might want to copy&lt;br&gt;
paste from someone else or you want to write on your own.&lt;/p&gt;

&lt;p&gt;All this needs some decent amount of time you will need to invest, but you&lt;br&gt;
should not care about that at the very beginning.&lt;/p&gt;

&lt;p&gt;I just started this journey mid 2021 and thus I see myself at the very&lt;br&gt;
beginning of this process after a few months now. &lt;/p&gt;

&lt;p&gt;In case you really want to dig into some dotfiles and vim configurations, watch&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=DogKdiRx7ls"&gt;ThePrimeagen's YT videos&lt;/a&gt; and dig&lt;br&gt;
into other people's dotfiles.&lt;/p&gt;

&lt;p&gt;Shameless plug: I have &lt;a href="https://github.com/andi1984/dotfiles/tree/master/vim/lua"&gt;my dotfiles&lt;br&gt;
public&lt;/a&gt;, but be aware&lt;br&gt;
those are &lt;em&gt;my&lt;/em&gt; dotfiles, they fit my needs and I consider themself "Work in&lt;br&gt;
progress". So I am not sure how much value they might bring to you.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;And now I wish you an awesome start with your very own Vim journey!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Sincerely yours,&lt;/p&gt;

&lt;p&gt;Andi&lt;/p&gt;

</description>
      <category>vim</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to learn AWS for free ?</title>
      <author>Walter Lee</author>
      <pubDate>Sat, 13 Nov 2021 17:18:41 +0000</pubDate>
      <link>https://dev.to/aws-builders/how-to-learn-aws-for-free--2inc</link>
      <guid>https://dev.to/aws-builders/how-to-learn-aws-for-free--2inc</guid>
      <description>&lt;p&gt;𝑻𝒘𝒐 𝑮𝒓𝒆𝒂𝒕 𝒂𝒏𝒅 𝑭𝒓𝒆𝒆 𝑨𝑾𝑺 𝒍𝒆𝒂𝒓𝒏𝒊𝒏𝒈 𝒓𝒆𝒔𝒐𝒖𝒓𝒄𝒆𝒔 below:&lt;br&gt;
1/ AWS skill builder - &lt;a href="https://lnkd.in/gnAzj7bH"&gt;https://lnkd.in/gnAzj7bH&lt;/a&gt;&lt;br&gt;
2/ Free AWS trainings at amazon.com - &lt;a href="https://lnkd.in/g_FCjGvF"&gt;https://lnkd.in/g_FCjGvF&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I just "buy" (free) one and watching #dataanalytics !&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3HvBedv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbh4nphq9vbe153cw31s.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3HvBedv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbh4nphq9vbe153cw31s.jpg" alt="Image description" width="880" height="1203"&gt;&lt;/a&gt;&lt;br&gt;
[ original LI post at &lt;a href="https://www.linkedin.com/feed/update/urn:li:activity:6865332472352260096/"&gt;https://www.linkedin.com/feed/update/urn:li:activity:6865332472352260096/&lt;/a&gt;]&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>aws</category>
      <category>devops</category>
    </item>
    <item>
      <title>Data Science toolset summary from 2021</title>
      <author>amananandrai</author>
      <pubDate>Sat, 13 Nov 2021 17:13:52 +0000</pubDate>
      <link>https://dev.to/amananandrai/data-science-toolset-summary-from-2021-1dbi</link>
      <guid>https://dev.to/amananandrai/data-science-toolset-summary-from-2021-1dbi</guid>
      <description>&lt;p&gt;The year 2021 is about to end so let us recall and recollect what different tools have been used by Data Professionals throughout the entire year. I am using the term Data Professionals to refer to all different jobs associated with data like Data Scientists, Data Analysts, Data Engineers. To become a better Data Professional we need to have knowledge of different domains but the most important skill set required are knowledge of Databases and SQL, languages like Python, R, Julia, JavaScript, etc.,  experience in Data Visualization tools like Tableau and PowerBI,  and knowledge of Bigdata and Cloud Technologies.&lt;/p&gt;

&lt;p&gt;In this post, I am going to give a list of different tools and technologies which have been used extensively by Data Professionals throughout the year and the expertise of these can make you one of the best in the industry. This list is based on a survey conducted by Kaggle (the biggest community of Data Scientists). I have used the term toolset because it is a comprehensive list of tools from different domains. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ide"&gt;
  &lt;/a&gt;
  IDE
&lt;/h2&gt;

&lt;p&gt;The most common languages used for Data Science are Python, R, JavaScript, MATLAB, Julia along with SQL. These languages are used for data analysis and visualization, building machine learning algorithms, implementing data pipelines, and various other things related to Data science. The most important tool we require are IDEs (Integrated Development Environments) where we write code, compile them and then execute them to view the output. Here is a list of most common IDEs used by different Data professionals for development which makes their life easier. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Jupyter Notebook&lt;/strong&gt; - Jupyter Notebook is a web-based interactive computational environment for creating Jupyter notebook documents. It supports several languages like Python (IPython), Julia, R etc. and is largely used for data analysis, data visualization and further interactive, exploratory computing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Visual Studio Code&lt;/strong&gt; - Visual Studio Code (VS Code) is a source-code editor made by Microsoft for Windows, Linux and macOS. Features include support for debugging, syntax highlighting, intelligent code completion, snippets, code refactoring, and embedded Git. It can be used for writing code in many languages and is one of the most popular IDE among Software engineers as well for its wide variety of features.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Jupyter Lab&lt;/strong&gt; - JupyterLab is the next-generation user interface including notebooks. It has a modular structure, where you can open several notebooks or files (e.g. HTML, Text, Markdowns etc) as tabs in the same window. It offers more of an IDE-like experience.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;PyCharm&lt;/strong&gt; - PyCharm is an IDE used specifically for the Python language. It is developed by the Czech company JetBrains. It provides code analysis, a graphical debugger, an integrated unit tester, integration with version control systems, and supports web development with Django as well as data science with Anaconda. PyCharm is cross-platform, with Windows, macOS and Linux versions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;R Studio&lt;/strong&gt; - RStudio is an IDE for R, a programming language for statistical computing, data science, and data visualization. It is available in two formats: RStudio Desktop is a regular desktop application while RStudio Server runs on a remote server and allows accessing RStudio using a web browser.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Spyder&lt;/strong&gt; - Spyder is an open-source cross-platform IDE for scientific programming in the Python language. Spyder integrates with a number of prominent packages in the scientific Python stack, including NumPy, SciPy, Matplotlib, pandas, IPython, SymPy and Cython, as well as other open-source software.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Notepad++&lt;/strong&gt; - Notepad++ is a text and source code editor for use with Microsoft Windows. It supports tabbed editing, which allows working with multiple open files in a single window.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Sublime text&lt;/strong&gt; - Sublime Text is a commercial source code editor. It natively supports many programming languages and markup languages. Users can expand its functionality with plugins, typically community-built and maintained under free-software licenses. To facilitate plugins, Sublime Text features a Python API.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Vim or Emacs&lt;/strong&gt; - Vim is a free and open-source, screen-based text editor program for Unix. Emacs  or EMACS (Editor MACroS) is a family of text editors that are characterized by their extensibility. The manual for the most widely used variant, &lt;em&gt;GNU Emacs&lt;/em&gt;, describes it as "the extensible, customizable, self-documenting, real-time display editor". These two are used in the UNIX and LINUX based systems and are one of the oldest text editors.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;MATLAB&lt;/strong&gt; - MATLAB is a proprietary multi-paradigm programming language and numeric computing environment developed by MathWorks. MATLAB allows matrix manipulations, plotting of functions and data, implementation of algorithms, creation of user interfaces, and interfacing with programs written in other languages.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#algorithms"&gt;
  &lt;/a&gt;
  Algorithms
&lt;/h2&gt;

&lt;p&gt;Machine Learning is an integral part of Data Science and most of us are fascinated by the type of things it is doing in our day-to-day life like Self driven cars, Robots and AI assistants talking in almost human language, detection of diseases like cancer, facial recognition, etc. All these things are only possible because of data and the ML algorithms which work on this data. ML algorithms which are most widely used by Data scientists is listed below. It includes a wide variety of algorithms from most basic algorithms like regression and decision trees to high profile Deep Learning algorithms like Transformers, GANs and RNNs.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Linear and Logistic Regression&lt;/strong&gt; - These are the most basic algorithms of the ML ecosystem. Almost every data scientist learns these two algorithms as their first ML algorithm. Linear regression algorithm is basically a curve fitting algorithm which is used to determine trends and predict the value of dependent variable from independent variables. Logistic regression is used for classification tasks and finds probability of class.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Decision Trees or Random Forests&lt;/strong&gt; - Decision Trees are another popular ML algorithm where based on certain decisions the possible consequences are defined. It can be used for both classification and regression task. It is an ensemble technique that combines many different decision trees to give the output.  For classification tasks, the output of the random forest is the class selected by most trees. For regression tasks, the mean or average prediction of the individual trees is returned.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Gradient Boosting Machines&lt;/strong&gt; - Gradient boosting is a machine learning technique used in regression and classification tasks, among others. It gives a prediction model in the form of an ensemble of weak prediction models, which are typically decision trees.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Convolutional Neural Networks&lt;/strong&gt; - A convolutional neural network (CNN) is a class of artificial neural network, most commonly applied to analyze visual imagery.  They have applications in image and video recognition, recommender systems, image classification, image segmentation, medical image analysis, natural language processing, brain-computer interfaces, and financial time series. CNNs are regularized versions of multilayer perceptrons.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Bayesian Approaches&lt;/strong&gt; - Bayesian inference is a method of statistical inference in which Bayes' theorem is used to update the probability for a hypothesis as more evidence or information becomes available.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Dense Neural Networks&lt;/strong&gt; - It is another class of neural networks that is connected deeply, which means each neuron in the dense layer receives input from all neurons of its previous layer. The dense layer is found to be the most commonly used layer in the models.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Recurrent Neural Networks&lt;/strong&gt; - Recurrent Neural Network(RNN) are a type of Neural Network where the output from previous step are fed as input to the current step. It is the first algorithm that remembers its input, due to an internal memory, which makes it perfectly suited for machine learning problems that involve sequential data. The different variants of RNN architecture are Bidirectional recurrent neural networks (BRNN), Long short-term memory (LSTM), and Gated recurrent units (GRUs). &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Transformer Networks&lt;/strong&gt; - A transformer is a deep learning model that adopts the mechanism of attention, differentially weighting the significance of each part of the input data. It is used primarily in the field of natural language processing (NLP) and in computer vision (CV). Like recurrent neural networks (RNNs), transformers are designed to handle sequential input data, such as natural language, for tasks such as translation and text summarization. Some famous Transformer architectures are BERT and GPT.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Generative Adversarial Network&lt;/strong&gt; - Generative Adversarial Networks, or GANs for short, are an approach to generative modeling using deep learning methods, such as convolutional neural networks. Generative modeling is an unsupervised learning task in machine learning that involves automatically discovering and learning the regularities or patterns in input data in such a way that the model can be used to generate or output new examples that plausibly could have been drawn from the original dataset. The GAN model architecture involves two sub-models: a generator model for generating new examples and a discriminator model for classifying whether generated examples are real, from the domain, or fake, generated by the generator model.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Evolutionary Approaches&lt;/strong&gt; - Evolutionary algorithms are a heuristic-based approach to solving problems that cannot be easily solved in polynomial time, such as classically NP-Hard problems, and anything else that would take far too long to exhaustively process. Genetic Algorithm is the most common evolutionary algorithm. It is used in Optimization of the neural networks and ML models.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#machine-learning-frameworks"&gt;
  &lt;/a&gt;
  Machine Learning Frameworks
&lt;/h2&gt;

&lt;p&gt;There are many frameworks built in many languages but mostly Python which have the code for implementing the various ML algorithms discussed above. These frameworks make the life of Data scientists quite easier as they have to just call a simple Python function to implement the most complex of ML algorithms without getting into the nitty-gritty of them. Some of the most prominent ML frameworks are listed below. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Scikit-learn&lt;/strong&gt; - It is one of the most widely used frameworks for Python based Data science tasks. It features various classification, regression and clustering algorithms including support vector machines, random forests, gradient boosting, k-means and DBSCAN, and is designed to interoperate with the Python numerical and scientific libraries NumPy and SciPy.&lt;br&gt;
Link - &lt;a href="https://scikit-learn.org/"&gt;https://scikit-learn.org/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tensorflow&lt;/strong&gt; - It is mainly used for training ML models which are based on Neural networks and Deep Learning. TensorFlow was developed by the Google Brain team for internal Google use. It can be used in a wide variety of programming languages, most notably Python, as well as Javascript, C++, and Java. This flexibility lends itself to a range of applications in many different sectors. &lt;br&gt;
Link - &lt;a href="https://www.tensorflow.org/"&gt;https://www.tensorflow.org/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Xgboost&lt;/strong&gt; - XGBoost is an open-source software library which provides a regularizing gradient boosting framework for C++, Java, Python, R, Julia, Perl, and Scala. It implements machine learning algorithms under the Gradient Boosting framework. It provides a parallel tree boosting (also known as GBDT, GBM) that solve many data science problems in a fast and accurate way. The same code runs on major distributed environment (Hadoop, SGE, MPI) and can solve problems beyond billions of examples.&lt;br&gt;
Link - &lt;a href="https://xgboost.readthedocs.io/"&gt;https://xgboost.readthedocs.io/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Keras&lt;/strong&gt; - Keras is an open-source software library that provides a Python interface for artificial neural networks. Keras acts as an interface for the TensorFlow library.&lt;br&gt;
Link - &lt;a href="https://keras.io/"&gt;https://keras.io/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;PyTorch&lt;/strong&gt; - PyTorch is an open source machine learning library based on the Torch library, used for applications such as computer vision and natural language processing, primarily developed by Facebook's AI Research lab. It is free and open-source software released under the Modified BSD license.&lt;br&gt;
Link - &lt;a href="https://pytorch.org/"&gt;https://pytorch.org/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;LightGBM&lt;/strong&gt; - LightGBM, short for Light Gradient Boosting Machine, is a free and open source distributed gradient boosting framework for machine learning originally developed by Microsoft. It is based on decision tree algorithms and used for ranking, classification and other machine learning tasks.&lt;br&gt;
Link - &lt;a href="https://lightgbm.readthedocs.io/"&gt;https://lightgbm.readthedocs.io/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Catboost&lt;/strong&gt; - CatBoost is an open-source software library developed by Yandex. It provides a gradient boosting framework which attempts to solve for Categorical features using a permutation driven alternative compared to the classical algorithm.&lt;br&gt;
Link - &lt;a href="https://catboost.ai/"&gt;https://catboost.ai/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Huggingface&lt;/strong&gt; - It is open source library for building transformer based language models. It is used in the field of Natural Language Processing. Large language models like BERT, GPT, etc. are implemented using this library.&lt;br&gt;
Link - &lt;a href="https://huggingface.co/"&gt;https://huggingface.co/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Prophet&lt;/strong&gt; - It is a time-series forecasting library built by Facebook. Prophet is a procedure for forecasting time series data based on an additive model where non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects. It works best with time series that have strong seasonal effects and several seasons of historical data. Prophet is robust to missing data and shifts in the trend, and typically handles outliers well.&lt;br&gt;
Link - &lt;a href="https://github.com/facebook/prophet"&gt;https://github.com/facebook/prophet&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Caret&lt;/strong&gt; - The caret package (short for Classification And REgression Training) is a set of functions that attempt to streamline the process for creating predictive models. The package contains tools for: data splitting, pre-processing, feature selection, model tuning using resampling, variable importance estimation as well as other functionality.&lt;br&gt;
Link - &lt;a href="https://topepo.github.io/caret/"&gt;https://topepo.github.io/caret/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Pytorch Lightning&lt;/strong&gt; - PyTorch Lightning is an open-source Python library that provides a high-level interface for PyTorch, a popular deep learning framework. It is a lightweight and high-performance framework that organizes PyTorch code to decouple the research from the engineering, making deep learning experiments easier to read and reproduce. It is designed to create scalable deep learning models that can easily run on distributed hardware while keeping the models hardware agnostic.&lt;br&gt;
Link - &lt;a href="https://www.pytorchlightning.ai/"&gt;https://www.pytorchlightning.ai/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Fast.ai&lt;/strong&gt; - It is open source library for deep learning called fastai (without a period), sitting atop PyTorch. &lt;br&gt;
Link - &lt;a href="https://www.fast.ai/"&gt;https://www.fast.ai/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tidymodels&lt;/strong&gt; - The tidymodels framework is a collection of packages for modeling and machine learning using tidyverse principles. It is built using R language.&lt;br&gt;
Link - &lt;a href="https://www.tidymodels.org/"&gt;https://www.tidymodels.org/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;H20-3&lt;/strong&gt; - H2O is an open source, in-memory, distributed, fast, and scalable machine learning and predictive analytics platform that allows you to build machine learning models on big data and provides easy productionalization of those models in an enterprise environment.&lt;br&gt;
Link - &lt;a href="https://docs.h2o.ai/h2o/latest-stable/h2o-docs/welcome.html"&gt;https://docs.h2o.ai/h2o/latest-stable/h2o-docs/welcome.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;MXNet&lt;/strong&gt; - Apache MXNet is an open-source deep learning software framework, used to train, and deploy deep neural networks.&lt;br&gt;
Link - &lt;a href="https://mxnet.apache.org/versions/1.8.0/"&gt;https://mxnet.apache.org/versions/1.8.0/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;JAX&lt;/strong&gt; - JAX is NumPy on the CPU, GPU, and TPU, with great automatic differentiation for high-performance machine learning research. JAX is Autograd and XLA, brought together for high-performance machine learning research. What’s new is that JAX uses XLA to compile and run your NumPy programs on GPUs and TPUs.&lt;br&gt;
Link - &lt;a href="https://jax.readthedocs.io/en/latest/notebooks/quickstart.html"&gt;https://jax.readthedocs.io/en/latest/notebooks/quickstart.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cloud-data-storage-products"&gt;
  &lt;/a&gt;
  Cloud Data Storage Products
&lt;/h2&gt;

&lt;p&gt;The most important aspect of Data science is data, without it nothing is possible. We need resources to store data. With the advent of Cloud technologies it has become easier to store data and manage it smoothly. The below list has the best Cloud Data Storage Products from the best in the business tech-giants like Google, Amazon, and Microsoft.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Google Cloud Filestore&lt;/strong&gt; - &lt;a href="https://cloud.google.com/filestore"&gt;https://cloud.google.com/filestore&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Amazon Elastic Filesystem&lt;/strong&gt; - &lt;a href="https://aws.amazon.com/efs/"&gt;https://aws.amazon.com/efs/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Microsoft Azure Disk Storage&lt;/strong&gt; - &lt;a href="https://azure.microsoft.com/en-in/services/storage/disks/"&gt;https://azure.microsoft.com/en-in/services/storage/disks/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Microsoft Azure Data Lake Storage&lt;/strong&gt; - &lt;a href="https://azure.microsoft.com/en-in/services/storage/data-lake-storage/"&gt;https://azure.microsoft.com/en-in/services/storage/data-lake-storage/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Google Cloud Storage&lt;/strong&gt; - &lt;a href="https://cloud.google.com/storage"&gt;https://cloud.google.com/storage&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Amazon Simple Storage Service&lt;/strong&gt; - &lt;a href="https://aws.amazon.com/s3/"&gt;https://aws.amazon.com/s3/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#enterprise-machine-learning-tools"&gt;
  &lt;/a&gt;
  Enterprise Machine Learning Tools
&lt;/h2&gt;

&lt;p&gt;These are the tools used by large business organizations.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Amazon Sagemaker&lt;/strong&gt; - Amazon SageMaker is a cloud machine-learning platform that was launched in November 2017. SageMaker enables developers to create, train, and deploy machine-learning models in the cloud. SageMaker also enables developers to deploy ML models on embedded systems and edge-devices&lt;br&gt;
Link - &lt;a href="https://aws.amazon.com/sagemaker/"&gt;https://aws.amazon.com/sagemaker/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Databricks&lt;/strong&gt; - Databricks is an enterprise software company founded by the creators of Apache Spark. The company has also created Delta Lake, MLflow and Koalas, open source projects that span data engineering, data science and machine learning.&lt;br&gt;
Link - &lt;a href="https://databricks.com/"&gt;https://databricks.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Azure Machine Learning Studio&lt;/strong&gt; - Azure Machine Learning studio is a web portal in Azure Machine Learning that contains low-code and no-code options for project authoring and asset management.&lt;br&gt;
Link - &lt;a href="https://studio.azureml.net/"&gt;https://studio.azureml.net/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Google Cloud Vertex AI&lt;/strong&gt; - Vertex AI brings together the Google Cloud services for building ML under one, unified UI and API. In Vertex AI, you can now easily train and compare models using AutoML or custom code training and all your models are stored in one central model repository. These models can now be deployed to the same endpoints on Vertex AI.&lt;br&gt;
Link - &lt;a href="https://cloud.google.com/vertex-ai"&gt;https://cloud.google.com/vertex-ai&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;DataRobot&lt;/strong&gt; - DataRobot, the Boston-based Data Science company, enables business analysts to build predictive analytics with no knowledge of Machine Learning or programming. It uses automated ML to build and deploy accurate predictive models in a short span of time.&lt;br&gt;
Link - &lt;a href="https://www.datarobot.com/"&gt;https://www.datarobot.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Rapidminer&lt;/strong&gt; - RapidMiner is a data science software platform developed by the company of the same name that provides an integrated environment for data preparation, machine learning, deep learning, text mining, and predictive analytics.&lt;br&gt;
Link - &lt;a href="https://rapidminer.com/"&gt;https://rapidminer.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Alteryx&lt;/strong&gt; - Alteryx empowers analysts to prep, blend, and analyze data faster with hundreds of no-code, low-code analytic building blocks that enable highly configurable and repeatable workflows.&lt;br&gt;
Link - &lt;a href="https://www.alteryx.com/"&gt;https://www.alteryx.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Dataiku&lt;/strong&gt; - Dataiku enables teams to create and deliver data and advanced analytics using the latest techniques at scale. The software Dataiku Data Science Studio (DSS) supports predictive modelling to build business applications.&lt;br&gt;
Link - &lt;a href="https://www.dataiku.com/"&gt;https://www.dataiku.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#database-products"&gt;
  &lt;/a&gt;
  Database Products
&lt;/h2&gt;

&lt;p&gt;The databases are very important for Datascience, in this list there are SQL and No-SQL databases along with big data related database products. These are profoundly used databases.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;MySQL&lt;/strong&gt; - &lt;a href="https://www.mysql.com/"&gt;https://www.mysql.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;PostgreSQL&lt;/strong&gt; - &lt;a href="https://www.postgresql.org/"&gt;https://www.postgresql.org/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Microsoft SQL Server&lt;/strong&gt; - &lt;a href="https://www.microsoft.com/en-in/sql-server/sql-server-downloads"&gt;https://www.microsoft.com/en-in/sql-server/sql-server-downloads&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;MongoDB&lt;/strong&gt; - &lt;a href="https://www.mongodb.com/"&gt;https://www.mongodb.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Google Cloud BigQuery&lt;/strong&gt; - &lt;a href="https://cloud.google.com/bigquery"&gt;https://cloud.google.com/bigquery&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Oracle Database&lt;/strong&gt; - &lt;a href="https://www.oracle.com/database/"&gt;https://www.oracle.com/database/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Microsoft Azure SQL Database&lt;/strong&gt; - &lt;a href="https://azure.microsoft.com/en-in/products/azure-sql/database/"&gt;https://azure.microsoft.com/en-in/products/azure-sql/database/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Amazon Redshift&lt;/strong&gt; - &lt;a href="https://aws.amazon.com/redshift/"&gt;https://aws.amazon.com/redshift/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Snowflake&lt;/strong&gt; - &lt;a href="https://www.snowflake.com/"&gt;https://www.snowflake.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Google Cloud SQL&lt;/strong&gt; - &lt;a href="https://cloud.google.com/sql"&gt;https://cloud.google.com/sql&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Amazon DynamoDB&lt;/strong&gt; - &lt;a href="https://aws.amazon.com/dynamodb/"&gt;https://aws.amazon.com/dynamodb/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Microsoft Azure Cosmos DB&lt;/strong&gt; - &lt;a href="https://docs.microsoft.com/en-us/azure/cosmos-db/"&gt;https://docs.microsoft.com/en-us/azure/cosmos-db/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Google Cloud Bigtable&lt;/strong&gt; - &lt;a href="https://cloud.google.com/bigtable"&gt;https://cloud.google.com/bigtable&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;IBM Db2&lt;/strong&gt; - &lt;a href="https://www.ibm.com/in-en/products/db2-database"&gt;https://www.ibm.com/in-en/products/db2-database&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Google Cloud Firestore&lt;/strong&gt; - &lt;a href="https://firebase.google.com/docs/firestore"&gt;https://firebase.google.com/docs/firestore&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Amazon Aurora&lt;/strong&gt; - &lt;a href="https://aws.amazon.com/rds/aurora"&gt;https://aws.amazon.com/rds/aurora&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Google Cloud Spanner&lt;/strong&gt; - &lt;a href="https://cloud.google.com/spanner"&gt;https://cloud.google.com/spanner&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#machine-learning-experiment-tools"&gt;
  &lt;/a&gt;
  Machine Learning Experiment Tools
&lt;/h2&gt;

&lt;p&gt;The list below shows tools which are used for machine learning explainability and helping us better understand the ML algorithms like Tensorboard. It also contains tools for MLOPs like Weights and Biases, ClearML, Neptune.ai, etc. They are used to measure performance of models, keep logs, optimize ML pipelines, automate pipelines, and tune hyperparameters. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;TensorBoard&lt;/strong&gt; - &lt;a href="https://www.tensorflow.org/tensorboard"&gt;https://www.tensorflow.org/tensorboard&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;MLflow&lt;/strong&gt; - &lt;a href="https://mlflow.org/"&gt;https://mlflow.org/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Weights &amp;amp; Biases&lt;/strong&gt; - &lt;a href="https://wandb.ai/site"&gt;https://wandb.ai/site&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Neptune.ai&lt;/strong&gt; - &lt;a href="https://neptune.ai/"&gt;https://neptune.ai/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ClearML&lt;/strong&gt; - &lt;a href="https://clear.ml/"&gt;https://clear.ml/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Guild.ai&lt;/strong&gt; - &lt;a href="https://guild.ai/"&gt;https://guild.ai/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Polyaxon&lt;/strong&gt; - &lt;a href="https://polyaxon.com/"&gt;https://polyaxon.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Comet.ml&lt;/strong&gt; - &lt;a href="https://www.comet.ml/site/"&gt;https://www.comet.ml/site/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Domino Model Monitor&lt;/strong&gt; - &lt;a href="https://www.dominodatalab.com/product/domino-model-monitor"&gt;https://www.dominodatalab.com/product/domino-model-monitor&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#automated-machine-learning-frameworks"&gt;
  &lt;/a&gt;
  Automated Machine Learning Frameworks
&lt;/h2&gt;

&lt;p&gt;Automated machine learning (AutoML) is the process of applying machine learning (ML) models to real-world problems using automation. More specifically, it automates the selection, composition and parameterization of machine learning models. These frameworks help in implementing AutoML. The different steps in traditional ML are data pre-processing, feature engineering, feature extraction, feature selection, algorithm selection, and hyperparameter optimization. AutoML helps automate this entire pipeline. AutoML dramatically simplifies these steps for non-experts. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Google Cloud AutoML&lt;/strong&gt; - &lt;a href="https://cloud.google.com/automl"&gt;https://cloud.google.com/automl&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Azure Automated Machine Learning&lt;/strong&gt; - &lt;a href="https://azure.microsoft.com/en-in/services/machine-learning/automatedml/"&gt;https://azure.microsoft.com/en-in/services/machine-learning/automatedml/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Amazon Sagemaker Autopilot&lt;/strong&gt; - &lt;a href="https://aws.amazon.com/sagemaker/autopilot/"&gt;https://aws.amazon.com/sagemaker/autopilot/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;H2O Driverless AI&lt;/strong&gt; - &lt;a href="https://www.h2o.ai/products/h2o-driverless-ai/"&gt;https://www.h2o.ai/products/h2o-driverless-ai/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Databricks AutoML&lt;/strong&gt; - &lt;a href="https://databricks.com/product/automl"&gt;https://databricks.com/product/automl&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;DataRobot AutoML&lt;/strong&gt; - &lt;a href="https://www.datarobot.com/platform/automated-machine-learning/"&gt;https://www.datarobot.com/platform/automated-machine-learning/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>datascience</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Magento Tips - Pentest with sqlmap</title>
      <author>Rhuaridh</author>
      <pubDate>Sat, 13 Nov 2021 17:12:05 +0000</pubDate>
      <link>https://dev.to/rhuaridh/magento-tips-pentest-with-sqlmap-1cn0</link>
      <guid>https://dev.to/rhuaridh/magento-tips-pentest-with-sqlmap-1cn0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#pentest-magento2"&gt;
  &lt;/a&gt;
  Pentest Magento2
&lt;/h2&gt;

&lt;p&gt;Magento 2 is popular and hard to upgrade. This creates the perfect breeding ground for insecure eCommerce stores which hackers love to exploit.&lt;/p&gt;

&lt;p&gt;A common tool used by penetration testers to detect insecure sites is sqlmap.&lt;/p&gt;

&lt;p&gt;In a nutshell, sqlmap is an open source tool that automates the process of detecting and exploiting SQL injection flaws.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-sqlmap"&gt;
  &lt;/a&gt;
  Install sqlmap
&lt;/h2&gt;

&lt;p&gt;First we need to install sqlmap locally, this assumes that you have python installed already.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone --depth 1 https://github.com/sqlmapproject/sqlmap.git sqlmap-dev
cd sqlmap-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;It should go without saying that you should only ever use sqlmap against your own websites.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w9foPu2y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y699zoj4xolbaaorlajd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w9foPu2y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y699zoj4xolbaaorlajd.png" alt="Installing sqlmap" width="880" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-sample-sql-injection-flaw-to-test"&gt;
  &lt;/a&gt;
  Create a sample SQL injection flaw to test
&lt;/h2&gt;

&lt;p&gt;For testing purposes, on our local site we can create a SQL injection flaw to test this against. It is important that you never deploy this code live for obvious reasons.&lt;/p&gt;

&lt;p&gt;In my case, I just added this to my test controller:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$connection = $this-&amp;gt;_resourceConnection-&amp;gt;getConnection();
$year = $_GET["year"] ?? 2021;
$rows = $connection-&amp;gt;fetchAll("SELECT count(*) as total FROM sales_order WHERE created_at = $year");
$total = $rows[0]['total'] ?? 0;
echo "Hello World. There are $total orders on this site.";
exit;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;As you can see we are bypassing the ORM, and failing to escape and validate the $year input variable. This should never be done - but yet it is not uncommon to see this in third party extensions.&lt;/p&gt;

&lt;p&gt;Here is what our vulnerable extension looks like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AcEVihkD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/24f1adsd2x0hjp54qbty.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AcEVihkD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/24f1adsd2x0hjp54qbty.png" alt="Hello world extension" width="742" height="378"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finding-a-vulnerable-parameter"&gt;
  &lt;/a&gt;
  Finding a vulnerable parameter
&lt;/h2&gt;

&lt;p&gt;Find our magento store url, I will use &lt;a href="https://magento.rhuaridh.co.uk/"&gt;https://magento.rhuaridh.co.uk/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So on our local machine, we can now run sqlmap:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python3 sqlmap.py -u https://magento.rhuaridh.co.uk/helloworld/index/helloworld?year=2021 \
--dbms=mysql \
--sql-shell
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;This command will quickly identify that year is vulnerable. The --sql-shell will then open a shell for us to run queries in.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--axSLuGRI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/09a13wiem0se1oc0g2b2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--axSLuGRI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/09a13wiem0se1oc0g2b2.png" alt="Finding a vuln" width="880" height="384"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#retrieving-data"&gt;
  &lt;/a&gt;
  Retrieving data
&lt;/h2&gt;

&lt;p&gt;For example, to pull a list of admin e-mail addresses you can run:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT email FROM admin_user;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;And that's it! That is how easy it is. We now have a list of all the admin e-mail addresses on the magento 2 store.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OVQ7EFzU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k654askfzqwpostlnwo9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OVQ7EFzU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k654askfzqwpostlnwo9.png" alt="Retrieving data from sqlmap" width="880" height="308"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-i-stop-sql-injection"&gt;
  &lt;/a&gt;
  How do I stop SQL injection?
&lt;/h2&gt;

&lt;p&gt;Always make sure you use the ORM, never pass a variable into a query string and always validate user supplied input. It's a simple as that!&lt;/p&gt;

&lt;p&gt;Best practice exists for a reason.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to Migrate Environment Variables (ENV) to Rails Credentials</title>
      <author>thomasvanholder</author>
      <pubDate>Sat, 13 Nov 2021 17:03:06 +0000</pubDate>
      <link>https://dev.to/thomasvanholder/how-to-migrate-environment-variables-env-to-rails-credentials-15ha</link>
      <guid>https://dev.to/thomasvanholder/how-to-migrate-environment-variables-env-to-rails-credentials-15ha</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;a href="#1-why-should-you-move-from-env-to-credentials"&gt;Why Should You Move From .Env to Credentials?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-how-it-works"&gt;How it Works&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3-migrate-from-env-to-rails-credentials"&gt;Migrate From .Env to Rails Credentials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4-how-to-use-credentials-in-multiple-file-formats"&gt;How to Use Credentials in Multiple File Formats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5-how-to-share-keys-with-a-team"&gt;How to Share Keys With a Team&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;small&gt;Initially published on Medium on Jan 26th 2020&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;One key rules them all&lt;/p&gt;

&lt;p&gt;Rails credentials are the new gold standard. ENV files are an insecure ancestor. In this article, you’ll learn why and how to migrate, how to use API keys in Ruby, YML and js.erb, and how to share a single key once with your team.&lt;/p&gt;

&lt;p&gt;DHH &lt;a href="https://twitter.com/dhh/status/983452583368019968?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E983452583368019968%7Ctwgr%5E%7Ctwcon%5Es1_&amp;amp;ref_url=https%3A%2F%2Fcdn.embedly.com%2Fwidgets%2Fmedia.html%3Ftype%3Dtext2Fhtmlkey%3Da19fcc184b9711e1b4764040d3dc5c07schema%3Dtwitterurl%3Dhttps3A%2F%2Ftwitter.com%2Fdhh%2Fstatus%2F983452583368019968image%3D"&gt;tweeted&lt;/a&gt; about its arrival nearly three years ago, but new technology often takes time to catch up. A wake-up call is when you find yourself too frequently juggling API keys between developers in your team. It might be time to take a second look at how to implement credentials in a rails app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-why-should-you-move-from-env-to-credentials"&gt;
  &lt;/a&gt;
  1. Why Should You Move From .Env to Credentials?
&lt;/h2&gt;

&lt;p&gt;The further a project gets in its development cycle, the more services are integrated. Every external service has its API key. It usually doesn’t take too long before developers start hunting teammates for the latest API key. How annoying!&lt;/p&gt;

&lt;p&gt;Or, just imagine when an API key gets refreshed. Every developer individually has to update it into local dotenv files. That seems anti-automation and anti-programmatic — and it is.&lt;/p&gt;

&lt;p&gt;Stop throwing API keys through Slack or email and avoid a security breach of your keys. Luckily, rails credentials offer an easy and welcoming successor. Uploading your keys to Github.&lt;/p&gt;

&lt;p&gt;Uploading to Github!? Yes, uploading to Github! A small annotation is that the API keys are fully encrypted.&lt;/p&gt;

&lt;p&gt;The big win is that there is only a single key to share with your team. It never changes! Any new API keys added by your fellow developers as rails credentials are pulled from Github as you pull the latest main (&lt;a href="https://www.zdnet.com/article/github-to-replace-master-with-main-starting-next-month/"&gt;prev. master&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;You can find the key in the config/master.key folder.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#2-how-it-works"&gt;
  &lt;/a&gt;
  2. How it Works
&lt;/h2&gt;

&lt;p&gt;Running &lt;code&gt;bin/rails credentials:edit&lt;/code&gt; in rails creates two files needed in the config folder:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;credentials.yml.enc&lt;/code&gt; stores all your API keys. In case you were wondering, the .enc extension signifies encryption.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;master.key&lt;/code&gt; is the key use to decrypt the encrypted.file (1.) Make sure to check the inclusion of the &lt;code&gt;master.key&lt;/code&gt; in your &lt;code&gt;.gitignore.yml&lt;/code&gt; file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;Credentials.yml.enc&lt;/code&gt; is safe and secure sent along with your repository to Github. The master key, however, is never sent along — guard it like your life depends on it!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#3-migrate-from-env-to-rails-credentials"&gt;
  &lt;/a&gt;
  3. Migrate From .Env to Rails Credentials
&lt;/h2&gt;

&lt;p&gt;Open the credentials file by running the following in your terminal:&lt;br&gt;
&lt;code&gt;EDITOR='code --wait' bin/rails credentials:edit&lt;/code&gt;. Depending on the editor you currently use, replace &lt;code&gt;code&lt;/code&gt; (VS Code). For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;vim or vi= Vim&lt;/li&gt;
&lt;li&gt;atom = Atom&lt;/li&gt;
&lt;li&gt;subl or stt = Sublime&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The credentials file automatically opens in the editor and waits to for you to update and close the file again. Migrate the ENV keys you are using in the .env file to the credentials.yml file.&lt;/p&gt;

&lt;p&gt;Turn your legacy &lt;code&gt;.ENV&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="s"&gt;STRIPE_PUBLISHABLE_KEY=pk_test_VG8LlUN82DcZS3cAOJVy0WyIR9Jwz0YZkq302MKc00t&lt;/span&gt;
&lt;span class="s"&gt;STRIPE_SECRET_KEY=sk_test_VG8LlUN82DcZS3cAOJVy0WyIR9Jwz0YZkq302MKc00tgAAYF&lt;/span&gt;
&lt;span class="s"&gt;STRIPE_WEBHOOK_SECRET_KEY=whsec_cZpB0VG8cZpB0VG8cZpB0VG8UrgA2gcZpB0VG8cZpB&lt;/span&gt;
&lt;span class="s"&gt;CLOUDINARY_URL=cloudinary://15031853100444:XOr3XQ-DcZ4dBoan80@DcZ4Boan800U&lt;/span&gt;
&lt;span class="s"&gt;GOOGLE_API_KEY=S3cAOJVy0WyS3cAOJVy0WyIR9AOJVy0WyIR92e&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Into a &lt;code&gt;credentials.yml&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;stripe&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;publishable_key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pk_test_VG8LlUN82DcZS3cAOJVy0WyIR9Jwz0YZkq302MKc00tgAAYF&lt;/span&gt;
  &lt;span class="na"&gt;secret_key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;sk_test_VG8LlUN82DcZS3cAOJVy0WyIR9Jwz0YZkq302MKc00tgAAYF&lt;/span&gt;
  &lt;span class="na"&gt;web_hook_secret_key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;whsec_cZpB0VG8cZpB0VG8cZpB0VG8UrgA2gcZpB0VG8cZpB&lt;/span&gt;

&lt;span class="na"&gt;google_api_key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;S3cAOJVy0WyS3cAOJVy0WyIR9AOJVy0WyIR92e&lt;/span&gt;

&lt;span class="na"&gt;cloudinary&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;cloud_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;abcdefg&lt;/span&gt;
  &lt;span class="na"&gt;api_key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12345678910&lt;/span&gt;
  &lt;span class="na"&gt;api_secret&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;abc315-VG8Ll8VG8Ll8L&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;note: Cloudinary API key is split up as per documentation.&lt;/p&gt;

&lt;p&gt;You are now all set. View credentials can run in the terminal.&lt;br&gt;
Run &lt;code&gt;bin/rails credentials:show.&lt;/code&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#4-how-to-use-credentials-in-multiple-file-formats"&gt;
  &lt;/a&gt;
  4. How to Use Credentials in Multiple File Formats
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#ruby"&gt;
  &lt;/a&gt;
  Ruby
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# nested key&lt;/span&gt;
&lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:publishable_key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# single key&lt;/span&gt;
&lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;google_api_key&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#yml"&gt;
  &lt;/a&gt;
  YML
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;cloudinary&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;service&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Cloudinary&lt;/span&gt;
  &lt;span class="na"&gt;api_key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;%= Rails.application.credentials.dig(:cloudinary, :api_key) %&amp;gt;&lt;/span&gt;
  &lt;span class="na"&gt;api_secret&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;%= Rails.application.credentials.dig(:cloudinary, :api_secret) %&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;for Cloudinary an additional &lt;a href="https://gist.github.com/thomasvanholder/6ee92715274ad993f080db15ed3dd177"&gt;config/cloudinary.yml&lt;/a&gt; file is needed&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JavaScript
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ruby code only possible with js.erb format&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;abc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;%= Rails.application.credentials.google_api_key %&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#erb"&gt;
  &lt;/a&gt;
  ERB
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- interpolate in script tag --&amp;gt;&lt;/span&gt; 
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://maps.googleapis.com/maps/api/js?key=&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;google_api_key&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="na"&gt;script&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#5-how-to-share-keys-with-a-team"&gt;
  &lt;/a&gt;
  5. How to Share Keys With a Team
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Share the key in &lt;code&gt;master.key&lt;/code&gt; with fellow developers to enable decryption.&lt;/li&gt;
&lt;li&gt;Each team member creates a &lt;code&gt;master.key&lt;/code&gt; file locally in the config folder and pastes it in the shared key.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Coding is more fun without the hassle of chasing the correct API keys. Your app is up-to-date with security best practices. Share a master key once and be free of tedious copy-pasting.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>rails</category>
      <category>programming</category>
      <category>credentials</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How To Track Your User's Journey On Your WordPress Website</title>
      <author>CodeWatchers</author>
      <pubDate>Sat, 13 Nov 2021 17:00:05 +0000</pubDate>
      <link>https://dev.to/codewatchers_en/how-to-track-your-users-journey-on-your-wordpress-website-4m39</link>
      <guid>https://dev.to/codewatchers_en/how-to-track-your-users-journey-on-your-wordpress-website-4m39</guid>
      <description>&lt;p&gt;You might have wondered what page your visitors go through the most before filling out your website form. Tracking your user's Journey allows you that information that is essential for engagement and business growth.&lt;/p&gt;

&lt;p&gt;Tracking the user's journey enables you to know about how your users interact with your website. By looking at the steps they take before they go on to fill-up the form will help you enhance the quality of those pages.&lt;/p&gt;

&lt;p&gt;By having this information you will know exactly where you want to put your energy and which pages are more important than others. In this tutorial, we will understand how to track the user's journey before they fill out the form.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#wp-forms" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a href="https://wpforms.com/"&gt;WP Forms&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wS9ZY885--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/01/WP-Forms.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wS9ZY885--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/01/WP-Forms.jpg" alt="" width="880" height="477"&gt;&lt;/a&gt;&lt;a href="https://wpforms.com/"&gt;WP Forms&lt;/a&gt; is the most popular WordPress plugin that you can use to create forms for your WordPress website. Used by more than 4 million WordPress websites, WP Forms is easy and simple to use.&lt;/p&gt;

&lt;p&gt;It offers a variety of features such as Email Marketing Services, Payment Gateways, subscription forms, and a lot more. While it also has some addons to extend its features.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://wpforms.com/"&gt;Details&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://wpforms.com/"&gt;Demo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://codewatchers.com/aff/hostings/go"&gt;Hosting&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For this tutorial, we are going to use a &lt;a href="https://wpforms.com/"&gt;WP Forms&lt;/a&gt; addon for &lt;strong&gt;User Journey&lt;/strong&gt; which will allow us to track the user's path on our website. It will also allow us to see the time a user has spent on a particular page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_twPFjr2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/User-Journey.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_twPFjr2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/User-Journey.png" alt="" width="528" height="296"&gt;&lt;/a&gt;Let's head over to WordPress and start the process.&lt;/p&gt;

&lt;p&gt;Once you have installed the &lt;a href="https://wpforms.com/"&gt;WP Forms&lt;/a&gt; plugin, in the &lt;strong&gt;General&lt;/strong&gt; tab from &lt;strong&gt;WP Forms Settings&lt;/strong&gt; in WordPress &lt;strong&gt;Admin Bar&lt;/strong&gt;, it will ask you for the license key which you will get from your WP Forms subscription account.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tRd3Klka--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/WP-Forms-license.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tRd3Klka--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/WP-Forms-license.png" alt="" width="547" height="127"&gt;&lt;/a&gt;After you have successfully connected your account with the plugin, you need to go to &lt;strong&gt;Addons&lt;/strong&gt; in the &lt;strong&gt;Admin Bar&lt;/strong&gt; under &lt;strong&gt;WP Forms.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a8Isu6qV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/User-Journey-Addon.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a8Isu6qV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/User-Journey-Addon.png" alt="" width="118" height="268"&gt;&lt;/a&gt;Next, you need to press the &lt;strong&gt;Install Addon&lt;/strong&gt; button below the &lt;strong&gt;User Journey Addon&lt;/strong&gt; on the page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qbNhfkT0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/User-Journey-Addon-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qbNhfkT0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/User-Journey-Addon-1.png" alt="" width="366" height="199"&gt;&lt;/a&gt;Next up, you can start creating forms. With WP Forms you can create all kinds of forms using simple pre-built templates. Let's go ahead and create a &lt;strong&gt;Contact Us&lt;/strong&gt; form.&lt;/p&gt;

&lt;p&gt;To create a form, you need to go to &lt;strong&gt;WP Forms&lt;/strong&gt; and press &lt;strong&gt;Add New.&lt;/strong&gt; You will select the &lt;strong&gt;Title&lt;/strong&gt; for your form and then see a number of &lt;strong&gt;Form Templates&lt;/strong&gt; from which you can choose the one you want to create.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6MiUcC4t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Simple-Contact-Form.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6MiUcC4t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Simple-Contact-Form.png" alt="" width="417" height="126"&gt;&lt;/a&gt;Once you have selected the &lt;strong&gt;Template&lt;/strong&gt;, the plugin will direct you towards the drag and drop builder.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HbyvG5Y---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Form-Builder.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HbyvG5Y---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/Form-Builder.png" alt="" width="550" height="313"&gt;&lt;/a&gt;&lt;a href="https://codewatchers.com/en/blog/how-to-track-your-users-journey-on-wordpress?utm_campaign=content-trimming&amp;amp;utm_source=dev.to&amp;amp;utm_medium=link"&gt;Read The Full Tutorial.&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to become a Git expert!</title>
      <author>Sagar Barapatre</author>
      <pubDate>Sat, 13 Nov 2021 16:47:37 +0000</pubDate>
      <link>https://dev.to/sagarbarapatre/how-to-become-a-git-expert-1jl2</link>
      <guid>https://dev.to/sagarbarapatre/how-to-become-a-git-expert-1jl2</guid>
      <description>&lt;p&gt;I made a mistake in my commit, how do I fix it ?&lt;/p&gt;

&lt;p&gt;My commit history is a mess, how do I make it neater?&lt;/p&gt;

&lt;p&gt;If you have ever had the above questions, then this post is for you. This post covers a list of topics which will make you a Git expert.&lt;/p&gt;

&lt;p&gt;If you do not know Git basics, &lt;a href="https://www.freecodecamp.org/news/git-and-github-for-beginners/"&gt;click here&lt;/a&gt; to check out the best blog I have seen on Git basics. It is necessary that you know basics of Git to make the best use of this article.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-made-a-mistake-in-my-commit-what-should-i-do"&gt;
  &lt;/a&gt;
  I made a mistake in my commit. What should I do?
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#scenario-1"&gt;
  &lt;/a&gt;
  Scenario 1
&lt;/h4&gt;

&lt;p&gt;Let’s say that you have committed a bunch of files and realised that the commit message you entered is actually not clear. Now you want to change the commit message. In order to do this you can use &lt;code&gt;git commit --amend&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git commit &lt;span class="nt"&gt;--amend&lt;/span&gt; &lt;span class="nt"&gt;-m&lt;/span&gt; “New commit message”
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#scenario-2"&gt;
  &lt;/a&gt;
  Scenario 2
&lt;/h4&gt;

&lt;p&gt;Let’s say that you wanted to commit six files but, by mistake, you end up committing only five files. You may think that you can create a new commit and add the 6th file to that commit.&lt;/p&gt;

&lt;p&gt;There is nothing wrong with this approach. But, to maintain a neat commit history, wouldn’t it be nicer if you could actually somehow add this file to your previous commit itself? This can be done through &lt;code&gt;git commit --amend&lt;/code&gt; as well:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git add file6
git commit &lt;span class="nt"&gt;--amend&lt;/span&gt; &lt;span class="nt"&gt;--no-edit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;--no-edit&lt;/code&gt; means that the commit message does not change.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#scenario-3"&gt;
  &lt;/a&gt;
  Scenario 3
&lt;/h4&gt;

&lt;p&gt;Whenever you do a commit in Git, the commit has an author name and author email tied to it. Generally, when you set up Git for the first time, you set up the author name and email. You don’t need to worry about the author details for every commit.&lt;/p&gt;

&lt;p&gt;That said, it’s possible that for a particular project you want to use a different email ID. You need to configure the email id for that project with the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config user.email “your email &lt;span class="nb"&gt;id&lt;/span&gt;”
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let’s say that you forgot to configure the email and already did your first commit. &lt;code&gt;Amend&lt;/code&gt; can be used to change the author of your previous commit as well. The author of the commit can be changed using the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git commit &lt;span class="nt"&gt;--amend&lt;/span&gt; &lt;span class="nt"&gt;--author&lt;/span&gt; &lt;span class="s2"&gt;"Author Name &amp;lt;Author Email&amp;gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#point-to-note"&gt;
  &lt;/a&gt;
  Point to note
&lt;/h4&gt;

&lt;p&gt;Use the &lt;code&gt;amend&lt;/code&gt; command &lt;strong&gt;only&lt;/strong&gt; in your local repository. Using &lt;code&gt;amend&lt;/code&gt; for the remote repository can create a lot of confusion.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-commit-history-is-a-mess-how-do-i-handle-it"&gt;
  &lt;/a&gt;
  My Commit history is a mess. How do I handle it?
&lt;/h3&gt;

&lt;p&gt;Let’s say that you are working on a piece of code. You know that the code is going to take approximately ten days to complete. Within those ten days, the other developers will also be committing code to the remote repository.&lt;/p&gt;

&lt;p&gt;It is a &lt;strong&gt;good practice&lt;/strong&gt; to keep your local repository code up-to-date with the code in the remote repository. This avoids a lot of merge conflicts later when you raise a pull request. So you decide that you will pull the changes from the remote repository once every two days.&lt;/p&gt;

&lt;p&gt;Every time you pull the code from the remote repository to the local repository a new merge commit is created in your local repository. This means that your local commit history is going to have a lot of merge commits which can make things look confusing to the reviewer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OH6hAyZ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1hz0j2j834wcwab7m0z1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OH6hAyZ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1hz0j2j834wcwab7m0z1.jpeg" alt="Imagsckmslc" width="700" height="579"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-do-you-make-the-commit-history-look-neater"&gt;
  &lt;/a&gt;
  How do you make the commit history look neater?
&lt;/h3&gt;

&lt;p&gt;This is where &lt;strong&gt;rebase&lt;/strong&gt; comes to the rescue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-rebasing"&gt;
  &lt;/a&gt;
  What is rebasing?
&lt;/h3&gt;

&lt;p&gt;Let me explain this through an example.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t_B2Fmwo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ep61ghf56hgf1ddenz4x.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t_B2Fmwo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ep61ghf56hgf1ddenz4x.jpeg" alt="Imagejnkjnjk" width="700" height="596"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The Release branch has three commits: Rcommit1, Rcommit2, and Rcommit3.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You created your Feature branch from the Release branch when it had only one commit, which is Rcommit1.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You have added two commits to the Feature branch. They are Fcommit1 and Fcommit2.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Your goal is to get the commits from the Release branch into your Feature branch.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You are going to use rebase to do this.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Let the name of the Release branch be &lt;strong&gt;release&lt;/strong&gt; and the name of the Feature branch be &lt;strong&gt;feature&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Rebasing can be done using the following commands:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout feature
git rebase release
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#rebasing"&gt;
  &lt;/a&gt;
  Rebasing
&lt;/h3&gt;

&lt;p&gt;While rebasing, your goal is to ensure the Feature branch gets the latest code from the Release branch.&lt;/p&gt;

&lt;p&gt;Rebasing tries to add each commit, one by one, and checks for conflicts. Does that sound confusing?&lt;/p&gt;

&lt;p&gt;Let me explain with the help of a diagram.&lt;/p&gt;

&lt;p&gt;This shows what rebasing actually does internally:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wi_cfpOb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfnfmxp95xxh6eip67cr.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wi_cfpOb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfnfmxp95xxh6eip67cr.jpeg" alt="Imagkskmls" width="700" height="704"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The moment you run the command, the Feature branch is pointed to the head of Release branch.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now the Feature branch has three commits: Rcommit1, Rcommit2, and Rcommit3.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You may be wondering what happened to Fcommit1 and Fcommit2.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The commits are still there and will be used in the steps below.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Now Git tries to add Fcommit1 to the Feature branch.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If there is no conflict Fcommit1 is added after Rcommit3&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If there is a conflict, Git will notify you, and you will have to resolve the conflict manually. After the conflict is resolved use the following commands to continue rebasing.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git add fixedfile
git rebase &lt;span class="nt"&gt;--continue&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Once Fcommit1 is added, Git will try to add Fcommit2.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Again, if there is no conflict Fcommit2 is added after Fcommit1 and the rebase is successful.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If there is a conflict, Git will notify you, and you will have to resolve it manually. Use the same commands mentioned in Step 2 after resolving conflicts.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After the entire rebase is done, you will notice that the Feature branch has Rcommit1, Rcommit2, Rcommit3 , Fcommit1, and Fcommit2.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#points-to-note"&gt;
  &lt;/a&gt;
  Points to note
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Both Rebase and Merge are useful in Git. One is not better than the other.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the case of a merge you will have a merge commit. In the case of a rebase there is no extra commit like a merge commit.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;One best practise is to use the commands at different points. Use rebase when you are updating your local code repository with the latest code from the remote repository. Use merge when you are dealing with pull requests to merge the Feature branch back with the Release or Master branch.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using Rebase alters the commit history ( it makes it neater) . But that being said, altering the commit history has it’s risks. So ensure you never use rebase on a code that is there in the remote repository. Always use rebase only to alter the commit history of your local repo code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If rebase is done to a remote repository it can create a lot of confusion since other developers will not recognise the new history.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Also if rebase is done on the remote repository, it can create issues when other developers try to pull the latest code from remote repository. So I repeat again, always use rebase only for the local repository 😃&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#congrats"&gt;
  &lt;/a&gt;
  Congrats
&lt;/h3&gt;

&lt;p&gt;You are now a Git expert 😃&lt;/p&gt;

&lt;p&gt;In this post you have learnt about:&lt;/p&gt;

&lt;p&gt;• amending commits&lt;br&gt;
• rebase&lt;/p&gt;

&lt;p&gt;Both of these are very useful concepts. Go explore the world of Git to learn even more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#about-the-author"&gt;
  &lt;/a&gt;
  About the author
&lt;/h3&gt;

&lt;p&gt;I love technology and follow the advancements in the field. I also like helping others with my technology knowledge.&lt;/p&gt;

&lt;p&gt;Feel free to connect with me on my LinkedIn account &lt;a href="https://www.linkedin.com/in/sagarbarapatre02"&gt;https://www.linkedin.com/in/sagarbarapatre02&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also follow me on twitter &lt;a href="https://www.twitter.com/sagar_sb_"&gt;https://www.twitter.com/sagar_sb_&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My Website: &lt;a href="https://sagarbarapatre.vercel.app"&gt;https://sagarbarapatre.vercel.app&lt;/a&gt;&lt;/p&gt;

</description>
      <category>git</category>
      <category>github</category>
      <category>tutorial</category>
      <category>opensource</category>
    </item>
    <item>
      <title>My first Hackathon Experience</title>
      <author>Kunal Kumar</author>
      <pubDate>Sat, 13 Nov 2021 16:37:27 +0000</pubDate>
      <link>https://dev.to/kunalkumar007/my-first-hackathon-experience-44po</link>
      <guid>https://dev.to/kunalkumar007/my-first-hackathon-experience-44po</guid>
      <description>&lt;p&gt;A hackathon is similar to a meetup for programmers looking for like-minded individuals. Techcrunch Disrupt, HackMIT, HackNY, Codespace, Flipcart GRID, and others are among the hackathons I've heard of. There are many more, and you can find them by searching online.A hackathon is similar to a meetup for programmers looking for like-minded individuals. Techcrunch Disrupt, HackMIT, HackNY, Codespace, Flipcart GRID, and others are among the hackathons I've heard of. There are many more, and you can find them by searching online.&lt;/p&gt;

&lt;p&gt;So, let us get started with today's topic. Hello, my name is Kunal and I am a developer from India who is just starting out in the world of technology.&lt;br&gt;
I recently finished my first hackathon of my life and would like to share my experience with you all.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;First of all&lt;/strong&gt;, I went to &lt;a href="https://devfolio.co/home/"&gt;devfolio&lt;/a&gt; Website and Sign Up for the Account.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Secondly&lt;/strong&gt;, I went to the &lt;a href="https://devfolio.co/hackathons"&gt;Hackathon&lt;/a&gt; section and discovered my first organisation, &lt;em&gt;&lt;a href="https://revahack.com/#/"&gt;Reva Hack&lt;/a&gt;&lt;/em&gt;, which is a student community-based online hackathon for coding enthusiasts.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Thirdly&lt;/strong&gt;, I formed a team with Koshik, whom I met on the Discord server, and we called ourselves Hack-Up007, and we began work on &lt;strong&gt;&lt;em&gt;Abhaya&lt;/em&gt;&lt;/strong&gt; "a Women Safety App." &lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/koushik-sherugar"&gt;
        koushik-sherugar
      &lt;/a&gt; / &lt;a href="https://github.com/koushik-sherugar/Abhaya"&gt;
        Abhaya
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      women safety webapp
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;Abhaya - Women Safety Application&lt;/p&gt;
&lt;p&gt;Women think twice before stepping out of their house, they live in constant fear. Some of them are even subjected to domestic violence and not well aware of constitutional laws and the organisations which can help them. So our aim is to provide safety as well creating awareness about constitutional rights and various NGOs to them.&lt;/p&gt;
&lt;p&gt;How we are trying to solve it
For women safety we are providing live location sharing through SMS , calling family members and organisations like police, women helpline based on their current location
Creating awareness of constitutional laws and bringing justice to all victims through NGOs and contact us section for assisting with their issues.&lt;/p&gt;
&lt;h1&gt;
Getting Started with Create React App&lt;/h1&gt;
&lt;p&gt;This project was bootstrapped with &lt;a href="https://github.com/facebook/create-react-app"&gt;Create React App&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Available Scripts&lt;/h2&gt;
&lt;p&gt;In the project directory, you can run:&lt;/p&gt;
&lt;h3&gt;
&lt;code&gt;yarn start&lt;/code&gt;
&lt;/h3&gt;
&lt;p&gt;Runs the app in the development mode.&lt;br&gt;
Open…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/koushik-sherugar/Abhaya"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;Now, once we start working, we run into a problem such as how to send an SOS message when a user is in danger. We used the Twilio API to do it, and then we had to get the current user's location in order to send an SOS message. Throughout the process, we encountered numerous challenges.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;What I Learnt&lt;/em&gt;&lt;/strong&gt; 🔥:- &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Team Up&lt;/strong&gt;:- During that time, we both worked as a team, solving each other's problems.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Working under Pressure&lt;/strong&gt;:- I worked all day to get to the point where I was overjoyed when we discovered the bug and fixed it. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Presenting final Products&lt;/strong&gt;:- We need to provide an elevator pitch and are stuck in the middle as to how and who will present the idea. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That was a rewarding experience for me. I plan to attend more hackathons and learn as much as I can.&lt;/p&gt;

&lt;p&gt;Feel free to leave a comment in the Discussions section. It is intended for your response; please make use of it.😅&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Simple Python Exercises</title>
      <author>Saleh Mubashar</author>
      <pubDate>Sat, 13 Nov 2021 16:33:41 +0000</pubDate>
      <link>https://dev.to/salehmubashar/simple-python-exercises-4109</link>
      <guid>https://dev.to/salehmubashar/simple-python-exercises-4109</guid>
      <description>&lt;p&gt;Hi guys!&lt;/p&gt;

&lt;p&gt;In this post we will be looking into a few simple python exercises or challenges that will be very useful in strengthening your concepts.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#exercise-1"&gt;
  &lt;/a&gt;
  Exercise - 1
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Find the number of upper case and lower case letters in a string.&lt;/strong&gt;&lt;br&gt;
For this challenge, we will loop through a string and count the number of upper and lower case letters in it. Then when all the characters have been checked, we will output the numbers.&lt;br&gt;
We will use the string 'The Dev Community is Amazing'.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"The Dev Community is Amazing"&lt;/span&gt;
&lt;span class="c1"&gt;#Variables to store the number of upper and lower case
&lt;/span&gt;&lt;span class="n"&gt;UpperCase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;LowerCase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="c1"&gt;#loop through the string
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;#check for upper case
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="s"&gt;"A"&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="s"&gt;"Z"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;UpperCase&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="c1"&gt;#check for lowercase
&lt;/span&gt;    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="s"&gt;"a"&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="s"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;LowerCase&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="c1"&gt;#print the final number.
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"UpperCase letters:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;UpperCase&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"and LowerCase letters:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LowerCase&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output for this string will be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;UpperCase letters: 4 and LowerCase letters: 20
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#exercise-2"&gt;
  &lt;/a&gt;
  Exercise - 2
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Write the multiplication table of a number to 5&lt;/strong&gt;&lt;br&gt;
In this one, we will write the multiplication table of any number input by user.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#user input
&lt;/span&gt;&lt;span class="n"&gt;Number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Enter a number: "&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#loop from 1 to 5 and write the multiplication for each
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"="&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Number&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Enter a number: 5
5 * 1 = 5
5 * 2 = 10
5 * 3 = 15
5 * 4 = 20
5 * 5 = 25
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#exercise-3"&gt;
  &lt;/a&gt;
  Exercise - 3
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Find the number of even numbers in a given range&lt;/strong&gt;&lt;br&gt;
For this one, we will take a range of numbers from the user and give the number of even numbers in that range.&lt;/p&gt;

&lt;p&gt;A number is even if its remainder is 0 when it is divided by 2.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#user inputs the range
&lt;/span&gt;&lt;span class="n"&gt;Number1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Enter starting number: "&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;Number2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Enter last number: "&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Store number of even numbers
&lt;/span&gt;&lt;span class="n"&gt;Even&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="c1"&gt;#check each number in range
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Number1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Number2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;#check if number is  even
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;Even&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Number of even numbers are:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Even&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Enter starting number: 1
Enter last number: 4
Number of even numbers are: 2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;These were the 3 simple python exercises every beginner should try to strengthen their concepts and get some useful practice&lt;/p&gt;

&lt;p&gt;I hope you all found them useful.&lt;br&gt;
Check out my other &lt;a href="https://owlcation.com/stem/reactCounter"&gt;tutorials&lt;/a&gt; on &lt;a href="https://hubpages.com/@salehmubashar"&gt;hubpages&lt;/a&gt;.&lt;br&gt;
Also follow me on &lt;a href=""&gt;twitter&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Like my work? Buy me a coffee!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/salehmubashar"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQj764Ae--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-orange.png" alt="Buy Me A Coffee" width="434" height="100"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Until next time,&lt;br&gt;
Cheers :)&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>python</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Create Notepad editor with Python using Tkinter</title>
      <author>rrtutors</author>
      <pubDate>Sat, 13 Nov 2021 16:23:42 +0000</pubDate>
      <link>https://dev.to/rrtutors/create-notepad-editor-with-python-using-tkinter-21ap</link>
      <guid>https://dev.to/rrtutors/create-notepad-editor-with-python-using-tkinter-21ap</guid>
      <description>&lt;p&gt;Develop a Notepad editor with Tkinter .Tkinter is Python GUI toolkit which will provide GUI interface. To create this notepad editor we need to add Tkinter library. This Project contains functionalities like&lt;/p&gt;

&lt;p&gt;Create new File&lt;br&gt;
Open new File&lt;br&gt;
Save File&lt;br&gt;
Exit Editor&lt;br&gt;
Cut, Copy and Past functionalities&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AmCIWvZV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://rrtutors.com/uploads/langpostimg/notepad-editor-with-python.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AmCIWvZV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://rrtutors.com/uploads/langpostimg/notepad-editor-with-python.JPG" alt="Python Notepad application" width="880" height="408"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How to install Tkinter library?&lt;/p&gt;

&lt;p&gt;To install Tkinter we need pre installed python, when we install python we need to check td/tk and IDLE checkbox which will install Tkinter library.&lt;/p&gt;

&lt;p&gt;If we missed it while install python we can install Tkinter separately by run the pip command.&lt;/p&gt;

&lt;p&gt;This Tkinter can be installed by pip, we need to run below command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will download and install all required packages for Tkinter&lt;/p&gt;

&lt;p&gt;Now create python project and import required packages&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt;
&lt;span class="nn"&gt;from&lt;/span&gt; &lt;span class="n"&gt;tkinter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;messagebox&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt;
&lt;span class="nn"&gt;from&lt;/span&gt; &lt;span class="n"&gt;tkinter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;filedialog&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt;


&lt;span class="nn"&gt;class&lt;/span&gt; &lt;span class="nl"&gt;Notepad:&lt;/span&gt;
    &lt;span class="n"&gt;__root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Tk&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we have imported two other packages called messagebox and filedialog&lt;/p&gt;

&lt;p&gt;MessageBox is used to show white box to write the content&lt;/p&gt;

&lt;p&gt;Filedialog is used to show dialog with options when we tap on menu options&lt;/p&gt;

&lt;p&gt;Download complete &lt;a href="https://rrtutors.com/projectsinfo/Python-project-Create-Notepad-editor-with-Python-using-Tkinter"&gt;python notepadd application project&lt;/a&gt; source code&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Tech-blogging the easy way</title>
      <author>neoan</author>
      <pubDate>Sat, 13 Nov 2021 16:19:53 +0000</pubDate>
      <link>https://dev.to/sroehrl/tech-blogging-the-easy-way-347m</link>
      <guid>https://dev.to/sroehrl/tech-blogging-the-easy-way-347m</guid>
      <description>&lt;p&gt;Lately I have seen a lot of posts here about how to set up your own blog. It's not a surprise that a regular Wordpress-installation doesn't really scream developer. On my personal blog &lt;a href="https://neoan.us/blog"&gt;neoan.us/blog&lt;/a&gt;, I use &lt;a href="https://blua.blue"&gt;blua.blue&lt;/a&gt; and if you are a follower you will notice that many of my dev.to contributions originate from there as well (whenever I want to publish to multiple sites/services). However, knowing that the PHP-crowd here is miniscule I decided to provide you with 2 repositories you can start with that do not require the use of the blua.blue-API (because they are webhook-based) and allow you to simply design your blog using the means of your choice.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Repo&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;serverless framework&lt;/td&gt;
&lt;td&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sroehrl"&gt;
        sroehrl
      &lt;/a&gt; / &lt;a href="https://github.com/sroehrl/serverless-blog"&gt;
        serverless-blog
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
blua.blue Serverless Framework Node Express API on AWS&lt;/h1&gt;
&lt;p&gt;This POC is based on the serverless node/express/api template with added support for
s3 bucket storage and rendering.&lt;/p&gt;
&lt;h2&gt;
Setup&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Create a bucket and ensure that your AWS cli AIM has the required permissions to read &amp;amp; write to this bucket.&lt;/li&gt;
&lt;li&gt;Change line 8 of handler.js accordingly: &lt;code&gt;const bucketName = 'my-article-storage-bucket'&lt;/code&gt;;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;h3&gt;
Deployment&lt;/h3&gt;
&lt;p&gt;Install dependencies with:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and then deploy with:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;serverless deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Enhance&lt;/h2&gt;
&lt;p&gt;The current setup is a POC to ease local development (when using serverless-local).
Ultimately, you may want to set up your bucket as a website and permanently render
what is now done in &lt;code&gt;app.get('/:slug?)&lt;/code&gt; to HTML files (pug.compileFile) to enjoy a static blog.&lt;/p&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sroehrl/serverless-blog"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;file-based (mono-repo node &amp;amp; PHP)&lt;/td&gt;
&lt;td&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sroehrl"&gt;
        sroehrl
      &lt;/a&gt; / &lt;a href="https://github.com/sroehrl/minimal-blog"&gt;
        minimal-blog
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
minimal-blog&lt;/h1&gt;
&lt;h2&gt;
blua.blue webhook POC&lt;/h2&gt;
&lt;p&gt;This little repo can be run either with node or PHP and serves as a proof of concept for blua.blue based blogs without using the API or SDKs.
Both the PHP-version and the node-version are based on a total of less than 75 lines of code. The PHP version is even completely free of dependencies.&lt;/p&gt;
&lt;p&gt;The goal of this project is was to create the easiest possible setup to host your own blog.&lt;/p&gt;
&lt;p&gt;See it here:
&lt;a href="https://equinox-vivacious-havarti.glitch.me/" rel="nofollow"&gt;https://equinox-vivacious-havarti.glitch.me/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
How to use&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;If you don't have an account, sign up at &lt;a href="https://blua.blue" rel="nofollow"&gt;blua.blue&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Clone, fork or download this repo and host it depending on your needs*&lt;/li&gt;
&lt;li&gt;Set up webhooks on blua.blue&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;PHP-endpoint: &lt;code&gt;https://your-site.com/receive.php&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;node-endpoint: &lt;code&gt;https://your-site.com/receive&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;*Be careful of hosting via services like heroku: many of these services delete files written to the file-system after some idle time&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;That's it. Enjoy&lt;/p&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sroehrl/minimal-blog"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-them"&gt;
  &lt;/a&gt;
  How to use them
&lt;/h2&gt;

&lt;p&gt;After deploying one of these versions, sign up with blua.blue and navigate to your profile. You will find the tab "Webhooks". With both repositories, you will want to generate a webhook to &lt;code&gt;https://your-endpoint.tld/receive&lt;/code&gt;. There is no need for a token as we check for allowed origins, but ultimately you will want to set one of your choice and then verify the source of the payload (sent through authorization header as bearer token) in order to prevent other blua.blue-users to post on your behalf.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  That's it
&lt;/h2&gt;

&lt;p&gt;Lastly, please be aware of two things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;These repos are very basic and meant to be a boilerplate rather than a final solution. I am happy to accept pull-requests&lt;/li&gt;
&lt;li&gt;Share! If you built something beautiful, let everyone know in the comments!&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>showdev</category>
    </item>
  </channel>
</rss>
