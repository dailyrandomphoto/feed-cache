<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Creating markdown blog or docs generator with js (serverless).</title>
      <author>SHUBHAM </author>
      <pubDate>Wed, 15 Dec 2021 07:55:20 +0000</pubDate>
      <link>https://dev.to/shubham_ingale/creating-markdown-blog-or-docs-generator-with-js-serverless-2e6b</link>
      <guid>https://dev.to/shubham_ingale/creating-markdown-blog-or-docs-generator-with-js-serverless-2e6b</guid>
      <description>&lt;p&gt;Hey there everyone ,&lt;br&gt;
If you've created blog on dev.to , you're might be familiar with blog generator with md.&lt;br&gt;
I'll share how you can create that type of generator with only js.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#libraries-to-use"&gt;
  &lt;/a&gt;
  libraries to use.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/showdownjs/showdown"&gt;Showdown.js&lt;/a&gt; @showdownjs&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://sgi-capp-at2.github.io/"&gt;Markdown.css by sindresorhus&lt;/a&gt; @markdown-css&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#showdownjs"&gt;
  &lt;/a&gt;
  showdown.js
&lt;/h2&gt;

&lt;p&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hbOe4h0q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/showdownjs/logo/master/dist/logo.readme.png" class="article-body-image-wrapper"&gt;&lt;img alt="showdownjs-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hbOe4h0q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/showdownjs/logo/master/dist/logo.readme.png" width="251" height="49"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Showdownjs is a library which converts markdown code into HTML code.&lt;br&gt;
From&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="gh"&gt;# header&lt;/span&gt;
&lt;span class="gs"&gt;**Bold**&lt;/span&gt;
&lt;span class="ge"&gt;_italic_&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;header&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;bold&lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;em&amp;gt;&lt;/span&gt;italic&lt;span class="nt"&gt;&amp;lt;/em&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-use-showdownjs"&gt;
  &lt;/a&gt;
  How to use showdown.js
&lt;/h3&gt;

&lt;p&gt;You should visit to &lt;a href="https://github.com/showdownjs/showdown"&gt;official docs&lt;/a&gt; for advanced level tools of library.&lt;br&gt;
I'll show you how you can convert the md into html with GitHub flavour of markdown.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;my_markdown_input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#mdinput&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;converter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;showdown&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;converter&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;converted_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;converter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;makeHtml&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;my_markdown_input&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// converted_text will be variable having html code &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#markdown-css"&gt;
  &lt;/a&gt;
  Markdown css
&lt;/h2&gt;

&lt;p&gt;The style created by sindresorhus which looks like github markdown body.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-use-markdown-css-"&gt;
  &lt;/a&gt;
  How to use markdown css ?
&lt;/h3&gt;

&lt;p&gt;The markdown css by sindresorhus is very simple to use. You just have to add classname "markdown-body" and it will convert html into GitHub like markdown styled html.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"markdown-body"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://sgi-capp-at2.github.io/blogs/Creating%20markdown%20blog%20or%20docs%20generator%20with%20js%20(serverless)./#how-to-use-markdown-css-"&gt;..Read More&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>markdown</category>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Top Reasons to Choose React as a Frontend</title>
      <author>Bhavik Sadhu</author>
      <pubDate>Wed, 15 Dec 2021 07:21:16 +0000</pubDate>
      <link>https://dev.to/bhaviksadhu/top-reasons-to-choose-react-as-a-frontend-47ml</link>
      <guid>https://dev.to/bhaviksadhu/top-reasons-to-choose-react-as-a-frontend-47ml</guid>
      <description>&lt;p&gt;Do you have a question about whether choose React for your project? Here's a brief review of the Top Reasons to Choose React as a Frontend. This is enough to make a choice.&lt;/p&gt;

&lt;p&gt;There are a lot of frameworks and libraries that may be used to develop frontend applications. Some are not excellent. &lt;a href="https://www.techavidus.com/react-js-development?utm_source=referral&amp;amp;utm_devto=devto&amp;amp;utm_campaign=content_sharing"&gt;React&lt;/a&gt; is among the most well-known and extensively utilized libraries (it's not an actual framework) for front-end development. React, among the fastest-growing and most well-known frontend library has been steadily growing in popularity in the world of developers and business owners. Due to many of its advantages, it could soon be the most popular web development tool.&lt;/p&gt;

&lt;p&gt;What are the reasons to choose React? The most important thing is when is the right time to utilize React? Let's take an overview of the benefits of React and its use cases.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-reactjs"&gt;
  &lt;/a&gt;
  What is ReactJS?
&lt;/h1&gt;

&lt;p&gt;React can be described as a declarative, efficient, and adaptable JavaScript library that is used by software developers to create user interfaces. It allows you to build a speedy simple, scalable, and simple frontend for web-based applications.&lt;/p&gt;

&lt;p&gt;The development of React becomes a strategy to problems that have been typically encountered whilst developing JavaScript applications. As applications grew in both complexity and size the issues became more frequent. The fact that React was designed and heavily utilized by Facebook to solve their own problems only adds to the library's reliability and effectiveness in tackling similar issues encountered by other projects. The React team is dedicated to making changes that are positive to ease the lives of the programmers.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-reasons-to-choose-reactjs"&gt;
  &lt;/a&gt;
  The Reasons to choose ReactJS
&lt;/h1&gt;

&lt;p&gt;If you were to ask us which front-end technology would be the most to develop software in 2021, we'd most likely say React! It's comparable to Angular with regard to speed, flexibility in development, and its popularity. Vue.js is lighter than its competitors, but it's not a huge benefit in actual use. It sounds great, however, but there may be lots greater to React beyond this!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-easy-to-learn"&gt;
  &lt;/a&gt;
  1. Easy to learn
&lt;/h2&gt;

&lt;p&gt;The reason, as compared with different famous front-end frameworks, consisting of Angular and Vue is much greater easy to learn. If technology is tough to learn, you will probably discover it tough to begin. As it is in our human nature. We tend to avoid things that are difficult to learn.&lt;/p&gt;

&lt;p&gt;Since react is a straightforward framework that is simple to learn and begin using with, big brands and large companies tend to prefer it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-rich-userinterfaces"&gt;
  &lt;/a&gt;
  2. Rich user-interfaces
&lt;/h2&gt;

&lt;p&gt;The design inside the interface for users of the application performs a vital characteristic. If the interface for users is not well-designed, it reduces the chance of an application achieving success.&lt;/p&gt;

&lt;p&gt;If your app's web interface is groovy and excellent that users love, they'll be thrilled to make use of your app. Therefore, creating excellent user interfaces is vital for business success.&lt;/p&gt;

&lt;p&gt;Thus, creating user interfaces with rich features is kind of required for an application to be able to survive and flourish.&lt;br&gt;
There's good news that React is able to create such top-quality, rich user interfaces by using its declarative components. This is the reason we are at our next step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-faster-development"&gt;
  &lt;/a&gt;
  3. Faster development
&lt;/h2&gt;

&lt;p&gt;Increase your productivity by making use of reused parts and developing tools. The efficiency of developers is crucial since if you are able to complete tasks quickly you will earn more money in a shorter time is not unusual to place to target startups and businesses.&lt;/p&gt;

&lt;p&gt;If it takes a long quantity of time to create something simple and you're losing money, it's a waste of time. However, if you can get your product out quickly, you will make money quickly and your customers will be satisfied.&lt;/p&gt;

&lt;p&gt;There are numerous tools for development available in React that can speed the process. For instance, it's a browser extension known as React Developer Tools, which will make your programming significantly simpler.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-stability-and-reliability-of-the-code"&gt;
  &lt;/a&gt;
  4. Stability and reliability of the code
&lt;/h2&gt;

&lt;p&gt;React uses the downward flow of data so that it is certain that the structure of the parent doesn't be affected by any changes in the child's structure.&lt;/p&gt;

&lt;p&gt;Therefore, when a developer modifies an object, they just need to alter its state and make the appropriate changes. In this way, only a specific component is updated.&lt;/p&gt;

&lt;p&gt;This is a way to improve the flow of data and its structure, in turn, resulting in more stability to the code and better execution of your application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-trusted-by-great-companies"&gt;
  &lt;/a&gt;
  5. Trusted by great companies
&lt;/h2&gt;

&lt;p&gt;Still, are you unsure whether you should use React instead?&lt;/p&gt;

&lt;p&gt;Take a look at some of the most inspiring instances that illustrate the power of React solutions. React is utilized by top startups and companies like Facebook, Dropbox, Khan Academy, Code Academy, Netflix, Airbnb, PayPal, Walmart, Tesla Motors, IMDb, and so on.&lt;/p&gt;

&lt;p&gt;What is the reason so many great startups and agencies use this software? An answer is truly a top-first-class tool for front-end development.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final Words
&lt;/h1&gt;

&lt;p&gt;This article will come up with the Top Reasons to Choose React as a Frontend. Like Angular, React is an excellent framework that is worth your time. However, there is a drawback with Angular that is what makes React superior in my opinion. The issue lies in the fact that Angular is difficult to master since it's not a straightforward framework. It's a complicated framework for front-end development. However, react is a user-friendly, simple technology.&lt;/p&gt;

</description>
      <category>react</category>
      <category>reactnative</category>
    </item>
    <item>
      <title>Regular Expressions in JavaScript - Day 18 of 100</title>
      <author>Arif Iqbal</author>
      <pubDate>Wed, 15 Dec 2021 07:05:03 +0000</pubDate>
      <link>https://dev.to/arifiqbal/regular-expressions-in-javascript-day-18-of-100-4o2e</link>
      <guid>https://dev.to/arifiqbal/regular-expressions-in-javascript-day-18-of-100-4o2e</guid>
      <description>&lt;p&gt;This post is a part of the &lt;a href="https://dev.to/arifiqbal/series/15795"&gt;Week X of 100DaysOfCode JavaScript Challenge&lt;/a&gt; series.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Match Whitespace:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;\s&lt;/code&gt; the lowercase &lt;code&gt;s&lt;/code&gt; can match white space and white space between other characters. It includes white space, tab, form feed, new line, carriage return and vertical tab. You can consider it equivalent to the character class &lt;code&gt;[\t\n\r\f\v]&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;whitespace. whitespace everywhere!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\s&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;will return &lt;code&gt;[" ", " "]&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Match Non-Whitespace Characters:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;\S&lt;/code&gt; the uppercase &lt;code&gt;S&lt;/code&gt; will match everything but not whitespace. It will not match tab character, newline, form feed, carriage return, and vertical tab. You can consider it an equivalent to the character class &lt;code&gt;[^\t\n\r\f\v]&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;whitespace. whitespace everywhere!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\S&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;will return &lt;code&gt;32&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Specify Upper and Lower Number of Matches:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Previously we learned how to match the letter &lt;em&gt;one or more times&lt;/em&gt; with the &lt;code&gt;+&lt;/code&gt; character and match &lt;em&gt;zero or more times&lt;/em&gt; with the asterisk &lt;code&gt;*&lt;/code&gt; characters. But sometimes you would want to specify a lower and upper bound number for the match. You do this with the help of the &lt;em&gt;quantity specifier&lt;/em&gt;. You specify the upper and lower bound numbers in the curly brackets &lt;code&gt;{}&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;aaaah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;aah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;multipleA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="se"&gt;{3,5}&lt;/span&gt;&lt;span class="sr"&gt;h/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;multipleA&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a4&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;multipleA&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Specify Only the Lower Number of Matches:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you specify only the lower bound number in the quantity specifier with the following comma and omit the upper bound number, it will mean a minimum number match.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;aaaah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;aah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;multipleA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="se"&gt;{3,}&lt;/span&gt;&lt;span class="sr"&gt;h/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// minimum three times&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;multipleA&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a4&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;multipleA&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Specify Exact Number of Matches:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you specify only one number in the curly brackets &lt;code&gt;{X}&lt;/code&gt;, only that number of times will be matched.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;haaaah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;haah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;haaah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;threeA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/ha&lt;/span&gt;&lt;span class="se"&gt;{3}&lt;/span&gt;&lt;span class="sr"&gt;h/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// minimum three times&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;threeA&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a4&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;threeA&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;threeA&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a3&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Check for All or None:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Previously we used the &lt;code&gt;?&lt;/code&gt; mark to &lt;em&gt;lazy&lt;/em&gt; match a string. Another use of this character is to make a character match optional.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/colou&lt;/span&gt;&lt;span class="se"&gt;?&lt;/span&gt;&lt;span class="sr"&gt;r/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;color&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/colou&lt;/span&gt;&lt;span class="se"&gt;?&lt;/span&gt;&lt;span class="sr"&gt;r/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;colour&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Create your own social media with JavaScript.</title>
      <author>Vik 📈</author>
      <pubDate>Wed, 15 Dec 2021 07:04:31 +0000</pubDate>
      <link>https://dev.to/heyvik/create-your-own-social-media-with-javascript-1fbc</link>
      <guid>https://dev.to/heyvik/create-your-own-social-media-with-javascript-1fbc</guid>
      <description>&lt;p&gt;Using Social media is amazing, and if you are a developer, you might have thought about making your own social media. If the answer is yes then this blog is for you.&lt;/p&gt;

&lt;p&gt;There will be a lot of skills that you will learn after completing this, like, firebase, react native, custom hooks in react native, react navigation, react-native-pages, and much much more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Table of Content&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;Create-React-App&lt;/li&gt;
&lt;li&gt;Installing Libraries&lt;/li&gt;
&lt;li&gt;Using react-navigation&lt;/li&gt;
&lt;li&gt;Adding fonts to our app&lt;/li&gt;
&lt;li&gt;Adding Firebase to our project&lt;/li&gt;
&lt;li&gt;Creating an onBoarding Screen&lt;/li&gt;
&lt;li&gt;Creating a Signup and Login Screen&lt;/li&gt;
&lt;li&gt;Create and Display tweets&lt;/li&gt;
&lt;li&gt;Profile Page with info&lt;/li&gt;
&lt;li&gt;Edit Profile&lt;/li&gt;
&lt;li&gt;Search Feature&lt;/li&gt;
&lt;li&gt;Conclusion&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#installing-libraries"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Installing Libraries:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;We will be needing some libraries/packages to complete this project, let's install it one by one. So first, what are those libraries:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;firebase &lt;/li&gt;
&lt;li&gt;react-navigation &lt;/li&gt;
&lt;li&gt;react-native-pages &lt;/li&gt;
&lt;li&gt;expo-font &lt;/li&gt;
&lt;li&gt;expo-app-loading &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So lets then install it like:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;yarn add firebase @react-navigation/native @react-navigation/native-stack @react-navigation/bottom-tabs @react-navigation/drawer react-native-safe-area-context react-native-screens react-native-pages expo-font expo-app-loading&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So these were the libraries we are going to install. You can use npm install instead of yarn add too.&lt;/p&gt;

&lt;p&gt;Using react-navigation&lt;br&gt;
React navigation is used to ( as you can see ) navigate between screens. Just like we do href in html. We will be adding Screens to react-navigation code when we make one. But first let's setup it:&lt;/p&gt;

&lt;p&gt;First let's import the stuff we need to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NavigationContainer&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@react-navigation/native&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createNativeStackNavigator&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@react-navigation/native-stack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's all the imports used to make a Stack Navigation. Now let's make it work:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Stack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createNativeStackNavigator&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;NavigationContainer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Navigator&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Screen&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Boarding&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;BoardingScreen&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Stack.Navigator&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/NavigationContainer&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will have to import the Boarding Screen to make it work. So if you run this app right now, it will cause an error. We will fix it later.&lt;/p&gt;

&lt;p&gt;That is all for this blog, if you want to create your fully function social media you can pre-order the book, right now, for only $3. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pre-order-now"&gt;
  &lt;/a&gt;
  &lt;a href="https://thevik.gumroad.com/l/your-own-twitter"&gt;Pre Order Now&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4zDqu6Le--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sy42fcdqg3k4uevkwtmg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4zDqu6Le--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sy42fcdqg3k4uevkwtmg.jpg" alt="Image description" width="880" height="616"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>reactnative</category>
    </item>
    <item>
      <title>Who is a Freelance Web Developer?</title>
      <author>Ethan Taylor</author>
      <pubDate>Wed, 15 Dec 2021 07:00:13 +0000</pubDate>
      <link>https://dev.to/ethantaylordeveloper/who-is-a-freelance-web-developer-59nf</link>
      <guid>https://dev.to/ethantaylordeveloper/who-is-a-freelance-web-developer-59nf</guid>
      <description>&lt;p&gt;At first, a web developer may appear to be someone who develops a website in a vague term. However, the web developer job description needs more understanding beyond the assumed meaning. A programmer specializing in World Web Applications based on the client-server model, using in hand expertise of HTML, CSS, JAVAScript, PHP, and many more, is termed as a Web developer. The simple website we see on the screens has hands-on expertise behind it. &lt;/p&gt;

&lt;p&gt;Majorly all the industries, namely service industry or e-commerce industry, very much rely on web development, since it caters to the need of reaching out to the customers, far and wide. Since every business is now at the click of a button, the need for the websites to be both user-friendly as well as mobile-friendly has increased. The revolutionary shift of the users from personal computers to mobile users has increased the demand for mobile UI design and app design. The process and demand both have become complex over the period. A large number of potential web developers work with Eiliana, which cater to the needs of almost every sector of the economy.&lt;/p&gt;

&lt;p&gt;Some of the core responsibilities of a web developer to ensure career growth and generate good business include:&lt;/p&gt;

&lt;p&gt;Deep knowledge and hands-on expertise rise in the field of web applications and programming languages.&lt;/p&gt;

&lt;p&gt;Strong understanding of the security principles and their e-commerce application.&lt;/p&gt;

&lt;p&gt;Regular update on changing market demands and be adjusting to it in terms of expertise needed.&lt;/p&gt;

&lt;p&gt;Deep functional knowledge of UI, cross-browser compatibility, and changing dynamics.&lt;/p&gt;

&lt;p&gt;Stress Management and compatibility in complying with the deadlines.&lt;/p&gt;

&lt;p&gt;Smart enough to apply expertise to solve technical problems.&lt;/p&gt;

&lt;p&gt;Being a web developer at Eiliana you have the complete choice of working as a freelancer.&lt;/p&gt;

&lt;p&gt;How To Become A Web Developer?&lt;/p&gt;

&lt;p&gt;Not many formal certifications are needed as a  Web Developer Prerequisite, but an in-depth and advanced understanding of the skill takes one beyond boundaries. We should be familiar with the web development jobs offered to become one. In general, there are three choices to choose &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Introduction to Data Mesh</title>
      <author>Adit Modi</author>
      <pubDate>Wed, 15 Dec 2021 06:52:31 +0000</pubDate>
      <link>https://dev.to/aws-builders/introduction-to-data-mesh-3f1b</link>
      <guid>https://dev.to/aws-builders/introduction-to-data-mesh-3f1b</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Organizations of all sizes have recognized that data is one of the key factors for increasing and sustaining innovation, and driving value for their customers and business units. &lt;/li&gt;
&lt;li&gt;They are modernizing traditional data platforms with cloud-native technologies that are highly scalable, feature-rich, and cost-effective. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;As you look to make business decisions driven by data, you can be agile and productive by adopting a mindset that delivers data products from specialized teams, rather than through a centralized data management platform that provides generalized analytics.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A centralized model simplifies staffing and training by centralizing data and technical expertise in a single place. This reduces technical debt since you are managing a single data platform, which reduces operational costs. Data platform groups, often part of central IT, are divided into teams based on the technical functions they support. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For instance, one team might own the ingestion technologies used to collect data from numerous data sources managed by other teams and lines of business (LOBs). A different team might own the data pipelines, the writing and debugging extract, transform, and load (ETL) code, and orchestrating job runs, while validating and fixing data quality issues and ensuring that data processing meets business SLAs. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;However, managing data through a central data platform can create scaling, ownership, and accountability challenges. Central teams might not understand the specific needs of a data domain, due to data types and storage, security, data catalog requirements, or the specific technologies needed for data processing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can often reduce these challenges by giving ownership and autonomy to the team who owns the data. This allows them to focus on building data products, rather than being limited to a common central data platform. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For example, make product teams responsible for ensuring that the product inventory is updated regularly with new products and changes to existing ones. They’re the domain experts of the product inventory datasets, and if a discrepancy occurs, they’re the ones who know how to fix it. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Therefore, they’re best able to implement and operate a technical solution to ingest, process, and produce the product inventory dataset. They own everything leading up to the data being consumed: they choose the technology stack, operate in the mindset of data as a product, enforce security and auditing, and provide a mechanism to expose the data to the organization in an easy-to-consume way. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This reduces overall friction for information flow in the organization, where the producer is responsible for the datasets they produce and is accountable to the consumer based on the advertised SLAs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This data-as-a-product paradigm is similar to the operating model that Amazon uses for building services. Service teams build their services, expose APIs with advertised SLAs, operate their services, and own the end-to-end customer experience. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This is distinct from the model where one team builds the software, and a different team operates it. The end-to-end ownership model has allowed us to implement faster, with higher efficiency, and to quickly scale to meet customers’ use cases. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We aren’t limited by centralized teams and their ability to scale to meet the demands of the business. Each service we build relies on other services that provide the building blocks. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The analogy to this approach in the data world would be the data producers owning the end-to-end implementation and serving of data products, using the technologies they selected based on their unique needs. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UJZqRPL5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lao5jezks12kf7hla1gg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UJZqRPL5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lao5jezks12kf7hla1gg.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Building an Analytics Application on AWS&lt;/strong&gt; is a Series containing different articles that cover the key scenarios that are common in many analytics applications and how they influence the design and architecture of your analytics environment in AWS. These series present the assumptions made for each of these scenarios, the common drivers for the design, and a reference architecture for how these scenarios should be implemented.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;people have been talking about the data-driven organization model for years, which consists of data producers and consumers. This model is similar to those used by some of early adopting consumers and has been described by "Zhamak Dehghani of Thoughtworks", who coined the term data mesh.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#characteristics"&gt;
  &lt;/a&gt;
  Characteristics
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Data mesh is a pattern for defining how organizations can organize around data domains with a focus on delivering data as a product. However, it might not be the right pattern for every customer.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A lake house approach and the data lake architecture provide technical guidance and solutions for building a modern data platform on AWS.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The lake house approach with a foundational data lake serves as a repeatable blueprint for implementing data domains and products in a scalable way.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The manner in which you use AWS analytics services in a data mesh pattern might change over time, but remains consistent with the technological recommendations and best practices for each service.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The following are data mesh design goals:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Data as a product&lt;/strong&gt; – Each organizational domain owns their data end to end. They’re responsible for building, operating, serving, and resolving any issues arising from the use of their data. Data accuracy and accountability lies with the data owner within the domain.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Federated data governance&lt;/strong&gt; – Data governance helps ensure that data is secure, accurate, and not misused. The technical implementation of data governance, such as collecting lineage, validating data quality, encrypting data at rest and in transit, and enforcing appropriate access controls, can be managed by each of the data domains. However, central data discovery, reporting, and auditing is needed to make it easy for users to find data, and for auditors to verify compliance.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Common access&lt;/strong&gt; – Data must be easily consumable by subject matter experts, such as data analysts and data scientists, and by purpose-built analytics and machine learning (ML) services, such as Amazon Athena, Amazon Redshift, and Amazon SageMaker. This requires data domains to expose a set of interfaces that make data consumable while enforcing appropriate access controls and audit tracking.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;The following are user experience considerations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Data teams own their information lifecycle, from the application that creates the original data, to the analytics systems that extract and create business reports and predictions. Through this lifecycle, they own the data model, and determine which datasets are suitable for publication to consumers.&lt;/li&gt;
&lt;li&gt;Data domain producers expose datasets to the rest of the organization by registering them with a central catalog. They can choose what to share, for how long, and how consumers can interact with them. They’re also responsible for maintaining the data and making sure it’s accurate and current.&lt;/li&gt;
&lt;li&gt;Data domain consumers and individual users should be given access to data through a supported interface, such as a data API, that helps ensure consistent performance, tracking, and access controls.&lt;/li&gt;
&lt;li&gt;All data assets are easily discoverable from a single central data catalog. The data catalog contains the datasets registered by data domain producers, including supporting metadata, such as lineage, data quality metrics, ownership information, and business context.&lt;/li&gt;
&lt;li&gt;All actions taken with data, usage patterns, data transformations, and data classifications should be accessible through a single, central place. Data owners, administrators, and auditors should be able to inspect an organization’s data compliance posture in a single place.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Let’s start with a high-level reference design that builds on top of the data mesh pattern. It further separates consumers, producers, and central governance to highlight the key aspects discussed previously. However, note that a data domain, in a data mesh pattern, might represent a data consumer, a data producer, or both.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The AWS Lake House architecture relies on an AWS Glue and AWS Lake Formation Data Catalog for users to access the objects as tables. The users are entitled to these tables using Lake Formation, which is one per AWS account. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Each Lake Formation account has its own Data Catalog, but storing the metadata on the data objects on multiple accounts across various catalogs makes it hard for the consumers to select the table. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A consumer has to log into individual accounts to see the objects, assuming that the consumer knows exactly where to look. A central catalog also makes it easy to feed into a central business catalog and allows easier auditing of grants or revokes (it just makes it easier; it does not provide a single store of audits). Therefore, a central Data Catalog is recommended.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The metadata being on the central catalog does not make the tables in individual lakes accessible to all the consumers automatically. The actual entitlement on tables is individually granted and revoked by the application owner.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This allowss the data mesh objective of the data strategy where the data is stored in multiple individually managed lakes, as opposed to a single central lake, while being accessible, provided properly entitled, to all the consumers. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The role of the Data Catalog is of paramount importance here as the consumers can locate the proper storage of the data, they are interested in.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Term&lt;/th&gt;
&lt;th&gt;Definition&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Data mesh&lt;/td&gt;
&lt;td&gt;Data is stored in multiple data stores, not in one single store. Consumers can access them as needed, assuming they are properly entitled.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AWS Lake Formation&lt;/td&gt;
&lt;td&gt;A service that makes the data available as tables. Allows the owner of that table to give permissions to consumers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AWS Glue Data Catalog (Data Catalog)&lt;/td&gt;
&lt;td&gt;A data store containing metadata about the data, for example, table name, the columns in them, and user-defined tags. It does not contain actual data. This allows a consumer to know what to select.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Amazon Athena&lt;/td&gt;
&lt;td&gt;A managed service that allows a user to enter a SQL query to select data. It in turn fetches the data and presents it in a tabular format. Athena needs a Data Catalog to let the consumer know the columns to select.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Resource link&lt;/td&gt;
&lt;td&gt;A link that extends from one catalog to another and allows the consumers in the remote catalog to view and query the tables in the remote database as if the tables were in their local database. There are two types of resource links: for a specific table, and for an entire database.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#reference-architecture"&gt;
  &lt;/a&gt;
  Reference architecture
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Here is a pattern for a single producer account, a single consumer account, and a central Lake Formation account. Each account has an AWS Glue Data Catalog. &lt;/li&gt;
&lt;li&gt;The central account's Data Catalog is considered the main catalog. Resource links are established to the producer and consumer accounts. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;This way, when the central account changes something, both accounts get the schema updates. The consumers selecting data will always see the most recent metadata.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The producer account always has the authority to grant or revoke the permissions on the tables in its Data Catalog. The central Lake Formation account is merely a holder of metadata, which sends it to all the consumer accounts which has a subscription via a resource link. Under no circumstances the central Lake Formation account can grant on its own.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With the concept in place, let’s look at three design patterns for deploying a data mesh architecture.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hWRN-mn1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h336eb7blyqv25ixxjqx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hWRN-mn1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h336eb7blyqv25ixxjqx.png" alt="Image description" width="800" height="459"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Data mesh reference architecture&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Workflow from producer to consumer:&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Data source locations hosted by the producer are created within the producer’s AWS Glue Data Catalog and registered with Lake Formation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When a dataset is presented as a product, producers create Lake Formation Data Catalog entities (database, table, columns, attributes) within the central governance account. This makes it easy to find and discover catalogs across consumers. However, this doesn’t grant any permission rights to catalogs or data to all accounts or consumers, and all grants are be authorized by the producer.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The central Lake Formation Data Catalog shares the Data Catalog resources back to the producer account with required permissions via Lake Formation resource links to metadata databases and tables.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lake Formation permissions are granted in the central account to producer role personas (such as the data engineer role) to manage schema changes and perform data transformations (alter, delete, update) on the central Data Catalog.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Producers accept the resource share from the central governance account so they can make changes to the schema at a later time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Data changes made within the producer account are automatically propagated into the central governance copy of the catalog.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Based on a consumer access request, and the need to make data visible in the consumer’s AWS Glue Data Catalog, the central account owner grants Lake Formation permissions to a consumer account based on direct entity sharing, or based on tag-based access controls, which can be used to administer access via controls like data classification, cost center, or environment.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lake Formation in the consumer account can define access permissions on these datasets for local users to consume. Users in the consumer account, like data analysts and data scientists, can query data using their chosen tool such as Athena and Amazon Redshift.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In some cases, multiple catalogs are necessary and there is no other alternative. For example, if data is sent to both Regions, there will be two Data Catalogs that need to be maintained.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Option 1: Central data governance model&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here is a more practical model with multiple producers and consumers accounts. There is still a single central data governance account, which has resource links to all the other accounts. Note that we didn't deliberately name them with specific lines of business (LOBs), since this model applies to any LOB and any number of lakes. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Roles of various accounts&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here are the roles of the various types of accounts.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Account&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Producer account&lt;/td&gt;
&lt;td&gt;* Allows data producers to write data into their respective S3 buckets.* Does not allow interactive access to S3 buckets or objects in them.* Allows only production ETL jobs to perform transformation, movement, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Consumer account&lt;/td&gt;
&lt;td&gt;* Allows data consumption through Athena, Redshift Spectrum, and web apps.* Only cataloged items can be queried, not all objects in the bucket.* Isolates the data changes (done by producer account) from data access (consumer accounts).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Central account&lt;/td&gt;
&lt;td&gt;* This is a central catalog of all metadata. If additional consumer accounts are created, the metadata is replicated from this central account.* Since all metadata is in one place, it allows easier auditing of actions like grants and revokes on tables. The actual auditing is still decentralized but a central account makes the reporting easier.* Consumer accounts need to access the metadata using resource links to this central catalog only.* Does not contain any actual data. Only logs are stored here.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Notes&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;These are just roles and they are not mutually exclusive. It's possible to have one AWS account with both roles of producer and consumer. A batch serving account is such an example.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;These accounts are Region-specific and are all in the same Region. They are not across Regions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;These accounts interact as shown in the following diagrams.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pIzVdtqe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e7uva0hl8xtb680wijm0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pIzVdtqe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e7uva0hl8xtb680wijm0.png" alt="Image description" width="800" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Central data governance model&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The producers can onboard their dataset table names, but the tables are completely independent and federated in central data governance account.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Advantages&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;All datasets are available in one place for querying.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Entitlements become easier.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A single database to database resource link is enough (assuming database-to-database resource links are allowed).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Single source of data truth – one-way sharing of catalog across various organizations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The LOBs still have the choice to define metadata, schema evolution and manage permissions. The central Lake Formation account does not enforce anything on them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Allows centralized auditing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Allows local sandbox accounts for consumers, which is useful in cases such as model training and serving.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Disadvantages&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;More complex for consumer analysts than using one data warehouse.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Required skills are more aligned to security and governance than analytics.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Technology solution – may not solve issues created by misaligned LOBs incentives.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Option 2: Federated Line of Business (LOB) central governance model&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In this model, each LOB maintains an independent central Lake Formation account, which eases the use of centralized auditing in that LOB. Consumer accounts can see the data from producer accounts in the same LOB only. For accessing the data across LOBs, they need to establish the resource links to the appropriate catalog.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ghXUz_x6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/laiocn1pyjjh0zcf15t3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ghXUz_x6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/laiocn1pyjjh0zcf15t3.png" alt="Image description" width="800" height="498"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Federated LOB central governance model&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Advantages&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Each LOB still maintains their own Lake Formation central account and access control.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The blast radius in case of non–availability of a single Lake Formation account is reduced.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Disadvantages&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Centralized metadata is impossible since there is no central account. Audits from each central account need to be pulled and consolidated.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Resource links need to be created across multiple catalogs. This makes it difficult to maintain the links, especially as the number of lakes grows.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Option 3: Completely federated data governance model&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In this model, there is no central Lake Formation. Each producer account maintains their own Data Catalog and each consumer accesses the Data Catalog via a resource link.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jUNAHs-U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v8e0gtq78108g3sud3ak.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jUNAHs-U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v8e0gtq78108g3sud3ak.png" alt="Image description" width="800" height="459"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Completely federated data governance model&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Advantages&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;There is complete separation among the Lake Formation accounts.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Local queries go to the local Lake Formation Data Catalog. They don't need the trip to the central Lake Formation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Any operator error that deletes a single Lake Formation account will not affect anything else, even inside the same LOB.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Disadvantages&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Entitlements will need to be distributed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Multiple resource links need to be created and maintained, which quickly becomes a burden in the data organization scale.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When data from a central business catalog is replicated over to the other Lake Formation catalogs, all those Lake Formation catalogs need to be updated individually.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Hope this guide gives you an Introduction to Data Mesh, explains the Characteristics and Reference Architecture for Data Mesh.&lt;/p&gt;

&lt;p&gt;Let me know your thoughts in the comment section 👇&lt;br&gt;
And if you haven't yet, make sure to follow me on below handles:&lt;/p&gt;

&lt;p&gt;👋 &lt;strong&gt;connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🤓 &lt;strong&gt;connect with me on &lt;a href="https://twitter.com/adi_12_modi"&gt;Twitter&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🐱‍💻 &lt;strong&gt;follow me on &lt;a href="https://github.com/AditModi"&gt;github&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
✍️ &lt;strong&gt;Do Checkout &lt;a href="https://aditmodi.hashnode.dev"&gt;my blogs&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Like, share and follow me 🚀 for more content.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/wellarchitected/latest/analytics-lens/data-mesh.html"&gt;Reference Guide&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>datascience</category>
      <category>cloud</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Weekly web development resources #100</title>
      <author>Vincent Will</author>
      <pubDate>Wed, 15 Dec 2021 06:50:21 +0000</pubDate>
      <link>https://dev.to/vincenius/weekly-web-development-resources-100-1ep9</link>
      <guid>https://dev.to/vincenius/weekly-web-development-resources-100-1ep9</guid>
      <description>

&lt;h2&gt;
  &lt;a href="#floating-ui"&gt;
  &lt;/a&gt;
  &lt;a href="https://floating-ui.com/"&gt;Floating UI&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://floating-ui.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ljlWGxy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/100/floatingui.jpg" alt="Floating UI" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A library to position all types of floating elements, like tooltips, popovers, dropdowns and more.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#deta"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.deta.sh/"&gt;Deta&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.deta.sh/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tP1b4cxF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/100/deta.jpg" alt="Deta" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A free and developer friendly cloud platform.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#dracula"&gt;
  &lt;/a&gt;
  &lt;a href="https://draculatheme.com/"&gt;Dracula&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://draculatheme.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hXwf_CaW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/100/dracula.jpg" alt="Dracula" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A dark color scheme for 227+ code editors and terminal emulators.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#web-browser-engineering"&gt;
  &lt;/a&gt;
  &lt;a href="https://browser.engineering/"&gt;Web Browser Engineering&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://browser.engineering/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DKfPzwRL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/100/web-browser.jpg" alt="Web Browser Engineering" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A book that explains how to build a basic but complete web browser.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#superseo-tips"&gt;
  &lt;/a&gt;
  &lt;a href="https://superseo.tips/"&gt; SuperSEO Tips&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://superseo.tips/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WROCOjwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/100/superseotips.jpg" alt=" SuperSEO Tips" width="880" height="462"&gt;&lt;/a&gt;&lt;br&gt;
SEO Tips that will help you rank higher and drive more organic traffic.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#defensive-css"&gt;
  &lt;/a&gt;
  &lt;a href="https://ishadeed.com/article/defensive-css/"&gt;Defensive CSS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://ishadeed.com/article/defensive-css/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wVd_Bm-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/100/css.jpg" alt="Defensive CSS" width="880" height="440"&gt;&lt;/a&gt;&lt;br&gt;
A list of defensive CSS techniques to avoid potential future issues.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ublacklist"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/iorate/uBlacklist"&gt;uBlacklist&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/iorate/uBlacklist"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CFQHa4iZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/100/uBlacklist.jpg" alt="uBlacklist" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A browser extension prevents blacklisted sites from appearing in Google search results.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ffflux"&gt;
  &lt;/a&gt;
  &lt;a href="https://fffuel.co/ffflux/"&gt;ffflux&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://fffuel.co/ffflux/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--45to0y3a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/100/ffflux.jpg" alt="ffflux" width="880" height="440"&gt;&lt;/a&gt;&lt;br&gt;
A SVG generator for fluid gradient backgrounds.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#remix"&gt;
  &lt;/a&gt;
  &lt;a href="https://remix.run/"&gt;Remix&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://remix.run/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yuoq57q1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/100/remix.jpg" alt="Remix" width="880" height="460"&gt;&lt;/a&gt;&lt;br&gt;
A framework for building better websites using modern web standards and best practices.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-2021-web-almanac"&gt;
  &lt;/a&gt;
  &lt;a href="https://almanac.httparchive.org/en/2021/"&gt;The 2021 Web Almanac&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://almanac.httparchive.org/en/2021/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jR-M8qKU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/100/almanac.jpg" alt="The 2021 Web Almanac" width="880" height="440"&gt;&lt;/a&gt;&lt;br&gt;
HTTP Archive’s annual state of the web report.&lt;/p&gt;




&lt;p&gt;To see all the weeklies check: &lt;a href="https://wweb.dev/weekly"&gt;wweb.dev/weekly&lt;/a&gt;&lt;/p&gt;

</description>
      <category>weekly</category>
      <category>webdev</category>
    </item>
    <item>
      <title>what algorithm do you use to store your passwords?</title>
      <author>ManuTheCoder</author>
      <pubDate>Wed, 15 Dec 2021 06:48:38 +0000</pubDate>
      <link>https://dev.to/manuthecoder/what-algorithm-do-you-use-to-store-your-passwords-5ci9</link>
      <guid>https://dev.to/manuthecoder/what-algorithm-do-you-use-to-store-your-passwords-5ci9</guid>
      <description>&lt;p&gt;Yes, technically, you should be using Argon2 or Bcrypt or PBKDF2.&lt;/p&gt;

&lt;p&gt;Argon2 is actually really secure. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;​Argon2 is modern ASIC-resistant and GPU-resistant secure key derivation function. It has better password cracking resistance (when configured correctly) than PBKDF2, Bcrypt and Scrypt (for similar configuration parameters for CPU and RAM usage).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If anyone here uses md5, sha512, sha256, or any weird hashing algorithms, I'll be upset.&lt;/p&gt;

&lt;p&gt;This was me when i started PHP:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;md5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;md5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;md5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;md5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;]))));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The correct way:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;password_hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"password"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="no"&gt;PASSWORD_ARGON2I&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>discuss</category>
    </item>
    <item>
      <title>Java/ Get Cell Values by Cell Names in Excel</title>
      <author>carlwils</author>
      <pubDate>Wed, 15 Dec 2021 06:42:26 +0000</pubDate>
      <link>https://dev.to/carlwils/java-get-cell-values-by-cell-names-in-excel-1m3h</link>
      <guid>https://dev.to/carlwils/java-get-cell-values-by-cell-names-in-excel-1m3h</guid>
      <description>&lt;p&gt;When manipulating an Excel document, we can extract cell values by simply copying and pasting. Alternatively, we can also obtain it programmatically in Java application, which can greatly save time and improve efficiency. In this tutorial, you will learn how to extract the value of a specified cell by its name using a free Java API.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-the-free-api-2-method"&gt;
  &lt;/a&gt;
  Install the free API (2 Method)
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1#&lt;/strong&gt; Download the &lt;a href="https://www.e-iceblue.com/Download/xls-for-java-free.html"&gt;free API (Free Spire.XLS for Java)&lt;/a&gt; and unzip it, then add the Spire.Xls.jar file to your project as dependency.&lt;br&gt;
&lt;strong&gt;2#&lt;/strong&gt; Directly add the jar dependency to maven project by adding the following configurations to the pom.xml.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;repositories&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;repository&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;id&amp;gt;&lt;/span&gt;com.e-iceblue&lt;span class="nt"&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;e-iceblue&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;url&amp;gt;&lt;/span&gt;http://repo.e iceblue.com/nexus/content/groups/public/&lt;span class="nt"&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/repository&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/repositories&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;e-iceblue&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spire.xls.free&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.9.1&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#get-cell-values-by-cell-names-in-excel"&gt;
  &lt;/a&gt;
  Get Cell Values by Cell Names in Excel
&lt;/h3&gt;

&lt;p&gt;The detailed steps and complete code are as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a &lt;strong&gt;Workbook&lt;/strong&gt; instance.&lt;/li&gt;
&lt;li&gt;Load an Excel sample document using &lt;strong&gt;Workbook.loadFromFile()&lt;/strong&gt; method.&lt;/li&gt;
&lt;li&gt;Get a specified worksheet using &lt;strong&gt;Workbook.getWorksheets().get()&lt;/strong&gt; method.&lt;/li&gt;
&lt;li&gt;Get a specific cell by its name using &lt;strong&gt;Worksheet.getRange().get()&lt;/strong&gt; method.&lt;/li&gt;
&lt;li&gt;Create a &lt;strong&gt;StringBulider&lt;/strong&gt; instance.&lt;/li&gt;
&lt;li&gt;Get the cell value using &lt;strong&gt;CellRange.getValue()&lt;/strong&gt; method, and then append the value to the StringBuilder instance using &lt;strong&gt;StringBuilder.append()&lt;/strong&gt; method.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.spire.xls.*&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;GetCellValue&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//Create a Workbook instance&lt;/span&gt;
        &lt;span class="nc"&gt;Workbook&lt;/span&gt; &lt;span class="n"&gt;workbook&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Workbook&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

        &lt;span class="c1"&gt;//Load an Excel sample document&lt;/span&gt;
        &lt;span class="n"&gt;workbook&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;loadFromFile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"member.xlsx"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;//Get the first worksheet&lt;/span&gt;
        &lt;span class="nc"&gt;Worksheet&lt;/span&gt; &lt;span class="n"&gt;sheet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;workbook&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getWorksheets&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;//Get the specified cell by its name&lt;/span&gt;
        &lt;span class="nc"&gt;CellRange&lt;/span&gt; &lt;span class="n"&gt;cell&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sheet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getRange&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"C3"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;//Create a StringBuilder instance&lt;/span&gt;
        &lt;span class="nc"&gt;StringBuilder&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;StringBuilder&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

        &lt;span class="c1"&gt;//Get value of the cell "D6" &lt;/span&gt;
        &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;append&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"The value of cell C3 is: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getValue&lt;/span&gt;&lt;span class="o"&gt;()+&lt;/span&gt;&lt;span class="s"&gt;"\n"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3djNSriD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0i31iekog9ow7z7p73p.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3djNSriD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0i31iekog9ow7z7p73p.jpg" alt="GetCellValue" width="504" height="616"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>excel</category>
      <category>programming</category>
      <category>cell</category>
    </item>
    <item>
      <title>Advent of PBT 2021 - Day 15 - Solution</title>
      <author>Nicolas DUBIEN</author>
      <pubDate>Wed, 15 Dec 2021 06:24:11 +0000</pubDate>
      <link>https://dev.to/dubzzz/advent-of-pbt-2021-day-15-solution-5ako</link>
      <guid>https://dev.to/dubzzz/advent-of-pbt-2021-day-15-solution-5ako</guid>
      <description>&lt;p&gt;Our algorithm was: &lt;strong&gt;racePodium&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://dev.to/dubzzz/advent-of-pbt-2021-day-15-3bd"&gt;Go to the subject itself for more details&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CodeSandbox with a possible set of properties you may have come with: &lt;a href="https://codesandbox.io/s/advent-of-pbt-day-15-solution-e328q?file=/src/index.spec.ts&amp;amp;previewwindow=tests"&gt;https://codesandbox.io/s/advent-of-pbt-day-15-solution-e328q?file=/src/index.spec.ts&amp;amp;previewwindow=tests&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#property-1-should-predict-the-right-podium"&gt;
  &lt;/a&gt;
  Property 1: should predict the right podium
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;for any candidates&lt;br&gt;
it should predict the right podium&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Written with fast-check:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should predict the right podium&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nat&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;minLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;maxLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;speeds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Arrange&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;compareParticipants&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;pa&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;pb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;speeds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;pa&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;speeds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;pb&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;speeds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;pb&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;speeds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;pa&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
          &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;pa&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;pb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;runRace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="na"&gt;participants&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;RaceParticipants&lt;/span&gt;
        &lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;RaceParticipants&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;participants&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;compareParticipants&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="c1"&gt;// Act&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;podium&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;racePodium&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;runRace&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;// Assert&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rankedParticipants&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
          &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;compareParticipants&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expectedPodium&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rankedParticipants&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;podium&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expectedPodium&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While this property ensures that we always compute the right podium it does not make sure that we do it in an efficient way as it never checks if we make unneeded races.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#property-2-should-insert-all-the-selected-tabs-before-the-move-position"&gt;
  &lt;/a&gt;
  Property 2: should insert all the selected tabs before the move position
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;for any candidates&lt;br&gt;
it should at most do 7 races&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Written with fast-check:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should never do more than 7 races&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nat&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;minLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;maxLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;speeds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Arrange&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;compareParticipants&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;pa&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;pb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;speeds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;pa&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;speeds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;pb&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;speeds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;pb&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;speeds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;pa&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
          &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;pa&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;pb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;runRace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;jest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="na"&gt;participants&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;RaceParticipants&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;RaceParticipants&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;participants&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;compareParticipants&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;// Act&lt;/span&gt;
        &lt;span class="nx"&gt;racePodium&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;runRace&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;// Assert&lt;/span&gt;
        &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;runRace&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mock&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toBeLessThanOrEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One of the key characteristics of this problem is that we have a known upper bound for the number of races. Requesting for more than 7 races means that we planned our races in a sub-optimal way leading for extra races to be executed.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://dev.to/dubzzz/advent-of-pbt-2021-13ee"&gt;Back to "Advent of PBT 2021"&lt;/a&gt; to see topics covered during the other days and their solutions.&lt;/p&gt;

&lt;p&gt;More about this serie on &lt;a href="https://twitter.com/ndubien"&gt;@ndubien&lt;/a&gt; or with the hashtag &lt;a href="https://twitter.com/search?q=%23AdventOfPBT"&gt;#AdventOfPBT&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>adventofpbt</category>
      <category>testing</category>
      <category>code</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Advent of PBT 2021 - Day 15</title>
      <author>Nicolas DUBIEN</author>
      <pubDate>Wed, 15 Dec 2021 06:23:29 +0000</pubDate>
      <link>https://dev.to/dubzzz/advent-of-pbt-2021-day-15-3bd</link>
      <guid>https://dev.to/dubzzz/advent-of-pbt-2021-day-15-3bd</guid>
      <description>&lt;p&gt;Our algorithm today is: &lt;strong&gt;racePodium&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;It comes with the following documentation and prototype:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;RaceParticipants&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * 25 Horses Puzzle
 * &amp;gt;  Let’s say that you have 25 horses, and you want to pick the
 * &amp;gt;  fastest 3 horses out of those 25. In each race, only 5
 * &amp;gt;  horses can run at the same time because there are only 5
 * &amp;gt;  tracks. What is the minimum number of races required to find
 * &amp;gt;  the 3 fastest horses without using a stopwatch?
 *
 * Find the podium!
 * See https://matt-croak.medium.com/google-interview-25-horses-c982d0a9b3af for more details.
 *
 * @param runRace - Run a race with the received participants.
 * Outputs the final ranking. In case of equality the participant
 * with the smallest id wins.
 *
 * @returns
 * Ordered top three.
 */&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;racePodium&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;runRace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;participants&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;RaceParticipants&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;RaceParticipants&lt;/span&gt;
&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;More details on this subject at: &lt;a href="https://matt-croak.medium.com/google-interview-25-horses-c982d0a9b3af"&gt;https://matt-croak.medium.com/google-interview-25-horses-c982d0a9b3af&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We already wrote some examples based tests for it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should find the right podium for a given race&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Arrange&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;speeds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;4&lt;/span&gt;
  &lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;compareParticipants&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;pa&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;pb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;speeds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;pa&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;speeds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;pb&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;speeds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;pb&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;speeds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;pa&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;pa&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;pb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;runRace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="na"&gt;participants&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;RaceParticipants&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;RaceParticipants&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;participants&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;compareParticipants&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="c1"&gt;// Act&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;podium&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;racePodium&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;runRace&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// Assert&lt;/span&gt;
  &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;podium&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toEqual&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;How would you cover it with Property Based Tests?&lt;/p&gt;

&lt;p&gt;In order to ease your task we provide you with an already setup CodeSandbox, with examples based tests already written and a possible implementation of the algorithm: &lt;a href="https://codesandbox.io/s/advent-of-pbt-day-15-xvst7?file=/src/index.spec.ts&amp;amp;previewwindow=tests"&gt;https://codesandbox.io/s/advent-of-pbt-day-15-xvst7?file=/src/index.spec.ts&amp;amp;previewwindow=tests&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You wanna see the solution? Here is the set of properties I came with to cover today's algorithm: &lt;a href="https://dev.to/dubzzz/advent-of-pbt-2021-day-15-solution-5ako"&gt;https://dev.to/dubzzz/advent-of-pbt-2021-day-15-solution-5ako&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://dev.to/dubzzz/advent-of-pbt-2021-13ee"&gt;Back to "Advent of PBT 2021"&lt;/a&gt; to see topics covered during the other days and their solutions.&lt;/p&gt;

&lt;p&gt;More about this serie on &lt;a href="https://twitter.com/ndubien"&gt;@ndubien&lt;/a&gt; or with the hashtag &lt;a href="https://twitter.com/search?q=%23AdventOfPBT"&gt;#AdventOfPBT&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>adventofpbt</category>
      <category>testing</category>
      <category>code</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Make Cloud Storage Objects Publicly Accessible</title>
      <author>Dhruv Rajkotia</author>
      <pubDate>Wed, 15 Dec 2021 06:17:33 +0000</pubDate>
      <link>https://dev.to/dhruv_rajkotia/make-cloud-storage-objects-publicly-accessible-186o</link>
      <guid>https://dev.to/dhruv_rajkotia/make-cloud-storage-objects-publicly-accessible-186o</guid>
      <description>&lt;p&gt;Recently, I'm working on the website development and I wanted to store some of my images in the cloud so that I can easily access those images using the public link.😄&lt;/p&gt;

&lt;p&gt;So I thought🤔 to go with the google cloud services for the same, But by default the public access of the GCP storage objects is disabled in the Cloud Storage services. To access using the public URL we need to perform some steps. So today we are going to discuss about the same like how we can enabled the public access URL for cloud storage objects.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Step 1: Create GCP storage bucket&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;First of all go to &lt;a href="https://console.cloud.google.com/"&gt;https://console.cloud.google.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Search Cloud storage and select the service from suggestions&lt;/li&gt;
&lt;li&gt;Click on the Create Bucket option
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YhE0tQ4B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kyos732z3mr2huyiapci.png" alt="Image description" width="880" height="434"&gt; &lt;/li&gt;
&lt;li&gt;Provide name of your bucket
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wX1ERnwY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o161dx1h1266c1i8xluu.png" alt="Image description" width="880" height="434"&gt; &lt;/li&gt;
&lt;li&gt;Click Continue and select the region and location based on your requirement. For me It's Multi-region &amp;amp; Asia&lt;/li&gt;
&lt;li&gt;Then Click continue and select the default storage class for your data. I'll choose standard as I need the frequent access to my data.&lt;/li&gt;
&lt;li&gt;For the next step we need to choose how to control access to objects option which is basically an access mechanism for the bucket's object.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;We have 2 options:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Uniform: Means that access mechanism will be at the bucket level so all the objects of the bucket will have a same access mechanism&lt;/li&gt;
&lt;li&gt;Fine-grained: Here we can manage access at the object level so if we have a requirements like some object can be accessible and some of them are not then we can select this one.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;I'll choose the first option as I want the access management at the bucket level so I can easily manage of my all the objects access management. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Last step for the bucket creation is Choose how to protect object data. Let's keep it as a none for now as we don't have any specific requirement regarding the protect object data. &lt;/li&gt;
&lt;li&gt;Click on the create button, So now your bucket will be created.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Step 2: Upload the objects/data that you want to access publicly&lt;br&gt;
Now the next steps is to upload the objects/data. So that we can make it public and use it further in our applications/website based on our requirements. &lt;/p&gt;

&lt;p&gt;Step 3: Check the object configurations&lt;br&gt;
Now let's first check the object configuration and check how we can identify that the object is publicly available or not. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When you click on the object configuration then you may find the below screen. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rW2RJSCx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85xrw9bl3yfq1rjwe8t7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rW2RJSCx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85xrw9bl3yfq1rjwe8t7.png" alt="Image description" width="880" height="431"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here if you check &lt;strong&gt;Public URL&lt;/strong&gt; option, which has &lt;strong&gt;Not applicable&lt;/strong&gt; as a value. So it means that this object can only be access by those users who has the access to the cloud bucket which you can check on IAM. So this object will not be publicly accessible. So Now let's move to the final step for how we can make that object publicly accessible. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Step 4: Make Object publicly accessible&lt;br&gt;
Now let's go to the cloud bucket main page. Click on the browser in the left panel of the GCP console and select the bucket that you have created. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You probably on the below screen. (May be our bucket name and regions will be different 😀) &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1DM1KW1F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ceti9srdayej3nulcoyp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1DM1KW1F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ceti9srdayej3nulcoyp.png" alt="Image description" width="880" height="418"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's go to the &lt;strong&gt;Permission&lt;/strong&gt; tab. Click on the Add permission button.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2k3ddm90--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/han4hludyh6xi1h7he2m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2k3ddm90--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/han4hludyh6xi1h7he2m.png" alt="Image description" width="880" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Provide New principals as a &lt;strong&gt;allUsers&lt;/strong&gt; and Role as a "Storage Legacy Object Reader" &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RPeearj6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iimcljrxs7r3c3tapszh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RPeearj6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iimcljrxs7r3c3tapszh.png" alt="Image description" width="880" height="442"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Click on the Save button which leads to open the new popup for confirmation. Select the &lt;strong&gt;Allow Public Access&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Congratulations, now you have enabled the public access to your buckets which means that all the objects in that bucket can be publicly accessible.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Step 5: Test the accessibility of the Object&lt;br&gt;
Now let's go to the object configuration and check the public URL field. Now we have a link associate with the public URL field which is our publicly accessible link. Using that link we can able to access the object publicly. 🤟&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z1U82dFt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pzf1ayhppu3dp4bd9zmr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z1U82dFt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pzf1ayhppu3dp4bd9zmr.png" alt="Image description" width="880" height="456"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it. Congratulations now you know that how to make cloud storage objects publicly accessible.&lt;/p&gt;

&lt;p&gt;Hope you liked it 🤞. Please &lt;a href="https://twitter.com/dhruv_rajkotia"&gt;Follow&lt;/a&gt; me on twitter for more updates regarding my blogs. Have a great day :)😉.&lt;/p&gt;

</description>
      <category>cloudskills</category>
      <category>cloud</category>
      <category>gcp</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
