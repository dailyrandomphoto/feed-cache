<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Building an internal dashboard with Retool and Cube</title>
      <author>Adnan Rahiƒá</author>
      <pubDate>Tue, 16 Nov 2021 15:13:10 +0000</pubDate>
      <link>https://dev.to/cubejs/building-an-internal-dashboard-with-retool-and-cube-1g4c</link>
      <guid>https://dev.to/cubejs/building-an-internal-dashboard-with-retool-and-cube-1g4c</guid>
      <description>&lt;p&gt;Have you ever been asked to build a metrics dashboard for displaying internal performance metrics like HTTP response times? Maybe even showing metrics for something business-related like new users visiting a landing page every day?&lt;/p&gt;

&lt;p&gt;Don't you love it!? üòï&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4AaKe2gE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/5ce0a309-ee49-422c-b990-3368d93d0474.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4AaKe2gE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/5ce0a309-ee49-422c-b990-3368d93d0474.png" alt="iron-e.png" width="588" height="441"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Excuse my irony, but building actionable graphs and charts is not easy. At Cube, we tried making it easier for you by gathering all the &lt;a href="https://awesome.cube.dev/"&gt;best data visualization tools in one place&lt;/a&gt;. However, this still means you need to choose a tool and spend hours writing code.&lt;/p&gt;

&lt;p&gt;Using low-code solutions to build internal tools and metrics dashboards is more convenient, a lot faster, and removes strain from your development process.&lt;/p&gt;

&lt;p&gt;In this tutorial, I want to build a metrics dashboard for the sales team of an e-commerce company to gain insight into their KPIs. Sounds daunting. üò¨&lt;/p&gt;

&lt;p&gt;After you're done reading this, you'll be blown away by how simple it is. I'll have a dashboard ready in less than 10 minutes. Yes, this is what you'll get! üëá&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hVcGwD3y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/bbe1f014-69db-4521-8b51-fa8f40baae63.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hVcGwD3y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/bbe1f014-69db-4521-8b51-fa8f40baae63.png" alt="frame_chrome_mac_light_(44).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'll be using a hosted &lt;a href="https://github.com/cube-js/cube.js"&gt;Cube&lt;/a&gt; deployment on &lt;a href="https://cube.dev/cloud"&gt;Cube Cloud&lt;/a&gt; to get aggregated data from an e-commerce dataset and &lt;a href="https://retool.com/"&gt;Retool&lt;/a&gt; as the visualization tool to generate a metrics dashboard.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-cube-cloud"&gt;
  &lt;/a&gt;
  What is Cube Cloud
&lt;/h3&gt;

&lt;p&gt;Cube Cloud is a fully managed API layer for building your Cube apps. It lets you &lt;a href="https://cube.dev/docs/cloud/getting-started/create"&gt;deploy fully managed Cube apps&lt;/a&gt; in the cloud of your choice, either AWS, Azure, or GCP.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RDskHiGw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/f9fe8ccf-8d70-4386-8431-6f4f9f3891e1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RDskHiGw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/f9fe8ccf-8d70-4386-8431-6f4f9f3891e1.png" alt="how_cube_cloud_works.png" width="880" height="489"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cube Cloud enables you to deploy, scale, and optimize Cube apps with best‚Äëin‚Äëclass infrastructure and proven best practices. It guarantees high availability, scalability, and improved performance over self-hosted Cube clusters.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cube.dev/video/cube-cloud-demo.mp4"&gt;Have a look at a video explaining Cube Cloud. ‚û°Ô∏è &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Anything you can do with self-hosted Cube you can do with Cube Cloud. However, you do get a few more niceties with Cube Cloud. Primarily, &lt;a href="https://cube.dev/docs/cloud/inspecting-queries"&gt;query optimization&lt;/a&gt;, where you can drill down into queries and spot bottlenecks. You also get pre-aggregations and query acceleration supported out-of-the-box with a &lt;a href="https://cube.dev/docs/deployment/production-checklist#set-up-cube-store"&gt;Cube Store cluster&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Another awesome feature is pre-aggregation introspection where you can preview all pre-aggregation builds, partitions, indices, and what their build history looks like to make sure there is no stale data.&lt;/p&gt;

&lt;p&gt;In this tutorial, I'll use Cube Cloud to set up an analytical API. It will act as the data layer and API for accessing the data I need to populate a metrics dashboard.&lt;/p&gt;

&lt;p&gt;You can follow along with either a &lt;a href="https://cube.dev/docs/getting-started/docker"&gt;self-hosted Cube&lt;/a&gt; deployment or &lt;a href="https://cube.dev/docs/cloud/getting-started"&gt;Cube Cloud&lt;/a&gt;. Both options will work the same way.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-retool"&gt;
  &lt;/a&gt;
  What is Retool
&lt;/h3&gt;

&lt;p&gt;Retool is the fast way to build internal tools. It lets you visually design apps that interface with any database or API. It lets you create tables, charts, and graphs by providing elegant components for all the UI primitives you need to build robust B2B dashboards.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://d3399nw8s4ngfo.cloudfront.net/videos/component-assemble.mp4"&gt;Check out Retool's video showing how it works. ‚û°Ô∏è &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When building both internal and user-facing dashboards there are many building blocks that remain the same. They are Tables, Lists, Charts, Forms, Wizards, Maps, and so on.&lt;/p&gt;

&lt;p&gt;But it can be hard to find everything you need in single component library, and even when you do, you‚Äôll need to customize components and even make design changes to make your charts look cohesive.&lt;/p&gt;

&lt;p&gt;Retool provides a complete set of powerful building blocks out of the box. You should spend your time getting a UI in front of stakeholders and users, not hunting down the best JavaScript charting library especially when it comes to internal-facing tools and apps.&lt;/p&gt;

&lt;p&gt;In this tutorial, I'll show you how to assemble a metrics dashboard in a few minutes by dragging and dropping charts and tables from Retool's pre-built components. Retool will act as the visualization library, but without actually using any code. It's like music to my ears.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-cube-retool"&gt;
  &lt;/a&gt;
  Why Cube ‚ù§Ô∏è Retool
&lt;/h3&gt;

&lt;p&gt;Cube exposes an HTTP API because it's essentially an API server. Everything you need in order to interact with Cube is a single API handler.&lt;/p&gt;

&lt;p&gt;That's where Retool comes into play. It has great support for HTTP APIs and supports a low-code/no-code solution to building metrics dashboards and internal tools.&lt;/p&gt;

&lt;p&gt;With Cube and Retool working in tandem, I'll be able to create a dashboard in less than 10 minutes. Don't believe me? Hold my üç∫.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#set-up-cube"&gt;
  &lt;/a&gt;
  Set Up Cube
&lt;/h3&gt;

&lt;p&gt;To configure Cube, I first needed to connect a database. I used a sample PostgreSQL database with e-commerce data.&lt;/p&gt;

&lt;p&gt;The process of connecting a database is identical whether you're using a self-hosted instance of Cube, or Cube Cloud. &lt;/p&gt;

&lt;p&gt;I selected PostgreSQL from the list of database options. Cube &lt;a href="https://cube.dev/docs/config/databases"&gt;supports dozens of databases&lt;/a&gt;, you can select from any mainstream database or data warehouse on the market.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IpQd75rz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/9ca37d9b-cdc4-4ebd-a41b-31b1ded693e5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IpQd75rz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/9ca37d9b-cdc4-4ebd-a41b-31b1ded693e5.png" alt="frame_chrome_mac_light_(37).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, I had to add values to connect to my sample PostgreSQL e-commerce database. If you're using a self-hosted Cube instance, you need to &lt;a href="https://cube.dev/docs/config/databases/postgres"&gt;configure a few environment variables&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In Cube Cloud, it looks like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VXliNlEH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/f44924c6-b117-4d50-9d78-11625238b4b9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VXliNlEH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/f44924c6-b117-4d50-9d78-11625238b4b9.png" alt="frame_chrome_mac_light_(50).png" width="880" height="844"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the connection is established, I have to generate a data schema. Selecting the &lt;code&gt;public&lt;/code&gt; table and clicking generate will build a Cube data schema for me to work with.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xa_2M0rW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/ec5c7697-c698-4d8c-938e-8fdeb2193b7f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xa_2M0rW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/ec5c7697-c698-4d8c-938e-8fdeb2193b7f.png" alt="frame_chrome_mac_light_(51).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now I have access to my Cube cluster. In Cube Cloud you should always enable cluster mode for improved performance if you want to run reliably in production.&lt;/p&gt;

&lt;p&gt;This will make sure your resources will autoscale based on the load. There's no additional cost for autoscaling, and the &lt;a href="https://cube.dev/pricing"&gt;pricing model for Cube Cloud&lt;/a&gt; is based on throughput.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VBftoCxH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/00d52f17-d1c7-4768-b692-6fbb78954d33.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VBftoCxH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/00d52f17-d1c7-4768-b692-6fbb78954d33.png" alt="frame_chrome_mac_light_(22).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next up, I ran a set of queries in the Cube Playground to determine what data I need to make the charts and graphs in Retool.&lt;/p&gt;

&lt;p&gt;First of all, I want to know the number of orders created per day grouped by their status.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5i0c-wWu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/247919d7-68ea-4edf-a60c-43d2b9d5c34b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5i0c-wWu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/247919d7-68ea-4edf-a60c-43d2b9d5c34b.png" alt="frame_chrome_mac_light_(24).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By clicking on the &lt;code&gt;JSON Query&lt;/code&gt; tab, you'll see a JSON object. I'll use this in Retool to access the data through a Retool integration once I add it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"measures"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"Orders.count"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"timeDimensions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"dimension"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Orders.createdAt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"granularity"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"day"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"dateRange"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"This year"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"order"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Orders.count"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"desc"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dimensions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"Orders.status"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"filters"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly, I added &lt;a href="https://cube.dev/docs/caching/pre-aggregations/getting-started"&gt;query acceleration&lt;/a&gt; with a simple pre-aggregation. I did this through the Rollup Designer. You open it by clicking the &lt;code&gt;Query was not accelerated with pre-aggregation ‚Üí&lt;/code&gt; link. Clicking the &lt;code&gt;Add to the Data Schema&lt;/code&gt; button is everything you need to do.&lt;/p&gt;

&lt;p&gt;You can read more about pre-aggregations and how to configure them &lt;a href="https://cube.dev/docs/caching/using-pre-aggregations"&gt;here in the Cube docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iRllHmD1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/1d6190e2-8d21-4f6f-897d-54df10141110.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iRllHmD1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/1d6190e2-8d21-4f6f-897d-54df10141110.png" alt="frame_chrome_mac_light_(26).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Running accelerated queries clearly shows a performance improvement. This is what I see in the Cube Cloud queries tab after adding a pre-aggregation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b7W8_PSU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/1bcb0ed4-a782-4048-a04f-78a1edf5c69f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b7W8_PSU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/1bcb0ed4-a782-4048-a04f-78a1edf5c69f.png" alt="frame_chrome_mac_light_(31).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Are you tired of holding my üç∫ yet? I told you I'd only need a few minutes. I'm only halfway there though, bear with me. Next up, let's integrate Cube with Retool.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#integrate-cube-with-retool"&gt;
  &lt;/a&gt;
  Integrate Cube with Retool
&lt;/h3&gt;

&lt;p&gt;Now, once Cube is configured, the next step is to create a new app and a new resource in Retool and add Cube as a REST API integration.&lt;/p&gt;

&lt;p&gt;I started by creating a blank app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XJZov6BU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/09374bcc-1cc9-4169-91ac-78f7cc0ec101.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XJZov6BU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/09374bcc-1cc9-4169-91ac-78f7cc0ec101.png" alt="frame_chrome_mac_light_(53).png" width="880" height="658"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, once in the app, I created a new resource.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QbsyjU8U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/41b30b97-2b2c-46af-becc-912a7c666784.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QbsyjU8U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/41b30b97-2b2c-46af-becc-912a7c666784.png" alt="frame_chrome_mac_light_(52).png" width="880" height="651"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then I selected the REST API integration.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0b0qcWoD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/cb6c291c-cf42-44cc-803c-761b92387dc9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0b0qcWoD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/cb6c291c-cf42-44cc-803c-761b92387dc9.png" alt="frame_chrome_mac_light_(54).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To configure the Retool resource, I need to use the URL of my Cube app deployment. Because I'm using Cube Cloud, it's simple. I click the &lt;code&gt;How to connect&lt;/code&gt; button on the Overview tab.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IsZSYCBH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/d4cee3df-0945-43d2-9afe-8acf883626e2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IsZSYCBH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/d4cee3df-0945-43d2-9afe-8acf883626e2.png" alt="frame_chrome_mac_light_(40).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's the curl connection.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Authorization: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MzI4NDQ0MDF9.e4guK7xbqVHGpnZPdIbkLvVBalpgShfut3JmFwMHTsU"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-G&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--data-urlencode&lt;/span&gt; &lt;span class="s1"&gt;'query={"measures":["LineItems.count"]}'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  https://thirsty-raccoon.aws-eu-central-1.cubecloudapp.dev/cubejs-api/v1/load
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I copied the URL and the Authorization token and pasted them into the Retool resource configuration. The URL should end with &lt;code&gt;v1&lt;/code&gt;. It's crucial to make sure not to include the &lt;code&gt;/load&lt;/code&gt; part of the URL as it's an API path, not part of the base URL. I'll add the &lt;code&gt;/load&lt;/code&gt; part later when I create the Retool Query for fetching data from Cube.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eyLPTtPL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/acec9699-cd6c-4c1e-aeb7-0db2feba1e76.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eyLPTtPL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/acec9699-cd6c-4c1e-aeb7-0db2feba1e76.png" alt="frame_chrome_mac_light_(55).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it! I have a resource ready to use.&lt;/p&gt;

&lt;p&gt;Now comes the fun part. Creating a new query in Retool. Once I created a Retool query I had to select the resource I just created to fetch data from.&lt;/p&gt;

&lt;p&gt;As the action type, I selected &lt;code&gt;GET&lt;/code&gt; and added &lt;code&gt;load&lt;/code&gt; as the URL path. Then, I copied the Cube JSON Query from the previous section above and pasted it as a URL parameter called &lt;code&gt;query&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Cube&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;JSON&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Query&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"measures"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"Orders.count"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"timeDimensions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"dimension"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Orders.createdAt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"granularity"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"day"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"dateRange"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"This year"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"order"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Orders.count"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"desc"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dimensions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"Orders.status"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"filters"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here you can see the Retool Query I created.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--idslWalr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/c466d0a8-21ff-48de-be3d-81d2daf63454.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--idslWalr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/c466d0a8-21ff-48de-be3d-81d2daf63454.png" alt="frame_chrome_mac_light_(56).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I saved this query and ran a preview to see if the data matches what I saw in Cube. Everything looks great. üëå&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-retool-lowcode-charts-and-graphs"&gt;
  &lt;/a&gt;
  Create Retool Low-Code Charts and Graphs
&lt;/h3&gt;

&lt;p&gt;With the back-end part of fetching data working nicely, let me shift my focus to building the Retool metrics dashboard.&lt;/p&gt;

&lt;p&gt;Retool has an amazing feature where you can drag and drop UI components into the dashboard. I used this to add a table, a bar chart, and a pie chart. For reference, here's a video showing how the drag-and-drop feature works.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://d3399nw8s4ngfo.cloudfront.net/videos/component-assemble.mp4"&gt;Check out Retool's components here. ‚û°Ô∏è &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next step I had to do was to bind the data from the Retool Query to the actual charts.&lt;/p&gt;

&lt;p&gt;Because the name of my Retool Query is &lt;code&gt;OrdersCreatedByDayPerStatus&lt;/code&gt;, using the data binding curly brackets like in the example below will populate the charts correctly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;OrdersCreatedByDayPerStatus.data.data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's what my &lt;strong&gt;table component&lt;/strong&gt; looks like alongside the data binding. In the columns section, I &lt;strong&gt;selected &lt;code&gt;Orders.status&lt;/code&gt;, &lt;code&gt;Orders.createdAt&lt;/code&gt;, and &lt;code&gt;Orders.count&lt;/code&gt; as the columns to display&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mrML3tBR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/709000be-2118-4fdb-9c12-6bf71ac10452.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mrML3tBR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/709000be-2118-4fdb-9c12-6bf71ac10452.png" alt="2021-11-10_12-21.png" width="880" height="413"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The table is simple. Things get a bit more complicated with the charts below.&lt;/p&gt;

&lt;p&gt;With the Bar Chart, I wanted to stack the status of every created order while counting them per day.&lt;/p&gt;

&lt;p&gt;To get the UI layout just the way I want it, I had to &lt;strong&gt;set the &lt;code&gt;Orders.createdAt&lt;/code&gt; field as the X-axis value&lt;/strong&gt;, and the &lt;code&gt;**Order.status&lt;/code&gt; as the Group by definition.** I also &lt;strong&gt;enabled the Stack grouped data toggle&lt;/strong&gt; and chose *&lt;strong&gt;&lt;em&gt;the *&lt;/em&gt;&lt;code&gt;Orders.count&lt;/code&gt; sum&lt;/strong&gt; &lt;strong&gt;as the Dataset.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pDHnHHgY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/8c1d8d1a-7a7b-4726-afb1-df1833fdf223.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pDHnHHgY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/8c1d8d1a-7a7b-4726-afb1-df1833fdf223.png" alt="2021-11-10_12-21_1.png" width="880" height="333"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lastly, with the Pie Chart, I wanted to show the percentage of created orders grouped by their status displayed as a circle.&lt;/p&gt;

&lt;p&gt;For the Pie Chart, I selected the &lt;strong&gt;Value labels to be &lt;code&gt;Order.status&lt;/code&gt;&lt;/strong&gt; with the &lt;strong&gt;Dataset to be a sum of &lt;code&gt;Order.status&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sGt7mtrW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/35e55d26-3f28-4719-9103-e49f23e4d343.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sGt7mtrW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/35e55d26-3f28-4719-9103-e49f23e4d343.png" alt="2021-11-10_12-22.png" width="880" height="418"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The data will be loaded automatically from the Retool query that fetches data from Cube. The end result of my metrics dashboard looks quite stylish if I can say so myself. üíÉ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hk3p2V46--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/6d80c3f6-af69-4f30-9dca-aa8343a3b16f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hk3p2V46--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/6d80c3f6-af69-4f30-9dca-aa8343a3b16f.png" alt="cubedev.retool.com_apps_DevRel_App201__releaseVersionlatest_(1).png" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I feel it's missing one key component though. It's static. Let me add a date picker to introduce a dynamic element to my metrics dashboard.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-dynamic-retool-charts-and-graphs"&gt;
  &lt;/a&gt;
  Add Dynamic Retool Charts and Graphs
&lt;/h3&gt;

&lt;p&gt;I dragged a date picker onto my dashboard and configured it to load default dates.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BNQG2L81--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/f5c988ae-b6a7-49f6-be17-2c2d641b4a5e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BNQG2L81--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/f5c988ae-b6a7-49f6-be17-2c2d641b4a5e.png" alt="image (23).png" width="880" height="616"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next up, I updated the query to access Cube with dynamic date values. I did this by using the &lt;code&gt;dateRange1.startValue&lt;/code&gt; and &lt;code&gt;dateRange1.endValue&lt;/code&gt; data bindings from the date picker component.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lC0OU3vN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/2c9f31af-e9d1-458d-8ed0-c4362a5b2dea.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lC0OU3vN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/2c9f31af-e9d1-458d-8ed0-c4362a5b2dea.png" alt="frame_chrome_mac_light_(46).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This configuration change made sure the values from the date picker are populating the query and fetching the correct data for that date range. The exact query looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"measures"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;"Orders.count"&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"timeDimensions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"dimension"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Orders.createdAt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"granularity"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"day"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"dateRange"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;dateRange&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;dynamic&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"{{ dateRange1.startValue }}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"{{ dateRange1.endValue }}"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"order"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Orders.count"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"desc"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dimensions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"Orders.status"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"filters"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By using data bindings in the &lt;code&gt;dateRange&lt;/code&gt; field I can dynamically change the query by changing the dates in the date picker component.&lt;/p&gt;

&lt;p&gt;Here's what the final dashboard looks like. You can also preview a live version &lt;a href="https://cubedev.retool.com/embedded/public/945c174d-566e-42f6-b33c-73052847e483"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kVLVeLpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/e30c51c1-2d7b-4227-b9a0-f0969aab917d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kVLVeLpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/e30c51c1-2d7b-4227-b9a0-f0969aab917d.png" alt="frame_chrome_mac_light_(44).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;I promised to create a fully functional dynamic metrics dashboard displaying e-commerce KPIs. Here we are, 10 minutes later, sitting with a lovely finished product.&lt;/p&gt;

&lt;p&gt;Now give me back my üç∫, thanks!&lt;/p&gt;

&lt;p&gt;I think Cube Cloud and Retool are a great match. With Cube Cloud, we want you to focus on creating business value without wasting time and effort on maintaining infrastructure. &lt;/p&gt;

&lt;p&gt;Retool has the same philosophy, building business applications for complex workflows with minimal effort to both create and maintain.&lt;/p&gt;

&lt;p&gt;Working in unison, they enable you to create breathtaking metrics dashboards and internal tools with almost no code whatsoever.&lt;/p&gt;

&lt;p&gt;You can &lt;a href="https://cube.dev/cloud"&gt;register for Cube Cloud&lt;/a&gt; right away, and check out &lt;a href="https://retool.com/"&gt;Retool&lt;/a&gt; as well!&lt;/p&gt;

&lt;p&gt;I'd love to hear your feedback about building metrics dashboards with Cube Cloud in the Cube Community Slack. &lt;a href="https://slack.cube.dev/"&gt;Click here to join&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Until next time, stay curious, and have fun coding. Also, feel free to &lt;a href="https://github.com/cube-js/cube.js"&gt;leave Cube a ‚≠ê on GitHub&lt;/a&gt; if you liked this article. ‚úåÔ∏è&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>tutorial</category>
      <category>analytics</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Python features you'll want to repeat</title>
      <author>Vadim Kolobanov</author>
      <pubDate>Tue, 16 Nov 2021 15:07:37 +0000</pubDate>
      <link>https://dev.to/abstract/python-features-youll-want-to-repeat-418g</link>
      <guid>https://dev.to/abstract/python-features-youll-want-to-repeat-418g</guid>
      <description>&lt;h2&gt;
  &lt;a href="#file-server-on-a-computer-with-mobile-access"&gt;
  &lt;/a&gt;
  File server on a computer with mobile access
&lt;/h2&gt;

&lt;p&gt;You can access your file system by running a file server on your computer. Navigate to the desired directory that you want to access and run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# python version &amp;gt;=  3.X
&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;
&lt;span class="c1"&gt;# python version &amp;gt;=  3.X
&lt;/span&gt;&lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="c1"&gt;#for Linux
&lt;/span&gt;
&lt;span class="c1"&gt;# If Python version &amp;gt;= 2.X and &amp;lt; 3.X
&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;SimpleHTTPServer&lt;/span&gt;
&lt;span class="c1"&gt;#default port: 8000
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command starts a file server that can be accessed on the same network. To access your files on a mobile device, simply connect to the same network (Wi-Fi or use the phone's access point on a laptop). Now open the browser in your phone.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;computer&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check your IP by running - &lt;strong&gt;ifconfig&lt;/strong&gt;. Check your local IP&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;p&gt;192.168.43.155:8000&lt;br&gt;
And on the mobile phone, you will see the current directory&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#convert-csv-to-json-1-line"&gt;
  &lt;/a&gt;
  Convert CSV to JSON 1 line
&lt;/h2&gt;

&lt;p&gt;If you're a programmer, you'll probably be lazy and want to automate pretty much everything you can, right?&lt;/p&gt;

&lt;p&gt;Don't worry, the python will cover you. There are a lot of things that you can automate in just 4-5 lines of code. From installing cron jobs and reminders to uploading your favorite YouTube videos, you can do it all with a few lines in python.&lt;/p&gt;

&lt;p&gt;Example - convert CSV to JSON&lt;br&gt;
You can convert a CSV file to JSON with just one command in Python!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="s"&gt;"import csv,json;print json.dumps(list(csv.reader(open('your_csv_file.csv'))))"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replace it with &lt;em&gt;anyfile.csv&lt;/em&gt; and you will get JSON output!&lt;/p&gt;

&lt;p&gt;Easy, right?&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#comics"&gt;
  &lt;/a&gt;
  Comics
&lt;/h2&gt;

&lt;p&gt;Yes, these are comics in python!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
 &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;antigravity&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--70i0PQ8m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/blg38mx4cjjnlkabjwl1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--70i0PQ8m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/blg38mx4cjjnlkabjwl1.png" alt="Comics" width="518" height="588"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#will-they-add-brackets-in-python"&gt;
  &lt;/a&gt;
  Will they add brackets in python?
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;braces&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;stdin&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nb"&gt;SyntaxError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;chance&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#a-simple-life-lesson"&gt;
  &lt;/a&gt;
  A simple life lesson
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;this&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;love&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;love&lt;/span&gt;
&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;love&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;love&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;love&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;love&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;love&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;love&lt;/span&gt;  
&lt;span class="bp"&gt;True&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#put-on-heart-if-you-liked-it-and-you-learned-something-new"&gt;
  &lt;/a&gt;
  Put on Heart if you liked it and you learned something new!
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#you-can-also-follow-me-to-receive-notifications-about-new-interesting-articles"&gt;
  &lt;/a&gt;
  You can also follow &lt;a href="https://dev.to/vadimkolobanov"&gt;ME&lt;/a&gt; to receive notifications about new interesting articles.
&lt;/h3&gt;




&lt;h3&gt;
  &lt;a href="#faq"&gt;
  &lt;/a&gt;
  FAQ
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;I am a beginner, how should I learn Python?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Look into the following series:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/vadimkolobanov/series/15329"&gt;Learning Python&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/vadimkolobanov/series/15349"&gt;Step by Step to Junior&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/vadimkolobanov/series/15331"&gt;Ideas&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Can we cooperate with you?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you have interesting projects and you need a python (web)developer, then you can contact me by &lt;strong&gt;&lt;a href="//titanyforgame@gmail.com"&gt;mail&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href="https://discord.gg/szEuVAhatW"&gt;discord&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href="https://www.linkedin.com/in/vadzim-hlobuz-0b44531b7/"&gt;LinkedIn&lt;/a&gt;&lt;/strong&gt; for cooperation&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Connect to me on&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.facebook.com/neo.skarynsky"&gt;Write me on Face....oh...Meta&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/decodesperato"&gt;My Twitter&lt;/a&gt; &lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>jokes</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Introduction to Scalable Vector Graphics (SVG)</title>
      <author>Estee Tey</author>
      <pubDate>Tue, 16 Nov 2021 14:56:12 +0000</pubDate>
      <link>https://dev.to/lyqht/introduction-to-scalable-vector-graphics-svg-734</link>
      <guid>https://dev.to/lyqht/introduction-to-scalable-vector-graphics-svg-734</guid>
      <description>&lt;p&gt;This article is an enhanced version of the lunch &amp;amp; learn session that I presented recently on &lt;strong&gt;Introduction to Scalable Vector Graphics.&lt;/strong&gt; The slides can be found &lt;a href="https://lyqht.github.io/intro-to-svg-slides"&gt;here&lt;/a&gt;, where you can choose to download a PDF version. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There are some iframes which have been excluded in this article e.g. the embedded presentation slides, because the Forem platform does not support them. But if you're keen to see them, check out the &lt;a href="https://esteetey.dev/introduction-to-svg"&gt;original article&lt;/a&gt; on my tech blog. &lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#what-is-svg"&gt;
  &lt;/a&gt;
  What is SVG?
&lt;/h2&gt;

&lt;p&gt;SVG refers to &lt;strong&gt;S&lt;/strong&gt;calable &lt;strong&gt;V&lt;/strong&gt;ector &lt;strong&gt;G&lt;/strong&gt;raphics, and it is a type of image format that is widely available on websites. Before we describe further on SVG, let's understand the importance of images and other image format types.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%F0%9F%96%BC-images"&gt;
  &lt;/a&gt;
  üñº Images
&lt;/h3&gt;

&lt;p&gt;On a very high level, we can split images into 2 generic types: &lt;strong&gt;Raster&lt;/strong&gt; and &lt;strong&gt;Vector&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Raster images are drawn pixel by pixel, and may look different depending on the &lt;strong&gt;resolution/ pixel density&lt;/strong&gt; of the device. Vector images look good and crisp regardless of the resolution. Here's a Codepen to illustrate the difference between the two, try &lt;strong&gt;resizing&lt;/strong&gt; the different images! ‚ú®&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/lyqht/embed/RwZeZNm?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The raster art was drawn by my boyfriend using Microsoft Paint (what a madlad! üòç), while the vectorized version are traced and coloured by me using Adobe Illustrator. It was a joint project for creating a couple tee design üòâ&lt;/p&gt;

&lt;p&gt;I'm sure you're curious about this question - if vector images always look good, then why would we ever consider raster images? Well that's because of 2 practical factors. The first being the fact that the technology to support the &lt;em&gt;creation&lt;/em&gt; &amp;amp; &lt;em&gt;usage&lt;/em&gt; of raster images is much more accessible compared to SVG. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On the designers' side, there is generally more familiarity to work with tools to create raster art (Photoshop) than vector art (Illustrator).&lt;/li&gt;
&lt;li&gt;On the developer's side, most file uploaders e.g. for uploading avatar images, background banners etc, are implemented to be restricted to raster image formats only.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The second reason for preferring raster images over SVG is the &lt;strong&gt;file size&lt;/strong&gt;. Different image formats of the same visual will result in different file sizes, and thus different pages sizes. According to &lt;em&gt;&lt;a href="https://developers.google.com/speed/webp/docs/compression"&gt;Google Developers Page on Image Compression&lt;/a&gt;,&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Images comprise up to 60%-65% of bytes on most web pages and page size is a major factor in total rendering time. Page size is especially important for mobile devices, where smaller size images will help to save both bandwidth and battery life.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For &lt;strong&gt;different use cases,&lt;/strong&gt; we should be using different image file types. In the context of online images, &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For Raster Image File Types, there's 4 types - GIF, PNG, JPG and WEBP.&lt;/li&gt;
&lt;li&gt;For Vector Image File Types, there's only SVG!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's a table for the description of the name of the file extensions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CnzlDbBh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637037579358/aSzqOFyrq.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CnzlDbBh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637037579358/aSzqOFyrq.jpeg" alt="Table showing file extensions" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
And here's a brief context behind how each raster file type came about.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;GIF

&lt;ul&gt;
&lt;li&gt;GIF was¬†&lt;strong&gt;one of the first two graphics formats supported&lt;/strong&gt;¬†by HTML, along with &lt;a href="https://en.wikipedia.org/wiki/X_BitMap"&gt;XBM&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PNG

&lt;ul&gt;
&lt;li&gt;PNG was created to improve upon and &lt;strong&gt;replace GIF&lt;/strong&gt; (Graphics Interchange Format) as an image-file format.&lt;/li&gt;
&lt;li&gt;It supports a better compression algorithm and also transparency in an image.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;JPG

&lt;ul&gt;
&lt;li&gt;The original file extension for the Joint Photographic Expert Group File Format was &lt;code&gt;.jpeg&lt;/code&gt;. On Mac, this was supported but on Windows, all files required a &lt;strong&gt;3-letter file extension&lt;/strong&gt;. So, the file extension was shortened to &lt;code&gt;.jpg&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Eventually, with upgrades Windows also began to accept &lt;code&gt;.jpeg&lt;/code&gt;. However, many users were already used to ‚Äò.jpg‚Äô, so both the 3-letter file extension and the 4-letter were commonly used, and still are.&lt;/li&gt;
&lt;li&gt;Today, the most commonly accepted and used form is the &lt;code&gt;.jpg&lt;/code&gt;, as &lt;strong&gt;many users were Windows users&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;WEBP

&lt;ul&gt;
&lt;li&gt;WEBP is an image format type developed by Google to create files that are smaller for the same quality of JPEG, PNG, and GIF image formats.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now that we know what image formats are commonly used for web images, now we can talk about what the different file types are intended for. Here's a table to illustrate the colour modes, compression algorithm supported, and thus the intended usage for different image file types.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FLkUadIh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637037980630/hNf4rc5cx.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FLkUadIh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637037980630/hNf4rc5cx.jpeg" alt="Intro to SVG_Page_14.jpg" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To add on to the table, here are reasons why you should use SVG.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-use-svg"&gt;
  &lt;/a&gt;
  Why use SVG?
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;SVG is &lt;strong&gt;scalable&lt;/strong&gt;

&lt;ol&gt;
&lt;li&gt;You can stretch it however much, you still won't lose quality because of resolution issues.&lt;/li&gt;
&lt;li&gt;Responsive design is easier to be achieved!&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;SVG can be coded &lt;strong&gt;inline&lt;/strong&gt; 

&lt;ul&gt;
&lt;li&gt;this reduces the HTTP requests required to retrieve media.&lt;/li&gt;
&lt;li&gt;this also meant that the FOUC (Flash of Unstyled Content) problem is less likely to happen from media not being retrieved and styled before rendering in the page.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Developers can work with the individual nodes in the SVG to:

&lt;ol&gt;
&lt;li&gt;animate&lt;/li&gt;
&lt;li&gt;optimize for performance&lt;/li&gt;
&lt;li&gt;optimize for accessibility&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Animation and optimization are considered a little more advanced so they are not covered in this introductory article. I may conduct more talks/ write articles on these concepts in the future. üòä&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now that we have a clearer picture of image file types and why we should use SVG, we can move on to more hands-on stuff! üôå&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#how-to-create-svg"&gt;
  &lt;/a&gt;
  How to create SVG?
&lt;/h2&gt;

&lt;p&gt;In this article, I will show you 2 different ways of creating SVG. The first would be using code to create SVG XML and the other would be to use Figma, a design tool to create SVG. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#create-svg-with-code"&gt;
  &lt;/a&gt;
  Create SVG with Code
&lt;/h2&gt;

&lt;p&gt;For learning to create SVG with code, we will &lt;strong&gt;create 4 simple country flags from SEA&lt;/strong&gt; (Southeast Asia) - &lt;em&gt;Japan, Thailand, Vietnam and Singapore&lt;/em&gt;.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Country&lt;/th&gt;
&lt;th&gt;JP&lt;/th&gt;
&lt;th&gt;TH&lt;/th&gt;
&lt;th&gt;VN&lt;/th&gt;
&lt;th&gt;SG&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Image&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uY-aXW_N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/Flag_of_Japan_%25281870%25E2%2580%25931999%2529.svg/220px-Flag_of_Japan_%25281870%25E2%2580%25931999%2529.svg.png" width="220" height="154"&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--URnJNgLf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/a/a9/Flag_of_Thailand.svg" width="880" height="587"&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W8dsLY26--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/Flag_of_Vietnam.svg/2000px-Flag_of_Vietnam.svg.png" width="880" height="587"&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1xbYPfYJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Flag_of_Singapore.svg/2560px-Flag_of_Singapore.svg.png" width="880" height="587"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;What you will learn&lt;/td&gt;
&lt;td&gt;Rectangle &amp;amp; Circle&lt;/td&gt;
&lt;td&gt;Positioning&lt;/td&gt;
&lt;td&gt;Polygon, Polyline, Nesting of SVG&lt;/td&gt;
&lt;td&gt;Reusing SVG elements&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h3&gt;
  &lt;a href="#1st-flag-japan"&gt;
  &lt;/a&gt;
  ‚õ≥ 1st Flag: Japan
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u1cYoqVY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637041966658/lopW84pcW.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u1cYoqVY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637041966658/lopW84pcW.jpeg" alt="Slide on JP Flag" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The flag has 2 colors and 2 shapes. The color of SVG elements are indicated by the &lt;code&gt;fill&lt;/code&gt; property. The shapes are created by the following HTML tags.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;rect /&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;circle /&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For the rectangle, the width and height properties are pretty self-explanatory. &lt;/p&gt;

&lt;p&gt;For the circle, &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;(cx, cy)&lt;/code&gt; are x,y coordinates of the centre point of the circle&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;r&lt;/code&gt; represents the radius of the circle&lt;/li&gt;
&lt;li&gt;Hence to make the circle positioned in the center, we set &lt;code&gt;(cx, cy)&lt;/code&gt; to be both a &lt;em&gt;relative&lt;/em&gt; 50%. If you prefer &lt;em&gt;absolute units&lt;/em&gt;, you could set the rect's width=300 and circle's cx=150 instead.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;svg&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"100%"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"100%"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"white"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;circle&lt;/span&gt; &lt;span class="na"&gt;cx=&lt;/span&gt;&lt;span class="s"&gt;"50%"&lt;/span&gt; &lt;span class="na"&gt;cy=&lt;/span&gt;&lt;span class="s"&gt;"50%"&lt;/span&gt; &lt;span class="na"&gt;r=&lt;/span&gt;&lt;span class="s"&gt;"60"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"#BC002D"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2nd-flag-thailand"&gt;
  &lt;/a&gt;
  ‚õ≥ 2nd Flag: Thailand
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VfruOjRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637038738073/LYxYYiPAP.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VfruOjRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637038738073/LYxYYiPAP.jpeg" alt="Slide on TH Flag" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This simple example has only 5 rectangles, and is meant to introduce you to &lt;strong&gt;positioning&lt;/strong&gt;. Previously we have the circle centered in the middle of the rectangle by setting the &lt;code&gt;(cx, cy)&lt;/code&gt; coordinates. For other elements, usually you can set the &lt;code&gt;(x, y)&lt;/code&gt; coordinates directly. These &lt;code&gt;(x, y)&lt;/code&gt; coordinates always refer to the &lt;strong&gt;top left coordinate&lt;/strong&gt; of the element&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;svg&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"100%"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"20%"&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"red"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"100%"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"20%"&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;"20%"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"white"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"100%"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"20%"&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;"40%"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"blue"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"100%"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"20%"&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;"60%"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"white"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"100%"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"20%"&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;"80%"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"red"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#3rd-flag-vietnam"&gt;
  &lt;/a&gt;
  ‚õ≥ 3rd Flag: Vietnam
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c5AMo7uE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637038742204/QUUv0b2aQ.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c5AMo7uE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637038742204/QUUv0b2aQ.jpeg" alt="Slide on VN Flag" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are 2 shapes here - a rectangle and a star. There isn't a &lt;code&gt;&amp;lt;star /&amp;gt;&lt;/code&gt; element unfortunately, but there is a generic &lt;code&gt;&amp;lt;polygon /&amp;gt;&lt;/code&gt; element that we can use to create a star. W3C provides &lt;a href="https://www.w3schools.com/graphics/svg_examples.asp"&gt;many examples of shapes&lt;/a&gt;, so I will take their star example and use it here.&lt;/p&gt;

&lt;p&gt;Example of creating a star with the polygon element&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;svg&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;polygon&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"star"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"yellow"&lt;/span&gt;
      &lt;span class="na"&gt;points=&lt;/span&gt;&lt;span class="s"&gt;"100,10 40,198 190,78 10,78 160,198"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, if we try to preview the svg with this star, it will get cut off. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m5MyLGyt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/lyqht/intro-to-svg-slides/main/public/svg/shapes/star-cutoff.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m5MyLGyt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/lyqht/intro-to-svg-slides/main/public/svg/shapes/star-cutoff.png" width="300" height="150"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is because the star is bigger than the SVG's &lt;strong&gt;default width &amp;amp; height&lt;/strong&gt; of &lt;strong&gt;300√ó150&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;To fix this, we could adjust the coordinates one by one but that's painful so let's not do that üòÖ. Instead, let's change the &lt;code&gt;viewbox&lt;/code&gt; property. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ö† The &lt;code&gt;viewbox&lt;/code&gt; property is the most important thing you have to know about SVG.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;code&gt;viewbox&lt;/code&gt; can be declared by giving it a min-x, min-y, width and height. For us to see the star entirely, the height needs to ‚â•198, since the &lt;em&gt;biggest y-coordinate&lt;/em&gt; we have in the SVG is 198. Let's also give the star a little padding, so we will increase both the width and height of the SVG viewbox.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;viewbox=&lt;/span&gt;&lt;span class="s"&gt;'0 0 300 300'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;polygon&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"yellow"&lt;/span&gt; &lt;span class="na"&gt;points=&lt;/span&gt;&lt;span class="s"&gt;"100,10 40,198 190,78 10,78 160,198"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can see the star&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CPs4RzJr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/lyqht/intro-to-svg-slides/main/public/svg/shapes/star.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CPs4RzJr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/lyqht/intro-to-svg-slides/main/public/svg/shapes/star.png" width="150" height="150"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For a more in-depth explanation on scaling SVG, you can refer to this nifty &lt;a href="https://css-tricks.com/scale-svg/"&gt;article by CSS-Tricks&lt;/a&gt;. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's move on to create the actual VN flag.&lt;/p&gt;

&lt;p&gt;In the flag, the star actually looks a lot smaller than what we have created just now with the padding. We can modify the &lt;code&gt;viewbox&lt;/code&gt; of this star so that it looks smaller, but at the same time, we want the flag to still look like its original shape of a small rectangle that follows the default &lt;code&gt;viewbox&lt;/code&gt; of 300x150.&lt;/p&gt;

&lt;p&gt;There're different ways of to implement the flag, but here, I will introduce you to a new concept - &lt;strong&gt;Nesting of SVG elements.&lt;/strong&gt; We can enclose the SVG element for the star within another SVG element tag. That way, we can achieve the scaling down of the star element while keeping the flag's size. We will also add some &lt;code&gt;(x, y)&lt;/code&gt; offsets so that the star looks centered.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;rect&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"100%"&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"100%"&lt;/span&gt; &lt;span class="na"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"red"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;svg&lt;/span&gt; &lt;span class="na"&gt;viewBox&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"100 0 600 600"&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"25%"&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"25%"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;polygon&lt;/span&gt; &lt;span class="na"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"yellow"&lt;/span&gt;
      &lt;span class="na"&gt;points&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"100,10 40,198 190,78 10,78 160,198"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Now that you understand how the &lt;code&gt;&amp;lt;polygon /&amp;gt;&lt;/code&gt; element works, you can also learn about the &lt;code&gt;&amp;lt;polyline /&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9M-UTps_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637050449117/Jpe1Egmfp.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9M-UTps_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637050449117/Jpe1Egmfp.jpeg" alt="Intro to SVG_Page_21.jpg" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The only difference polygon and polyline is that the polygon is a &lt;strong&gt;closed path&lt;/strong&gt; while the polyline is an &lt;strong&gt;open path&lt;/strong&gt; - that's why if you draw the 2 shapes in SVG and give them stroke colors, you can tell the difference. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In &lt;code&gt;&amp;lt;polyline /&amp;gt;&lt;/code&gt;, the last point is not connected to the first point&lt;/li&gt;
&lt;li&gt;In &lt;code&gt;&amp;lt;polygon /&amp;gt;&lt;/code&gt;, the last point is connected to the first point&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#4th-flag-sg"&gt;
  &lt;/a&gt;
  ‚õ≥ 4th Flag: SG
&lt;/h3&gt;

&lt;p&gt;For the 4th country flag, we are creating my home nation, Singapore! üòä&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eEFM0Cwo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637038744584/pOqTH2pCO.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eEFM0Cwo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637038744584/pOqTH2pCO.jpeg" alt="Slide on SG Flag" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The flag comprises of 2 rectangles, 5 stars and 1 moon. To create this flag, it requires the combination of concepts that we have learnt from the previous flags.&lt;/p&gt;

&lt;p&gt;But how do we draw a moon? Well, when it comes to art, we don't always have to follow the semantic way of creating things. We can just create 2 overlapping circles where the top circle is red and the bottom circle is white, so that the result looks like a moon üåò&lt;/p&gt;

&lt;p&gt;Since we have already created a star before, let's reuse it and just change the fill to white. To reuse an element, we can declare &lt;strong&gt;definitions&lt;/strong&gt; in a &lt;code&gt;&amp;lt;defs&amp;gt;&lt;/code&gt; tag and &lt;strong&gt;use&lt;/strong&gt; them using a &lt;code&gt;&amp;lt;use&amp;gt;&lt;/code&gt; tag. You can see that this becomes helpful as we reuse the same element multiple times.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;svg&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;defs&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;polygon&lt;/span&gt; 
            &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"white-star"&lt;/span&gt; 
            &lt;span class="na"&gt;points=&lt;/span&gt;&lt;span class="s"&gt;"100,10 40,198 190,78 10,78 160,198"&lt;/span&gt; 
            &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"white"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/defs&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"100%"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"50%"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"red"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"100%"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"50%"&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;"50%"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"white"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;circle&lt;/span&gt; &lt;span class="na"&gt;cx=&lt;/span&gt;&lt;span class="s"&gt;'15%'&lt;/span&gt; &lt;span class="na"&gt;cy=&lt;/span&gt;&lt;span class="s"&gt;'25%'&lt;/span&gt; &lt;span class="na"&gt;r=&lt;/span&gt;&lt;span class="s"&gt;'30'&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;'white'&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;circle&lt;/span&gt; &lt;span class="na"&gt;cx=&lt;/span&gt;&lt;span class="s"&gt;'20%'&lt;/span&gt; &lt;span class="na"&gt;cy=&lt;/span&gt;&lt;span class="s"&gt;'25%'&lt;/span&gt; &lt;span class="na"&gt;r=&lt;/span&gt;&lt;span class="s"&gt;'30'&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;'red'&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"600 -100 1000 1800"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;use&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#white-star"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;use&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#white-star"&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;"-20%"&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;"10%"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;use&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#white-star"&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;"20%"&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;"10%"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;use&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#white-star"&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;"-12.5%"&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;"22%"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;use&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#white-star"&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;"12.5%"&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;"22%"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;üéâ Good job reaching here thus far!&lt;/p&gt;

&lt;p&gt;ü•≥ We managed to create SVGs of &lt;strong&gt;4 different SEA country flags using code!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;üëâ You can find all the &lt;code&gt;.svg&lt;/code&gt; files covered &lt;a href="https://github.com/lyqht/intro-to-svg-slides/tree/main/public/svg/flags"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For the rest of the article, I promise you the content would be much &lt;em&gt;lighter&lt;/em&gt;! üòä Now, let's move on to creating SVG graphics using &lt;strong&gt;Design Tools&lt;/strong&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#create-svg-with-design-tools"&gt;
  &lt;/a&gt;
  üé® Create SVG with Design Tools
&lt;/h2&gt;

&lt;p&gt;Common Design Tools used to create SVG include&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.figma.com"&gt;Figma&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.sketch.com/"&gt;Sketch&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.adobe.com/sg/products/illustrator.html"&gt;Illustrator&lt;/a&gt; &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Out of the 3 options, Figma is free and also accessible on any platform, so I will share with you a very short intro on Figma on creating graphics using &lt;strong&gt;Paths,&lt;/strong&gt; and &lt;strong&gt;exporting them as SVG&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;üëâ &lt;strong&gt;Duplicate the Figma demo file &lt;a href="https://www.figma.com/community/file/1042361058690524745/intro-to-svg-shapes"&gt;here&lt;/a&gt;&lt;/strong&gt;. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚≠ê Pro tip: To edit any path, click on a path and press the 'Enter' key.&lt;br&gt;
Try playing around with the paths that are in the file!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#straight-paths"&gt;
  &lt;/a&gt;
  Straight Paths
&lt;/h3&gt;

&lt;p&gt;Using the &lt;strong&gt;Pen Tool (P key) üñä&lt;/strong&gt;, you can easily create straight paths and form polygons, polylines and shapes like the low-poly bear!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eRoPfwoi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637042456734/PPAXvKG_S.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eRoPfwoi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637042456734/PPAXvKG_S.gif" alt="Figma-Pentool-demo.gif" width="360" height="240"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#curved-paths"&gt;
  &lt;/a&gt;
  Curved Paths
&lt;/h3&gt;

&lt;p&gt;After creating straight paths with the Pen Tool, you can use the &lt;strong&gt;Bend Tool (Ctrl Key)&lt;/strong&gt; to create a &lt;strong&gt;Bezier Curve&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tjTe0r8Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637042292395/-Lg_hGg97.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tjTe0r8Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637042292395/-Lg_hGg97.png" alt="Bezier Curve Handles On Figma" width="187" height="151"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Handles will appear, connected to the start and end coordinate of the path that you have selected. This is how shapes like the bunny's round head &amp;amp; ears are created!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AH25hibj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637042606762/HtxhCtyTq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AH25hibj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637042606762/HtxhCtyTq.gif" alt="Figma-BendTool-demo.gif" width="360" height="240"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another type of curved Path would be the &lt;strong&gt;Arc&lt;/strong&gt;. After creating an Ellipse, you can hover over the ellipse path to use the &lt;strong&gt;Arc Tool&lt;/strong&gt; to create an Arc. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TEgJDfW6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637042177526/XmtlqpiaA.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TEgJDfW6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637042177526/XmtlqpiaA.gif" alt="Figma_Arc_Demo.gif" width="360" height="240"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#exporting-the-svg"&gt;
  &lt;/a&gt;
  Exporting the SVG
&lt;/h3&gt;

&lt;p&gt;Once you're done creating your fancy shapes and graphics, you can choose to export them easily as a SVG file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s5VTN6Lb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637051786561/MiG6y2CE4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s5VTN6Lb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637051786561/MiG6y2CE4.png" alt="Exporting SVG" width="691" height="732"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;That sums up how you can create SVG from scratch either using Code or Design Tools! Personally I would recommend you to create graphics using Design Tools because having GUI just makes it so much easier to &lt;strong&gt;visualize what you're actually doing&lt;/strong&gt;. The downside of it is that you have less control over the result SVG element nodes inside your graphic. This may pose a problem if you try to do animation or optimization later on, but if you're just doing &lt;strong&gt;static&lt;/strong&gt; SVG, it's much easier to just use a design tool to create SVG. &lt;/p&gt;

&lt;p&gt;Of course, if you don't want to create SVG from scratch at all, there are plenty of online tools to generate SVG of common shapes for us!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#generate-svg"&gt;
  &lt;/a&gt;
  Generate SVG
&lt;/h2&gt;

&lt;p&gt;üîñ There's an &lt;a href="https://www.smashingmagazine.com/2021/03/svg-generators"&gt;extensive list of SVG generators by Smashing Magazine&lt;/a&gt; that you can check out.&lt;/p&gt;

&lt;p&gt;During the talk, I have shown a demo for just two generators that were listed there because I found them relevant to what I've been reading recently.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://squircley.app/"&gt;Squicley&lt;/a&gt; ‚Üí provides configuration for you to generate SVG squircles, a shape that is similar to rounded circles but not identical. Thought this was a pretty funny concept of shape to introduce to you all üòÑ Apparently, &lt;a href="https://99percentinvisible.org/article/circling-square-designing-squircles-instead-rounded-rectangles/"&gt;this is what makes Apple hardware more distinct than others&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WYCvMR2L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://99percentinvisible.org/app/uploads/2017/10/not-apple-728x347.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WYCvMR2L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://99percentinvisible.org/app/uploads/2017/10/not-apple-728x347.png" alt="https://99percentinvisible.org/app/uploads/2017/10/not-apple-728x347.png" width="728" height="347"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://SVGBackgrounds.com"&gt;SVGBackgrounds&lt;/a&gt; ‚Üí provides you many SVG backgrounds you can customize to be used for your next project. I also previously made a Tweet thread on how you can use it and why you should use it.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GuSMczH9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/tweet_video_thumb/FA0DK5AVUAQzK_G.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ofJ2lUIk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1441783883456942080/vV37mSqv_normal.jpg" alt="Estee Tey üêßüåª profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Estee Tey üêßüåª
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @estee_tey
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Say goodbye to blurry, pixelated pattern backgrounds üò≤&lt;br&gt;&lt;br&gt;SVGBackgrounds by &lt;a href="https://twitter.com/MattVisiwig"&gt;@MattVisiwig&lt;/a&gt; is a great tool for both no-coders &amp;amp; devs to easily create backgrounds that look good ‚ú® no matter its size.&lt;br&gt;&lt;br&gt;Here are the features at a glance üëá&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/design"&gt;#design&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/css"&gt;#css&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/svg"&gt;#svg&lt;/a&gt; &lt;br&gt;&lt;a href="https://twitter.com/hashtag/DEVCommunity"&gt;#DEVCommunity&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/NoCode"&gt;#NoCode&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      00:00 AM - 04 Oct 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1444814549341782018" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1444814549341782018" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1444814549341782018" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Aside from generating SVG, we can also extract SVG that we see on websites using the Inspector ‚ú®&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#extract-svg-from-websites"&gt;
  &lt;/a&gt;
  Extract SVG from websites
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ö†Ô∏è &lt;strong&gt;Important Note&lt;/strong&gt;: Please check if you can use the extracted SVG without attribution.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For extracting SVG from websites, we will use our good old &lt;a href="https://esteetey.dev/navigate-the-frontend-easily-with-the-inspector"&gt;Element Inspector&lt;/a&gt; to do it! Let's try it out on &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest's website&lt;/a&gt; since they have really beautiful flowers this year üå∫&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cdn.hashnode.com/res/hashnode/image/upload/v1637061717448/lr_8B12KI.gif"&gt;Hacktoberfest-Inspector-Demo GIF&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Ctrl+F &lt;code&gt;"&amp;lt;svg&amp;gt;"&lt;/code&gt; to find the SVG element that you want. &lt;/li&gt;
&lt;li&gt;Once the highlighted area matches the SVG that you're targeting, right click the element and choose "Copy Element"&lt;/li&gt;
&lt;li&gt;The result will be something like this, which you can paste in a new &lt;code&gt;.svg&lt;/code&gt; file.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Op6W4Og0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/lyqht/intro-to-svg-slides/main/public/svg/hacktoberfest.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Op6W4Og0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/lyqht/intro-to-svg-slides/main/public/svg/hacktoberfest.svg" alt="Hacktoberfest flowers svg" width="200" height="600"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#bonus-helpful-tools-for-svg"&gt;
  &lt;/a&gt;
  üåü Bonus Helpful Tools for SVG
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Optimization of SVG file size: &lt;a href="https://jakearchibald.github.io/svgomg/"&gt;SVGOMG&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you use design tools to create SVG or extract SVG from websites, chances are that most of them are not optimized in file sizes.&lt;/li&gt;
&lt;li&gt;There's a handy tool called &lt;a href="https://jakearchibald.github.io/svgomg/"&gt;SVGOMG&lt;/a&gt; which has many features you can toggle to help you optimize your file size, and you don't have to understand how all of them work.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can also preview the result and the result file size at the circled area ‚ú®&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--91k6m4D4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637042863065/yHOCa9jBO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--91k6m4D4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637042863065/yHOCa9jBO.png" alt="Extract-SVG-From-Hacktoberfest-Website-Demo.png" width="880" height="439"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Visual Studio Code Extension: &lt;a href="https://marketplace.visualstudio.com/items?itemName=jock.svg"&gt;SVG&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Provides auto-completion, SVG Live Preview and Export PNG&lt;/li&gt;
&lt;li&gt;You can also minify the SVG code and remove unnecessary code
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;For React Devs: &lt;a href="https://svg2jsx.com/"&gt;Convert SVG to JSX&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can paste SVG code here to be converted to either functional or class component syntax.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#frequently-asked-questions-faq"&gt;
  &lt;/a&gt;
  Frequently asked questions (FAQ)
&lt;/h2&gt;

&lt;p&gt;Q) I see &lt;code&gt;xmlns&lt;/code&gt; attributes are commonly used on SVG elements, but you didn't use them in your talk at all, are they actually needed?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;svg xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg"&amp;gt;&amp;lt;/svg&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A) If you are using them as inline SVG, you don't need to include those. You only need those attributes if you are embedding them using the &lt;strong&gt;img element&lt;/strong&gt;. Here's a useful &lt;a href="https://stackoverflow.com/questions/18467982/are-svg-parameters-such-as-xmlns-and-version-needed"&gt;StackOverflow thread&lt;/a&gt; that answers this.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#exploring-further"&gt;
  &lt;/a&gt;
  Exploring further
&lt;/h2&gt;

&lt;p&gt;As you try to experiment with SVG in code further by using JavaScript and so on, you will start to realize that creating graphics in code requires &lt;strong&gt;a lot of math&lt;/strong&gt; üòÇ&lt;/p&gt;

&lt;p&gt;Here are some nice tutorials for you to try out to create more complex SVG that include good explanations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.aleksandrhovhannisyan.com/blog/svg-tutorial-how-to-code-svg-icons-by-hand/"&gt;SVG Tutorial: How to Code SVG Icons by Hand&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/thormeier/how-to-simply-create-beautiful-rosette-patterns-with-javascript-and-svg-3h4i"&gt;Create beautiful rosette patterns with JavaScript üñåÔ∏èüåº&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://uxdesign.cc/star-rating-make-svg-great-again-d4ce4731347e"&gt;Star Rating ‚Äî Make SVG Great Again&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#thats-a-wrap-folks"&gt;
  &lt;/a&gt;
  That's a wrap folks! üéâ
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qeev9EmH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/eoM1uCVuXtkAAAAM/yay-excited.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qeev9EmH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/eoM1uCVuXtkAAAAM/yay-excited.gif" alt="birds excited" width="220" height="124"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for reading, hope you enjoyed the article! If you have any questions or feedback for me, please leave them below, I'll attend to them shortly üòä&lt;/p&gt;

&lt;p&gt;If you find the article awesome, hit the &lt;em&gt;reactions&lt;/em&gt; üß° and &lt;em&gt;share&lt;/em&gt; it üê¶~&lt;/p&gt;

&lt;p&gt;To stay updated whenever I post new stuff, follow me on &lt;a href="https://twitter.com/estee_tey"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>tutorial</category>
      <category>svg</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Kafka vs. RabbitMQ: Comparing Node.js message brokers</title>
      <author>Matt Angelosanto</author>
      <pubDate>Tue, 16 Nov 2021 14:53:35 +0000</pubDate>
      <link>https://dev.to/logrocket/kafka-vs-rabbitmq-comparing-nodejs-message-brokers-1lkc</link>
      <guid>https://dev.to/logrocket/kafka-vs-rabbitmq-comparing-nodejs-message-brokers-1lkc</guid>
      <description>&lt;p&gt;&lt;strong&gt;Written by &lt;a href="https://blog.logrocket.com/author/wisdomekpot/"&gt;Wisdom Ekpot&lt;/a&gt;&lt;/strong&gt; ‚úèÔ∏è&lt;/p&gt;

&lt;p&gt;A message broker is a computer program that allows software, systems, and services to communicate with each other and exchange data, taking incoming messages from applications and performing actions on them.&lt;/p&gt;

&lt;p&gt;By using message brokers, producers and consumers can communicate with the broker using a standard protocol for communication, with the broker handling all the data's state management and tracking.&lt;/p&gt;

&lt;p&gt;This means all consumer applications do not need to take on the responsibility of managing state, tracking, and the message delivery complexity of the message broker itself. Message brokers rely on a component called message queues that store messages until a consumer service can process them.&lt;/p&gt;

&lt;p&gt;In this article, we‚Äôll compare two Node.js message brokers: Apache Kafka and RabbitMQ. We‚Äôll review the basics of message broker patterns, what each message broker provides, associated use cases, and more, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://blog.logrocket.com/kafka-vs-rabbitmq-comparing-node-js-message-brokers/"&gt;RabbitMQ vs. Kafka architecture&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://blog.logrocket.com/kafka-vs-rabbitmq-comparing-node-js-message-brokers/"&gt;RabbitMQ vs. Kafka performance&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://blog.logrocket.com/kafka-vs-rabbitmq-comparing-node-js-message-brokers/"&gt;RabbitMQ vs. Kafka message retention&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://blog.logrocket.com/kafka-vs-rabbitmq-comparing-node-js-message-brokers/"&gt;RabbitMQ vs. Kafka message routing&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://blog.logrocket.com/kafka-vs-rabbitmq-comparing-node-js-message-brokers/"&gt;RabbitMQ vs. Kafka monitoring&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://blog.logrocket.com/kafka-vs-rabbitmq-comparing-node-js-message-brokers/"&gt;RabbitMQ vs. Kafka consumer modes&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://blog.logrocket.com/kafka-vs-rabbitmq-comparing-node-js-message-brokers/"&gt;RabbitMQ vs. Kafka consumer modes&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://blog.logrocket.com/kafka-vs-rabbitmq-comparing-node-js-message-brokers/"&gt;RabbitMQ vs. Kafka topology&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#message-broker-communication-patterns"&gt;
  &lt;/a&gt;
  Message broker communication patterns
&lt;/h2&gt;

&lt;p&gt;Message brokers have two forms of communication, which we will discuss:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Point-to-point messaging&lt;/li&gt;
&lt;li&gt; Publish/subscribe messaging&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#pointtopoint-messaging"&gt;
  &lt;/a&gt;
  Point-to-point messaging
&lt;/h3&gt;

&lt;p&gt;The point-to-point messaging method of communication in message brokers uses a distribution pattern utilized in message queues with a one-to-one relationship between the message‚Äôs sender and receiver.&lt;/p&gt;

&lt;p&gt;Here, messages in the queue are sent to only one recipient and consumed once.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HkzcUYvD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/11/Point-to-point-messaging-diagram.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HkzcUYvD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/11/Point-to-point-messaging-diagram.png" alt="Point-To-Point Messaging Diagram With Two Producers, A Queue, And A Consumer" width="730" height="271"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#publishsubscribe-messaging"&gt;
  &lt;/a&gt;
  Publish/subscribe messaging
&lt;/h3&gt;

&lt;p&gt;The publish/subscribe messaging method of communication means any message published to a topic by a producer is immediately received by all of the subscribers to the topic.&lt;/p&gt;

&lt;p&gt;Here, all messages publish to a topic and distribute to all applications subscribed to the topic.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WykJ8Fx6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/11/Publish-subscribe-messaging.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WykJ8Fx6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/11/Publish-subscribe-messaging.png" alt="Publish/Subscribe Messaging Diagram, Including A Producer, Exchanger, Two Queues, And Two Consumers " width="730" height="425"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-apache-kafka"&gt;
  &lt;/a&gt;
  What is Apache Kafka?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://blog.logrocket.com/real-time-data-streaming-app-apache-kafka/"&gt;Apache Kafka is an open source, distributed streaming platform&lt;/a&gt; that gives users the ability to develop real-time, &lt;a href="https://blog.logrocket.com/methods-for-microservice-communication/#event-driven-communication"&gt;event-driven applications&lt;/a&gt;. This broker-based solution operates by maintaining streams of data as it records within a cluster of servers.&lt;/p&gt;

&lt;p&gt;Because it runs as a cluster that can span multiple servers or even multiple data centers, Kafka provides data persistence by storing streams of records (messages) across multiple server instances in topics. In Kafka, a topic is a group of one or more partitions across a Kafka broker.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kafka-apis"&gt;
  &lt;/a&gt;
  Kafka APIs
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#kafka-producer-api"&gt;
  &lt;/a&gt;
  Kafka producer API
&lt;/h4&gt;

&lt;p&gt;Kafka‚Äôs producer API allows an application to produce streams of data, including creating records and producing them to topics where topics are an ordered list of events.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#kafka-consumer-api"&gt;
  &lt;/a&gt;
  Kafka consumer API
&lt;/h4&gt;

&lt;p&gt;The Kafka consumer API subscribes to one or more topics and listens to the data in real time. It can also solely consume old data saved to a topic.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#kafka-streams-api"&gt;
  &lt;/a&gt;
  Kafka streams API
&lt;/h4&gt;

&lt;p&gt;The streams API consumes from a topic or topics and then analyses or transforms the data in real time. It then produces the resulting streams to a topic.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#kafka-connector-api"&gt;
  &lt;/a&gt;
  Kafka connector API
&lt;/h4&gt;

&lt;p&gt;The connector API enables developers to write connectors, which are reusable producers and consumers. The connector API also allows implementing connectors or nodes that continually pull from a source system or application into Kafka or push from Kafka into an application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kafka-use-cases"&gt;
  &lt;/a&gt;
  Kafka use cases
&lt;/h3&gt;

&lt;p&gt;Using Kafka is best for messaging, processing streams of records in real time, and publishing/subscribing to streams of event records.&lt;/p&gt;

&lt;p&gt;It‚Äôs also great for event sourcing and commit logs. Event sourcing is an application style where data state changes are logged in a time-order sequence of records. These data changes are an immutable sequence or log of events.&lt;/p&gt;

&lt;p&gt;Commit logs, on the other hand, use Kafka as an external commit log for distributed systems.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-rabbitmq"&gt;
  &lt;/a&gt;
  What is RabbitMQ?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://blog.logrocket.com/understanding-message-queuing-systems-using-rabbitmq/"&gt;RabbitMQ implements the advanced message queuing protocol (AMQP) model&lt;/a&gt;. This means RabbitMQ accepts messages from a producer and then delivers them to consumers, acting as a middleman to reduce the workload taken in by web application servers.&lt;/p&gt;

&lt;p&gt;In RabbitMQ, the producer‚Äôs messages do not publish directly to the queues but to an exchange. An exchange delivers messages to queues based on the exchange types, and the consumer service gets the data from the queues.&lt;/p&gt;

&lt;p&gt;This means that when publishing messages, producers must specify the type of exchange to use.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#types-of-rabbitmq-exchanges"&gt;
  &lt;/a&gt;
  Types of RabbitMQ exchanges
&lt;/h3&gt;

&lt;p&gt;There are four types of exchanges that RabbitMQ offers: fanout, direct, topic, and header.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#rabbitmqs-fanout-exchange"&gt;
  &lt;/a&gt;
  RabbitMQ‚Äôs fanout exchange
&lt;/h4&gt;

&lt;p&gt;The fanout exchange duplicates a message and sends it to every available queue.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#rabbitmqs-direct-exchange"&gt;
  &lt;/a&gt;
  RabbitMQ‚Äôs direct exchange
&lt;/h4&gt;

&lt;p&gt;The direct exchange sends messages to queues whose binding key matches the routing key of a message.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#rabbitmqs-topic-exchange"&gt;
  &lt;/a&gt;
  RabbitMQ‚Äôs topic exchange
&lt;/h4&gt;

&lt;p&gt;RabbitMQ‚Äôs topic exchange provides a partial match between a routing key and a binding key. The messages then publish with routing keys containing a series of words separated by a period.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#rabbitmqs-header-exchange"&gt;
  &lt;/a&gt;
  RabbitMQ‚Äôs header exchange
&lt;/h4&gt;

&lt;p&gt;RabbitMQ‚Äôs header exchange provides a routing key that is completely ignored and messages move through the system according to the header.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rabbitmq-use-cases"&gt;
  &lt;/a&gt;
  RabbitMQ use cases
&lt;/h3&gt;

&lt;p&gt;Some of RabbitMQ‚Äôs use cases include the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Complex routing to consumers&lt;/li&gt;
&lt;li&gt;  Messaging&lt;/li&gt;
&lt;li&gt;  Sending large/many emails&lt;/li&gt;
&lt;li&gt;  Delivering notifications&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;RabbitMQ can also be used for applications that support legacy protocols. RabbitMQ allows clients to connect over a range of different open and standardized protocols such as STOMP and MQTT.&lt;/p&gt;

&lt;p&gt;RabbitMQ also enables communication between two or multiple microservices. Most users use RabbitMQ for microservices where it acts as a middleman for passing data between different services, avoiding bottlenecks when passing messages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comparing-rabbitmq-and-kafka"&gt;
  &lt;/a&gt;
  Comparing RabbitMQ and Kafka
&lt;/h2&gt;

&lt;p&gt;The major difference between Apache Kafka and RabbitMQ is that RabbitMQ is a message broker, while Kafka is a distributed streaming platform.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rabbitmq-vs-kafka-architecture"&gt;
  &lt;/a&gt;
  RabbitMQ vs. Kafka architecture
&lt;/h3&gt;

&lt;p&gt;In terms of architecture, Kafka uses a large amount of publish/subscription messages and a flow platform that is fast. Because messages use server clusters, Kafka can store various records in a topic or topics.&lt;/p&gt;

&lt;p&gt;It also consists of multiple brokers, topics, and partitions while providing durable and scalable high-volume publish/subscription messages.&lt;/p&gt;

&lt;p&gt;For RabbitMQ, the message broker involves point-to-point messaging and publish/subscription communication designs. It consists of queues and its communication can be synchronous or asynchronous.&lt;/p&gt;

&lt;p&gt;By ensuring a constant delivery of messages from the exchanger to the consumer, there is no direct communication between the producer and the consumer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rabbitmq-vs-kafka-performance"&gt;
  &lt;/a&gt;
  RabbitMQ vs. Kafka performance
&lt;/h3&gt;

&lt;p&gt;In terms of performance, Kafka offers higher performance than RabbitMQ because it uses a sequential disk I/O to boost its performance, thus making it the best option to form implementing queues.&lt;/p&gt;

&lt;p&gt;This doesn‚Äôt mean that RabbitMQ is slow, as RabbitMQ can also process over a million messages per second. However, it does require more system resources for processing.&lt;/p&gt;

&lt;p&gt;Most times RabbitMQ is combined with tools like Apache Cassandra to increase its performance and credibility.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rabbitmq-vs-kafka-message-retention"&gt;
  &lt;/a&gt;
  RabbitMQ vs. Kafka message retention
&lt;/h3&gt;

&lt;p&gt;RabbitMQ ejects messages as soon as the consumer acknowledges the message. This particular behavior cannot be changed because it is a part of the message broker.&lt;/p&gt;

&lt;p&gt;Kafka, on the other hand, retains messages based on the configured timeout per topic. It is not concerned if the consumer acknowledges a message or not since it serves as a message log. Additionally, retention can be configured.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros-and-cons-of-rabbitmq-message-retention"&gt;
  &lt;/a&gt;
  Pros and cons of RabbitMQ message retention
&lt;/h4&gt;

&lt;p&gt;RabbitMQ ensures messages get to the consumer once they are requested. However, all messages are lost as soon as the consumer successfully consumes the message. Also, the behavior of evicting all messages as soon as they are consumed cannot be changed.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros-and-cons-of-kafka-message-retention"&gt;
  &lt;/a&gt;
  Pros and cons of Kafka message retention
&lt;/h4&gt;

&lt;p&gt;The only downside of using Kafka for message retention is that messages are lost immediately once the configured time finishes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rabbitmq-vs-kafka-message-routing"&gt;
  &lt;/a&gt;
  RabbitMQ vs. Kafka message routing
&lt;/h3&gt;

&lt;p&gt;In terms of routing, RabbitMQ routes messages to subscribers of the message exchange according to the subscriber-based routing rules. Message routing in RabbitMQ can vary from being a fanout, topic, direct, or header type of exchange.&lt;/p&gt;

&lt;p&gt;Kafka doesn‚Äôt permit any consumer to filter messages in the topic before querying them. In Kafka, any subscribed consumer gets all the messages in a division without error, and messages are pushed to topics with consumers subscribing to the topic.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros-and-cons-of-rabbitmq-message-routing"&gt;
  &lt;/a&gt;
  Pros and cons of RabbitMQ message routing
&lt;/h4&gt;

&lt;p&gt;RabbitMQ routes messages to subscribers based on a defined routing rule, and routing keys are used for message routing. However, only consumers with the same routing keys or headers have access to a message.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros-and-cons-of-kafka-message-routing"&gt;
  &lt;/a&gt;
  Pros and cons of Kafka message routing
&lt;/h4&gt;

&lt;p&gt;On the other hand, Kafka does not allow consumers to filter messages in a topic before polling them. And, Kafka requires an extra service called &lt;code&gt;Kafka Stream Jobs&lt;/code&gt; that helps read messages from a topic and sends it to another topic the consumer can subscribe to.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rabbitmq-vs-kafka-monitoring"&gt;
  &lt;/a&gt;
  RabbitMQ vs. Kafka monitoring
&lt;/h3&gt;

&lt;p&gt;RabbitMQ provides a user-friendly user interface for monitoring activities directly on a web browser. Activities like queues, connections, channels, exchanges, users, and user permissions can be handled (created, deleted, and listed) and monitored in the browser, providing flexibility.&lt;/p&gt;

&lt;p&gt;Kafka has a number of open source tools for monitoring activities and administrative functionality, such as the Yahoo Kafka manager and KafDrop.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros-and-cons-of-rabbitmq-monitoring"&gt;
  &lt;/a&gt;
  Pros and cons of RabbitMQ monitoring
&lt;/h4&gt;

&lt;p&gt;RabbitMQ comes with a built-in management UI that exposes a number of metrics. However, too many metrics are disclosed on the first screen, thus making it difficult to maintain and keep track of data changes.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros-and-cons-of-kafka-monitoring"&gt;
  &lt;/a&gt;
  Pros and cons of Kafka monitoring
&lt;/h4&gt;

&lt;p&gt;You can install different management tools for different kinds of metrics in Kafka, such as, if you want to monitor the rate of consumers for lags, the best tool for this would be Burrow*&lt;em&gt;.&lt;/em&gt;*&lt;/p&gt;

&lt;p&gt;However, you must also install other open source tools for monitoring activities, leading to different monitoring tools for monitoring different activities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rabbitmq-vs-kafka-consumer-modes"&gt;
  &lt;/a&gt;
  RabbitMQ vs. Kafka consumer modes
&lt;/h3&gt;

&lt;p&gt;RabbitMQ uses the smart broker/dumb consumer model, meaning the message broker delivers messages to the consumer and consistently keeps track of their status.&lt;/p&gt;

&lt;p&gt;RabbitMQ also manages the distribution of the messages to the consumers and the removal of the messages from queues once they are acknowledged.&lt;/p&gt;

&lt;p&gt;Conversely, Kafka uses the dumb broker/smart consumer model, meaning it doesn‚Äôt monitor the messages each consumer reads or acknowledges. Rather, it retains unread messages only, preserving all messages for a set amount of time provided in the config.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros-and-cons-of-rabbitmq-consumer-modes"&gt;
  &lt;/a&gt;
  Pros and cons of RabbitMQ consumer modes
&lt;/h4&gt;

&lt;p&gt;RabbitMQ ensures consumer nodes acknowledge data before it is evicted and it keeps track of each consumer status.&lt;/p&gt;

&lt;p&gt;However, data is evicted once the consumer acknowledges the data and is only consumed by the consumer with the same routing key.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros-and-cons-of-kafka-consumer-model"&gt;
  &lt;/a&gt;
  Pros and cons of Kafka consumer model
&lt;/h4&gt;

&lt;p&gt;With Kafka, messages are retained even when a consumer node has the data and Kafka does not care about data acknowledgment.&lt;/p&gt;

&lt;p&gt;Conversely, messages are lost once the configured time is reached.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rabbitmq-vs-kafka-topology"&gt;
  &lt;/a&gt;
  RabbitMQ vs. Kafka topology
&lt;/h3&gt;

&lt;p&gt;RabbitMQ sends all messages to an exchanger where they are routed to various queue bindings for the consumer‚Äôs use.&lt;/p&gt;

&lt;p&gt;Kafka, on the other hand, uses the publish/subscription topology sending messages across the streams to the correct topics.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Although RabbitMQ and Kafka are often used interchangeably, both technologies are implemented differently. Kafka tends to be the best option for larger distributed systems while RabbitMQ is best for systems with very low latency requirements.&lt;/p&gt;

&lt;p&gt;In terms of engineering, both tools have completely different designs, which doesn‚Äôt make it a good match for comparison.&lt;/p&gt;

&lt;p&gt;If you are looking at working with distributed systems, Kafka is the best fit, while RabbitMQ is the best fit for a traditional message broker service.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#200s-only-heavycheckmark-monitor-failed-and-slow-network-requests-in-production"&gt;
  &lt;/a&gt;
  200‚Äôs only ‚úîÔ∏è Monitor failed and slow network requests in production
&lt;/h2&gt;

&lt;p&gt;Deploying a Node-based web app or website is the easy part. Making sure your Node instance continues to serve resources to your app is where things get tougher. If you‚Äôre interested in ensuring requests to the backend or third party services are successful, &lt;a href="https://logrocket.com/signup/"&gt;try LogRocket&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1zhbpx-x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2019/12/network-request-filter-2-1.png" alt="LogRocket Network Request Monitoring" width="880" height="348"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt; is like a DVR for web apps, recording literally everything that happens on your site. Instead of guessing why problems happen, you can aggregate and report on problematic network requests to quickly understand the root cause.&lt;/p&gt;

&lt;p&gt;LogRocket instruments your app to record baseline performance timings such as page load time, time to first byte, slow network requests, and also logs Redux, NgRx, and Vuex actions/state. &lt;a href="https://logrocket.com/signup/"&gt;Start monitoring for free&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>node</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>How TO DELETE DATA OVER THE INTERNET IN FLUTTER</title>
      <author>Afolayan Ademola Segun</author>
      <pubDate>Tue, 16 Nov 2021 14:48:17 +0000</pubDate>
      <link>https://dev.to/har4lionkest/how-to-delete-data-over-the-internet-in-flutter-25nj</link>
      <guid>https://dev.to/har4lionkest/how-to-delete-data-over-the-internet-in-flutter-25nj</guid>
      <description>&lt;p&gt;Hi, I am  &lt;a href="https://kest.hashnode.dev/"&gt;Kest&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt;If you have been following my  &lt;a href="https://kest.hashnode.dev/"&gt;CRUD&lt;/a&gt; operation tutorial series you will already know without the title that this is the last part of the series on CRUD operation.&lt;/p&gt;

&lt;p&gt;Users are used to this feature (ability to delete input fields) that are now available in almost every application that involves inputting fields. They do not only want to be able to edit their input, they also want to be able to delete it.  &lt;/p&gt;

&lt;p&gt;This tutorial which is the last of the four CRUD operation, is the simplest of them all, so grab a chair ü™ë and a drink üçπü•§ let's go over it.&lt;/p&gt;

&lt;p&gt;In just three simple steps, you will be able to implement the Delete operation in flutter your application, here are the steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Add the Http Package.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Delete data on the server.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update the screen.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;üòØüòØüòØ is that it?  Yes, it's as simple as that. Let go deep into the steps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-add-the-http-package"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Add the Http Package.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;As usual to install the http package, add it to the dependencies section of the pubspec.yaml file. You can find the latest version of the http package on pub.dev.&lt;br&gt;
That famous pubspec.yaml file is pronounced(pubspec dot yamul or yamil depending on where you coding from... üòÇüòÇüòÇ).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2delete-data-on-the-server"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2.Delete data on the server.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Using  the JSONPlaceholder as a case study, we want to delete a particular album. we will make use of the http.delete() method.&lt;br&gt;
 Note that this requires the id of the album that you want to delete. For this example, use something you already know, for example id = 1.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    Future&amp;lt;http.Response&amp;gt; deleteAlbum(String id) async {
       final http.Response response = await http.delete(        
       Uri.parse
     ('https://jsonplaceholder.typicode.com/albums/$id'),
        headers: &amp;lt;String, String&amp;gt;{
       'Content-Type': 'application/json; charset=UTF-8',
         },
       );
       return response;
      }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;The http.delete() method returns a Future that contains a Response.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Future is a core Dart class for working with async operations. A Future object represents a potential value or error that will be available at some time in the future.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The http.Response class contains the data received from a successful http call.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The deleteAlbum() method takes an id argument that is needed to identify the data to be deleted from the server.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3update-the-screen"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3.Update the screen.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;In order to check whether the data has been deleted or not. First, fetch the data from the JSONPlaceholder using the http.get() method, and display it on the screen. (See my tutorial on how to fetch Data from the internet  &lt;a href="https://kest.hashnode.dev/how-to-fetch-live-data-from-the-internet-in-flutter"&gt;here&lt;/a&gt; for a complete example). You should now have a Delete Data button that, when pressed, calls the deleteAlbum() method.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  Column(
      mainAxisAlignment: MainAxisAlignment.center,
      children: &amp;lt;Widget&amp;gt;[
        Text(snapshot.data?.title ?? 'Deleted'),
        ElevatedButton(
           child: const Text('Delete Data'),
           onPressed: () {
              setState(() {
              _futureAlbum =
              deleteAlbum(snapshot.data!.id.toString());
            });
         },
       ),
      ],
     );
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Now, when you click on the Delete Data button, the deleteAlbum() method is called and the id you are passing is the id of the data that you retrieved from the internet. This means you are going to delete the same data that you fetched from the internet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Returning a response from the deleteAlbum() method&lt;/strong&gt;&lt;br&gt;
Once the delete request has been made, you can return a response from the deleteAlbum() method to notify our screen that the data has been deleted.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   Future&amp;lt;Album&amp;gt; deleteAlbum(String id) async {
        final http.Response response = await http.delete(
          Uri.parse('https://jsonplaceholder.typicode.com/albums/$id'),
        headers: &amp;lt;String, String&amp;gt;{
       'Content-Type': 'application/json; charset=UTF-8',
           },
          );
        if (response.statusCode == 200) {
       // If the server did return a 200 OK response,
      // then parse the JSON. After deleting,
      // you'll get an empty JSON `{}` response.
      // Don't return `null`, otherwise `snapshot.hasData`
      // will always return false on `FutureBuilder`.
      return Album.fromJson(jsonDecode(response.body));
      } else {
      // If the server did not return a "200 OK response",
      // then throw an exception.
      throw Exception('Failed to delete album.');
        }  
       }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;FutureBuilder() now rebuilds when it receives a response. Since the response won‚Äôt have any data in its body if the request was successful, the Album.fromJson() method creates an instance of the Album object with a default value (null in our case). This behavior can be altered in any way you wish.&lt;/p&gt;

&lt;p&gt;Yeah üï∫üï∫üï∫üï∫üï∫&lt;/p&gt;

&lt;p&gt;That‚Äôs all! Now you‚Äôve got a function that deletes the data from the internet.&lt;/p&gt;

&lt;p&gt;Congratulations. If you have been following you should be able to perform the CRUD operations in flutter now. &lt;/p&gt;

&lt;p&gt;kindly follow me on &lt;a href="https://twitter.com/Har4lionkest?s=09"&gt;Twitter&lt;/a&gt;  for More...  &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Shortest way to find a buggy commit with Git</title>
      <author>Abanoub Asaad</author>
      <pubDate>Tue, 16 Nov 2021 14:23:37 +0000</pubDate>
      <link>https://dev.to/abanoub7asaad/shortest-way-to-find-a-buggy-commit-with-git-21md</link>
      <guid>https://dev.to/abanoub7asaad/shortest-way-to-find-a-buggy-commit-with-git-21md</guid>
      <description>&lt;p&gt;A couple of days ago, one of my colleagues at &lt;a href="https://robustastudio.com/"&gt;robusta&lt;/a&gt; recommended an interesting &lt;strong&gt;git command&lt;/strong&gt; to use, and it was my first time hearing about it. I started searching, and then I decided that I would write a summary about it.&lt;/p&gt;

&lt;p&gt;Have you ever been into a situation where you are writing your code, and you push commits after commits, and after a while, you go around your project and find a bug, Now this bug could happen anytime between your last commit and the last 1000 commits, so this makes it extremely hard to track down what happened and from where did you know the bug occurred? So instead of going one commit by one commit, which is time-consuming and will probably frustrate you because it's a &lt;a href="https://en.wikipedia.org/wiki/Linear_search"&gt;linear search&lt;/a&gt;, &lt;strong&gt;git bisect&lt;/strong&gt; will be your answer. &lt;/p&gt;

&lt;p&gt;In this blog, we will explore the &lt;code&gt;git bisect&lt;/code&gt; command, and how it works, how to use it, and other useful commands to reduce your time of debugging and make you a Git Geek üòé&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-git-bisect"&gt;
  &lt;/a&gt;
  What is git bisect?
&lt;/h2&gt;

&lt;p&gt;git bisect is a way to use a &lt;a href="https://en.wikipedia.org/wiki/Binary_search_algorithm"&gt;binary search&lt;/a&gt; algorithm to find the commit that introduced a bug easily and quickly. It's a very useful command to help you in your process of tracing and debugging. Imagine you have N commits, by using this command, you will find the buggy commit in only log(N) steps! &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you know the &lt;strong&gt;Binary Search&lt;/strong&gt; concept, you can skip the next section.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#quick-overview-about-binary-search"&gt;
  &lt;/a&gt;
  Quick overview about Binary Search
&lt;/h2&gt;

&lt;p&gt;Binary Search is an efficient algorithm for finding an item from a sorted list of items. It works by repeatedly dividing in half the portion of the list that could contain the item until you've narrowed down the possible locations to just one. &lt;/p&gt;

&lt;p&gt;The example below explains the concept of binary search, we need to find &lt;strong&gt;47&lt;/strong&gt; as fast as possible. We can achieve that by:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Dividing the array into two parts, and now the mid is 14, so 14 &amp;lt; 47&lt;br&gt;
&lt;strong&gt;2.&lt;/strong&gt; I will divide the right part and the mid is 45, so 45 &amp;lt; 47&lt;br&gt;
&lt;strong&gt;3.&lt;/strong&gt; I will divide the right part again, and the mid will be 47, so 47 = 47.&lt;/p&gt;

&lt;p&gt;Now we found the desired number &lt;strong&gt;47&lt;/strong&gt; in only &lt;strong&gt;3&lt;/strong&gt; steps using a binary search.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ITycrxlF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zt489kpvzb3bbytslvbc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ITycrxlF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zt489kpvzb3bbytslvbc.gif" alt="Binary Search GIF" width="773" height="406"&gt;&lt;/a&gt;¬©Ô∏è GIF credit : Brilliant.org&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-git-bisect-works"&gt;
  &lt;/a&gt;
  How git bisect works?
&lt;/h2&gt;

&lt;p&gt;After understanding the concept of binary search, &lt;code&gt;git bisect&lt;/code&gt; works in the same way. It allows you to use binary search to find buggy commits. Binary search makes finding things faster, instead of looking at all commits one by one, you would divide your list of commits into two equal parts, you then look at each part and see which part contains the bug, you then continue on this process until you arrive at a single commit. The below image explains that!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yko-yIyp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rrrwphsrijvtmojvo0lz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yko-yIyp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rrrwphsrijvtmojvo0lz.png" alt="illustration" width="651" height="408"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scenario-of-git-bisect"&gt;
  &lt;/a&gt;
  Scenario of git bisect
&lt;/h2&gt;

&lt;p&gt;Let's assume I have a website, and we released the second release yesterday. For example, a button on this website ran successfully in the first version 2 months ago, but it does not work now. And the history has about 300 commits, so how can I know the buggy commit quickly using git bisect?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; &lt;strong&gt;start&lt;/strong&gt; the git bisect session&lt;br&gt;
&lt;strong&gt;2.&lt;/strong&gt; mark a commit as &lt;strong&gt;bad&lt;/strong&gt; "for example, the current one" if this version is broken&lt;br&gt;
&lt;strong&gt;3.&lt;/strong&gt; mark a commit as &lt;strong&gt;good&lt;/strong&gt;, choose a commit that you know is working correctly and mark it as good&lt;br&gt;
&lt;strong&gt;4.&lt;/strong&gt; the git bisect will start to &lt;strong&gt;recommend commits&lt;/strong&gt; "according to the binary search algorithm", and you should mark them as good or bad by compiling the checked-out version and testing it. Until you find the specific commit which makes the bug to fix it in your current release&lt;br&gt;
&lt;strong&gt;5.&lt;/strong&gt; &lt;strong&gt;exit&lt;/strong&gt; from the git bisect tool and start to fix the bug.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The commands of these steps are below in the next two sections!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YB0UcEnp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jxz9mhuowcm74f3umuv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YB0UcEnp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jxz9mhuowcm74f3umuv.png" alt="git bisect sketch" width="880" height="495"&gt;&lt;/a&gt;¬©Ô∏è Image credit : datree.io&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-git-bisect"&gt;
  &lt;/a&gt;
  How to use git bisect?
&lt;/h2&gt;



&lt;h4&gt;
  &lt;a href="#%E2%9C%B6-start-the-git-bisect"&gt;
  &lt;/a&gt;
  ‚ú∂ Start the git bisect
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;$ git bisect start&lt;/code&gt;&lt;br&gt;
This starts the bisect process on our current commit which is "Head".&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#%E2%9C%B6-let-git-bisect-know-about-a-bad-commit"&gt;
  &lt;/a&gt;
  ‚ú∂ Let git bisect know about a bad commit
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;$ git bisect bad&lt;/code&gt;&lt;br&gt;
 The bug is present, so we need to designate it as a bad commit&lt;br&gt;
or you can type:&lt;br&gt;
&lt;code&gt;$ git bisect bad &amp;lt;commit_id&amp;gt;&lt;/code&gt;&lt;br&gt;
for example, the commit_id is &lt;em&gt;3acea60&lt;/em&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#%E2%9C%B6-let-git-bisect-know-about-a-good-commit"&gt;
  &lt;/a&gt;
  ‚ú∂ Let git bisect know about a good commit
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;$ git bisect good &amp;lt;commit_id&amp;gt;&lt;/code&gt;&lt;br&gt;
If this commit is working successfully.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#%E2%9C%B6-exit-the-bisect-tool"&gt;
  &lt;/a&gt;
  ‚ú∂ Exit the bisect tool
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;$ git bisect reset&lt;/code&gt;&lt;br&gt;
After a bisect session, clean up the bisection state and return to the original HEAD.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#%E2%9C%B6-automate-the-bisect-tool"&gt;
  &lt;/a&gt;
  ‚ú∂ Automate the bisect tool
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;$ git bisect run&lt;/code&gt;&lt;br&gt;
If you want to automate the bisect tool, you can use the above command and also read the official &lt;a href="https://git-scm.com/docs/git-bisect"&gt;docs&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;PS: I know how to use it manually, not automaticallyüòÖ&lt;/p&gt;
&lt;/blockquote&gt;



&lt;h2&gt;
  &lt;a href="#7-awesome-debugging-git-commands"&gt;
  &lt;/a&gt;
  7 Awesome debugging git commands
&lt;/h2&gt;



&lt;h3&gt;
  &lt;a href="#git-blame"&gt;
  &lt;/a&gt;
  1Ô∏è‚É£ git blame
&lt;/h3&gt;

&lt;p&gt;If you need to examine the content of any file line by line, you need to use git blame. It helps you to determine who made the changes to a file.&lt;br&gt;
&lt;code&gt;$ git blame &amp;lt;your_file_name&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#git-reset"&gt;
  &lt;/a&gt;
  2Ô∏è‚É£ git reset
&lt;/h3&gt;

&lt;p&gt;If you want to reset the current HEAD to a specified state or commit.&lt;br&gt;
&lt;code&gt;$ git reset --hard &amp;lt;commit_id&amp;gt;&lt;/code&gt;&lt;br&gt;
 To push these changes, you should force them by using:&lt;br&gt;
&lt;code&gt;$ git push -f&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#git-log"&gt;
  &lt;/a&gt;
  3Ô∏è‚É£ git log
&lt;/h3&gt;

&lt;p&gt;To show commit logs in detail or in an organized way.&lt;br&gt;
&lt;code&gt;$ git log&lt;/code&gt;&lt;br&gt;
or&lt;br&gt;
&lt;code&gt;$ git log --oneline&lt;/code&gt;&lt;br&gt;
or&lt;br&gt;
&lt;code&gt;$ git whatchanged&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#git-checkout"&gt;
  &lt;/a&gt;
  4Ô∏è‚É£ git checkout
&lt;/h3&gt;

&lt;p&gt;To restore a specific commit or switch to another branch&lt;br&gt;
&lt;code&gt;$ git checkout &amp;lt;commit_id&amp;gt;&lt;/code&gt;&lt;br&gt;
or&lt;br&gt;
&lt;code&gt;$ git checkout &amp;lt;branch_name&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#git-show"&gt;
  &lt;/a&gt;
  5Ô∏è‚É£ git show
&lt;/h3&gt;

&lt;p&gt;To see what's actually changed in a specific commit.&lt;br&gt;
&lt;code&gt;$ git show &amp;lt;commit_id&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#git-citool"&gt;
  &lt;/a&gt;
  6Ô∏è‚É£ git citool
&lt;/h3&gt;

&lt;p&gt;It is a graphics alternative of &lt;code&gt;git commit&lt;/code&gt;.&lt;br&gt;
&lt;code&gt;$ git citool&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#git-help"&gt;
  &lt;/a&gt;
  7Ô∏è‚É£ git help
&lt;/h3&gt;

&lt;p&gt;There are many commands in Git, and if you need more help with any command, you can use git help at any time from the terminal. &lt;br&gt;
&lt;code&gt;$ git help&lt;/code&gt;&lt;br&gt;
or&lt;br&gt;
&lt;code&gt;$ git help &amp;lt;git_command&amp;gt;&lt;/code&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I tried to tell you about this useful command "git bisect" and also some other important git commands to help you reduce debugging time. If you know any other ways to make the debugging process faster, it would be great to tell us :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#previous-articles"&gt;
  &lt;/a&gt;
  Previous Articles
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/abanoub7asaad/top-10-useful-github-browser-extensions-2k2d"&gt;Top 10 Useful GitHub Browser Extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/abanoub7asaad/operating-systems-concepts-ch-3-part-1-processes-1lcj"&gt;Operating Systems Concepts [Ch.3 | Part 1: Processes] &lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>git</category>
      <category>github</category>
      <category>opensource</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>Step-By-Step Guide to Deploying Laravel Applications on Virtual Private Servers</title>
      <author>Farhan Hasin Chowdhury</author>
      <pubDate>Tue, 16 Nov 2021 14:14:23 +0000</pubDate>
      <link>https://dev.to/fhsinchy/step-by-step-guide-to-deploying-laravel-applications-on-virtual-private-servers-47ib</link>
      <guid>https://dev.to/fhsinchy/step-by-step-guide-to-deploying-laravel-applications-on-virtual-private-servers-47ib</guid>
      <description>&lt;p&gt;Developing modern full-stack web applications has become much easier thanks to Laravel but deploying them on a real server is another story.&lt;/p&gt;

&lt;p&gt;There are just so many options.&lt;/p&gt;

&lt;p&gt;PaaS like Heroku or AWS Elastic Beanstalk, unmanaged virtual private servers, shared hosting, and so on.&lt;/p&gt;

&lt;p&gt;Deploying a Laravel app on a shared server using cPanel is as easy as zipping up the source code along with all the dependencies and uploading it to the server. But on shared hosting, you don't have much control over the server.&lt;/p&gt;

&lt;p&gt;PaaS like Heroku or AWS Elastic Beanstalk strikes a good balance between ease of usage and control, but they can be expensive at times. A standard 1x dyno from Heroku, for example, costs $25 per month and comes with only 512MB of RAM.&lt;/p&gt;

&lt;p&gt;Unmanaged virtual private servers are affordable and provide a lot of control on the server. You can avail a server with 2GB of RAM, 20GB of SSD space, and 2TB of transfer bandwidth, costing only $15 per month.&lt;/p&gt;

&lt;p&gt;Now the problem with unmanaged virtual private servers is that they are unmanaged. You'll be responsible for installing all necessary software, configuring them, and keeping them updated.&lt;/p&gt;

&lt;p&gt;In this article, I'll guide you step-by-step in the process of how to deploy a Laravel project on an unmanaged virtual private server (we'll refer to it as VPS from now on). If you want to check out the benefits of the framework first, go ahead and get an answer to the question of &lt;a href="https://adevait.com/laravel/pros-of-laravel-framework"&gt;why use the Laravel framework&lt;/a&gt;. If you are ready, without any further ado, let's jump in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;The article assumes that you have previous experience with working with the Linux command-line. The server will use Ubuntu as its operating system, and you'll have to perform all the necessary tasks from the terminal. The article also expects you to understand basic concepts like Sudo, file permissions, differences between a root and non-root user, and git.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-code-and-deployment-plan"&gt;
  &lt;/a&gt;
  Project Code and Deployment Plan
&lt;/h2&gt;

&lt;p&gt;I've built a dummy project for this article. It's a simple question board application where users can post a question, and others can answer that question. You can consider this a dumbed-down version of StackOverflow.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qPdvkP03--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ws55uhzn078eo23c8yum.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qPdvkP03--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ws55uhzn078eo23c8yum.jpeg" alt="Example application" width="880" height="496"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The project source code is available on &lt;a href="https://github.com/fhsinchy/guide-to-deploying-laravel-on-vps"&gt;https://github.com/fhsinchy/guide-to-deploying-laravel-on-vps&lt;/a&gt; repository. Make a fork of this repository and clone it on your local computer.&lt;/p&gt;

&lt;p&gt;Once you have a copy of the project on your computer, you're ready to start the Laravel deployment process. You'll start by provisioning a new VPS and setting up a way for pushing the source from your local computer to the server.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#provisioning-a-new-ubuntu-server"&gt;
  &lt;/a&gt;
  Provisioning a New Ubuntu Server
&lt;/h2&gt;

&lt;p&gt;There are several VPS providers out there, such as DigitalOcean, Vultr, Linode, and Hetzner. Although working with an unmanaged VPS is more or less the same across providers, they don't provide the same kind of services.&lt;/p&gt;

&lt;p&gt;DigitalOcean, for example, provides managed database services. Linode and Vultr, on the other hand, don't have such services. You don't have to worry about these differences. &lt;/p&gt;

&lt;p&gt;I'll demonstrate only the unmanaged way of doing things. So regardless of the provider, you're using, the steps should be identical. &lt;/p&gt;

&lt;p&gt;Before provisioning a new server, you‚Äôll have to generate SSH keys.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#generating-new-ssh-keys"&gt;
  &lt;/a&gt;
  Generating New SSH Keys
&lt;/h3&gt;

&lt;p&gt;According to Wikipedia - "Secure Shell (SSH) is a cryptographic network protocol for operating network services securely over an unsecured network." It allows you to connect to a remote server using a password or a key-pair.&lt;/p&gt;

&lt;p&gt;If you're already familiar with SSH and have previously generated SSH key-pairs on your computer, you may skip this subsection. To generate a new key-pair on macOS, Linux, or Windows 10 machines, execute the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ssh-keygen &lt;span class="nt"&gt;-t&lt;/span&gt; rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll see several prompts on the terminal. You can go through them by pressing enter. You don't have to put any password either. Once you've generated the key-pair, you'll find a file named &lt;code&gt;id_rsa.pub&lt;/code&gt; inside the &lt;code&gt;~/.ssh/&lt;/code&gt; directory. You'll need this file when provisioning a new VPS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#provisioning-a-new-vps"&gt;
  &lt;/a&gt;
  Provisioning a New VPS
&lt;/h3&gt;

&lt;p&gt;I've already said there are some differences between the VPS service providers, so if you want to be absolutely in line with this article, use DigitalOcean.&lt;/p&gt;

&lt;p&gt;A single virtual private server on DigitalOcean is known as a droplet. On Vultr, it's called an instance, and on Linode, it's called a linode. Log into your provider of choice and create a new VPS. Use Ubuntu 20.04 LTS as the operating system.&lt;/p&gt;

&lt;p&gt;For size, pick the one with 1GB of RAM and 25GB of SSD storage. It should cost you around $5 per month. For the region, choose the one closest to your users. I live in Bangladesh, and most of my users are from here, so I deploy my applications in the Singapore region.&lt;/p&gt;

&lt;p&gt;Under the SSH section, create a new SSH key. Copy the content from the &lt;code&gt;~/.ssh/id_rsa.pub&lt;/code&gt; file and paste it as the content. Put a descriptive name for the key and save.&lt;/p&gt;

&lt;p&gt;You can leave the rest of the options untouched. Most of the providers come with an automatic backup service. For this demonstration, keep that option disabled. But in a real scenario, it can be a lifesaver. After the process finishes, you'll be ready to connect to your new server using SSH.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#performing-basic-setup"&gt;
  &lt;/a&gt;
  Performing Basic Setup
&lt;/h2&gt;

&lt;p&gt;Now that your new server is up and running, it's time to do some basic setup. First, use SSH with the server IP address to log in as the root user.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ssh root@104.248.157.172
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can find the server's IP address on the dashboard or inside the server details. Once you're inside the server, the first thing to do is create a new non-root user.&lt;/p&gt;

&lt;p&gt;By default, every server comes with the root user only. The root user, as you may already know, is very mighty. If someone manages to hack your server and logs in as the root user, the hacker can wreak havoc. Disabling login for the root user can prevent such mishaps.&lt;/p&gt;

&lt;p&gt;Also, logging in using a key-pair is more secure than logging in using a password. So, disabling logging in using a password should be disabled for all users.&lt;/p&gt;

&lt;p&gt;To create a new user from the terminal, execute the following command inside your server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;adduser nonroot
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The name &lt;code&gt;nonroot&lt;/code&gt; can be anything you want. I used &lt;code&gt;nonroot&lt;/code&gt; as the name to make the fact clear that this is a non-root user. The &lt;code&gt;adduser&lt;/code&gt; program will ask for a password and several other information. Put a strong password and leave the others empty.&lt;/p&gt;

&lt;p&gt;After creating the user, you'll have to add this new user to the &lt;code&gt;sudo&lt;/code&gt; group. Otherwise, the &lt;code&gt;nonroot&lt;/code&gt; user will be unable to execute commands using &lt;code&gt;sudo&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;usermod &lt;span class="nt"&gt;-aG&lt;/span&gt; &lt;span class="nb"&gt;sudo &lt;/span&gt;nonroot
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this command, &lt;code&gt;sudo&lt;/code&gt; is the group name, and &lt;code&gt;nonroot&lt;/code&gt; is the username. Now, if you try to log into this account, you'll face a permission denied error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PW1RH0L5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fmw7wsc3o4xnte3sznwh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PW1RH0L5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fmw7wsc3o4xnte3sznwh.png" alt="SSH into the server" width="573" height="125"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It happens because most of the VPS providers disable login using a password when you add an SSH key to the server, and you haven't configured the new user to use SSH key-pairs. One easy way to fix this is to copy the content of &lt;code&gt;/root/.ssh&lt;/code&gt; directory to the &lt;code&gt;/home/nonroot/.ssh&lt;/code&gt; directory. You can use the &lt;code&gt;rsync&lt;/code&gt; program to do this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;rsync &lt;span class="nt"&gt;--archive&lt;/span&gt; &lt;span class="nt"&gt;--chown&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;nonroot:nonroot /root/.ssh /home/nonroot
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;--archive&lt;/code&gt; option for &lt;code&gt;rsync&lt;/code&gt; copies directories recursively preserving symbolic links, user and group ownership, and timestamps. The &lt;code&gt;--chown&lt;/code&gt; option sets the &lt;code&gt;nonroot&lt;/code&gt; user as the owner in the destination. Now you should be able to log in as the new user using SSH.&lt;/p&gt;

&lt;p&gt;After logging in as a non-root user, you should update the operating system, including all the installed programs on the server. To do so, execute the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;sudo &lt;/span&gt;apt upgrade &lt;span class="nt"&gt;-y&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;sudo &lt;/span&gt;apt dist-upgrade &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Downloading and installing the updates will take a few minutes. During this process, if you see a screen titled &lt;code&gt;Configuring openssh-server&lt;/code&gt; asking about some file changes, select the &lt;code&gt;keep the local version currently installed&lt;/code&gt; option and press enter.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ikCpqrZu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9vj5qfvuxurkoivwtjn0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ikCpqrZu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9vj5qfvuxurkoivwtjn0.png" alt="Configuring openssh-server" width="880" height="492"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the update process finishes, reboot the server by executing the &lt;code&gt;sudo&lt;/code&gt; reboot command. Wait a few minutes for the server to boot again and log back in as a non-root user.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploying-code-on-the-server"&gt;
  &lt;/a&gt;
  Deploying Code on the Server
&lt;/h2&gt;

&lt;p&gt;After completing the basic setups, the next thing you'll tackle is deploying code on the server. I've seen people cloning the repository somewhere on the production server and logging into the server to perform a pull whenever there are some new changes to the code.&lt;/p&gt;

&lt;p&gt;There is a much better way of doing this. Instead of logging into the server to perform a pull, you can use the server itself as a repository and push code directly to the server. You can also automate the post-deployment steps like installing dependencies, running the migrations, and so on, which will make the Laravel deploy to server an effortless action. But before doing all these, you'll first have to install PHP and Composer on the server.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-php"&gt;
  &lt;/a&gt;
  Installing PHP
&lt;/h3&gt;

&lt;p&gt;You can find a list of PHP packages required by Laravel on the official &lt;a href="https://laravel.com/docs/8.x/deployment#server-requirements"&gt;docs&lt;/a&gt;. To install all these packages, execute the following command on your server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;php7.4-fpm php7.4-bcmath php7.4-json php7.4-mbstring php7.4-xml &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Depending on whether you're using MySQL or PostgreSQL, or SQLite in your project, you'll have to install one of the following packages:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;php7.4-mysql php7.4-pgsql php7.4-sqlite3 &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The following package provides support for the Redis in-memory databases:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;php7.4-redis
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Apart from these packages, you'll also need &lt;code&gt;php-curl&lt;/code&gt;, &lt;code&gt;php-zip&lt;/code&gt;, &lt;code&gt;zip&lt;/code&gt;, &lt;code&gt;unzip&lt;/code&gt;, and &lt;code&gt;curl&lt;/code&gt; utilities.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;zip unzip php7.4-zip curl php7.4-curl &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The question bank project uses MySQL as its database system and Redis for caching and running queues, so you'll have to install the &lt;code&gt;php7.4-mysql&lt;/code&gt; and the &lt;code&gt;php7.4-redis&lt;/code&gt; packages.&lt;/p&gt;

&lt;p&gt;Depending on the project, you may have to install more PHP packages. Projects that work images, for example, usually depend on the &lt;code&gt;php-gd&lt;/code&gt; package. Also, you don't have to mention the PHP version with every package name. If you don't specify a version number, APT will automatically install whatever is the latest.&lt;/p&gt;

&lt;p&gt;At the writing of this article, PHP 7.4 is the latest one on Ubuntu's package repositories but considering that the question board project requires PHP 7.4 and PHP 8 may become the default in the future, I've specified the version number in this article.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-composer"&gt;
  &lt;/a&gt;
  Installing Composer
&lt;/h3&gt;

&lt;p&gt;After installing PHP and all the required packages on the server, now you're ready to install Composer. To do so, navigate to the official composer download &lt;a href="https://getcomposer.org/download/"&gt;page&lt;/a&gt; and follow the command-line installation instructions or execute the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;php &lt;span class="nt"&gt;-r&lt;/span&gt; &lt;span class="s2"&gt;"copy('https://getcomposer.org/installer', 'composer-setup.php');"&lt;/span&gt;
&lt;span class="nb"&gt;sudo &lt;/span&gt;php composer-setup.php &lt;span class="nt"&gt;--install-dir&lt;/span&gt; /usr/local/bin &lt;span class="nt"&gt;--filename&lt;/span&gt; composer
php &lt;span class="nt"&gt;-r&lt;/span&gt; &lt;span class="s2"&gt;"unlink('composer-setup.php');"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that you've installed both PHP and Composer on your server, you're ready to configure the automated deployment of your code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deploying-code-using-git"&gt;
  &lt;/a&gt;
  Deploying Code Using Git
&lt;/h3&gt;

&lt;p&gt;For automating code deployment on the server, log in as a non-root user and create a new directory under the &lt;code&gt;/home/nonroot&lt;/code&gt; directory. You'll use this directory as the repository and push production code to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; /home/nonroot/repo/question-board.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;-p&lt;/code&gt; option to the &lt;code&gt;mkdir&lt;/code&gt; command will create any nonexistent parent repository. Next, &lt;code&gt;cd&lt;/code&gt; into the newly created directory and initialize a new bare git repository.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /home/nonroot/repo/question-board.git
git init &lt;span class="nt"&gt;--bare&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A bare is the same as a regular git repository, except it doesn't have a working tree. The practical usage of such a git repository is as a remote origin. Don't worry if you don't understand what I said just now. Things will become lucid as you keep going.&lt;/p&gt;

&lt;p&gt;Assuming you're still inside the &lt;code&gt;/home/nonroot/repo/question-board.git&lt;/code&gt; directory, &lt;code&gt;cd&lt;/code&gt; inside the hooks subdirectory and create a new file called &lt;code&gt;post-receive&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;hooks
&lt;span class="nb"&gt;touch &lt;/span&gt;post-receive
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Files inside this directory are regular shell scripts that git invokes when some major event happens on a repository. Whenever you push some code, git will wait until all the code has been received and then call the post-receive script.&lt;/p&gt;

&lt;p&gt;Assuming you're still inside the hooks directory, open the &lt;code&gt;post-receive&lt;/code&gt; script by executing the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nano post-receive
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now update the script's content as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="nb"&gt;sudo&lt;/span&gt; /sbin/deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you may have already guessed, &lt;code&gt;/sbin/deploy&lt;/code&gt; is another script you'll have to create. The &lt;code&gt;/sbin&lt;/code&gt; directory is mainly responsible for storing scripts that perform administrative tasks. Go ahead and touch the &lt;code&gt;/sbin/deploy&lt;/code&gt; script and open it using the nano text editor.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo touch&lt;/span&gt; /sbin/deploy
&lt;span class="nb"&gt;sudo &lt;/span&gt;nano /sbin/deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now update the script's content as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;

git &lt;span class="nt"&gt;--work-tree&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/srv/question-board &lt;span class="nt"&gt;--git-dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/nonroot/repo/question-board.git checkout &lt;span class="nt"&gt;-f&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Evident by the &lt;code&gt;#!/bin/sh&lt;/code&gt; line, this is a shell script. After that line, the only line of code in this script copies the content of the &lt;code&gt;/home/nonroot/repo/question-board.git&lt;/code&gt; repository to the &lt;code&gt;/srv/question-board&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;Here, the &lt;code&gt;--work-tree&lt;/code&gt; option specifies the destination directory, and the &lt;code&gt;--git-dir&lt;/code&gt; option specifies the source repository. I like to use the &lt;code&gt;/srv&lt;/code&gt; directory for storing files served by this server. If you want to use the &lt;code&gt;/var/www&lt;/code&gt; directory, go ahead.&lt;/p&gt;

&lt;p&gt;Save the file by hitting &lt;code&gt;Ctrl + O&lt;/code&gt; and exit nano by hitting &lt;code&gt;Ctrl + X&lt;/code&gt; key combination. Make sure that the script has executable permission by executing the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo chmod&lt;/span&gt; +x post-receive
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The last step to make this process functional is creating the work tree or the destination directory. To do so, execute the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo mkdir&lt;/span&gt; /srv/question-board
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you have a proper work tree directory, a bare repository, and a post-hook that in turn calls the &lt;code&gt;/sbin/deploy&lt;/code&gt; script with &lt;code&gt;sudo&lt;/code&gt;. But, how would the post-receive hook invoke the &lt;code&gt;/sbin/deploy&lt;/code&gt; script using &lt;code&gt;sudo&lt;/code&gt; without a password?&lt;/p&gt;

&lt;p&gt;Open the &lt;code&gt;/etc/sudoers&lt;/code&gt; file on your server using the nano text editor and append the following line of code at the end of the file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nonroot &lt;span class="nv"&gt;ALL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;NOPASSWD: /sbin/deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This line of code means that the &lt;code&gt;nonroot&lt;/code&gt; user will be able to execute the &lt;code&gt;/sbin/deploy&lt;/code&gt; script with &lt;code&gt;sudo&lt;/code&gt; on &lt;code&gt;ALL&lt;/code&gt; hosts with &lt;code&gt;NOPASSWD&lt;/code&gt; or no password. Save the file by pressing &lt;code&gt;Ctrl + O&lt;/code&gt; and exit nano by pressing the &lt;code&gt;Ctrl + K&lt;/code&gt; key combination.&lt;/p&gt;

&lt;p&gt;Finally, you're ready to push the project source code. Assuming that you've already forked and cloned the &lt;a href="https://github.com/fhsinchy/guide-to-deploying-laravel-on-vps"&gt;https://github.com/fhsinchy/guide-to-deploying-laravel-on-vps&lt;/a&gt; repository on your local system, open up your terminal on the project root and execute the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git remote add production ssh://nonroot@104.248.157.172/home/nonroot/repo/question-board.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure to replace my IP address with the IP address from your server. Now assuming that the stable code is no the master branch, you can push code to the server by executing the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git push production master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After sending the code to the server, log back in as a non-root user and &lt;code&gt;cd&lt;/code&gt; into the &lt;code&gt;/srv/question-board&lt;/code&gt; directory. Use the ls command to list out the content, and you should see that git has successfully checked out your project code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#automating-post-deployment-steps"&gt;
  &lt;/a&gt;
  Automating Post Deployment Steps
&lt;/h3&gt;

&lt;p&gt;Congratulations on you being able to deploy Laravel project on the server directly but, is that enough? What about the post-deployment steps? Tasks like installing or updating dependencies, migrating the database, caching the views, configs, and routes, restarting workers, and so on.&lt;/p&gt;

&lt;p&gt;Honestly, automating these tasks is much easier than you may think. All you've to do is create a script that does all these for you, set some permissions, and call that script from inside the post-receive hook.&lt;/p&gt;

&lt;p&gt;Create another script called post-deploy inside the &lt;code&gt;/sbin&lt;/code&gt; directory. After creating the file, open it inside the nano text editor.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo touch&lt;/span&gt; /sbin/post-deploy
&lt;span class="nb"&gt;sudo &lt;/span&gt;nano /sbin/post-deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Update the content of the post-deploy script as follows. Don't worry if you don't clearly understand everything. I'll explain each line in detail.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="nb"&gt;cd&lt;/span&gt; /srv/question-board

&lt;span class="nb"&gt;cp&lt;/span&gt; &lt;span class="nt"&gt;-n&lt;/span&gt; ./.env.example ./.env

&lt;span class="nv"&gt;COMPOSER_ALLOW_SUPERUSER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1 composer &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--no-dev&lt;/span&gt; &lt;span class="nt"&gt;--optimize-autoloader&lt;/span&gt;
&lt;span class="nv"&gt;COMPOSER_ALLOW_SUPERUSER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1 composer update &lt;span class="nt"&gt;--no-dev&lt;/span&gt; &lt;span class="nt"&gt;--optimize-autoloader&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first line changes the working directory to the &lt;code&gt;/srv/question-board&lt;/code&gt; directory. The second line makes a copy of the &lt;code&gt;.env.example&lt;/code&gt; file. The &lt;code&gt;-n&lt;/code&gt; option makes sure that the &lt;code&gt;cp&lt;/code&gt; command doesn't override a previously existing file.&lt;/p&gt;

&lt;p&gt;The third and fourth commands will install all the necessary dependencies and update them if necessary. The &lt;code&gt;COMPOSER_ALLOW_SUPERUSER&lt;/code&gt; environment variable disables a warning about running the composer binary as root.&lt;/p&gt;

&lt;p&gt;Save the file by pressing &lt;code&gt;Ctrl + O&lt;/code&gt; and exit nano by pressing &lt;code&gt;Ctrl + X&lt;/code&gt; key combination. Make sure that the script has executable permission by executing the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo chmod&lt;/span&gt; +x /sbin/post-deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open the /&lt;code&gt;home/nonroot/repo/question-board.git/hooks/post-receive&lt;/code&gt; script with nano and append the following line after the &lt;code&gt;sudo /sbin/deploy&lt;/code&gt; script call:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo&lt;/span&gt; /sbin/post-deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure that you call the post-deploy script after calling the deploy script. Save the file by pressing &lt;code&gt;Ctrl + O&lt;/code&gt; and exit nano by pressing the `Ctrl + K key combination.&lt;/p&gt;

&lt;p&gt;Open the &lt;code&gt;/etc/sudoers&lt;/code&gt; file on your server using the nano text editor once again and update the previously added line as follows:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
nonroot ALL=NOPASSWD: /sbin/deploy, /sbin/post-deploy&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Save the file by pressing &lt;code&gt;Ctrl + O&lt;/code&gt; and exit nano by pressing the &lt;code&gt;Ctrl + K&lt;/code&gt; key combination. You can add more post deploy steps to this script if necessary.&lt;/p&gt;

&lt;p&gt;To test the new post-deploy script, make some changes to your code, commit the changes and push to the production master branch. This time you'll see composer packages installation progress on the terminal and outputs from other artisan calls.&lt;/p&gt;

&lt;p&gt;Once the deployment process finishes, log back into the server, &lt;code&gt;cd&lt;/code&gt; into the &lt;code&gt;/srv/question-board&lt;/code&gt; directory, and list the content by executing the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
ls -la&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Among other files and folders, you'll see a newly created vendor directory and an env file. At this point, you can generate the application encryption key required by Laravel. To do so, execute the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo php artisan key:generate&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you look at the content of the &lt;code&gt;.env&lt;/code&gt; file using the nano text editor, you'll see the &lt;code&gt;APP_KEY&lt;/code&gt; value populated with a long string.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-and-configuring-nginx"&gt;
  &lt;/a&gt;
  Installing and Configuring NGINX
&lt;/h2&gt;

&lt;p&gt;Now that you've successfully pushed the source code to the server, the next step is to install a web server and configure it to serve your application. I'll use NGINX in the article. If you want to use something else like Apache, you'll be on your own.&lt;/p&gt;

&lt;p&gt;This article will strictly focus on configuring the webserver for serving a Laravel application and will not discuss NGINX-related stuff in detail. NGINX itself is a very complex software, and if you wish to learn NGINX from the ground up, &lt;a href="https://www.freecodecamp.org/news/the-nginx-handbook/"&gt;The NGINX Handbook&lt;/a&gt; is a solid resource.&lt;/p&gt;

&lt;p&gt;To install NGINX on your Ubuntu server, execute the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo apt install nginx -y&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This command should install NGINX and should also register as a systemd service. To verify, you can execute the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo systemctl status nginx&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You should see something as follows in the output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GKwRqQGt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f9wr24u7a8qb89rdz4bx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GKwRqQGt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f9wr24u7a8qb89rdz4bx.png" alt="NGINX service status" width="880" height="492"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can regain control of the terminal by hitting q on your keyboard. Now that NGINX is running, you should see the default welcome page of NGINX if you visit the server IP address.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UzaJbDuE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e8ujehmns2dlbly299e1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UzaJbDuE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e8ujehmns2dlbly299e1.png" alt="Welcome to NGINX" width="534" height="224"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You'll have to change the NGINX configuration to serve your Laravel application instead. To do so, create a new file &lt;code&gt;/etc/nginx/sites-available/question-board&lt;/code&gt; and open the file using the nano text editor.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo touch /etc/nginx/sites-available/question-board&lt;br&gt;
sudo nano /etc/nginx/sites-available/question-board&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This file will contain the NGINX configuration code for serving the question board application. Configuring NGINX from scratch can be difficult, but the official Laravel &lt;a href="https://laravel.com/docs/8.x/deployment#nginx"&gt;docs&lt;/a&gt; have a pretty good configuration. Follows is the code copied from the docs:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;`conf&lt;br&gt;
server {&lt;br&gt;
    listen 80;&lt;br&gt;
    server_name 104.248.157.172;&lt;br&gt;
    root /srv/question-board/public;&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;add_header X-Frame-Options "SAMEORIGIN";
add_header X-Content-Type-Options "nosniff";

index index.php;

charset utf-8;

location / {
    try_files $uri $uri/ /index.php?$query_string;
}

location = /favicon.ico { access_log off; log_not_found off; }
location = /robots.txt  { access_log off; log_not_found off; }

error_page 404 /index.php;

location ~ \.php$ {
    fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
    fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    include fastcgi_params;
}

location ~ /\.(?!well-known).* {
    deny all;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;}&lt;br&gt;
`&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You don't have to make any changes to this code except the first two lines. Make sure you're using the IP address from your server as the &lt;code&gt;server_name&lt;/code&gt; , and the &lt;code&gt;root&lt;/code&gt; is pointing to the correct directory. You'll replace this IP address with a domain name in a later section.&lt;/p&gt;

&lt;p&gt;Also, inside the location &lt;code&gt;~ \.php$ { }&lt;/code&gt; block, make sure that the &lt;code&gt;fastcgi_pass&lt;/code&gt; directive is pointing to the correct PHP version. In this demonstration, I'm using PHP 7.4, so this configuration is correct. If you're using a different version, like 8.0 or 8.1, update the code accordingly.&lt;/p&gt;

&lt;p&gt;If you &lt;code&gt;cd&lt;/code&gt; into the &lt;code&gt;/etc/nginx&lt;/code&gt; directory and list out the content using the &lt;code&gt;ls&lt;/code&gt; command, you'll see two folders named &lt;code&gt;sites-available&lt;/code&gt; and &lt;code&gt;sites-enabled&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;sites-available&lt;/code&gt; folder holds all the different configuration files serving applications (yes, there can be multiple) from this server.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;sites-enabled&lt;/code&gt; folder, on the other hand, contains symbolic links to the active configuration files. So if you do not make a symbolic link of the &lt;code&gt;/etc/nginx/sites-available/question-board&lt;/code&gt; file inside the &lt;code&gt;sites-enabled&lt;/code&gt; folder, it'll not work. To do so, execute the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo ln -s /etc/nginx/sites-available/question-board /etc/nginx/sites-enabled/question-board&lt;br&gt;
sudo rm /etc/nginx/sites-enabled/default&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The second command gets rid of the default configuration file to avoid any unintended conflict. To test if the configuration code is okay or not, execute the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo nginx -t&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If everything's alright, reload the NGINX configuration by executing the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo nginx -s reload&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you visit your server IP address, you'll see that NGINX is serving your application correctly but the application is throwing a 500 internal server error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zC94wH2J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/785ysx5tyo7zbtfjq07r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zC94wH2J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/785ysx5tyo7zbtfjq07r.png" alt="500 internal server error" width="880" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, the application is trying to write to the logs folder but fails. It happens because the &lt;code&gt;root&lt;/code&gt; user owns the &lt;code&gt;/srv/question-board&lt;/code&gt; directory, and the &lt;code&gt;www-data&lt;/code&gt; user owns the NGINX process. To make the &lt;code&gt;/srv/question-board/storage&lt;/code&gt; directory writable by the application, you'll have to alter the directory permissions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configuring-directory-permissions"&gt;
  &lt;/a&gt;
  Configuring Directory Permissions
&lt;/h3&gt;

&lt;p&gt;There are different ways of configuring directory permissions in a Laravel project but, I'll show you the one I use. First, you'll have to assign the &lt;code&gt;www-data&lt;/code&gt; user that owns the NGINX process as the owner of the &lt;code&gt;/srv/question-board&lt;/code&gt; directory as well. To do so, execute the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo chown -R :www-data /srv/question-board&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then, set the permission of the &lt;code&gt;/srv/question-board/storage&lt;/code&gt; to &lt;code&gt;755&lt;/code&gt;, which means read and execute access for all users and write access for the owner by executing the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo chmod -R 775 /srv/question-board/storage&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Finally, there is one more subdirectory that you have to make writable. That is the &lt;code&gt;/srv/question-board/bootstrap/cache&lt;/code&gt; directory. To do so, execute the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo chmod -R 775 /srv/question-board/bootstrap/cache&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you go back to the server IP address now and refresh, you should see that the application is working fine.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-and-configuring-mysql"&gt;
  &lt;/a&gt;
  Installing and Configuring MySQL
&lt;/h2&gt;

&lt;p&gt;Now that you've successfully installed and configured the NGINX web server, it's time for you to install and configure MySQL. To do so, install the MySQL server by executing the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo apt install mysql-server -y&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After the installation process finishes, execute the following command to make your MySQL installation more secure:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo mysql_secure_installation&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;First, the script will ask if you want to use the validate password component or not. Input &lt;code&gt;Y&lt;/code&gt; as the answer and hit enter. Then, you'll have to set the desired level of password difficulty. I recommend setting it as high. Although picking a hard-to-guess password every time you want to create a new user can be annoying, but for the sake of security, roll with it. In the next step, set a secure password for the root user. You can put &lt;code&gt;Y&lt;/code&gt; as the answer for the rest of the questions. Give the questions a read if you want to.&lt;/p&gt;

&lt;p&gt;Now, before you can log into your database server as root, you'll have to switch to the root user. To do so, execute the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo su&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Log into your database server as root by executing the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
mysql -u root&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once you're in, create a new database for the question board application by executing the following SQL code:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;sql&lt;br&gt;
CREATE DATABASE question_board;&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Next, create a new database user by executing the following SQL code:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;sql&lt;br&gt;
CREATE USER 'nonroot'@'localhost' IDENTIFIED BY 'password';&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Again, I used the name &lt;code&gt;nonroot&lt;/code&gt; to clarify that this is a non-root user. You can use whatever you want as the name. Also, replace the word password with something more secure.&lt;/p&gt;

&lt;p&gt;After that, provide the user full privilege of the question_board database to the newly created user by executing the following SQL code:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;sql&lt;br&gt;
GRANT ALL PRIVILEGES ON question_board . * TO 'nonroot'@'localhost';'nonroot'@'localhost';&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In this code, &lt;code&gt;question_board.*&lt;/code&gt; means all the tables of the &lt;code&gt;question_board&lt;/code&gt; database. Finally, quit the MySQL client by executing the &lt;code&gt;\q&lt;/code&gt; command and exit the root shell by invoking the exit command.&lt;/p&gt;

&lt;p&gt;Now, try logging in as the &lt;code&gt;nonroot&lt;/code&gt; user by executing the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
mysql -u nonroot -p&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The MySQL client will ask for the password. Use the password you put in when creating the &lt;code&gt;nonroot&lt;/code&gt; user. If you manage to log in successfully, exit the MySQL client by executing the \q command.&lt;/p&gt;

&lt;p&gt;Now that you have a working database server, it's time to configure the question board project to make use of it. First, &lt;code&gt;cd&lt;/code&gt; into the &lt;code&gt;/srv/question-board&lt;/code&gt; directory and open the &lt;code&gt;.env&lt;/code&gt; file using the nano text editor:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
cd /srv/question-board&lt;br&gt;
sudo nano .env&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Update the database configuration as follows:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;env&lt;br&gt;
DB_CONNECTION=mysql&lt;br&gt;
DB_HOST=localhost&lt;br&gt;
DB_PORT=3306&lt;br&gt;
DB_DATABASE=question_board&lt;br&gt;
DB_USERNAME=nonroot&lt;br&gt;
DB_PASSWORD=password&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Make sure to replace the username and password with yours. Save the file by pressing &lt;code&gt;Ctrl + O&lt;/code&gt; and exit nano by pressing &lt;code&gt;Ctrl + X&lt;/code&gt; key combination. To test out the database connection, try migrating the database by executing the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
php artisan migrate --force&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If everything goes fine, that means the database connection is working. The project comes with two seeder classes, one for seeding the admin user and another for the categories. Execute the following commands to run them:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
php artisan db:seed --class=AdminUserSeeder&lt;br&gt;
php artisan db:seed --class=CategoriesSeeder&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, if you visit the server IP address and navigate to the &lt;code&gt;/questions&lt;/code&gt; route, you'll see the list of categories. You'll also be log in as the admin user using the following credentials:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
email: farhan@questionboard.test&lt;br&gt;
password: password&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you've been working with Laravel for a while, you may already know that it is common practice to add new migration files when there is a database change. To automate the process of running the migrations on every deployment, open the &lt;code&gt;/sbin/post-deploy&lt;/code&gt; script using nano once again and append the following line at the end of the file:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
php artisan migrate --force&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;--force&lt;/code&gt; option will suppress an artisan warning about running migrations on a production environment. Unlike migrations, seeders should run only once. If you add new seeders on later deployments, you'll have to run them manually.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configure-laravel-horizon"&gt;
  &lt;/a&gt;
  Configure Laravel Horizon
&lt;/h2&gt;

&lt;p&gt;The question board project comes with Laravel Horizon pre-installed and pre-configured. Now that you have Redis up and running, you're ready to start processing jobs.&lt;/p&gt;

&lt;p&gt;The official docs suggest using the supervisor program for running Laravel Horizon on a production server. To install the program, execute the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo apt install supervisor -y&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Supervisor configuration files live within your server's &lt;code&gt;/etc/supervisor/conf.d&lt;/code&gt; directory. Create a new file &lt;code&gt;/etc/supervisor/conf.d/horizon.conf&lt;/code&gt; and open it using the nano text editor:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo touch /etc/supervisor/conf.d/horizon.conf&lt;br&gt;
sudo /etc/supervisor/conf.d/horizon.conf&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Update the file's content as follows:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;conf&lt;br&gt;
[program:horizon]&lt;br&gt;
process_name=%(program_name)s&lt;br&gt;
command=php /srv/question-board/artisan horizon&lt;br&gt;
autostart=true&lt;br&gt;
autorestart=true&lt;br&gt;
user=root&lt;br&gt;
redirect_stderr=true&lt;br&gt;
stdout_logfile=/var/log/horizon.log&lt;br&gt;
stopwaitsecs=3600&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Save the file by pressing &lt;code&gt;Ctrl + O&lt;/code&gt; and exit nano by pressing the &lt;code&gt;Ctrl + X&lt;/code&gt; key combination. Now, execute the following commands to update the supervisor configuration and starting the horizon process:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo supervisorctl reread&lt;br&gt;
sudo supervisorctl update&lt;br&gt;
sudo supervisorctl start horizon&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To test out if Laravel Horizon is running or not, visit your server's IP address and navigate to the &lt;code&gt;/login&lt;/code&gt; page. Log in as the admin user and navigate to the /horizon route. You'll see Laravel Horizon in the active state.&lt;/p&gt;

&lt;p&gt;I've configured Laravel Horizon to only let the admin user in, so if you log in with some other user credential, you'll see a 403 forbidden error message on the &lt;code&gt;/horizon&lt;/code&gt; route.&lt;/p&gt;

&lt;p&gt;One thing that catches many people off guard is that if you make changes to your jobs, you'll have to restart Laravel Horizon to read those changes. I recommend adding a line to the &lt;code&gt;/sbin/post-deploy&lt;/code&gt; script to reinitiate the Laravel Horizon process on every deployment.&lt;/p&gt;

&lt;p&gt;To do so, open the &lt;code&gt;/sbin/post-deploy&lt;/code&gt; using the nano text editor and append the following line at the end of the file:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo supervisorctl restart horizon&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This command will stop and restart the Laravel Horizon process on every deployment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configuring-a-domain-name-with-https"&gt;
  &lt;/a&gt;
  Configuring a Domain Name With HTTPS
&lt;/h2&gt;

&lt;p&gt;For this step to work, you'll have to own a custom domain name of your own. I'll use the &lt;code&gt;questionboard.farhan.dev&lt;/code&gt; domain name for this demonstration.&lt;/p&gt;

&lt;p&gt;Log into your domain name provider of choice and go to the DNS settings for your domain name. Whenever you want a domain name to point to a server's IP address, you need to create a DNS record of type A.&lt;/p&gt;

&lt;p&gt;To do so, add a new DNS record with the following attributes:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
Type: A Record&lt;br&gt;
Host: questionboard&lt;br&gt;
Value: 104.248.157.172&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Make sure to replace my IP address with yours. If you want your top-level domain to point to an IP address instead of a subdomain, just put a @ as the host.&lt;/p&gt;

&lt;p&gt;Now go back to your server and open the &lt;code&gt;/etc/nginx/sites-available/questionboard&lt;/code&gt; config file using the nano text editor. Remove the IP address from the server_name directive and write your domain name. Do not put HTTP or HTTPS at the beginning.&lt;/p&gt;

&lt;p&gt;You can put multiple domain names such as the top-level domain and the &lt;code&gt;www&lt;/code&gt; subdomain separated by spaces. Save the configuration file by pressing &lt;code&gt;Ctrl + O&lt;/code&gt; and &lt;code&gt;Ctrl + X&lt;/code&gt; key combination. Reload NGINX configuration by executing the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo nginx -s reload&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now you can visit your application using your domain name instead of the server's IP address. To enable HTTPS on your application, you can use the &lt;code&gt;certbot&lt;/code&gt; program.&lt;/p&gt;

&lt;p&gt;To do so, install &lt;code&gt;certbot&lt;/code&gt; by executing the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo snap install --classic certbot&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It is a python program that allows you to use free SSL certificates very easily. After installing the program, execute the following command to get a new certificate:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo certbot --nginx&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;First, the program will ask for your email address. Next, it'll ask if you agree with the terms and agreements or not.&lt;/p&gt;

&lt;p&gt;Then, It'll ask you about sharing your email address with the Electronic Frontier Foundation.&lt;/p&gt;

&lt;p&gt;In the third step, the program will read the NGINX configuration file and extract the domain names from the server_name directive. Look at the domain names it shows and press enter if they are all correct. After deploying the new certificate, the program will congratulate you, and now you've got free HTTPS protection for 90 days.&lt;/p&gt;

&lt;p&gt;After 90 days, the program will attempt to renew the certificate automatically. To test the auto-renew feature, execute the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo certbot renew --dry-run&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If the simulation succeeds, you're good to go.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configuring-a-firewall"&gt;
  &lt;/a&gt;
  Configuring a Firewall
&lt;/h2&gt;

&lt;p&gt;Having a properly configured firewall is very important for the security of your server. In this article, I'll show you how you can configure the popular UFW program.&lt;/p&gt;

&lt;p&gt;UFW stands for uncomplicated firewall, and it comes by default in Ubuntu. You'll configure UFW to, by default, allow all outgoing traffic from the server and deny all incoming traffic to the server. To do so, execute the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo ufw default deny incoming&lt;br&gt;
sudo ufw default allow outgoing&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Denying all incoming traffic means that no one, including you, will be able to access your server in any way. The next step is to allow incoming requests in three specific ports. They are as follows:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
Port 80, used for HTTP traffic.&lt;br&gt;
Port 443, used for HTTPS traffic.&lt;br&gt;
Port 22, used for SSH traffic.&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To do so, execute the following commands:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo ufw allow http&lt;br&gt;
sudo ufw allow https&lt;br&gt;
sudo ufw allow ssh&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Finally, enable UFW by executing the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
sudo ufw enable&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;That's pretty much it. Your server now only allows HTTP, HTTPS, and SSH traffic coming from the outside, making your server a bit more secure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#laravel-postdeployment-optimizations"&gt;
  &lt;/a&gt;
  Laravel Post-deployment Optimizations
&lt;/h2&gt;

&lt;p&gt;Your application is now almost ready to accept requests from all over the world. One last step that I would like to suggest is caching the Laravel configuration, views, and routes for better performance.&lt;/p&gt;

&lt;p&gt;To do so, open the &lt;code&gt;/sbin/post-deploy&lt;/code&gt; script using the nano text editor and append the following lines at the end of the file:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
php artisan config:cache&lt;br&gt;
php artisan route:cache&lt;br&gt;
php artisan view:cache&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, on every deployment, the caches will be cleared and renewed automatically. Also, make sure to set the &lt;code&gt;APP_ENV&lt;/code&gt; to production and &lt;code&gt;APP_DEBUG&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; inside the &lt;code&gt;.env&lt;/code&gt; file. Otherwise, you may unintentionally compromise sensitive information regarding your server.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I would like to thank all &lt;a href="https://adevait.com/laravel"&gt;Laravel developers&lt;/a&gt; for the time they've spent reading this article. I hope you've enjoyed it and have learned some handy stuff regarding application deployment. If you want to learn more about NGINX, consider checking out my open-source &lt;a href="https://www.freecodecamp.org/news/the-nginx-handbook/"&gt;NGINX Handbook&lt;/a&gt; with tons of fun content and examples.&lt;/p&gt;

&lt;p&gt;Also, if you want to broaden your knowledge of Laravel, you can check the &lt;a href="https://adevait.com/laravel/laravel-vs-symfony-comparison"&gt;Laravel vs Symfony&lt;/a&gt;, the &lt;a href="https://adevait.com/laravel/using-corcel-in-laravel"&gt;Laravel Corcel&lt;/a&gt;, and &lt;a href="https://adevait.com/laravel/developing-an-ico-using-laravel"&gt;Laravel Blockchain&lt;/a&gt; articles.&lt;/p&gt;

&lt;p&gt;If you have any questions or confusion, feel free to reach out to me. I'm available on &lt;a href="https://twitter.com/frhnhsin"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/farhanhasin/"&gt;LinkedIn&lt;/a&gt; and always happy to help. Till the next one, stay safe and keep on learning.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>php</category>
    </item>
    <item>
      <title>PlanetScale is now GA</title>
      <author>etnoctua</author>
      <pubDate>Tue, 16 Nov 2021 14:07:48 +0000</pubDate>
      <link>https://dev.to/planetscale/planetscale-is-now-ga-53jm</link>
      <guid>https://dev.to/planetscale/planetscale-is-now-ga-53jm</guid>
      <description>&lt;p&gt;It has been an incredible six months since we released our product in beta. From the outset we focused on creating a platform that would delight developers, built on top of the only open source database proven at hyperscale, Vitess. &lt;/p&gt;

&lt;p&gt;We believe databases should be powerful, easy to use, and have impeccable DX. This is why we chose to build our serverless platform so that developers can be productive without ever having to worry about scale. &lt;/p&gt;

&lt;p&gt;With PlanetScale you can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Instantly create dev and staging environments with database branching&lt;/li&gt;
&lt;li&gt;Deploy features fast and safer with non-blocking schema changes&lt;/li&gt;
&lt;li&gt;Scale out with built-in horizontal sharding &lt;/li&gt;
&lt;li&gt;Handle traffic with unlimited connections and connection pooling&lt;/li&gt;
&lt;li&gt;Analyze slow queries using our Query Stats tool&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://planetscale.com/blog/ga"&gt;Our database platform is now GA&lt;/a&gt; and ready for your production workloads.&lt;/p&gt;

&lt;p&gt;Get started with PlanetScale for free and check out the new features that will change how you work with databases. Also, we're happy to answer any questions you might have and if check out this post if you're interested in &lt;a href="https://planetscale.com/blog/building-planetscale-with-planetscale"&gt;how we used PlanetScale to build PlanetScale&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>database</category>
      <category>serverless</category>
      <category>opensource</category>
    </item>
    <item>
      <title>What is IMAP</title>
      <author>cloudytech147</author>
      <pubDate>Tue, 16 Nov 2021 13:54:13 +0000</pubDate>
      <link>https://dev.to/cloudytech147/what-is-imap-aaf</link>
      <guid>https://dev.to/cloudytech147/what-is-imap-aaf</guid>
      <description>&lt;p&gt;Internet Message Access Protocol (&lt;a href="https://webhostingprime.com/what-is-imap-definitive-guide/"&gt;IMAP&lt;/a&gt;) is a notable convention that is normalized to get messages from a neighbourhood customer on a distant waiter. IMAP lives in the application layer of the OSI (Open System Interconnection) model on which the web is based.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Poa9Rvq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sy1n3qllv93v22tuqi12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Poa9Rvq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sy1n3qllv93v22tuqi12.png" alt="IMAP" width="679" height="284"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;IMAP utilizes the profound situated vehicle layer to set up have-to-have correspondence for giving applications and administrations. This requires the consideration of the remote email server.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#history-and-evolution-of-imap"&gt;
  &lt;/a&gt;
  History and Evolution of IMAP
&lt;/h3&gt;

&lt;p&gt;It was Mark Crispin who planned the first form of IMAP in 1986. Since the hour of its origin, IMAP was portrayed as a somewhat controlled letter drop convention. During that time the Post Office Protocol (POP) had effectively gathered colossal acknowledgement.&lt;/p&gt;

&lt;p&gt;Essentially all significant email specialist organizations for the most part use two conventions, for example, IMAP and POP to their fullest possibilities. In IMAP, the messages remain put away inside the server until and except if they are erased by the customer. Likewise, IMAP approves customers to get entrance and control of their letter drops.&lt;/p&gt;

&lt;p&gt;A solicitation for an email from a specific client is coordinated through the concentrated server. The server has an extra room reserved for email records. A client can profit from IMAP by acquiring the capacity to see email headers, check the pertinence of messages, search for catchphrases in email bodies, erase messages, make and control various envelopes and letterboxes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#imap-versions"&gt;
  &lt;/a&gt;
  IMAP Versions
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;IMAP2&lt;/li&gt;
&lt;li&gt;IMAP3&lt;/li&gt;
&lt;li&gt;IMAPbis&lt;/li&gt;
&lt;li&gt;IMAP4&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Features of IMAP&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A client can get to and recover messages from a far off server. Likewise, one can hold the messages on the server.&lt;/li&gt;
&lt;li&gt;There are message hails that you can set to keep a watch on the messages you have as of now seen or read.&lt;/li&gt;
&lt;li&gt;It is workable for you to deal with a few letter drops at the same time. This implies messages can be moved between letterboxes. * You can figure them out into various classes or organizers so that individuals joined to various tasks think that it is not difficult to get to the envelopes applicable to them.&lt;/li&gt;
&lt;li&gt;You can discover the significance of the data an email conveys prior to downloading it. Likewise, you can choose whether to download the email from the server or not. Messages that give off an impression of being spam or unimportant can be dismissed or erased right away.&lt;/li&gt;
&lt;li&gt;You can download a specific piece of the message and it very well may be the body of the email. This is especially helpful when huge size media documents are installed in a message having a short message.&lt;/li&gt;
&lt;li&gt;You can arrange the messages on the server according to your necessities. For example, you can keep the email drafts in a single spot or a particular envelope on the server.
There is a quest choice to search for explicit email substance.&lt;/li&gt;
&lt;li&gt;You can make envelopes in the post box as a way to place messages in a progressive request.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#advantages-of-imap"&gt;
  &lt;/a&gt;
  Advantages of IMAP
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You can get messages remotely put away in the server from a few unique areas.&lt;/li&gt;
&lt;li&gt;The messages are upheld of course.&lt;/li&gt;
&lt;li&gt;It offers added security as the messages exist just inside the IMAP server.&lt;/li&gt;
&lt;li&gt;It keeps a great deal of extra room for possible later use by recovering a message exactly when you want to go through it.
You can get an overall audit or synopsis of the messages from the downloaded headers.&lt;/li&gt;
&lt;li&gt;In view of its quick network, it doesn‚Äôt trust that the messages will seem consistent. Advanced IMAP puts the rundown of every one of your messages in plain view immediately.&lt;/li&gt;
&lt;li&gt;You may not require a functioning web association for getting to the messages.&lt;/li&gt;
&lt;li&gt;It provides you with the choice of locally putting away messages.&lt;/li&gt;
&lt;li&gt;Letterboxes working through IMAP can be effectively moved to start with one gadget then onto the next on account of its synchronization with an incorporated server.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;With the whole world becoming more and more mobile-dependent, the popularity of IMAP, too, is increasing rapidly. The widespread proliferation of laptops, smartphones, tablets, and other mobile devices is multiplying the scope and demand for IMAP by leaps and bounds. Thus, in the coming years, IMAP will certainly remain the most preferred emailing protocol.&lt;/p&gt;

</description>
      <category>imap</category>
      <category>tutorial</category>
      <category>guide</category>
    </item>
    <item>
      <title>C++ from the beginning, working with files</title>
      <author>Chris Noring</author>
      <pubDate>Tue, 16 Nov 2021 13:46:59 +0000</pubDate>
      <link>https://dev.to/softchris/c-from-the-beginning-working-with-files-2kpd</link>
      <guid>https://dev.to/softchris/c-from-the-beginning-working-with-files-2kpd</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;TLDR; In this article we will at how you can work with the file system which will involves reading and writing to files.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Series:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%C2%A0the-full-series"&gt;
  &lt;/a&gt;
  ¬†The full series
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/azure/c-from-the-beginning-2o2l"&gt;Your first program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/azure/c-from-the-beginning-variables-22nm"&gt;Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/azure/c-from-the-beginning-input-and-output-5ad0"&gt;Working with input and output&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/azure/c-from-the-beginning-functions-5cnl"&gt;Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/azure/c-from-the-beginning-control-flow-21jg"&gt;Control flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Working with files, &lt;strong&gt;you are here&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Pointers&lt;/li&gt;
&lt;li&gt;Error management&lt;/li&gt;
&lt;li&gt;Structs and Classes&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#%C2%A0resources"&gt;
  &lt;/a&gt;
  ¬†Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/cpp/standard-library/fstream?view=msvc-170"&gt;fstream docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#files"&gt;
  &lt;/a&gt;
  Files
&lt;/h2&gt;

&lt;p&gt;Your operating system is full of files, both files that you create and other files that belong to the operating system that you shouldn't touch. Many applications out there rely on files and the ability to create files for logging purposes for example or various reports. Additionally, being able to read from files is an important thing to be able to do.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fstream-library"&gt;
  &lt;/a&gt;
  Fstream library
&lt;/h2&gt;

&lt;p&gt;In C++ you have a standard library called &lt;code&gt;fstream&lt;/code&gt; that allows you to work with the file system. It exposes three important classes that you should know about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;ofstream&lt;/code&gt;. With an instance of this class you can create and write to files.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ifstream&lt;/code&gt;. This library enables you to read to files.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;fstream&lt;/code&gt;. Sometimes you need the capability to both read and write, for that, you have &lt;code&gt;fstream&lt;/code&gt;, capable of doing both.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#%C2%A0reading"&gt;
  &lt;/a&gt;
  ¬†Reading
&lt;/h2&gt;

&lt;p&gt;Let's start with reading from a file. You use &lt;code&gt;ifstream&lt;/code&gt; and create an object instance for it like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="n"&gt;ifstream&lt;/span&gt; &lt;span class="nf"&gt;readstream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"file.txt"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see from the code, also specify a string that represents the full path to the file, including its file name.&lt;/p&gt;

&lt;p&gt;At this point, you have reference to the file and is ready to read from it. So how do you read from it?&lt;/p&gt;

&lt;p&gt;You use &lt;code&gt;getline()&lt;/code&gt; in combination with a &lt;code&gt;while&lt;/code&gt; loop to read each row from the file, line by line, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;readstream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;readstream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;getline()&lt;/code&gt; will return &lt;code&gt;false&lt;/code&gt; when there's no more to be read in the stream. Note how &lt;code&gt;close()&lt;/code&gt; is called as the last thing we do. It's important to close a stream or you might actually lock access for other code to access the file when you are done with it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#check-if-we-can-read"&gt;
  &lt;/a&gt;
  Check if we can read
&lt;/h3&gt;

&lt;p&gt;So far, we've been very optimistic, we assume the file exist and we have the rights to read from it as well. However, you might be in a situation where the file doesn't exist, or you don't have rights to read from it. For that reason, you need to check whether the file is ready to be read from. Here's some code that checks that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="nf"&gt;can_read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;ifstream&lt;/span&gt; &lt;span class="n"&gt;readstream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;readstream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;exists&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// is_open&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;readstream&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;exists&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;readstream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What's going on is that we call &lt;code&gt;readstream.open()&lt;/code&gt;, if we can read from this stream, then we are good to go. There are two ways to check its status, either as pictured above:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="n"&gt;readstream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"path/to/file/file.txt"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;readstream&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// all is well&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or you can use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="n"&gt;readstream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_open&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;which returns a boolean, &lt;code&gt;true&lt;/code&gt; if you can read from it, and &lt;code&gt;false&lt;/code&gt;, if you can't.&lt;/p&gt;

&lt;p&gt;Worth noting is that it's hard to differ between cases such as that a file doesn't exist, and you don't have permission to read from it. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reading-a-few-characters"&gt;
  &lt;/a&gt;
  Reading a few characters
&lt;/h3&gt;

&lt;p&gt;So far, you've seen how you read file content, line by line, you can also read a few characters or bytes at a time and more. Dealing with files is a really big topic, but let's show how you read a few characters:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;ifstream&lt;/span&gt; &lt;span class="nf"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"file.txt"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code will instruct the &lt;code&gt;ifstream&lt;/code&gt;, instance to read 5 characters from the stream and place it in the &lt;code&gt;array&lt;/code&gt; variable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%C2%A0writing-to-a-file"&gt;
  &lt;/a&gt;
  ¬†Writing to a file
&lt;/h2&gt;

&lt;p&gt;To write to a file, we need an instance of &lt;code&gt;ostream&lt;/code&gt; and the name of the file, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="n"&gt;ostream&lt;/span&gt; &lt;span class="nf"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"new_file.txt"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;ostream&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"line1&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;ostream&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"line2"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;ostream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code will create the file &lt;em&gt;new_file.txt&lt;/em&gt; and two rows of text and then close the stream, which is important when you write to it as well. If this file already exists, its content will be replaced, so a heads up. What if you just want to add content to an existing file? &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#append"&gt;
  &lt;/a&gt;
  Append
&lt;/h3&gt;

&lt;p&gt;Sometimes you just want to add content, and to do that, you need a slightly altered way of calling the code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="n"&gt;ostream&lt;/span&gt; &lt;span class="n"&gt;writestream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;writestream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"new_file.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ios_base&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;writestream&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"add this last"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;writestream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note how we use the method &lt;code&gt;open()&lt;/code&gt;. Said method allows us to specify filename, as well as how to treat the file. The default with a &lt;code&gt;writestream&lt;/code&gt; is to attempt to create the file and replace what's there if it already exists. What we are doing is providing &lt;code&gt;ios_base::app&lt;/code&gt;, which is an instruction that says &lt;em&gt;append&lt;/em&gt;, i.e. add the content to the end of the file.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;In this article, we've learned how to work with files, reading and writing to them. Hopefully, you know have enough knowledge to learn to use files as part of your apps.&lt;/p&gt;

</description>
      <category>cpp</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to Delete a File or Folder that Can‚Äôt Be Deleted, Is Write-Protected or Can‚Äôt Be Accessed?</title>
      <author>Michael Mirosnichenko</author>
      <pubDate>Tue, 16 Nov 2021 13:41:34 +0000</pubDate>
      <link>https://dev.to/hetmansoftware/how-to-delete-a-file-or-folder-that-cant-be-deleted-is-write-protected-or-cant-be-accessed-18ck</link>
      <guid>https://dev.to/hetmansoftware/how-to-delete-a-file-or-folder-that-cant-be-deleted-is-write-protected-or-cant-be-accessed-18ck</guid>
      <description>&lt;p&gt;Do you have a problem when you can‚Äôt delete a folder or several files from your PC or laptop? Does Windows show you an ‚Äúaccess denied‚Äù error? It can happen due to various causes when you delete, edit or overwrite files. Read this article to find out how to delete a file or folder that can‚Äôt be deleted because of write protection, denied access, virus infection or opening a file in an unknown program.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-disk-is-writeprotected"&gt;
  &lt;/a&gt;
  The disk is write-protected
&lt;/h2&gt;

&lt;p&gt;If you try to delete a file or folder from a pen drive, memory card or a hard disk and see the message saying The disk is write-protected, it means some sort of protection against writing data is set up for such disk.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---sCRWTEg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nf4yzxywtjf50lf3qen.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---sCRWTEg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nf4yzxywtjf50lf3qen.png" alt="Image description" width="456" height="254"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#could-not-find-this-item"&gt;
  &lt;/a&gt;
  Could not find this item
&lt;/h2&gt;

&lt;p&gt;If you get this kind of message when deleting a file or folder: Could not find this item. Verify the item‚Äôs location and try again, there might be several causes behind this problem:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A system error (a glitch concerning rights to the file or folder which you are trying to delete; a problem with the name of such file or folder: it might be either too long or contain certain symbols which cause a conflict when the operating system tries to remove the item etc).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The computer could be infected by a virus.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r42XsPXs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g109xwfb7e84bbyqlgdp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r42XsPXs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g109xwfb7e84bbyqlgdp.png" alt="Image description" width="453" height="215"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In such a situation, try deleting the problem-plagued file or folder with the following utilities:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Total Commander;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ltJ4RVoR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0hzxuqi8s3wjxvw9wgym.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ltJ4RVoR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0hzxuqi8s3wjxvw9wgym.png" alt="Image description" width="788" height="535"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Far;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tiHr4MMc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kaqbf9anbd8f8y7n1o1c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tiHr4MMc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kaqbf9anbd8f8y7n1o1c.png" alt="Image description" width="610" height="319"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If using the programs that we listed above couldn‚Äôt help you, boot the computer in the safe mode and try removing the file or folder in such a way. If the cause of file blocking is a virus, in most cases you can delete the files without any additional actions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zkX5AhpR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cwiueqw89vzu2pv2gywk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zkX5AhpR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cwiueqw89vzu2pv2gywk.png" alt="Image description" width="788" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-have-no-rights-to-modify-files"&gt;
  &lt;/a&gt;
  You have no rights to modify files
&lt;/h2&gt;

&lt;p&gt;If Windows says you don‚Äôt have the necessary rights to modify files, then you need to use the administrator‚Äôs account to be able to delete or edit the file. Sign in with the administrator‚Äôs rights. There is no other way to do it‚Ä¶&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qggZHiYb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/siewej2b5f6h8y80nw6a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qggZHiYb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/siewej2b5f6h8y80nw6a.png" alt="Image description" width="455" height="241"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-file-or-folder-cannot-be-deleted-because-it-is-opened-in-another-program"&gt;
  &lt;/a&gt;
  A file or folder cannot be deleted because it is opened in another program
&lt;/h2&gt;

&lt;p&gt;If Windows displays a message that a file or folder cannot be deleted because it is opened in another program, remember the name of such program and do the following:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Et14uFJu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zk86944ga4ujvv1s2sfb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Et14uFJu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zk86944ga4ujvv1s2sfb.png" alt="Image description" width="454" height="269"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Press the key shortcut Windows + r.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the Run window, type in ‚Äúresmon.exe‚Äù and press Enter.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yioujlXt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9hessfvlcnjedmapves2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yioujlXt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9hessfvlcnjedmapves2.png" alt="Image description" width="405" height="213"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the tab ‚ÄúOverview‚Äù find the program that prevents you from deleting the file or folder, right-click on it and select End process. Repeat this step, if the name of the program is shown several times in the tab ‚ÄúOverview.‚Äù&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o9MYiAnm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1b1nm5m1iag3we5dh9o0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o9MYiAnm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1b1nm5m1iag3we5dh9o0.png" alt="Image description" width="739" height="560"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Try deleting the files again.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you couldn‚Äôt delete the files or folders in any of the ways, describe your situation and ask questions in comments.&lt;/p&gt;

&lt;p&gt;Read the &lt;a href="https://hetmanrecovery.com/recovery_news/how-to-delete-a-file-or-folder-that-cannot-be-deleted-is-write-protected-or-cannot-be-accessed.htm"&gt;full article&lt;/a&gt; with all additional video tutorials. Also visit our &lt;a href="https://www.youtube.com/channel/UCu-D9QnPsAPn7AtxL4HXLUg"&gt;Youtube channel&lt;/a&gt;, there are over 400 video tutorials.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>testing</category>
      <category>security</category>
    </item>
    <item>
      <title>How to execute a recurrent task in a Flask app?</title>
      <author>Maxime Guilbert</author>
      <pubDate>Tue, 16 Nov 2021 13:39:48 +0000</pubDate>
      <link>https://dev.to/adaendra/how-to-execute-a-recurrent-task-in-a-flask-app-1bk7</link>
      <guid>https://dev.to/adaendra/how-to-execute-a-recurrent-task-in-a-flask-app-1bk7</guid>
      <description>&lt;p&gt;In some projects, we need to do dome recurrent tasks while running a Flask API.&lt;/p&gt;

&lt;p&gt;So do be able to do it in a Flask project, we need to use &lt;strong&gt;APScheduler&lt;/strong&gt;.&lt;br&gt;
With this tool, we are able to create background schedulers which will execute our recurrent task.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#install"&gt;
  &lt;/a&gt;
  Install
&lt;/h2&gt;

&lt;p&gt;Using &lt;strong&gt;pip&lt;/strong&gt;, you can install the library as follow.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;pip install APScheduler&lt;/p&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;p&gt;To use it, check the following example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;atexit&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;apscheduler.schedulers.background&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BackgroundScheduler&lt;/span&gt;

&lt;span class="c1"&gt;# Declaration of the task as a function.
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;print_date_time&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%A, %d. %B %Y %I:%M:%S %p"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


&lt;span class="c1"&gt;# Create the background scheduler
&lt;/span&gt;&lt;span class="n"&gt;scheduler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BackgroundScheduler&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# Create the job
&lt;/span&gt;&lt;span class="n"&gt;scheduler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_job&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;print_date_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;trigger&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"interval"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Start the scheduler
&lt;/span&gt;&lt;span class="n"&gt;scheduler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# /!\ IMPORTANT /!\ : Shut down the scheduler when exiting the app
&lt;/span&gt;&lt;span class="n"&gt;atexit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scheduler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shutdown&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;APScheduler library : &lt;a href="https://pypi.org/project/APScheduler/"&gt;https://pypi.org/project/APScheduler/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;I hope it will help you! üç∫&lt;/p&gt;

</description>
      <category>python</category>
      <category>todayilearned</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
