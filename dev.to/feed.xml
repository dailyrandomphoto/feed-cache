<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Light Out game | Day 12</title>
      <author>Web.Developer.io</author>
      <pubDate>Sun, 16 Jan 2022 13:20:04 +0000</pubDate>
      <link>https://dev.to/developerioweb/light-out-game-day-12-2m6h</link>
      <guid>https://dev.to/developerioweb/light-out-game-day-12-2m6h</guid>
      <description>&lt;p&gt;Today I have made a Light Out Game , Not From the Scratch üòÖ&lt;br&gt;
It was an Exercise of the React Course BY Colt Steele.&lt;br&gt;
The Game Look Like This üëá&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4m_gOw3c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cuol3xonjzytximpn5k6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4m_gOw3c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cuol3xonjzytximpn5k6.png" alt="Light out Game" width="823" height="710"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#working"&gt;
  &lt;/a&gt;
  Working
&lt;/h3&gt;

&lt;p&gt;When you clicks on any cell it will toggles his neighbouring cells. When all the Cells are off you won the Game.&lt;/p&gt;

&lt;p&gt;Your Task is to First Make a Board which have cells in it and you can use the Table to show the Cells in the Board(as a table Data.)&lt;/p&gt;

&lt;p&gt;Once you are done with that You have to do that every time You Refreshes the site the cell will randomly be on/off.&lt;/p&gt;

&lt;p&gt;After that you have to apply that whenever u click on a particular cell it will also toggles it's neighbouring cells.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#component-design"&gt;
  &lt;/a&gt;
  Component Design
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;App&lt;/strong&gt;&lt;br&gt;
As often, this is a very simple component. It just renders the Board component.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Board&lt;/strong&gt;&lt;br&gt;
The most sophisticated component. It will hold the state that represents the in-memory grid of true/false for lights-on/off. Since the state for the board lives here, this is also were the setState() calls will need to go ‚Äî and therefore, all the functions that call setState().&lt;br&gt;
&lt;strong&gt;Cell&lt;/strong&gt;&lt;br&gt;
A simpler component. This will simply render a &lt;code&gt;div&lt;/code&gt;, where the CSS classes will indicate whether this cell is lit or unlit. This is what the user clicks on ‚Äî but it will need to call a function it receives from the Board, since that will need to update the state.&lt;/p&gt;

&lt;p&gt;When the game is won, the board should not be shown, but a simple ‚ÄúYou Won‚Äù message should show in its place.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Happy Coding ‚ò∫Ô∏è&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Difference between bootstrap and twitter bootstrap</title>
      <author>Kodelogs</author>
      <pubDate>Sun, 16 Jan 2022 13:11:56 +0000</pubDate>
      <link>https://dev.to/kodelogs/difference-between-bootstrap-and-twitter-bootstrap-2mj2</link>
      <guid>https://dev.to/kodelogs/difference-between-bootstrap-and-twitter-bootstrap-2mj2</guid>
      <description>&lt;p&gt;Bootstrap is a CSS framework used in front-end applications - that is, in the user interface screen - to develop applications that adapt to any device.&lt;/p&gt;

&lt;p&gt;In WordPress, for example, it can be installed as a theme or used to develop plugins or even within them to stylize their functions. The framework's purpose is to offer users a more pleasant experience when browsing a site.&lt;/p&gt;

&lt;p&gt;For this reason, it has several resources to configure the styles of the page elements and efficiently and facilitate the construction of pages that, at the same time, are adapted for the web and mobile devices.&lt;/p&gt;

&lt;p&gt;The above shows why it is essential to know about a potential structure of this type&lt;/p&gt;

&lt;p&gt;What is Bootstrap?&lt;br&gt;
Bootstrap is a CSS framework developed by Twitter in 2010 to standardize business tools.&lt;/p&gt;

&lt;p&gt;It was initially called Twitter Blueprint, and soon after, in 2011, it went open source, and its name changed to Bootstrap. It is now updated several times and is already in version 4.4.&lt;/p&gt;

&lt;p&gt;The framework combines CSS and JavaScript to style the elements of an HTML page. This does more than change the colour of buttons and links.&lt;/p&gt;

&lt;p&gt;It is a tool that offers interactivity on the page. It, therefore, provides several components that facilitate communication with the user, such as navigation menus, page controls, progress bars, etc.&lt;br&gt;
In addition to all the functionalities offered by the framework, its main objective is to create responsive websites for mobile devices.&lt;/p&gt;

&lt;p&gt;This means that the pages are designed to work on desktops, tablets and smartphones, in a simple and organized way.&lt;/p&gt;

&lt;p&gt;Is There Any Difference Between Bootstrap and Twitter Bootstrap?&lt;br&gt;
No, there is no difference between them. They are the same thing. Twitter Bootstrap is called Bootstrap in short form.&lt;/p&gt;

&lt;p&gt;Hope you liked the post, kindly share it with your programmer friends.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Image Animation Using HTML CSS &amp; GSAP</title>
      <author>Nikhil Bobade </author>
      <pubDate>Sun, 16 Jan 2022 13:04:53 +0000</pubDate>
      <link>https://dev.to/nikhil27b/image-animation-using-html-css-gsap-1659</link>
      <guid>https://dev.to/nikhil27b/image-animation-using-html-css-gsap-1659</guid>
      <description>&lt;p&gt;Hello Guys,&lt;/p&gt;

&lt;p&gt;Today I Created an Amazing Image Animation using HTML CSS &amp;amp; GSAP Animation. To animate the image I use the &lt;code&gt;GSAP.timeline()&lt;/code&gt; and &lt;code&gt;gsap.from()&lt;/code&gt; method to achieve this effect. If you had multiple images on your website then use for each method like me else use a direct timeline method.&lt;/p&gt;

&lt;p&gt;I hope you like this also comments about your thoughts. also For more content &lt;strong&gt;follow me on Instagram&lt;/strong&gt;  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you üôÇ!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/NikhilBobade/embed/jOGdgPM?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Global error page in Angular</title>
      <author>Anirban Mukherjee</author>
      <pubDate>Sun, 16 Jan 2022 12:55:24 +0000</pubDate>
      <link>https://dev.to/anirbmuk/global-error-page-in-angular-3744</link>
      <guid>https://dev.to/anirbmuk/global-error-page-in-angular-3744</guid>
      <description>&lt;p&gt;This is a relatively small and simple article, but I felt it is still worth posting because of the utility of the topic.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/anirbmuk"&gt;
        anirbmuk
      &lt;/a&gt; / &lt;a href="https://github.com/anirbmuk/angular-error-handler"&gt;
        angular-error-handler
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Angular 12 application to demonstrate global error handling against a REST-based backend
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Any front-end application is all about serving data from a store, using end-points (REST/GraphQL or whichever you can think of). And a big part of your application's success is the way you can handle errors. The more gracefully you handle error situations, the better your users' experience will be.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J0F_eDQG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y87l8w7t8b6s0kxavbte.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J0F_eDQG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y87l8w7t8b6s0kxavbte.gif" alt="Preview" width="872" height="795"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On that note, let's talk about an approach to handle all sorts of errors in an Angular application.&lt;/p&gt;

&lt;p&gt;The idea behind this article is to manage all possible errors in one location and allow the application to navigate to an &lt;code&gt;error-page&lt;/code&gt; once any error is thrown. Now I would like to clarify that when I say error, I mean server side errors, emanating from your data end-points.&lt;/p&gt;

&lt;p&gt;To do this, we will make use of the one place through which every &lt;code&gt;HTTP&lt;/code&gt; request passes in an angular application - the &lt;code&gt;interceptor&lt;/code&gt;. We usually make use of the interceptor to tap outgoing requests and append headers, tokens etc. But we can also tap onto the incoming response and handle the error situations.&lt;/p&gt;

&lt;p&gt;When the &lt;code&gt;next: HttpHandler&lt;/code&gt; handles the request, the request is sent to the back-end server. We can pipe the observable to tap onto the incoming response.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;interceptor.service.ts:
intercept(
    req: HttpRequest&amp;lt;any&amp;gt;,
    next: HttpHandler
  ): Observable&amp;lt;HttpEvent&amp;lt;any&amp;gt;&amp;gt; {
    return next.handle(req).pipe(
      catchError((error) =&amp;gt; {
        const { code, message } = error.error;
        this.errorService.addError({
          code: code || error?.status,
          message: message || error?.statusText,
        });
        this.router.navigate(['/error']);
        return EMPTY;
      })
    );
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also navigate to our designated error page, which is designed to handle the error code and message and display it appropriately.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Additional improvisation&lt;/strong&gt;: Use a &lt;code&gt;resolver&lt;/code&gt; for the error component and check if the error observable has any value. If not then redirect to the home-page. This may be helpful when the user refreshes the error page; then it would make more sense to be taken to the home page to try again, instead of showing the same error once again.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;error.resolver.ts:
resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {
    return this.errorService.error$.pipe(
      take(1),
      tap((data) =&amp;gt; {
        if (!data) {
          throw new Error('No error');
        }
      }),
      catchError(() =&amp;gt; {
        this.router.navigate(['/']);
        return of(null);
      })
    );
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Cheers!&lt;br&gt;
Follow me on &lt;a href="https://twitter.com/anirbmuk"&gt;Twitter&lt;/a&gt; or connect with me on &lt;a href="https://www.linkedin.com/in/anirbmuk"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

</description>
      <category>angular</category>
      <category>typescript</category>
      <category>javascript</category>
      <category>errors</category>
    </item>
    <item>
      <title>JavaScript Functions Explained - Part 1</title>
      <author>Deep Space</author>
      <pubDate>Sun, 16 Jan 2022 12:51:09 +0000</pubDate>
      <link>https://dev.to/deep_space/javascript-functions-explained-part-1-4ldh</link>
      <guid>https://dev.to/deep_space/javascript-functions-explained-part-1-4ldh</guid>
      <description>&lt;p&gt;Easy to understand example codes, animations (hand made by me). This article and videos is designed for both "Desktop" &amp;amp; "Mobile" users.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-EYzUJE2tWo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you are a visual "mobile" person, the above video is for you.&lt;br&gt;
In JavaScript Variables, we learned where&amp;amp;how to stick your Data. But what about the actions that manipulate the Data? We need functions.&lt;/p&gt;



&lt;blockquote&gt;
&lt;p&gt;Table Of Contents:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;What is a function¬†? (General idea of a function)&lt;/li&gt;
&lt;li&gt;JavaScript Functions&lt;/li&gt;
&lt;li&gt;JavaScript Functions‚Ää-‚ÄäCall/Invoke Function&lt;/li&gt;
&lt;/ol&gt;


&lt;h2&gt;
  &lt;a href="#what-is-a-function%C2%A0-general-idea-of-a-function"&gt;
  &lt;/a&gt;
  What is a function¬†? (General idea of a function)
&lt;/h2&gt;

&lt;p&gt;There are many different explanations for the same thing. But I'll take my own approach. Because, that's how I personally learn myself.&lt;br&gt;
Instead of talking about specific functions. First, let's talk about the &lt;strong&gt;general idea of a function&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You can think of a function like a machine that¬†:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Can &lt;strong&gt;Take Input&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Process&lt;/strong&gt; it&lt;/li&gt;
&lt;li&gt;And &lt;strong&gt;give output/result&lt;/strong&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2Q3Jxl7k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/drcliphdry73b1gjji4d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2Q3Jxl7k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/drcliphdry73b1gjji4d.png" alt="general idea of a function. How a function works" width="880" height="172"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#javascript-functions"&gt;
  &lt;/a&gt;
  JavaScript Functions
&lt;/h2&gt;

&lt;p&gt;A JavaScript function, is a block of code designed to perform a particular task. They also can be reused &amp;amp; modified.&lt;br&gt;
A JavaScript function is executed/activated when something calls/invokes it.&lt;/p&gt;

&lt;p&gt;To create a function, write the keyword &lt;u&gt;function&lt;/u&gt;&lt;br&gt;
Then give it a name like &lt;u&gt;doSomething&lt;/u&gt; or whatever you name it (be descriptive).&lt;br&gt;
 Function names can contain letters, digits, underscores, and dollar signs (same rules as variables).&lt;/p&gt;

&lt;p&gt;At the end of the function name use &lt;strong&gt;()&lt;/strong&gt; a pair of parenthesis &lt;strong&gt;&lt;u&gt;doSomething()&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
A set of curly braces &lt;strong&gt;{}&lt;/strong&gt; at the end like so &lt;strong&gt;&lt;u&gt;doSomething () {}&lt;/u&gt;&lt;/strong&gt; to define the block, that the function will execute when its called/invoked.&lt;/p&gt;

&lt;p&gt;Inside there, I'll just print my name to the console, to make it a simple function.&lt;/p&gt;

&lt;p&gt;Example Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function doSomething() {
console.log("Lia Sue");
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you check the console, nothing hapens. That's because we actually have to invoke/call the functions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-functions%E2%80%8A%E2%80%8Acallinvoke-function"&gt;
  &lt;/a&gt;
  JavaScript Functions‚Ää-‚ÄäCall/Invoke Function
&lt;/h2&gt;

&lt;p&gt;The way we invoke or call a function is, we have to use or type its name. After we declare/create the function. At the end of the name put a pair of parenthesis like so &lt;strong&gt;&lt;u&gt;doSomething ();&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Declaring a function 
function doSomething() {
console.log("Lia Sue");
}
// Invoke / call function
doSomethiing();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;JavaScript Functions ‚Äî Video for Desktop users&lt;/p&gt;

&lt;p&gt;If you are reading it from a Desktop device and find vertical video annoying. Here‚Äôs a big video designed for Desktop, Enjoy!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/MJC3G9YN_yw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>functional</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How 1.5 years of writing posts on dev.to made me a better developer ‚úçÔ∏è‚ÜîÔ∏èüßë‚ÄçüíªüöÄ</title>
      <author>Pascal Thormeier</author>
      <pubDate>Sun, 16 Jan 2022 12:48:14 +0000</pubDate>
      <link>https://dev.to/thormeier/how-15-years-of-writing-posts-on-devto-made-me-a-better-developer--25j4</link>
      <guid>https://dev.to/thormeier/how-15-years-of-writing-posts-on-devto-made-me-a-better-developer--25j4</guid>
      <description>&lt;p&gt;I've been here for a while now. I love the community, the people are amazing and I learned so much while reading the amazing articles the authors on here have to offer.&lt;/p&gt;

&lt;p&gt;I also write articles every other week (shocking news, I know) and today I want to get a bit more meta about it. I want to tell you how writing articles has actually made me a better developer. Let's jump right in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creativity"&gt;
  &lt;/a&gt;
  Creativity üé®
&lt;/h2&gt;

&lt;p&gt;If you want your articles to be read by people, there's two things you more or less have to deliver: Usefulness and entertainment. I once read somewhere that a good tech talk is 60-80% entertainment and the rest is useful info about the topic. Although this is an opinion of someone, I think it has a very true core, also for the text medium. I love articles that are fun to read. I mean, who doesn't, really? If I want some info, I could read docs of topics, but when I browse articles on dev.to, the topic is the thing that grabs my attention, but I also stay for the fun.&lt;/p&gt;

&lt;p&gt;Writing useful &lt;em&gt;and&lt;/em&gt; entertaining articles on a regular basis means I have to get creative. Listicles write themselves, basically - and I'm also guilty of producing them every so often, I admit that - the next React to-do list tutorial is going to be read by people who want to get into the tech, yeah, but what's the fun in writing about that? I could write about the same exact topic for weeks on end (think: "React To Do list, but this time I'm only using my left hand!"), but people don't stick around for that, usually.&lt;/p&gt;

&lt;p&gt;I think of myself as a fairly creative person. Writing &lt;em&gt;and actually coming up with stuff to write about&lt;/em&gt;, though, greatly increased my creativity. And creativity is especially useful for a developer.&lt;/p&gt;

&lt;p&gt;Developers need to be creative in order to find the solutions that work best. They need to be creative in order to support the people they work with, be it business, design, or a client. They need to be creative in order to strive. Understanding and applying logic is one thing, but creativity is a large part of the job.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learning-new-stuff"&gt;
  &lt;/a&gt;
  Learning new stuff üéì
&lt;/h2&gt;

&lt;p&gt;I've written a few articles on things I only knew a little bit about when writing. I even made it a thing once to &lt;a href="https://dev.to/thormeier/i-m-going-to-give-snowpack-a-try-now-3ohm"&gt;document every step of learning a new tool called Snowpack&lt;/a&gt; or showing you what &lt;a href="https://dev.to/thormeier/crunching-numbers-stuff-i-wrote-for-project-euler-7ng"&gt;I've learned while messing around on Project Euler&lt;/a&gt;. Learning is an essential part of the job. If you're not switching jobs constantly or keep yourself busy with a ton of small side projects, chances are you're more or less focussing on a single tech stack that your company uses and get really proficient in that, while the outside world is constantly changing. New tools and techniques emerge and vanish again in the neverending cycle that software development really is.&lt;/p&gt;

&lt;p&gt;And that can be an issue. Spoiler: Anyone's favorite framework or language are not going to stick around for the rest of their entire career. Unless you're doing Kobol or SAP, of course, those will stick with us for the next few centuries, probably.&lt;/p&gt;

&lt;p&gt;Learning new things helps in different ways: You might find a new interesting tech stack to diversify your portfolio, you might find tools that could be useful some day (just had that exact case last Friday, actually!) or you might just learn a new paradigm that broadens your horizon in general.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#people"&gt;
  &lt;/a&gt;
  People üßë‚Äçü§ù‚Äçüßë
&lt;/h2&gt;

&lt;p&gt;Seriously, when I started writing articles, I thought this would be a one-person-show for most of the time, trying to find inspiration myself, delivering to the masses where I barely know a face, let alone the names of people. Turns out I was as wrong as I could be! The people you get to know, either by joining a Discord server or two, reading other people's articles or by discussing with them in the comment section is amazing.&lt;/p&gt;

&lt;p&gt;I just had an amazing call on Friday with someone I got to know through writing articles and reading theirs. We had a great exchange and figured we could help each other learn and reach our goals faster! This wouldn't have happend if I wasn't writing articles. This is, yet again, another learning opportunity for both of us. Which brings me to the next point:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#teaching"&gt;
  &lt;/a&gt;
  Teaching üßë‚Äçüè´
&lt;/h2&gt;

&lt;p&gt;An old saying goes: "You truly understood something if you can explain it to others so they understand it as well."&lt;/p&gt;

&lt;p&gt;And that's true! By trying to teach things in the tutorials I write and by explaining why I coded some things the way I coded them, I learn to question my own decisions and reflexes. There's go-to patterns everywhere, but maybe those are not the ideal patterns to begin with. Perhaps they're hard to understand and unnecessarily complicated. By trying to explain them, I question them. If they're too complex, I try to simplify or find a different way to solve a problem entirely.&lt;/p&gt;

&lt;p&gt;It also helps me coach juniors or people in the bootcamps I sometimes attend as a coach. It helps me to explain technical decisions to non-technical people, making me at least &lt;em&gt;look&lt;/em&gt; more senior.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#escaping-the-comfort-zone"&gt;
  &lt;/a&gt;
  Escaping the comfort zone üé¢
&lt;/h2&gt;

&lt;p&gt;We all have our comfort zones. Some are smaller, some are larger, but we all know things we would rather not do. Be it because we think we're bad at it, or because we're actually bad at it, or because we're afraid people will judge us, you name it. Comfort zones exist and that's a good thing. They let us excell at what we're good at and let us avoid things we might break.&lt;/p&gt;

&lt;p&gt;But getting out of the comfort zone every now and then is necessary in order to evolve. Writing, and also for some people the interaction with the community, forces one out of their comfort zone on a regular basis. Some people will hate your posts, others will love them, that's just how it works. You cant satisfy everybody at once.&lt;/p&gt;

&lt;p&gt;Writing articles puts you on a stage. You might feel uncomfortable being on that stage (the comfort zone I was talking about), but after some articles you will &lt;em&gt;want&lt;/em&gt; to be on that stage. The positive feedback you get will be amazing. And it helped me to get out of my comfort zone in other areas as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-the-end"&gt;
  &lt;/a&gt;
  In the end
&lt;/h2&gt;

&lt;p&gt;I told you about all the personal benefits I got of writing articles on dev.to. Perhaps you agree, perhaps you don't, perhaps it has inspired you to write articles yourself now! I'm certainly inspired now. And off I go to the next article draft!&lt;/p&gt;




&lt;p&gt;&lt;em&gt;I hope you enjoyed reading this article as much as I enjoyed writing it! If so, leave a&lt;/em&gt; ‚ù§Ô∏è &lt;em&gt;or a&lt;/em&gt; ü¶Ñ&lt;em&gt;! I write tech articles in my free time and like to drink coffee every once in a while.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you want to support my efforts,&lt;/em&gt; &lt;a href="http://buymeacoffee.com/pthormeier"&gt;&lt;em&gt;you can offer me a coffee&lt;/em&gt; ‚òï&lt;/a&gt; &lt;em&gt;or&lt;/em&gt; &lt;a href="https://twitter.com/pthormeier"&gt;&lt;em&gt;follow me on Twitter&lt;/em&gt; üê¶&lt;/a&gt;&lt;em&gt;!&lt;/em&gt; &lt;em&gt;You can also support me directly via &lt;a href="https://www.paypal.me/pthormeier"&gt;Paypal&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://buymeacoffee.com/pthormeier"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kc4mYYLu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/x55hp6jopwyy161d8e2u.png" alt="Buy me a coffee button" width="262" height="60"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>discuss</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>How to separate public folder in laravel</title>
      <author>BELHARRADI JAMAL</author>
      <pubDate>Sun, 16 Jan 2022 12:44:05 +0000</pubDate>
      <link>https://dev.to/jamalroger/how-to-separate-public-folder-in-laravel-3ld</link>
      <guid>https://dev.to/jamalroger/how-to-separate-public-folder-in-laravel-3ld</guid>
      <description>&lt;p&gt;&lt;strong&gt;Hi&lt;/strong&gt;,everyone know that is really difficult to host &lt;strong&gt;Laravel&lt;/strong&gt; project on shared host because they give just one folder &lt;strong&gt;public_html&lt;/strong&gt;, and is the only entry point folder. but the structure of Laravel entry point of laravel is not the** root of project ** is &lt;strong&gt;root_project/public&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-how-can-i-host-laravel-in-this-situation-"&gt;
  &lt;/a&gt;
  So how can i host &lt;strong&gt;Laravel&lt;/strong&gt; in this situation ??
&lt;/h2&gt;

&lt;p&gt;The best solution is to separate &lt;strong&gt;public folder&lt;/strong&gt; from &lt;strong&gt;Laravel&lt;/strong&gt; project.&lt;br&gt;
From  structure&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cQnhjNEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84e9uxja2kcafthxtxhv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cQnhjNEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84e9uxja2kcafthxtxhv.png" alt="structure" width="555" height="203"&gt;&lt;/a&gt;&lt;br&gt;
To structure&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mrped6em--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3btfr1u5fukqi2iuicsp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mrped6em--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3btfr1u5fukqi2iuicsp.png" alt="structure" width="502" height="49"&gt;&lt;/a&gt;&lt;br&gt;
With new structure we move public folder outside src code.&lt;br&gt;
so now we change the name of folder &lt;strong&gt;public&lt;/strong&gt; to &lt;strong&gt;public_html&lt;/strong&gt; to host the project. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T7AZGM_h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfw13t7gx62w3dhhz7ad.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T7AZGM_h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfw13t7gx62w3dhhz7ad.jpg" alt="hosting" width="236" height="236"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First we should bind public_path in &lt;strong&gt;bootstrap/app.php&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// add this before return $app;&lt;/span&gt;
&lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'path.public'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;base_path&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/../public_html'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that we need  update path in &lt;strong&gt;server.php&lt;/strong&gt; and *&lt;em&gt;index.php &lt;br&gt;
*&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;server.php *&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cd"&gt;/**
 * Laravel - A PHP Framework For Web Artisans
 *
 * @package  Laravel
 * @author   Taylor Otwell &amp;lt;taylor@laravel.com&amp;gt;
 */&lt;/span&gt;

&lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;urldecode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nb"&gt;parse_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="kc"&gt;PHP_URL_PATH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// This file allows us to emulate Apache's "mod_rewrite" functionality from the&lt;/span&gt;
&lt;span class="c1"&gt;// built-in PHP web server. This provides a convenient way to test a Laravel&lt;/span&gt;
&lt;span class="c1"&gt;// application without having installed a "real" web server software here.&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="s1"&gt;'/'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;file_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/../public_html'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;require_once&lt;/span&gt; &lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/../public_html/index.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;index.php in public_html&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Contracts\Http\Kernel&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Http\Request&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'LARAVEL_START'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;microtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="cm"&gt;/*
|--------------------------------------------------------------------------
| Check If The Application Is Under Maintenance
|--------------------------------------------------------------------------
|
| If the application is in maintenance / demo mode via the "down" command
| we will load this file so that any pre-rendered content can be shown
| instead of starting the framework, which could cause an exception.
|
*/&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/../src/storage/framework/maintenance.php'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/../src/storage/framework/maintenance.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/*
|--------------------------------------------------------------------------
| Register The Auto Loader
|--------------------------------------------------------------------------
|
| Composer provides a convenient, automatically generated class loader for
| this application. We just need to utilize it! We'll simply require it
| into the script here so we don't need to manually load our classes.
|
*/&lt;/span&gt;

&lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/../src/vendor/autoload.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/*
|--------------------------------------------------------------------------
| Run The Application
|--------------------------------------------------------------------------
|
| Once we have the application, we can handle the incoming request using
| the application's HTTP kernel. Then, we will send the response back
| to this client's browser, allowing them to enjoy our application.
|
*/&lt;/span&gt;

&lt;span class="nv"&gt;$app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;require_once&lt;/span&gt; &lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/../src/bootstrap/app.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;$kernel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Kernel&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$kernel&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Request&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;capture&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;send&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nv"&gt;$kernel&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;terminate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That all isn't simple !!!,now you can easily host laravel project on shared hosting any problem of storage or anything else. &lt;br&gt;
you can clone an example from repo  &lt;a href="https://github.com/jamalroger/laravel-new-structure"&gt;laravel-new-structure&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope that you the article and see you again with another article.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2vrOr1v7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbywvf6972vitmqwani3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2vrOr1v7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbywvf6972vitmqwani3.png" alt="end" width="651" height="476"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>CloudWatch RUM for all insights</title>
      <author>Jones Zachariah Noel</author>
      <pubDate>Sun, 16 Jan 2022 12:03:15 +0000</pubDate>
      <link>https://dev.to/aws-builders/cloudwatch-rum-for-all-insights-km5</link>
      <guid>https://dev.to/aws-builders/cloudwatch-rum-for-all-insights-km5</guid>
      <description>&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-RUM.html"&gt;CloudWatch RUM&lt;/a&gt; was recently launched during re:Invent 2021 which provides insights to your web-application about certain metrics based on user-actions and errors for debugging.&lt;br&gt;
You can read about the &lt;a href="https://aws.amazon.com/about-aws/whats-new/2021/11/amazon-cloudwatch-rum-applications-client-side-performance/"&gt;announcement&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ik-UMlVJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1465736248325468162/W1G0iK5K_normal.jpg" alt="Jeff Barr ‚òÅÔ∏è (@ üè† ) üíâ profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Jeff Barr ‚òÅÔ∏è (@ üè† ) üíâ
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @jeffbarr
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      New ‚Äì Real-User Monitoring for Amazon CloudWatch - &lt;a href="https://t.co/kiVCRuzglr"&gt;aws.amazon.com/blogs/aws/clou‚Ä¶&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/AWS"&gt;#AWS&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/reInvent"&gt;#reInvent&lt;/a&gt; &lt;br&gt;&lt;br&gt;"You simply register your application, add a snippet of JavaScript to the header of each page, and deploy."
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      18:19 PM - 29 Nov 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1465384891869138946" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1465384891869138946" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1465384891869138946" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h3&gt;
  &lt;a href="#key-takeways-from-the-blog"&gt;
  &lt;/a&gt;
  Key takeways from the blog
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#understanding-rum"&gt;Understanding CloudWatch RUM &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setting-up-rum"&gt;Setting-up RUM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data"&gt;Different telemetry data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#understanding-cloudwatch-rum"&gt;
  &lt;/a&gt;
  Understanding CloudWatch RUM &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;CloudWatch Real-User Monitoring (RUM)&lt;/strong&gt; is a monitoring functionality facilitated by CloudWatch which has always been the monitoring tool on AWS. RUM enables developers and DevOps engineers to understand the issues/errors encountered on the web-app and also insights such as which &lt;em&gt;device&lt;/em&gt; or &lt;em&gt;browser&lt;/em&gt; or &lt;em&gt;location&lt;/em&gt; had the error. Additionally, there is performance insights and the time taken for a file to load on the client side along with the geographically information. &lt;br&gt;
As &lt;a href="https://twitter.com/jeffbarr"&gt;Jeff Barr&lt;/a&gt; quotes it, it's that simple to implement on the client side.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You simply register your application, add a snippet of JavaScript to the header of each page, and deploy.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;strong&gt;CloudWatch RUM&lt;/strong&gt; consolidated and provides dashboard which gives you a detailed insights such as - &lt;em&gt;page load speed&lt;/em&gt;, &lt;em&gt;geographic info&lt;/em&gt;, &lt;em&gt;devices&lt;/em&gt;, &lt;em&gt;browsers&lt;/em&gt;, &lt;em&gt;average load during the time&lt;/em&gt;, &lt;em&gt;user journey&lt;/em&gt;. All this with just a snippet of JS to page.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#settingup-rum"&gt;
  &lt;/a&gt;
  Setting-up RUM &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;CloudWatch Real-User Monitoring (RUM)&lt;/strong&gt; setup can be summarized with the 3 steps - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#add-app"&gt;Add app monitor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#snippet"&gt;Adding the JS snippet to your web app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#monitoring"&gt;Monitor the web-app from CloudWatch console&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j6xRDFKC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lql0okoyaqdf86l7bvc8.png" alt="Setting-up RUM" width="880" height="502"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#add-app-monitor"&gt;
  &lt;/a&gt;
  Add app monitor &lt;a&gt;&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;While adding a new app monitor, you would have to specify details such as - &lt;em&gt;app monitor name&lt;/em&gt;, &lt;em&gt;app domain&lt;/em&gt; and an option to include the sub-domains of the &lt;em&gt;app domain&lt;/em&gt;. &lt;br&gt;
You can choose what all data is been collected and stored as telemetry data for the dashboards.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KxfaqKOk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oon6wubl4x5t70o9qoqu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KxfaqKOk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oon6wubl4x5t70o9qoqu.png" alt="Configs" width="846" height="584"&gt;&lt;/a&gt;&lt;br&gt;
The telemetry data is stored only for &lt;em&gt;30 days&lt;/em&gt;, so if you would wish to store the logs, you can create a CloudWatch log event which captures and stores all these datas.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KUnBmOHY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dh7h9f43fng40mpiy8aa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KUnBmOHY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dh7h9f43fng40mpiy8aa.png" alt="Data storage" width="847" height="174"&gt;&lt;/a&gt;&lt;br&gt;
CloudWatch RUM needs authorization to access AWS resources, for which Amazon Cognito Identity Pools are used.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T_GrSGP0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5njjdh4waldl06jxn6pj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T_GrSGP0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5njjdh4waldl06jxn6pj.png" alt="Authorization" width="847" height="380"&gt;&lt;/a&gt;&lt;br&gt;
The telemetry data of the web-pages can also be fine grained to the choice of &lt;em&gt;all pages&lt;/em&gt;, &lt;em&gt;specific pages only&lt;/em&gt; or &lt;em&gt;exclude certain pages&lt;/em&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mrOUaAKl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ga51iqhbfl9utkez5ba.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mrOUaAKl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ga51iqhbfl9utkez5ba.png" alt="Configure pages" width="844" height="352"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#adding-the-js-snippet-to-your-web-app"&gt;
  &lt;/a&gt;
  Adding the JS snippet to your web app &lt;a&gt;&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Once you save the configurations and add the app monitor, you would be presented with a JavaScript snippet. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p1iRGnJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s05rdacka8aka413x1sv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p1iRGnJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s05rdacka8aka413x1sv.png" alt="JS snippet" width="880" height="377"&gt;&lt;/a&gt;&lt;br&gt;
As simple as it is, this just needs to be added to the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; of your web-page which is sending telemetry data using the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#monitor-the-webapp-from-cloudwatch-console"&gt;
  &lt;/a&gt;
  Monitor the web-app from CloudWatch console &lt;a&gt;&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Once set-up and moved your web-page to the server, you can navigate to your CloudWatch console to view the dashboard. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7gm_mqBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p1ugnlipbnfe0pjqlayl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7gm_mqBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p1ugnlipbnfe0pjqlayl.png" alt="Overview dashboard" width="880" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#different-telemetry-data"&gt;
  &lt;/a&gt;
  Different telemetry data &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;From your CloudWatch console, you can view different types of insights. The previous section shows the overview of your app monitor.&lt;/p&gt;

&lt;p&gt;Page load speed data for 1 month (Dec 17th 2021 - Jan 16th 2022)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mK2hf5IR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v3v9jgnej3m3uzy7tg8f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mK2hf5IR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v3v9jgnej3m3uzy7tg8f.png" alt="Page load speed" width="880" height="411"&gt;&lt;/a&gt;&lt;br&gt;
Different web vitals for 1 month (Dec 17th 2021 - Jan 16th 2022)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DICeeh9I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rcd8xted81f9krtcrn4l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DICeeh9I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rcd8xted81f9krtcrn4l.png" alt="Different web vitals" width="880" height="514"&gt;&lt;/a&gt;&lt;br&gt;
Different web browsers used for 1 month (Dec 17th 2021 - Jan 16th 2022)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_qi11mPG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ykmjrrnaj651j5qhcolg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_qi11mPG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ykmjrrnaj651j5qhcolg.png" alt="Different web browsers" width="880" height="407"&gt;&lt;/a&gt;&lt;br&gt;
Different devices used for 1 month (Dec 17th 2021 - Jan 16th 2022)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--duIt4Uw3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hf0ik17vhdpzxeodi2s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--duIt4Uw3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hf0ik17vhdpzxeodi2s.png" alt="Different devices" width="880" height="309"&gt;&lt;/a&gt;&lt;br&gt;
Different locations with page load time for 1 month (Dec 17th 2021 - Jan 16th 2022)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nEuLEWa4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ehh8rd83xdm1tsrax91.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nEuLEWa4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ehh8rd83xdm1tsrax91.png" alt="Different locations with page load time" width="880" height="465"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Different locations with sessions for 1 month (Dec 17th 2021 - Jan 16th 2022)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xG5X4H8Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prhlfazix06zmnyx7stg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xG5X4H8Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prhlfazix06zmnyx7stg.png" alt="Different locations with sessions" width="880" height="466"&gt;&lt;/a&gt;&lt;br&gt;
You can view the details at a country filter of sessions for 1 month (Dec 17th 2021 - Jan 16th 2022)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k75MG6xx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b14ay7wgb7e06idwzkud.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k75MG6xx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b14ay7wgb7e06idwzkud.png" alt="Country filter" width="880" height="431"&gt;&lt;/a&gt;&lt;br&gt;
For multiple pages, you can even get the user-journey.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DZkkCYLR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ly2lw177be3ot8fdmf22.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DZkkCYLR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ly2lw177be3ot8fdmf22.png" alt="User-journey" width="880" height="162"&gt;&lt;/a&gt;&lt;br&gt;
For the sessions with errors, you can view what the error was and also the data time of occurrence along with device details. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XbYtQu6W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kwdetpfoh59m0u33m63.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XbYtQu6W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kwdetpfoh59m0u33m63.png" alt="Error session" width="880" height="286"&gt;&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BC8Nfu6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/le9t1kezqyamnw8z7p7n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BC8Nfu6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/le9t1kezqyamnw8z7p7n.png" alt="Error sessions details" width="880" height="216"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h3&gt;

&lt;p&gt;The free trial has 1 million RUM events which is across the account. And this is only for the first time when RUM is used. Post which, $1 per 100k RUM events.&lt;br&gt;
You can view the detailed &lt;a href="https://aws.amazon.com/cloudwatch/pricing/"&gt;pricing details&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wrapup"&gt;
  &lt;/a&gt;
  Wrap-up
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;CloudWatch RUM&lt;/strong&gt; has provided a simplistic approach to web-app insights. The above sample logs and telemetry data are of my personal landing page &lt;a href="https://zachjonesnoel.com"&gt;https://zachjonesnoel.com&lt;/a&gt; which has been up and running from Dec 01 2021 and this dashboard has facilitated me to understand what and how is the performance.&lt;br&gt;
Jeff Barr writes about the &lt;a href="https://aws.amazon.com/blogs/aws/cloudwatch-rum/"&gt;New ‚Äì Real-User Monitoring for Amazon CloudWatch&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>monitoring</category>
      <category>javascript</category>
      <category>cloudwatch</category>
    </item>
    <item>
      <title>Run Svelte app on AWS Cloud9</title>
      <author>Shakir</author>
      <pubDate>Sun, 16 Jan 2022 11:33:38 +0000</pubDate>
      <link>https://dev.to/aws-builders/run-svelte-app-on-aws-cloud9-4j5b</link>
      <guid>https://dev.to/aws-builders/run-svelte-app-on-aws-cloud9-4j5b</guid>
      <description>&lt;p&gt;Hey all üëã, let's say you do not have a system with sufficient memory / CPU, to write code on IDE and then subsequently test / run it, or if you want to test code on a Linux instance such as Ubuntu/Amazon Linux2, or may be you  just keep things related to development isolated and you don't want to mess around with your machine, you could then leverage the online IDE offered by &lt;a href="https://aws.amazon.com/cloud9/"&gt;AWS Cloud9&lt;/a&gt; to overcome all such restrictions and also use it's preview functionality, to test the app right there. Your work is also saved, and the associated instance gets terminated if it's idle based on the cost savings duration set.&lt;/p&gt;

&lt;p&gt;You could also access other AWS services right from AWS Cloud9 too. I've been liking üíöCloud9 so far, and in this post I would just show how to setup and run the Svelte boilerplate, and then preview it on Cloud9. Svelte as most are aware is quite popular these days, seems a bit easy/fun to learn too.&lt;/p&gt;

&lt;p&gt;Let's get started, by launching AWS cloud9. Search for Cloud9 on the AWS console, which should look like:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WwbPpSVj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r5m6ijj6b5lepar0p1js.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WwbPpSVj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r5m6ijj6b5lepar0p1js.png" alt="Cloud9 console" width="880" height="227"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And then create a new environment&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0F5dGgkN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rfgozetw1wvo3y7qkwmh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0F5dGgkN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rfgozetw1wvo3y7qkwmh.png" alt="Create cloud9 environment" width="880" height="154"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Give it some name&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GUJ8t2mT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/crcdqjdjknmo8zd99z6c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GUJ8t2mT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/crcdqjdjknmo8zd99z6c.png" alt="Cloud9 environment name" width="850" height="223"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I left all the other settings to be default, you may modify as required. The default settings in my case should launch an evironment with the following details:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Name: cloud9-svelte&lt;/li&gt;
&lt;li&gt;Description: No description provided&lt;/li&gt;
&lt;li&gt;Environment type: EC2&lt;/li&gt;
&lt;li&gt;Instance type: t2.micro&lt;/li&gt;
&lt;li&gt;Platform: Amazon Linux 2 (recommended)&lt;/li&gt;
&lt;li&gt;Cost-saving settings: After 30 minutes (default)&lt;/li&gt;
&lt;li&gt;IAM role: AWSServiceRoleForAWSCloud9 (generated)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note that Cloud9 only offers 3 platforms for now, to choose from.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KYCU2Evk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yq34e4tr133uawepn1ct.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KYCU2Evk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yq34e4tr133uawepn1ct.png" alt="Choice of Linux platforms" width="472" height="171"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The environment get's created in a while, once the create button is clicked.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lMO7jQzt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k6k3mzhmeyo0mpqgqn49.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lMO7jQzt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k6k3mzhmeyo0mpqgqn49.png" alt="Create cloud9 environment" width="880" height="431"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There should be a bash terminal on which I am now going to run certain commands.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iTPGYIvo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4kq9aodiycjojoo65qdb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iTPGYIvo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4kq9aodiycjojoo65qdb.png" alt="Bash on cloud9" width="729" height="225"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can just drag the tiny bash window to the top and close other tabs that are not required.&lt;/p&gt;

&lt;p&gt;Let's use degit as menitoned in the &lt;a href="https://svelte.dev/blog/the-easiest-way-to-get-started"&gt;Svelte&lt;/a&gt; quick start guide, to bootstrap the svelte project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nc:~/environment $ npx degit sveltejs/template my-svelte-project
Need to install the following packages:
  degit
Ok to proceed? (y) y
&amp;gt; cloned sveltejs/template#HEAD to my-svelte-project
npm notice 
npm notice New minor version of npm available! 8.1.2 -&amp;gt; 8.3.1
npm notice Changelog: https://github.com/npm/cli/releases/tag/v8.3.1
npm notice Run npm install -g npm@8.3.1 to update!
npm notice 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can acknowledge the npm notice and update npm, if required.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nc:~/environment $ npm install -g npm@8.3.1

removed 8 packages, changed 38 packages, and audited 215 packages in 3s

10 packages are looking for funding
  run `npm fund` for details

3 moderate severity vulnerabilities

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Change to the project directory and then install the node modules.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nc:~/environment/my-svelte-project $ npm i

added 97 packages, and audited 98 packages in 6s

7 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Excellent, npm found no vulnerabilities.&lt;/p&gt;

&lt;p&gt;Well, that's it run the Svelte app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nc:~/environment/my-svelte-project $ npm run dev

                                                &amp;gt; svelte-app@1.0.0 dev
&amp;gt; rollup -c -w

rollup v2.64.0
bundles src/main.js ‚Üí public/build/bundle.js...
LiveReload enabled
created public/build/bundle.js in 487ms

[2022-01-16 09:39:48] waiting for changes...

&amp;gt; svelte-app@1.0.0 start
&amp;gt; sirv public --no-clear "--dev"


  Your application is ready~! üöÄ

  - Local:      http://localhost:8080
  - Network:    Add `--host` to expose

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ LOGS ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make a note that it's running on port 8080, based on the output above.&lt;/p&gt;

&lt;p&gt;Let's see if the app is working by using the curl command. press ALT T to open a new bash terminal. On the new terminal, execute the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nc:~/environment $ curl localhost:8080
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
        &amp;lt;meta charset='utf-8'&amp;gt;
        &amp;lt;meta name='viewport' content='width=device-width,initial-scale=1'&amp;gt;

        &amp;lt;title&amp;gt;Svelte app&amp;lt;/title&amp;gt;

        &amp;lt;link rel='icon' type='image/png' href='/favicon.png'&amp;gt;
        &amp;lt;link rel='stylesheet' href='/global.css'&amp;gt;
        &amp;lt;link rel='stylesheet' href='/build/bundle.css'&amp;gt;

        &amp;lt;script defer src='/build/bundle.js'&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, we verified the app is working through the CLI‚ö´. We can now try it on the browser. Hit Preview &amp;gt; Preview Running Application on the top bar. Boomüí•, you should see the Svelte app on the preview browser tab. &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x4NKXNKg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c9lbskl5qric902u7isy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x4NKXNKg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c9lbskl5qric902u7isy.png" alt="Preview on cloud9" width="880" height="357"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is so far, local preview, what if you want to view it from the Internetüåê, or let's say your friends want to view your app over the  Internet while you are developing it. Let's exactly see that now,  let's get the instance's public IP.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nc:~/environment $ curl https://checkip.amazonaws.com
&amp;lt;cloud9-instance-public-ip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have to now modify the security  group, for which we can visit the EC2 instances page on AWS console, and select our instance id.&lt;/p&gt;

&lt;p&gt;And then click on the Security group name in the Security tab. You can edit the inbound rules here.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bXo5lv2M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tcacd3dnul70c0hhwmle.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bXo5lv2M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tcacd3dnul70c0hhwmle.png" alt="Edit inbound rules" width="880" height="44"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A rule can be added to allow port 8080, from your local machine.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qsdnmafz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/olpi2ku7n3mls19wgm7w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qsdnmafz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/olpi2ku7n3mls19wgm7w.png" alt="Add inbound rule" width="711" height="71"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Optionally, you can also add other source IPs, its always better to restrict traffic to minimal and known sources instead of applying rule for a broader range or subnet.&lt;/p&gt;

&lt;p&gt;Save rules and you are done.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5uijceMa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sncjdx0l92fz0bc0xtw5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5uijceMa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sncjdx0l92fz0bc0xtw5.png" alt="Save rules" width="589" height="96"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's stop the npm process by hitting Ctl C. And then run it again by prepending HOST=0.0.0.0. &lt;a href="https://stackoverflow.com/questions/63255453/running-svelte-dev-on-server"&gt;Here&lt;/a&gt; is why.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nc:~/environment/my-svelte-project $ HOST=0.0.0.0 npm run dev

&amp;gt; svelte-app@1.0.0 dev
&amp;gt; rollup -c -w

rollup v2.64.0
bundles src/main.js ‚Üí public/build/bundle.js...
LiveReload enabled
created public/build/bundle.js in 476ms

[2022-01-16 10:22:50] waiting for changes...

&amp;gt; svelte-app@1.0.0 start
&amp;gt; sirv public --no-clear "--dev"


  Your application is ready~! üöÄ

  - Local:      http://0.0.0.0:8080
  - Network:    http://172.31.4.12:8080

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ LOGS ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you now try to visit the Cloud9 instance's public IP on the browser, from your local machine, over port 8080, it should work.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eEtxlhX_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ta0aq86s7zpobhn5v0w6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eEtxlhX_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ta0aq86s7zpobhn5v0w6.png" alt="Svelte app on browser" width="880" height="459"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's for the post, so you can make use of the online IDE offered by AWS Cloud9 and develop apps on the go. Thanks for reading !!! &lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to build a Tailwind CSS timeline component with Flowbite</title>
      <author>Zolt√°n Sz≈ëgy√©nyi</author>
      <pubDate>Sun, 16 Jan 2022 09:49:46 +0000</pubDate>
      <link>https://dev.to/themesberg/how-to-build-a-tailwind-css-timeline-component-with-flowbite-5638</link>
      <guid>https://dev.to/themesberg/how-to-build-a-tailwind-css-timeline-component-with-flowbite-5638</guid>
      <description>&lt;p&gt;I've been using Tailwind CSS to build websites and the power of the utility classes coupled with the components from &lt;a href="https://flowbite.com"&gt;Flowbite&lt;/a&gt; makes it so much more easier and fun!&lt;/p&gt;

&lt;p&gt;I've started a tutorial series on how to create some of the most commonly used UI components using the classes from Tailwind CSS, and today I want to show you how to build a timeline component.&lt;/p&gt;

&lt;p&gt;Here's a preview of how it will look:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fscOYuI2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sx70hujpy6ouofl56yp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fscOYuI2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sx70hujpy6ouofl56yp.png" alt="Tailwind CSS timeline" width="880" height="473"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's get started!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tailwind-css-timeline"&gt;
  &lt;/a&gt;
  Tailwind CSS timeline
&lt;/h2&gt;

&lt;p&gt;First of all we need to set up the basic HTML markup. We'll use a &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ol&amp;gt;                  
    &amp;lt;li&amp;gt;
        &amp;lt;time&amp;gt;February 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3&amp;gt;Application UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p&amp;gt;Get access to over 20+ pages including a dashboard layout, charts, kanban board, calendar, and pre-order E-commerce &amp;amp; Marketing pages.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
        &amp;lt;time&amp;gt;March 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3&amp;gt;Marketing UI design in Figma&amp;lt;/h3&amp;gt;
        &amp;lt;p&amp;gt;All of the pages and components are first designed in Figma and we keep a parity between the two versions even as we update the project.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
        &amp;lt;time&amp;gt;April 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3&amp;gt;E-Commerce UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p&amp;gt;Get started with dozens of web components and interactive elements built on top of Tailwind CSS.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Awesome! Let's now style the spacing, typography, and colors of the elements inside the timeline.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ol class="relative border-l border-gray-200"&amp;gt;                  
    &amp;lt;li class="mb-10 ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;Application UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p class="mb-4 text-base font-normal text-gray-500"&amp;gt;Get access to over 20+ pages including a dashboard layout, charts, kanban board, calendar, and pre-order E-commerce &amp;amp; Marketing pages.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li class="mb-10 ml-4"&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400"&amp;gt;March 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;Marketing UI design in Figma&amp;lt;/h3&amp;gt;
        &amp;lt;p class="text-base font-normal text-gray-500"&amp;gt;All of the pages and components are first designed in Figma and we keep a parity between the two versions even as we update the project.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li class="ml-4"&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400"&amp;gt;April 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;E-Commerce UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p class="text-base font-normal text-gray-500"&amp;gt;Get started with dozens of web components and interactive elements built on top of Tailwind CSS.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Already looking much better. Let's now add the dots and a CTA button link.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ol class="relative border-l border-gray-200"&amp;gt;                  
    &amp;lt;li class="mb-10 ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400"&amp;gt;February 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;Application UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p class="mb-4 text-base font-normal text-gray-500"&amp;gt;Get access to over 20+ pages including a dashboard layout, charts, kanban board, calendar, and pre-order E-commerce &amp;amp; Marketing pages.&amp;lt;/p&amp;gt;
        &amp;lt;a href="#" class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-lg hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700"&amp;gt;Learn more &amp;lt;svg class="w-3 h-3 ml-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"&amp;gt;&amp;lt;path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li class="mb-10 ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400"&amp;gt;March 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;Marketing UI design in Figma&amp;lt;/h3&amp;gt;
        &amp;lt;p class="text-base font-normal text-gray-500"&amp;gt;All of the pages and components are first designed in Figma and we keep a parity between the two versions even as we update the project.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li class="ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400"&amp;gt;April 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;E-Commerce UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p class="text-base font-normal text-gray-500"&amp;gt;Get started with dozens of web components and interactive elements built on top of Tailwind CSS.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Great job! The timeline component should now look like in the preview picture.&lt;/p&gt;

&lt;p&gt;Lastly, let's also apply some of the dark variant classes for the dark mode.&lt;/p&gt;

&lt;p&gt;Note: check out this tutorial on how to set &lt;a href="https://flowbite.com/docs/customize/dark-mode/"&gt;dark mode with Tailwind CSS and Flowbite&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ol class="relative border-l border-gray-200 dark:border-gray-700"&amp;gt;                  
    &amp;lt;li class="mb-10 ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400 dark:text-gray-500"&amp;gt;February 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;Application UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p class="mb-4 text-base font-normal text-gray-500 dark:text-gray-400"&amp;gt;Get access to over 20+ pages including a dashboard layout, charts, kanban board, calendar, and pre-order E-commerce &amp;amp; Marketing pages.&amp;lt;/p&amp;gt;
        &amp;lt;a href="#" class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-lg hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700"&amp;gt;Learn more &amp;lt;svg class="w-3 h-3 ml-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"&amp;gt;&amp;lt;path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li class="mb-10 ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400 dark:text-gray-500"&amp;gt;March 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;Marketing UI design in Figma&amp;lt;/h3&amp;gt;
        &amp;lt;p class="text-base font-normal text-gray-500 dark:text-gray-400"&amp;gt;All of the pages and components are first designed in Figma and we keep a parity between the two versions even as we update the project.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li class="ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400 dark:text-gray-500"&amp;gt;April 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;E-Commerce UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p class="text-base font-normal text-gray-500 dark:text-gray-400"&amp;gt;Get started with dozens of web components and interactive elements built on top of Tailwind CSS.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The timeline should look like this in dark mode:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D_nce_bi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/czslesbdmtnhivninv1l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D_nce_bi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/czslesbdmtnhivninv1l.png" alt="Tailwind CSS dark mode timeline" width="880" height="473"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This &lt;a href="https://flowbite.com/docs/components/timeline/"&gt;Tailwind CSS timeline component&lt;/a&gt; is part of an open source library of Tailwind CSS components called Flowbite.&lt;/p&gt;

&lt;p&gt;You can find more timeline component styles and variants and also a full set of other elements such as buttons, dropdowns, modals, tooltips, and more.&lt;/p&gt;

&lt;p&gt;üëâ &lt;a href="https://flowbite.com/docs/components/timeline/"&gt;Flowbite - Tailwind CSS timeline&lt;/a&gt;&lt;br&gt;
üìö &lt;a href="https://flowbite.com/docs/getting-started/introduction/"&gt;Flowbite - Tailwind CSS Components&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Set up a Dockerfile for your angular application with Nginx</title>
      <author>Oumayma JavaScript Developer </author>
      <pubDate>Sun, 16 Jan 2022 09:34:53 +0000</pubDate>
      <link>https://dev.to/oumaymasghayer/set-up-a-dockerfile-for-your-angular-application-with-nginx-45k1</link>
      <guid>https://dev.to/oumaymasghayer/set-up-a-dockerfile-for-your-angular-application-with-nginx-45k1</guid>
      <description>&lt;p&gt;Running your application in docker container is the first step towards production. We have to make sure that our app can build successfully , independently of our local environment.&lt;br&gt;
Bellow you can find a basic dockerfile for your angular application that uses &lt;strong&gt;nginx&lt;/strong&gt; server to render the html.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:12-alpine as build&lt;/span&gt;

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; package.json .&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;yarn &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;apk add gettext

&lt;span class="k"&gt;RUN &lt;/span&gt;yarn build &lt;span class="nt"&gt;--base-href&lt;/span&gt;

&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; nginx:latest&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; --from=build /app/dist/hr-frontend /usr/share/nginx/html&lt;/span&gt;

&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 80&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above dockerfile will run your application on port 80. &lt;br&gt;
To test it, in the root of your project run:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;docker image build --tag &amp;lt;your image name&amp;gt; .&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;docker run -d -p 8000:80 &amp;lt;your image name&amp;gt;&lt;/code&gt; 
This command will serve your application on port 8000. The port 80 is where your application is running inside the container.&lt;/li&gt;
&lt;li&gt;Go to &lt;u&gt;localhost:8000&lt;/u&gt; .&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>angular</category>
      <category>typescript</category>
      <category>javascript</category>
      <category>docker</category>
    </item>
    <item>
      <title>CRUD is simple until it's not</title>
      <author>Chakrit Likitkhajorn</author>
      <pubDate>Sun, 16 Jan 2022 09:17:58 +0000</pubDate>
      <link>https://dev.to/chrisza4/crud-is-simple-until-its-not-4n84</link>
      <guid>https://dev.to/chrisza4/crud-is-simple-until-its-not-4n84</guid>
      <description>&lt;p&gt;Every app is just a glorified CRUD app with extra steps.&lt;/p&gt;

&lt;p&gt;There are a lot of debates happening in the dev community between using complex architecture (such as CQRS) and viewing everything as a CRUD.&lt;/p&gt;

&lt;p&gt;I want to clarify when CRUD is simple enough for the job, and when it is not.&lt;/p&gt;

&lt;p&gt;Let say you want to create an accounting system. You have an invoice. Invoice can be created, read, updated and deleted.&lt;/p&gt;

&lt;p&gt;Sounds like a CRUD app.&lt;/p&gt;

&lt;p&gt;So you start with a simple Rails-style framework with REST-style API surface, where everything is just a resource that can be CRUDed.&lt;/p&gt;

&lt;p&gt;The code can look like this (simplified version)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#fit-everything-to-crud"&gt;
  &lt;/a&gt;
  Fit everything to CRUD
&lt;/h1&gt;

&lt;p&gt;Let say that your invoice can be approved. You added &lt;code&gt;status&lt;/code&gt; field to the model. The status can be &lt;code&gt;Draft&lt;/code&gt;, &lt;code&gt;Confirmed&lt;/code&gt;, &lt;code&gt;Approved&lt;/code&gt;, &lt;code&gt;Commented&lt;/code&gt; and &lt;code&gt;Rejected&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And then you some business requirement&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;When an invoice is approved, send a notification to someone so they can proceed to pay.&lt;/li&gt;
&lt;li&gt;When an invoice is commented or rejected, send a notification to the creator so they can be revised.&lt;/li&gt;
&lt;li&gt;When a confirmed invoice has a total of more than 100,000 USD, send a notification to the director level.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If we still model by CRUD, we need a code that looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="n"&gt;old_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;status&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;new_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;status&lt;/span&gt;

  &lt;span class="c1"&gt;# Send notification to payment department if status changed to approved&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;old_status&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="ss"&gt;:Approved&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;new_status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="ss"&gt;:Approved&lt;/span&gt;
    &lt;span class="no"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:payment_department&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# Send notification to invoice owner if invoice was commented or rejected&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;old_status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="ss"&gt;:Confirmed&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:Commented&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:Rejected&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;included?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_status&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="no"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# Send notification to management board if invoice exceed particular amount&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;old_status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="ss"&gt;:Draft&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;new_status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="ss"&gt;:Confirmed&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;total&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;100000&lt;/span&gt;
    &lt;span class="no"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:C_level&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So now we can generalize everything as CRUD.&lt;/p&gt;

&lt;p&gt;Six months later, we want to add functionality to the invoice approval step.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We want to ensure that any invoice exceeding 100,000 USD must be approved by someone with a proper level of authorization&lt;/li&gt;
&lt;li&gt;We want to lock any invoice that has been rejected more than 3 times.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If we wrote code as CRUD, to implement these requirements you must:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Carefully read through update hoops and see which line is related to which.&lt;/li&gt;
&lt;li&gt;If 2 programmers work in parallel, they might need to resolve to merge conflict.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#use-business-intent"&gt;
  &lt;/a&gt;
  Use business intent
&lt;/h1&gt;

&lt;p&gt;Another type of implementation is to put a business intent into our model.&lt;/p&gt;

&lt;p&gt;Instead of update, we have these:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;approve&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;:Approved&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;
  &lt;span class="no"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:payment_department&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;reject&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;:Reject&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;
  &lt;span class="no"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="c1"&gt;# And so-on&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead of translating business intention such as approve to be like: approval is just an update with extra steps. We instead embedded business intention directly into our method.&lt;/p&gt;

&lt;p&gt;When the business what to modify the approval process, we can search for &lt;code&gt;approve&lt;/code&gt; method.&lt;br&gt;
When the business what to modify the confirmation process, we can search for &lt;code&gt;confirm&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;Even if this contains more code, it's become easier to modify and reason about.&lt;/p&gt;

&lt;p&gt;This is the power of moving away from CRUD based modelling.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#its-not-black-and-white"&gt;
  &lt;/a&gt;
  It's not black and white
&lt;/h1&gt;

&lt;p&gt;CRUD is a simple model. There are only four concepts and it can handle almost every requirement imaginable.&lt;/p&gt;

&lt;p&gt;Everything can be viewed as "CRUD with extra steps". Even network communication can be viewed as "CRUD of network packet with extra steps".&lt;/p&gt;

&lt;p&gt;It is a simple and powerful model. But it has its own limitation.&lt;/p&gt;

&lt;p&gt;CRUD based method works well until collaboration break.&lt;/p&gt;

&lt;p&gt;You can fit nearly every app into the CRUD model, but at what cost?&lt;/p&gt;

&lt;p&gt;The question is here is not can you, it's should you.&lt;/p&gt;

&lt;p&gt;If your software grows based on some particular business process, such as if your accounting module is famous for a world-class approval system, it's worth you putting a highlight to those business intent rather than generalize it to "just CRUD with extra steps".&lt;/p&gt;

&lt;p&gt;I don't have a clear line between when to model the app as CRUD and when to do the domain event-based app.&lt;/p&gt;

&lt;p&gt;But I know that if communication starts to break down. If a requirement needs 2 days of dev assessment just to translate the requirement into codebase modelling, check where to change, what is the impact.&lt;/p&gt;

&lt;p&gt;Your model might not be sufficient.&lt;/p&gt;

&lt;p&gt;And that's when you might need to move on from the simple CRUD model.&lt;/p&gt;

</description>
      <category>architecture</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
