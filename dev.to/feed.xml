<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Angular: Is trackBy necessary with ngFor?</title>
      <author>bob.ts</author>
      <pubDate>Mon, 01 Nov 2021 14:32:02 +0000</pubDate>
      <link>https://dev.to/rfornal/angular-is-trackby-necessary-with-ngfor-594e</link>
      <guid>https://dev.to/rfornal/angular-is-trackby-necessary-with-ngfor-594e</guid>
      <description>&lt;p&gt;In a recent presentation, I had an individual very focused on the need for &lt;code&gt;trackBy&lt;/code&gt; on my &lt;code&gt;ngFor&lt;/code&gt; ... to the exclusion of everything else in the talk. He even went as far as to push a pull-request on my talk repository to add the change.&lt;/p&gt;

&lt;p&gt;I was perplexed.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I know there used to be a need for &lt;code&gt;trackBy&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Experience has shown me little need for it's use recently.&lt;/li&gt;
&lt;li&gt;Some quick research said that it is &lt;strong&gt;&lt;em&gt;only&lt;/em&gt;&lt;/strong&gt; needed if there are issues with performance with modern Angular.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, I decided to test this out myself.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-first-iteration"&gt;
  &lt;/a&gt;
  The First Iteration
&lt;/h2&gt;

&lt;p&gt;In my first iteration of testing, I tested loading data to see if there was a difference in load times when displaying them with and without the &lt;code&gt;trackBy&lt;/code&gt;. Here are the first set of tests I ran that showed some hopeful results.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data"&gt;
  &lt;/a&gt;
  Data
&lt;/h3&gt;

&lt;p&gt;Basically, the data was 100,000 records with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An integer, 0-based &lt;code&gt;index&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;An identifier that is a random 50 characters A-Z, a-z, or 0-9.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#summary-of-first-iteration"&gt;
  &lt;/a&gt;
  Summary of First Iteration
&lt;/h2&gt;

&lt;p&gt;From this point, I refreshed the page 25-times each, noting the time to finish on the Network tab.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;WITH&lt;/th&gt;
&lt;th&gt;WITHOUT&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;data 01&lt;/td&gt;
&lt;td&gt;6.17&lt;/td&gt;
&lt;td&gt;6.77&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 02&lt;/td&gt;
&lt;td&gt;6.14&lt;/td&gt;
&lt;td&gt;6.29&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 03&lt;/td&gt;
&lt;td&gt;6.31&lt;/td&gt;
&lt;td&gt;6.28&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 04&lt;/td&gt;
&lt;td&gt;6.34&lt;/td&gt;
&lt;td&gt;6.33&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 05&lt;/td&gt;
&lt;td&gt;6.23&lt;/td&gt;
&lt;td&gt;6.06&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 06&lt;/td&gt;
&lt;td&gt;6.14&lt;/td&gt;
&lt;td&gt;6.31&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 07&lt;/td&gt;
&lt;td&gt;6.14&lt;/td&gt;
&lt;td&gt;6.21&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 08&lt;/td&gt;
&lt;td&gt;6.46&lt;/td&gt;
&lt;td&gt;6.22&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 09&lt;/td&gt;
&lt;td&gt;6.29&lt;/td&gt;
&lt;td&gt;6.09&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 10&lt;/td&gt;
&lt;td&gt;6.38&lt;/td&gt;
&lt;td&gt;6.37&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 11&lt;/td&gt;
&lt;td&gt;6.22&lt;/td&gt;
&lt;td&gt;6.22&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 12&lt;/td&gt;
&lt;td&gt;6.38&lt;/td&gt;
&lt;td&gt;6.43&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 13&lt;/td&gt;
&lt;td&gt;6.23&lt;/td&gt;
&lt;td&gt;6.19&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 14&lt;/td&gt;
&lt;td&gt;6.22&lt;/td&gt;
&lt;td&gt;6.15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 15&lt;/td&gt;
&lt;td&gt;6.38&lt;/td&gt;
&lt;td&gt;6.33&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 16&lt;/td&gt;
&lt;td&gt;6.16&lt;/td&gt;
&lt;td&gt;6.45&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 17&lt;/td&gt;
&lt;td&gt;6.32&lt;/td&gt;
&lt;td&gt;6.19&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 18&lt;/td&gt;
&lt;td&gt;6.21&lt;/td&gt;
&lt;td&gt;6.18&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 19&lt;/td&gt;
&lt;td&gt;6.25&lt;/td&gt;
&lt;td&gt;6.36&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 20&lt;/td&gt;
&lt;td&gt;6.16&lt;/td&gt;
&lt;td&gt;6.17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 21&lt;/td&gt;
&lt;td&gt;6.46&lt;/td&gt;
&lt;td&gt;6.03&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 22&lt;/td&gt;
&lt;td&gt;6.22&lt;/td&gt;
&lt;td&gt;6.12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 23&lt;/td&gt;
&lt;td&gt;6.30&lt;/td&gt;
&lt;td&gt;6.44&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 24&lt;/td&gt;
&lt;td&gt;6.23&lt;/td&gt;
&lt;td&gt;6.67&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data 25&lt;/td&gt;
&lt;td&gt;6.20&lt;/td&gt;
&lt;td&gt;5.98&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;RESULTS&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;6.26&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;6.27&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The results were one-hundredth of a second different, my conclusion might be that &lt;code&gt;trackBy&lt;/code&gt; would only be needed if there were some significant performance need.&lt;/p&gt;

&lt;p&gt;This path only tested Angular's ability to place data on-screen. I realized that the &lt;code&gt;trackBy&lt;/code&gt; was built as a means to allow for faster screen updates when the data changed.&lt;/p&gt;

&lt;p&gt;So, on to the second iteration ...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#second-iteration"&gt;
  &lt;/a&gt;
  Second Iteration
&lt;/h2&gt;

&lt;p&gt;I decided to go with a smaller data-set and initialize a series of changes where I swapped two indexes. I opted for a 500ms delay in between loading the data and initiating the swaps.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-real-work"&gt;
  &lt;/a&gt;
  The (Real) Work
&lt;/h3&gt;

&lt;p&gt;The repository is &lt;a href="https://github.com/bob-fornal/angular-ngfor-trackby"&gt;HERE&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Basically, the data is now 10,000 records with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An integer, 0-based &lt;code&gt;index&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;An identifier that is a random 50 characters A-Z, a-z, or 0-9.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each page connects to the service, gets the data and displays the identifier 10,000 times. On one page, we are using &lt;code&gt;trackBy&lt;/code&gt; and in the other, we are not using it.&lt;/p&gt;

&lt;p&gt;Additionally, after 500ms another process triggers that randomly picks two indexes and swaps them. I did this 1,000 times per page.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-dataservicets-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;data.service.ts&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The core to the service is as follows ...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;iterations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;dataPoints&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="nl"&gt;startTime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;init&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataPoints&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="na"&gt;datum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;identifier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;makeid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;datum&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;makeid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="na"&gt;result&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="na"&gt;characters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;charactersLength&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;characters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;characters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;charactersLength&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;getRandomInt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;min&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#-raw-withcomponentts-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;with.component.ts&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;The components are nearly identical ...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

&lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;dataService&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DataService&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;ngOnInit&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initiateReorganize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;ngAfterViewChecked&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="na"&gt;now&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="na"&gt;difference&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startTime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;difference: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;difference&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;identify&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;initiateReorganize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="na"&gt;min&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;iterations&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getRandomInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getRandomInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;]];&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;... except, the &lt;code&gt;without.component.ts&lt;/code&gt; does not contain an &lt;code&gt;identify&lt;/code&gt; function.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-withcomponenthtml-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;with.component.html&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;And, the HTML is nearly identical, as well ...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;*ngFor=&lt;/span&gt;&lt;span class="s"&gt;"let item of data; trackBy: identify"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  {{ item.identifier }}
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;... removing the &lt;code&gt;trackBy: identify&lt;/code&gt; in the &lt;code&gt;without.component.html&lt;/code&gt;, as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#results"&gt;
  &lt;/a&gt;
  Results
&lt;/h2&gt;

&lt;p&gt;From this point, I refreshed the page 25-times each, noting the time to finish in the console.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;WITH&lt;/th&gt;
&lt;th&gt;WITHOUT&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Data 01&lt;/td&gt;
&lt;td&gt;1700&lt;/td&gt;
&lt;td&gt;1654&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 02&lt;/td&gt;
&lt;td&gt;1647&lt;/td&gt;
&lt;td&gt;1669&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 03&lt;/td&gt;
&lt;td&gt;1634&lt;/td&gt;
&lt;td&gt;1695&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 04&lt;/td&gt;
&lt;td&gt;1639&lt;/td&gt;
&lt;td&gt;1652&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 05&lt;/td&gt;
&lt;td&gt;1753&lt;/td&gt;
&lt;td&gt;1641&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 06&lt;/td&gt;
&lt;td&gt;1624&lt;/td&gt;
&lt;td&gt;1693&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 07&lt;/td&gt;
&lt;td&gt;1627&lt;/td&gt;
&lt;td&gt;1632&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 08&lt;/td&gt;
&lt;td&gt;1676&lt;/td&gt;
&lt;td&gt;1637&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 09&lt;/td&gt;
&lt;td&gt;1638&lt;/td&gt;
&lt;td&gt;1707&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 10&lt;/td&gt;
&lt;td&gt;1631&lt;/td&gt;
&lt;td&gt;1630&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 11&lt;/td&gt;
&lt;td&gt;1625&lt;/td&gt;
&lt;td&gt;1652&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 12&lt;/td&gt;
&lt;td&gt;1727&lt;/td&gt;
&lt;td&gt;1648&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 13&lt;/td&gt;
&lt;td&gt;1633&lt;/td&gt;
&lt;td&gt;1768&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 14&lt;/td&gt;
&lt;td&gt;1636&lt;/td&gt;
&lt;td&gt;1641&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 15&lt;/td&gt;
&lt;td&gt;1684&lt;/td&gt;
&lt;td&gt;1712&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 16&lt;/td&gt;
&lt;td&gt;1634&lt;/td&gt;
&lt;td&gt;1667&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 17&lt;/td&gt;
&lt;td&gt;1690&lt;/td&gt;
&lt;td&gt;1633&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 18&lt;/td&gt;
&lt;td&gt;1631&lt;/td&gt;
&lt;td&gt;1730&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 19&lt;/td&gt;
&lt;td&gt;1624&lt;/td&gt;
&lt;td&gt;1631&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 20&lt;/td&gt;
&lt;td&gt;1741&lt;/td&gt;
&lt;td&gt;1640&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 21&lt;/td&gt;
&lt;td&gt;1635&lt;/td&gt;
&lt;td&gt;1675&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 22&lt;/td&gt;
&lt;td&gt;1631&lt;/td&gt;
&lt;td&gt;1641&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 23&lt;/td&gt;
&lt;td&gt;1690&lt;/td&gt;
&lt;td&gt;1663&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 24&lt;/td&gt;
&lt;td&gt;1625&lt;/td&gt;
&lt;td&gt;1652&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data 25&lt;/td&gt;
&lt;td&gt;1688&lt;/td&gt;
&lt;td&gt;1651&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Results&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1658.52&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1664.56&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So, given that the results are 6.04 milliseconds different (remember, less than a second difference on load of a data-set 10-times larger), my conclusion would be that &lt;code&gt;trackBy&lt;/code&gt; would only be needed if there were some significant performance need that cropped up.&lt;/p&gt;

&lt;p&gt;In general, it is not needed in modern Angular.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>development</category>
      <category>programming</category>
      <category>frontend</category>
    </item>
    <item>
      <title>Using Stacked Architecture in Flutter App</title>
      <author>Blazebrain</author>
      <pubDate>Mon, 01 Nov 2021 14:13:37 +0000</pubDate>
      <link>https://dev.to/blazebrain/using-stacked-architecture-in-flutter-app-2ecg</link>
      <guid>https://dev.to/blazebrain/using-stacked-architecture-in-flutter-app-2ecg</guid>
      <description>&lt;p&gt;The concept of Architecture is one of the most diverse topics in the world of programming today. A lot of solutions have been developed, all aimed at fixing one flaw or the other. App Architecture is one of the topics where personal choice has been advised to come in. If one meets your needs efficiently and enables you to release good, quality code, then go for it.&lt;/p&gt;

&lt;p&gt;This article aims to introduce you to Stacked Architecture, an architecture that offers clean, efficient solutions to architecture your next Flutter app. From dependency Injection to the right out of the box services to layered structures that follow the principles of &lt;a href="https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html"&gt;Clean Architecture&lt;/a&gt; and a whole lot. To get started on development with Flutter, check out this &lt;a href="https://flutter.dev/docs/get-started/install"&gt;article&lt;/a&gt; from the Flutter team.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pub.dev/packages/stacked"&gt;Stacked Architecture,&lt;/a&gt; developed by Dane Mackier from &lt;a href="https://www.filledstacks.com/"&gt;FilledStacks&lt;/a&gt;, is an MVVM Architecture solution that offers a lot of components for building a highly scalable, testable, maintainable, and usable Flutter application. From&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;State Management,&lt;/li&gt;
&lt;li&gt;Dependency Injection (Dependency Inversion),&lt;/li&gt;
&lt;li&gt;Navigation Abstraction,&lt;/li&gt;
&lt;li&gt;Services (Out-of-the-box),&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And a whole lot more. All of these are offered by the Stacked Architecture.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#state-management"&gt;
  &lt;/a&gt;
  State Management
&lt;/h2&gt;

&lt;p&gt;Handling State in Flutter application using Stacked couldn’t be much better. It provides widgets and constructors which control how the state is being passed and managed in the application. Let’s dive into it using a sample app.&lt;/p&gt;

&lt;p&gt;The first thing is to create a new Flutter project,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;     flutter create intro_to_stacked
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command generates all the files and folders, which lays the foundation of the flutter app. &lt;br&gt;
Next is to add &lt;a href="https://pub.dev/packages/stacked"&gt;stacked&lt;/a&gt; as a dependency in the pubspec.yaml file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    stacked: ^2.2.7
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next is to set up the basic folder structure for the sample app. Go to the lib folder and create a new folder titled home. Inside this, create two files named home_view.dart and home_viewmodel.dart. The homeViewModel file would be responsible for managing the state of the homeView, which is shown to the user. Clean Architecture, which says the view should contain zero logic, is strictly adhered to; the logic resides in the ViewModel.&lt;/p&gt;

&lt;p&gt;The view is bound to the ViewModel using the ViewModelBuilder widget, which Stacked offers. This widget takes in 2 parameters which are &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;builder, which builds the UI that has its state in the ViewModel&lt;/li&gt;
&lt;li&gt;viewModelBuilder, which is the function that would return the ViewModel for this widget.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import 'package:flutter/material.dart';
    import 'package:stacked/stacked.dart';

    class HomeView extends StatelessWidget {
     const HomeView({Key? key}) : super(key: key);
     @override
     Widget build(BuildContext context) {
      return ViewModelBuilder&amp;lt;HomeViewModel&amp;gt;.reactive(
       viewModelBuilder: HomeViewModel(),
       builder: (context, model, child) {
        return Scaffold();
       },
      );
     }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The ViewModelBuilder offers two constructors that deal with how the state is managed and subsequently update the UI for the application. They are the .reactive() and the .nonReactive() constructors. The .reactive() rebuilds the UI every time notifyListeners is called in the ViewModel. However, the .nonReactive() constructor rebuilds the UI once, after which it doesn’t rebuild on subsequent calls in the ViewModel. &lt;/p&gt;

&lt;p&gt;With that, we’ve set up the view file, moving to the ViewModel, we create a class that extends the BaseViewModel class that stacked provides. The BaseViewModel class provides functionalities used for maintaining the state in the application. In the ViewModel, we have a String that says Stacked is cool (definitely true). This String is the state currently offered by the ViewModel and which would need to be displayed on the screen.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import 'package:stacked/stacked.dart';

    class HomeViewModel extends BaseViewModel {
     final String _declaration = 'Stacked is soo cool';
     String get myDeclaration =&amp;gt; _declaration;

    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Back to the view, to use this state in our builder, we use the model offered by the builder connecting the state in the ViewModel to the UI screen which uses it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    Scaffold(
         body: Center(
          child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
           children: [
            const Text('Stacked Introduction'),
            Text(model.myDeclaration),
           ],
          ),
         ),
        );
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On updating the state in the application, let’s have a function that updates the text and calls notifyListeners after. We would link this function to the onPressed of a TextButton.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    //In View(home_view.dart)
     TextButton(
      onPressed: () =&amp;gt; model.updateDeclaration(),
      child: const Text('Update Text'),
     )

    //In ViewModel (home_viewmodel.dart)
     void updateCounter() {
      _declaration = 'I say Stacked is sooo cool';
      notifyListeners();
     }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The notifyListeners call informs the view to rebuild as there has been a state change in the ViewModel.&lt;/p&gt;

&lt;p&gt;For a deep dive into the state management solution offered, check out this &lt;a href="https://www.filledstacks.com/post/flutter-state-management-with-stacked/"&gt;article&lt;/a&gt; provided by the FilledStacks team. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-about-navigation-and-dependency-injection"&gt;
  &lt;/a&gt;
  How about Navigation and Dependency Injection?
&lt;/h2&gt;

&lt;p&gt;Stacked provides a direct out the box to navigation without context. Using the NavigationService it gives, we can smoothly declare our navigation in our ViewModel and use them in the view. This NavigationService allows for a clean UI without the interference of logic or complex routing codes. With the aid of the build runner and stacked generator, we can auto-generate routes and smoothly perform navigation.&lt;/p&gt;

&lt;p&gt;Let’s get to it.&lt;/p&gt;

&lt;p&gt;The first is to add &lt;a href="https://pub.dev/packages/build_runner"&gt;build_runner&lt;/a&gt; and &lt;a href="https://pub.dev/packages/stacked_generator"&gt;stacked_generator&lt;/a&gt; to the dev_dependencies section in your pubspec.yaml file. Also, add the &lt;a href="https://pub.dev/packages/stacked_services"&gt;stacked_services&lt;/a&gt; to the dependency section.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    dependencies:
     stacked: ^2.2.7
     stacked_services: ^0.8.15

    dev_dependencies:
     build_runner: ^2.1.4
     stacked_generator: ^0.5.5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the &lt;code&gt;flutter pub get&lt;/code&gt; command to get the files locally for use.&lt;/p&gt;

&lt;p&gt;Next is to create the new view that we would be routing to. Create a folder inside lib and name it profile. Inside this folder, create two files, the profile_view.dart and profile_viewmodel.dart. &lt;/p&gt;

&lt;p&gt;In profile_viewmodel.dart, create a class named ProfileViewModel which extends BaseViewModel. In the ViewModel, we declare a String that the app would display on the view.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import 'package:stacked/stacked.dart';

    class ProfileViewModel extends BaseViewModel {
     String _pageName = 'This is the Profile Page';
     String get pageName =&amp;gt; _pageName;
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In profile_view.dart, create the stateless widget which returns the ViewModelBuilder and bind it to the ProfileViewModel. This view would contain a similar setup to the HomeView; it would display a Profile View text.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import 'package:flutter/material.dart';
    import 'package:intro_to_stacked/ui/views/profile/profile_viewmodel.dart';
    import 'package:stacked/stacked.dart';
    class ProfileView extends StatelessWidget {
     const ProfileView({Key? key}) : super(key: key);
     @override
     Widget build(BuildContext context) {
      return ViewModelBuilder&amp;lt;ProfileViewModel&amp;gt;.reactive(
       viewModelBuilder: () =&amp;gt; ProfileViewModel(),
       builder: (context, viewModel, child) {
        return Scaffold(
         body: Center(
          child: Column(
           mainAxisAlignment: MainAxisAlignment.center,
           children: [
            Text(viewModel.pageName),
           ],
          ),
         ),
        );
       },
      );
     }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next thing is to create a folder in lib named app. Inside this folder, create a new file titled app.dart. In this file would all the code needed for routing along with the dependencies.&lt;/p&gt;

&lt;p&gt;Create a class named AppSetup and annotate it with the StackedApp; this class houses the annotation; it does nothing else asides that. The main focus is the annotation as it takes in two parameters, routes, and dependencies.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    @StackedApp()
    class AppSetup {
     /** This class has no puporse besides housing the annotation that generates the required functionality **/
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Stacked offers three different types of routes which determines the mode of transition&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MaterialRoute&lt;/li&gt;
&lt;li&gt;CupertinoRoute&lt;/li&gt;
&lt;li&gt;CustomRoute&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Using the MaterialRoute, we register the Views present in the app that would use the NavigationService.&lt;/p&gt;

&lt;p&gt;In addition to the routes, we would declare the dependencies we would be using in the app, enabling Stacked to create the locator file that would handle the injection of the declared types. We would register the NavigationService as a LazySingleton, which means it won’t be initialized until used for the first time in the app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import '../ui/views/home/home_view.dart';
    import '../ui/views/profile/profile_view.dart';
    import 'package:stacked/stacked_annotations.dart';
    @StackedApp(
     routes: [
      MaterialRoute(page: HomeView, initial: true),
      MaterialRoute(page: ProfileView)
     ],
     dependencies: [
      LazySingleton(classType: NavigationService),
     ],
    )
    class AppSetUp {}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As the HomeView is the first page we contact, we set the initial parameter to true. &lt;/p&gt;

&lt;p&gt;After setting this up, run the flutter command to auto-generate the needed files for routing.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    flutter pub run build_runner build --delete-conflicting-outputs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command would generate the files needed for navigation and dependency injection setup. &lt;/p&gt;

&lt;p&gt;The last step in this process is to convert the main top-level function of the app into a Future and await the setupLocator function in the app.locator.dart file generated by the command used earlier.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    Future main() async {
     WidgetsFlutterBinding.ensureInitialized();
     await setupLocator();
     runApp(MyApp());
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-do-we-use-it"&gt;
  &lt;/a&gt;
  How do we use it?
&lt;/h2&gt;

&lt;p&gt;To make use of the navigation in the HomeView, we create a function in the HomeViewModel that would perform the navigation. First, we declare the locator which would give us access to the Navigation Service we registered earlier.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import 'package:intro_to_stacked/app/app.router.dart';
    import '../../../app/app.locator.dart';
    import 'package:stacked/stacked.dart';
    import 'package:stacked_services/stacked_services.dart';

    class HomeViewModel extends BaseViewModel {
     String _declaration = 'Stacked is soo cool';
     String get myDeclaration =&amp;gt; _declaration;
     final _navigationService = locator&amp;lt;NavigationService&amp;gt;();

     void navigateToProfileView() {
      _navigationService.navigateTo(Routes.profileView);
     }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next thing is to create a button in the view and pass the function to its onPressed parameter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;     TextButton(
       onPressed: () =&amp;gt; model.navigateToProfileView(),
       child: const Text('Go To Profile View'),
     )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Save the files and run the app; you would see the button there, click the button and see the seamless transition that we achieve using the NavigationService Stacked provides.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#services"&gt;
  &lt;/a&gt;
  Services
&lt;/h2&gt;

&lt;p&gt;Stacked offers several services which can be set up and used within the app. These services include&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;NavigationService&lt;/li&gt;
&lt;li&gt;BottomSheetService&lt;/li&gt;
&lt;li&gt;DialogService&lt;/li&gt;
&lt;li&gt;SnackbarService&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These services can be set up and customized to fit various use cases, and similar to the NavigationService, they can be registered and used within the app on the fly. For further information, check out the &lt;a href="https://pub.dev/packages/stacked_services"&gt;package&lt;/a&gt; on pub.dev and also the articles on &lt;a href="https://www.filledstacks.com/"&gt;FilledStacks&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Stacked Architecture is a super pack ready to be discharged and used to build clean, scalable applications on the fly. This article has explained some of the concepts and components of Stacked Architecture, and with it, we have created a sample app that uses these components. Check out &lt;a href="https://www.filledstacks.com/"&gt;FilledStack&lt;/a&gt; for further information on the various features that make up the Stacked Architecture.&lt;/p&gt;

&lt;p&gt;You can find the code for the sample app &lt;a href="https://github.com/Blazebrain/intro_to_stacked"&gt;here&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>flutter</category>
      <category>dart</category>
      <category>mobile</category>
      <category>architecture</category>
    </item>
    <item>
      <title>How to Extract Airbnb Pages Using ProxyCrawl in .NET</title>
      <author>Neil R. Zamora</author>
      <pubDate>Mon, 01 Nov 2021 14:06:50 +0000</pubDate>
      <link>https://dev.to/neilrzamora/how-to-extract-airbnb-pages-using-proxycrawl-in-net-2c57</link>
      <guid>https://dev.to/neilrzamora/how-to-extract-airbnb-pages-using-proxycrawl-in-net-2c57</guid>
      <description>&lt;p&gt;Building a web scraper from the ground up to extract Airbnb data is no easy task. If you do not have the proper knowledge and tools at your disposal, you will most likely end up getting IP blocked.&lt;/p&gt;

&lt;p&gt;So in this project, I will share with you an easy way to create a web scraper with the help of &lt;a href="https://proxycrawl.com/scraper-api-auto-parse-web-data"&gt;ProxyCrawl’s Scraper API&lt;/a&gt;. Using this API will allow you to avoid most IP blocks and CAPTCHAs as it is built on top of rotating proxies. It also automatically scrapes the web for you at scale and returns parsed content instead of the complete HTML source code saving you time and effort from building your own parser.&lt;/p&gt;

&lt;p&gt;We will use my favorite platform, which is Microsoft's .NET, to demonstrate how simple it is to integrate the Scraper API in a web crawler and retrieve parsed data from Airbnb search results.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-well-cover"&gt;
  &lt;/a&gt;
  What we'll cover
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;How to use &lt;a href="https://proxycrawl.com/crawling-libraries-sdk"&gt;ProxyCrawl library for .NET&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;How to extract data from Airbnb's search results&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-youll-need"&gt;
  &lt;/a&gt;
  What you'll need
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Knowledge in C# Programming Language&lt;/li&gt;
&lt;li&gt;Knowledge in Microsoft Visual Studio&lt;/li&gt;
&lt;li&gt;Microsoft Visual Studio installed on Windows&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://proxycrawl.com/signup?signup=index"&gt;ProxyCrawl account&lt;/a&gt; to use the Scraper API&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#code-setup"&gt;
  &lt;/a&gt;
  Code Setup
&lt;/h3&gt;

&lt;p&gt;First, create a new C# Console Application Project in Microsoft Visual Studio. You can copy and paste the sample code below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using System;

namespace ConsoleApp
{
    class Program
    {
        static void Main(string[] args)
        {

        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will utilize the NuGet dependency called &lt;a href="https://www.nuget.org/packages/ProxyCrawlAPI/"&gt;ProxyCrawlAPI (2.0.0)&lt;/a&gt; that acts as an easy-to-use library wrapping for ProxyCrawl services.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-scraper-code"&gt;
  &lt;/a&gt;
  The Scraper Code
&lt;/h3&gt;

&lt;p&gt;To scrape Airbnb search results, we have to use the following URL format: &lt;code&gt;https://www.airbnb.com/s/**YOUR PLACE HERE**/homes&lt;/code&gt;. For this example, we will be searching places in Beirut. You can write the following code in our Main method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using System;

namespace ConsoleApp
{
    class Program
    {
        static void Main(string[] args)
        {
            var api = new ProxyCrawl.ScraperAPI("YOUR_PROXYCRAWL_TOKEN_HERE");
            api.Get("https://www.airbnb.com/s/Beirut/homes");
            Console.WriteLine(api.Body);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;api.Body&lt;/code&gt; returns a structured AirBnb search items. You can see the example output below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "residents": [
    {
      "position": 1,
      "title": "Romy's Apartment at The Cube",
      "superHost": true,
      "residentType": "Entire apartment",
      "location": "Horch Tabet",
      "samplePhotoUrl": "https://a0.muscache.com/im/pictures/miso/Hosting-48845122/original/876dcd11-337b-464b-a4a7-b575858ed18f.jpeg?im_w=720",
      "accommodation": {
        "guests": "2 guests",
        "bedrooms": "1 bedroom",
        "beds": "1 bed",
        "baths": "1.5 baths"
      },
      "amenities": [
        "Wifi",
        "Air conditioning",
        "Kitchen",
        "Washer"
      ],
      "rating": "5.0",
      "personReviewed": "10",
      "costs": {
        "PricePerNight": "$67"
      }
    },
    {
      "position": 2,
      "title": "Michele's Apartment at The Cube",
      "superHost": true,
      "residentType": "Entire apartment",
      "location": "El Fil",
      "samplePhotoUrl": "https://a0.muscache.com/im/pictures/f36baf12-17d6-46a0-9b31-2229677ef43b.jpg?im_w=720",
      "accommodation": {
        "guests": "3 guests",
        "bedrooms": "2 bedrooms",
        "beds": "2 beds",
        "baths": "2 baths"
      },
      "amenities": [
        "Wifi",
        "Air conditioning",
        "Kitchen",
        "Washer"
      ],
      "rating": "4.81",
      "personReviewed": "73",
      "costs": {
        "PricePerNight": "$90"
      }
    }
  ],
  "residentsFound": 20
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#extracting-data-using-c-objects"&gt;
  &lt;/a&gt;
  Extracting Data Using C# Objects
&lt;/h3&gt;

&lt;p&gt;Working with JSON is painful, so we will be using C# objects for this example. That said, let’s create the following classes first:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using System;

using Newtonsoft.Json;

namespace ConsoleApp
{
    class Program
    {
        #region Inner Classes

        public class AirBnbScraperResult
        {
            public AirBnbResident[] Residents { get; set; }
        }

        public class AirBnbResident
        {
            [JsonProperty("title")]
            public string Title { get; set; }

            [JsonProperty("superHost")]
            public bool? SuperHost { get; set; }

            [JsonProperty("residentType")]
            public string ResidentType { get; set; }

            [JsonProperty("location")]
            public string Location { get; set; }

            [JsonProperty("samplePhotoUrl")]
            public string SamplePhotoUrl { get; set; }

            [JsonProperty("rating")]
            public decimal? Rating { get; set; }

            [JsonProperty("personReviewed")]
            public int? PersonReviewed { get; set; }

            [JsonProperty("accommodation")]
            public AirBnbResidentAccommodation Accommodation { get; set; }

            [JsonProperty("amenities")]
            public string[] Amenities { get; set; }

            [JsonProperty("costs")]
            public AirBnbResidentCost Costs { get; set; }
        }

        public class AirBnbResidentAccommodation
        {
            [JsonProperty("guests")]
            public string Guests { get; set; }

            [JsonProperty("bedrooms")]
            public string Bedrooms { get; set; }

            [JsonProperty("beds")]
            public string Beds { get; set; }

            [JsonProperty("baths")]
            public string Baths { get; set; }
        }

        public class AirBnbResidentCost
        {
            [JsonProperty("priceCurrency")]
            public string PriceCurrency { get; set; }

            [JsonProperty("pricePerNight")]
            public string PricePerNight { get; set; }
        }

        #endregion

        ...
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, we de-serialize from our created object and navigate our objects from the &lt;code&gt;api.Body&lt;/code&gt; in the main method above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using System;

using Newtonsoft.Json;

namespace ConsoleApp
{
    class Program
    {
        ...

        static void Main(string[] args)
        {
            var api = new ProxyCrawl.ScraperAPI("YOUR_PROXYCRAWL_TOKEN_HERE");
            api.Get("https://www.airbnb.com/s/Beirut/homes");

            AirBnbScraperResult results = JsonConvert.DeserializeObject&amp;lt;AirBnbScraperResult&amp;gt;(api.Body);
            foreach (var resident in results.Residents)
            {
                if (resident.SuperHost.HasValue &amp;amp;&amp;amp; resident.SuperHost.Value)
                {
                    Console.WriteLine("{0} &amp;lt;SuperHost&amp;gt;", resident.Title);
                }
                else
                {
                    Console.WriteLine(resident.Title);
                }
                Console.WriteLine("Type: {0}", resident.ResidentType);
                Console.WriteLine("Location: {0}", resident.Location);
                Console.WriteLine("Photo: {0}", resident.SamplePhotoUrl);
                Console.WriteLine("Rating: {0}", resident.Rating);
                Console.WriteLine("Reviewers count: {0}", resident.PersonReviewed);
                if (resident.Amenities != null &amp;amp;&amp;amp; resident.Amenities.Length &amp;gt; 0)
                {
                    Console.WriteLine("Amenities: {0}", string.Join(", ", resident.Amenities));
                }
                if (resident.Accommodation != null)
                {
                    Console.WriteLine("Amenities");
                    Console.WriteLine("  * Bedrooms: {0}", resident.Accommodation.Bedrooms);
                    Console.WriteLine("  *     Beds: {0}", resident.Accommodation.Beds);
                    Console.WriteLine("  *    Baths: {0}", resident.Accommodation.Baths);
                    Console.WriteLine("  *   Guests: {0}", resident.Accommodation.Guests);
                }
                if (resident.Costs != null)
                {
                    Console.WriteLine("Costs");
                    Console.WriteLine("  * Currency: {0}", resident.Costs.PriceCurrency);
                    Console.WriteLine("  *Per Night: {0}", resident.Costs.PricePerNight);
                }

                Console.WriteLine();
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And it outputs similar to the screenshot below.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H7RQQE07--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rui2bvjddvy0x2kwaru.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H7RQQE07--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rui2bvjddvy0x2kwaru.png" alt="Web Scraper result ProxyCrawl" width="880" height="325"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See the complete source code at &lt;a href="https://github.com/neilrzamora/proxycrawl-airbnb-scraper-dotnet.git"&gt;https://github.com/neilrzamora/proxycrawl-airbnb-scraper-dotnet.git&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;So there you go, extracting data from Airbnb with the help of ProxyCrawl’s .NET library is just a breeze. There’s no need to compile a list of proxies or even write several lines of code to avoid CAPTCHAs and get the parsed data. With just one line of code, the Scraper API will handle parsing and proxies so you can just concentrate on the returned data. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://proxycrawl.com/"&gt;ProxyCrawl&lt;/a&gt; is truly a versatile platform for web crawling and scraping. Feel free to utilize and expand the example code in this tutorial based on your needs.&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>github</category>
    </item>
    <item>
      <title>Hello programmers community, I am Youssef Talib, I am studying web programming in my second year. Can you give me some advice</title>
      <author>Yousef Sabe Al Eish</author>
      <pubDate>Mon, 01 Nov 2021 14:01:17 +0000</pubDate>
      <link>https://dev.to/yousefsabealeish/hello-programmers-community-i-am-youssef-talib-i-am-studying-web-programming-in-my-second-year-can-you-give-me-some-advice-18bc</link>
      <guid>https://dev.to/yousefsabealeish/hello-programmers-community-i-am-youssef-talib-i-am-studying-web-programming-in-my-second-year-can-you-give-me-some-advice-18bc</guid>
      <description></description>
    </item>
    <item>
      <title>Crypto Exchange App Development</title>
      <author>tommylanis</author>
      <pubDate>Mon, 01 Nov 2021 13:52:09 +0000</pubDate>
      <link>https://dev.to/tommylanis/crypto-exchange-app-development-54aa</link>
      <guid>https://dev.to/tommylanis/crypto-exchange-app-development-54aa</guid>
      <description>&lt;h2&gt;
  &lt;a href="#about-cryptocurrency"&gt;
  &lt;/a&gt;
  About cryptocurrency
&lt;/h2&gt;

&lt;p&gt;A cryptocurrency is a form of payment that can be exchanged online for goods and services. Many companies have issued their own currencies, often called tokens, and these can be traded specifically for the good or service that the company provides. You’ll need to exchange real currency for the cryptocurrency to access the good or service.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m_T3QhtQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ub9vo2rgepls4u9hxc5n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m_T3QhtQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ub9vo2rgepls4u9hxc5n.png" alt="Crypto exchange app development" width="880" height="308"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-crypto-exchange-development"&gt;
  &lt;/a&gt;
  What is Crypto exchange development?
&lt;/h2&gt;

&lt;p&gt;Cryptocurrency transactions are recorded on the Blockchain, paving the way for decentralized value exchange. A Cryptocurrency Exchange platform enables buyers &amp;amp; sellers to exchange their coins with other coins, or to further sell or buy the cryptocurrency with the market trends.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#types-of-crypto-exchanges"&gt;
  &lt;/a&gt;
  Types of Crypto Exchanges
&lt;/h3&gt;

&lt;p&gt;Ideally, there are three kinds of exchanges; namely: &lt;br&gt;
• Centralized, &lt;br&gt;
• Decentralized, and &lt;br&gt;
• Hybrid&lt;br&gt;
It is essential to know the difference between the three to best suit your operations.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---18IqLLy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xuqav8b7mqnaoyl5doey.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---18IqLLy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xuqav8b7mqnaoyl5doey.png" alt="How do you make a crypto exchange app" width="800" height="527"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-you-make-a-crypto-exchange-app"&gt;
  &lt;/a&gt;
  How do you make a crypto exchange app?
&lt;/h2&gt;

&lt;p&gt;Starting a crypto exchange involves six basic steps:&lt;br&gt;
1)  Decide where you want to do business: Defining the scope for where your app will be made available to operate is the first important thing to consider. Ideally, you can confine your app to a region, a country, a continent, or globally. However, with expanding scope, the need for licensing increases. Moreover, with expanding borders, the laws of the countries vary. To operate an app across various regions and borders, it is best to take expert advice on local and national laws.&lt;br&gt;
2)  Learn about relevant regulations in that area: The world is distributed in borders and governments. And all these governments require certain compliance when it comes to financial matters and money exchanges. Most institutions need businesses to comply with the Know Your Customers (KYC) policy. Under these policies, any customer interacting with a business has to verify themselves by providing their identity documents. The purpose here is to discourage money laundering and corruption. Given the decentralized nature of Bitcoin exchanges, it, indeed, becomes even more necessary. &lt;br&gt;
3)  Partner with a bank or payment processor: It is important to give your customers as many options as you can when it comes to payment options—withstanding that these payment options run smoothly and dictate the least errors. &lt;br&gt;
4)  Establish a transaction history and liquidity on the exchange: It is instilling trust and confidence in customers to make any business venture a success. Especially when it is about money, it becomes even more crucial. Managing and creating liquidity can solve the problem and spark confidence. Any customer would be hesitant to interact or place orders unless they see more activity.&lt;br&gt;
5)  Implement the best security practices: With platforms like a Bitcoin exchange, which is an investment commodity, users’ data is important to keep safe.&lt;br&gt;
6)  Offer customer support: Taking care of your customers and their troubles is important. In addition, regular, follow-up and feedback are vital to regulating. Once the business starts thriving, the operators usually forget about their customers’ problems. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Iinhb33r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tbhvm5bn16hxm1pusdje.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Iinhb33r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tbhvm5bn16hxm1pusdje.png" alt="What Does a Cryptocurrency Exchange App Do" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-a-cryptocurrency-exchange-app-do"&gt;
  &lt;/a&gt;
  What Does a Cryptocurrency Exchange App Do?
&lt;/h2&gt;

&lt;p&gt;For those unaware, cryptocurrency exchange apps help you with quick access to various cryptos available in the market and let you trade (buy and sell) them on the go. You don’t have to mine cryptos using laptops. Instead, these apps are facilitating your wish to trade in cryptos and enter the world of decentralized digital currency networks. The whole process has been simplified for anyone to sign up, and the mobile app interface caters to quick learning. You have crypto exchange apps for mobile available on Google Play Store and Apple App Store that work on Android and iOS phones respectively.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-the-best-crypto-apps"&gt;
  &lt;/a&gt;
  Features of the best crypto apps:
&lt;/h3&gt;

&lt;p&gt;There are several great cryptocurrency apps on the market. To choose the right one, you'll need to decide on which features matter most to you.&lt;br&gt;
Here are a few to consider:&lt;br&gt;
• Security: Look at the exchange's security features to see how many of its assets are kept offline in cold storage, whether it has private insurance, and whether it is part of a bug bounty program that encourages ethical hackers to report any weaknesses. You can also find out whether the exchange has ever been hacked.&lt;br&gt;
• Customer service: If you're new to cryptocurrency investing, 24/7 customer service is a must. Nobody wants to wade through pages of FAQ to get help because money hasn't arrived in their account.&lt;br&gt;
• Range of currencies: There are over 4,000 cryptocurrencies, but even big exchanges only offer 50 to 150 coins. On most platforms, you'll likely be able to buy Bitcoin and one or two other major currencies. But if you want to buy a specific currency or plan to invest in some of the smaller coins, you'll need an exchange that has some variety.&lt;br&gt;
• Ease of use: Cryptocurrency apps have developed rapidly as more people want to invest. However, at times that fast development has come at the cost of user-friendliness. Make sure the app has the features you want to use, and if you've never traded before, pick one that is beginner-friendly.&lt;br&gt;
• Fees: Paying unnecessary fees is throwing money away, whether you're choosing a bank, a brokerage, or the best cryptocurrency app. Check how much it costs to deposit, withdraw, and trade before you open an account. It's also worth checking the withdrawal and deposit options to make sure they work for you.&lt;br&gt;
• Research: Cryptocurrencies are a relatively new kind of investment, so the more you can learn, the better. Some apps include cryptocurrency learning centers as well as information on specific coins.&lt;br&gt;
• Interest earning: Several cryptocurrency exchanges offer ways to earn interest on your coins. Make sure you understand and are comfortable with how the interest is generated. The exchange may loan out your money, or it may pay you staking fees if you commit to leaving your coins alone for a set period.&lt;br&gt;
• Location: Some exchanges cannot operate in every U.S. state. Make sure the exchange you choose covers your state.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7nDKfyWq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eo946ohuznlja5mk3g3w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7nDKfyWq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eo946ohuznlja5mk3g3w.png" alt="Security Features of Crypto Exchange App Development" width="880" height="426"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security-features-of-crypto-exchange-app-development"&gt;
  &lt;/a&gt;
  Security Features of Crypto Exchange App Development
&lt;/h3&gt;

&lt;p&gt;• Two-Factor Authentication (2FA)&lt;br&gt;
• DDOs Withstand Ability&lt;br&gt;
• Jail Login Method&lt;br&gt;
• Escrow Management&lt;br&gt;
• Firebase, Firewall Implementation&lt;br&gt;
• End-To-End Encrypted Transactions&lt;br&gt;
• SSL Integration&lt;br&gt;
• Encrypted Crypto Wallets&lt;br&gt;
• Anti-Phishing Software&lt;br&gt;
• Multi-Sig Wallets&lt;br&gt;
• Browser Detection Security&lt;br&gt;
• KYC and AML Verification&lt;br&gt;
• DB Encryption&lt;br&gt;
• CSRF Protection&lt;br&gt;
• Decentralized Data Handling&lt;br&gt;
• IP Login Restriction&lt;br&gt;
• Regular Security Audits&lt;br&gt;
• Face &amp;amp; Fingerprint ID&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-a-crypto-exchange-app-development-works"&gt;
  &lt;/a&gt;
  How a crypto Exchange App Development Works?
&lt;/h2&gt;

&lt;p&gt;A Crypto exchange app is an intermediary between sellers and buyers. It acts as a brokerage, allowing users to deposit money from a bank or other means of deposit. If a user wants to trade between cryptocurrencies, the exchange app charges a currency conversion fee. Let’s try to understand the Crypto Exchange app working model with basic steps to complete a transaction on a cryptocurrency exchange.&lt;br&gt;
For any crypto trade on an exchange platform, a user must register and go through a set of verification steps to authenticate their identity.&lt;br&gt;
After the successful user authentication, the user gets an account to deposit their money before buying digital coins.&lt;br&gt;
Different crypto exchange software contains other user deposit methods, including direct bank transfers, bank wires, debit or credit cards, PayPal, etc. Using the same options, traders can withdraw money from their crypto exchange accounts.&lt;br&gt;
Bitcoin or any crypto exchange platforms match buyers and sellers, also known as takers and makers (in cryptocurrency language). The platform works similarly to a traditional stock exchange. Traders choose to buy and sell bitcoin by inserting either a market order (buy/sell immediately, regardless of price) or a limit order (buy/sell at a specific price or better).&lt;br&gt;
All crypto exchange apps charge transaction and funds transfer fees. The fee applied to each buy or sell order depends on the trading volume. In addition, the platform may charge currency conversion fees based on currencies accepted by the platform. &lt;br&gt;
Now that you know Crypto Exchange’s working flow, understanding its development would be much easier. So, without further ado, let us move on to the main part of the post.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0vjNY91e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/22nwfqbvoudaz02500e8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0vjNY91e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/22nwfqbvoudaz02500e8.png" alt="Best Crypto Exchange App Development" width="880" height="547"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-best-crypto-exchange-app-development"&gt;
  &lt;/a&gt;
  What Is the Best Crypto Exchange App Development?
&lt;/h2&gt;

&lt;p&gt;Here I have listed out Ready-Made Clone App development. They are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Binance clone App: Binance clone app is ready to market, bug-free, tested, source code to launch exchange-like Binance. Binance Clone App has advanced features and functionalities to facilitate hassle-free trading with a robust trade engine, intuitive UI/UX to launch crypto exchange-like Binance in a short time. The companies provide a customized Binance clone app based on the business conditions. Start your Binance exchange with white-label Binance clone app that empowers the quality of trading ventures efficiently.&lt;/li&gt;
&lt;li&gt;Coinbase clone app:  Coinbase clone app is a ready-made, secure, customizable, and multi-tested clone app that is an exact replica of a popular cryptocurrency exchange - Coinbase. The app is scripted without infringing the copyright violations of the original software, imbibed with all the essential features of Coinbase.&lt;/li&gt;
&lt;li&gt;Okex clone app:  With more than 350 ways to buy and sell cryptocurrencies, it is the best choice for starting your decentralized cryptocurrency exchange platform. Your user can buy, spend, trade, or convert the cryptocurrencies as per their trading desire with Okex clone app. Initiate your Okex clone app-based exchange platform immediately with the best technologies.&lt;/li&gt;
&lt;li&gt;Paxful clone app: Paxful clone app is the clone software of the Paxful cryptocurrency exchange. This clone app follows a similar preface of Paxful with some unique features. It is a ready-made clone app software that can help client to start their cryptocurrency exchange business right away. This clone app is open to customization. This allows clients to do certain modifications based on business requirements. &lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#the-cost-to-develop-a-crypto-exchange-application-development"&gt;
  &lt;/a&gt;
  The Cost to Develop a Crypto Exchange Application Development
&lt;/h2&gt;

&lt;p&gt;The crypto exchange app development cost is a variable factor. It varies depending on some of your requirements, choices, and development rate. For example, the below requirements or preferences may affect your budget.&lt;br&gt;
• The business model for crypto exchange app (centralized, decentralized, or peer-to-peer),&lt;br&gt;
• The number of features to build in the exchange software,&lt;br&gt;
• Technology stack to develop secured exchange&lt;br&gt;
• Platforms to deploy the exchange: Android, iOS, or Web&lt;br&gt;
• Third-party APIs to integrate into the platform&lt;/p&gt;

&lt;p&gt;Now, the team you need to create a crypto exchange application includes:&lt;br&gt;
• Backend &amp;amp; iOS/Android developers &lt;br&gt;
• Frontend developers&lt;br&gt;
• Graphic Designer&lt;br&gt;
• Quality Analysis&lt;br&gt;
• Project Manager to create and manage project milestones&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h3&gt;

&lt;p&gt;Following the above description in mind, it may seem hard at first, but if you look into the future, the deposit required to produce a cryptocurrency exchange app will offer substantial profit earnings. Its success isn’t contingent on the exchange rate and cryptocurrency state. It’s difficult to predict any currency’s course. The only certainty is that the popularity of cryptocurrency will continue to rise over the next several years, and all market tendencies, be it positive or negative, will result in greater interest in these platforms. To summarize, this cryptocurrency exchange app isn’t contingent on cryptocurrency vacillating course since it is only dependent on transactions of trade which will remain intact forever.&lt;/p&gt;

</description>
      <category>app</category>
      <category>blockchain</category>
      <category>exchange</category>
    </item>
    <item>
      <title>P2P Crypto Exchange Script</title>
      <author>mia milinkovic</author>
      <pubDate>Mon, 01 Nov 2021 13:46:12 +0000</pubDate>
      <link>https://dev.to/milinkovicmia/p2p-crypto-exchange-script-3poe</link>
      <guid>https://dev.to/milinkovicmia/p2p-crypto-exchange-script-3poe</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-the-p2p-crypto-exchange"&gt;
  &lt;/a&gt;
  What is the P2P crypto exchange?
&lt;/h2&gt;

&lt;p&gt;Peer-to-peer (P2P) or' decentralized 'exchanges are managed completely by the software and the owner of the exchange. Also is a platform for buyers and sellers to directly transfer cryptocurrencies to the individual accounts.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EDVSBlUm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zip8j02e3s532n0i3rv9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EDVSBlUm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zip8j02e3s532n0i3rv9.png" alt="P2P crypto exchange" width="880" height="440"&gt;&lt;/a&gt;&lt;br&gt;
P2P crypto exchange platform avoids intermediaries to send and receive digital currencies without compromising on the seamless experience for trading. P2P exchanges permit market participants to trade directly with each other without any reliable third party to process all trades.&lt;br&gt;
This alternative approach has a number of comparative advantages, as well as downsides. Overall, peer-to-peer cryptocurrency exchanges are vivid examples of the decentralization philosophy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-p2p-crypto-work"&gt;
  &lt;/a&gt;
  How does P2P crypto work?
&lt;/h2&gt;

&lt;p&gt;P2P crypto exchanges allow users to buy or sell directly with another user. Unlike centralized exchanges where you have to complete KYC to process an order, most P2P exchanges allow you to send/receive cryptocurrencies without asking you for identity verification.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FpD-HJbI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dndz8q7qah2npsleiytp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FpD-HJbI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dndz8q7qah2npsleiytp.png" alt="Advantages of P2P Crypto Exchanges" width="880" height="489"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advantages-of-p2p-crypto-exchanges"&gt;
  &lt;/a&gt;
  Advantages of P2P Crypto Exchanges:
&lt;/h3&gt;

&lt;p&gt;• Desired Trading&lt;br&gt;
• Different Modes of Payment &lt;br&gt;
• Multiple Cryptocurrencies can be exchanged&lt;br&gt;
• Multiple Language Support&lt;br&gt;&lt;br&gt;
• KYC and AML Checks &lt;br&gt;
• Atomic exchange &lt;br&gt;
• Matching Engine&lt;br&gt;
• Offers extreme privacy&lt;br&gt;
• Live chat&lt;br&gt;
• Power-packed matching system&lt;br&gt;
• Administrative panel&lt;br&gt;
Here you will be able to find out the complete review about P2P crypto exchange script.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-p2p-crypto-exchange-script"&gt;
  &lt;/a&gt;
  What is p2p crypto exchange script?
&lt;/h2&gt;

&lt;p&gt;P2P Crypto exchange script is a decentralized exchange script which permits peers in the crypto market to buying and selling directly with each other without any trusted third-party processing their trades or holding their funds. P2P Exchange script accelerates peer-to-peer exchanges which are executed entirely by pre-programmed software, without requiring human operation or supervision. Buy the way as an admin, you need not store your trader’s cryptocurrencies and their address. So, you can free from the difficulties, risk-free p2p exchange script.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-p2p-crypto-exchange-script"&gt;
  &lt;/a&gt;
  Features of P2p Crypto Exchange Script:
&lt;/h3&gt;

&lt;p&gt;• Multiple payment options: Peer-to-peer crypto exchanges offer anonymous ways to buy and sell cryptocurrency with a wide range of payment methods.&lt;br&gt;
• Accurate and private transaction: Both buyers and sellers can pick their desired orders over the large volume for crypto trading and vice versa.&lt;br&gt;
• Hassle-free crypto swapping: this option allows the buyers and sellers to carry out a secure trading process, avoiding interaction of any middleman parties. The transactions can be processed and eliminated entirely, avoiding the fraud lent of any digital agreements. &lt;br&gt;
• Support multiple language and multiple cryptocurrencies: supports multiple language and numerous cryptocurrencies to achieve crypto transactions over world.&lt;br&gt;
• Escrow service: p2p crypto exchange helps you stay up to date on all the paperwork and transactions, and makes sure the buyer and seller follow through with their contractual agreement. Also offers secure and trusted smart contract-based escrow system fuels the trust and hope to make successful trading between the platform’s users.&lt;br&gt;
• No third parties: No intermediaries or central authorities to deduct crypto transaction fee.&lt;br&gt;
• Instant KYC and profile verification: KYC/AML permits admins to authorize the user profiles quickly and efficiently, which helps remove unauthorized users to your reliable crypto exchange platform. &lt;br&gt;
• Real-time market value: P2p exchange script has built with displaying the volatile cryptocurrency value which can be checked in real-time with no difficulties.&lt;br&gt;
• Automated transactions: Though it’s a decentralized peer-to-peer swaps automated crypto transactions drives trusted users’ transactions, eliminating the need for a middleman and eliminates unnecessary transaction fee.&lt;br&gt;
• Multi-factor authentication: Multi-factor authentication is when a user must provide two or more pieces of evidence to verify their identity to gain access to an app or digital resource. Multifactor authentication (MFA) is used to protect against hackers by ensuring that digital users are who they say they are.&lt;br&gt;
• Faster way to trade: This ensures an easier, secure, smooth trading process.&lt;br&gt;
• User interface (UI): p2p crypto exchange script offers single paged solutions, so it makes users can register and sign themselves using their social media accounts and log and trade themselves in the platform with ease manner.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security-features-of-decentralized-exchange-script"&gt;
  &lt;/a&gt;
  Security Features of Decentralized Exchange Script
&lt;/h3&gt;

&lt;p&gt;• Secure Admin Panel&lt;br&gt;
• Two-Factor Authentication&lt;br&gt;
• Multi SIG Wallet Integration&lt;br&gt;
• Secure Cold Wallet Storage&lt;br&gt;
• Anti-Denial of Service (DOS)&lt;br&gt;
• HTTPS Authentication&lt;br&gt;
• Registry Lock&lt;br&gt;
• Secure Data Encryption&lt;br&gt;
• Jail login System&lt;br&gt;
• Email Verifications&lt;br&gt;
Here’s how you can easily buy cryptocurrency using a P2P crypto exchange:&lt;br&gt;
• Register for a free account.&lt;br&gt;
• You choose a seller you’d like to trade with or create a new trading advertisement.&lt;br&gt;
• You send the payment.&lt;br&gt;
• The seller will send cryptocurrency straight to your wallet.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#which-is-the-best-p2p-crypto-exchange-script"&gt;
  &lt;/a&gt;
  Which is the best p2p Crypto Exchange script?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XCtAQEIo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lu4033zvw297hq9n8uie.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XCtAQEIo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lu4033zvw297hq9n8uie.png" alt="Top 5 Cryptocurrency Exchange Scripts" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
Top 5 Cryptocurrency Exchange Scripts:&lt;br&gt;
Binance clone script: binance clone script is a p2p cryptocurrency exchange which is currently the largest exchange in the world in terms of daily trading volume of cryptocurrencies. Binance clone script is ready to market, bug-free, tested, source code to launch exchange-like binance.&lt;br&gt;
Coinbase clone script: Coinbase clone script is a peer to peer crypto exchange, a popular platform for buying and selling cryptocurrency like Bitcoin etc. Coinbase clone script is a ready-made, secure, customizable, and multi-tested clone script software that is an exact replica of a popular cryptocurrency exchange - Coinbase.&lt;br&gt;
LocalBitcoins clone script: LocalBitcoins is a p2p cryptocurrency exchange script that helps entrepreneurs to successfully a crypto exchange website to buy and sell cryptocurrencies or fiat.&lt;br&gt;
Paxful clone script: Paxful works on a P2P network-based decentralized platform that upholds trading transparency and efficiency. Paxful Clone Script will be the proper choice for startups and budding entrepreneurs who wish to establish a cryptocurrency trading website alike Paxful.&lt;br&gt;
Wazirx clone script: WazirX Clone script is premier P2P cryptocurrency exchange platform software that developed on the lines of the top crypto exchange player WazirX. It supports a range of popular cryptocurrencies like Bitcoin, Litecoin, Ethereum, etc., and facilitates buying and selling of them among users.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>p2p</category>
      <category>exchange</category>
    </item>
    <item>
      <title>My first day on dev.to</title>
      <author>Vadim Kolobanov</author>
      <pubDate>Mon, 01 Nov 2021 13:37:06 +0000</pubDate>
      <link>https://dev.to/vadimkolobanov/my-first-day-on-devto-d7e</link>
      <guid>https://dev.to/vadimkolobanov/my-first-day-on-devto-d7e</guid>
      <description>&lt;p&gt;Hello everyone, it was the first day since my registration on Dev.&lt;/p&gt;

&lt;p&gt;I'll tell you right away: I write through a translator, so some phrases may seem strange to you. So, my impressions...&lt;/p&gt;

&lt;p&gt;Wow! It is very cool! I will explain why this is the case, but later&lt;/p&gt;

&lt;p&gt;I collected a lot of different materials on programming and Python in particular, and at that moment I came up with the idea "Why don't I put all this where everyone can find it". The problem was in English, but thanks to the translator. I went to the website, created an account, uploaded some of my work to the translator and posted it all here (By the way, your markdown is very cool). I have published 4 articles with my ideas and a short article about the basics of SQL for beginners. After the articles were published, I updated my page every minute to find out if anyone was interested in my work.&lt;/p&gt;

&lt;p&gt;After 3 hours, the articles received 30 views and several reactions. Well, for a beginner, it probably should be. Okay, I'm going to bed.&lt;/p&gt;

&lt;p&gt;Morning.&lt;/p&gt;

&lt;p&gt;I went to my favorite job and looked at Dev without much hope. One of my articles received 375 views. Cool! It's more than a lifetime. I started refreshing the page again every minute and was surprised when after 2 hours there were 600 views, and after another 2 it was already 1000. And, it seems, I didn't write anything, I wrote well-known facts! But the incredible uplift I experienced was priceless.&lt;/p&gt;

&lt;p&gt;I created my blog on Medium, and now there are only 15 views. It's such a contrast between dev.to and Medium, and I firmly decided, first of all, to publish articles about Dev, and then think about whether the Medium is worthy for this.&lt;/p&gt;

&lt;p&gt;I was very pleased with the first subscribers, I wanted to do even more, more often and more interesting. I have a lot of templates about VCS and Git, Python and programming in general. I saw something that I had never seen in my endeavors - this is the assessment and reaction of people completely unfamiliar to me, with whom we are separated not only by distance, but also by language and ideology. But they understood me! Sometimes it's ugly and through a translator, with incomprehensible expressions, but they understand! And today I'm happy because I met you! I will be very glad if they write me comments (it is possible in Russian).&lt;/p&gt;

&lt;p&gt;I will be glad if they show me errors in the English text or in the subject. I am very happy with this platform! I'm waiting for you! I went to create!&lt;/p&gt;

</description>
      <category>programming</category>
      <category>beginners</category>
      <category>discuss</category>
      <category>motivation</category>
    </item>
    <item>
      <title>Functional Programming with Java Streams</title>
      <author>Amigoscode</author>
      <pubDate>Mon, 01 Nov 2021 13:29:48 +0000</pubDate>
      <link>https://dev.to/amigoscode/functional-programming-with-java-streams-5h2b</link>
      <guid>https://dev.to/amigoscode/functional-programming-with-java-streams-5h2b</guid>
      <description>&lt;p&gt;Functional programming is becoming very popular and it focuses around pure functions. Functional applications avoid the shared state, and tend to be more concise and predictable than those using object-oriented code. In this course you will learn you how to move away from imperative to declarative programming allowing you to write less code and focus on what is important when build applications.&lt;/p&gt;

&lt;p&gt;List of topics for this course&lt;/p&gt;

&lt;p&gt;&lt;em&gt;What is functional programming ?&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Stream API&lt;/li&gt;
&lt;li&gt;Transformations with Map, Reduce and FlatMap&lt;/li&gt;
&lt;li&gt;Filtering with Filter, TakeWhile&lt;/li&gt;
&lt;li&gt;Collectors&lt;/li&gt;
&lt;li&gt;Statistics&lt;/li&gt;
&lt;li&gt;Grouping&lt;/li&gt;
&lt;li&gt;Sorting&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Full Course is available here: &lt;a href="https://amigoscode.com/p/java-streams?coupon_code=STREAMS50"&gt;https://amigoscode.com/p/java-streams?coupon_code=STREAMS50&lt;/a&gt; with &lt;strong&gt;50% OFF&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#crash-course"&gt;
  &lt;/a&gt;
  Crash course
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/f5j1TaJlc0w"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>java</category>
      <category>programming</category>
      <category>tutoria</category>
    </item>
    <item>
      <title>5 tips to finish your side projects (and make money doing so)</title>
      <author>Mustapha Aouas</author>
      <pubDate>Mon, 01 Nov 2021 13:25:03 +0000</pubDate>
      <link>https://dev.to/mustapha/5-tips-to-finish-your-side-projects-and-make-money-doing-so-27eo</link>
      <guid>https://dev.to/mustapha/5-tips-to-finish-your-side-projects-and-make-money-doing-so-27eo</guid>
      <description>&lt;p&gt;This past year I worked on a side project, and for once I saw it through to completion and profit. &lt;br&gt;
While working on this project, I made some good decisions as well as a lot of mistakes! In this post, I'll share with you 5 points that worked for me. Hopefully they will work for you.&lt;/p&gt;

&lt;p&gt; &lt;br&gt;
But before we start, let me establish some context:&lt;br&gt;
I began developing a tool to help me memorize the fretboard layout of my guitar (the notes on the fretboard). The project received some attention after I shared it on Reddit. Other guitar players (including bass and ukulele) were interested in such an app. So i quickly made an &lt;a href="https://dev.to/mustapha/i-made-this-game-tool-to-help-people-learn-the-notes-on-their-guitar-it-s-free-and-mobile-friendly-4lf9"&gt;MVP&lt;/a&gt; and shared it with them. &lt;br&gt;
Their feedback was so encouraging that I decided to start working (more seriously) on this project.&lt;/p&gt;

&lt;p&gt;I soft launched the product pretty much a year ago and it generated &lt;strong&gt;$1k without any marketing at all&lt;/strong&gt;, only organic traffic on the &lt;a href="https://apps.apple.com/us/app/fretboard-learning/id1554316449"&gt;App store&lt;/a&gt;. Some times you just have to publish your work.&lt;/p&gt;

&lt;p&gt;Of course that's not a lot compared to other projects and I need to do some marketing if I want to increase the revenue from the app, but that's another story.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QUyDnFvz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bztog43tiiadlq7b27eg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QUyDnFvz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bztog43tiiadlq7b27eg.png" alt="Revenue from Fretboard Learning app" width="880" height="152"&gt;&lt;/a&gt;&lt;/p&gt;
Revenue from Fretboard Learning app



&lt;p&gt; &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Disclamer:&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;The tips I will provide below are useful for relatively small projects involving a small team (you). Moreover, nothing beats hard work; if you do not put in the necessary effort, your project will not move forward on its own. However, if you do put the necessary effort, you can use these suggestions as a guide.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1-dont-be-shy-talk-about-your-project-early"&gt;
  &lt;/a&gt;
  1. Don't be shy, talk about your project early
&lt;/h2&gt;

&lt;p&gt;One thing I learned is that there's two things you should do at the very beginning of your project: Write the code and talk to users. &lt;/p&gt;

&lt;p&gt;Talking to users early-on allows you to get the necessary feedback to test your ideas. Reddit, pinterest, ... are great for that.&lt;/p&gt;

&lt;p&gt;Then, once this first step is done, it's critical to keep them engaged because you'll need their continuous input as your side project shifts and ideas evolve into a complete and marketable product. Those early testers can then become beta testers and, eventually, customers/users. So connect with them, ask for their emails, or use any other method to stay in touch.&lt;/p&gt;

&lt;p&gt;Also, Another benefits is that seeing that your product is being used might provide you with the additional motivation you need to keep going.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2-choosing-a-goal-definition-of-done"&gt;
  &lt;/a&gt;
  2. Choosing a goal / Definition of done
&lt;/h2&gt;

&lt;p&gt;The Definition of Done is an agreed upon set of items that must be completed before a project or a feature can be considered complete.&lt;/p&gt;

&lt;p&gt;It's important to have that so you don't fall victim to perfectionism, which can lead to a loss of motivation and a lot of time wasted on features that may or may not be discarded later. Always try to make it work and give it to users before trying to make it "right and fast".&lt;/p&gt;

&lt;p&gt;This goes hand in hand with the first point, so don't be afraid to ship your project early; you can always make adjustments afterwards.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3-have-a-backlog"&gt;
  &lt;/a&gt;
  3. Have a backlog
&lt;/h2&gt;

&lt;p&gt;This one is straight forward. Having a backlog can help you track your progression and keep track of what needs to be done. This backlog will evolve overtime as your project progresses and will help you stay on track with your objectives.&lt;/p&gt;

&lt;p&gt;Break every idea into small steps and prioritise them. Then set some confortable weekly or monthly goals.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#4-discipline-over-motivation"&gt;
  &lt;/a&gt;
  4. Discipline over motivation
&lt;/h2&gt;

&lt;p&gt;Self-discipline and the ability to stay committed are required for a job in software engineering. The same is true for side projects; you cannot rely solely on motivation, because motivation can fluctuate and decrease from time to time. So you must continue working on your project even if you lack the motivation. &lt;/p&gt;

&lt;p&gt;Set a time during the day to work on your project and stick to it.&lt;/p&gt;

&lt;p&gt;If you feel like you're about to abandon the project, take a short break now and then (maybe a week or so), but don't take a long break because it can kill your project (How many times have you put a project on hold and never touched it again?). &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#5-keep-a-technical-journal"&gt;
  &lt;/a&gt;
  5. Keep a technical journal
&lt;/h2&gt;

&lt;p&gt;Keep a detailed technical journal for your project. Write problems down and document all the dead-ends that you encounter. This will make context switching a lot less painful and it will give you a better notion of how much work was done compared to lines of code or commit count.&lt;/p&gt;

&lt;p&gt;In addition, if you drop the project at some point, it will be easier to pick it up again.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
 &lt;/p&gt;

&lt;p&gt;That's it for this post. I hope some of these points will help you in your journey!&lt;br&gt;
If you liked this post, please share it with your friends or colleagues and follow me on twitter at &lt;a href="https://twitter.com/TheAngularGuy"&gt;@theAngularGuy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Have a nice day!&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#what-to-read-next"&gt;
  &lt;/a&gt;
  What to read next?
&lt;/h2&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mustapha" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TjMto4tb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Bz3nRw5I--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/174804/95610498-02ee-4f3f-846b-b85ccb539f0a.jpg" alt="mustapha"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mustapha/a-deep-dive-into-es6-classes-2h52" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;A deep dive into ES6 Classes&lt;/h2&gt;
      &lt;h3&gt;Mustapha Aouas ・ Oct 26 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>sideprojects</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Wetware of writing and doing</title>
      <author>Rosano</author>
      <pubDate>Mon, 01 Nov 2021 13:18:21 +0000</pubDate>
      <link>https://dev.to/rosano/wetware-of-writing-and-doing-4jib</link>
      <guid>https://dev.to/rosano/wetware-of-writing-and-doing-4jib</guid>
      <description>&lt;p&gt;&lt;em&gt;Originally presented at &lt;a href="https://lu.ma/tftrocks-oct"&gt;Tools for Thought Rocks&lt;/a&gt; on October 29, 2021 (with &lt;a href="https://cafe.rosano.ca/t/presenting-wetware-of-writing-and-doing-at-tools-for-thought-rocks/148/2"&gt;video and timestamps&lt;/a&gt;). Below is an expanded text version of my presentation for anyone who prefers reading.&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;I talk often about my apps and their features, but rarely about how I use them day-to-day—partially to leave space for people to imagine their own workflows, but also because I didn't think it wouldn't be of interest to share mine. This changed after a conversation with &lt;a href="https://www.pvh.ca/"&gt;pvh&lt;/a&gt;, who remarked that after reading the website for &lt;a href="https://rosano.hmm.garden/01f1ghk7crrk2g4b3e37j8vpgx"&gt;Launchlet&lt;/a&gt; and trying to play with the &lt;a href="https://launchlet.dev/compose"&gt;compose interface&lt;/a&gt;, it wasn't clear how all the parts came together until watching my &lt;a href="https://rosano.hmm.garden/01f1ghgrgxq5adk0sdck3csghh"&gt;tutorial videos&lt;/a&gt;—I found that interesting coming from someone who has plenty of experience with computer programming and its paradigms. It made me realize 1) that interfaces clearly communicating 'features' doesn't mean people appropriate them, 2) the importance of good affordances to help people go beyond merely 'using the app' to extending themselves in the process. The larger question to address here is: how can the environment better transmit what is possible so that those within it can take fuller advantage? It will likely take some time for me to find my own answers and implement them in projects, so for now, I feel motivated to do what is knowable and share more about how I use my apps to illuminate the wetware.&lt;/p&gt;

&lt;p&gt;What I find myself 'doing' most of the time involves: making &lt;a href="https://github.com/rosano"&gt;apps and websites&lt;/a&gt;; writing &lt;a href="https://cafe.rosano.ca/c/writing/8"&gt;texts about personal experiences and interests&lt;/a&gt;; recording &lt;a href="https://vimeo.com/rosano/videos"&gt;screencasts about programming&lt;/a&gt;; organizing &lt;a href="https://rosano.hmm.garden/01ew1g0nvabn71z3xwpj93bbqg"&gt;online events&lt;/a&gt;; and generally working on &lt;a href="https://rosano.hmm.garden/01etsqssqjv29ykfphkxq01042"&gt;personal projects&lt;/a&gt;. It all adds up, and to keep things from overwhelming me I practice a &lt;a href="https://rosano.hmm.garden/01ett0ax73nhv89tyd5wpn145z"&gt;productivity trinity&lt;/a&gt; which can be summarized as:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt; &lt;em&gt;Capture everything&lt;/em&gt;: get ideas out of your head as soon as possible.&lt;/li&gt;
&lt;li&gt; &lt;em&gt;Organize if needed&lt;/em&gt;: move it where you are likely to encounter it.&lt;/li&gt;
&lt;li&gt; &lt;em&gt;Purge&lt;/em&gt;: do it or delete it as soon as possible.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;The mix of details below might seem chaotic, but they all relate to these three points in some way.&lt;/p&gt;

&lt;p&gt;One objective of &lt;a href="https://rosano.hmm.garden/01ett072dk3kyevtrraez4ctgf"&gt;Capture everything&lt;/a&gt; is to keep going: I avoid interruptions like checking out links people send me and do everything later; it helps to maintain focus on whatever has my attention. Making time to read articles or watch videos can be a challenge and often gets neglected, but in my experience it usually happens eventually and delaying consumption has the benefit of obsoleting some things before you get to it. When there's a lot of collecting from streams or timelines and placing into queues help batch the process of reading, watching, listening, and writing, it helps to have a place to put things.&lt;/p&gt;

&lt;p&gt;Most of my queues are digital now (although at one point I did write and organize my life with small pieces of paper): &lt;a href="https://getpocket.com/"&gt;Pocket&lt;/a&gt; is for reading because it syncs with my e-reader (to read without internet access, and with something closer to paper than a screen, and without the distractions of my computer or phone), and for checking out websites because I like to close all my browser tabs as soon as possible; &lt;a href="https://1feed.app/"&gt;1Feed&lt;/a&gt;is for newsletters (as it interrupts my flow to read long text while checking e-mail), and for following Internet things with a timeline presentation; &lt;a href="https://rosano.hmm.garden/01f3t6hb8645evfj9k0yjvpsy9"&gt;Joybox&lt;/a&gt; is for audiovisual media &lt;a href="https://www.youtube.com/watch?v=McKXW-bP2HQ&amp;amp;t=13m18s"&gt;segmented with tags for listening, watching, and passive consumption&lt;/a&gt;; &lt;a href="https://rosano.hmm.garden/01f1qb660m91xyn050bn79dhnz"&gt;Kommit&lt;/a&gt; is for words and phrases that I want to learn from foreign languages; Launchlet is for &lt;a href="https://www.youtube.com/watch?v=McKXW-bP2HQ&amp;amp;t=21m45s"&gt;shortcuts and removing friction from workflows&lt;/a&gt;; &lt;a href="https://rosano.hmm.garden/01f1km6a1g3ph2jd3j7nx0qd02"&gt;Emoji Log&lt;/a&gt; is for &lt;a href="https://www.youtube.com/watch?v=McKXW-bP2HQ&amp;amp;t=23m40s"&gt;personal tracking and time-bound journaling&lt;/a&gt;, like books I read or recipes I cook, or more personal thoughts and monitoring emotions. For everything else, there's &lt;a href="https://rosano.hmm.garden/01etj3kw7w4zyz1f5ktnnagn7n"&gt;Hyperdraft&lt;/a&gt;, which is mostly &lt;em&gt;&lt;a href="https://rosano.hmm.garden/01etae8r35m5yfj4eby16vswfy"&gt;reference&lt;/a&gt;&lt;/em&gt;-oriented and not time-bound—it functions as: dashboards of to-dos for dozens of projects; &lt;a href="https://www.youtube.com/watch?v=McKXW-bP2HQ&amp;amp;t=36m32s"&gt;space to mix private and public writing&lt;/a&gt;; an environment that spans the entire arc of 'capture, brainstorm, organize, outline, draft, write, publish' that is on all my devices and &lt;a href="https://www.inkandswitch.com/local-first.html"&gt;local-first&lt;/a&gt;, thus minimizing discontinuities from needing to be in a specific place or not having internet access; writing queues my for various newsletters and a &lt;a href="https://www.youtube.com/watch?v=McKXW-bP2HQ&amp;amp;t=39m56s"&gt;templating system&lt;/a&gt; for &lt;a href="https://rosano.hmm.garden/01f58x4bdpm6530ba58wxjm30w"&gt;Ephemerata&lt;/a&gt;; quick jot-pads for when I'm not sure where to put something; and a convenient place for &lt;a href="https://rosano.hmm.garden/01et7vrq0dzezj2aj0vkr4t2zy"&gt;Ideas increment automatically when they are captured&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All these queues provide, on the one hand, a sense of space that I find relaxing because there is a place to put things, and on the other hand, an uneasiness about being overwhelmed as they are easy to neglect and intentionally out of sight; the serenity is stronger when you trust yourself to attend to them. How does one maintain balance and create healthy rhythms for processing these queues? Many of my strategies help me avoid being 'completist' and find reasons to purge things when there's a backlog: if I read until the halfway point and haven't found anything interesting, if the video doesn't hold my attention, if I haven't moved on it in weeks, if it's expired or irrelevant now, into the void it goes. It took me a while to realize that 'delete' can mean "I don't want to be reminded of this"; we have to train digital systems to not show things 'forever'. I try to prune my lists frequently in addition to actually doing things, but it's hard for me to repeat at specific intervals as life tends to get in the way: I've found it useful to observe how I feel and find the cadence that works for me—we are not machines. One rhythm I frequently engage in with enthusiasm is [[work digress cycle]].&lt;/p&gt;

&lt;p&gt;I've been surprised at how this idea of queues helps me 'write without magic'. It feels like writing happens without great pain or earnestness, and I think of it reductively as "mostly just moving things around". Let's say there's 3% which is creative personal expression (that everyone has but in their own way), and 97% which is stuff that requires no talent, such as: capturing ideas as they occur, allowing details to passively collect over time, periodically perusing through the old to find potential connections to the new… Here the queues function like buckets collecting drips of water: some have zero drops, some have one, some have a few; eventually some have 'enough' or are overflowing and can be &lt;a href="https://www.youtube.com/watch?v=McKXW-bP2HQ&amp;amp;t=42m59s"&gt;marked as prompts for finalizing&lt;/a&gt;, which for me implies taking a queue or list of items to sort, group, massage, tidy, and publish. It's easier than confronting a blank screen, or twiddling thumbs to figure out how to start, and showcases the power of &lt;a href="https://rosano.hmm.garden/01et5a1fy7zy4pvqe8nywg471m"&gt;Writing creates a space for 'the answer to go'&lt;/a&gt;: with little effort, I find myself having lots to write about, unintimidated by the process of finishing. I think everyone has the necessary pieces to do this, but most people get stuck in their 97%, which is a tractable problem that can be encroached upon by finding tools and workflows that fit, making things simpler or perhaps effortless, and cultivating calm spaces to write and reason that are free from judgement.&lt;/p&gt;

&lt;p&gt;Understanding the wetware is not always obvious and I'm still not sure of how it should be presented, be it in words or an interface. I hope that with plenty of examples of how I use my apps, it helps unveil how they can be leveraged to do more. In the future, I would hope to integrate an understanding of my own processes into the onboarding of my software so that it doesn't require more than the experience of using the app to feel empowered by all its possibilities. I might summarize this first exploration as 1) collect, organize, purge with lots of queues, 2) let time work in your favour, and 3) spend time on what motivates you.&lt;/p&gt;




&lt;p&gt;P.S. Thanks to &lt;a href="https://jessmart.in/"&gt;Jess Martin&lt;/a&gt; and &lt;a href="https://toolsforthought.rocks/"&gt;Tools for Thought Rocks&lt;/a&gt;community for the invitation to present, and the prompt—this wouldn't exist if it wasn't for your concept of 'Workflow Walkthroughs' 🙏🏽.&lt;/p&gt;




&lt;p&gt;P.P.S. For anyone who made it this far, please enjoy this short video of my old-time &lt;a href="https://youtu.be/sctotQrchsk"&gt;analog to-do dashboard&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;Published at &lt;a href="https://rosano.hmm.garden/01fk3v8d7s6jw0wbhp3ck7xkyf"&gt;rosano.hmm.garden&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Image by &lt;a href="https://unsplash.com/photos/OgvqXGL7XO4"&gt;Hal Gatewood&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>writing</category>
      <category>tutorial</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Top Web Development Trends 2022 You Should Know About</title>
      <author>Freita Browning</author>
      <pubDate>Mon, 01 Nov 2021 13:18:02 +0000</pubDate>
      <link>https://dev.to/freita_browning/top-web-development-trends-2022-you-should-know-about-b24</link>
      <guid>https://dev.to/freita_browning/top-web-development-trends-2022-you-should-know-about-b24</guid>
      <description>&lt;p&gt;There is no doubt that websites are playing a crucial role in today’s business scenario. These websites are not merely a piece of content and design, but they represent individual brands, organizations, and people. As companies and organizations have crossed all borders, doing business at the world level has become possible and feasible. And websites are playing a pivotal role in this realm.&lt;/p&gt;

&lt;p&gt;Nevertheless, the process of website development has also become convenient over time. And we have effective technologies that help to create websites without any knowledge of coding. Interestingly, you can &lt;a href="https://www.csschopper.com/wordpress-web-development.shtml"&gt;choose WordPress website development&lt;/a&gt; or pick any other website development platform to create a decent website for your business or organization. Content Management Systems (CMSs) are meant for custom web development that helps in creating unique websites. &lt;/p&gt;

&lt;p&gt;However, another aspect that keeps affecting the cycle of web development is the new trends in the process. Web development is quite a dynamic field where new trends bring more efficient ways of website development like in WordPress development, &lt;a href="https://www.csschopper.com/psd-to-wordpress.shtml"&gt;PSD to WordPress conversion&lt;/a&gt; has become very popular nowadays.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Importance of Web Development&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Websites have become essential for every kind of business today irrespective of the domain it falls in. There are many reasons why businesses should have a website including better customer reach, easy communication, and stronger relations. Connectivity is a key factor for a business’s success. You can opt for Drupal development services or choose any other content management system to create your website easily. Here are a few benefits of web development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Effective Communication&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is vital to communicate with your customers when you want to generate more business. The advantage of a website comes in terms of a convenient and widely accessible platform that any customer can reach irrespective of his/her physical location. Thus websites serve as a strong means of communication between customers and businesses. You need a dynamic web application for your business and PHP development is the preferred choice for this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prove your Reliability&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another advantage of having a website is that you can prove the reliability of your business. Once you have a website you can add testimonials to your website. You can utilize social media for promoting your site. Websites are quite useful for establishing the credibility of your business. &lt;a href="https://www.csschopper.com/hire-dedicated-prestashop-developer-professional.shtml"&gt;You can hire a PrestaShop developer&lt;/a&gt; or any other eCommerce development expert to create the best online store that will boost your business.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Improve Connectivity&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A website facilitates several things like extending your reach to more customers and attracting new customers. If you own a brick-and-mortar store, it will be difficult to manage customers which are at a far distance. However, a website gives you that ability and lets you connect to more customers. Moreover, choosing the right web development company is essential to build a robust website for your business.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#here-are-the-top-8-web-development-trends-to-be-seen-in-2022"&gt;
  &lt;/a&gt;
  Here are the top 8 web development trends to be seen in 2022
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Artificial Intelligence&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;AI or artificial intelligence is a revolutionary technology that has been deployed in multifarious industries. It is also widely adopted in the field of web development where it is used to provide a better customer experience. Nowadays artificial intelligence is being implemented in various ways inside websites.&lt;br&gt;
One of the important ways in which AI is implemented is for the product or content recommendations on websites. As you can see on websites like YouTube and Netflix that recommend content based on the preferences of a user. This is a solid example of how AI is beneficial for websites. It is also being used in &lt;a href="https://www.csschopper.com/ecommerce-website-development.shtml"&gt;eCommerce website development&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;AI is quite useful for eCommerce websites as it helps in providing product recommendations to customers by understanding their tastes and preferences. Thus AI is a prominent technology that is useful for business automation and predictive approaches. Further AI also helps in improving your website through reinforcement learning. It has emerged as one of the hottest trends in the field of web development and it will remain so in 2021 too. &lt;a href="https://www.csschopper.com/hire-dedicated-developer-professional.shtml"&gt;You can hire web developer&lt;/a&gt; to create an advanced AI-based website for your business.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Chatbot&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chatbots are one of the underrated modern-day technologies that have a crucial impact on every industry. As customer support is an important part of every organization, having a robust customer support method is a must. Chatbots are proving to be useful for efficient customer support as they can handle customers’ queries and provide them with appropriate solutions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Chatbot"&gt;Chatbots&lt;/a&gt; are made up of cognitive intelligence and voice recognition technologies. For eCommerce websites, Chatbots are quite useful as they provide a means of efficient customer support.&lt;/p&gt;

&lt;p&gt;Whether you &lt;a href="https://www.csschopper.com/shopify-development.shtml"&gt;choose Shopify website development services&lt;/a&gt; or opt for PrestaShop, WooCommerce, or any other eCommerce platform, you can take advantage of Chatbots in your website to deliver efficient and effective customer service. You can also choose options like &lt;a href="https://www.csschopper.com/hire-dedicated-magento-developer-professional.shtml"&gt;hire Magento developer&lt;/a&gt; to develop an eCommerce website equipped with advanced chatbots.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Voice Commerce&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whenever you want some information or want to buy something, you usually go to Google and input the desired search terms, then lots of results are there that meet your interests. But this process has gone to a new level with the advent of smart speakers and virtual assistants like Siri, &lt;a href="https://assistant.google.com/"&gt;Google Assistant&lt;/a&gt;, Cortana, etc. These technologies take advantage of speech recognition and cognitive intelligence to provide appropriate information.&lt;br&gt;
To ensure that your website is ready for voice commerce technology, you should make sure that it is optimized for voice search. With the use of smart speakers, users can purchase products without any hassle.&lt;/p&gt;

&lt;p&gt;If you want to choose PrestaShop development services or pick any other platform like Magento, WooCommerce, Shopify, or else, you need to make sure that the website you create is optimized for voice search. There are numerous benefits of voice search for a website and the primary one being the compatibility with mobile devices. A website development company helps you to optimize your site for voice searches. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Progressive Web Apps (PWAs)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Progressive Web Apps or PWAs are a new age technology that is changing the scenario of web development. A progressive web app is an advanced web application that one can install on a mobile device. It means it combines the functionality of a web app and a native mobile app. So, a PWA is a web app at the core and has native app-like attributes. A user can install a PWA like a native app and can share it.&lt;/p&gt;

&lt;p&gt;However, it can do much more than a native app as it can also be installed on desktops, it is fast, secure, and discoverable. As the popularity of PWAs is increasing, more and more businesses are opting for &lt;a href="https://www.csschopper.com/progressive-web-app-development-services.shtml"&gt;PWA development services&lt;/a&gt;. The best thing about PWA is that it can work offline. PWAs have come out as one of the biggest trends in the past few years and it will remain so in 2021 too.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AMP (Accelerated Mobile Pages)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As more and more people are using mobile devices then it is important that your website offers a seamless experience to users on mobiles. However, websites usually fail to fulfill this aspect as websites are heavy because they have a lot of content like images, videos, etc that affect the loading speed of these web pages.&lt;/p&gt;

&lt;p&gt;AMP is the solution to this problem. AMP which is an acronym for Accelerated Mobile Pages is lightweight webpages that load speedily on mobile devices. These web pages are specially optimized for mobile devices to ensure the fast speed of web pages. &lt;/p&gt;

&lt;p&gt;You can choose AMP web development services to create a fast-loading website that mobile users can use on their mobile devices and that loads at a lightning speed. The key advantage of AMP or Accelerated Mobile Pages is that it offers great results without the need for complicated coding. Hence you make your website fast-loading without integrating any complex code. AMP is among the most useful website development trends that will also be there in 2022.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Single Page Applications (SPAs)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SPAs or Single Page Applications is another attractive trend in the web development industry. If you want a sleek, concise, smart, and secure website then Single Page Application development should be your choice. You get a high-performance and easy website by creating a SPA for your business. They offer two kinds of benefits for both users and website owners. On the one end, these websites offer a pleasing user-experience, they provide ease of maintenance to website owners on the other end.&lt;/p&gt;

&lt;p&gt;In a multi-page website, users have to keep interacting with servers to load multiple pages, so reloading is a common behavior in multi-page websites. However, the advent of single-page applications has eliminated this and no reloading is needed when on a webpage. SPAs have become one of the sought-after solutions in website development services. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Internet of Things (IoT)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;IoT has become one of the most revolutionary technologies in the world that have impacted almost every business domain in the world. It has been adopted by varied businesses to use for various purposes from business automation to healthcare tracking devices. Nowadays companies and organizations are utilizing IoT-enabled web development solutions to improve their website processes. With the help of &lt;a href="https://www.csschopper.com/custom-web-development.shtml"&gt;custom web development services&lt;/a&gt; businesses can build next-gen web solutions powered by IoT technology. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Dark Mode&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dark mode has become one of the hottest trends for website development that you will also see in 2021. Users like websites that are easy and provide the best user experience. The implementation of a dark mode on your website is an attempt to enhance the user experience. The dark mode is also good for the eyes and it makes different elements stand out on the website.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up
&lt;/h2&gt;

&lt;p&gt;Websites are becoming more and more sophisticated as new methodologies and technologies are being rolled out in the field of web development. You can take advantage of custom website development with the latest website development trends to develop robust and out-of-the-box websites. Moreover, developing a website has become a lot easier today as you can take advantage of varied platforms such as  Joomla, WordPress, Drupal, Magento, etc to create outstanding websites. Besides this, you can also &lt;a href="https://www.csschopper.com/cakephp-framework-development.shtml"&gt;choose CakePHP development&lt;/a&gt;, ROR development, or any such technology to develop dynamic and superior websites.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>devops</category>
      <category>php</category>
    </item>
    <item>
      <title>Containerization with Docker 🐳</title>
      <author>Josh</author>
      <pubDate>Mon, 01 Nov 2021 13:17:26 +0000</pubDate>
      <link>https://dev.to/jryther/containerization-with-docker-40o0</link>
      <guid>https://dev.to/jryther/containerization-with-docker-40o0</guid>
      <description>&lt;p&gt;Hello everyone!  This week I am going to go over containerization in docker and when it might be best to use it.  For those that are familiar with virtual machines, containers have the same concept.  Their purpose is to create an isolated environment that can be configured for a specific application.  Since virtual machines and containers are similar I think it is important to explain the difference between them for those that aren’t familiar.&lt;/p&gt;

&lt;p&gt;Virtual machines were developed first and they are essentially virtual computers that are ran on the same hardware.  Each VM has it’s own OS and environment.  It uses something called a hypervisor to manage the hardware resources between each VM.  Disadvantages of a VM is that they are resource heavy and difficult to migrate between platforms.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iGgBc4JZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tgzktewhe9l5unmgq419.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iGgBc4JZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tgzktewhe9l5unmgq419.png" alt="Virtual Machine Diagram" width="880" height="703"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Containers are similar to VMs in concept but the big difference is that they don’t include the OS in the container.  This allows developers to create an environment for the application without including the resource heavy components of the VM.  Unlike VMs, containers are easy to migrate between platforms with the same OS and are lightweight.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ksI5Zo9v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q4euw9brh1mpcvj2clr2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ksI5Zo9v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q4euw9brh1mpcvj2clr2.png" alt="Docker Diagram" width="558" height="254"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Containers do have their downsides though, some of which have to do with sharing the OS.  Any security vulnerabilities introduced with one container that effects the OS will therefore affect all of the containers on the same machine.  The containers are also initialized to work on a specific OS so if you want to migrate it, the new platform will need to be the same.  With the positives and negatives weighed, the developer will need to consider what migration, resource, and security concerns will effect the application.  Neither method is inherently better and will depend on the type of project.&lt;/p&gt;

&lt;p&gt;I hope you all found this post helpful in understanding the basics of what containerization in docker is.  Next week I plan on giving a tutorial for setting up and using docker.  Please like and comment to let me know how I am doing and I hope you all have a great rest of your week.  Happy coding!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://docker-curriculum.com/#getting-started"&gt;https://docker-curriculum.com/#getting-started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=JSLpG_spOBM"&gt;https://www.youtube.com/watch?v=JSLpG_spOBM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.netapp.com/blog/containers-vs-vms/"&gt;https://www.netapp.com/blog/containers-vs-vms/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.redhat.com/en/topics/containers/containers-vs-vms"&gt;https://www.redhat.com/en/topics/containers/containers-vs-vms&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>webdev</category>
      <category>docker</category>
      <category>todayilearned</category>
      <category>architecture</category>
    </item>
  </channel>
</rss>
