<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Docker for Dummies</title>
      <author>StevenMcGown</author>
      <pubDate>Fri, 09 Jul 2021 00:23:18 +0000</pubDate>
      <link>https://dev.to/stevenmcgown/docker-for-dummies-2bff</link>
      <guid>https://dev.to/stevenmcgown/docker-for-dummies-2bff</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CX4arF15--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4psm82g8sqb647mi83kr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CX4arF15--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4psm82g8sqb647mi83kr.png" alt="dockerlogo"&gt;&lt;/a&gt;&lt;br&gt;
Docker is one of those services that you always hear about but may have never used. I never used Docker in college, and I actually never heard of it until I began researching the field of DevOps. Knowing how to use Docker is a quintessential element of becoming a part of a modern development team. My goal of this post is to help the reader gain an understanding of what Docker is, to learn why enterprise teams are adopting it today, and how to get started using Docker.&lt;/p&gt;

&lt;h1&gt;Questions to answer:&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;What problems does Docker solve?&lt;/li&gt;
&lt;li&gt;What are containers?&lt;/li&gt;
&lt;li&gt;What is the difference between a container and a VM?&lt;/li&gt;
&lt;li&gt;What is the difference between images and containers?&lt;/li&gt;
&lt;li&gt;How does Docker help create applications?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Why Docker?&lt;/h3&gt;

&lt;p&gt;The need for Docker arises from virtual machines on servers being used at large scales. Take a large business for example. For a business that uses hundreds of servers with a cluster of virtual machines for each of their platforms, maintaining these machines is a full-time job. Each server has to have an OS installed, it needs upgrades and patches from time to time, and then dependencies for the applications each machine uses also have to be installed. &lt;/p&gt;

&lt;p&gt;You can see why this quickly becomes very complex. Manually configuring these servers is not feasible, so many companies keep a list of servers that they programmatically update. This can work, however the list of servers is shared between a team of people, and this list does not always stay up to date. Some servers never receive updates and consequentially errors may arise which impact system performance. Finding one faulty server in a room of hundreds can also be a troubleshooting nightmare. How does Docker solve this?&lt;/p&gt;

&lt;h3&gt;Docker to the rescue!&lt;/h3&gt;

&lt;p&gt;Rather than running applications on virtual machines, you can upload Docker images to your server. When an image fails, you just upload a new one. There is no need to worry about configuration because the image exists as an exact replica of the original configuration. In this way, you do not have to worry about installing application dependencies or OS patches because they have already been configured in your Docker image. The Docker setup frees you from treating servers as pets, constantly monitored and cared for, to something more ephemeral; It is okay if the image fails, you can just replace it. "What is an image, and why can it be a better fit than virtual machines? You might ask." This term will make more sense as we move forward.&lt;/p&gt;

&lt;p&gt;Docker is also great for developers. It means no more "It works on my machine" since all the developers are developing with the same stack maintained in the Docker file.&lt;/p&gt;

&lt;h3&gt;How does Docker streamline the development process?&lt;/h3&gt;

&lt;p&gt;&lt;b&gt;CI/CD:&lt;/b&gt; You can consistently test and deploy your code to different environments in the development process (staging, user acceptance testing, production) without the hassle of configuring various testing environments.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Versioning:&lt;/b&gt; Docker also helps with versioning, as you can save different versions of software on repositories and check them out later if needed. This eliminates the need for changing versions of software when running an older version of an application.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Roll Forward:&lt;/b&gt; When defects are found, there is no need to patch or update the application. You just need to use a new image.&lt;/p&gt;

&lt;h3&gt;What is the difference between an image and a container?&lt;/h3&gt;

&lt;p&gt;Docker images and containers are closely related, however they are distinct. Docker images are immutable, meaning they cannot be changed. I have explained previously that these images can be uploaded to servers in place of running applications directly on an OS. Images contain the source code, libraries, dependencies, tools and other files that the application needs to run. When using Docker, we start with a base image. Because images can become quite large, images are designed to be composed of layers of other images to allow a minimal amount of data to be sent when transferring images over the network.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--49swSV-N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9jxn6fjons4ggrfrnxek.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--49swSV-N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9jxn6fjons4ggrfrnxek.png" alt="imageandcontainer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The instance of an image is called a container. Containers are running instances with top writable layers, and they run the actual applications. When the container is deleted, the writable layer is also deleted but the underlying image remains the same. The main takeaway from this is that you can have many running containers off of the same image. A good way to think about images and containers is with this metaphor: Images are the recipe to make a cake, and containers are the cakes you bake. You can make as many cakes as your resources allow you with a recipe; you can make as many containers as your resources will allow you with an image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r9sdzq4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9t7fkz3s61nzd1t34px5.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r9sdzq4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9t7fkz3s61nzd1t34px5.jpeg" alt="docker cake"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;What is the difference between virtual machines and containers?&lt;/h3&gt;

&lt;p&gt;Consider the layout of a typical VM fleet: Virtual machines are managed through a hypervisor, which runs on a host OS that is installed on server hardware. The hypervisor virtualizes hardware that virtual machines use to run their operating systems (Guest OS). So basically the server has a host OS, and the virtual machines themselves have a complete operating system installed.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SC0D0ObN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/abs51w3ej6bhe3hzxv1s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SC0D0ObN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/abs51w3ej6bhe3hzxv1s.png" alt="helloworld"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What makes a container different is that the container does not have a Guest OS. Instead, the container actually virtualizes the operating system. Inside this container you can build whatever you want. The advantages to using containers over virtual machines are the fast boot up time and their portability. &lt;/p&gt;

&lt;h3&gt;Buildling images with Dockerfiles&lt;/h3&gt;

&lt;p&gt;As you can see, Docker helps ease the hassle of installation and configuration. Let's look at a sample Docker command:&lt;br&gt;
&lt;code&gt;sudo docker run docker/whalesay cowsay Hello-World!&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YzILkcUu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6f426u44863qi5wy9hjf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YzILkcUu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6f426u44863qi5wy9hjf.png" alt="images"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, the docker image did not initially exist locally so it had to be pulled from docker/whalesay. You can also see that the image consists of multiple layers e190868d63f8, 909cd34c6fd7, etc. To create an image, we can create a Dockerfile. Once this file is completed, we will use &lt;code&gt;docker build [OPTIONS] PATH | URL | -&lt;/code&gt; to create our image.&lt;/p&gt;

&lt;p&gt;A Dockerfile can be created using &lt;code&gt;touch Dockerfile&lt;/code&gt; and can be edited using your favorite text editor. Notice that this file is created without an extension, this is intentional.&lt;/p&gt;

&lt;p&gt;In your Dockerfile, type the following code:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xq5ID1qm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4cdf79op8zdso1wbt0zq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xq5ID1qm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4cdf79op8zdso1wbt0zq.png" alt="dockerfile"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The FROM statement declares what image your new image will be based on. For this sample project, I will be using the ubuntu image. However if you want to create a Docker image from scratch, you can simply write &lt;code&gt;FROM scratch&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;LABEL is used to apply meta data to Docker objects. In this case, you can use LABEL to specify the maintainer of the Docker image. MAINTAINER was once used but this is since deprecated. &lt;/p&gt;

&lt;p&gt;RUN is used to execute commands during the building of the image, while CMD is executed only when the container is created out of the image.&lt;/p&gt;

&lt;p&gt;In the directory of your Dockerfile, type &lt;code&gt;docker build .&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1n2X0AoH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mfgovtflb64shwx535x4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1n2X0AoH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mfgovtflb64shwx535x4.png" alt="dockerbuild"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first time each command is executed, each command will be executed. Each command in the Dockerfile is cached, so if you edit the file it will only need to build for edited command. After editing the echo command of our Dockerfile, we will also give the Docker image a name and the 'latest' tag. &lt;br&gt;
&lt;code&gt;docker build -t helloworld:latest&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dGyjhetm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wkxhwrf7leudhcytr591.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dGyjhetm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wkxhwrf7leudhcytr591.png" alt="built"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To run your image, first find the image name by running &lt;code&gt;docker images&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nw9Ev_34--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ihsb09q9vjalops1fhuk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nw9Ev_34--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ihsb09q9vjalops1fhuk.png" alt="dockerimages"&gt;&lt;/a&gt;&lt;br&gt;
Note that you can run a Docker image by its image ID or its name and tag. If you run by name only, Docker will automatically run by the 'latest' tag.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker run helloworld:latest&lt;/code&gt; and &lt;code&gt;docker run 4d6c8eea04c9&lt;/code&gt;&lt;br&gt;
produce the same output in this case.&lt;/p&gt;

&lt;p&gt;And there you have it! You have created your first Docker image. You can find other images on &lt;a href="https://hub.docker.com"&gt;https://hub.docker.com&lt;/a&gt; and documentation at &lt;a href="https://docs.docker.com/"&gt;https://docs.docker.com/&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;I hope that this post can help anyone who feels like they aren't ready to learn about Docker. Often times, the most difficult part of getting something done is starting it. Please let me know if this helped or if I missed anything!&lt;/p&gt;

</description>
      <category>docker</category>
      <category>beginners</category>
      <category>devops</category>
      <category>linux</category>
    </item>
    <item>
      <title>When is the best time to share a "new" product?</title>
      <author>Avelino</author>
      <pubDate>Fri, 09 Jul 2021 00:17:23 +0000</pubDate>
      <link>https://dev.to/prestd/when-is-the-best-time-to-share-a-new-product-42pl</link>
      <guid>https://dev.to/prestd/when-is-the-best-time-to-share-a-new-product-42pl</guid>
      <description>&lt;p&gt;&lt;strong&gt;Is now&lt;/strong&gt; (as soon as possible), even if it's not the way you want it&lt;/p&gt;

&lt;p&gt;pREST exists since 2016 and today I remembered to publish it on Product Hunt, without having much expectation on the engagement.&lt;/p&gt;

&lt;p&gt;To my surprise, has a much higher engagement than I imagined, especially in the installation of binary (software).&lt;/p&gt;

&lt;p&gt;We will be a software for API development based on PostgreSQL database (new or existing) with low-code, there is a lot of work to be done... we are just in the beginning.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--5YV4r-9o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/662417488806711296/NucHBWWQ_normal.png" alt="Product Hunt Hi profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Product Hunt Hi
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @producthunthi
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/avelinorun"&gt;@avelinorun&lt;/a&gt; FYI, you've been added as a maker of pREST on &lt;a href="https://twitter.com/ProductHunt"&gt;@ProductHunt&lt;/a&gt; &lt;a href="https://t.co/RYsNUbdVna"&gt;producthunt.com/posts/prest&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      02:08 AM - 08 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1412956727822200835" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1412956727822200835" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1412956727822200835" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/prest"&gt;
        prest
      &lt;/a&gt; / &lt;a href="https://github.com/prest/prest"&gt;
        prest
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      pREST (PostgreSQL REST), simplify and accelerate development, ⚡ instant, realtime, high-performance on any Postgres application, existing or new
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/46ae6b60c9489ed1e9acb5b175397a1f0dc13336e9845c2d4edb29c331e38297/68747470733a2f2f646f63732e7072657374642e636f6d2f6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/46ae6b60c9489ed1e9acb5b175397a1f0dc13336e9845c2d4edb29c331e38297/68747470733a2f2f646f63732e7072657374642e636f6d2f6c6f676f2e706e67" alt="RESTful API" title="RESTful API"&gt;&lt;/a&gt; pREST&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.com/prest/prest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4c8498cf30582894fde2ee192ae0d6754b12169258c39e0190037bdb75d99511/68747470733a2f2f7472617669732d63692e636f6d2f70726573742f70726573742e7376673f6272616e63683d6d61696e" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://godoc.org/github.com/prest/prest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ed439e448b4589ce43941820408b3748cf67c44a8bfa986eee938aee551ffe26/68747470733a2f2f676f646f632e6f72672f6769746875622e636f6d2f70726573742f70726573743f7374617475732e706e67" alt="GoDoc"&gt;&lt;/a&gt;
&lt;a href="https://goreportcard.com/report/github.com/prest/prest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a44e02070085a4c6d91c0f81ea8491ef939ac779bc899ce2898a14ccf0fc82c8/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f70726573742f7072657374" alt="Go Report Card"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/prest/prest?branch=main" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/06b1bf385514b02b7c254d223264fcb0f57a073c2e7a7ea31e7504f0f13ea773/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f70726573742f70726573742f62616467652e7376673f6272616e63683d6d61696e" alt="Coverage Status"&gt;&lt;/a&gt;
&lt;a href="https://app.sourcelevel.io/github/prest/-/prest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f123648b25b48267acf38e2c42814e28a71feb4cfd84e64d3695b37553a345a8/68747470733a2f2f6170702e736f757263656c6576656c2e696f2f6769746875622f70726573742f2d2f70726573742e737667" alt="SourceLevel"&gt;&lt;/a&gt;
&lt;a href="https://formulae.brew.sh/formula/prestd" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e4da1f5bab77e151b27c8b4f007f7b62736fc3543ad221617421813e69a80036/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f64796e616d69632f6a736f6e2e7376673f75726c3d68747470733a2f2f666f726d756c61652e627265772e73682f6170692f666f726d756c612f7072657374642e6a736f6e2671756572793d242e76657273696f6e732e737461626c65266c6162656c3d686f6d6562726577" alt="Homebrew"&gt;&lt;/a&gt;
&lt;a href="http://slack.prestd.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9ea076087533d2cdedd82289802ae95142304642c926171aaab5c3023e55a8c2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736c61636b2d7072657374642d626c756576696f6c65742e7376673f6c6f676f3d736c61636b" alt="Slack"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;p&lt;/em&gt;&lt;strong&gt;REST&lt;/strong&gt; (&lt;strong&gt;P&lt;/strong&gt;&lt;em&gt;ostgreSQL&lt;/em&gt; &lt;strong&gt;REST&lt;/strong&gt;), simplify and accelerate development, instant, realtime, high-performance on any &lt;strong&gt;Postgres&lt;/strong&gt; application, &lt;strong&gt;existing or new&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PostgreSQL version 9.4 or higher&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/prest?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-prest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4a88f9fc2e5a5d033be5d30e566a3b9d55b7c267fe3bc2587182940f146a9966/68747470733a2f2f6170692e70726f6475637468756e742e636f6d2f776964676574732f656d6265642d696d6167652f76312f66656174757265642e7376673f706f73745f69643d333033353036267468656d653d6c69676874" alt="pREST - instant, realtime, high-performance on PostgreSQL | Product Hunt" width="250" height="54"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Problem&lt;/h2&gt;
&lt;p&gt;There is PostgREST written in Haskell, but keeping Haskell software in production is not an easy job. With this need pREST was born. &lt;a href="https://github.com/prest/prest/issues/41"&gt;Read more&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Test using Docker&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;To simplify the process of bringing up the test environment we will use &lt;strong&gt;docker-compose&lt;/strong&gt;, assuming you do not have the repository cloned locally, we are assuming you are reading this page for the first time&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Download docker compose file&lt;/span&gt;
wget https://raw.githubusercontent.com/prest/prest/main/docker-compose-prod.yml -O docker-compose.yml
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Up (run) PostgreSQL and prestd&lt;/span&gt;
docker-compose up
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Run data migration to create user structure for access (JWT)&lt;/span&gt;
docker-compose &lt;span class="pl-c1"&gt;exec&lt;/span&gt; prest prestd migrate up auth

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Create user and password for API access (via JWT)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;# user: prest&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;# pass: prest&lt;/span&gt;
docker-compose &lt;span class="pl-c1"&gt;exec&lt;/span&gt; postgres psql&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/prest/prest"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/prest"&gt;https://www.producthunt.com/posts/prest&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>opensource</category>
      <category>postgres</category>
      <category>graphql</category>
    </item>
    <item>
      <title>The GITHUB_TOKEN in GitHub Actions: How it Works, Change Permissions, Customizations</title>
      <author>Davide 'CoderDave' Benvegnù</author>
      <pubDate>Fri, 09 Jul 2021 00:08:01 +0000</pubDate>
      <link>https://dev.to/github/the-githubtoken-in-github-actions-how-it-works-change-permissions-customizations-3cgp</link>
      <guid>https://dev.to/github/the-githubtoken-in-github-actions-how-it-works-change-permissions-customizations-3cgp</guid>
      <description>&lt;p&gt;Today I'm gonna tell you everything about the &lt;strong&gt;GITHUB_TOKEN&lt;/strong&gt; in GitHub Actions. You will learn what it is, &lt;strong&gt;how it works&lt;/strong&gt;, how to &lt;strong&gt;customize&lt;/strong&gt; its behavior, and how to limit or &lt;strong&gt;change its permissions&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video"&gt;
  &lt;/a&gt;
  Video
&lt;/h3&gt;

&lt;p&gt;As usual, if you are a &lt;strong&gt;visual learner&lt;/strong&gt;, or simply prefer to watch and listen instead of reading, here you have &lt;strong&gt;the video with the whole explanation and demo&lt;/strong&gt;, which to be fair is much &lt;strong&gt;&lt;em&gt;more complete&lt;/em&gt;&lt;/strong&gt; than this post.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/jEK07KPEjnY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/jEK07KPEjnY"&gt;Link to the video: https://youtu.be/jEK07KPEjnY&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you rather prefer reading, well... let's just continue :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-githubtoken"&gt;
  &lt;/a&gt;
  What is GITHUB_TOKEN
&lt;/h3&gt;

&lt;p&gt;Let's start with what the GITHUB_TOKEN is in GitHub Actions and how it works.&lt;/p&gt;

&lt;p&gt;The GITHUB_TOKEN is a &lt;strong&gt;special access token&lt;/strong&gt; that you can use to authenticate on behalf of GitHub Actions. GitHub &lt;strong&gt;automatically creates&lt;/strong&gt; a GITHUB_TOKEN secret for you to use in your workflow, and you can use it to authenticate in a workflow run.&lt;/p&gt;

&lt;p&gt;The way this works is that when you enable GitHub Actions in a repository, &lt;strong&gt;GitHub installs a GitHub App&lt;/strong&gt; on that. The GITHUB_TOKEN secret is basically a GitHub App installation access token.&lt;/p&gt;

&lt;p&gt;Before each job begins, GitHub fetches an installation access token for the job from that GitHub App. Since the App has access to a single repo, the &lt;strong&gt;token's permissions are limited to the repository&lt;/strong&gt; that contains your workflow. And to make it even more secure, the token expires when the job is finished.&lt;/p&gt;

&lt;p&gt;Hope the mechanism is now clearer. Let's quickly see how to use a GITHUB_TOKEN&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-github-token"&gt;
  &lt;/a&gt;
  Use GitHub Token
&lt;/h3&gt;

&lt;p&gt;There are 2 ways to use the token: from &lt;em&gt;secrets&lt;/em&gt; and from the &lt;em&gt;context&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/labeler@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;repo-token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this first example we use the &lt;code&gt;secrets.GITHUB_TOKEN&lt;/code&gt; to consume it. As mentioned, the secret is automatically generated so you can just use it straight away.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Create a Release&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;create_release&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/create-release@v1&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ github.token }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here instead we use the GitHub context, which contains the token. Note that the two are equivalent.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#personal-access-token-vs-githubtoken"&gt;
  &lt;/a&gt;
  Personal Access Token vs GITHUB_TOKEN
&lt;/h3&gt;

&lt;p&gt;If you are thinking _"why should I use the GITHUB_TOKEN instead of my normal PAT?", remember that a Personal Access Token is always available, so if someone is able to steal that PAT they can potentially do some harm.&lt;/p&gt;

&lt;p&gt;The GITHUB_TOKEN instead expires just right after the job is over. So even if someone is able to steal it (which is &lt;em&gt;almost impossible&lt;/em&gt;), they basically can't do anything wrong.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#default-permissions"&gt;
  &lt;/a&gt;
  Default Permissions
&lt;/h3&gt;

&lt;p&gt;By Default, the GITHUB_TOKEN has a quite comprehensive list of permissions assigned to it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fsp3l_vg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dhcu0oezj5gcrqbqh0ch.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fsp3l_vg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dhcu0oezj5gcrqbqh0ch.png" alt="Permissions Table"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This table shows the permissions granted to the GITHUB_TOKEN by default. Good thing is that people with admin permissions to an enterprise, organization, or repository can set the default &lt;strong&gt;permissions to be either permissive or restricted&lt;/strong&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-permissions-ui"&gt;
  &lt;/a&gt;
  The Permissions UI
&lt;/h3&gt;

&lt;p&gt;So, let's see how we can &lt;strong&gt;&lt;em&gt;change the permissions&lt;/em&gt;&lt;/strong&gt; of the GITHUB_TOKEN to make it even more secure.&lt;/p&gt;

&lt;p&gt;Just go to your repository or organization &lt;strong&gt;&lt;em&gt;Settings&lt;/em&gt;&lt;/strong&gt;, then click on &lt;strong&gt;&lt;em&gt;Actions&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JQxb0Ja---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/omcns15otneci0mmzmrj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JQxb0Ja---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/omcns15otneci0mmzmrj.png" alt="Permissions UI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In here you can change the permissions assigned to your token by choosing &lt;code&gt;Read and Write&lt;/code&gt; (which allows you to access the content and make changes) or &lt;code&gt;Read-only&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That is super quick to do, but on the other hand pretty limited. What if I want to assign permissions in a more granular way?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#granular-permissions-via-yaml"&gt;
  &lt;/a&gt;
  Granular permissions via YAML
&lt;/h3&gt;

&lt;p&gt;You can use the &lt;code&gt;permissions&lt;/code&gt; key in the &lt;strong&gt;YAML workflow&lt;/strong&gt; file to modify permissions for the GITHUB_TOKEN for an entire workflow or for individual jobs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;permissions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;contents&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;write&lt;/span&gt;
  &lt;span class="na"&gt;pull-requests&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;write&lt;/span&gt; 
  &lt;span class="na"&gt;issues&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;read&lt;/span&gt;
  &lt;span class="na"&gt;packages&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;none&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you can use all the permissions that are listed in the table above. Additionally, as you can see below, it supports &lt;em&gt;intellisense&lt;/em&gt; if you do it in the GitHub interface directly:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jqdKz8ZT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29trk400g443p1j2qeyn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jqdKz8ZT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29trk400g443p1j2qeyn.png" alt="Intellisense"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When the permissions key is used, all unspecified permissions are set to no access, with the exception of the metadata scope, which always gets read access.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can personalize the token permissions either at Job level, or at whole workflow level (or actually both):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;...&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;span class="na"&gt;permissions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;contents&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;write&lt;/span&gt;
  &lt;span class="na"&gt;pull-requests&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;write&lt;/span&gt;  

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;job1&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;...&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

  &lt;span class="na"&gt;job2&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;   
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;  
    &lt;span class="na"&gt;permissions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;issues&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;write&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;...&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h3&gt;

&lt;p&gt;Hope you have now a better understanding about the GITHUB_TOKEN, what it does and how we can set its permissions properly. Let me know in the comment section below if you have any other questions about it.&lt;/p&gt;

&lt;p&gt;Also, check out &lt;a href="https://youtu.be/SzrETQdGzBM"&gt;this video&lt;/a&gt; where I talk about creating Personal Access Tokens in GitHub.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Like, share and follow me&lt;/strong&gt; 🚀 for more content:&lt;/p&gt;

&lt;p&gt;📽 &lt;a href="https://www.youtube.com/CoderDave"&gt;YouTube&lt;/a&gt;&lt;br&gt;
☕ &lt;a href="https://buymeacoffee.com/CoderDave"&gt;Buy me a coffee&lt;/a&gt;&lt;br&gt;
💖 &lt;a href="https://patreon.com/CoderDave"&gt;Patreon&lt;/a&gt;&lt;br&gt;
🌐 &lt;a href="https://coderdave.io"&gt;CoderDave.io Website&lt;/a&gt;&lt;br&gt;
👕 &lt;a href="https://geni.us/cdmerch"&gt;Merch&lt;/a&gt;&lt;br&gt;
👦🏻 &lt;a href="https://www.facebook.com/CoderDaveYT"&gt;Facebook page&lt;/a&gt;&lt;br&gt;
🐱‍💻 &lt;a href="https://github.com/n3wt0n"&gt;GitHub&lt;/a&gt;&lt;br&gt;
👲🏻 &lt;a href="https://www.twitter.com/davide.benvegnu"&gt;Twitter&lt;/a&gt;&lt;br&gt;
👴🏻 &lt;a href="https://www.linkedin.com/in/davidebenvegnu/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
🔉 &lt;a href="https://geni.us/cdpodcast"&gt;Podcast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/CoderDave"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/jEK07KPEjnY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>devops</category>
      <category>github</category>
      <category>cicd</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Representation of Graph</title>
      <author>Aya Bouchiha</author>
      <pubDate>Thu, 08 Jul 2021 23:38:38 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/representation-of-graph-5a96</link>
      <guid>https://dev.to/ayabouchiha/representation-of-graph-5a96</guid>
      <description>&lt;p&gt;Hello, in this post we'll discuss the &lt;strong&gt;representations&lt;/strong&gt; of a graph, their &lt;strong&gt;characteristics&lt;/strong&gt;, &lt;strong&gt;space complexity&lt;/strong&gt;, and also their &lt;strong&gt;implementation&lt;/strong&gt; in python.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#representation-of-graph"&gt;
  &lt;/a&gt;
  Representation of Graph
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-adjacency-matrix"&gt;
  &lt;/a&gt;
  1. Adjacency matrix
&lt;/h3&gt;

&lt;p&gt;in this type of representation, we use 2-dimensional arrays to represent the graph where the number of columns and rows is the total number of vertices. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;if &lt;code&gt;A[i][j] = 1&lt;/code&gt;  that means &lt;strong&gt;i&lt;/strong&gt; and &lt;strong&gt;j&lt;/strong&gt; are adjacent. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#characteristics-of-using-adjacency-matrix"&gt;
  &lt;/a&gt;
  characteristics of using adjacency matrix
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Fast to lookup and check for presence or absence of a specific edge between any two nodes &lt;strong&gt;O(1)&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Fast to add a new edge &lt;strong&gt;O(1)&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Slow to iterate over all edges&lt;/li&gt;
&lt;li&gt;Slow to add or delete a node O(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#space-complexity-of-adjacency-matrix"&gt;
  &lt;/a&gt;
  Space complexity of adjacency matrix
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The space complexity of adjacency matrix is O(&lt;strong&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#example-of-the-adjacency-matrix"&gt;
  &lt;/a&gt;
  Example of the adjacency matrix
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qDKaB3Pq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wgla0mgf14vb1tpn89hl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qDKaB3Pq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wgla0mgf14vb1tpn89hl.jpg" alt="Adjacency matrix graph data structure Aya Bouchiha"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implementation-of-adjacency-matrix-in-python"&gt;
  &lt;/a&gt;
  Implementation Of Adjacency matrix in python
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.programiz.com/dsa/graph-adjacency-matrix"&gt;for more details&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Graph&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;matrixSize&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# fill the matrix with 0.
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;adjacencyMatrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matrixSize&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;adjacencyMatrix&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matrixSize&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;matrixSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrixSize&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;addEdge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;adjacencyMatrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;node1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;node2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;adjacencyMatrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;node2&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;node1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;deleteEdge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# if there is an edge between the two giving nodes
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;adjacencyMatrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;node1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;node2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;adjacencyMatrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;node1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;node2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;adjacencyMatrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;node2&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;node1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-adjacency-list"&gt;
  &lt;/a&gt;
  2. Adjacency List
&lt;/h3&gt;

&lt;p&gt;The adjacency list is represented as an array of linked lists, where each index of the array represents a node and each node represents its adjacents nodes using a &lt;a href="https://dev.to/ayabouchiha/linked-list-data-structure-4g7k"&gt;linked list&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#characteristics-of-adjacency-list"&gt;
  &lt;/a&gt;
  characteristics of adjacency list
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Memory usage depends on the number of edges (not the number of nodes) which might save a lot of memory&lt;/li&gt;
&lt;li&gt;slower than matrix for checking the presence or the absence of an edges&lt;/li&gt;
&lt;li&gt;Fast to iterate over all edges&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#space-of-complexity-of-adjacency-list"&gt;
  &lt;/a&gt;
  Space of complexity of adjacency list
&lt;/h3&gt;

&lt;p&gt;The space complexity of the adjacency list is &lt;strong&gt;O(|V|+|E|)&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-of-adjacency-list"&gt;
  &lt;/a&gt;
  Example of adjacency list
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FTaoHkp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lrz08zywe2jqdjbcg1e2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FTaoHkp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lrz08zywe2jqdjbcg1e2.jpg" alt="Adjacency list graph data structure Aya Bouchiha"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implementation-of-adjacency-list"&gt;
  &lt;/a&gt;
  Implementation of adjacency list
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/graph-and-its-representations/"&gt;for more details&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AdjNode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vertex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;


&lt;span class="c1"&gt;# A class to represent a graph. A graph
# is the list of the adjacency lists.
# Size of the array will be the no. of the
# vertices "V"
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Graph&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vertices&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vertices&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;graph&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;

    &lt;span class="c1"&gt;# Function to add an edge in an undirected graph
&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_edge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# Adding the node to the source node
&lt;/span&gt;        &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AdjNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;

        &lt;span class="c1"&gt;# Adding the source node to the destination as
&lt;/span&gt;        &lt;span class="c1"&gt;# it is the undirected graph
&lt;/span&gt;        &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AdjNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;

    &lt;span class="c1"&gt;# Function to print the graph
&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;print_graph&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Adjacency list of vertex {}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt; head"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;" -&amp;gt; {}"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vertex&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;" &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#references-and-useful-resources"&gt;
  &lt;/a&gt;
  References and useful resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/graph-data-structure-and-algorithms/"&gt;https://www.geeksforgeeks.org/graph-data-structure-and-algorithms/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.educative.io/edpresso/how-to-implement-a-graph-in-python"&gt;https://www.educative.io/edpresso/how-to-implement-a-graph-in-python&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=5hPfm_uqXmw"&gt;https://www.youtube.com/watch?v=5hPfm_uqXmw&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://pythonandr.com/tag/adjacency-matrix/"&gt;https://pythonandr.com/tag/adjacency-matrix/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.programiz.com/dsa/graph-adjacency-list"&gt;https://www.programiz.com/dsa/graph-adjacency-list&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/KGrZb5pJWUw"&gt;https://youtu.be/KGrZb5pJWUw&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title>What is a Higher Order Component?</title>
      <author>Leo Cuéllar</author>
      <pubDate>Thu, 08 Jul 2021 22:57:45 +0000</pubDate>
      <link>https://dev.to/devcore/what-is-a-higher-order-component-hhe</link>
      <guid>https://dev.to/devcore/what-is-a-higher-order-component-hhe</guid>
      <description>&lt;h2&gt;
  &lt;a href="#quick-summary"&gt;
  &lt;/a&gt;
  Quick summary
&lt;/h2&gt;

&lt;p&gt;In this tutorial we will talk about Higher-Order Components (HOC), a widely used react concept and a topic that is commonly discussed in front-end developer interviews. We will discuss what they are and how to write them.&lt;/p&gt;

&lt;p&gt;You may have heard about the don’t-repeat-yourself (DRY) programming principle, where we look to reduce the amount of duplicate logic on our applications.&lt;/p&gt;

&lt;p&gt;Well, this principle has evolved as a pattern that you can see on higher-order functions on JavaScript, or as Higher-Order Components in React.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#higherorder-functions"&gt;
  &lt;/a&gt;
  Higher-Order Functions
&lt;/h2&gt;

&lt;p&gt;Let’s first understand what are higher-order functions, since I think you may have been using them a lot without knowing their higher-order nature.&lt;/p&gt;

&lt;p&gt;A higher-order function is a function that takes a function as a parameter, returns another function, or both.&lt;/p&gt;

&lt;p&gt;Let’s take the &lt;code&gt;map()&lt;/code&gt; array method as an example. This method takes a function as a parameter which means that it is a higher-order function, but how are we recycling logic with this method? well, the &lt;code&gt;map()&lt;/code&gt; method does the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;iterates over every element of an array&lt;/li&gt;
&lt;li&gt;applies the passed function to every element&lt;/li&gt;
&lt;li&gt;the returned values will be added to a new array&lt;/li&gt;
&lt;li&gt;returns the resulting array&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Look at this example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mappedArr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mappedArr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;//[2, 4, 6]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So as you can see, we are recycling that logic over and over again, every time we call the &lt;code&gt;map()&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;Let’s see another example, this time building a higher-order function that returns another function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;num2&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;addFive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// addFive = (num2) =&amp;gt; 5 + num2&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;addFive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// 5 + 12 = 17&lt;/span&gt;
&lt;span class="c1"&gt;// 17&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see in the last example our ‘add’ function serves the purpose of building ‘adder’ functions. You pass a number as a parameter and it will return a function that adds that number to any other number.&lt;/p&gt;

&lt;p&gt;Passing 5 as a parameter will return this function &lt;code&gt;(num2) =&amp;gt; 5 + num2&lt;/code&gt; so we basically used our higher-order function to build another function that adds 5 to any number.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#higherorder-components"&gt;
  &lt;/a&gt;
  Higher-order components
&lt;/h2&gt;

&lt;p&gt;Now that you better understand the concept, let's define a higher-order component. A HOC is a component that takes one or more components as props and returns new components.&lt;/p&gt;

&lt;p&gt;It’s important to mention that HOC’s don’t modify the components passed, they just return new components.&lt;/p&gt;

&lt;p&gt;Let’s see a very basic implementation of a HOC:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;withComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;someComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;Hi&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sameComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;withComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;someComponent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see we are passing a component to our HOC and then returning it again. In reality, you would implement some logic, pass some props, style it, etc…&lt;/p&gt;

&lt;p&gt;Let's see another example:&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/naughty-http-2mlo9"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this example you can see how I created a simple component that return some text. Then I created a HOC that accepts any component and then returns it inside a span tag that has some style. Im sharing this with you through codesandbox so you can see the result. Try and experiment with it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;Hope this gave you at least a basic understanding of HOC’s and how to write them. It’s a widely used concept in React that you will encounter in a lot of libraries such as Redux, for example.&lt;/p&gt;




&lt;p&gt;This article was first published on &lt;a href="https://devcore.io/en/react/what-is-a-higher-order-component/"&gt;devcore.io&lt;/a&gt;. go check it out!&lt;/p&gt;

</description>
      <category>react</category>
      <category>hoc</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>An introduction to cryptography in distributed ledger technology</title>
      <author>Waylon Jepsen</author>
      <pubDate>Thu, 08 Jul 2021 22:49:55 +0000</pubDate>
      <link>https://dev.to/0xjepsen/an-introduction-to-cryptography-in-distributed-ledger-technology-268l</link>
      <guid>https://dev.to/0xjepsen/an-introduction-to-cryptography-in-distributed-ledger-technology-268l</guid>
      <description>&lt;p&gt;Cryptography is the backbone of distributed ledger technologies like blockchain and other consensus-oriented distributed networks. If you are interested in building decentralized applications, it's essential to understand the wallet generation and transaction signing processes. Both of which rely heavily on underlying cryptographic protocols.&lt;/p&gt;

&lt;p&gt;In addition to distributed networks, cryptography is a critical component of cybersecurity. With cybercrime on the rise and cyberattacks costing businesses an average of 2.3 Million dollars per malware attack &lt;a href="https://www.accenture.com/t20190305T185301Z__w__/us-en/_acnmedia/PDF-96/Accenture-2019-Cost-of-Cybercrime-Study-Final.pdf#zoom=50"&gt;source&lt;/a&gt;, it is increasingly important to have your cybersecurity up to par. With the proper use of cryptography, you could save your business big time by ensuring the confidentiality of sensitive information. &lt;/p&gt;

&lt;p&gt;Modern cryptography is mathematically robust and plays a critical role in securing sensitive information like your bank account numbers and social security number. While the mathematics may be complex, the concepts are graspable without a complete understanding of the encryption algorithms.&lt;/p&gt;

&lt;p&gt;One of the key components of cryptography is ciphers. Ciphers are algorithms used to conceal (encrypt) and decrypt information. The encrypted information is called ciphertext, while decrypted information is called plaintext. There are two types of ciphers, symmetric ciphers, and asymmetric ciphers. We will go into the difference and some examples throughout this article.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-earliest-known-cipher-caesars-cipher"&gt;
  &lt;/a&gt;
  The Earliest Known Cipher: Caesar’s Cipher
&lt;/h3&gt;

&lt;p&gt;One of the earliest known ciphers is the Caesar Cipher or shift cipher. Caesars cipher is a symmetric cipher, meaning the same key used to encrypt information is used to decrypt it. The cipher works by mapping the current character of the plaintext to a character of a predetermined distance (the key) adjacent in the alphabet. For example, if the key is a right rotation by three, then 'A' gets mapped to 'D.' The whole keymap has been constructed below for your convenience.  The plain-text, "CIRCERO," would be enciphered as "FLUFHUR."&lt;/p&gt;

&lt;p&gt;Plaintext: ABCDEFGHIJKLMNOPQRSTUVWXYZ&lt;/p&gt;

&lt;p&gt;Ciphertext: DEFGHIJKLMNOPQRSTUVWXYZABC&lt;/p&gt;

&lt;p&gt;Notice the wraparound of the alphabet is modeled by modulus arithmetic. We can mathematically represent an encryption function and a corresponding decryption function En=(x + n) mod 26 and a corresponding decryption function Dn= (x - n)mod 26. &lt;a href="https://github.com/CrypTools/CaesarCipher"&gt;Here&lt;/a&gt; is an excellent repository of the implementation of this algorithm in several different languages. Below is an example constructed in JavaScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const caesarCipher = (str, amount = 0) =&amp;gt; {
    if (amount &amp;lt; 0) {
        return caesarCipher(str, amount + 26);
    }
    let output = '';
    for (let i = 0; i &amp;lt; str.length; i++) {
        let char = str[i];
            if (char.match(/[a-z]/i)) {
                let code = str.charCodeAt(i);
                    if (code &amp;gt;= 65 &amp;amp;&amp;amp; code &amp;lt;= 90) {
                       char = String.fromCharCode(((code - 65 + amount) % 26) + 65);
                    } else if (code &amp;gt;= 97 &amp;amp;&amp;amp; code &amp;lt;= 122) {
            char = String.fromCharCode(((code - 97 + amount) % 26) + 97);
                }
            }
        output += char;
    }
  return output;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For some time, transposition ciphers like the shift cipher provided adequate protection of sensitive information. However, enumerating over 26 possible keys isn't very hard, and the cipher is easily broken.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ciphers-in-blockchain-wallets"&gt;
  &lt;/a&gt;
  Ciphers in Blockchain Wallets
&lt;/h3&gt;

&lt;p&gt;The ciphers used today that make Distributed ledgers like blockchain possible are known as asymmetric ciphers. Asymmetric ciphers use a different key to encrypt information than they do to decrypt information. These keys are known as the public and private key pair. They contrast symmetric cryptography, where the same Key used to encrypt information also decrypts information. &lt;/p&gt;

&lt;p&gt;If you've poked around the distributed ledger space, chances are you've generated a wallet consisting of a private Key, to keep secret and your Public Key, which acts as your wallet's address. We will go over how crypto wallets use asymmetric cryptography.&lt;/p&gt;

&lt;p&gt;Before asymmetric cryptography, it was a big challenge to share keys with people over long distances. To share private information over a secure communication channel, you and the receiving party need to share a key. You can see this chicken or the egg problem forming. How do you securely share the key? Asymmetric ciphers addressed this issue.&lt;/p&gt;

&lt;p&gt;Asymmetric cryptography works as follows. Say Allice and Bob want to send a secret message without an eavesdropper, Eve, to read the message. Alice and Bob each have a public key (viewable by anyone) and a private key (only known by the owner of the corresponding private key). Alice encrypts her message with Bob's Public Key so that the only key that can decrypt the information is Bob's Private Key. Alice sends the message to Bob. Even if Eve can intercept the message, she cannot read its contents without Bob's Private Key. Bob can then decrypt the message with his private key and read the secret message from Alice. &lt;/p&gt;

&lt;p&gt;So how do crypto wallets leverage this technology? When you are authorizing transactions, you want to prove that you are the owner of the private key corresponding to funds in the wallet.  This is done using a Digital Signature Algorithm.&lt;br&gt;
When a user authorizes a transaction, they prove that the user is the owner of the private key corresponding to the public key’s funds. Because of the mathematical relationship between the public and private keys, users can sign a transaction with their private key, creating a digital signature. A digital signature reveals no information about the private key but can be verified with the corresponding public key. Thus proof can be constructed.&lt;/p&gt;

&lt;p&gt;The currently best performing asymmetric encryption algorithm is the Elliptic Curve, providing fast, secure encryption with a smaller key than RSA.&lt;/p&gt;

&lt;p&gt;For readers interested in the mathematics of RSA or the Elliptic Curve, the following resources are excellent learning tools.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hackernoon.com/what-is-the-math-behind-elliptic-curve-cryptography-f61b25253da3"&gt;Elliptic Curve&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.di-mgt.com.au/rsa_alg.html"&gt;RSA&lt;/a&gt; (Rivest, Shamir, Adleman)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Digital_Signature_Algorithm"&gt;DSA&lt;/a&gt; (Digital Signature Algorithm) &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm"&gt;ECDSA&lt;/a&gt; (Elliptic Curve Digital Signing Algorithm)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Resources on the implementation and available cryptography libraries are presented below. These are all open source and generally respected and implemented for various purposes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://cryptojs.gitbook.io/docs/#ciphers"&gt;Crypto-js&lt;/a&gt; Is a great JavaScript library to explore additional ciphers&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/elliptic"&gt;elliptic&lt;/a&gt; is a JavaScript library for elliptic curve encryption including digital signature algorithms.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cryptography.io/en/latest/hazmat/primitives/asymmetric/ec/"&gt;Cryptography&lt;/a&gt; is an expansive python library with access to digital signature algorithms and the most commonly used ciphers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.openssl.org/docs/manmaster/man1/ciphers.html"&gt;OpenSSL&lt;/a&gt; is commonly used by system administrators to generate TSL certificates and perform a variety of cryptographic functions.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/randombit/botan"&gt;Botan&lt;/a&gt; is a crypto library for C++.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.bouncycastle.org/java.html"&gt;Bouncy Castle&lt;/a&gt; has a Java and C# library and is a provider for the Java Cryptography Extension (JCE).&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>security</category>
      <category>cryptography</category>
      <category>distributedsystems</category>
      <category>blockchain</category>
    </item>
    <item>
      <title>How I created a Photo Booth with AWS Serverless</title>
      <author>Pubudu Jayawardana</author>
      <pubDate>Thu, 08 Jul 2021 22:29:36 +0000</pubDate>
      <link>https://dev.to/aws-builders/how-i-created-a-photo-booth-with-aws-serverless-3h2k</link>
      <guid>https://dev.to/aws-builders/how-i-created-a-photo-booth-with-aws-serverless-3h2k</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;This is how I built a photo booth application with AWS Serverless services.&lt;/p&gt;

&lt;p&gt;Once user capture an image and provide an email, background of the image is removed and new background applied and watermark with timestamp will be added. Then the image will be emailed to the given email address.&lt;/p&gt;

&lt;p&gt;Below tools and technologies are used to built this.&lt;/p&gt;

&lt;p&gt;Backend:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS Lambda with runtime Node.js&lt;/li&gt;
&lt;li&gt;Step Function&lt;/li&gt;
&lt;li&gt;S3&lt;/li&gt;
&lt;li&gt;SES&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.remove.bg/api"&gt;remove.bg API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Frontend:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://vuejs.org/"&gt;VueJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/vue-web-cam"&gt;vue-web-cam plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hosted on &lt;a href="https://aws.amazon.com/amplify/hosting"&gt;Amplify web hosting&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;IAC:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.serverless.com/"&gt;Serverless Framework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#architecture"&gt;
  &lt;/a&gt;
  Architecture
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F8ck5eBw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07pwh3dzxz8lfhpyx9py.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F8ck5eBw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07pwh3dzxz8lfhpyx9py.png" alt="Serverless PhotoBooth Architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How It Works
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;In the frontend VueJS app (hosted in Amplify), first a image will be captured with the email address. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then the app will request for pre-signed url.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Captured image will be uploaded to S3 with the pre-signed url and the email address as a meta data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Once the image is uploaded, Init lambda function will be triggered to initialise step function execution.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Within the Step Function execution, first the background of the image will be removed. For this, I use remove.bg external service.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then, a new background will be applied to the image. This background must be in the 'backgrounds' path of the S3 bucket.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As the next step, watermark will be added with the timestamp.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally, the image will be sent to the given email address using AWS Simple Email Service (SES).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--338bPFCp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oensram3ngm5h4lv24ja.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--338bPFCp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oensram3ngm5h4lv24ja.png" alt="Steps"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-set-up"&gt;
  &lt;/a&gt;
  How to set up
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;AWS cli&lt;/li&gt;
&lt;li&gt;Serverless Framework cli&lt;/li&gt;
&lt;li&gt;yarn &amp;amp; jq installed&lt;/li&gt;
&lt;li&gt;Create a free account at &lt;a href="https://www.remove.bg/api"&gt;remove.bg&lt;/a&gt; and generate a API token.&lt;/li&gt;
&lt;li&gt;Set up and verified SES send email address&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#deployment"&gt;
  &lt;/a&gt;
  Deployment
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Clone the repository: &lt;a href="https://github.com/pubudusj/photo-booth"&gt;https://github.com/pubudusj/photo-booth&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; and fill in with the appropriate values.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;make install &amp;amp;&amp;amp; make deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create the backend stack and make the frontend deployment bundle ready.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#frontend"&gt;
  &lt;/a&gt;
  Frontend
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Once step 3 above is finished, you can deploy the frontend code in &lt;code&gt;frontend/dist/frontend.zip&lt;/code&gt; easily with Amplify web hosting. Of course if you use amplify, you can configure your own custom domain quite easily as well.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you need to run the frontend in local, navigate to frontend directory and run &lt;code&gt;yarn run serve&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#to-delete-the-stack"&gt;
  &lt;/a&gt;
  To Delete the stack
&lt;/h4&gt;

&lt;p&gt;To remove the backend, run &lt;code&gt;make down&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;** Make sure the s3 directory created in the stack is empty before run this command.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;You may check the live demo at &lt;a href="https://photobooth.pubudu.dev"&gt;https://photobooth.pubudu.dev&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-pointslessons-learnt"&gt;
  &lt;/a&gt;
  Key points/Lessons learnt
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Here I used remove.bg external tool to remove background, because it doesn't need for example green background to extract the foreground objects. I don't have any affiliation with this service and there are lot of other alternatives as well. Please select any service you prefer and you will need to modify the &lt;code&gt;removeBackground&lt;/code&gt; lambda accordingly.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I have used Step Functions general workflows here, but using express workflow also a good option.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I have NOT implemented any error handling in this project since this is just a POC, but in general, you need to address failure scenarios. Refer error handling with Step Functions &lt;a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-error-handling.html"&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This is the first time I used &lt;a href="https://www.npmjs.com/package/serverless-plugin-optimize"&gt;Serverless Optimize Plugin&lt;/a&gt; and surprised how easy it is to bundle the packages only relevant to each lambda functions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As the email service, I have used AWS's own Simple Email Service (SES). However, you need to first verify your sending email address in order to send emails to any address. This can be done with a support request. Optionally you can use any other email service provider and you have to modify the &lt;code&gt;sendEmail&lt;/code&gt; lambda accordingly.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In this project, I don't use any database to record the data that goes through the system. I use s3 object meta data to record the email address entered by user to send out the email. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;vue-web-cam is simply awesome plugin for VueJS to get camera input into your application. You have option to select the preferred video source if you have multiple.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#feedback"&gt;
  &lt;/a&gt;
  Feedback
&lt;/h2&gt;

&lt;p&gt;Your valuable feedback on this project is mostly welcome! I would like you to play around with this and if you have any questions or general comments, please reach out to me via &lt;a href="https://www.linkedin.com/in/pubudusj/"&gt;LinkedIn&lt;/a&gt;, &lt;a href="https://twitter.com/pubudusj"&gt;Twitter&lt;/a&gt; or &lt;a href="https://github.com/pubudusj"&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Keep building, keep sharing!&lt;/p&gt;

&lt;p&gt;** &lt;em&gt;Cover Photo by &lt;a href="https://unsplash.com/@grievek1610begur?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Kevin Grieve&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/photo-booth?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>showdev</category>
      <category>serverless</category>
    </item>
    <item>
      <title>Effective Remote Team Stand-Up Meetings</title>
      <author>Status Hero Editorial Staff</author>
      <pubDate>Thu, 08 Jul 2021 22:13:15 +0000</pubDate>
      <link>https://dev.to/statushero/effective-remote-team-stand-up-meetings-1ond</link>
      <guid>https://dev.to/statushero/effective-remote-team-stand-up-meetings-1ond</guid>
      <description>&lt;p&gt;To run an effective stand-up meeting with a remote team, follow these simple steps to focus your team’s attention, keep the meeting moving, and provide the most value for everyone involved:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use a standard set of Q and As&lt;/li&gt;
&lt;li&gt;Keep it short&lt;/li&gt;
&lt;li&gt;Have a solid A/V setup&lt;/li&gt;
&lt;li&gt;Make sure everyone participates&lt;/li&gt;
&lt;li&gt;Share updates&lt;/li&gt;
&lt;li&gt;Account for time zone differences&lt;/li&gt;
&lt;li&gt;Don’t have one!&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#use-a-standard-set-of-q-and-as"&gt;
  &lt;/a&gt;
  Use a standard set of Q and As
&lt;/h3&gt;

&lt;p&gt;Regardless of whether your team is remote/distributed or co-located, the best stand-up, or scrum, meetings consist of team members answering a standard set of questions and answers. Consistent questions help people prepare as they know in advance what information they’re expected to share.&lt;/p&gt;

&lt;p&gt;This helps keep the stand-up both efficient and short (more on that later). We think the traditional scrum questions are very effective, but you can adjust the questions to fit your specific needs:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-did-i-do-yesterday"&gt;
  &lt;/a&gt;
  &lt;em&gt;What did I do yesterday?&lt;/em&gt;
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;This one should be easy. Team members share what they accomplished yesterday. Updates should focus on deliverables, allowing the entire team to understand what work has been done.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#what-are-my-goals-for-today"&gt;
  &lt;/a&gt;
  &lt;em&gt;What are my goals for today?&lt;/em&gt;
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Team members should say what they are planning to work on for the day. This question helps the whole team understand what’s left to do.&lt;/li&gt;
&lt;li&gt;As far as goal setting goes, people who make stuff--like programmers, writers, and designers--are generally limited to working on one or two intellectual tasks per day. That’s it. (Tasks are any exercise that requires mental setup, then translating from an abstracted notion to an executed concept.)&lt;/li&gt;
&lt;li&gt;So if you’re someone who makes stuff and sharing a list of 10 goals with your team each day, either your goals are too small or you are not focused on meaningful tasks.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#is-there-anything-blocking-me"&gt;
  &lt;/a&gt;
  &lt;em&gt;Is there anything blocking me?&lt;/em&gt;
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;This one is perhaps the most critical. If something is blocking progress on your team, you need to know. Team members should share anything that is in their way, as unresolved blockers can be extremely harmful to your team velocity and overall project or product success.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#keep-it-short"&gt;
  &lt;/a&gt;
  Keep it short
&lt;/h3&gt;

&lt;p&gt;A stand-up meeting, whether in-person or online/virtual, shouldn’t be longer than 15 minutes. If it runs longer than that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;your team is not well prepared,&lt;/li&gt;
&lt;li&gt;their updates are not clear, or&lt;/li&gt;
&lt;li&gt;you are discussing items in too much depth&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It could also be that your team is just too large.&lt;/p&gt;

&lt;p&gt;Once your meetings start going beyond 15 minutes, take a closer look at the root cause and address it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#have-a-solid-av-setup"&gt;
  &lt;/a&gt;
  Have a solid A/V setup
&lt;/h3&gt;

&lt;p&gt;For remote teams, a solid A/V setup is absolutely critical for an effective stand-up meeting. If you can’t hear or understand your teammates, how will you know what they’re working on? Whether you use Google Hangouts, GoToMeeting, or video capabilities built into HipChat and Slack, make sure that it works for all team members and everyone can hear and see one another. Otherwise your stand-up meetings will be spent troubleshooting, wasting everyone’s time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-sure-everyone-participates"&gt;
  &lt;/a&gt;
  Make sure everyone participates
&lt;/h3&gt;

&lt;p&gt;Ultimately, the success of any stand-up meeting depends on team participation. If you can’t get people to engage, most of the value is lost.&lt;/p&gt;

&lt;p&gt;The entire purpose of stand-up meetings is to hear from and communicate to all members of the team. For software teams, this would include developers, designers, QE, and product managers.&lt;/p&gt;

&lt;p&gt;If participation from your team is lacking, try to understand why. Are time zone challenges the problem? Or meeting conflicts? Maybe schedules just don’t line up well.&lt;/p&gt;

&lt;p&gt;If scheduling is the problem, try to adjust meeting times or working hours, or use a tool that allows you to collect updates from the team asynchronously.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#share-updates"&gt;
  &lt;/a&gt;
  Share updates
&lt;/h3&gt;

&lt;p&gt;Make sure that updates discussed at the stand-up meeting are shared with the entire team. People may be out sick, or have missed the meeting due to a conflict, and it’s important they understand what was discussed in order to stay well aligned.&lt;/p&gt;

&lt;p&gt;Traditional stand-up meetings can make sharing updates hard unless someone like the scrum master is taking notes and then distributing them. Even then, it’s easy to miss pieces of information once the meeting gets going. If you’re on a remote or distributed team, A/V issues can get in the way. And it’s not like you can just stop by their desk to chat 1:1.&lt;/p&gt;

&lt;p&gt;If you’re having trouble capturing updates, try using a tool to automatically collect and distribute them to the team, like Status Hero. Having update information at your fingertips is also nice in cases where there are questions about someone’s work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#account-for-time-zone-differences"&gt;
  &lt;/a&gt;
  Account for time zone differences
&lt;/h3&gt;

&lt;p&gt;If your team is remote, there’s a good chance that it spans several time zones. Ideally, the stand-up meeting will be held at an hour when the majority of your team is starting their day. This way, people can get aligned on the highest priority tasks before they start working.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dont-have-one"&gt;
  &lt;/a&gt;
  Don’t have one!
&lt;/h3&gt;

&lt;p&gt;Some folks (especially engineers) will tell you that the best meetings are the ones that don’t happen. Not only do people hate being interrupted, they hate wasting time. And if the stand-up is not run well, people can show up late, unprepared, and not pay attention. This is tough for managers, but if the team isn’t engaged, it just doesn’t work.&lt;/p&gt;

&lt;p&gt;One option is to skip traditional stand-up meetings that require everyone to get together at the same time. Teams with remote members, or distributed across time zones, are great candidates for this approach.&lt;/p&gt;

&lt;p&gt;An app like Status Hero makes it really easy for teammates to share their updates at times that work best for them (and you, of course). Team members dash off an update in a minute or two and get on with their day. Status Hero then sends an overview that compiles everyone's update in an easy-to-read format that lets you comment and tag people for clarification. No meetings necessary.&lt;/p&gt;

&lt;p&gt;So there you have it.  Simple tips to run an effective stand-up meeting with a remote team. &lt;/p&gt;

</description>
      <category>agile</category>
      <category>scrum</category>
      <category>communication</category>
      <category>remote</category>
    </item>
    <item>
      <title>🎬Amazing Hover Effect On Social Media Buttons | HTML &amp; CSS✨</title>
      <author>Robson Muniz</author>
      <pubDate>Thu, 08 Jul 2021 21:44:58 +0000</pubDate>
      <link>https://dev.to/robsonmuniz16/amazing-hover-effect-on-social-media-buttons-html-css-5bd0</link>
      <guid>https://dev.to/robsonmuniz16/amazing-hover-effect-on-social-media-buttons-html-css-5bd0</guid>
      <description>&lt;p&gt;Hey DEVs in today's episode we’re going to create “Amazing Hover Effect On Social Media Buttons | HTML &amp;amp; CSS”. Let’s do it step-by-step, buy the end of this tutorial you will know how to make it on your own.&lt;/p&gt;




&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/E8r3f4HhuPI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;⏱️ Chapters: &lt;br&gt;
00:00 - Intro &lt;br&gt;
00:45 - Create boilerplate &lt;br&gt;
01:58 - Markup &lt;br&gt;
03:09 - CSS&lt;/p&gt;




&lt;p&gt;🧠 Concepts covered in this project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CSS - pseudo-class &lt;/li&gt;
&lt;li&gt;CSS - Positions Absolute &amp;amp; Relative &lt;/li&gt;
&lt;li&gt;CSS - Hover Effects&lt;/li&gt;
&lt;/ul&gt;




</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Star rating system - only 168 BYTES 😲, no JS, no CSS, no images 😨, Accessible (kind of)...the war is over</title>
      <author>InHuOfficial</author>
      <pubDate>Thu, 08 Jul 2021 21:32:45 +0000</pubDate>
      <link>https://dev.to/inhuofficial/star-rating-system-only-168-bytes-no-js-no-css-no-images-accessible-kind-of-the-war-is-over-2pda</link>
      <guid>https://dev.to/inhuofficial/star-rating-system-only-168-bytes-no-js-no-css-no-images-accessible-kind-of-the-war-is-over-2pda</guid>
      <description>&lt;p&gt;What started as an innocent post on &lt;a href="https://dev.to/inhuofficial/5-star-rating-system-actually-accessible-no-js-no-wai-aria-3idl"&gt;creating an accessible star rating system&lt;/a&gt; that was useful and pointed out the problems with most solutions has descended into madness. In this post I end the star (rating) wars!&lt;/p&gt;

&lt;p&gt;People have started creating star rating systems that &lt;a href="https://dev.to/madsstoumann/mood-selector-jhi"&gt;don't use stars&lt;/a&gt; or &lt;a href="https://dev.to/link2twenty/unicode-mood-selector-star-rating-system-8g"&gt;anything even resembling a star&lt;/a&gt;, people are making &lt;a href="https://dev.to/lapstjup/implementing-a-star-rating-component-in-vanilla-js-20ob"&gt;inaccessible rating systems&lt;/a&gt; (the very thing I was rallying against - and &lt;a class="mentioned-user" href="https://dev.to/lapstjup"&gt;@lapstjup&lt;/a&gt;
 is certainly not alone!), some are even making &lt;a href="https://dev.to/afif/scalable-star-rating-without-js-and-no-svg-or-image-for-the-star-2mef"&gt;star rating systems that don't work on 20%+ of browsers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Well you know what, lets end this right now as I have:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/hokMyu1PAKfJK/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/hokMyu1PAKfJK/giphy.gif" alt="unlimited power meme - emperor Palpatine star wars"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here it is, a star rating system that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;uses something resembling a fucking star&lt;/strong&gt; (the number 1 prerequisite for a star rating system!)&lt;/li&gt;
&lt;li&gt;works all the way back to IE9 and beyond! ✅&lt;/li&gt;
&lt;li&gt;is tiny at 168 &lt;strong&gt;bytes&lt;/strong&gt; all in! (and that includes the label which could probably be shorter!) ✅&lt;/li&gt;
&lt;li&gt;has validation built in ✅&lt;/li&gt;
&lt;li&gt;is easy to use ✅&lt;/li&gt;
&lt;li&gt;requires no JS ✅&lt;/li&gt;
&lt;li&gt;requires no CSS ✅&lt;/li&gt;
&lt;li&gt;is accessible (kind of, the control type is confusing, although if this wasn't silly you could use the &lt;code&gt;pattern&lt;/code&gt; attribute to fix this! Also as I stated in my other posts you should use &lt;strong&gt;explicit&lt;/strong&gt; labels rather than implicit ones (&lt;code&gt;for="id"&lt;/code&gt; style labels)) ✅&lt;/li&gt;
&lt;li&gt;even includes submission to your server (if you set the action - might double the size of the control though!) ✅&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#i-present-to-you-the-winner-of-the-star-rating-wars"&gt;
  &lt;/a&gt;
  I present to you the winner of the star (rating) wars
&lt;/h2&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/v9zsnbrt//embedded/result,html//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;So there you go, it is all over, go home you all lost.&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#in-case-you-wanted-to-catch-up-properly"&gt;
  &lt;/a&gt;
  In case you wanted to catch up properly
&lt;/h2&gt;

&lt;p&gt;This saga has been insanely funny, here are all the posts I can remember as part of this so far (I am sooo sorry I started this! 😋😉):&lt;/p&gt;

&lt;p&gt;An actually useful post:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/5-star-rating-system-actually-accessible-no-js-no-wai-aria-3idl" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;5 star rating system - ACTUALLY accessible, no JS, no WAI-ARIA and Semantic HTML! ⭐⭐⭐⭐⭐ [Easily converted to any framework too!]&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial ・ Jul 2 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;lapstjup came up with an interesting JS powered version, just has a few accessibility issues but overall a great contribution!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/lapstjup" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mmOMY4PP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--CrJ-tBeD--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366670/7c384675-c0ae-4190-85c5-6de6cc849d34.jpg" alt="lapstjup"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/lapstjup/implementing-a-star-rating-component-in-vanilla-js-20ob" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Implementing a Star Rating component in Vanilla JS&lt;/h2&gt;
      &lt;h3&gt;Lakshya Thakur ・ Jul 2 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#uiweekly&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/madsstoumann"&gt;@madsstoumann&lt;/a&gt;
 fired back and I have to say I absolutely love this idea and I am stealing it, if you read any read this one as it is accessible and works in everything other than IE!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/madsstoumann" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JoLwOpQB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--S8Kp4bXC--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/515396/61d796b8-f5ce-468b-8cb5-808b2bbb9279.jpeg" alt="madsstoumann"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/madsstoumann/star-rating-using-a-single-input-i0l" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Star-Rating Using A Single Input&lt;/h2&gt;
      &lt;h3&gt;Mads Stoumann ・ Jul 3 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/afif"&gt;@afif&lt;/a&gt;
 showing off his CSS skills as always!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/afif" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jSZolrIL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--5k2bquNj--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/577896/343fde9f-609b-419b-95d1-07d16b320a37.png" alt="afif"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/afif/scalable-star-rating-without-js-and-no-svg-or-image-for-the-star-2mef" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Scalable "star rating" without JS (and no SVG or image for the star)&lt;/h2&gt;
      &lt;h3&gt;Temani Afif ・ Jul 4 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/link2twenty"&gt;@link2twenty&lt;/a&gt;
 just got this one out before my rebuttal piece (and is better than mine)&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/link2twenty" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iZ83AbfI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mkPwwGe8--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/21408/a5b38912-48cb-4f18-b6b2-40da7956d41d.png" alt="link2twenty"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/link2twenty/star-rating-using-unicode-stars-3np2" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Star-rating using Unicode stars&lt;/h2&gt;
      &lt;h3&gt;Andrew Bone ・ Jul 5 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#where-it-all-started-to-become-very-silly"&gt;
  &lt;/a&gt;
  Where it all started to become very silly!
&lt;/h3&gt;

&lt;p&gt;Me again includes my &lt;strong&gt;lightsabre&lt;/strong&gt; star rating system at the bottom - this is where it all started to go wrong!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/star-rating-wars-the-madsafif-menice-an-even-better-star-rating-system-and-a-comparison-3pg5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Star[Rating] Wars - The MadsAfif Menice [An even better star rating system and a comparison]&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial ・ Jul 5 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/siddharthshyniben"&gt;@siddharthshyniben&lt;/a&gt;
 came up with a version for the terminal&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/siddharthshyniben" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sfh5RaoM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--72D9ZbiM--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/606915/21f22584-400f-41ab-bdf5-50f6435905fa.jpeg" alt="siddharthshyniben"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/siddharthshyniben/star-rating-in-the-terminal-12np" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Star rating in the Terminal&lt;/h2&gt;
      &lt;h3&gt;Siddharth ・ Jul 6 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;A great take on star rating systems that shows us what we will be able to do in the future with CSS once the browser vendors catch up! Very educational and a clever concept too!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/afif" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jSZolrIL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--5k2bquNj--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/577896/343fde9f-609b-419b-95d1-07d16b320a37.png" alt="afif"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/afif/the-one-star-rating-system-the-future-of-rating-4jl8" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;The ONE star rating system — the future of rating&lt;/h2&gt;
      &lt;h3&gt;Temani Afif ・ Jul 6 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;A better terminal version, taking the concept of the previous post but with ASCII text!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/siddharthshyniben" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sfh5RaoM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--72D9ZbiM--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/606915/21f22584-400f-41ab-bdf5-50f6435905fa.jpeg" alt="siddharthshyniben"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/siddharthshyniben/the-superflexible-star-rating-system-the-future-of-star-rating-in-the-terminal-33j5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;The SUPERFLEXIBLE star rating system – the future of star rating in the Terminal&lt;/h2&gt;
      &lt;h3&gt;Siddharth ・ Jul 7 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Simple but effective, accessible too!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/link2twenty" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iZ83AbfI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mkPwwGe8--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/21408/a5b38912-48cb-4f18-b6b2-40da7956d41d.png" alt="link2twenty"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/link2twenty/star-rating-with-simple-animations-the-saga-continues-5cgj" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Star-rating with simple animations (the saga continues)&lt;/h2&gt;
      &lt;h3&gt;Andrew Bone ・ Jul 7 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;This is where "star rating" started being stretched&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/madsstoumann" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JoLwOpQB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--S8Kp4bXC--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/515396/61d796b8-f5ce-468b-8cb5-808b2bbb9279.jpeg" alt="madsstoumann"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/madsstoumann/mood-selector-jhi" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Mood Selector Component&lt;/h2&gt;
      &lt;h3&gt;Mads Stoumann ・ Jul 7 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Yet again, not even using stars anymore!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/link2twenty" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iZ83AbfI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mkPwwGe8--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/21408/a5b38912-48cb-4f18-b6b2-40da7956d41d.png" alt="link2twenty"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/link2twenty/unicode-mood-selector-star-rating-system-8g" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Unicode mood selector (star-rating)&lt;/h2&gt;
      &lt;h3&gt;Andrew Bone ・ Jul 8 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/lionelrowe"&gt;@lionelrowe&lt;/a&gt;
 decided to spice things up with a rating that introduces negative ratings like rotten tomatoes! But doesn't use stars once again!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/lionelrowe" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JZYgfQ5g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--s1jo56Ci--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/169338/1b23b783-9452-493b-adbb-6e4aff12ad7c.jpeg" alt="lionelrowe"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/lionelrowe/rotten-tomatoes-star-rating-system-with-webcomponents-5a04" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Rotten Tomatoes 🍅 star rating system ⭐ with Web Components 🎆&lt;/h2&gt;
      &lt;h3&gt;lionel-rowe ・ Jul 7 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/adam_cyclones"&gt;@adam_cyclones&lt;/a&gt;
 decided to put a very silly one in from their phone! Sorry Adam I only give you one star for this!&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/adam_cyclones" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D36laJh4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--S8HxA-zD--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/94715/06057d1d-f6cb-4ac1-895c-4f2e5012ead5.jpg" alt="adam_cyclones"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/adam_cyclones/star-rating-with-nothing-but-text-ef4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Star rating with nothing but text! &lt;/h2&gt;
      &lt;h3&gt;Adam Crockett ・ Jul 6 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;All caught up now with this post being the latest!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-silly-billy"&gt;
  &lt;/a&gt;
  You silly billy
&lt;/h2&gt;

&lt;p&gt;Yes I know! Sorry for polluting the feed with this crap. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I am hoping everyone just gives up now because you know what, star rating systems are actually pretty rubbish as they don't give an accurate picture!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>html</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Got Bots? 1: Intro to Bots &amp; Ethical Bot Creation</title>
      <author>Chloe Condon 🎀</author>
      <pubDate>Thu, 08 Jul 2021 21:24:15 +0000</pubDate>
      <link>https://dev.to/chloecondon/got-bots-1-intro-to-bots-ethical-bot-creation-2m17</link>
      <guid>https://dev.to/chloecondon/got-bots-1-intro-to-bots-ethical-bot-creation-2m17</guid>
      <description>&lt;p&gt;Thanks to everyone who joined me live for our 1st episode of &lt;a href="//aka.ms/gotbots"&gt;Got Bots? with the Microsoft Reactor&lt;/a&gt;- it was so much fun to chat with y'all, share bot knowledge, and swap stories of the early days of AOL bots. 🤖&lt;/p&gt;

&lt;p&gt;If you missed the fun live, don't worry- you can watch the replay &lt;a href="https://youtu.be/egozxtthkV4"&gt;here&lt;/a&gt;, and in the embedded video below!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/egozxtthkV4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;On this episode we cover:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/egozxtthkV4?t=330"&gt;5:35&lt;/a&gt; How I got started with bots (the birth of &lt;a href="https://twitter.com/bot_shania"&gt;Shania Bot&lt;/a&gt; 🤠🎶)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/egozxtthkV4?t=569"&gt;9:26&lt;/a&gt; Special guest, and co-creator of the Diva Bots &lt;a href="https://twitter.com/MetzinAround"&gt;Pj Metz&lt;/a&gt; joins the show! We chat about &lt;a href="https://docs.microsoft.com/en-us/learn/modules/intro-to-logic-apps/?WT.mc_id=academic-33451-chcondon"&gt;Azure Logic Apps&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/egozxtthkV4?t=875"&gt;14:35&lt;/a&gt; We touch briefly on &lt;a href="https://docs.microsoft.com/en-us/learn/modules/build-faq-chatbot-qna-maker-azure-bot-service/?WT.mc_id=academic-33451-chcondon"&gt;Azure QnA maker&lt;/a&gt;, as well as my &lt;a href="https://dev.to/azure/wine-not-build-a-bot-32fk"&gt;Wine Bot&lt;/a&gt; post on Dev.to 🍷&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/egozxtthkV4?t=1035"&gt;17:15&lt;/a&gt; Pj and I chat about &lt;a href="https://twitter.com/bot_shania"&gt;Shania Bot&lt;/a&gt;, &lt;a href="https://twitter.com/BotianaGrande"&gt;BotianaGrande&lt;/a&gt;, &lt;a href="https://twitter.com/MechanicalCarey"&gt;Mechanical Carey&lt;/a&gt;, &lt;a href="https://twitter.com/JustBotPaid"&gt;JustBotPaid&lt;/a&gt;, &lt;a href="https://twitter.com/itsbritneybott"&gt;Britney Bot&lt;/a&gt;, and more of our favs! 🎶&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/egozxtthkV4?t=1461"&gt;24:21&lt;/a&gt; We throw it back to the OG bot: &lt;a href="https://www.vice.com/en/article/jpgpey/a-history-of-smarterchild"&gt;SmarterChild&lt;/a&gt;!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/egozxtthkV4?t=1740"&gt;29:00&lt;/a&gt; I mention my pal &lt;a href="https://twitter.com/benparr"&gt;Ben Parr&lt;/a&gt; and his company &lt;a href="https://www.octaneai.com/"&gt;Octane AI&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/egozxtthkV4?t=1780"&gt;29:40&lt;/a&gt; Virtual &lt;a href="https://www.instagram.com/p/CN5olSVplT4/"&gt;Tinkerbell&lt;/a&gt; meet &amp;amp; greet?! 🧚🏼😱&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/egozxtthkV4?t=2160"&gt;36:00&lt;/a&gt; I mention The Bot Father himself, &lt;a class="mentioned-user" href="https://dev.to/jaydestro"&gt;@jaydestro&lt;/a&gt;
! &lt;a href="https://dev.to/azure/azurefunbytes-episode-47-azure-logic-apps-with-chloecondon-511"&gt;Check out our episode&lt;/a&gt; where we chat all about Azure Logic Apps and build THE Bot Father!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://youtu.be/egozxtthkV4?t=2466"&gt;41:06&lt;/a&gt; A personal story about ethical bot creation (and shirt bots- ugh 😒😒😒)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Did you have fun? Join us live for &lt;a href="//aka.ms/gotbots2"&gt;Got Bots? 2: Making Bots with Logic Apps&lt;/a&gt; where I'll be taking your questions and spinning up some fun bots with Azure Logic Apps- see ya then, and happy botting!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Wault: The future of password managers</title>
      <author>Gál Péter</author>
      <pubDate>Thu, 08 Jul 2021 21:05:03 +0000</pubDate>
      <link>https://dev.to/wault/wault-the-future-of-password-storage-e3j</link>
      <guid>https://dev.to/wault/wault-the-future-of-password-storage-e3j</guid>
      <description>&lt;p&gt;Password managers are becoming more common these days as we are using an increasing number of sites each day. I have used several password managers for about 4 years, but I've never found the one that fits me. Everyone had some major flaws like it felt outdated or it was too expensive. Then it hit me... why shouldn't I create the next Facebook of password storage?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-were-the-main-goals-of-the-project"&gt;
  &lt;/a&gt;
  What were the main goals of the project?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. The app must have a generous free tier.&lt;/strong&gt; I wanted a personal plan, where you can store your passwords safely across multiple devices without hassle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. The app must feel new and responsive.&lt;/strong&gt; When I used Lastpass and Bitwarden I felt like I was using a slightly outdated piece of software. I think the best and easiest way to achieve this is by &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Be open-source.&lt;/strong&gt; I think this one is obvious. If you make an application open source, then it means that there is nothing to hide.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-can-this-app-compete-what-can-it-give-to-users-that-other-managers-cant"&gt;
  &lt;/a&gt;
  How can this app compete? What can it give to users, that other managers can't?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. The password manager without passwords.&lt;/strong&gt; The most common security threat for an application is user exploitation. You can easily create a clone of the original website and start phishing for passwords. But when you have no you don't have a way to gain access to a user's account.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Free for the people, paid for organizations.&lt;/strong&gt; I have been using WinRAR and I love the idea behind it. My take on this idea is to give the free plan the ability to create &lt;strong&gt;2 people&lt;/strong&gt; teams (I haven't seen any other password manager do this) and when you want to add more users, then you must pay for the excess number of people. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. The ability to store crypto wallets.&lt;/strong&gt; I must admit: the crypto hype train got me too, but when you consider it, then it will look like a good idea. You can store crypto wallets in the application, check your balance, send and receive money. It is easy to implement and also it is unique for this application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Rich customization for secure notes.&lt;/strong&gt; I have been using Google Keep through my entire high school years, so I got used to it. But when I want to write a note in my Bitwarden Vault, I cannot format my text, nor can I create a checklist, so it is not convenient enough for everyday use.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Zero trackings.&lt;/strong&gt; A password manager must be a private space. You don't want to be tracked when you are managing confidential information. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#want-to-help"&gt;
  &lt;/a&gt;
  Want to help?
&lt;/h3&gt;

&lt;p&gt;The project is already in a very early stage of development (as the application is only good enough to log in on the web interface), but any contribution is welcome.&lt;/p&gt;

&lt;p&gt;Github organization: &lt;a href="https://github.com/wault-app"&gt;github.com/wault-app&lt;/a&gt;&lt;br&gt;
Discord: &lt;a href="https://discord.gg/NxhdAf4azz"&gt;discord.gg/NxhdAf4azz&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>nextjs</category>
      <category>typescript</category>
      <category>security</category>
    </item>
  </channel>
</rss>
