<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Day-21 Drag N Drop </title>
      <author>Sabiya Tabassum</author>
      <pubDate>Thu, 17 Jun 2021 06:17:22 +0000</pubDate>
      <link>https://dev.to/sabiyatabassum/day-21-drag-n-drop-2afp</link>
      <guid>https://dev.to/sabiyatabassum/day-21-drag-n-drop-2afp</guid>
      <description>&lt;p&gt;Hi Folks,&lt;/p&gt;

&lt;p&gt;Before diving into the project, a little bit of &lt;strong&gt;introduction&lt;/strong&gt; about me:&lt;/p&gt;

&lt;p&gt;I am &lt;strong&gt;Sabiya Tabassum&lt;/strong&gt;. I completed my B.Tech under CSE major. I'm currently learning React and recently, I have started 50 Projects 50 Days challenge. If you have any queries/ ideas to collaborate with me, you can connect with me at my social media handles.&lt;/p&gt;

&lt;p&gt;Coming to our &lt;strong&gt;Drag N Drop Project&lt;/strong&gt;, Let's Go!!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wtK83k0U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b5wvavf7rdr8m3lwv1i6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wtK83k0U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b5wvavf7rdr8m3lwv1i6.gif" alt="Let's Go"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Glimpse of the &lt;strong&gt;output&lt;/strong&gt; of our project:&lt;br&gt;
&lt;iframe src="https://codesandbox.io/embed/Day-21-Drag-N-Drop-d6qi5"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;From the above image, we can get an idea that there are some boxes. Out of these boxes, one box have an image. We can drag the image and drop in any of the boxes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tech stack&lt;/strong&gt; we are using: HTML,CSS, JS&lt;/p&gt;

&lt;p&gt;ðŸ“Œ&lt;strong&gt;HTML code:&lt;/strong&gt;&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;body&amp;gt;
   &amp;lt;div class="empty"&amp;gt;
      &amp;lt;div class="fill" draggable="true"&amp;gt;&amp;lt;/div&amp;gt;
   &amp;lt;/div&amp;gt;
   &amp;lt;div class="empty"&amp;gt;&amp;lt;/div&amp;gt;
   &amp;lt;div class="empty"&amp;gt;&amp;lt;/div&amp;gt;
   &amp;lt;div class="empty"&amp;gt;&amp;lt;/div&amp;gt;
   &amp;lt;div class="empty"&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Detailed Explanation of HTML code:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;According to the output, we need atleast 4-5 boxes. So we create 4-5  tags with an empty class inside it.
&lt;/li&gt;
&lt;li&gt;For a image in the box, we create another  inside the empty  tag. And add an attribute &lt;strong&gt;draggable="true"&lt;/strong&gt;.
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;draggable="true"&lt;/strong&gt;: The &lt;strong&gt;draggable&lt;/strong&gt; attribute specifies 
whether an element is draggable or not.&lt;/li&gt;


&lt;p&gt;ðŸ“Œ&lt;strong&gt;CSS code:&lt;/strong&gt;&lt;/p&gt;
&lt;/ul&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   @import url("https://fonts.googleapis.com/css2? 
   family=Roboto:wght@400;700&amp;amp;display=swap");
   * {
      box-sizing: border-box;
   }
   body {
      font-family: "Roboto", sans-serif;
      display: flex;
      align-items: center;
      justify-content: center;
      overflow: hidden;
      margin: 0;
      height: 100vh;
   }
 .empty {
      height: 150px;
      width: 150px;
      margin: 10px;
      border: solid 3px black;
      background: white;
   }
.fill {
     background-image:
          url("https://source.unsplash.com/random/150x150");
     width: 145px;
     height: 145px;
   }
.hold {
     border: 3px solid red;
   }
.hovered {
     background-color: black;
     border-color: rgb(32, 230, 32);
     border-style: dashed;
   }
 @media (max-width: 480px) {
     body {
          flex-direction: column;
     }
 }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Detailed explanation of CSS code:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For &lt;strong&gt;Centering of elements&lt;/strong&gt;: Add properties like,

&lt;ul&gt;
&lt;li&gt;display:flex - To lay a collection of items out in one 
              direction or another.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;align-items:center&lt;/strong&gt; - Centering the items.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;justify-content:center&lt;/strong&gt; - Aligns the flexible 
              container's items to center.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;height:100vh&lt;/strong&gt; - The page's overall height&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;overflow: hidden&lt;/strong&gt; - This property makes the page 
              unscrollable.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For &lt;strong&gt;styling the empty class&lt;/strong&gt;:

&lt;ul&gt;
&lt;li&gt;Specify &lt;strong&gt;height&lt;/strong&gt; and &lt;strong&gt;width&lt;/strong&gt; of the box.&lt;/li&gt;
&lt;li&gt;Add &lt;strong&gt;background-color&lt;/strong&gt; and &lt;strong&gt;border&lt;/strong&gt; properties.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For &lt;strong&gt;styling the fill class&lt;/strong&gt;: 

&lt;ul&gt;
&lt;li&gt;Add &lt;strong&gt;background-image&lt;/strong&gt; and &lt;strong&gt;height&lt;/strong&gt;, &lt;strong&gt;width&lt;/strong&gt; 
properties for the image.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Add styling to hold class and hovered class which will be created further in JS.

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;hold class styling&lt;/strong&gt; - To create an effect around the image, when the image is dragged from the box. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;hovered class styling&lt;/strong&gt; - To create an effect when the image is hovering on other boxes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Atlast, Add some responsive media queries ðŸ˜Š &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ðŸ“Œ&lt;strong&gt;JS code:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  const fill = document.querySelector(".fill");
  const empties = document.querySelectorAll(".empty");

  fill.addEventListener("dragstart", dragStart);
  fill.addEventListener("dragend", dragEnd);

  empties.forEach((empty) =&amp;gt; {
      empty.addEventListener("dragover", dragOver);
      empty.addEventListener("dragenter", dragEnter);
      empty.addEventListener("dragleave", dragLeave);
      empty.addEventListener("drop", dragDrop);
  });

  function dragStart() {
      this.className += " hold"; //append the hold class here
      setTimeout(() =&amp;gt; (this.className = "invisible"), 0);
  }

  function dragEnd() {
      this.className = "fill";
  }

  function dragOver(e) {
      e.preventDefault();
  }

  function dragEnter(e) {
      e.preventDefault();
      this.className += " hovered"; //append hovered class 
                         here while entering into the box.
  }

  function dragLeave() {
      this.className = "empty";
  }

  function dragDrop() {
      this.className = "empty";
      this.append(fill);
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Detailed explanation of JS code:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Firstly, create the variables on which we are making DOM 
 changes.&lt;/li&gt;
&lt;li&gt;On Fill box, we have two functions &lt;strong&gt;dragStart&lt;/strong&gt; and 
 &lt;strong&gt;dragEnd&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;On Empty box, we have &lt;strong&gt;dragOver&lt;/strong&gt;, &lt;strong&gt;dragEnter&lt;/strong&gt;, 
 &lt;strong&gt;dragLeave&lt;/strong&gt;, &lt;strong&gt;drop&lt;/strong&gt; functions.&lt;/li&gt;
&lt;li&gt;These functions are helpful in giving you an idea on drag 
 and drop operations.&lt;/li&gt;
&lt;li&gt;We have to append the respective classes i.e., empty, fill 
 classes while performing drag and drop on respective boxes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#finally-the-live-demo-of-output-will-be"&gt;
  &lt;/a&gt;
  Finally, the &lt;strong&gt;Live demo&lt;/strong&gt; of &lt;strong&gt;output&lt;/strong&gt; will be:
&lt;/h2&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/Day-21-Drag-N-Drop-d6qi5"&gt;
&lt;/iframe&gt;
&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#github-link-github-sabiyatabassumday21dragndrop-"&gt;
  &lt;/a&gt;
  Github Link: &lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sabiyatabassum"&gt;
        sabiyatabassum
      &lt;/a&gt; / &lt;a href="https://github.com/sabiyatabassum/Day-21-Drag-N-Drop"&gt;
        Day-21-Drag-N-Drop
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Day-21 Drag N Drop. Created with CodeSandbox
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Day-21-Drag-N-Drop&lt;/h1&gt;
&lt;p&gt;Created with CodeSandbox&lt;/p&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sabiyatabassum/Day-21-Drag-N-Drop"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/h4&gt;


&lt;h4&gt;
  &lt;a href="#connect-me-at-httpstwittercomnerdfswd"&gt;
  &lt;/a&gt;
  Connect me at &lt;a href="https://twitter.com/nerd_fswd"&gt;https://twitter.com/nerd_fswd&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Hope you liked the project!!&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#todays-pinch-of-motivation"&gt;
  &lt;/a&gt;
  Today's Pinch of Motivation:
&lt;/h4&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    When you're high on emotion
    And you're losing your focus
    And you feel too exhausted to pray
    Don't get lost in the moment
    Or give up when you're closest
    All you need is somebody to say
    It's okay not to be okay
    It's okay not to be okay
    When you're down and you feel ashamed
    IT'S OK NOT TO BE OK!!
&lt;/code&gt;&lt;/pre&gt;



</description>
      <category>javascript</category>
      <category>50projects50days</category>
      <category>day21</category>
    </item>
    <item>
      <title>Is there any way I can change a file header in Linux like how I'd change a file extension in Windows (10).</title>
      <author>Calin Baenen</author>
      <pubDate>Thu, 17 Jun 2021 06:02:03 +0000</pubDate>
      <link>https://dev.to/baenencalin/is-there-any-way-i-can-change-a-file-header-in-linux-like-how-i-d-change-a-file-extension-in-windows-10-5257</link>
      <guid>https://dev.to/baenencalin/is-there-any-way-i-can-change-a-file-header-in-linux-like-how-i-d-change-a-file-extension-in-windows-10-5257</guid>
      <description>&lt;p&gt;I know in Windows, "file extensions", the part of a file name after the final period in the file name, are more than just part of the file name, they also act as metadata to tell Windows what kind of file the document should be treated as, and what apps to open them in (i.e. what apps are associated with those file types).&lt;/p&gt;

&lt;p&gt;However, I want to start moving to Linux (Ubuntu) which I installed on my PC a while back, so, I recently tried making a new file ("extensionless"), and I wanted to make it a different type, so I tested to see if that would work by testing by renaming it &lt;code&gt;.go&lt;/code&gt;, so I could try to open it in VSCode like I normally would on WIndows.&lt;br&gt;
Surprise, it doesn't work.&lt;/p&gt;

&lt;p&gt;I look up multiple searches, involving how to change the file extension (only getting results using command line), and eventually coming over to a horrifying S.O. answer that horrified me, it gave me the info that "extensions" (file types) are determined by header.&lt;/p&gt;

&lt;p&gt;There doesn't seem to be any way in the "Files" file manager for Ubuntu to change the header type.&lt;br&gt;
There seems to be no concept of anything other than a plain "Text" file.&lt;br&gt;
(Well, there is, but you just can't see or change it.)&lt;br&gt;
&lt;br&gt;&lt;br&gt;
What I want is a program that can give me a simple GUI to edit the file type of a file so I can easily go between one or the other as needed/wanted.&lt;br&gt;
(Even better, and more appreciated would be some kind of program that works with "Files" to add the option to change the filetype-header in context menu (when a certain file is selected). Though, either will do.)&lt;/p&gt;

&lt;p&gt;Info:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;OS&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Ubuntu 20.04.2 LTS&lt;/span&gt;
&lt;span class="na"&gt;WindowingSystem&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;X11&lt;/span&gt;
&lt;span class="na"&gt;GNOME&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;3.36.8&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>linux</category>
      <category>windows</category>
      <category>watercooler</category>
      <category>help</category>
    </item>
    <item>
      <title>Python's Collections Module: OrderdDict</title>
      <author>Kathan Vakharia</author>
      <pubDate>Thu, 17 Jun 2021 04:54:12 +0000</pubDate>
      <link>https://dev.to/kathanvakharia/python-s-collections-module-orderddict-30ia</link>
      <guid>https://dev.to/kathanvakharia/python-s-collections-module-orderddict-30ia</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-do-we-need-ordereddict-anway"&gt;
  &lt;/a&gt;
  Why do we need OrderedDict anway?
&lt;/h2&gt;

&lt;p&gt;Since dictionaries in python maintain their insertion order completely after &lt;strong&gt;python 3.7+&lt;/strong&gt;, use case of &lt;code&gt;OrderedDict&lt;/code&gt; is fading away slowly. But still there are some helper methods and functions that we can leverage while using OrderedDicts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5G6kC4bE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t806u5fbdsoy6mk0e8i4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5G6kC4bE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t806u5fbdsoy6mk0e8i4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-raw-ordereddict-endraw-"&gt;
  &lt;/a&gt;
  Creating &lt;code&gt;OrderedDict&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Since, it is a &lt;code&gt;dict&lt;/code&gt; sub-class. It can leverage all the functionalities of dictionary.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V9MRWkyV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6x5t0qs1ym5tfk5myekm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V9MRWkyV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6x5t0qs1ym5tfk5myekm.png" alt="image"&gt;&lt;/a&gt;Let's discuss some important methods pertaining to &lt;code&gt;OrderedDict&lt;/code&gt; only.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#-raw-popitem-endraw-method"&gt;
  &lt;/a&gt;
  &lt;code&gt;popitem&lt;/code&gt; method
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;popitem(last = True)&lt;/code&gt; method for ordered dictionaries returns and removes a &lt;strong&gt;(key, value)&lt;/strong&gt; pair. &lt;/p&gt;

&lt;p&gt;The pairs are returned in ,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;em&gt;LastInFirstOut(LIFO)&lt;/em&gt; order if last is &lt;strong&gt;true&lt;/strong&gt;. That is to say, &lt;strong&gt;last&lt;/strong&gt; pair is popped.(default)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;FirstInFirstOut(FIFO)&lt;/em&gt; order if &lt;strong&gt;false&lt;/strong&gt;. That is to say, &lt;strong&gt;first&lt;/strong&gt; pair is popped.
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;collections&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;OrderedDict&lt;/span&gt;

&lt;span class="n"&gt;ord_dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OrderedDict&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;"fname"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"The"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s"&gt;"lname"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"CodeBlooded"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s"&gt;"founder"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"A Geek"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s"&gt;"Ran by"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Geeks"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="n"&gt;last_pair&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ord_dict&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;popitem&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="c1"&gt;# last=True by default
&lt;/span&gt;&lt;span class="n"&gt;first_pair&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ord_dict&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;popitem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'last pair: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;last_pair&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'first pair: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;first_pair&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="s"&gt;"""OUTPUT 
last pair: ('Ran by', 'Geeks')
first pair: ('fname', 'The')
"""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#-raw-movetoend-endraw-method"&gt;
  &lt;/a&gt;
  &lt;code&gt;move_to_end&lt;/code&gt; method
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;move_to_end(key, last=True)&lt;/code&gt; moves an existing key to either end of an ordered dictionary. &lt;/p&gt;

&lt;p&gt;The item is moved to the right end if last is true (default) or to the beginning if last is false.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;collections&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;OrderedDict&lt;/span&gt;

&lt;span class="n"&gt;ord_dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OrderedDict&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;"fname"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"The"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s"&gt;"lname"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"CodeBlooded"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s"&gt;"founder"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"A Geek"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s"&gt;"Ran by"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Geeks"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'Before =&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ord_dict&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# move to right-most end
&lt;/span&gt;&lt;span class="n"&gt;ord_dict&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;move_to_end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'founder'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# move to left-most end
&lt;/span&gt;&lt;span class="n"&gt;ord_dict&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;move_to_end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Ran by'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'After =&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ord_dict&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="s"&gt;"""OUTPUT 
Before =&amp;gt;
OrderedDict([('fname', 'The'), ('lname', 'CodeBlooded'), 
            ('founder', 'A Geek'), ('Ran by', 'Geeks')])
After =&amp;gt;
OrderedDict([('Ran by', 'Geeks'), ('fname', 'The'), 
            ('lname', 'CodeBlooded'), ('founder', 'A Geek')])

"""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ðŸ’¡ &lt;strong&gt;KeyError&lt;/strong&gt; is raised if given key is not present in the dictionary.&lt;/p&gt;

&lt;p&gt;And that wraps our discussion on &lt;code&gt;OrderedDict&lt;/code&gt;! If you notice all of Collections classes we discussed till now are &lt;code&gt;dict&lt;/code&gt; subclass, isn't it interesting ? It's testament to how much powerful dictionaries in python are ðŸ˜Ž&lt;/p&gt;

</description>
      <category>python</category>
      <category>codenewbie</category>
      <category>collections</category>
    </item>
    <item>
      <title>Learn and Master Flexbox by building commonly used web components </title>
      <author>David Asaolu</author>
      <pubDate>Thu, 17 Jun 2021 04:16:15 +0000</pubDate>
      <link>https://dev.to/arshadayvid/learn-and-master-flexbox-by-building-commonly-used-web-components-14n8</link>
      <guid>https://dev.to/arshadayvid/learn-and-master-flexbox-by-building-commonly-used-web-components-14n8</guid>
      <description>&lt;p&gt;Hello, welcome to this tutorial. Today, I will be explaining how to build commonly used web components with Flexbox. &lt;/p&gt;

&lt;p&gt;After the introduction, I will walk you through building the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; A navigation bar&lt;/li&gt;
&lt;li&gt; A contact card &lt;/li&gt;
&lt;li&gt; A credit card checkout page&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So let's jump right into it! ðŸš€&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/YTbZzCkRQCEJa/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/YTbZzCkRQCEJa/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Flexbox model provides an efficient way to layout, align and arrange elements on a webpage. Learning flexbox may seem to be a pain in the butt at first for some people, but once you get familiar with it, applying it will be a harmless and enjoyable ride. &lt;br&gt;
I also use flexbox in all my projects and it's been awesome!&lt;/p&gt;

&lt;p&gt;Let's learn some rudiments:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#1-display-flex"&gt;
  &lt;/a&gt;
  1. display: flex
&lt;/h3&gt;

&lt;p&gt;Don't panic! ðŸ˜¨ This is a CSS attribute that you assign to the parent container in order to use flexbox. For instance, if you have&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;main id="parent"&amp;gt;
        &amp;lt;div class="child"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div class="child"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div class="child"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div class="child"&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;/main&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The "main" tag is the parent element, also known as the flex container. &lt;br&gt;
Note that, this attribute aligns the children elements inline by default, that is lay them side by side (from left-right). The children can also be referred to as flex items.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nECZfIF_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b26zr3xzjf7i0lki7qsq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nECZfIF_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b26zr3xzjf7i0lki7qsq.png" alt="Flexbox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-flexdirection-row-flexdirection-column-flexdirection-columnreverse-flexdirection-rowreverse"&gt;
  &lt;/a&gt;
  2. flex-direction : row || flex-direction : column || flex-direction : column-reverse || flex-direction : row-reverse
&lt;/h3&gt;

&lt;p&gt;I guess this is self-explanatory already. &lt;/p&gt;

&lt;p&gt;Flex-direction : row - This is the default arrangement of flex-items, when display : flex is assigned to the parent element.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nECZfIF_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b26zr3xzjf7i0lki7qsq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nECZfIF_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b26zr3xzjf7i0lki7qsq.png" alt="Flexbox - flex-direction : row"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Flex-direction : column  - The flex-items (children elements) are arranged from top to bottom within the parent element.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HliAnWT4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8dt2ul78tom6em5qv2ne.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HliAnWT4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8dt2ul78tom6em5qv2ne.png" alt="Flexbox - flex-direction : column"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Flex-direction : row-reverse - In this case, the children elements are still arranged from left-right, but the arrangement of the flex items begins from last flex-item to first flex-item.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PBNnXqbX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0s33ip3cv6sj0cgzgqng.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PBNnXqbX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0s33ip3cv6sj0cgzgqng.png" alt="Flexbox - flex-direction : row-reverse"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Flex-direction : column-reverse - The flex-items are in column, but in a reverse order, similar to the row-reverse.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PanBswVT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m7lurqeap59a2or73stj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PanBswVT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m7lurqeap59a2or73stj.png" alt="Flexbox - flex-direction : column-reverse"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-justifycontent-flexstart-justifycontent-flexend-justifycontent-center-justifycontent-spacebetween-justifycontent-spacearound"&gt;
  &lt;/a&gt;
  3. justify-content : flex-start || justify-content : flex-end || justify-content : center || justify-content : space-between || justify-content : space-around
&lt;/h3&gt;

&lt;p&gt;If you are already familiar with the float attribute, justify-content is quite similar to the float attribute but with some added functionalities.&lt;/p&gt;

&lt;p&gt;justify-content : flex-start - this attribute aligns the flex items to the left axis within the parent element.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SZ7GO4aL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wq16lk0fvqxe7u6bo112.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SZ7GO4aL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wq16lk0fvqxe7u6bo112.png" alt="Flexbox - justify-content : flex-start"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;justify-content : flex-end - this aligns the flex items to the right axis within the parent element.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jhTGvMZn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og17jzmi53n69j5o4y5v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jhTGvMZn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og17jzmi53n69j5o4y5v.png" alt="Flexbox - justify-content : flex-end"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;justify-content : center - this aligns the flex items at the center of the parent element.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UMmzXzPk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hdzydsfwfyat83y4u9qm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UMmzXzPk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hdzydsfwfyat83y4u9qm.png" alt="Flexbox - justify-content : center"&gt;&lt;/a&gt;&lt;br&gt;
justify-content : space-between - aligns the flex items such that equal amount of space is available BETWEEN them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MOkAMhQr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wn21xff6hx8l8io29r22.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MOkAMhQr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wn21xff6hx8l8io29r22.png" alt="Flexbox - justify-content : space-between"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;justify-content : space-around - aligns the flex items such that equal amount of space is available AROUND them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f9VLF_YX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzhzsap7yg5igs0yx19f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f9VLF_YX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzhzsap7yg5igs0yx19f.png" alt="Flexbox - justify-content : space-around"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-alignitems-flexstart-alignitems-center-alignitems-flexend"&gt;
  &lt;/a&gt;
  4. align-items : flex-start || align-items : center || align-items : flex-end
&lt;/h3&gt;

&lt;p&gt;They are similar to justify-content, the difference is that justify-content align elements on the horizontal axis, while align items align elements vertically.&lt;/p&gt;

&lt;p&gt;align-items : flex-start&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4XAiwcMu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vtf2bbrbdsfcboiodpmu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4XAiwcMu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vtf2bbrbdsfcboiodpmu.png" alt="Flexbox - align-items : flex-start"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;align-items : center &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3ABIbMFj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7pmradae6xva10t6b5jf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3ABIbMFj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7pmradae6xva10t6b5jf.png" alt="Flexbox - align-items : center"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;align-items : flex-end&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z4zU-SUZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kwy90zb2ec2ppzkdogdm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z4zU-SUZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kwy90zb2ec2ppzkdogdm.png" alt="Flexbox - align-items : flex-end"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;TLDR : The properties listed are limited to those needed to complete the projects listed in this tutorial. You can learn about other attributes &lt;a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/"&gt;here&lt;/a&gt; or &lt;a href="https://www.w3schools.com/css/css3_flexbox.asp"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#lets-build"&gt;
  &lt;/a&gt;
  Let's Build! ðŸš€
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/kyLYXonQYYfwYDIeZl/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/kyLYXonQYYfwYDIeZl/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From what you've learnt so far, try out this web layouts&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-a-simple-check-out-page"&gt;
  &lt;/a&gt;
  1. A simple check out page
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KXhtqvtw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e3lduxcyslq9cc7v6ck0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KXhtqvtw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e3lduxcyslq9cc7v6ck0.png" alt="A checkout page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check &lt;a href="https://codepen.io/arshadayvid/pen/JjWxZoM"&gt;Solution&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-a-contact-page"&gt;
  &lt;/a&gt;
  2. A contact page
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FDBGkmWU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/okyeba5edum6nr58x3ev.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FDBGkmWU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/okyeba5edum6nr58x3ev.png" alt="A contact page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check &lt;a href="https://codepen.io/arshadayvid/pen/VwpgdeG"&gt;Solution&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-a-navigation-bar"&gt;
  &lt;/a&gt;
  3. A Navigation bar
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z1b9CumC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jjjxspij5i2jjsww7bax.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z1b9CumC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jjjxspij5i2jjsww7bax.png" alt="Navigation Bar"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check &lt;a href="https://codepen.io/arshadayvid/pen/qBrgKZY"&gt;Solution&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Did you enjoy this tutorial or have any questions? Feel free to drop your comments below and connect with me on &lt;a href="https://twitter.com/Arshadayvid"&gt;Twitter&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/kfvEdnjjcAoea0naii/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/kfvEdnjjcAoea0naii/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>ðŸŽ¥ Kubernetes Services, Ingress, Jobs and CronJobs</title>
      <author>Peter Jausovec</author>
      <pubDate>Thu, 17 Jun 2021 03:37:22 +0000</pubDate>
      <link>https://dev.to/peterj/kubernetes-services-ingress-jobs-and-cronjobs-3p1c</link>
      <guid>https://dev.to/peterj/kubernetes-services-ingress-jobs-and-cronjobs-3p1c</guid>
      <description>&lt;p&gt;How can you access workloads inside the Kubernetes cluster? Should you use a NodePort or LoadBalancer service type? How about if you want to expose multiple applications through a single load balancer? In this session, you'll learn how to do all that. We'll deploy an Ambassador ingress controller and show how to expose multiple applications through the load balancer. Finally, we'll look into Jobs and CronJobs and show how to use them to run tasks on schedule. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ef6UJ5Pa3Dw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-covered-in-the-video"&gt;
  &lt;/a&gt;
  What's covered in the video?
&lt;/h3&gt;

&lt;p&gt;00:00 - Introduction&lt;br&gt;
01:00 - Agenda&lt;br&gt;
02:54 - Kubernetes Services&lt;br&gt;
10:24 - Talking to Pods using services (demo/lab)&lt;br&gt;
23:37 - Service types&lt;br&gt;
24:45 - ClusterIP service type&lt;br&gt;
25:56 - NodePort service type&lt;br&gt;
28:00 - LoadBalancer service type&lt;br&gt;
29:00 - ExternalName service type&lt;br&gt;
30:03 - Service types (demo/lab)&lt;br&gt;
40:40 - Ingress introduction (exposing multiple services)&lt;br&gt;
50:50 - Ingress (demo)&lt;br&gt;
54:33 - Deploying Ambassador ingress controller (demo)&lt;br&gt;
01:00:50 - Single service ingress (demo)&lt;br&gt;
01:02:59 - Path-based routing with Ingress (demo)&lt;br&gt;
01:08:13 - Using a hostname instead of an IP address (demo)&lt;br&gt;
01:15:31 - Name-based ingress(multiple hosts) (demo)&lt;br&gt;
01:19:00 - Kubernetes Jobs&lt;br&gt;
01:26:39 - Kubernetes CronJobs&lt;br&gt;
01:32:40 - Jobs and CronJobs (demo) &lt;/p&gt;

&lt;p&gt;You can find all the information on how to join the next live Kubernetes session at &lt;a href="//live.startkubernetes.com"&gt;live.startkubernetes.com&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>beginners</category>
      <category>devops</category>
    </item>
    <item>
      <title>EC2 instance types</title>
      <author>Ajit Singh</author>
      <pubDate>Thu, 17 Jun 2021 03:15:24 +0000</pubDate>
      <link>https://dev.to/this-is-learning/ec2-instance-types-4okj</link>
      <guid>https://dev.to/this-is-learning/ec2-instance-types-4okj</guid>
      <description>&lt;p&gt;When we were creating EC2 instances we saw that there are many types of EC2 instances available from which we selected t2.micro .Now we will study some of them so that we can make an educated guess on what type of instance we need.&lt;/p&gt;

&lt;p&gt;EC2 has the following type of instances available: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;General Purpose&lt;/li&gt;
&lt;li&gt;Compute Optimized&lt;/li&gt;
&lt;li&gt;Memory Optimized&lt;/li&gt;
&lt;li&gt;Accelerated Computing &lt;/li&gt;
&lt;li&gt;Storage optimized&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let us look each of these:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#general-purpose"&gt;
  &lt;/a&gt;
  General Purpose
&lt;/h2&gt;

&lt;p&gt;These instances provide a balance of compute power, memory network. These are general purpose and can be used for a variety of workloads these are good for using as web servers, you can use them as your virtual environments to build, deploy, test and so on. These instances contain the &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;T series&lt;/li&gt;
&lt;li&gt;M series&lt;/li&gt;
&lt;li&gt;MACos 
family of servers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#compute-optimizedcpu-optimized"&gt;
  &lt;/a&gt;
  Compute Optimized(CPU optimized)
&lt;/h2&gt;

&lt;p&gt;Compute optimized instances are ideal for compute bound applications that need high performance computations for running correctly. These types of instances are used for scientific modelling, gaming servers, media trans coding machine learning etc. These instances contain the &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;C series
family of servers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#memory-optimizedram-optimized"&gt;
  &lt;/a&gt;
  Memory Optimized(RAM optimized)
&lt;/h2&gt;

&lt;p&gt;Memory optimized instances are used to deliver fast performance on large datasets in memory. These types of servers are best used to setup real time database analytics, caches etc. These instances contain the &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;R series&lt;/li&gt;
&lt;li&gt;x series&lt;/li&gt;
&lt;li&gt;U series&lt;/li&gt;
&lt;li&gt;Z series
family of servers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#storage-optimizedrom-optimized"&gt;
  &lt;/a&gt;
  Storage Optimized(ROM optimized)
&lt;/h2&gt;

&lt;p&gt;These instances are used when we need to perform many read and writes simultaneously. these provide low latency to IO operations to applications. These are used for setting up databases, data warehousing etc. These instances contain the &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I series&lt;/li&gt;
&lt;li&gt;D series&lt;/li&gt;
&lt;li&gt;H series
family of servers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#accelerated-computing"&gt;
  &lt;/a&gt;
  Accelerated Computing
&lt;/h2&gt;

&lt;p&gt;Accelerated computing instances use hardware accelerators, or co-processors, to perform functions, such as floating point number calculations, graphics processing, or data pattern matching, more efficiently than is possible in software running on CPUs. These are used for machine learning, speech recognition, seismic analysis etc. These instances contain the &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;P series&lt;/li&gt;
&lt;li&gt;G series&lt;/li&gt;
&lt;li&gt;F series
family of servers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These were about all the servers available on EC2 for details visit &lt;a href="https://aws.amazon.com/ec2/instance-types/"&gt;EC2&lt;/a&gt; documentation. Next we will study how we can save money if we know how long we will these EC2 instances for.&lt;/p&gt;

</description>
      <category>cloudskills</category>
      <category>cloud</category>
      <category>aws</category>
    </item>
    <item>
      <title>Day 1 of #100DaysOfCode!
</title>
      <author>Christian Falucho</author>
      <pubDate>Thu, 17 Jun 2021 02:55:50 +0000</pubDate>
      <link>https://dev.to/cfalucho/day-1-of-100daysofcode-4h3k</link>
      <guid>https://dev.to/cfalucho/day-1-of-100daysofcode-4h3k</guid>
      <description>&lt;h2&gt;Today's progressðŸ¤“&lt;/h2&gt;

&lt;p&gt;I worked on several &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/convert-celsius-to-fahrenheit"&gt;Basic Algorithm Scripting&lt;/a&gt;
problems. They were a bit challenging but it's okay because that is part of the process. I understand they will be difficult at first. So I just have to practice on them and find ways that helps me solve them.
&lt;/p&gt;

&lt;p&gt;What helped me was to visually see how the code would run. I wrote pseudocode and step by step wrote down the output. Instead of me just telling you, let me show you some examples of.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/repeat-a-string-repeat-a-string"&gt;&lt;em&gt;Repeat a String Repeat a String&lt;/em&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ApviYq6x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6e68mti4rskrrhzyk0yr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ApviYq6x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6e68mti4rskrrhzyk0yr.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Below, by writing pseudocode I was able to logically organize my thoughts and come up with a solution that works. When it comes to repeating anything. &lt;code&gt;For loops&lt;/code&gt; are the way to go as it controls flow statements and specifies iteration. &lt;/p&gt;

&lt;p&gt;Here's another example.&lt;br&gt;
&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/return-largest-numbers-in-arrays"&gt;&lt;em&gt;Return Largest Numbers in Arrays Passed&lt;/em&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yv2MHFGO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mxa74r3km260o4gvcf1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yv2MHFGO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mxa74r3km260o4gvcf1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This algorithm problem dealt with a multi-dimensional array and I have to be honest, multi-anything can be difficult because then you're having to deal with a multitude of data and it can be easy to get lost in it but what worked for me was to visually see what was happening in my code. So running &lt;code&gt;console.log&lt;/code&gt; helped me visualize the output. When I did my &lt;code&gt;if-else&lt;/code&gt; I wrote down what would be happening in within the &lt;code&gt;for loop&lt;/code&gt;. This way I knew that the logic was correct.&lt;/p&gt;

&lt;p&gt;Lastly,&lt;br&gt;
&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/confirm-the-ending"&gt;&lt;em&gt;Confirm Ending&lt;/em&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--svIj2Q3Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vqja07pkqq9zdibsjljc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--svIj2Q3Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vqja07pkqq9zdibsjljc.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This problem has to do with using JavaScript's string methods and extracting a letter from the string that matches its target. I used the &lt;code&gt;slice()&lt;/code&gt; method to extract and return a new string. Within the method, I subtracted &lt;code&gt;target&lt;/code&gt; length with &lt;code&gt;str&lt;/code&gt; length to get end of the string. Then used an equality operator to check if the end of string matches the target.&lt;/p&gt;

&lt;h2&gt;What I learned&lt;/h2&gt;

&lt;p&gt;It is good to write pseudocode and organize your thoughts before doing any actual coding. This helps to structure how your algorithm will be. &lt;/p&gt;

&lt;p&gt;It also helps to visualize what is happening. Whether it's doing a &lt;code&gt;console.log&lt;/code&gt; or manually writing out what the output will be. &lt;/p&gt;

&lt;p&gt;When it comes to repeating something or doing iteration, &lt;code&gt;for loops&lt;/code&gt; are the way to go. They helped when dealing with arrays and especially with multi-arrays by checking and iterating through their indexes.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Slice()&lt;/code&gt; method as the name implies, slices (or extracts) a section of the string and returns a new string. This helps to specify what sections of the string you want to remove and return the ones that are left without modifying the original string.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>5 ways to make money as a programmer in 2021</title>
      <author>ABDERRAHIM TIJANI</author>
      <pubDate>Thu, 17 Jun 2021 01:36:24 +0000</pubDate>
      <link>https://dev.to/abderrahimtija1/5-ways-to-make-money-as-a-programmer-in-2021-pnl</link>
      <guid>https://dev.to/abderrahimtija1/5-ways-to-make-money-as-a-programmer-in-2021-pnl</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Yr5DVtfO1kI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>programming</category>
      <category>python</category>
      <category>javascript</category>
    </item>
    <item>
      <title>.Net + Angular + PoUi : FullStackPlayGroung</title>
      <author>Lucas SilvÃ©rio</author>
      <pubDate>Thu, 17 Jun 2021 01:15:29 +0000</pubDate>
      <link>https://dev.to/silverio27/net-angular-poui-fullstackplaygroung-4f1d</link>
      <guid>https://dev.to/silverio27/net-angular-poui-fullstackplaygroung-4f1d</guid>
      <description>&lt;p&gt;Oi Pessoal!&lt;/p&gt;

&lt;p&gt;Nesse post vou mostrar como criar um crud com .net e angular utilizando &lt;a href="https://po-ui.io/"&gt;po-ui&lt;/a&gt;, uma biblioteca de componentes para angular de alta produtividade.&lt;/p&gt;

&lt;p&gt;O repositÃ³rio desse cÃ³digo vocÃª encontra &lt;a href="https://github.com/silverio27/FullStackPlayGround"&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#voc%C3%AA-precisa-ter-instalado-em-sua-m%C3%A1quia"&gt;
  &lt;/a&gt;
  VocÃª precisa ter instalado em sua mÃ¡quia:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dotnet.microsoft.com/download/dotnet/5.0"&gt;.Net5 SDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/"&gt;VsCode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/pt-br/p/windows-terminal/9n0dx20hk701"&gt;Windows Terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nodejs.org/en/download/"&gt;NodeJs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angular.io/cli"&gt;Angular - CLI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Abra uma pasta de sua preferencia no terminal.&lt;br&gt;
Crie uma pasta chamada &lt;strong&gt;src&lt;/strong&gt;.&lt;br&gt;
Criaremos os projetos dentro desta pasta.&lt;/p&gt;

&lt;p&gt;Abra o terminal e navegue atÃ© esta pasta e digite o comando abaixo para abrir o vscode.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;code .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A partir de agora vamos utilizar o terminal integrado do vscode. Aperte ctrl + ' para abrir o terminal integrado.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#backend"&gt;
  &lt;/a&gt;
  BackEnd
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#webapi"&gt;
  &lt;/a&gt;
  WebApi
&lt;/h3&gt;

&lt;p&gt;Crie o projeto com o comando abaixo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet new webapi -o api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Apague as classes &lt;strong&gt;WeatherForecast.cs&lt;/strong&gt; e &lt;strong&gt;Controllers/WeatherForecastController.cs&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Navegue atÃ© a pasta do projeto&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Crie um arquivo de gitignore&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet new gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Crie a pasta &lt;strong&gt;Models&lt;/strong&gt; e crie a classe &lt;strong&gt;Pet&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;md Models
cd . &amp;gt; Models/Pet.cs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;No menu lateral do vscode procure a pasta Models e abra a classe Pet.cs&lt;/p&gt;

&lt;p&gt;A classe Pet.cs deve ter o seguinte cÃ³digo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;api.Models&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Pet&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Nome&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Raca&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Dono&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instale o pacote Microsoft.EntityFrameworkCore.InMemory&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Esse pacote Ã© para utilizarmos um banco de dados em memÃ³ria, ideal para testes.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet add package Microsoft.EntityFrameworkCore.InMemory --version 5.0.7
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Crie a pasta &lt;strong&gt;Data&lt;/strong&gt; e crie a classe &lt;strong&gt;DataContext&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;md Data
cd . &amp;gt; Data/DataContext.cs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A classe DataContext.cs deve ter o seguinte cÃ³digo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;api.Models&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Microsoft.EntityFrameworkCore&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;api.Data&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DataContext&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DbContext&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;DataContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DbContextOptions&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;DataContext&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;base&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;DbSet&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Pet&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Pet&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Adicione as referÃªncias abaixo no topo da classe Startup.cs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;api.Data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Microsoft.EntityFrameworkCore&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Adicione o trecho abaixo no mÃ©todo ConfigureServices na classe Startup.cs&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;ConfigureServices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IServiceCollection&lt;/span&gt; &lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddControllers&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddSwaggerGen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SwaggerDoc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"v1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;OpenApiInfo&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;Title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"api"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Version&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"v1"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="c1"&gt;//adicione este trecho&lt;/span&gt;
    &lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddDbContext&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;DataContext&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseInMemoryDatabase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"DataBase"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instale a ferramenta de geraÃ§Ã£o de cÃ³digo&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet tool install -g dotnet-aspnet-codegenerator
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ou atualize caso ela jÃ¡ esteja instalada&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet tool update -g dotnet-aspnet-codegenerator
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Adicione os pacotes abaixo para gerar a nossa api rest automaticamente.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet add package Microsoft.VisualStudio.Web.CodeGeneration.Design
dotnet add package Microsoft.EntityFrameworkCore.Design
dotnet add package Microsoft.EntityFrameworkCore.SqlServer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Gere o scaffolding do model Pet.cs&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet aspnet-codegenerator controller -name PetController -async -api -m Pet -dc DataContext -outDir Controllers
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Observe o cÃ³digo criado em Controllers/PetController.cs, foi criada uma operaÃ§Ã£o de crud completo.&lt;/p&gt;

&lt;p&gt;Execute o cÃ³digo abaixo para rodar a aplicaÃ§Ã£o.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instale a extensÃ£o do vscode, Thunder Client ou utilize o postman para testar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MqZs6LUn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4idcc20ou0xbsmp33f1u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MqZs6LUn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4idcc20ou0xbsmp33f1u.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Utilize o endpoint &lt;a href="https://localhost:5001/api/pet"&gt;https://localhost:5001/api/pet&lt;/a&gt; e alterne os mÃ©todos GET (obter)/POST (criar)/PUT (atualizar)/DELETE (deletar)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yLUNEkFA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5x41edmim1j1y9h6evcu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yLUNEkFA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5x41edmim1j1y9h6evcu.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Para encerrar o aplicativo, aperte ctrl + c no terminal.&lt;/p&gt;

&lt;p&gt;Para permitir os teste do endpoint no aplicativo angular temos q liberar o cors. Em Startup.cs altere o mÃ©todo Configure:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IApplicationBuilder&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IWebHostEnvironment&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;IsDevelopment&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseDeveloperExceptionPage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseSwagger&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseSwaggerUI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SwaggerEndpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/swagger/v1/swagger.json"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"api v1"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="c1"&gt;// Comente esse trecho&lt;/span&gt;
            &lt;span class="c1"&gt;// app.UseHttpsRedirection();&lt;/span&gt;

            &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseRouting&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="c1"&gt;// adicione esse trecho&lt;/span&gt;
            &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseCors&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AllowAnyOrigin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AllowAnyMethod&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AllowAnyHeader&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

            &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseAuthorization&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseEndpoints&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;endpoints&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;endpoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapControllers&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Refatore o mÃ©todo GetPet em Controllers/PetController.cs para compatibilidade com o contrato de api do po-ui: &lt;a href="https://po-ui.io/guides/api#successMessagesForCollections"&gt;https://po-ui.io/guides/api#successMessagesForCollections&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HttpGet&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;dynamic&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetPet&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;pets&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Pet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToListAsync&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;hasNext&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pets&lt;/span&gt;
            &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nosso back-end estÃ¡ pronto!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#frontend"&gt;
  &lt;/a&gt;
  Front-End
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#webapp"&gt;
  &lt;/a&gt;
  WebApp
&lt;/h3&gt;

&lt;p&gt;Volte a raiz do projeto, a pasta &lt;strong&gt;src&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Esse projeto utiliza a versÃ£o Angular CLI: 12.0.1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Crie o projeto com o comando abaixo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ng new app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Diga sim para a pergunta sobre criaÃ§Ã£o de rota e escolha CSS como linguagem de estilo&lt;/p&gt;

&lt;p&gt;Navegue atÃ© a pasta do aplicativo.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Adicione o pacote de ui do Po-UI&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ng add @po-ui/ng-components
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Diga sim para criaÃ§Ã£o do procedimento e para criaÃ§Ã£o de menu lateral&lt;/p&gt;

&lt;p&gt;Adicione o pacote de template do PO-UI&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ng add @po-ui/ng-templates
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#componentes"&gt;
  &lt;/a&gt;
  Componentes
&lt;/h3&gt;

&lt;p&gt;crie o componente de leitura de dados&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ng generate @po-ui/ng-templates:po-page-dynamic-table
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;quando perguntado, informe o nome &lt;strong&gt;PetTable&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;crie o componente de ediÃ§Ã£o de dados&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ng generate @po-ui/ng-templates:po-page-dynamic-edit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;quando perguntado, informe o nome &lt;strong&gt;PetEdit&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rotas"&gt;
  &lt;/a&gt;
  Rotas
&lt;/h3&gt;

&lt;p&gt;Utilize o menu lateral do vscode e encontre o arquivo app/src/app/app-routing.module.ts&lt;/p&gt;

&lt;p&gt;adicione os imports no topo do arquivo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;PetEditComponent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./pet-edit/pet-edit.component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;PetTableComponent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./pet-table/pet-table.component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;No mesmo arquivo adicione as rotas:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;routes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Routes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;new&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;PetEditComponent&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;edit/:id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;PetEditComponent&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;table&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;PetTableComponent&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;pathMatch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;full&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;redirectTo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;table&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;altere o cÃ³digo de app/src/app/app.component.html para adicionar elemento router-outlet (para dar suporte as rotas) e o tÃ­tulo do aplicativo&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"po-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;po-toolbar&lt;/span&gt; &lt;span class="na"&gt;p-title=&lt;/span&gt;&lt;span class="s"&gt;"Pet App"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/po-toolbar&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;po-menu&lt;/span&gt; &lt;span class="na"&gt;[p-menus]=&lt;/span&gt;&lt;span class="s"&gt;"menus"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/po-menu&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;router-outlet&amp;gt;&amp;lt;/router-outlet&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;altere o cÃ³digo de app.component.ts para remover o cÃ³digo desnecessÃ¡rio e acrescentar a rota para tabela de pets no menu.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;PoMenuItem&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@po-ui/ng-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;app-root&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;templateUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./app.component.html&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;styleUrls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./app.component.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;AppComponent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;menus&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PoMenuItem&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Pets&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/table&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#services"&gt;
  &lt;/a&gt;
  Services
&lt;/h3&gt;

&lt;p&gt;adicione a propriedade service em app/src/environments/environment.ts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;environment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;production&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;service&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost:5000/api/pet&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;altere o endpoint e as propriedades em app/src/app/pet-table/pet-table.component.ts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="c1"&gt;// adicione esses imports&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;PoPageDynamicTableActions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;PoPageDynamicTableField&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@po-ui/ng-templates&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;environment&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;src/environments/environment&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app-pet-table&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;templateUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./pet-table.component.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;styleUrls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./pet-table.component.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;PetTableComponent&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;OnInit&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// Copie os cÃ³digos abaixo&lt;/span&gt;
  &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;apiService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;service&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


  &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;PoPageDynamicTableActions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;new&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/new&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;edit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/edit/:id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PoPageDynamicTableField&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nome&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Nome&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;raca&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;RaÃ§a&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dono&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Dono&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;adicione a propriedade p-fields em app/src/app/pet-table/pet-table.component.html&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;po-page-dynamic-table&lt;/span&gt;
  &lt;span class="na"&gt;p-title=&lt;/span&gt;&lt;span class="s"&gt;"PetTable"&lt;/span&gt;
  &lt;span class="na"&gt;[p-actions]=&lt;/span&gt;&lt;span class="s"&gt;"actions"&lt;/span&gt;
  &lt;span class="na"&gt;[p-service-api]=&lt;/span&gt;&lt;span class="s"&gt;"apiService"&lt;/span&gt;
  &lt;span class="na"&gt;[p-fields]=&lt;/span&gt;&lt;span class="s"&gt;"fields"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/po-page-dynamic-table&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;e em app/src/app/pet-edit/pet-edit.component.ts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="c1"&gt;// adicione esses imports&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;PoPageDynamicEditActions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;PoPageDynamicEditField&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@po-ui/ng-templates&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;environment&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;src/environments/environment&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app-pet-edit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;templateUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./pet-edit.component.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;styleUrls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./pet-edit.component.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;PetEditComponent&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;OnInit&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// copie os cÃ³digos abaixo&lt;/span&gt;
  &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;apiService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;service&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PoPageDynamicEditField&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nome&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Nome&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;raca&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;RaÃ§a&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dono&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Dono&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;PoPageDynamicEditActions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;save&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/table&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;saveNew&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/new&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;adicione a propriedade p-actions em app/src/app/pet-edit/&lt;strong&gt;pet-edit.component.html&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;po-page-dynamic-edit&lt;/span&gt;
  &lt;span class="na"&gt;p-title=&lt;/span&gt;&lt;span class="s"&gt;"PetEdit"&lt;/span&gt;
  &lt;span class="na"&gt;[p-service-api]=&lt;/span&gt;&lt;span class="s"&gt;"apiService"&lt;/span&gt;
  &lt;span class="na"&gt;[p-fields]=&lt;/span&gt;&lt;span class="s"&gt;"fields"&lt;/span&gt;
  &lt;span class="na"&gt;[p-actions]=&lt;/span&gt;&lt;span class="s"&gt;"actions"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/po-page-dynamic-edit&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pronto nosso front-end estÃ¡ pronto!&lt;/p&gt;

&lt;p&gt;Para executar os dois projeto, crie uma nova aba do terminal e navegue atÃ© ..src/api e execute&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;em outra aba do terminal navegue atÃ© ..src/app e execute:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ng s -o
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Eu utilizei o prÃ³prio terminal integrado com duas instancias:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y3F_3GFp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q8hg921d1tq9jprghw8n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y3F_3GFp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q8hg921d1tq9jprghw8n.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora vamos testar!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testes"&gt;
  &lt;/a&gt;
  Testes
&lt;/h3&gt;

&lt;p&gt;No navegador foi aberto a pÃ¡gina: &lt;a href="http://localhost:4200/table"&gt;http://localhost:4200/table&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Veja toda estrutura que foi criada, isso Ã© incrÃ­vel!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kUioozHD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vox3p1vanmivlo40nox0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kUioozHD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vox3p1vanmivlo40nox0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Clique no botÃ£o novo e vocÃª serÃ¡ direcionado para a pÃ¡gina com o formulÃ¡rio de ediÃ§Ã£o:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4cwIs6gW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qhjbejpytdi0xdi4q3od.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4cwIs6gW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qhjbejpytdi0xdi4q3od.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Preencha o formulÃ¡rio e clique em salvar.&lt;/p&gt;

&lt;p&gt;VocÃª serÃ¡ redirecionado para pÃ¡gina de tabela, repare que o dado foi incluÃ­do, listado e apareceu uma notificaÃ§Ã£o de sucesso.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sCEbuaCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpnqg2dp4zwensyqwh8m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sCEbuaCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpnqg2dp4zwensyqwh8m.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora vamos atualizar esse dado:&lt;/p&gt;

&lt;p&gt;Clique nos 3 pontinho no final da linha e depois em editar:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tOdl3-QN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yt0ijm40ufncyuunsfvx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tOdl3-QN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yt0ijm40ufncyuunsfvx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Altere o nome do dono e clique em salvar:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jJzV-lMR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w82k42d1ycln2i928vj3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jJzV-lMR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w82k42d1ycln2i928vj3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;VocÃª serÃ¡ redirecionado para pÃ¡gina de tabela novamente e o dado foi alterado e uma nova notificaÃ§Ã£o foi adicionada.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dyrt1KTf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qq6de5uomtkonpjsqm1l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dyrt1KTf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qq6de5uomtkonpjsqm1l.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora vamos excluir o dado:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KpQErro8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lk0wy4rlixivl5frn2l8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KpQErro8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lk0wy4rlixivl5frn2l8.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Uma janela de confirmaÃ§Ã£o vai abrir, clique em confirmar:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UrHm_8JP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtxzuw7x8iyq1gtzcbky.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UrHm_8JP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtxzuw7x8iyq1gtzcbky.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Veja que o item jÃ¡ nÃ£o aparece mais e uma notificaÃ§Ã£o foi adicionada.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DqMf5s3B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mv13lkjesgk0xlf22ul3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DqMf5s3B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mv13lkjesgk0xlf22ul3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O Post ficou um pouco grande, mas a replicaÃ§Ã£o desse projeto Ã© rÃ¡pido.&lt;/p&gt;

&lt;p&gt;O &lt;a href="https://po-ui.io/"&gt;PO-UI&lt;/a&gt; Ã© uma biblioteca fantÃ¡stica!!!&lt;br&gt;
Veja que criamos uma estrutura de crud, notificaÃ§Ã£o e navegaÃ§Ã£o de forma muito rÃ¡pida e com pouco cÃ³digo! Confira todos os componentes no portal deles.&lt;/p&gt;

&lt;p&gt;Espero que isso te ajude!    &lt;/p&gt;

</description>
      <category>angular</category>
      <category>dotnet</category>
      <category>poui</category>
    </item>
    <item>
      <title>Try React 18 with Vite, Typescript and Vercel</title>
      <author>Duc Ng</author>
      <pubDate>Thu, 17 Jun 2021 00:45:00 +0000</pubDate>
      <link>https://dev.to/ngduc/try-react-18-with-vite-typescript-and-vercel-okg</link>
      <guid>https://dev.to/ngduc/try-react-18-with-vite-typescript-and-vercel-okg</guid>
      <description>&lt;h3&gt;
  &lt;a href="#whats-new-in-react-18"&gt;
  &lt;/a&gt;
  What's New In React 18?
&lt;/h3&gt;

&lt;p&gt;Please visit &lt;a href="https://nnote.io/s/x4od5/react-18-with-vite-and-vercel"&gt;https://nnote.io/s/x4od5/react-18-with-vite-and-vercel&lt;/a&gt; for the latest updates for this article.&lt;/p&gt;

&lt;p&gt;The new version of React - React 18 alpha has just come out. From ReactJS.org:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There are no significant out-of-the-box breaking changes to component behavior. You can upgrade to React 18 with minimal or no changes to your application code, with a level of effort comparable to a typical major React release"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;New Improvements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React.lazy - new streaming server renderer support.&lt;/li&gt;
&lt;li&gt;Automatic batching.&lt;/li&gt;
&lt;li&gt;New APIs (like startTransition).&lt;/li&gt;
&lt;li&gt;Article: Whatâ€™s coming in React 18 - &lt;a href="https://reactjs.org/blog/2021/06/08/the-plan-for-react-18.html"&gt;https://reactjs.org/blog/2021/06/08/the-plan-for-react-18.html&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This tutorial will demonstrate a step-by-step guide to create your project using React 18 alpha, Typescript, Vite and deploy it to Vercel (freemium).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-vite-project"&gt;
  &lt;/a&gt;
  Create a Vite project
&lt;/h3&gt;

&lt;p&gt;Required tools:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;NodeJS&lt;/li&gt;
&lt;li&gt;Yarn (npm install yarn -g)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Run this command to create your new project:&lt;br&gt;
(Vite is a code generator similar to CRA but it takes &amp;lt; 1s to launch dev mode versus &amp;gt; 45s using CRA)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn create @vitejs/app my-project --template react-ts
cd my-project
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install the latest React 18 alpha version:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add react@alpha react-dom@alpha
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As &lt;code&gt;@types/react&lt;/code&gt; doesn't understand the new React 18's APIs or types yet, we need to update "tsconfig.json" file: after &lt;code&gt;"jsx": "react"&lt;/code&gt; add:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"types": ["react/next", "react-dom/next"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then run the new project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn dev

vite v2.3.7 dev server running at:
  &amp;gt; Local: http://localhost:3000/
  &amp;gt; Network: use `--host` to expose
  ready in 174ms.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's it! We have React 18 up and running with Typescript! Ready to rock.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6fWXv6R---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/bzcHGj2/image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6fWXv6R---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/bzcHGj2/image.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#deploy-to-vercel"&gt;
  &lt;/a&gt;
  Deploy to Vercel
&lt;/h3&gt;

&lt;p&gt;First, we need to build this project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then deploy the build (dist) directory to Vercel:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd dist
npx vercel .

...
âœ…  Deployed to: https://react-18-ts-vite-app.vercel.app [copied to clipboard] [11s]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, visit the link &lt;a href="https://react-18-ts-vite-app.vercel.app"&gt;https://react-18-ts-vite-app.vercel.app&lt;/a&gt;, we should have the app up and running there:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q3ZI7SYx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/yV7s6WM/image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q3ZI7SYx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/yV7s6WM/image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Whatâ€™s coming in React 18 - &lt;a href="https://reactjs.org/blog/2021/06/08/the-plan-for-react-18.html"&gt;https://reactjs.org/blog/2021/06/08/the-plan-for-react-18.html&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Github repository &lt;a href="https://github.com/ngduc/react-18-ts-vite-app"&gt;https://github.com/ngduc/react-18-ts-vite-app&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Please visit &lt;a href="https://nnote.io/s/x4od5/react-18-with-vite-and-vercel"&gt;https://nnote.io/s/x4od5/react-18-with-vite-and-vercel&lt;/a&gt; for the latest updates for this article.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>MicroagressÃµes em empresas de tecnologia</title>
      <author>FabrÃ­cia Diniz</author>
      <pubDate>Thu, 17 Jun 2021 00:38:55 +0000</pubDate>
      <link>https://dev.to/fabriciadiniz/microagressoes-em-empresas-de-tecnologia-89j</link>
      <guid>https://dev.to/fabriciadiniz/microagressoes-em-empresas-de-tecnologia-89j</guid>
      <description>&lt;p&gt;Ã‰ cada vez mais comum ver empresas de tecnologia querendo contratar mais mulheres e se esforÃ§ando (Ã s vezes nÃ£o tanto) para criar ambientes inclusivos. A realidade Ã© que &lt;em&gt;essa nÃ£o Ã© uma construÃ§Ã£o fÃ¡cil&lt;/em&gt; e vÃ¡rias atitudes danosas podem passar despercebidas. Hoje eu quero falar especificamente sobre microagressÃµes.&lt;/p&gt;

&lt;p&gt;Antigamente era mais fÃ¡cil identificar agressÃµes no ambiente de trabalho: eram gritos, um tapa na bunda, diminuiÃ§Ã£o das capacidades das mulheres, etc. Hoje em dia as agressÃµes estÃ£o cada vez mais sutis Ã  medida que as mais graves vÃ£o sendo combatidas &lt;em&gt;mas o sentimento que as motiva ainda permanece&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;As &lt;strong&gt;microagressÃµes&lt;/strong&gt; podem se passar por erros honestos, pois Ã© perfeitamente possÃ­vel, por exemplo, que uma pessoa nÃ£o leia uma mensagem e acabe passando por cima do trabalho de uma colega (especialmente nesses tempos remotos que vivemos). PorÃ©m, essa aÃ§Ã£o pode ser motivada por essa pessoa inconscientemente perceber a colega como tendo "menos valor". Se vocÃª questionÃ¡-la, ela provavelmente vai dizer que nÃ£o viu a mensagem mesmo, nÃ£o foi intencional. Para a pessoa que Ã© passada por cima fica aquele sentimento de &lt;em&gt;"serÃ¡ que isso aconteceu mesmo? SerÃ¡ que eu tÃ´ enxergando coisa onde nÃ£o tem?"&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;O grande ponto de observaÃ§Ã£o Ã© se a pessoa tem as mesmas atitudes com colegas homens e mulheres. Apesar de importante critÃ©rio de "desempate" isso pode nÃ£o ser fÃ¡cil de perceber, as diferenÃ§as de comunicaÃ§Ã£o podem acontecer em ambientes privados, por exemplo. AlÃ©m disso, para as pessoas que realizam as microagressÃµes a sua prÃ³pria culpa nÃ£o Ã© tÃ£o clara. O &lt;em&gt;"me desculpe se vocÃª se sentiu ofendida"&lt;/em&gt; Ã© um sinal de que a pessoa nÃ£o percebe o problema em suas aÃ§Ãµes e padrÃ£o de pensamento e dificilmente tomarÃ¡ alguma aÃ§Ã£o para melhorar (ou ela nunca aprendeu a se desculpar).&lt;/p&gt;

&lt;p&gt;Agora, o mais importante Ã©: como se lida com uma pessoa que estÃ¡ cometendo uma microagressÃ£o se ela nÃ£o percebe o seu prÃ³prio viÃ©s mental? Do meu ponto de vista, Ã© preciso que a empresa tome uma aÃ§Ã£o e nÃ£o a pessoa que foi vÃ­tima. A pessoa na maioria das vezes jÃ¡ nÃ£o enxerga o seu viÃ©s, de forma que Ã© muito fÃ¡cil apenas descartar as reclamaÃ§Ãµes recebidas. Cobrar que a pessoa que jÃ¡ estÃ¡ se sentindo mal resolva a situaÃ§Ã£o apenas a submete a mais uma agressÃ£o.&lt;/p&gt;

&lt;p&gt;Sinceramente, enquanto eu escrevo isso eu consigo visualizar as desculpas sendo dadas e o sentimento de "eu preciso pisar em cascas de ovos perto dessas mulheres mimimizentas". Eu tenho ciÃªncia de que essa Ã© uma mudanÃ§a que raramente pode ser imposta se a pessoa nÃ£o enxergar valor nela. &lt;strong&gt;E passar o valor dessa mudanÃ§a talvez seja o grande X da questÃ£o.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Normalmente, pessoas do lado mais privilegiado do espectro &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;nÃ£o percebem seus privilÃ©gios;&lt;/li&gt;
&lt;li&gt;nunca precisaram se preocupar com as suas aÃ§Ãµes estarem sendo danosas a outras pessoas.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Vamos de exemplo, inspirado no livro &lt;a href="https://amzn.to/3gHgCKn"&gt;RÃ¡pido e Devagar&lt;/a&gt; do Daniel Kahneman: em uma reuniÃ£o de tomada de decisÃ£o, inconscientemente as pessoas tendem a concordar com quem deu a sua opiniÃ£o primeiro e quem fala mais "alto", com mais convicÃ§Ã£o. Essa pessoa normalmente nÃ£o se preocupa que as pessoas estarem acatando o que ela fala o tempo todo representa um silenciamento da colega mulher que fala de forma mais tÃ­mida e nunca tem as ideias acatadas. Pessoas assim costumam refletir pouco sobre si mesmas e sobre seus atos, tendendo a depositar a culpa na aÃ§Ã£o de outras pessoas, nÃ£o conseguindo ter empatia pela colega que nÃ£o Ã© ouvida.&lt;/p&gt;

&lt;p&gt;Se esse Ãºltimo parÃ¡grafo te incomodou pela generalizaÃ§Ã£o, faÃ§a um exercÃ­cio: veja se vocÃª consegue anotar pelo menos 3 privilÃ©gios que vocÃª usufrua no seu dia a dia. VocÃª consegue identificar momentos em que vocÃª estÃ¡ sendo privilegiado em detrimento de alguma outra pessoa e vocÃª combate isso na vida real e nÃ£o sÃ³ na sua cabeÃ§a? &lt;strong&gt;Viver usufruindo de privilÃ©gios Ã© bem mais fÃ¡cil do que ter a consciÃªncia dos momentos em que eles existem.&lt;/strong&gt; Apenas ter consciÃªncia Ã© muito mais fÃ¡cil do que realmente tomar alguma atitude para equalizar a situaÃ§Ã£o.&lt;/p&gt;

&lt;p&gt;Eu, FabrÃ­cia, ainda enxergo uma barreira a mais. Atualmente as mulheres constituem cerca de 25% dos profissionais de TI no Brasil. Uma porcentagem menor ainda ocupa cargos de lideranÃ§a. Ou seja, uma mulher tem uma chance enorme de ter um lÃ­der homem e esse lÃ­der precisa estar ciente de &lt;strong&gt;privilÃ©gios&lt;/strong&gt;, &lt;strong&gt;vieses inconscientes&lt;/strong&gt; e &lt;strong&gt;microagressÃµes&lt;/strong&gt; para evitar que o discurso de inclusÃ£o seja um discurso vazio sÃ³ para a empresa sair bem na mÃ­dia.&lt;/p&gt;

&lt;p&gt;Considerando o baixo percentual de pessoas de minorias em geral nesses cargos, eu vejo as lideranÃ§as tendo um grande trabalho de aprendizagem e reflexÃ£o sobre seus prÃ³prios privilÃ©gios e a maneira como as suas atitudes podem agravar uma microagressÃ£o sofrida, mesmo que de forma nÃ£o intencional, por falta de empatia com aqueles historicamente menos privilegiados.&lt;/p&gt;

&lt;p&gt;A conclusÃ£o que eu posso tirar Ã©: se a empresa possui o valor de inclusÃ£o de diversidade, &lt;strong&gt;todas as pessoas que trabalham nela precisam ser bastiÃ£s desse valor&lt;/strong&gt;, reconhecendo inclusive aÃ§Ãµes sutis que o contrariam. Uma boa saÃ­da seria promover periodicamente cursos obrigatÃ³rios de inclusÃ£o que saÃ­ssem do bÃ¡sico e entrassem nesses temas mais "espinhosos" e sutis. Para as lideranÃ§as, reforÃ§o extra no trabalho de empatia. Se a pessoa nÃ£o enxerga nenhuma vantagem nesse tipo de aÃ§Ã£o de combate, jÃ¡ comeÃ§ou errado, volte 5 casas.&lt;/p&gt;

&lt;p&gt;Eu espero que esse texto possa trazer alguma reflexÃ£o sobre a temÃ¡tica e como sempre estou aberta Ã  continuar a discussÃ£o nos comentÃ¡rios.&lt;/p&gt;

</description>
      <category>braziliandevs</category>
    </item>
    <item>
      <title>Algorithm Tutorial: Intro to Heaps and Priority Queue Implementation</title>
      <author>Daniel Sasse</author>
      <pubDate>Thu, 17 Jun 2021 00:37:07 +0000</pubDate>
      <link>https://dev.to/dsasse07/what-the-heap-utilizing-a-priority-queue-25j9</link>
      <guid>https://dev.to/dsasse07/what-the-heap-utilizing-a-priority-queue-25j9</guid>
      <description>&lt;p&gt;In this edition of the Algorithm Tutorial series, we're going to break down the &lt;a href="https://en.wikipedia.org/wiki/Heap_%28data_structure%29"&gt;Heap data structure&lt;/a&gt; and and its utilization to implement a priority queue. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contents"&gt;
  &lt;/a&gt;
  Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#background"&gt;Background&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-structure"&gt;Heap Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#implementation"&gt;Implementation&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#initialization"&gt;Initialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#inserting-values"&gt;Inserting Values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#extracting-values"&gt;Extracting Values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#as-a-priority-queue"&gt;As a Priority Queue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#full-code"&gt;Full Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#background"&gt;
  &lt;/a&gt;
  Background
&lt;/h3&gt;

&lt;p&gt;Imagine you had a list of values that you had to operate on, and needed to use the values from greatest to least or vice versa. A simple approach, would be to sort the list, and then proceed in the desired order. However, this can become more complicated if new values are continually added to the list, requiring the list to be reordered before you can proceed. Since re-sorting the listed could potentially require comparing the new value to every other entry element in the list, this can become a slow process as the list grows.&lt;/p&gt;

&lt;p&gt;Secondly, imagine the waiting area of an emergency room. As new patients come in, they could simply be added to a queue to wait and see a doctor, however this wouldn't account for the patient's severity of symptoms. A patient suffering from a heart attack, should clearly be a higher &lt;strong&gt;priority&lt;/strong&gt; than someone with a broken toe and should be helped first, even if they joined the queue last. How to we adjust our list/queue to account for priority, despite when it was added?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#heap-structure"&gt;
  &lt;/a&gt;
  Heap Structure
&lt;/h3&gt;

&lt;p&gt;What makes a heap faster and more efficient than simply resorting a list over and over is its tree based structure according to is heap property (&lt;em&gt;max&lt;/em&gt; or &lt;em&gt;min&lt;/em&gt;). In a max heap, the root of the tree, will always be the element with the maximum value being used to compare, and for each node of the tree the children of a node must be less than or equal to the value of the node.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xvrB7rKc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/trp21m9bqyee86o351xh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xvrB7rKc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/trp21m9bqyee86o351xh.png" alt="Tree Representation of a Heap"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Above, we see a model of a a common heap implementation called a &lt;strong&gt;binary heap&lt;/strong&gt;, specifically a &lt;em&gt;max&lt;/em&gt; heap. If we imagine a new value of 200 being added to the end of the queue (bottom of the tree), instead of comparing it to every other value as you would when sorting an array, you would only need to compare it to its parent to determine if it should be higher in the queue or remain where it is. Utilizing this, it becomes significantly more efficient to insert new values into our heap at the correct position. In terms of Big O notation, this insertion process would be modeled as O(log n) since we have to make &lt;em&gt;at most&lt;/em&gt; one comparison per tier of the tree, whereas comparing potentially every item, O(n), if we were inserting into an already sorted list.&lt;/p&gt;

&lt;p&gt;In terms of working with a heap, the process will vary depending on the language. Python, for example, has the &lt;a href="https://docs.python.org/3/library/heapq.html"&gt;heapq library&lt;/a&gt; which can be imported and worked with immediately, however in Javascript there is no native Heap data structure and it must be implemented manually. Let's walk through how this could be done in Javascript.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#initialization"&gt;
  &lt;/a&gt;
  Initialization
&lt;/h4&gt;

&lt;p&gt;To implement a binary max heap in Javascript, we'll start by defining a new class &lt;code&gt;MaxHeap&lt;/code&gt; with a value property of an empty array. We can optionally initialize a &lt;code&gt;size&lt;/code&gt; property to keep count of the number of values in our heap to improve the readability of future code instead of having to write &lt;code&gt;this.values.length&lt;/code&gt; each time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;MaxHeap&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;If a heap is a tree structure, why are we initializing the heap with an empty array?&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Any binary tree structure can be stored as an array (as opposed to creating a Tree class) due to the relationship between the index of any single node and both of its child nodes as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f3HzR-AK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dj55btwp6nbg8gbl96xw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f3HzR-AK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dj55btwp6nbg8gbl96xw.png" alt="Binary Heap Tree vs Array Structures Comparison"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For any node &lt;code&gt;n&lt;/code&gt;, we can calculate the index of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Its left child = &lt;code&gt;2 * n + 1&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Its right child = &lt;code&gt;2 * n + 2&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Its parent = &lt;code&gt;Math.floor( (n - 1) / 2 )&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example, the root node has an index of 0, with its left child being &lt;code&gt;1&lt;/code&gt; and its right child being &lt;code&gt;2&lt;/code&gt;. Node &lt;code&gt;2&lt;/code&gt;s children would be at indices &lt;code&gt;5&lt;/code&gt; and &lt;code&gt;6&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#inserting-values"&gt;
  &lt;/a&gt;
  Inserting Values
&lt;/h4&gt;

&lt;p&gt;To add values to the heap, we will add then to the next empty position in the heap. In the tree structure, this means the value will be in the bottom tier of the tree, in the left-most empty child spot. Comparing this to the array structure, we will be adding it to the end of the array( think &lt;code&gt;.push()&lt;/code&gt; ). Once the value is in the heap, we need to compare it to its parent node(s) and we will swap this new node with its parent if the heap property is currently being violated. &lt;/p&gt;

&lt;p&gt;For instance, in the previous example of inserting 200 into the max heap we would need continue swapping 200 with each parent value until it reached the root since 200 would be the largest value in the entire heap. In the case of a &lt;strong&gt;priority queue&lt;/strong&gt; we would use a similar swap pattern, but we would compare whatever property we define for the priority. This process of swapping the node upwards through the heap goes by a number of names, but I will refer to it as "bubbling up".&lt;/p&gt;

&lt;p&gt;Here is an implementation of how we can insert a new value into the heap. If more than one value is in the heap, we will &lt;code&gt;bubbleUp()&lt;/code&gt;, moving the newest value to its correct position:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;MaxHeap&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="c1"&gt;// If no value, do nothing&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="c1"&gt;// Insert the value, and increment the size of the heap&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
    &lt;span class="c1"&gt;// Check to see if there is not more than 1 item in the heap&lt;/span&gt;
    &lt;span class="c1"&gt;// If there is only 1 item, there is no need to bubble up&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_bubbleUp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;_bubbleUp&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="c1"&gt;// Grab the most recently added value and its parent&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;currentIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;parentIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentIndex&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;// Swap the new node with its parent until the new node either&lt;/span&gt;
    &lt;span class="c1"&gt;// becomes the root, or is no longer greater than its parent&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;parentIndex&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;currentIndex&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;parentIndex&lt;/span&gt;&lt;span class="p"&gt;]){&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_swap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentIndex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;parentIndex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nx"&gt;currentIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;parentIndex&lt;/span&gt;
      &lt;span class="nx"&gt;parentIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;currentIndex&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Helper function using object destructuring to swap the elements at two indices&lt;/span&gt;
  &lt;span class="nx"&gt;_swap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index2&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index2&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MaxHeap&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;   
&lt;span class="c1"&gt;// Resulting Heap: [100, 36, 19, 25, 7, 1, 17, 2, 3]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#extracting-values"&gt;
  &lt;/a&gt;
  Extracting Values
&lt;/h4&gt;

&lt;p&gt;The purpose of using a heap in this fashion, is to quickly access the max/min value (or the value with the max/mix priority) depending on whether you are using a max or min heap. Because of how it is structure and the "bubbling" mechanism, this value will always be the first item in the heap array we have created, and this is the value we want to extract.&lt;/p&gt;

&lt;p&gt;The problem we have, is that if we simply removed the first item in an array with &lt;code&gt;unshift()&lt;/code&gt;, the entire array would need to be reindexed, as each index would need to be reassigned a new value. The only way to avoid this re-indexing, is if we removed the last item in a list, which is what we will do here by swapping the first and last items in the heap and then extracting.&lt;/p&gt;

&lt;p&gt;Initially after the swap, the rule governing the heap (max/min) will be violated, and we must restore it similar to how we "bubbled up" before. In this case, we will need to compare this new out-of-place value with each of its children, and cause it to "trickle down" until it the heap rule is restored. This process is also sometimes referred to as "sifting down". As we compare the node with each of its children, we will swap with whichever child is greater (in max heap) or lesser (in min heap).&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;MaxHeap&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="cm"&gt;/**
 *
 */&lt;/span&gt;

  &lt;span class="nx"&gt;extract&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="c1"&gt;// Swap the value to be extracted (root) with the last item in the heap&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lastIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_swap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lastIndex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;// Remove the value to be extracted &lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;extractValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;
    &lt;span class="c1"&gt;// If there is more than one remaining value, we must restore the heap rule&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_trickleDown&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;extractValue&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;_trickleDown&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;currentIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="cm"&gt;/** 
    * These will be the indexes corresponding to the left and right 
    * child of the node at currentIndex
    * swapIdx will be which of the children the currentIndex will
    * actually switch with, if any
    */&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;leftIdx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rightIdx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;swapIdx&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;leftIdx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;currentIndex&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="nx"&gt;rightIdx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;currentIndex&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
        &lt;span class="nx"&gt;swapIdx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
        &lt;span class="cm"&gt;/**
        * If there is a valid left child and it is greater than the current value,
        * prepare to swap it
        */&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="nx"&gt;leftIdx&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;currentIndex&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;leftIdx&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;swapIdx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;leftIdx&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="cm"&gt;/**
        * If there is a valid right child and it is greater than the current value,
        * prepare to swap it if we haven't already prepared to swap with left child.
        * If we have prepared to swap with left child, we should only choose to swapIdx
        * with the right child instead if it is greater than the left child, meaning
        * it better fits the heap rule
        */&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="nx"&gt;rightIdx&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
          &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;swapIdx&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;currentIndex&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;rightIdx&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;
           &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;swapIdx&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; 
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;rightIdx&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;leftIdx&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;swapIdx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rightIdx&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;swapIdx&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt; &lt;span class="c1"&gt;// If no possible swap was ID'd, we're done&lt;/span&gt;
        &lt;span class="c1"&gt;// Swap the parent with the identified child, update the currentIndex, and repeat&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_swap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentIndex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;swapIdx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;currentIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;swapIdx&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Example Extraction using previously created heap:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extract&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// 100&lt;/span&gt;
&lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt; &lt;span class="c1"&gt;// [36, 25, 19, 3, 7, 1, 17, 2]&lt;/span&gt;
&lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extract&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// 36&lt;/span&gt;
&lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt; &lt;span class="c1"&gt;// [25, 7, 19, 3, 2, 1, 17]&lt;/span&gt;
&lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extract&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// 25&lt;/span&gt;
&lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt; &lt;span class="c1"&gt;// [19, 7, 17, 3, 2, 1]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#as-a-priority-queue"&gt;
  &lt;/a&gt;
  As a Priority Queue
&lt;/h4&gt;

&lt;p&gt;In the emergency room example discussed in the introduction, it would be impractical to keep track of the order to see patients just by the order that they arrived. It makes sense then, to use a priority queue, where the next patient to be seen is the one with the most urgent needs, regardless of when they entered the queue. This is a perfect use case for a heap, but instead of each element in the heap being just a number, there will likely be other information such as a patient name or id#. In this case, when we insert the value into the heap, we could insert it as an object with a key:value pairs for the patient and the priority level. We would then need to adjust the &lt;code&gt;bubbleUp()&lt;/code&gt; and &lt;code&gt;trickleDown()&lt;/code&gt; methods to compare the value of the priority key for each element.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#full-code"&gt;
  &lt;/a&gt;
  Full Code
&lt;/h3&gt;

&lt;p&gt;Combining the code above, below you will find two full samples of heap implementation. The first is for a maxHeap based on the value of the element. The second would be a possible implementation for a _&lt;em&gt;maxHeap priority queue&lt;/em&gt; where the values will be placed according with the highest priority numbers being the first to extract.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
