<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Frost Effect in CSS</title>
      <author>Ustariz Enzo</author>
      <pubDate>Mon, 24 Jan 2022 11:55:44 +0000</pubDate>
      <link>https://dev.to/ziratsu/frost-effect-in-css-5f21</link>
      <guid>https://dev.to/ziratsu/frost-effect-in-css-5f21</guid>
      <description>&lt;p&gt;Hey &lt;strong&gt;fellow creators&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;How to create a &lt;em&gt;glassomophorism (frost effect)&lt;/em&gt; in CSS? &lt;/p&gt;

&lt;p&gt;If you prefer to watch the video &lt;strong&gt;version&lt;/strong&gt;, it's right here :&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/8_oovFfb_fw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-the-html-structure"&gt;
  &lt;/a&gt;
  1. The HTML structure.
&lt;/h2&gt;

&lt;p&gt;Create a button inside two divs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"home"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Welcome&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-style-your-button"&gt;
  &lt;/a&gt;
  2. Style your button.
&lt;/h2&gt;

&lt;p&gt;Add an image to the background of the page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.home&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("https://images.unsplash.com/photo-1631515998058-69359a50da68?ixlib")&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-repeat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;no-repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-attachment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;125px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt; &lt;br&gt;
Now style the container that will look frosted:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;450px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;275px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;.4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inherit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(The &lt;em&gt;z-index&lt;/em&gt; will create a new stacking context).&lt;/p&gt;

&lt;p&gt;You do inherit the background of the page at the same position (if you comment it, you’ll see that otherwise you inherit the background as a whole inside of that container, which isn’t what we want!).&lt;/p&gt;

&lt;p&gt; &lt;br&gt;
Next, style the button:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Lora&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#b6604f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f1f1f1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;27px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;letter-spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;800&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-add-the-frost-effect"&gt;
  &lt;/a&gt;
  3. Add the frost effect!
&lt;/h2&gt;

&lt;p&gt;You need to use the pseudo-element &lt;em&gt;before&lt;/em&gt; in order to create that effect:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt;&lt;span class="nd"&gt;::before&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inherit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;inset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;blur&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The z-index will also create a new stacking context, but since the pseudo-element before is kind of a child of the container, it will always stay at the top of the container.&lt;/p&gt;

&lt;p&gt;Bravo, you are done!&lt;/p&gt;

&lt;p&gt; &lt;br&gt;
Come and take a look at my &lt;strong&gt;Youtube channel&lt;/strong&gt;: &lt;a href="https://www.youtube.com/c/Learntocreate/videos"&gt;https://www.youtube.com/c/Learntocreate/videos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See you soon!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enzo. &lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Trying Out Various Settings for Amazon CloudFront Publishing</title>
      <author>Yasunori Kirimoto</author>
      <pubDate>Mon, 24 Jan 2022 11:11:27 +0000</pubDate>
      <link>https://dev.to/aws-builders/trying-out-various-settings-for-amazon-cloudfront-publishing-28pp</link>
      <guid>https://dev.to/aws-builders/trying-out-various-settings-for-amazon-cloudfront-publishing-28pp</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4i3isyvE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/logo/aws/cloudfront.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4i3isyvE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/logo/aws/cloudfront.png" alt="img" width="300" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ive-been-experimenting-with-various-settings-for-amazon-cloudfront-publishing-tada"&gt;
  &lt;/a&gt;
  I've been experimenting with various settings for Amazon CloudFront publishing 🎉
&lt;/h3&gt;



&lt;p&gt;Advance Preparation&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Upload the set of files you want to publish to Amazon S3 in advance.&lt;/li&gt;
&lt;li&gt;You can leave the settings private.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pxli3TnR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-001_07.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pxli3TnR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-001_07.png" alt="img" width="880" height="351"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0pA9K1IF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-001_08.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0pA9K1IF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-001_08.png" alt="img" width="880" height="683"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#publishing-in-combination-with-amazon-s3"&gt;
  &lt;/a&gt;
  Publishing in combination with Amazon S3
&lt;/h2&gt;

&lt;p&gt;This is a method of publishing using a combination of Amazon CloudFront and Amazon S3. &lt;/p&gt;

&lt;p&gt;AWS Console → Click "CloudFront."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_j6WdSgl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-001_01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_j6WdSgl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-001_01.png" alt="img" width="880" height="684"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click "Create CloudFront Distribution."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UiiUJ05X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-001_02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UiiUJ05X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-001_02.png" alt="img" width="880" height="684"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Specify the domain of the target S3, specify the S3 bucket access, set the policy to auto-update, and set the settings to redirect to HTTPS. Set the root object to index.html in S3. Leave the rest of the settings as default.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8PF79IG_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-001_03.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8PF79IG_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-001_03.png" alt="img" width="880" height="3801"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After creation, check the S3 bucket to confirm that the policy has been set automatically.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FQnAr-yk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-001_04.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FQnAr-yk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-001_04.png" alt="img" width="880" height="684"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Try accessing the URL of the CloudFront distribution for S3 that was created.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UoPMk1tp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-001_05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UoPMk1tp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-001_05.png" alt="img" width="880" height="684"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;S3 is accessed via CloudFront, and the WebSite is displayed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EFjYjoB6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-001_06.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EFjYjoB6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-001_06.png" alt="img" width="880" height="726"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#publishing-only-the-specified-ip"&gt;
  &lt;/a&gt;
  Publishing only the specified IP
&lt;/h2&gt;

&lt;p&gt;This is a method for publishing only the specified IP in Amazon CloudFront.&lt;/p&gt;

&lt;p&gt;As preliminary preparation, display the WebSite in S3 via CloudFront.&lt;/p&gt;

&lt;p&gt;Click "Function" → Click "Create Function."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s_7V2PMr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-003_01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s_7V2PMr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-003_01.png" alt="img" width="880" height="684"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Set the function name and description → Click "Create Function."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E_YnTvzZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-003_02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E_YnTvzZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-003_02.png" alt="img" width="880" height="684"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Configure the function to restrict IP in CloudFront Functions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;clientIP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;viewer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// Specify the IP you want to allow&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;allowIP&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;IP to allow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;clientIP&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;allowIP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;statusDescription&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Forbidden&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9qRLiIov--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-003_03.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9qRLiIov--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-003_03.png" alt="img" width="880" height="683"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Publish → Click "Publish Function."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jiiwtwjC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-003_04.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jiiwtwjC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-003_04.png" alt="img" width="880" height="684"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After creating the function, the Association menu will appear, so click "Add Association."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PgAAte8z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-003_05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PgAAte8z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-003_05.png" alt="img" width="880" height="684"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Set the target distribution, event type, and cache behavior. → Click "Add Association."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m58eAP49--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-003_06.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m58eAP49--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-003_06.png" alt="img" width="880" height="683"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check if the association has been made.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I0BRuqRD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-003_07.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I0BRuqRD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-003_07.png" alt="img" width="880" height="683"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you access the URL from the IP you set, the WebSite will be displayed. WebSite will not be displayed except for the specified IP. &lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#basic-authentication-publication"&gt;
  &lt;/a&gt;
  Basic Authentication Publication
&lt;/h2&gt;

&lt;p&gt;This is a method of publishing using Basic Authentication with Amazon CloudFront.&lt;/p&gt;

&lt;p&gt;As preliminary preparation, display the WebSite in S3 via CloudFront.&lt;/p&gt;

&lt;p&gt;Click "Function" → Click "Create Function."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dgG539oB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-004_01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dgG539oB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-004_01.png" alt="img" width="880" height="684"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Set the function name and description. → Click "Create Function."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jtmyut-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-004_02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jtmyut-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-004_02.png" alt="img" width="880" height="683"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Configure the function for Basic authentication in CloudFront Functions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// Set user and password&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;set user&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;pass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;set password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;authValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Basic &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;base64&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;authorization&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;undefined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;authorization&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;authValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;401&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;statusDescription&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Unauthorized&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;www-authenticate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Basic&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yHNlWo9k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-004_03.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yHNlWo9k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-004_03.png" alt="img" width="880" height="682"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Publish → Click "Publish Function."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NaPqbAzk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-004_04.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NaPqbAzk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-004_04.png" alt="img" width="880" height="683"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After creating the function, the Association menu will appear, so click "Add Association."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XEJ3QQFZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-004_05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XEJ3QQFZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-004_05.png" alt="img" width="880" height="684"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Set the target distribution, event type, and cache behavior. → Click "Add Association."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BaI7Qs5I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-004_06.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BaI7Qs5I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-004_06.png" alt="img" width="880" height="683"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Confirm that the association has been made.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---PkVG9mK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-004_07.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---PkVG9mK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-004_07.png" alt="img" width="880" height="684"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you access the URL, a dialog for entering the user and password will appear.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YIhYDhzB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-004_08.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YIhYDhzB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-004_08.png" alt="img" width="880" height="723"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When enter the configured user and password, the WebSite will be displayed.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#vuejs-routing-support-extra"&gt;
  &lt;/a&gt;
  Vue.js Routing Support (extra)
&lt;/h2&gt;

&lt;p&gt;This is how to support Vue.js routing with Amazon CloudFront.&lt;/p&gt;

&lt;p&gt;This is a solution for displaying the routing page correctly when deploying an application built with Vue.js.&lt;/p&gt;

&lt;p&gt;To prepare in advance, display the WebSite in S3 via CloudFront.&lt;/p&gt;

&lt;p&gt;Click "Error Page" → Click "Create Custom Error Response."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RV7CO6yL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-002_01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RV7CO6yL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-002_01.png" alt="img" width="880" height="685"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Configure with error code 403 and other capture contents → Click "Create Custom Error Response."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_7HAorUf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-002_02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_7HAorUf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-002_02.png" alt="img" width="880" height="683"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Configure with error code 404 and other contents of the capture → Click "Create Custom Error Response."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CwmSg7sc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-002_03.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CwmSg7sc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-002_03.png" alt="img" width="880" height="685"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Confirm the settings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_x8S1Np4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-002_04.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_x8S1Np4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-002_04.png" alt="img" width="880" height="683"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The routing page will now be displayed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KgNkDiTI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-002_05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KgNkDiTI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/amazon-cloudfront-002_05.png" alt="img" width="880" height="726"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;By using Amazon CloudFront, it is possible to publish in combination with Amazon S3 and to perform IP restrictions and Basic authentication in conjunction with CloudFront Functions 💡 &lt;/p&gt;

&lt;p&gt;In my next article, I would like to introduce the way combined with AWS WAF.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>amazoncloudfront</category>
      <category>cloudfront</category>
      <category>s3</category>
    </item>
    <item>
      <title>Scrapping PngAAA and Made an API of it on whollyapi - Story Time</title>
      <author>Shaswat Raj</author>
      <pubDate>Mon, 24 Jan 2022 11:09:01 +0000</pubDate>
      <link>https://dev.to/sh20raj/scrapping-pngaaa-and-made-an-api-of-it-on-whollyapi-story-time-1fma</link>
      <guid>https://dev.to/sh20raj/scrapping-pngaaa-and-made-an-api-of-it-on-whollyapi-story-time-1fma</guid>
      <description>&lt;p&gt;Wholly API :- &lt;a href="https://wholly-api.herokuapp.com/" rel="dofollow"&gt;&lt;/a&gt;&lt;a href="https://wholly-api.herokuapp.com/"&gt;https://wholly-api.herokuapp.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;References - &lt;a href="https://www.google.com/search?q=Website+Scrapping"&gt;Website Scrapping &lt;/a&gt;&lt;br&gt;
Web scraping, web harvesting, or web data extraction is data scraping used for extracting data from websites. The web scraping software may directly access the World Wide Web using the Hypertext Transfer Protocol or a web browser. &lt;a href="https://en.wikipedia.org/wiki/Web_scraping"&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#see-this-is-the-api-endpoint"&gt;
  &lt;/a&gt;
  See This is the API endpoint-
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;https://wholly-api.herokuapp.com/websites/pngaaa.com/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;See this website &lt;code&gt;https://www.pngaaa.com/&lt;/code&gt; has no feature of API so that a user can not show the website's (&lt;a href="https://www.pngaaa.com/"&gt;https://www.pngaaa.com/&lt;/a&gt;) content on their website.&lt;/p&gt;

&lt;p&gt;Fetch Using JavaScript :- &lt;a href="https://www.google.com/search?q=javascript+fetch+json+from+url"&gt;Ref. Google&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But after scrapping it and made a API for the users. Users can fetch the websites content on there website &lt;strong&gt;even using Pure JavaScript&lt;/strong&gt;.&lt;br&gt;
The different URLs will return you different results in JSON format. Just grab the JSON Using any Server Side or Client Side Language and Show on website.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#some-api-uses-are-given-below-"&gt;
  &lt;/a&gt;
  Some API Uses are Given Below :-
&lt;/h2&gt;

&lt;p&gt;If PngAAA.com have any worry or problem for this just contact me. I will remove it. This is Just made for educational purpose.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#fetch-categories"&gt;
  &lt;/a&gt;
  Fetch Categories
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;https://wholly-api.herokuapp.com/websites/pngaaa.com/categories.php&lt;/code&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#fetch-search-results"&gt;
  &lt;/a&gt;
  Fetch Search Results
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;https://wholly-api.herokuapp.com/websites/pngaaa.com/search.php?q={{Your Query String}}&amp;amp;page={{Your Page no.}}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;See an Example Here :- &lt;/p&gt;

&lt;p&gt;&lt;a href="https://wholly-api.herokuapp.com/websites/pngaaa.com/search.php?q=dog&amp;amp;page=10"&gt;https://wholly-api.herokuapp.com/websites/pngaaa.com/search.php?q=dog&amp;amp;page=10&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will return you Something like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"status"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"query"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"dog"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"page"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"10"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017701"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"822790"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"2077049"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1654031"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"2152102"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"2482165"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"4024007"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"4031578"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"4450534"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"2607152"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"2607021"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"3467009"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"3588913"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"4417695"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"476470"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"3269049"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1346069"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"3269105"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"874509"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"2388600"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"3190080"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"4417699"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"3190068"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"3467051"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"421309"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"598495"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"265445"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"421378"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"421416"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"476402"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"730339"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"4024023"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"4023993"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"4024014"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"774073"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1012741"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1012876"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"2467859"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"488821"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"488826"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"488828"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"730398"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"730401"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1353186"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1353171"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"4376447"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"4376472"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"3351561"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"3394213"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"3466976"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"616844"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1012866"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1147281"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"2467854"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"3402659"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"315805"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"4031580"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"616928"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"265431"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"265463"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"265485"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"616796"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"616815"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"774154"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"874538"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"2388606"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"3201266"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"3399937"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"4417776"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"265425"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"476396"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"476494"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"476407"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"530053"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"874542"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"822745"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"2104714"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1403416"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1653907"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"4031539"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"suggetions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"Dog Png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"Dog Logo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"Doge Png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"Hot Dog Png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"Dog Transparent Background"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will get So many id's in data array of the JSON and See What to do with this id's. This are basically Image id's.&lt;/p&gt;

&lt;p&gt;Let's Assume &lt;code&gt;1017701&lt;/code&gt; this is our id.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Direct Download URL - &lt;a href="https://www.pngaaa.com/api-download/1017701"&gt;https://www.pngaaa.com/api-download/1017701&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;See More Usage Below&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#fetch-image-details-using-id"&gt;
  &lt;/a&gt;
  Fetch Image details Using ID
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;https://wholly-api.herokuapp.com/websites/pngaaa.com/details.php?id={{Your Image ID}}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;See Example Here :-&lt;br&gt;
&lt;a href="https://wholly-api.herokuapp.com/websites/pngaaa.com/details.php?id=1017701"&gt;https://wholly-api.herokuapp.com/websites/pngaaa.com/details.php?id=1017701&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will return you something like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"status"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1017701"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Locket Necklace Dog Tag Military - Dog Tags Transparent Background Png,Dog Tags Png - free transparent png images - pngaaa.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"size"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"162.81 KB"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"download"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https:&lt;/span&gt;&lt;span class="se"&gt;\/\/&lt;/span&gt;&lt;span class="s2"&gt;www.pngaaa.com&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;api-download&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;1017701"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"middle_size_image"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https:&lt;/span&gt;&lt;span class="se"&gt;\/\/&lt;/span&gt;&lt;span class="s2"&gt;image.pngaaa.com&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;701&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;1017701-middle.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"small_size_image"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https:&lt;/span&gt;&lt;span class="se"&gt;\/\/&lt;/span&gt;&lt;span class="s2"&gt;image.pngaaa.com&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;701&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;1017701-small.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"filetype"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"PNG (72dpi)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"related"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017681"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017682"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017683"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017684"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017686"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017689"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017690"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017692"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017693"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017694"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017697"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017703"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017704"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017707"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017710"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017712"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017714"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017717"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017719"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017720"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017722"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017723"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017724"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017725"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017726"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017727"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017728"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017731"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017743"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017744"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017747"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017749"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017751"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017755"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017758"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017760"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017762"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017763"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017764"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017765"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017771"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017774"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017775"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017780"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017782"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017783"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017786"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017787"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017791"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"1017793"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"date"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2020-03-31 11:17:25"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"license"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"License:Non-commercial Use"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"dimensions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"441 x 1201"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;You are getting title, other size image's link, direct download link and many more thing...&lt;/li&gt;
&lt;li&gt;You are getting some related images id also that can show related images.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#is-website-scraping-is-a-crime"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.google.com/search?q=is+website+scrapping+is+a+crime"&gt;Is website scraping is a crime&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Web scraping itself is not illegal. As a matter of fact, web scraping – or web crawling, were historically associated with well-known search engines like Google or Bing. These search engines crawl sites and index the web. ... A great example when web scraping can be illegal is when you try to scrape nonpublic data.&lt;/p&gt;

&lt;p&gt;Still -&lt;/p&gt;

&lt;p&gt;If PngAAA.com have any worry or problem for this just contact me. I will remove it. This is Just made for educational purpose.&lt;/p&gt;

</description>
      <category>whollyapi</category>
      <category>sh20raj</category>
      <category>scrapping</category>
      <category>storytime</category>
    </item>
    <item>
      <title>Latest Web Development and JavaScript Trends to Follow in 2022</title>
      <author>Pavel Lazarev</author>
      <pubDate>Mon, 24 Jan 2022 11:04:09 +0000</pubDate>
      <link>https://dev.to/plazarev/latest-web-development-and-javascript-trends-to-follow-in-2022-118c</link>
      <guid>https://dev.to/plazarev/latest-web-development-and-javascript-trends-to-follow-in-2022-118c</guid>
      <description>&lt;p&gt;For us at DHTMLX, it has become a good tradition to sum up the results of the outgoing year in the world of web development, and JavaScript in particular, and make predictions for the upcoming year. Each year brings something new and exciting for professional developers and admirers of web technologies, and this year is no exception.&lt;/p&gt;

&lt;p&gt;After analyzing popular surveys and relevant statistical data dedicated to the web, we are ready to share with you the most peculiar findings. As a cherry on top, we'll also provide you with a review of the most notable events in the life of DHTMLX and our plans for 2022.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-is-still-widelyused-but-not-loved-by-developers"&gt;
  &lt;/a&gt;
  JavaScript is Still Widely-Used but not Loved by Developers
&lt;/h2&gt;

&lt;p&gt;Since JavaScript is a technology that is of prime interest to us, we should start by estimating its current position in the ratings of programming languages. For this purpose, we will use the latest &lt;a href="https://insights.stackoverflow.com/survey/2021#technology"&gt;Developer Survey&lt;/a&gt; from Stack Overflow.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GXel2FEm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3g0fqsgdhcvfkn3nc2r3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GXel2FEm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3g0fqsgdhcvfkn3nc2r3.png" alt="Popular programming languages" width="880" height="624"&gt;&lt;/a&gt;&lt;em&gt;Source: &lt;a href="https://insights.stackoverflow.com/survey/2021#most-popular-technologies-language-prof"&gt;2021 Developer Survey&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In terms of usage, JavaScript’s position is strong, as 68% of 58,031 interviewed professional developers preferred JavaScript for their projects. But at the same time, we all know that JavaScript is far from being perfect in many aspects, which caused the appearance of numerous languages that compile to JS such as CoffeeScript, TypeScript, etc. Thus, it is not surprising that the picture is different when we take a look at the ratings of the most loved/dreaded and wanted languages.&lt;/p&gt;

&lt;p&gt;Among 82,914 developers who were asked to name a previously unused technology that they want to try in the future, JavaScript (14%) is third only to TypeScript (15%) and Python (19%). But when talking about the most loved languages, JavaScript (61%) is only 15th, while the top three includes Rust (86%), Clojure (81%), and TypeScript (72%). JavaScript was also called the most dreaded programming language by 38% of respondents.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--El6-Frq0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k3z4xus0012wi56rwyv0.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--El6-Frq0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k3z4xus0012wi56rwyv0.gif" alt="Loved&amp;amp;dreaded programming languages" width="880" height="561"&gt;&lt;/a&gt;&lt;em&gt;Source: &lt;a href="https://insights.stackoverflow.com/survey/2021#technology-most-loved-dreaded-and-wanted"&gt;2021 Developer Survey&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So should JavaScript be put out to pasture and be replaced by more developer-friendly languages? We think that JavaScript is a real giant of the programming world, whose drawbacks are largely compensated by an extensive ecosystem and a huge community. That is why it is too early to give up on JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-frameworks-react-strengthens-its-leading-positions-svelte-wins-developers-love"&gt;
  &lt;/a&gt;
  JavaScript Frameworks: React Strengthens Its Leading Positions, Svelte Wins Developers’ Love
&lt;/h2&gt;

&lt;p&gt;The 2021 Stack Overflow Developer Survey also provides interesting information about the state of things in the field of front-end frameworks. React predictably ranks first as the most commonly used web framework (41%), leaving behind jQuery (34%) and Angular (26%). Moreover, professional developers, who previously utilized other frameworks, are most looking forward to trying React.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wJ2vSi5E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aotollxv3o4gbdr5powa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wJ2vSi5E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aotollxv3o4gbdr5powa.png" alt="Popular JS frameworks" width="880" height="477"&gt;&lt;/a&gt;&lt;em&gt;Source: &lt;a href="https://insights.stackoverflow.com/survey/2021#web-frameworks"&gt;2021 Developer Survey&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In our previous article on web trends, we noted that Svelte has the potential to become a great addition to any web development stack in 2021. Participants of the Stack Overflow survey chose Svelte as the most loved framework. &lt;/p&gt;

&lt;p&gt;The most troublesome frameworks among the survey respondents are Angular.js (76%), Drupal (75%), and jQuery (64).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g3WWEg3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m6x4uf2wus2vluc7sq3v.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g3WWEg3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m6x4uf2wus2vluc7sq3v.gif" alt="Wanted, loved, dreaded frameworks" width="880" height="577"&gt;&lt;/a&gt;&lt;em&gt;Source: &lt;a href="https://insights.stackoverflow.com/survey/2021#most-loved-dreaded-and-wanted-webframe-love-dread"&gt;2021 Developer Survey&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As we can see, web developers are not afraid of experimenting and adopting new JavaScript tools for their projects, so it will be more interesting to follow how the situation will change in 2022.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-happening-in-css"&gt;
  &lt;/a&gt;
  What’s Happening in CSS
&lt;/h2&gt;

&lt;p&gt;When talking about the trends in web development, it is also worth mentioning new realities in the realm of CSS. The recently released &lt;a href="https://2021.stateofcss.com/en-US/"&gt;2021 State of CSS&lt;/a&gt; survey comes with plenty of interesting observations obtained through interviewing 8,714 developers around the globe.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--llaPKFCn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s6ck96jdio8fwq4is8rz.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--llaPKFCn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s6ck96jdio8fwq4is8rz.gif" alt="State of CSS 2021" width="880" height="551"&gt;&lt;/a&gt;&lt;em&gt;Source: &lt;a href="https://2021.stateofcss.com/en-US/features"&gt;2021 State of CSS&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The survey says that each year developers become more and more aware and interested in adopting various layout tools such as CSS Flexbox, Grid, and sticky positioning. Other popular CSS features are calc() function, custom properties for cascading variables, ARIA attributes, and object-fit property. Survey participants also named container queries as the most desirable feature that is currently missing in CSS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mEhES9dV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rgiu8xzmd68w3hmajzu1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mEhES9dV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rgiu8xzmd68w3hmajzu1.gif" alt="Popular CSS frameworks" width="880" height="536"&gt;&lt;/a&gt;&lt;em&gt;Source: &lt;a href="https://2021.stateofcss.com/en-US/technologies/css-frameworks"&gt;2021 State of CSS&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Regarding the CSS technologies, almost half of survey respondents said that they are utilizing one or more CSS-in-JS libraries. The most widely used CSS pre/post-processors are Sass and PostCSS. In the domain of frameworks, Tailwind CSS continues to cause the most serious interest and highest satisfaction among developers. Bootstrap is still number one in the categories of usage and awareness, but Tailwind CSS is getting closer each year.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#covid19-continues-affecting-web-development-community"&gt;
  &lt;/a&gt;
  Covid-19 Continues Affecting Web Development Community
&lt;/h2&gt;

&lt;p&gt;The COVID-19 pandemic continues to be a source of major concern for all of us. For two years, the disease has been putting all aspects of our lives to a serious test. So it is interesting to find out about the impact of this global threat on the programming industry and the steps taken to combat it.&lt;/p&gt;

&lt;p&gt;GitHub's annual &lt;a href="https://octoverse.github.com/"&gt;State of the Octoverse&lt;/a&gt; report provides several useful findings on the subject. First of all, after quite a long period of instability, it is nice to say that the development community regains the pre-pandemic level of productivity. Because of the tense epidemiological situation, many companies had to introduce remote working to keep their employees safe and GitHub says that many IT workers want to have an opportunity to work from home or in a hybrid environment after the pandemic is over.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5DSKaQZw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrllb8u4llyy95hb3ye0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5DSKaQZw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrllb8u4llyy95hb3ye0.png" alt="State of the Octoverse" width="880" height="360"&gt;&lt;/a&gt;&lt;em&gt;Source: &lt;a href="https://octoverse.github.com/"&gt;2021 State of the Octoverse&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It should be said that the development community is actively involved in the struggle against the coronavirus. Currently, there are &lt;a href="https://github.com/topics/covid-19"&gt;10,388 GitHub public repositories&lt;/a&gt; dedicated to conducting research and raising awareness of the virus. Considering programming languages used for delivering these projects, JavaScript turns out to be the most popular technology.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mobile-web-development-and-cloud-technologies-are-flourishing"&gt;
  &lt;/a&gt;
  Mobile Web Development and Cloud Technologies are Flourishing
&lt;/h2&gt;

&lt;p&gt;As internet access and mobile devices are becoming more affordable for the world population, having a mobile web presence is considered a new norm. Today it is also common to use mobile apps for work and leisure.&lt;/p&gt;

&lt;p&gt;Here are a few interesting insights on the matter from Statista:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Last year, the vast majority of internet users (92.6 %) &lt;a href="https://www.statista.com/statistics/617136/digital-population-worldwide/"&gt;used mobile devices&lt;/a&gt; to go online&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;During 2021, the popularity of web applications used to prove a COVID-19 vaccination and as travel passport has been constantly rising and &lt;a href="https://www.statista.com/statistics/1254495/coronavirus-global-vaccination-pass-app-downloads/"&gt;the number of their downloads&lt;/a&gt; amounts to tens of millions times&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is predicted that the &lt;a href="https://www.statista.com/forecasts/1262892/mobile-app-revenue-worldwide-by-segment"&gt;revenue from mobile apps&lt;/a&gt; will exceed  $613 billion in 2025&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Taking into account constantly developing mobile technologies and pandemic-induced constraints, it is safe to assume that these growth trends will be relevant in 2022. Therefore, the ability to run on mobile devices has become one of the main requirements for a modern web application. There are several ways to achieve this goal in practice. For instance, it is possible to build a native mobile app, apply responsive web design, make use of fastly-growing hybrid or cross-platform technologies (Flutter, React Native, Cordova, etc.) or opt for the PWA (progressive web application) approach that has been generating a lot of buzz in recent years. All these approaches have their pros and cons, therefore programmers have to carefully evaluate each of them to choose the right one for their web projects.&lt;/p&gt;

&lt;p&gt;Another big field that has been seriously affected by the disease is cloud computing. But like mobile web development, cloud-based technologies (SaaS, IaaS, PaaS, etc.) have been booming during the pandemic. According to the US-based consulting company &lt;a href="https://www.gartner.com/en/newsroom/press-releases/2021-08-02-gartner-says-four-trends-are-shaping-the-future-of-public-cloud"&gt;Gartner&lt;/a&gt;, it is expected that global spending on cloud services will reach $396 billion by the end of 2021 compared to $313 billion in 2020, and $482 billion in 2022.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-management-apps-rise-in-demand"&gt;
  &lt;/a&gt;
  Project Management Apps Rise in Demand
&lt;/h2&gt;

&lt;p&gt;Using project management apps has become a regular practice for businesses of various scales for pursuing their objectives. The coronavirus outbreak also became a serious challenge for many project managers in regard to strictly following their plans.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fOTIc1tQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7m0a7gfh3refgwjgrii1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fOTIc1tQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7m0a7gfh3refgwjgrii1.png" alt="Impact of Covid on web development" width="825" height="468"&gt;&lt;/a&gt;&lt;em&gt;Source: &lt;a href="https://blog.feedbackloop.com/5-takeaways-2021-pm-insights-report"&gt;2021 Project Management Insight Report&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;According to the latest PMI Insights report, only 12% of 500 interviewed project managers experienced slight or no shifts at all in their product roadmaps. That is why effective project management tools become more and more important in achieving desired production goals. &lt;/p&gt;

&lt;p&gt;Despite the crisis caused by the COVID 19 pandemic, &lt;a href="https://www.statista.com/statistics/203428/total-enterprise-software-revenue-forecast/"&gt;Statista&lt;/a&gt; predicts that in 2021 alone, the overall expenses on enterprise software will be $601 billion, representing a 13.6 % increase compared to 2020, and even more in 2022 - $670 billion. &lt;/p&gt;

&lt;p&gt;Project managers require access to accurate and relevant project KPIs (key performance indicators) to make the right planning decisions. And special software solutions help gather the necessary data, thereby contributing to more effective project management.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kxnS8V_S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ybmz5nmvpzmewbrgdjeo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kxnS8V_S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ybmz5nmvpzmewbrgdjeo.png" alt="spendings on enterprise software" width="712" height="466"&gt;&lt;/a&gt;&lt;em&gt;Source: &lt;a href="https://www.statista.com/statistics/203428/total-enterprise-software-revenue-forecast/"&gt;Statista&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For those who plan to start building a project management app in 2022, it can be useful to consider some takeaways from the &lt;a href="https://www.capterra.com/project-management-software/user-research/"&gt;Project Management User Survey 2021&lt;/a&gt; conducted by Capterra. Let us mention a few of them: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Among positive implications of using project management software, survey participants emphasized improved timeline estimation (60%), effective resource allocation (55%), and enhanced team communication (49%)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In 2021, the main criteria affecting software purchase decisions are functionality (29%), price (18%), ease of use (17%), and customer support (13%)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The list of the top three most desired project management functions includes Gantt charts (22%), burndown charts (21%), and automated workflows (20%)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Interviewees complained about a steep learning curve (43%), numerous unused features (43%), integration issues (38%), and other negative factors that may occur when using ready-made software&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;DHTMLX's long-standing experience in working with programmers confirms that the factors listed in the last paragraph often become an insurmountable obstacle. That is why many companies prefer to invest in the development of custom project management apps that fully comply with their requirements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dhtmlx-expands-product-portfolio"&gt;
  &lt;/a&gt;
  DHTMLX Expands Product Portfolio
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--29qFBp-U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4xk5u9b1zid0j5fd4f7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--29qFBp-U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4xk5u9b1zid0j5fd4f7.png" alt="Achievements of DHTMLX in 2021" width="875" height="408"&gt;&lt;/a&gt;&lt;br&gt;
The DHTMLX team has been closely following recent trends and the effect of COVID-19 on the industry. &lt;/p&gt;

&lt;p&gt;As an answer to the challenges of the last twelve months, the company continued our course on providing full-featured and easily customizable JS tools for project management. DHTMLX released a &lt;a href="https://dhtmlx.com/docs/products/dhtmlxKanban/"&gt;JavaScript Kanban Board&lt;/a&gt; designed to help project managers with workflow visualization.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/YL6MWuHZMzs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The great thing about this tool is that it can be easily integrated with &lt;a href="https://dhtmlx.com/docs/products/dhtmlxGantt/"&gt;DHTMLX Gantt&lt;/a&gt; and &lt;a href="https://dhtmlx.com/docs/products/dhtmlxScheduler/"&gt;Scheduler&lt;/a&gt; components in a single app for covering most of project management needs.&lt;/p&gt;

&lt;p&gt;Last year, the most significant updates were introduced in DHTMLX Diagram and Spreadsheet.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w2ewNY-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hcha35f7nqaeh41n33j7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w2ewNY-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hcha35f7nqaeh41n33j7.jpg" alt="DHTMLX Mind Map" width="678" height="529"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://dhtmlx.com/docs/products/dhtmlxDiagram/"&gt;JavaScript diagramming component&lt;/a&gt; comes with a new diagram type - mind map. Moreover, now DHTMLX Diagram allows clearly arranging processes in diagrams with swimlanes, grouping different shapes according to specific criteria, building hierarchical structures with two or more parent nodes, specifying assistants in org charts, and much more. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6_9wE9y1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7tqj37aggcadayqm4mdj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6_9wE9y1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7tqj37aggcadayqm4mdj.jpg" alt="DHTMLX Spreadsheet" width="876" height="574"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://dhtmlx.com/docs/products/dhtmlxSpreadsheet/"&gt;JavaScript Spreadsheet component&lt;/a&gt; was enriched with the ability to work with multiple sheets and cross-reference between them using 170+ new Excel math and string functions. Other notable additions include frozen columns, text and date formats, and TypeScript support.&lt;/p&gt;

&lt;p&gt;The DHTMLX development team also focused on covering true-to-life usage scenarios of modern web apps and delivered three live demos: &lt;a href="https://dhtmlx.com/docs/products/demoApps/dhtmlxHospital/#patients"&gt;hospital management&lt;/a&gt;, &lt;a href="https://dhtmlx.com/docs/products/demoApps/dhtmlxExam/#exams"&gt;online examination&lt;/a&gt;, and &lt;a href="https://dhtmlx.com/docs/products/demoApps/dhtmlxKPI/"&gt;KPI tracker&lt;/a&gt;. These demos can be utilized by programmers as a basis for creating more complex DHTMLX-based apps faster.&lt;/p&gt;

&lt;p&gt;Thanks to a large number of positive reviews on practical usage of DHTMLX products, the company received multiple awards from popular software review platforms such as G2, Crozdesk, Capterra, GetApp, and Software Advice.&lt;/p&gt;

&lt;p&gt;In 2022, the DHTMLX team plans to focus on improving existing JavaScript components and expanding the product portfolio with new tools. And of course, they will continue providing high-quality and timely support for their customers in the implementation of their projects with DHTMLX.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This article was originally published on the &lt;a href="https://javascript.plainenglish.io/latest-web-development-and-javascript-trends-to-follow-in-2022-3d7f665aa5f7"&gt;JavaScript in Plain English&lt;/a&gt; platform on January 4th, 2022.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>10 C# Mistakes that DAMAGE Your Code + (How to Avoid Them)</title>
      <author>Dotnetsafer</author>
      <pubDate>Mon, 24 Jan 2022 11:02:05 +0000</pubDate>
      <link>https://dev.to/dotnetsafer/10-c-mistakes-that-damage-your-code-how-to-avoid-them-225j</link>
      <guid>https://dev.to/dotnetsafer/10-c-mistakes-that-damage-your-code-how-to-avoid-them-225j</guid>
      <description>&lt;p&gt;C#, the programming language that underlies Microsoft's .NET framework, has been around since 2002 and offers many advantages over languages like Java or C++. However, &lt;strong&gt;there are plenty of ways to mismanage your code using C#&lt;/strong&gt;, and it pays to know about these pitfalls so you can avoid them in your own code. In this article, we'll talk about &lt;strong&gt;10 common C# mistakes and how to avoid them.&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#1-c-has-limitations"&gt;
  &lt;/a&gt;
  1. C# Has Limitations
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;C# is not as robust as its alternatives.&lt;/strong&gt; For example, you can't do overloading in C#. This means that if you have a class with two methods that share a name but take different parameters, &lt;strong&gt;those methods will be treated as separate functions.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;💡 &lt;strong&gt;Tip:&lt;/strong&gt; Overloading makes your code &lt;strong&gt;easier to use&lt;/strong&gt; but requires more flexibility from your programming language.&lt;/p&gt;

&lt;p&gt;C# also lacks support for global variables &lt;strong&gt;—you can only access local variables from within a function —&lt;/strong&gt; making it less than ideal for large applications with complex processes and data.&lt;/p&gt;

&lt;p&gt;If you need these features, consider looking into other languages like Python or JavaScript instead of settling for an alternative framework or library for C#.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#2-make-use-of-the-systemreflection-class"&gt;
  &lt;/a&gt;
  2. Make Use of the System.Reflection Class
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;System.Reflectionclass&lt;/code&gt; is what we'll be making use of in order to find out if a particular library or framework has been loaded by .NET. &lt;strong&gt;You can simply instantiate a new instance of it by passing your application's assembly as an argument.&lt;/strong&gt; Let's see an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;reflection&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Reflection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Program&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Assembly&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, &lt;strong&gt;you can run one of its methods in order to find out if your library is currently being used.&lt;/strong&gt; One method in particular that we will use here is its &lt;code&gt;GetTypes()&lt;/code&gt; method which will let us know about all types defined within our assembly.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#3-choosing-bad-objects-in%C2%A0code"&gt;
  &lt;/a&gt;
  3. Choosing Bad Objects in Code
&lt;/h2&gt;

&lt;p&gt;If you're just starting out with programming, &lt;strong&gt;it's not uncommon to use a variable that represents one type of object when in fact it's pointing at another.&lt;/strong&gt; When you try to access its methods or properties, &lt;strong&gt;your program will crash.&lt;/strong&gt; If you see an error stating cannot convert null into type object, for example, that means you tried accessing a method or property on a variable that isn't set  — in other words, one that points at nothing. &lt;/p&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;br&gt;
 &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Juan&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Bad - using an uninitialized variable!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#4-failure-to-impose-limitations-on%C2%A0classes"&gt;
  &lt;/a&gt;
  4. Failure to Impose Limitations on Classes
&lt;/h2&gt;

&lt;p&gt;One of most common mistakes when developing with &lt;strong&gt;C# is not imposing limitations on classes.&lt;/strong&gt; What I mean by that is that you should always decide what your class can do ahead of time, as opposed to adding new abilities later.&lt;/p&gt;

&lt;p&gt;Once you've defined a class, &lt;strong&gt;it will be difficult or impossible to change its behavior&lt;/strong&gt; without redesigning it from scratch  —and &lt;strong&gt;that's rarely practical or worth it.&lt;/strong&gt; This can lead to an unmaintainable codebase where it's extremely difficult for developers working on different parts of an application to understand how one part interacts with another.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#5-not-understanding-when-objects-are%C2%A0created"&gt;
  &lt;/a&gt;
  5. Not Understanding When Objects Are Created
&lt;/h2&gt;

&lt;p&gt;C# is a managed language. That means &lt;strong&gt;you can use objects without worrying about their memory management.&lt;/strong&gt; However, it also means that there are limitations on what you can do with them.&lt;/p&gt;

&lt;p&gt;The problem is that &lt;strong&gt;those limitations aren't always clear&lt;/strong&gt; because C# doesn't give you any indicators for when objects are created or destroyed. If you don't know when an object has been created, &lt;strong&gt;it's easy to overwrite its properties&lt;/strong&gt; or mess up its reference variables in code somewhere down the line, which can lead to all sorts of &lt;strong&gt;problems like crashes and data corruption.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;💡 &lt;strong&gt;Tip:&lt;/strong&gt; To avoid these issues, learn how to &lt;strong&gt;recognize situations where objects are being created&lt;/strong&gt; so that you can ensure your code has a consistent set of references.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#6-creating-an-overly-general-classmethod"&gt;
  &lt;/a&gt;
  6. Creating an Overly General Class/Method
&lt;/h2&gt;

&lt;p&gt;One common mistake is &lt;strong&gt;creating a &lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/fundamentals/types/classes"&gt;class&lt;/a&gt; or &lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/methods"&gt;method&lt;/a&gt; that's too general.&lt;/strong&gt; This can happen when developers are new to C# because they aren't familiar with using inheritance effectively.&lt;/p&gt;

&lt;p&gt;Generally, classes/methods &lt;strong&gt;should only be as general as they need to be;&lt;/strong&gt; anything more than that is a waste of your time (and everyone else's).&lt;/p&gt;

&lt;p&gt;Keep in mind that if you follow object-oriented programming concepts, everything should have its own class. In other words, &lt;strong&gt;don't make single methods do more than one thing&lt;/strong&gt;  — create a different method for each task if it helps.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#7-exposing-too-much-information-about-an%C2%A0object"&gt;
  &lt;/a&gt;
  7. Exposing Too Much Information About an Object
&lt;/h2&gt;

&lt;p&gt;Exposed properties can &lt;strong&gt;make it easy for a hacker&lt;/strong&gt; to figure out how an object works. When you expose internal details of your application, &lt;strong&gt;you're making yourself vulnerable.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To avoid exposing too much about your objects, consider using properties that have private setters or constructors. &lt;strong&gt;You should also hide classes behind abstractions like interfaces as much as possible.&lt;/strong&gt; You never know when someone might be trying to reverse engineer your code or write plugins for it, so &lt;strong&gt;take precautions now rather than later.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;📚 &lt;strong&gt;Note:&lt;/strong&gt; Keeping things &lt;strong&gt;hidden&lt;/strong&gt; ensures that even if someone does break in, they won't be able to do much damage.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#8-unprotected-memory-access-vulnerabilities-in%C2%A0net-applications"&gt;
  &lt;/a&gt;
  8. Unprotected Memory Access Vulnerabilities in .NET Applications
&lt;/h2&gt;

&lt;p&gt;A research team at CVE Details found &lt;strong&gt;several memory safety vulnerabilities in .NET Framework applications written in C#&lt;/strong&gt;, including &lt;em&gt;Microsoft Office&lt;/em&gt; and &lt;em&gt;Adobe Acrobat&lt;/em&gt; (plugins, add-ons and extensions).&lt;/p&gt;

&lt;p&gt;These types of issues could &lt;strong&gt;allow an attacker to bypass operating system security permissions&lt;/strong&gt; or a sandbox security mechanism. In order to effectively address these types of issues, &lt;strong&gt;organizations must prioritize testing their .NET applications for vulnerabilities.&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#9-use-safe-wellknown-libraries-whenever%C2%A0possible"&gt;
  &lt;/a&gt;
  9. Use Safe, Well-Known Libraries Whenever Possible
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;It's understandable that a programmer would be tempted to write their own code&lt;/strong&gt; for common tasks instead of reaching for an off-the-shelf solution. After all, if you have 20 years of experience in building enterprise applications, &lt;strong&gt;it can be hard to recognize&lt;/strong&gt; when a newer library is going to &lt;strong&gt;give you 80%&lt;/strong&gt; of what you need &lt;strong&gt;with 20%&lt;/strong&gt; of the work. &lt;/p&gt;

&lt;p&gt;However, &lt;strong&gt;it's much safer&lt;/strong&gt; (&lt;em&gt;and certainly more efficient&lt;/em&gt;) to use a well-known library whenever possible. &lt;strong&gt;Your time is valuable!&lt;/strong&gt; So why spend it reinventing solutions other people have already solved? &lt;strong&gt;This can save hours or even days in development,&lt;/strong&gt; especially on large projects.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#10-dont-write-your-own-encryption-algorithms"&gt;
  &lt;/a&gt;
  10. Don't Write Your Own Encryption Algorithms
&lt;/h2&gt;

&lt;p&gt;This one is a &lt;strong&gt;no-brainer🧠:&lt;/strong&gt; if you need secure encryption, &lt;strong&gt;just use an existing algorithm instead of writing your own.&lt;/strong&gt; It's easier said than done in some cases; for example, if you're working with cloud storage, it can be tricky to install third-party security software on your servers.&lt;/p&gt;

&lt;p&gt;Even if you do manage to get a reliable third-party library running properly, &lt;strong&gt;it might not have all of the features you need.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;📚Tip:&lt;/strong&gt; I recommend the following article to surprise you with how easy it is to decompile and modify a .NET Application 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/dotnetsafer/i-show-you-how-to-crack-a-net-application-3-clicks-47ke"&gt;How to Crack a .NET Application&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For example, it might lack authentication or might leave hardcoded data exposed in memory after decryption. In situations like these, writing your own cryptography implementation can make sense  — but even then, &lt;strong&gt;resist writing your own algorithms!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;💡 Tip:&lt;/strong&gt; Use an obfuscator. A C# or .NET Obfuscator is a tool that &lt;strong&gt;makes a program's code harder to read,&lt;/strong&gt; but allows it to work. This makes the program more secure. &lt;strong&gt;It makes it harder to crack, decompile, or reverse engineer the code&lt;/strong&gt; because the most important parts of the code are hidden so deeply that it is hard to figure out which parts of the application are important.&lt;/p&gt;

&lt;p&gt;I personally like &lt;strong&gt;&lt;a href="https://dotnetsafer.com/products/shield"&gt;Shield&lt;/a&gt;&lt;/strong&gt;, it is a clear example of an obfuscator apart from being Cloud, &lt;strong&gt;constantly updated&lt;/strong&gt;, with &lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=Dotnetsafer.Shield"&gt;Visual Studio integration&lt;/a&gt;&lt;/strong&gt; and more. &lt;/p&gt;

&lt;p&gt;I recommend anyone who develops in .NET to try it because &lt;strong&gt;it has a very complete free version&lt;/strong&gt; (and if you want maximum protection, &lt;strong&gt;its prices are cheap&lt;/strong&gt;).&lt;/p&gt;

</description>
      <category>csharp</category>
      <category>dotnet</category>
      <category>programming</category>
      <category>security</category>
    </item>
    <item>
      <title>Tale of the Snake Charmer: Why you should learn Python.</title>
      <author>Kudzai Tsapo</author>
      <pubDate>Mon, 24 Jan 2022 10:59:46 +0000</pubDate>
      <link>https://dev.to/kudzaitsapo/tale-of-the-snake-charmer-why-you-should-learn-python-30dc</link>
      <guid>https://dev.to/kudzaitsapo/tale-of-the-snake-charmer-why-you-should-learn-python-30dc</guid>
      <description>&lt;p&gt;It has been several decades since a wise Sage went to the Amazon rain forest. After getting lost, he was found by the natives, who taught him how to speak their language. When he returned to his civilization, he decided to teach the machines how to speak the language.&lt;br&gt;
Fast forward several decades later, Python is one of the most popular programming languages, being used for a variety of tasks which include but are not limited to Machine learning, web development, and mobile app development.&lt;br&gt;
Fast forward a hundred years later,the robots are taking over the planet. There's wanton destruction everywhere, shopping malls are collapsing, and cars are being burnt. An old man peers from a glass office, watching all the events unfold. With tearful eyes, he sighs and says, "If only I hadn't built that damn model with Python!"&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;In case you hadn't noticed, I made up most of the events written up there. There's no moral of the story, if you're wondering.&lt;br&gt;
So, what's the purpose of the article? Basically, it's to give advice to those who need it, and for those who don't, you can click the back button on your browser.&lt;/p&gt;

&lt;p&gt;To be fair, Python is one of the awesome programming languages I've used. It's so easy to learn, compresses a lot of lines of code into a single line. It can also be used for a variety of tasks, from developing mobile apps, to web apps, to machine learning models.&lt;/p&gt;

&lt;p&gt;Just like how there are huge fans of the language (e.g. me), there are also haters. They'll be quick to point out its flaws, but as far as you and I are concerned, they can go and f ... eh ... sleep. &lt;/p&gt;

&lt;p&gt;So, why should you, an awesome person, learn this awesome language?&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-because-you-can"&gt;
  &lt;/a&gt;
  1. Because you can.
&lt;/h4&gt;

&lt;p&gt;First rule of life, there are no rules ... eh ... apart from the laws of your country, laws of physics etc, but you get the point. Nothing restricts you from learning something, except if you don't want to. In fact, open your browser, download Python and get started right away! &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-you-want-to-get-into-data-science"&gt;
  &lt;/a&gt;
  2. You want to get into data science
&lt;/h4&gt;

&lt;p&gt;One of the reasons why I love python, is the fact that we can prophesy the future using code! (I'm lying of course ... lol) What I mean to say is that, as human beings, we can notice repeating patterns, and try to predict when the next event is going to happen (Think the stock market, wanna try and predict when Tesla stock is going to fall, or rise?). We can come up with statistical models of these events, and Python makes it easy to do so. It has a snake-skin bag of libraries that you can use to achieve whatever goals you want in this field. &lt;/p&gt;

&lt;p&gt;So, if you want to get into data science, you  &lt;strong&gt;should&lt;/strong&gt; learn python! There are no negotiations (unless you want to learn Matlab and R, in which case, be my guest).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-ai-will-take-over-the-world-some-day"&gt;
  &lt;/a&gt;
  3. AI will take over the world some day
&lt;/h4&gt;

&lt;p&gt;When this happens, you'd want to cash out on it, right? You'll be one of the wizards who developed Skynet, and caused the apocalypse ... Just kidding! When flying, self-piloting cars and robots have been developed, wouldn't you like to puff out your chest with pride, and say, "I contributed one line of code to this future" ?&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-you-want-to-be-a-tech-billionaire"&gt;
  &lt;/a&gt;
  4. You want to be a tech billionaire?
&lt;/h4&gt;

&lt;p&gt;Ah yes, one of the primary motivations of why people do anything at all! Money! 🤑 So, let's say, you've heard that it's now easy to become a billionaire. The person who told you this said you just had to create a web app, launch, and in a few years you'd be one. Well, I'm sure the person who would've said this would be joking, but jokes aside, using &lt;strong&gt;django&lt;/strong&gt;, it is easy to develop prototypes and it cuts development time by like 50% (I might be lying but 🤷‍♂️). There's also flask, which is so light-weight, you'd wonder if it no bones will break upon deployment. Not forgetting FastAPI, which is awesome for developing APIs apparently (haven't used it much so I dunno). &lt;/p&gt;

&lt;p&gt;Anyways, when you become the tech billionaire you've always wanted to be, don't forget to remember this article 🤣 .&lt;/p&gt;

&lt;p&gt;So, the key take away points are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You're awesome&lt;/li&gt;
&lt;li&gt;Python is &lt;em&gt;really&lt;/em&gt; awesome.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are many reasons why people do things, and I don't know why you want to learn Python. However, I can safely say you're making the right decision 👍 , unless you're planning on taking over the earth with your droids, in which case no! It's a really bad idea!&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to connect EFS disk to a Lambda function?</title>
      <author>Pawel Zubkiewicz</author>
      <pubDate>Mon, 24 Jan 2022 10:28:38 +0000</pubDate>
      <link>https://dev.to/aws-builders/how-to-connect-efs-disk-to-a-lambda-function-360g</link>
      <guid>https://dev.to/aws-builders/how-to-connect-efs-disk-to-a-lambda-function-360g</guid>
      <description>&lt;p&gt;AWS added the possibility to attach &lt;a href="https://aws.amazon.com/efs/"&gt;Elastic File System (EFS)&lt;/a&gt; disks to Lambda functions. That opened some new possibilities and use cases. About a month ago, I used EFS with Step Functions to build an ETL process that feeds our data lake. It was a bit of fun and challenge at the same time, so I decided I will share my experience and solution with you.&lt;/p&gt;

&lt;p&gt;This article explains in detail how I configured the EFS disk in Serverless Framework. I hope this knowledge will allow you to discover new serverless possibilities. 😀&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-aws-efs"&gt;
  &lt;/a&gt;
  What is AWS EFS?
&lt;/h2&gt;

&lt;p&gt;Let’s begin by explaining what we are dealing with. AWS EFS is something like a network drive that can be connected to many devices at the same time. EFS is an old service, so far it has supported EC2 instances and containers. It has only recently been integrated with AWS Lambda.&lt;/p&gt;

&lt;p&gt;After everything is set up in the infrastructure (as code, of course), the EFS disk becomes available to the Lambda function at &lt;code&gt;/mnt/your_efs_diskpath&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;What does it change?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-new-scenarios-come-into-play-thanks-to-this-integration"&gt;
  &lt;/a&gt;
  What new scenarios come into play thanks to this integration?
&lt;/h2&gt;

&lt;p&gt;First and foremost, an EFS drive with virtually unlimited capacity removes the lack of space problem. Normally, functions are bound to 500MB limit and can only store files in &lt;code&gt;/tmp&lt;/code&gt; directory. With the EFS disc, we can freely cross this limit. So we can work with large files!&lt;/p&gt;

&lt;p&gt;All machine learning fans are excited by that!&lt;/p&gt;

&lt;p&gt;That’s right, Machine Learning is one of the main use cases unlocked with the new functionality. There are already reports on the web about what has been achieved with the combination of the ESF and Lambda. That also unlocked other use cases that require large resources, for example converting video files.&lt;/p&gt;

&lt;p&gt;Moreover, the directory &lt;code&gt;/tmp&lt;/code&gt; is an integral part of each container in which a given instance of the Lambda function runs. In contrast, EFS is shared between multiple Lambda devices or functions. This means that the file once saved is available to all users of the disk and will not disappear when AWS Lambda service destroys the function container.&lt;/p&gt;

&lt;p&gt;We can also use unlimited space to hold all kinds of libraries. For example, in the aforementioned machine learning, where libraries are of significant size, this will be exploited for sure.&lt;/p&gt;

&lt;p&gt;Second, the integration with the EFS service gives us an alternative to using AWS S3. In some scenarios, access to a regular system file turns out to be faster, more convenient, and cheaper. EFS is billed only for the amount of space we use (unless we choose extra features), by contrast, AWS S3 service also charges for each write and read (PUT and GET) operation. Often, frequent writing and reading to S3 generates more costs than the used space.&lt;/p&gt;

&lt;p&gt;This is one of the reasons why I used EFS in my latest application, which takes data from various sources and puts it in my data lake. Together with Lambda and Step Functions, it proved to be a perfect match.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disadvantages-of-the-efs"&gt;
  &lt;/a&gt;
  Disadvantages of the EFS
&lt;/h3&gt;

&lt;p&gt;Of course, as it usually happens in architecture, there are serious trade-offs here as well. EFS is just a regular file system. There are no events there, so forget to call the Lambda function automatically after someone uploads the file to the disk. Provisioning and disk configuration is very clunky, and compared to S3 it is a real ordeal, which you will see for yourself 😉&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-connect-efs-disk-to-lambda-function"&gt;
  &lt;/a&gt;
  How to connect EFS disk to Lambda function?
&lt;/h2&gt;

&lt;p&gt;At the moment of writing, there is no official support in Serverless Framework yet (although it is already in CloudFormation and SAM) — I’m sure that when they introduce them, it will be much more convenient to add EFS to the function. For now, however, I am sharing my solution, which I developed based on articles by &lt;a href="https://lumigo.io/blog/unlocking-more-serverless-use-cases-with-efs-and-lambda/"&gt;Yan Cui&lt;/a&gt;, &lt;a href="https://aws.amazon.com/blogs/compute/using-amazon-efs-for-aws-lambda-in-your-serverless-applications/"&gt;James Beswick&lt;/a&gt;, and &lt;a href="https://read.acloud.guru/how-i-used-lambda-and-efs-for-massively-parallel-compute-96575bc85157"&gt;Peter Sbarski&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#first-you-need-a-vpc"&gt;
  &lt;/a&gt;
  First, you need a VPC
&lt;/h3&gt;

&lt;p&gt;Lambda function to be able to connect to the EFS disk must be in the same VPC as the disk. From 2019, this is not a problem because AWS has significantly reduced the cold starts in VPC.&lt;/p&gt;

&lt;p&gt;In order for the function to run in the VPC, it is enough to provide the subnet and Security Group IDs in the &lt;code&gt;serverless.yml&lt;/code&gt; configuration file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;functions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;writeToEfs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;handler&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;src/writeToEfs/function.handler&lt;/span&gt;
    &lt;span class="na"&gt;vpc&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;securityGroupIds&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;sg-xxxxxxxx&lt;/span&gt;
      &lt;span class="na"&gt;subnetIds&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;subnet-xxxxxxxx&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;subnet-xxxxxxxx&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#second-correct-privileges"&gt;
  &lt;/a&gt;
  Second, correct privileges
&lt;/h3&gt;

&lt;p&gt;The role with which the Lambda function will be run must have the appropriate rights. I copied those from &lt;a href="https://lumigo.io/blog/unlocking-more-serverless-use-cases-with-efs-and-lambda/"&gt;Yan’s blog post&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;provider&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;# other configuration &lt;/span&gt;
  &lt;span class="na"&gt;iamRoleStatements&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;Effect&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Allow&lt;/span&gt;
      &lt;span class="na"&gt;Action&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;ec2:CreateNetworkInterface&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;ec2:DescribeNetworkInterfaces&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;ec2:DeleteNetworkInterface&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;elasticfilesystem:ClientMount&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;elasticfilesystem:ClientRootAccess&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;elasticfilesystem:ClientWrite&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;elasticfilesystem:DescribeMountTargets&lt;/span&gt;
      &lt;span class="na"&gt;Resource&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;*'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#next-the-efs-drive-itself"&gt;
  &lt;/a&gt;
  Next, the EFS drive itself
&lt;/h3&gt;

&lt;p&gt;Creating a drive is not as easy as it may seem and is far from the convenience of creating and using S3 buckets. In the &lt;code&gt;resources&lt;/code&gt; section of &lt;code&gt;serverless.yml&lt;/code&gt; define the following resources:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;resources&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;Resources&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;NetworkDrive&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;AWS::EFS::FileSystem&lt;/span&gt;
      &lt;span class="na"&gt;Properties&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;FileSystemTags&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;Key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Name&lt;/span&gt;
            &lt;span class="na"&gt;Value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;LambdaDrive-${self:provider.stage}&lt;/span&gt;

    &lt;span class="na"&gt;MountTargetResourceA&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;AWS::EFS::MountTarget&lt;/span&gt;
      &lt;span class="na"&gt;Properties&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;FileSystemId&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;!Ref&lt;/span&gt; &lt;span class="s"&gt;NetworkDrive&lt;/span&gt;
        &lt;span class="na"&gt;SubnetId&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;subnet-xxxxxxxx&lt;/span&gt; &lt;span class="c1"&gt;# change that value to your id&lt;/span&gt;
        &lt;span class="na"&gt;SecurityGroups&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="kt"&gt;!GetAtt&lt;/span&gt; &lt;span class="s"&gt;MountPointSecurityGroup.GroupId&lt;/span&gt;

    &lt;span class="na"&gt;MountTargetResourceB&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;AWS::EFS::MountTarget&lt;/span&gt;
      &lt;span class="na"&gt;Properties&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;FileSystemId&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;!Ref&lt;/span&gt; &lt;span class="s"&gt;NetworkDrive&lt;/span&gt;
        &lt;span class="na"&gt;SubnetId&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;subnet-xxxxxxxx&lt;/span&gt; &lt;span class="c1"&gt;# change that value to your id&lt;/span&gt;
        &lt;span class="na"&gt;SecurityGroups&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="kt"&gt;!GetAtt&lt;/span&gt; &lt;span class="s"&gt;MountPointSecurityGroup.GroupId&lt;/span&gt;

    &lt;span class="na"&gt;MountPointSecurityGroup&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;AWS::EC2::SecurityGroup&lt;/span&gt;
      &lt;span class="na"&gt;Properties&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;GroupDescription&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Security group to allow NFS - Lambda communication.&lt;/span&gt;
        &lt;span class="na"&gt;VpcId&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;vpc-xxxxxxx&lt;/span&gt;
        &lt;span class="na"&gt;SecurityGroupIngress&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;IpProtocol&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;tcp&lt;/span&gt;
            &lt;span class="na"&gt;FromPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2049&lt;/span&gt;
            &lt;span class="na"&gt;ToPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2049&lt;/span&gt;
            &lt;span class="na"&gt;SourceSecurityGroupId&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;sg-xxxxxxxx&lt;/span&gt; &lt;span class="c1"&gt;# change that. Same as one for Lambda&lt;/span&gt;
        &lt;span class="na"&gt;SecurityGroupEgress&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;IpProtocol&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;-1'&lt;/span&gt;
            &lt;span class="na"&gt;CidrIp&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;0.0.0.0/0&lt;/span&gt;

    &lt;span class="na"&gt;AccessPointResource&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;AWS::EFS::AccessPoint&lt;/span&gt;
      &lt;span class="na"&gt;Properties&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;FileSystemId&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;!Ref&lt;/span&gt; &lt;span class="s"&gt;NetworkDrive&lt;/span&gt;
        &lt;span class="na"&gt;PosixUser&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;Uid&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1001&lt;/span&gt;
          &lt;span class="na"&gt;Gid&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1001&lt;/span&gt;
        &lt;span class="na"&gt;RootDirectory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;CreationInfo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;OwnerGid&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1001&lt;/span&gt;
            &lt;span class="na"&gt;OwnerUid&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1001&lt;/span&gt;
            &lt;span class="na"&gt;Permissions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;770&lt;/span&gt;
          &lt;span class="na"&gt;Path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/efs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why so much? I wonder myself. 🤔&lt;/p&gt;

&lt;p&gt;First, we have the EFS drive itself with a logical name NetworkDrive. Unfortunately, without the rest of the stuff, it is completely useless. We need to connect it to some virtual network, hence we have &lt;code&gt;MountTargetResourceA&lt;/code&gt; and &lt;code&gt;MountTargetResourceB&lt;/code&gt;, which allows us to get to it from the given subnets. Then we have the &lt;code&gt;MountPointSecurityGroup&lt;/code&gt; one that is necessary because otherwise network traffic will be blocked on the &lt;a href="https://docs.aws.amazon.com/efs/latest/ug/network-access.html"&gt;port that EFS uses&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It is essential to provide the correct Security Group id in the parameter &lt;code&gt;SourceSecurityGroupId&lt;/code&gt; - this is the same group we assigned to the Lambda function at the very beginning.&lt;/p&gt;

&lt;p&gt;The last item is &lt;code&gt;AccessPointResource&lt;/code&gt;. And that is what AWS has cleverly invented in my opinion. Since many clients will connect to the same network drive, we need some way of managing users and access to files on that drive. And that’s &lt;code&gt;AccessPointResource&lt;/code&gt; abstracts away. There can be many access points, but I used one for all my Lambda functions. Contrary to appearances, a lot is happening here, and this configuration is closely related to the &lt;code&gt;NetworkDrive&lt;/code&gt; defined at the beginning. As I said, here we define the access rights, and depending on them AWS will or will not be able to initialize the file system for us during first use. Hence &lt;code&gt;Permissions&lt;/code&gt; set to &lt;code&gt;770&lt;/code&gt;(remember &lt;code&gt;chmod&lt;/code&gt;?). Thanks to this, a directory (folder) &lt;code&gt;/efs&lt;/code&gt; will be created for us. More information about that in the &lt;a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-accesspoint.html"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#combining-efs-disk-with-lambda-function"&gt;
  &lt;/a&gt;
  Combining EFS disk with Lambda function
&lt;/h3&gt;

&lt;p&gt;At the moment of writing this, it cannot be done elegantly in Serverless Framework. While waiting for official support, we can use a little-known functionality called &lt;code&gt;extensions&lt;/code&gt;, which allows you to modify the settings of the Lambda functions created in the section &lt;code&gt;functions&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;resources&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;Resources&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;NetworkDrive&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# ...&lt;/span&gt;
    &lt;span class="c1"&gt;# ...&lt;/span&gt;
    &lt;span class="c1"&gt;# ...&lt;/span&gt;

  &lt;span class="na"&gt;extensions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;WriteToEfsLambdaFunction&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;Properties&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;FileSystemConfigs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;Arn&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;!GetAtt&lt;/span&gt; &lt;span class="s"&gt;AccessPointResource.Arn&lt;/span&gt;
            &lt;span class="na"&gt;LocalMountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/mnt/efs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we are peeking under the Serverless Framework hood.&lt;/p&gt;

&lt;p&gt;Congratulations, you’ve just become a specialist!&lt;/p&gt;

&lt;p&gt;But what’s going on here? Above, is a piece of CloudFormation that will be added to the code generated by Serverless Framework for the Lambda function that we defined at the very beginning and named &lt;code&gt;writeToEfs&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The key here is the name of our extension, without going into the details of how Serverless Framework works, the convention is that "capitalized-function-name" + "LambdaFunction". This is how &lt;code&gt;writeToEfs&lt;/code&gt; becomes &lt;code&gt;WriteToEfsLambdaFunction&lt;/code&gt;. Later in this section, we give a reference to &lt;code&gt;AccessPointResource&lt;/code&gt; and say that the drive is to be mounted under a path &lt;code&gt;/mnt/efs&lt;/code&gt;. This is actually standard Linux disk mounting operation, after all Lambda runs on Amazon Linux.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-do-the-deploy"&gt;
  &lt;/a&gt;
  Let’s do the deploy
&lt;/h3&gt;

&lt;p&gt;That’s all the infrastructure code needed to connect your EFS disk to the Lambda function (assuming you already have a VPC). Unfortunately, in my project, the deployment of such a configuration did not work. After some tinkering, I came up with a solution. I had to do it in two steps.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In the first step, I commented out the &lt;code&gt;extensions&lt;/code&gt; section and did &lt;code&gt;sls deploy&lt;/code&gt; which finished successfully.&lt;/li&gt;
&lt;li&gt;In the second step, I uncommented this fragment and did deployment again. My Lambda functions were properly updated and had access to the EFS disk.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Hope this tutorial helps you to set up an EFS drive in your project using &lt;em&gt;Infrastructure as Code&lt;/em&gt; principle. As you can see, it is not simple, but once configured it works flawlessly.&lt;/p&gt;

&lt;p&gt;In my project, I am satisfied with this solution. I have 4 different Lambda functions configured exactly this way. The only difference is that each of them has its own configuration in the section extensions, but they all use the same &lt;code&gt;AccessPointResource&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Good luck with your project!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#update"&gt;
  &lt;/a&gt;
  Update
&lt;/h2&gt;

&lt;p&gt;This article was originally posted on medium, but I wanted to move it to dev.to. &lt;/p&gt;

&lt;p&gt;Since publication, Serverless Framework added native support for EFS drives. You can read documentation &lt;a href="https://www.serverless.com/framework/docs/providers/aws/guide/functions#efs-configuration"&gt;here&lt;/a&gt;, and it is much simpler to implement:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;provider&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;aws&lt;/span&gt;

&lt;span class="na"&gt;functions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;hello&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;handler&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;handler.hello&lt;/span&gt;
    &lt;span class="na"&gt;fileSystemConfig&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;localMountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/mnt/example&lt;/span&gt;
      &lt;span class="na"&gt;arn&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;arn:aws:elasticfilesystem:us-east-1:111111111111:access-point/fsap-0d0d0d0d0d0d0d0d0&lt;/span&gt;
    &lt;span class="na"&gt;vpc&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;securityGroupIds&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;securityGroupId1&lt;/span&gt;
      &lt;span class="na"&gt;subnetIds&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;subnetId1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Source: Serverless docs.&lt;/p&gt;

</description>
      <category>serverless</category>
      <category>aws</category>
      <category>efs</category>
      <category>lambda</category>
    </item>
    <item>
      <title>Book Release:  Fundamentals of Creating a Great UI/UX by Creative Tim</title>
      <author>Creative Tim</author>
      <pubDate>Mon, 24 Jan 2022 10:03:59 +0000</pubDate>
      <link>https://dev.to/creativetim_official/book-release-fundamentals-of-creating-a-great-uiux-by-creative-tim-394e</link>
      <guid>https://dev.to/creativetim_official/book-release-fundamentals-of-creating-a-great-uiux-by-creative-tim-394e</guid>
      <description>&lt;p&gt;We are so excited to announce that the pre-orders for our upcoming book, &lt;a href="https://www.creative-tim.com/courses/fundamentals-ui-ux?ref=devto"&gt;"Fundamentals of Creating a Great UI/UX"&lt;/a&gt;, are already available starting from this week. With this new project, we aim to provide reliable up-to-date information and best practices for web designers that are beginners or web developers who want to develop their skills and develop an eye for design, not just for code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-story-behind-our-book"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The Story Behind our Book&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;In 2014, Alexandru Paduraru and his team decided that it was time to create the development tools that would power businesses and individuals to create better-looking web projects worldwide. Later on, after 8 years of crafting the next generation's web design tools, UI Kits, Admin Dashboards, and Mobile App Templates, we decided to give back from our know-how. &lt;a href="https://www.linkedin.com/in/elisa-paduraru-b9ab83170/"&gt;Elisa Paduraru&lt;/a&gt;, the Chief Design Officer at &lt;a href="https://www.creative-tim.com/?ref=devto"&gt;Creative Tim&lt;/a&gt;, started to write our first UI/UX Book Guide based on our accumulated experience.&lt;/p&gt;

&lt;p&gt;Elisa started to write the book in 2020 during pandemic isolation and after long days of working combined with book writing, she finished the first draft during the Christmas holidays. The book had a set of feedback sessions coming from the team members, especially from &lt;a href="https://twitter.com/axelut"&gt;Alex Paduraru&lt;/a&gt; (&lt;a href="https://www.creative-tim.com/?ref=devto"&gt;Creative Tim's&lt;/a&gt; co-founder). So at the beginning of this year, the writing process was finally done.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zJr8ocf_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2022/01/img-4-copy-4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zJr8ocf_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2022/01/img-4-copy-4.jpg" alt="book author" width="880" height="494"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we started talking about cover details with the talented designer Paul Virlan from &lt;a href="https://www.vrln.studio/"&gt;Studio VRLN&lt;/a&gt;, we thought about our "evergreen content" and nature. The last one provides the perfect inspirational framework for people. When you think about nature, you see leaves, birds, trees, same as when you think about a website, and you imagine website elements, buttons, navbars, cards. The cover is also inspired by the Victorian design. The information we included in our book is complex, strong,  and atemporal, the same as this style.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w2djosJw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2022/01/book-cover.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w2djosJw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2022/01/book-cover.png" alt="book cover" width="880" height="494"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-the-book-include"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What does the book include?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.creative-tim.com/courses/fundamentals-ui-ux?ref=devto"&gt;Fundamentals of Creating a Great UI/UX&lt;/a&gt;&lt;/strong&gt; by Creative Tim includes six parts (chapters) that walk the reader through the process of designing a website from the basic elements like buttons, cards to the macro elements like sections and pages.&lt;br&gt;
After reading our book, you will learn how to Design &amp;amp; Use all the UI/UX design components for your Web Pages &amp;amp; Mobile Apps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PZfBLrsR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2022/01/img-4-copy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PZfBLrsR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2022/01/img-4-copy.jpg" alt="ui ux design book content" width="880" height="494"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's see each chapter's details:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Part 1: The Evolution Of Design - From hieroglyphs to glassmorphism, the first part of the book will help you better understand which events have substantially impacted the history of design, the evolution, and &lt;em&gt;the trends&lt;/em&gt; over time until today.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Part 2: UI/UX Design Introduction - In this part, you will better understand UI Design and UX Design concepts, what each one works with, and the differences between them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Part 3: The Anatomy Of The Elements- In this part, you will learn how to create elements such as buttons, inputs, shadows, color palettes, gradients, and more. You will also learn how to use icons or illustrations correctly.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Part 4: An Eye For UI/UX Design - All elements can create sections such as navbars, headers, features, cards, teams, tables, footers, and more. You will learn how to place the elements, what the "must-have" elements are, and what to avoid.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Part 5: Real-Life Applications - In this part, you will learn which sections should appear on different pages such as About Us, Profile Page, E-commerce, Blog Post, Rental Page, Sign In/Sign Up, Policies, or Admin Dashboard.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Part 6: Great Website Designs - The last part contains details about the evolution of some websites that respect the design rules, have elements that adapt their design according to the trend, and present a positive User Experience.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J7A_tC-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2022/01/img-4-copy-5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J7A_tC-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2022/01/img-4-copy-5.jpg" alt="web design book on shelf" width="880" height="494"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is nice about our book is that it is not a theory book; we use the power of images and exemplification.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Curious about our book? We offer a free sample that will help you get the feel of it. &lt;a href="https://www.creative-tim.com/courses/fundamentals-ui-ux?ref=devto"&gt;Visit the official book page&lt;/a&gt; and sign up for the Free Preview!&lt;/p&gt;

&lt;p&gt;Are you already interested? &lt;a href="https://www.creative-tim.com/courses/fundamentals-ui-ux?ref=devto"&gt; Pre-order our book now&lt;/a&gt; and get the lowest price!&lt;/p&gt;

&lt;p&gt;We are constantly thinking about making our products intuitive, beautiful, and extremely easy to understand, so please tell us your thoughts about our upcoming book here on &lt;strong&gt;&lt;a href="https://twitter.com/CreativeTim/status/1484533234373386244"&gt;our Twitter post&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

</description>
      <category>ux</category>
      <category>userinterface</category>
      <category>books</category>
      <category>webdesign</category>
    </item>
    <item>
      <title>Responsive Background Images with image-set, the srcset for background-image</title>
      <author>Ingo Steinke</author>
      <pubDate>Mon, 24 Jan 2022 09:56:45 +0000</pubDate>
      <link>https://dev.to/ingosteinke/responsive-background-images-with-image-set-the-srcset-for-background-image-259a</link>
      <guid>https://dev.to/ingosteinke/responsive-background-images-with-image-set-the-srcset-for-background-image-259a</guid>
      <description>&lt;p&gt;Source sets can help us to make websites load faster. We can use them in different ways to offer browsers alternative versions of the same image to match screen size, pixel density, or network speed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-source-set-for-background-images"&gt;
  &lt;/a&gt;
  A Source Set for Background Images
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/image/image-set()"&gt;image-set&lt;/a&gt; property allows us to do the same for background images in CSS. This feature has been &lt;a href="https://stackoverflow.com/questions/26801745/is-there-a-srcset-equivalent-for-css-background-image"&gt;requested for years&lt;/a&gt;, but it did not get the same hype as other, newer, CSS features like &lt;a href="https://dev.to/ingosteinke/css-hasparent-selectors-287c"&gt;parent selectors&lt;/a&gt; or &lt;a href="https://dev.to/ingosteinke/a-css-container-queries-example-1le0"&gt;container queries&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#understanding-image-sets-step-by-step"&gt;
  &lt;/a&gt;
  Understanding Image Sets step by step
&lt;/h3&gt;

&lt;p&gt;First, let's make sure we understand source sets.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-source-sets-and-how-to-use-them"&gt;
  &lt;/a&gt;
  What are source sets and how to use them?
&lt;/h2&gt;

&lt;p&gt;In a typical use case, we provide different image versions and add our recommendation for appropriate screen sizes, but it's up to the browser to decide which image to load:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;image-set()&lt;/code&gt; function allows an author to ignore most of these issues, simply providing multiple resolutions of an image and letting the user agent decide which is most appropriate in a given situation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Source: &lt;a href="https://drafts.csswg.org/css-images-4/#image-set-notation"&gt;csswg.org&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#providing-image-files"&gt;
  &lt;/a&gt;
  Providing Image Files
&lt;/h2&gt;

&lt;p&gt;Let's start an put one image in an image element, for example &lt;a href="https://www.flickr.com/photos/fraktalisman/51224349248/"&gt;this photography of a landscape&lt;/a&gt;, 2048 pixels wide, and 1536 pixels high. As a high resolution photography with a lot of details, the file size is 557.7 kB, which is roughly half a megabyte.&lt;/p&gt;

&lt;p&gt;We will use an image element to show this photograph on our website. We must specify the image source (the URL to the image file) and the original image dimensions (width and height).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
  &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"large-landscape-2048x1536.jpg"&lt;/span&gt;
  &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"2048"&lt;/span&gt;
  &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"1536"&lt;/span&gt;
  &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"landscape"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Adding the following style sheet will make browsers resize our image (and every other image on that page) proportionally when the horizontal viewport with is smaller than the original image width.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can test that it works as intented.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/openmindculture/embed/zYEVBjO?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-what-a-waste-of-bandwidth"&gt;
  &lt;/a&gt;
  But what a waste of bandwidth!
&lt;/h3&gt;

&lt;p&gt;This is responsive in a visual way, but even on a small old mobile phone, browsers will still load the same large image file, half a megabyte of data, only to display a shrunk version of the same image on a tiny screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hxQ3eIyW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/piq1saqjg7k9fh23bly4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hxQ3eIyW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/piq1saqjg7k9fh23bly4.jpg" alt="Same large image on a small mobile phone screen" width="539" height="271"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-much-smaller-image-file-that-still-looks-good"&gt;
  &lt;/a&gt;
  A much smaller Image File that still looks good
&lt;/h3&gt;

&lt;p&gt;If our mobile screen is 326 CSS pixels wide, at a resolution of 2 device pixels per CSS pixel, we need an image of 750 x 536 pixels to fill our screen. Scaling our image down to that size and saving it as a high quality JPEG file (with JPEG quality set to 80), the new image file only takes up 90 kilobytes, and the image still looks good.&lt;/p&gt;

&lt;p&gt;And if you're not too ambitious, so does the 70 kB file after further image processing on codepen's asset server:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--79IrxD4v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.codepen.io/2332100/large-landscape-750x536.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--79IrxD4v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.codepen.io/2332100/large-landscape-750x536.jpg" alt="large-landscape-750x536.jpg" width="750" height="563"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-source-sets-and-sizes-to-our-image-elements"&gt;
  &lt;/a&gt;
  Adding Source Sets and Sizes to our Image Elements
&lt;/h3&gt;

&lt;p&gt;Now let's tell our browser to use the smaller version if the screen size is not larger than 750 (CSS) pixels. We can add a &lt;code&gt;srcset&lt;/code&gt; attribute to our existing image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
  &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"large-landscape-2048x1536.jpg"&lt;/span&gt;
  &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"small-landscape-750x536.jpg 750w,
          large-landscape-2048x1536.jpg 20480w"&lt;/span&gt;
  &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"2048"&lt;/span&gt;
  &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"1536"&lt;/span&gt;
  &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"landscape"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more complex definitions, we could wrap a picture element around our image and add multiple source elements each with its own srcset attribute. That can be handy if we need to combine different aspects of &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images"&gt;responsive images&lt;/a&gt; for the same image element, like screen width and pixel density.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#responsive-background-images"&gt;
  &lt;/a&gt;
  Responsive Background Images
&lt;/h2&gt;

&lt;p&gt;Why use background images at all? Well, in the old days before the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit"&gt;object-fit property&lt;/a&gt; and before layering content using &lt;code&gt;positioning&lt;/code&gt; and &lt;code&gt;z-index&lt;/code&gt; worked as it did today, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-image"&gt;background images&lt;/a&gt; were a very useful technique to code hero banners and they still provide an easy way to add optional decoration to pages and elements.&lt;/p&gt;

&lt;p&gt;Despite their smooth and flexible visual styling, it used to be impossible to optimize background images to save mobile bandwidth, and the warning about &lt;a href="https://caniuse.com/?search=image-set"&gt;"very limited support" of the image-set property&lt;/a&gt; probably did not help to make it popular among web developers either.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-image-sets-for-background-images"&gt;
  &lt;/a&gt;
  Using Image Sets for Background Images
&lt;/h3&gt;

&lt;p&gt;Defining an &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/image/image-set()"&gt;image-set&lt;/a&gt; for a background-image url is easy if we know how to use &lt;code&gt;srcset&lt;/code&gt; attributes for &lt;code&gt;img&lt;/code&gt; and &lt;code&gt;source&lt;/code&gt; elements.&lt;/p&gt;

&lt;p&gt;A drawback of limited &lt;code&gt;image-set&lt;/code&gt; support in current browsers is that we can't use pixel width resolutions, so we have to set &lt;a href="https://elad.medium.com/understanding-the-difference-between-css-resolution-and-device-resolution-28acae23da0b"&gt;pixel density&lt;/a&gt; (&lt;code&gt;1x&lt;/code&gt;, &lt;code&gt;2x&lt;/code&gt;) etc. as a selector instead.&lt;/p&gt;

&lt;p&gt;We can use image-set as a replacement for a single url, so that&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.landscape-background&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(large-landscape-2048x1536.jpg)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;...becomes...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.box&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;image-set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="sx"&gt;url("small-landscape-750x536.jpg")&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="sx"&gt;url("large-landscape-2048x1536.jpg")&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the sake of maximum browser compatibility, we should add a webkit-prefixed version as well as a single image url. Currently, Chrome browser still don't support the unprefixed version.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.box&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("small-landscape-750x536.jpg")&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;-webkit-image-set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="sx"&gt;url("small-landscape-750x536.jpg")&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="sx"&gt;url("large-landscape-2048x1536.jpg")&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;image-set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="sx"&gt;url("small-landscape-750x536.jpg")&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="sx"&gt;url("large-landscape-2048x1536.jpg")&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#progressive-enhancement-with-wunits"&gt;
  &lt;/a&gt;
  Progressive Enhancement with w-Units
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://drafts.csswg.org/css-images-4/#image-set-notation"&gt;CSS 4 Images draft&lt;/a&gt; already proposed to introduce width and height units in the future:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We should add "w" and "h" dimensions as a possibility to match the functionality of HTML’s picture.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While the quoted "we should add" was meant to say that browser vendors should add the functionality to their CSS engines, it could also mean that we, as web developers, should add the dimensions to our code even before any browser actually supports them.&lt;/p&gt;

&lt;p&gt;Using &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Progressive_Enhancement"&gt;progressive enhancement&lt;/a&gt;, which means to use new features in an optional way, we could simply add another line with a width-based image-set. It will be ignored for containing (currently) invalid values, but it will start to work once browsers start to implement the new syntax.&lt;/p&gt;

&lt;p&gt;Last but not least, we can add a static background color which will display before the image has loaded, or in case the image fails to load for some reason.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.box&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;skyblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("small-landscape-750x536.jpg")&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;-webkit-image-set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="sx"&gt;url("small-landscape-750x536.jpg")&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="sx"&gt;url("large-landscape-2048x1536.jpg")&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;image-set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="sx"&gt;url("small-landscape-750x536.jpg")&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="sx"&gt;url("large-landscape-2048x1536.jpg")&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;image-set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="sx"&gt;url("small-landscape-750x536.jpg")&lt;/span&gt; &lt;span class="m"&gt;750&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="sx"&gt;url("large-landscape-2048x1536.jpg")&lt;/span&gt; &lt;span class="m"&gt;20480&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Firefox 96 supports &lt;code&gt;image-set&lt;/code&gt; without prefix, but still sees &lt;code&gt;750w&lt;/code&gt; and &lt;code&gt;2048w&lt;/code&gt; as invalid values, falling back to the &lt;code&gt;image-set&lt;/code&gt; with density values.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YJdaOe6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7qzqto8icd2a1eioyr0d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YJdaOe6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7qzqto8icd2a1eioyr0d.png" alt="Image description" width="674" height="209"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Internet Explorer would still recognize our first line, the background image wihtout an &lt;code&gt;image-set&lt;/code&gt;, so it looks we're all set to have a nice display in every browser, and a performance optimiziation for the progressive ones.&lt;/p&gt;

&lt;p&gt;This is our complete demo code in action:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/openmindculture/embed/KKXjMRr?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next-in-css"&gt;
  &lt;/a&gt;
  What's next in CSS?
&lt;/h2&gt;

&lt;p&gt;Thanks for reading, and watch out, there is more to come!&lt;/p&gt;

</description>
      <category>css</category>
      <category>todayilearned</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>A11y tips: don't remove focus indicator</title>
      <author>Carlos Espada</author>
      <pubDate>Mon, 24 Jan 2022 09:47:10 +0000</pubDate>
      <link>https://dev.to/carlosespada/a11y-tips-dont-remove-focus-indicator-1lpe</link>
      <guid>https://dev.to/carlosespada/a11y-tips-dont-remove-focus-indicator-1lpe</guid>
      <description>&lt;p&gt;Very often we use &lt;code&gt;outline: 0&lt;/code&gt; to remove the effect of focusing on an element. This, which initially prevents a border from wrapping around it when you click/touch on it, means that &lt;strong&gt;users navigating using the keyboard don't have a visual indicator of which element has focus&lt;/strong&gt;. And we know that &lt;a href="https://noti.st/ericwbailey/TcMJFP"&gt;every interactive element needs a focus indicator&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Therefore, it is recommended to address this problem using some of these solutions:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-style-raw-outline-property-endraw-"&gt;
  &lt;/a&gt;
  1. Style &lt;code&gt;outline property&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Use CSS to give the outline the effect you want, for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;button:focus {
  outline: 4px dashed black;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-style-element-itself"&gt;
  &lt;/a&gt;
  2. Style element itself
&lt;/h2&gt;

&lt;p&gt;Remove the outline but design other styles for the focused element, using the CSS properties that suit you best: &lt;code&gt;border&lt;/code&gt;, &lt;code&gt;background-color&lt;/code&gt;, &lt;code&gt;text-decoration&lt;/code&gt;, &lt;code&gt;color&lt;/code&gt;... In case you choose this option, it is important to be careful &lt;a href="https://www.w3.org/TR/WCAG21/#use-of-color"&gt;not to use the color&lt;/a&gt; as the only element to provide information about the focus, since there may be colorblind people who are not able to distinguish between the normal state and the focus state.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;button:focus {
  outline: none;
  /* any accessible style you want here */
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-remove-outline-for-mouse-users-only"&gt;
  &lt;/a&gt;
  3. Remove outline for mouse users only
&lt;/h2&gt;

&lt;p&gt;Since the problem occurs when mouse users click/touch on an interactive element, it seems best to remove the outline for these users only. Luckily we have a well-supported CSS pseudo-class at our disposal that allows us to do something like this: &lt;code&gt;:focus-within&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;With &lt;a href="https://caniuse.com/css-focus-visible"&gt;good browser support&lt;/a&gt; we can now do something like what &lt;a href="https://twitter.com/LeaVerou/status/1045768279753666562"&gt;Lea Vérou proposes&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;button:focus:not(:focus-visible) {
  outline:none;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This way we &lt;strong&gt;only remove the outline for users clicking/touching&lt;/strong&gt; the element, and we can complete our styles using the same pseudo-class for keyboard navigation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;button:focus-visible {
  outline: 4px dashed black;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are very good articles on this subject by &lt;a href="https://css-tricks.com/the-focus-visible-trick/"&gt;Chris Coyier&lt;/a&gt; and &lt;a href="https://www.tpgi.com/focus-visible-and-backwards-compatibility/"&gt;Patrick H. Lauke&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>tips</category>
      <category>html</category>
    </item>
    <item>
      <title>What are modern examples of Embrace, Extend, and Extinguish?</title>
      <author>Meat Boy</author>
      <pubDate>Mon, 24 Jan 2022 09:40:20 +0000</pubDate>
      <link>https://dev.to/meatboy/what-are-modern-examples-of-embrace-extend-and-extinguish-21j3</link>
      <guid>https://dev.to/meatboy/what-are-modern-examples-of-embrace-extend-and-extinguish-21j3</guid>
      <description>&lt;p&gt;Some time ago Microsoft was well known for their EEE strategy to overtaking the IT markets. Firstly they created a tool using open and popular standards, then created a proprietary extension which quickly gained popularity and finally used this extension to control all the market and extinguish their competitor.&lt;/p&gt;

&lt;p&gt;Currently, I see nothing has changed in Microsoft and sometimes, you can still hear about open source anti-trust activities like removing at the last moment support for hot reloading from .NET &lt;a href="https://github.com/dotnet/sdk/pull/22217"&gt;https://github.com/dotnet/sdk/pull/22217&lt;/a&gt; and locking conversation. Just because PR spread over the Internet they reverted commit.&lt;/p&gt;

&lt;p&gt;In 2018 Slack chat moved from open source IRC and XMPP to their protocol making it difficult to swap messenger clients &lt;a href="https://www.theregister.com/2018/03/09/slack_cuts_ties_to_irc_and_xmpp/"&gt;https://www.theregister.com/2018/03/09/slack_cuts_ties_to_irc_and_xmpp/&lt;/a&gt; Anyone who wanted to stay with their ecosystem since then had to use their proprietary client.&lt;/p&gt;

&lt;p&gt;Some developers are afraid of the recent activity of Microsoft in the IT toolchain: GitHub, NPM, Copilot, TypeScript, Codespaces, VS Online and so on. Most of these tools are open source at the ground level, but they contain proprietary code and every time we are using them we are helping Microsoft to centralize the industry.&lt;/p&gt;

&lt;p&gt;What are others recent EEE examples you heard about?&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>microsoft</category>
      <category>opensource</category>
      <category>github</category>
    </item>
    <item>
      <title>AWS open source news and updates, #97</title>
      <author>Ricardo Sueiras</author>
      <pubDate>Mon, 24 Jan 2022 09:23:24 +0000</pubDate>
      <link>https://dev.to/aws/aws-open-source-news-and-updates-97-55gf</link>
      <guid>https://dev.to/aws/aws-open-source-news-and-updates-97-55gf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#jan-22nd-2022-instalment-97"&gt;
  &lt;/a&gt;
  Jan 22nd, 2022 - Instalment #97
&lt;/h2&gt;

&lt;p&gt;Newsletter #97. &lt;/p&gt;

&lt;p&gt;Welcome to another edition of the AWS open source newsletter, packed with more great new open source projects, content, and events. This week, we have new projects that help you improve security by de-obfuscating strings, a library to help you automate the configuration of your build pipelines, a new Terraform module, a nice new VSCode plugin that will help you when working with IAM, and several more. For open source content, the topics covered this week include Apache Spark, Apache Iceberg, OpenTelemetry, PostgreSQL, Jupyter, Apache Airflow, Apache Log4j,RabbitMQ, Amazon Corretto, AWS ParallelCluster, Hugging Face, OpenSearch and more. Make sure you don't miss this weeks video on Smith, and we have four meet-ups happening later this week, check those out too. &lt;/p&gt;

&lt;p&gt;As always, if you have any cool posts you would like me to share, or if you have a request for particular topics you would like to see more of, then please drop me a message or write a comment below.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#celebrating-open-source-contributors"&gt;
  &lt;/a&gt;
  Celebrating open source contributors
&lt;/h3&gt;

&lt;p&gt;The articles posted in this series are only possible thanks to contributors and project maintainers and so I would like to shout out and thank those folks who really do power open source and enable us all to build on top of what they have created. &lt;/p&gt;

&lt;p&gt;So thank you to the following open source heroes: Ashwin Pc, Drew Mullen, Ben Kehoe, Sebastian Bille, Gaurav Dhamija, 방신우, Vikram Mehto, Yoginder Sethi, Ganesh Sawhney, Qiang Zhang, Ryan Dsouza, Yaser Raja, Peter Celentano, Manuel Pozo, Jérôme Van Der Linden, Antonio Lagrotteria, Simon Willison, Beau Carnes, and Michael Dowling.&lt;/p&gt;

&lt;p&gt;Make sure you find and follow these builders and keep up to date with their open source projects and contributions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#latest-open-source-projects"&gt;
  &lt;/a&gt;
  Latest open source projects
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;jndi-deobfuscate-python&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/1a1"&gt;jndi-deobfuscate-python&lt;/a&gt; This tool processes text logs to look for Java Naming and Directory Interface (JNDI) lookup strings, and outputs deobfuscated strings when it finds them. De-obfuscated strings can be used by other tools (not included), in order to retrieve malicious payloads from an attacker. JNDI lookup strings came into spotlight during a recent series of Common Vulnerabilities and Exposures (CVEs) around a popular Java logging library, Apache Log4j.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-codeseeder&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/1a2"&gt;aws-codeseeder&lt;/a&gt; this project enables builders to easily "seed" python code to AWS CodeBuild for execution in their cloud environments. aws-codeseeder eliminates the need to install and configure libraries and utilities locally or on a build system (i.e. Jenkins). Instead the library enables builders to easily execute an AWS CodeBuild instance with the utilities they require then seed local python code to, and execute it within, the CodeBuild instance. Check out the detailed &lt;a href="https://aws-oss.beachgeek.co.uk/1a3"&gt;docs&lt;/a&gt; for more info on how this works.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fMt7H_xB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aws-codeseeder.readthedocs.io/en/latest/_images/seedkit_resources.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fMt7H_xB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aws-codeseeder.readthedocs.io/en/latest/_images/seedkit_resources.png" alt="arch" width="588" height="648"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;route53-recovery-controller&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/1a5"&gt;route53-recovery-controller&lt;/a&gt; Drew Mullen released his first Terraform Module as part of the Amazon Web Services (AWS) Integrations &amp;amp; Automations (I&amp;amp;A) team, Route53 Application Recovery Controller (ARC). Route 53 ARC can continuously monitor your application's ability to recover from failure and control recovery across multiple AWS Availability Zones, AWS Regions, and on-premises environments. And this module makes it easy to add resiliency to your already deployed applications!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;iam-legend&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/1a0"&gt;iam-legend&lt;/a&gt; AWS Community Builder Sebastian Bille has put together this useful extension for VSCode users (like me!) that make it easier when working with IAM policies, and provides IAM policy actions autocomplete, documentation &amp;amp; wildcard resolution. Nice!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-lambda-api-event-utils&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/19x"&gt;aws-lambda-api-event-utils&lt;/a&gt; this library from Ben Kehoe starts with the question "There are many other libraries, in Python and in other languages, for handling HTTP events in Lambda. So why this library?" Find out the answer by checking out this project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;assume-aws-role-action&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/19w"&gt;assume-aws-role-action&lt;/a&gt; these GitHub actions enable workflows to obtain AWS Access Credentials for a desired IAM Role using AWS IAM SAML and a GitHub Actions Repository Token.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;s3-credentials&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/19t"&gt;s3-credentials&lt;/a&gt; is an open source project from Simon Willison that helps you create credentials for accessing S3 buckets. In the latest update from his blog, &lt;a href="https://aws-oss.beachgeek.co.uk/19u"&gt;Weeknotes: s3-credentials prefix and Datasette 0.60&lt;/a&gt;, he shares some new features of this project, that might be especially helpful if you are building multi-tenet solutions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;simpleWSAPI&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/19m"&gt;simpleWSAPI&lt;/a&gt; this repo contains an implementation of a simple real-time API based on WebSockets where clients are subscribed to a specific channel and any JSON data can be pushed automatically to clients listening/subscribed to the channel. To help you walk through this, check out the post from Ed Lima &lt;a href="https://aws-oss.beachgeek.co.uk/19n"&gt;Simple serverless WebSocket real-time API with AWS AppSync (little or no GraphQL experience required)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7mz8Jxvb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/0a57cb53ba59c46fc4b692527a38a87c78d84028/2021/11/18/simplewsapi1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7mz8Jxvb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/0a57cb53ba59c46fc4b692527a38a87c78d84028/2021/11/18/simplewsapi1.png" alt="arch" width="880" height="449"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cdk-neptune-knowledge-graph&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/1a4"&gt;cdk-neptune-knowledge-graph&lt;/a&gt; this sample application deploys a Neptune cluster and a static web site to provide a convenient user interface for building a knowledge graph. It uses Cognito to provide authentication to the web site. Read the README for more details.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fMrV34o7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws-samples/cdk-neptune-knowledge-graph/blob/main/graph-ui.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fMrV34o7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws-samples/cdk-neptune-knowledge-graph/blob/main/graph-ui.png%3Fraw%3Dtrue" alt="demo" width="880" height="665"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;dms-psql-post-data&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/sinwoobang/dms-psql-post-data"&gt;dms-psql-post-data&lt;/a&gt; 방신우 shares this script that may come in hand if you are looking at doing any PostgreSQL-to-PostgreSQL migrations. Why might you need this script? Well, its in the README, but to summarise, this script can help you resolve some artefacts that are not migrated, and if you want to target the migrated database as primary.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DIAL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/19z"&gt;DIAL&lt;/a&gt; DIAL(Did I Alert Lambda?) is an open source project that provides a centralised security misconfiguration detection framework which completely runs on AWS Managed services like AWS API Gateway, AWS Event Bridge &amp;amp; AWS Lambda&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8hKnCpSh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/CRED-CLUB/DIAL/blob/main/images/dial-arch.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8hKnCpSh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/CRED-CLUB/DIAL/blob/main/images/dial-arch.png%3Fraw%3Dtrue" alt="arch" width="880" height="534"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-and-community-blog-posts"&gt;
  &lt;/a&gt;
  AWS and Community blog posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;OpenTelemetry&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In &lt;a href="https://aws-oss.beachgeek.co.uk/19d"&gt;Build an observability solution using managed AWS services and the OpenTelemetry standard&lt;/a&gt; Gaurav Dhamija, Vikram Mehto, and Yoginder Sethi share how to build an open standards observability solution using managed AWS services. The posts covers how to centralise the metrics, traces, and logs collected from workloads running in various AWS accounts using  AWS Distro for OpenTelemetry (ADOT), Amazon Managed Grafana, Amazon Managed Service for Prometheus, and Amazon OpenSearch Service. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vZBo-Hv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/972a67c48192728a34979d9a35164c1295401b71/2021/12/21/fig3w.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vZBo-Hv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/972a67c48192728a34979d9a35164c1295401b71/2021/12/21/fig3w.jpg" alt="arch" width="880" height="632"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Graph Notebooks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Whether you’re creating a new graph data model and queries, or exploring an existing graph dataset, it can be useful to have an interactive query environment that allows you to visualise the results. In the post, &lt;a href="https://aws-oss.beachgeek.co.uk/19h"&gt;Use Docker containers to deploy Graph Notebooks on AWS&lt;/a&gt;, Ganesh Sawhney and Qiang Zhang share how to host a Jupyter notebook and use it to load data into your Amazon Neptune database, query it, and visualise the results. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8HIT8fE3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2018/10/31/neptune-sagemaker-4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8HIT8fE3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2018/10/31/neptune-sagemaker-4.gif" alt="demo" width="760" height="944"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are looking for guidance on how to set up PostgreSQL bi-directional replication using pglogical, Yaser Raja and Peter Celentano have you covered in their post, &lt;a href="https://aws-oss.beachgeek.co.uk/19p"&gt;PostgreSQL bi-directional replication using pglogical&lt;/a&gt; [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Slgt6flQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2022/01/12/DBBLOG-1010-image001.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Slgt6flQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2022/01/12/DBBLOG-1010-image001.png" alt="arch" width="880" height="657"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OpenSearch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ashwin Pc explores how plugins work for OpenSearch Dashboards in his post, &lt;a href="https://aws-oss.beachgeek.co.uk/1a6"&gt;Introduction to OpenSearch Dashboard Plugins&lt;/a&gt; [hands on]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Micro-Frontends using AWS CDK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the follow up from a post where Antonio Lagrotteria shared the first in a series of posts aimed at showing you how to build a complete server-less architecture aiming at deploying and hosting client-side mono-repo micro-frontends, this time he is back with a post that walks you through how to provision a mono-repo micro-frontend architecture in his post, &lt;a href="https://aws-oss.beachgeek.co.uk/19s"&gt;A Complete CDK for a Module-Federated Micro-Frontends AWS Architecture&lt;/a&gt;. Great post, and can't wait for the next instalment. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1c4FCQ0z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2AMq2vklIlB-LvVLzQmh0xQQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1c4FCQ0z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2AMq2vklIlB-LvVLzQmh0xQQ.png" alt="arch" width="880" height="436"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Airflow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you love learning from how companies use technology, then you will love this post from the lovely folk at Voodoo, &lt;a href="https://aws-oss.beachgeek.co.uk/19r"&gt;How Voodoo did Airflow 101&lt;/a&gt;. Manuel Pozo shares their experience on how Voodoo run Apache Airflow, but also the pros and cons of this platform, and a few tips to work around some issues they found during their journey.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B-AkZmmc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2636/1%2A6Z9YMVIaXC4T0hDbjGI7eg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B-AkZmmc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2636/1%2A6Z9YMVIaXC4T0hDbjGI7eg.png" alt="demo" width="880" height="320"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Log4j&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A couple of posts this weeks, covering Apache Log4j. In light of the recent security incidents, these are worth reading.&lt;/p&gt;

&lt;p&gt;First up we have Ryan Dsouza, who provides guidance to help industrial customers respond to the recently disclosed Log4j vulnerability, in his post &lt;a href="https://aws-oss.beachgeek.co.uk/19k"&gt;What actions customers can take to protect, detect, and respond to Log4j vulnerabilities in Operational Technology (OT) and Industrial Internet of Things (IIoT) environments&lt;/a&gt;. He covers how to identify if you are susceptible to the issue, and then how to address the vulnerability.&lt;/p&gt;

&lt;p&gt;Following that we have our friends at the fictitious company, "I Love My Local Farmer", where Jérôme Van Der Linden takes a look at a practical example of how this might impact you and some of the options you have to help protect yourself in the post, &lt;a href="https://aws-oss.beachgeek.co.uk/19q"&gt;Protecting from vulnerabilities in Java: How we managed the log4j crisis&lt;/a&gt; [hands on]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Other posts worth checking out&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Last week, these posts also caught my eye.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/19i"&gt;Distributed fine-tuning of a BERT Large model for a Question-Answering Task using Hugging Face Transformers on Amazon SageMaker&lt;/a&gt; looks at how you can accelerate training and fine-tuning of Hugging Face Transformer models using SageMaker distributed libraries&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/19j"&gt;Using the ParallelCluster 3 Configuration Converter&lt;/a&gt; helps you get started with AWS ParallelCluster 3, a major release with several changes and a lot of new features&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/19o"&gt;Using Spot Instances with AWS ParallelCluster and Amazon FSx for Lustre&lt;/a&gt; will help you optimise your costs by showing you how to configure AWS ParallelCluster to handle Spot Instance interruption&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/19l"&gt;Broadpeak Launches New Video Streaming API SaaS Platform with Support from AWS SaaS Factory&lt;/a&gt; takes a peek at how Broadpeak navigated business and technical decisions to build the new platform as a software-as-a-service (SaaS) solution&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#quick-updates"&gt;
  &lt;/a&gt;
  Quick updates
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Apache Iceberg&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Announced last week was Amazon EMR 6.5.0 now includes Apache Iceberg version 0.12. Apache Iceberg is an open table format for large data sets in Amazon S3 and provides fast query performance over large tables, atomic commits, concurrent writes, and SQL-compatible table evolution. With the current release, you can use Apache Spark 3.1.2 on EMR clusters with the Iceberg table format.&lt;/p&gt;

&lt;p&gt;Apache Iceberg offers an open source table format for data stored in data lakes that helps data engineers manage complex challenges such as managing continuously evolving data sets while maintaining query performance. Iceberg allows you to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Maintain transactional consistency on tables between multiple applications where files can be added, removed or modified atomically with full read isolation and multiple concurrent writes&lt;/li&gt;
&lt;li&gt;Implement full schema evolution to track changes to a table over time&lt;/li&gt;
&lt;li&gt;Issue time travel queries to query historical data and verify changes between updates&lt;/li&gt;
&lt;li&gt;Organize tables into flexible partition layouts with partition evolution enabling updates to partition schemes as queries and data volumes change without relying on physical directories&lt;/li&gt;
&lt;li&gt;Rollback tables to prior versions to quickly correct issues and return tables to a known good state&lt;/li&gt;
&lt;li&gt;Perform advanced planning and filtering in high performance queries on large data sets etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Amazon Corretto&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On January 18th, Amazon announced quarterly security and critical updates for Amazon Corretto Long-Term Supported (LTS) versions. Corretto 11.0.14 and 8.322 are now available for download. Amazon Corretto 17 updates will be available shortly after the release is tagged in the OpenJDK 17 repository. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Spark&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon EMR now supports Apache Spark SQL to insert data into and update Glue Data Catalog tables when Lake Formation integration is enabled. Amazon EMR integration with AWS Lake Formation allows you to define and enforce database, table, and column-level permissions when Apache Spark users access data in Amazon S3 through the Glue Data Catalog. Previously, with AWS Lake Formation integration is enabled, you were limited to only being able to read data using Spark SQL statements such as SHOW DATABASES and DESCRIBE TABLE. Now, you can also insert data into, or update the Glue Data Catalog tables with these statements: INSERT INTO, INSERT OVERWRITE, and ALTER TABLE. This feature is enabled from Amazon EMR 5.34&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RabbitMQ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon MQ now provides support for RabbitMQ version 3.8.26. This patch update to RabbitMQ contains several fixes and enhancements compared to the previously supported version, RabbitMQ 3.8.23.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open Data&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Whilst not open source, open data helps builders spend more time on data analysis rather than data acquisition, making it easy to find a wide variety of datasets that are made publicly available. 19 new data sets are now available, covering climate and weather, geospatial, life sciences, and machine learning. Read the full announcement, &lt;a href="https://aws-oss.beachgeek.co.uk/19c"&gt;New datasets available on the Registry of Open Data from Meta, the Brazilian Space Agency, Radboud University Medical Center, and others&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#videos-of-the-week"&gt;
  &lt;/a&gt;
  Videos of the week
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Smithy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is a must watch video for those building APIs. Michael Dowling, shares they story of this great open source project, the origins, how to get started and how it is being used. Really great session, where time just seems to fly past.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3GpZzu4guTE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS CDK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are looking for an introduction in how to use AWS CDK as part of your infrastructure as code journey, then check out this session from Beau Carnes, &lt;a href="https://aws-oss.beachgeek.co.uk/19v"&gt;How to Define Cloud Infrastructure with the AWS Cloud Development Kit&lt;/a&gt;. Nice!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/T-H4nJQyMig"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#events-for-your-diary"&gt;
  &lt;/a&gt;
  Events for your diary
&lt;/h3&gt;

&lt;p&gt;If you have an event you want me to publish here, please contact me and I will include it in this listing. Later this week, we have some great meetups happening.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Startup Showcase Season&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;January 26th, 10:00am PDT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Join AWS and theCUBE as eight innovative companies within the AWS Partner ecosystem highlight their latest developments in the open source community.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/194"&gt;Register via this link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Serverless London User Group: Lambda Powertools&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;January, 26th at 9PM GMT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Don't miss this meetup, which will be "a relaxed conversation with Heitor Lessa, Sara Gerion and Yan Cui about the evolution of Lambda Powertools and how it can help you build serverless applications."&lt;/p&gt;

&lt;p&gt;Read more and register at, &lt;a href="https://aws-oss.beachgeek.co.uk/19b"&gt;Let's talk about Lambda Powertools!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud DevSecOps with Bridgecrew and Terraform&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Thursday, Jan 27 at 9am PT / 12pm ET&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;From scanning infrastructure as code (IaC) for security misconfigurations to implementing automated DevSecOps workflows, this workshop will provide a hands-on experience to automate your cloud security.&lt;/p&gt;

&lt;p&gt;Sign up and reserve your spot, &lt;a href="https://aws-oss.beachgeek.co.uk/19f"&gt;Cloud DevSecOps with Bridgecrew and Terraform&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Presto Tech Talks: Presto + Pinot by Uber &amp;amp; AWS Lake Formation by Ahana&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Friday, January 28, 5PM PT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Join this meetup to hear from speakers who are using Presto with Pinot and Presto with AWS Lake Formation. Learn from experienced developers who use Presto at scale, with their highly valuable insights!&lt;/p&gt;

&lt;p&gt;Read and register &lt;a href="https://aws-oss.beachgeek.co.uk/19g"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cfp"&gt;
  &lt;/a&gt;
  CFP
&lt;/h3&gt;

&lt;p&gt;A heads up to folks who are interested in all things Apache Airflow. Apache Airflow Summit 2022 has been announced and the call for papers (cfp) is now open. The bar for sessions is always very high, so looking forward to this event already.&lt;/p&gt;

&lt;p&gt;If you have an idea for a talk, why not submit one via the cfp process. Check out the event, &lt;a href="https://aws-oss.beachgeek.co.uk/19e"&gt;Apache Airflow Summit 2022&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you maybe have wanted to do a session, then I am very happy to help with feedback or coaching to help you feel more comfortable in creating and/or delivering your session. If this something that has been on your mind, but you just needed a little support, PLEASE get in touch.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stay-in-touch-with-open-source-at-aws"&gt;
  &lt;/a&gt;
  Stay in touch with open source at AWS
&lt;/h3&gt;

&lt;p&gt;I hope this summary has been useful. Remember to check out the &lt;a href="https://aws.amazon.com/opensource/?opensource-all.sort-by=item.additionalFields.startDate&amp;amp;opensource-all.sort-order=asc"&gt;Open Source homepage&lt;/a&gt; to keep up to date with all our activity in open source by following us on &lt;a href="https://twitter.com/AWSOpen"&gt;@AWSOpen&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>aws</category>
    </item>
  </channel>
</rss>
