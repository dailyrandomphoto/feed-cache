<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Create an AWS IAM account to deploy our applications with ASP.NET</title>
      <author>Daniel Gomez Jaramillo</author>
      <pubDate>Fri, 14 Jan 2022 13:26:39 +0000</pubDate>
      <link>https://dev.to/esdanielgomez/create-an-aws-iam-account-to-deploy-our-applications-with-aspnet-3bbd</link>
      <guid>https://dev.to/esdanielgomez/create-an-aws-iam-account-to-deploy-our-applications-with-aspnet-3bbd</guid>
      <description>&lt;p&gt;Amazon Web Services, also known as AWS, is a suite of cloud computing tools and services from Amazon. In this first article, our goal will be to create an IAM (AWS Identity and Access Management) account, focused on deploying web applications ASP.NET. In this sense, this will be the process: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get an AWS Free Tier account.&lt;/li&gt;
&lt;li&gt;Set up an IAM account.&lt;/li&gt;
&lt;li&gt;Set policies for a given user in IAM.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#1-sign-up-for-an-aws-free-tier-account"&gt;
  &lt;/a&gt;
  1. Sign up for an AWS Free Tier account
&lt;/h2&gt;

&lt;p&gt;AWS has a free tier to test and consume services for 12 months. At the following address we can make the corresponding registration: &lt;a href="https://aws.amazon.com/free"&gt;aws.amazon.com/free&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is a fairly simple process, however, we must bear in mind that we must provide the data of our credit / debit card to activate it.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-set-up-an-iam-account"&gt;
  &lt;/a&gt;
  2. Set up an IAM account
&lt;/h2&gt;

&lt;p&gt;AWS &lt;em&gt;Identity and Access Management&lt;/em&gt; (IAM) provides fine-grained access control across AWS. With IAM, we can specify who can access which services and resources, and under what conditions. With IAM policies, we can also manage permissions for other users and systems we have in place to ensure least-privilege permissions.&lt;/p&gt;

&lt;p&gt;All right, assuming we've already created a root account, or if we already have one, when you sign in, you'll see the AWS console:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3aB7M5ht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qwxj3f845iqg6z684e3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3aB7M5ht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qwxj3f845iqg6z684e3.png" alt="" width="880" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When entering this IAM service, we will go to the Users section within the options menu and select Add User. The goal is to create a user, which will be used to associate the AWS services to be used, as it is not recommended to provide our root user access privileges. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X2Yf2W6Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3vk2g1orymii71s3t87.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X2Yf2W6Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3vk2g1orymii71s3t87.png" alt="" width="880" height="365"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The form to add a new user will look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vIqtBxqT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o66e32s3wgwf3lsiapgq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vIqtBxqT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o66e32s3wgwf3lsiapgq.png" alt="" width="874" height="518"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Once you are done creating the new IAM user, you need to download the credentials. These can be used later to perform an AWS configuration from Visual Studio for example. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--odDf_3s5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/put010of4ls7pwvqdp26.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--odDf_3s5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/put010of4ls7pwvqdp26.png" alt="" width="481" height="106"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note: It is very important to keep this CSV file in a safe place, as the access credentials are located there. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-set-user-policies"&gt;
  &lt;/a&gt;
  3. Set user policies
&lt;/h2&gt;

&lt;p&gt;Depending on our purpose, we may provide permissions to access and use AWS services for our users. Suppose that in this case we want to deploy our applications with ASP.NET Core from Visual Studio to AWS, for this our new IAM user needs to be able to access certain AWS services. In this case, we will address the user in question within IAM on AWS and select the option |Add inline policy|. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ra1MLeha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5w6w00f7ch8nrhpjpf5g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ra1MLeha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5w6w00f7ch8nrhpjpf5g.png" alt="" width="757" height="134"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, we will perform this process for each of the following services, which will be useful to be able to deploy our web applications ASP.NET:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Elastic Beanstalk&lt;/li&gt;
&lt;li&gt;EC2&lt;/li&gt;
&lt;li&gt;S3&lt;/li&gt;
&lt;li&gt;CloudFormation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qlf4k90p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vl1h4b5ck84jfy9kfxyo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qlf4k90p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vl1h4b5ck84jfy9kfxyo.png" alt="" width="880" height="498"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After adding each of the services, we will assign a name for this policy and save it. In the end we will have something like this: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZKs9x8JX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28njfw2xm8ga3hw3ywyi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZKs9x8JX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28njfw2xm8ga3hw3ywyi.png" alt="" width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Thanks for reading!&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;With this process, our IAM will be created, and policies will be in place. In future articles we will review how to access AWS from Visual Studio 2019 thanks to this configuration. &lt;/p&gt;

&lt;p&gt;If you have any questions or ideas in mind, it will be a pleasure to be able to be in communication and together exchange knowledge with each other.&lt;/p&gt;

&lt;p&gt;See you at &lt;a href="https://twitter.com/esDanielGomez"&gt;Twitter&lt;/a&gt;! Or if you like you can also write to me by other means: &lt;a href="https://esdanielgomez.com"&gt;esDanielGomez.com&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>aws</category>
      <category>dotnet</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Moving to Germany</title>
      <author>Santosh Yadav</author>
      <pubDate>Fri, 14 Jan 2022 13:00:26 +0000</pubDate>
      <link>https://dev.to/santoshyadav198613/moving-to-germany-4no9</link>
      <guid>https://dev.to/santoshyadav198613/moving-to-germany-4no9</guid>
      <description>&lt;p&gt;If you follow me, you know I have worked as a consultant for the last year. I have decided to take the next step in my career and move to Hamburg this week.&lt;/p&gt;

&lt;p&gt;It was a difficult choice, and I wanted to stay in india and grow with the community; the Indian tech community will always have a special place in my heart. I became GDE; you all voted me to be the First GitHub star from India and gave me lots of love.&lt;/p&gt;

&lt;p&gt;Some personal and professional decisions led to this.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Better community outreach: Being in Europe will give me access to a broad community, as the timezone in india sometimes affects the participation in many conferences and meetups.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;My future ambitions: It is not a secret that I want to work as a Developer Advocate one day. Last year, I got a few calls, but many discussions due to salary and location expectations didn't go ahead.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will not miss the Indian community at all, I will keep rooting for you all, and if you need any help from me, I am just a DM away. I was lucky to meet a few of you before moving. &lt;/p&gt;

&lt;p&gt;Six years ago, I came to Pune and got everything I came looking for in this City: a better life for my family, money, and peaceful life. Wish us that we get the same thing in a new country as we start a new chapter of our life.&lt;/p&gt;

</description>
      <category>career</category>
    </item>
    <item>
      <title>How to Create a Parking Space Finder App?</title>
      <author>Christine</author>
      <pubDate>Fri, 14 Jan 2022 12:57:21 +0000</pubDate>
      <link>https://dev.to/christinek989/how-to-create-a-parking-space-finder-app-4bf7</link>
      <guid>https://dev.to/christinek989/how-to-create-a-parking-space-finder-app-4bf7</guid>
      <description>&lt;p&gt;Around 95% of American households own a car, the &lt;a href="https://static.america.gov/uploads/sites/8/2016/04/You-Asked-Series_Does-Everyone-in-America-Own-a-Car_English_Lo-Res_508.pdf"&gt;Embassy of the United States of America&lt;/a&gt; says. In San Marino, the number of &lt;a href="https://www.titlemax.com/discovery-center/planes-trains-and-automobiles/u-s-cities-with-the-highest-and-lowest-vehicle-ownership/"&gt;cars per 1000 people is 1263&lt;/a&gt;. Estimates say the number of passenger cars worldwide is over 1 billion. No wonder traffic congestion has become a top problem both for the drivers and city administrations. In Moscow only, the average driver spends 210 hours a year waiting in traffic. &lt;br&gt;
Solution? Solutions are many like improving cycling infrastructure or building &lt;a href="https://cloudblogs.microsoft.com/industry-blog/automotive/2020/02/04/6-smart-mobility-solutions-that-are-helping-to-reduce-traffic-congestion/"&gt;connected infrastructure&lt;/a&gt;. While these are yet to proliferate in the future, parking space finder apps are an easier and more accessible way to solve the problem.&lt;br&gt;
If you are an entrepreneur and think of making money out of apps, parking space finder apps can be a great way of stepping into the market. How to create a parking space finder app? Before you get an answer to this question, you need to study the issue in depth. Sit comfortably and give yourself time to read this article. We will take you through a step by step process and help you build an app that is so much needed today.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-parking-owners-need-a-parking-finder-app"&gt;
  &lt;/a&gt;
  Why Parking Owners Need a Parking Finder App?
&lt;/h2&gt;

&lt;p&gt;Efficiency is on top of the list when it comes to parking space finder apps. If you manage to find a parking space today, your first reaction is “I did it!” You feel like a hero. &lt;br&gt;
But the fact is that not all parking lots are full. In fact, many drivers use only on-street parking lots. But there are also off-street and indoor parking lots that drivers are not even aware of or don't take the trouble to travel believing they won't find a space anyway. Having an app solves this problem as drivers can book a spot and make sure that they will have a space.&lt;br&gt;
Mobile apps also reduce the amount of work for the parking staff. E.g., inspectors can check license plates by using a smartphone camera if the mobile app has a feature for parking inspectors. They can then issue an electronic ticket in case of a violation. Parking staff can handle more work in a day with mobile apps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-a-parking-finder-mobile-app-work"&gt;
  &lt;/a&gt;
  How Does a Parking Finder Mobile App Work?
&lt;/h2&gt;

&lt;p&gt;Now let's get to the nuts and bolts of how things are done.&lt;br&gt;
The app locates the users and suggests spaces available in nearby parking lots. As simple as that. But how does that work in practice? There are some steps to follow. These are the six steps:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--akLTbYck--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a06nkmgg0tivfbrdd02y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--akLTbYck--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a06nkmgg0tivfbrdd02y.png" alt="Image description" width="880" height="220"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Searching:&lt;/strong&gt; first, the driver needs to enter the vehicle plate number and search for a parking space in the nearby area.&lt;br&gt;
&lt;strong&gt;Comparing:&lt;/strong&gt; they can compare the availability and charges and decide which one is the best fit according to price and distance or both of them.&lt;br&gt;
&lt;strong&gt;Booking:&lt;/strong&gt; Once they decide where to park, they need to specify the time and date and book a spot. They will be given a unique code after they book a space.&lt;br&gt;
&lt;strong&gt;Paying:&lt;/strong&gt; The driver needs to make a payment. Normally, payments are done online.&lt;br&gt;
&lt;strong&gt;Driving:&lt;/strong&gt; When they reach the parking lot, the app will guide them to their space through navigation.&lt;br&gt;
&lt;strong&gt;Parking:&lt;/strong&gt; finally, the drivers get their spots and park their cars.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-parking-finder-apps-make-money"&gt;
  &lt;/a&gt;
  How Do Parking Finder Apps Make Money?
&lt;/h2&gt;

&lt;p&gt;And, of course, the big issue. How do parking finder apps make money? At this age of apps when there are even &lt;a href="https://addevice.io/blog/how-to-make-a-mobile-wallet-app/"&gt;mobile wallet apps&lt;/a&gt; and &lt;a href="https://addevice.io/blog/how-do-free-apps-make-money-best-strategies-for-2020/"&gt;free apps that make money&lt;/a&gt;, it is no wonder that parking finder apps generate revenue. Below are the main sources of revenue for parking finder apps.&lt;br&gt;
&lt;strong&gt;Transaction fee&lt;/strong&gt;&lt;br&gt;
The obvious answer is that app owners take a commission on transactions. When a customer makes a payment, the app charges a portion as a transaction fee.&lt;br&gt;
But that is not the whole story.&lt;br&gt;
&lt;strong&gt;Premium listings&lt;/strong&gt;&lt;br&gt;
Parking space finder app owners can also charge parking lot owners. This is done when lot owners want to get a priority in selling their space.&lt;br&gt;
The parking space finder app owners may also offer premium membership to drivers for priority access to parking lots.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#some-tips-to-follow"&gt;
  &lt;/a&gt;
  Some Tips to Follow
&lt;/h3&gt;

&lt;p&gt;Needless to say that your app needs to be user-friendly and that you should research the market well before your product goes afloat. But here are some small tips that will help you add value.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Show details like photos, the cheapest time to park, or increase of charges;&lt;/li&gt;
&lt;li&gt;Include additional information like nearby restaurants, stores, gas stations, car washing services;&lt;/li&gt;
&lt;li&gt;Give the option to book in advance or on the go;&lt;/li&gt;
&lt;li&gt;Include information about charges and rates.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#recommended-features-for-your-car-parking-app-development"&gt;
  &lt;/a&gt;
  Recommended Features for Your Car Parking App Development
&lt;/h3&gt;

&lt;p&gt;The car parking app has 3 main interfaces:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;User interface&lt;/li&gt;
&lt;li&gt;Admin interface&lt;/li&gt;
&lt;li&gt;Parking owner interface
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c8Ik7fuJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6u2nmte1amp5dqocclx4.jpg" alt="Image description" width="504" height="521"&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#groups-of-parking-space-finder-apps"&gt;
  &lt;/a&gt;
  Groups of Parking Space Finder Apps
&lt;/h2&gt;

&lt;p&gt;Parking apps can be grouped according to these categories:&lt;br&gt;
&lt;strong&gt;By available spot&lt;/strong&gt;&lt;br&gt;
Most of the parking space finder apps are integrated with maps like Google maps or use GPS features to define the free slot in real-time. If your app has a GPS feature, it will update a valid spot every minute.&lt;br&gt;
Apps can also suggest entering the location code which is visible on the street sign. The codes are valid for parking within a specific area.&lt;br&gt;
You can integrate your app for on-street parking or off-street parking.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;On-Street Parking&lt;/strong&gt; – Some apps allow drivers to leave their car somewhere temporarily alongside the footpath or anywhere on the street.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Off-Street Parking&lt;/strong&gt; – These include garages, private areas, or driveways that can be both indoors and outdoors.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;By parking time&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Parking on the fly&lt;/strong&gt; – a driver may find a space right away.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Parking in advance&lt;/strong&gt; – An on-demand parking booking application may permit users to book a spot for two weeks in advance or more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;By geo-location&lt;/strong&gt;&lt;br&gt;
Parking apps may cover not only one area but a whole country. For example, Parkopedia covers up to 70 million parking spaces in 15000 cities. Drivers give their current location or address in order to locate available parking spaces. They can also get directions to the parking space.&lt;br&gt;
&lt;strong&gt;By payment method&lt;/strong&gt;&lt;br&gt;
Normally there is no charge for downloading parking apps but they contain integrated payment services. Among the most used methods are Apple Pay, Google Pay, PayPal, credit cards. Drivers can pay both online and in cash. Some apps suggest a prepayment option. Others give an option for payment by cash.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-cost-to-develop-a-parking-app"&gt;
  &lt;/a&gt;
  The Cost to Develop a Parking App
&lt;/h3&gt;

&lt;p&gt;Read also: &lt;a href="https://addevice.io/blog/how-much-does-it-cost-to-build-a-mobile-app/"&gt;How much does it cost to make an app for your business in 2021?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that you have a basic idea about why and how to create a parking space finder app, it's time to talk about your budget.&lt;br&gt;
The cost will depend on several factors like the features and functionalities, the design, technology stack, etc. However, the most determining factor is the location of your developers. For example, the hourly rate for software engineers in the USA and Canada ranges from $100 whereas in Eastern Europe it may be as low as $25-$50.&lt;br&gt;
That's why your app may cost you $10,000 but it may also cost you 5 times more.&lt;br&gt;
If you need a precise estimate for your app cost developed by a software development company in Eastern Europe, feel free to &lt;a href="https://addevice.io/contacts/"&gt;contact us&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So, why do you need a parking space finder app? Don’t laugh but chances are that you may generate 6-digit revenue. A UK-based company My Parking Space, for example, generates $12.7M in revenue. Parkpnp, an Ireland-based owner of a parking space, generates annual revenue of $1M.&lt;br&gt;
If you want more figures for a small-scale or medium-scale app, here is a &lt;a href="https://www.parkingboxx.com/parking-revenue-calculator-roi"&gt;calculator to go&lt;/a&gt;.&lt;br&gt;
If you would like a future like My Parking Space or Parkpnp have,  &lt;a href="https://addevice.io/contacts/"&gt;drop us a line&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>parking</category>
      <category>mobile</category>
      <category>programming</category>
      <category>app</category>
    </item>
    <item>
      <title>How To Undo Unstaged Changes In Git Working Directory</title>
      <author>Devtonight</author>
      <pubDate>Fri, 14 Jan 2022 12:40:23 +0000</pubDate>
      <link>https://dev.to/devtonight/how-to-undo-unstaged-changes-in-git-working-directory-5b2c</link>
      <guid>https://dev.to/devtonight/how-to-undo-unstaged-changes-in-git-working-directory-5b2c</guid>
      <description>&lt;p&gt;Git version controlling system lets you discard and undo mistakes that happen in several stages such as “working directory”, “stage/index”, “history” and “remote”. In this question, we are going to discard and undo changes in the working directory. In other words, discard the changes that are not yet staged in the repository. If you need to discard staged changes, refer to &lt;a href="http://laravel.test/questions/how-to-undo-staged-indexed-changes-in-git"&gt;this question&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First, initiate a local Git repository with the &lt;code&gt;git init&lt;/code&gt; command or use an existing repository that you have.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#clean-newly-created-unstaged-files"&gt;
  &lt;/a&gt;
  Clean Newly Created Unstaged Files
&lt;/h2&gt;

&lt;p&gt;Create a couple of sample files and add some content to them. If you need, you can use the following command for that. It will create a file called &lt;code&gt;file.txt&lt;/code&gt; and will add “Test Content” to it. Repeat the command a few times with different file names to create a few files.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;echo "Test Content" &amp;gt; file.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we call these files are “untracked”, “unstaged” and in the “working directory”. You can confirm it by running the &lt;code&gt;git status&lt;/code&gt; command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git status
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's say, you just accidentally created these files and now want to remove them all. We can easily undo such situations quickly with the &lt;code&gt;git clean -df&lt;/code&gt; command. It will discard all the newly created files and directories in the working directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clean -df
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you only need to remove some specific files, you can mention them like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clean -df file1.txt file2.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, you can use the &lt;code&gt;git status&lt;/code&gt; to check whether everything is cleaned and in its original state.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#discard-unstaged-changes-of-existing-files"&gt;
  &lt;/a&gt;
  Discard Unstaged Changes Of Existing Files
&lt;/h2&gt;

&lt;p&gt;Let's say, this time you have changed some committed files in the repository and now need to undo those changes. For the demonstration, again create some sample files (you may use the earlier mentioned command to create files). Stage them using the &lt;code&gt;git add .&lt;/code&gt; command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Commit the files using the &lt;code&gt;git commit&lt;/code&gt; command. We are using the &lt;code&gt;-m&lt;/code&gt; to mention the commit message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit -m "Add new files"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now change some content in these committed files. Then run the &lt;code&gt;git status&lt;/code&gt; to confirm whether there are modified files. After that, run the following command to clean and undo all the changes you made to files.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git checkout -- .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you only need to discard some specific files, you can mention them like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git checkout -- file1.txt file2.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Alternatively, you can use the &lt;code&gt;git reset&lt;/code&gt; command with &lt;code&gt;--hard&lt;/code&gt; as well. It will discard and clean both staged and unstaged modifications of &lt;strong&gt;existing&lt;/strong&gt; files in the repository.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git reset --hard
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Feel free to visit &lt;a href="https://devtonight.com?utm_source=dev&amp;amp;utm_medium=questions&amp;amp;utm_campaign=how-to-undo-unstaged-changes-in-git-working-directory"&gt;devtonight.com&lt;/a&gt; for more related content.&lt;/p&gt;

</description>
      <category>git</category>
      <category>github</category>
      <category>howto</category>
      <category>beginners</category>
    </item>
    <item>
      <title>50 lines of JavaScript: animated source code statistics with Vizzu</title>
      <author>tczagany</author>
      <pubDate>Fri, 14 Jan 2022 12:14:14 +0000</pubDate>
      <link>https://dev.to/kiriwi/50-lines-of-javascript-animated-source-code-statistics-with-vizzu-oi7</link>
      <guid>https://dev.to/kiriwi/50-lines-of-javascript-animated-source-code-statistics-with-vizzu-oi7</guid>
      <description>&lt;p&gt;In this article I visualize the source code statistics of the open-source project which I am a developer of: &lt;a href="https://github.com/vizzuhq/vizzu-lib"&gt;Vizzu&lt;/a&gt;. Since it happens to be a data visualization library, I will use it to show metrics about the project itself.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#software-is-a-visual-affair"&gt;
  &lt;/a&gt;
  Software is a visual affair
&lt;/h2&gt;

&lt;p&gt;We like to talk about programming with my friends. The software developer members of the group usually mention how they visually “perceive” the code they are working on. This visual representation is different for everyone, once I tried to describe mine to others with moderate success. &lt;/p&gt;

&lt;p&gt;Some have gone further in resolving this issue than a friendly conversation, like PayodPanda. It is worth checking out their thesis on the subject:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xfFXl32q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hywcciv2qbxjywborpmn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xfFXl32q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hywcciv2qbxjywborpmn.png" alt="thesis by PayodPanda" width="788" height="397"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;multidimensional visualizations of programming constructs by &lt;a href="http://payodpanda.com/MGDThesis/"&gt;PayodPanda&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This example graphically illustrates the essential components of software like variables, loops, and functions and describes algorithms. But the large-scale structures remain hidden, and we need to use other tools to explore those.&lt;/p&gt;

&lt;p&gt;An exciting option is Richard Wettel's CodeCity project, which depicts the source code and its metrics in the form of a 3D city:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YfPk_NwQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i5di9l9wdal8cprozqg7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YfPk_NwQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i5di9l9wdal8cprozqg7.png" alt="CodeCity by Richad Wettel" width="710" height="388"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://wettel.github.io/codecity.html"&gt;CodeCity&lt;/a&gt; integrated software analysis environment&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The buildings here represent the classes, districts are libraries, and the other properties - color, height, and floor space - are based on CodeCrawler's language-independent software metrics.&lt;/p&gt;

&lt;p&gt;For a programmer, the above figure is very informative, and it could have come in very handy when I needed to discover software source code as a new employee at a company. However, this has not happened to me yet. Creating visualizations with such detail takes a lot of work, and keeping them up-to-date takes even more.&lt;/p&gt;

&lt;p&gt;If we don't need this level of detail, we can use the source code as the basis of the visualization. For example, we can make a spreadsheet listing the files and the line count, the language (based on the extensions), and the folder structure. We can easily create this “low-end” database and keep it up-to-date, and we just need a generic visualization tool for the next step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-collection-and-overview"&gt;
  &lt;/a&gt;
  Data collection and overview
&lt;/h2&gt;

&lt;p&gt;I use VSCode for my daily work, so I wanted to solve the data collection problem within this ecosystem. I found an extension called VSCode Counter, that seemed perfectly suitable for the job. Its output contained all the necessary information and I was able to produce it with a single click. The result is an easily processable csv file with the full path and the extracted information of the source file.&lt;/p&gt;

&lt;p&gt;After arranging the directory names, file names, and the number of lines into a table, we get something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Oeuu4ZM3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wd97auhxhj2e8ikbz3jp.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Oeuu4ZM3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wd97auhxhj2e8ikbz3jp.jpg" alt="Raw data" width="880" height="258"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Lines count and folder structure of the source code&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The most important difference between the raw data table and this one above is the directory structure description. Since we want to examine the hierarchy of directories, we broke the full paths into parts so they can be used for grouping within the visualization. I used Google Spreadsheet for this task. After importing the data, I broke the directory names into columns with the SPLIT function. Next, I conditionally reassembled the path fragments based on their place in the hierarchy.&lt;/p&gt;

&lt;p&gt;After having the information in this form, we can look for correlations by creating simple charts with the popular spreadsheet app. Let's see how it supports us in doing so.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i2P_5w0f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqyrgt9e8k3mvoq67l4p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i2P_5w0f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqyrgt9e8k3mvoq67l4p.png" alt="Vizzu source code charts" width="725" height="404"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Charts from spreadsheet application&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;These are fine for a first attempt; the picture is much clearer. The first chart shows all the files and their sizes. There are no unusually large items, with a few exceptions, which we'll look at later. The histogram shows the healthy distribution of the source files with a tiny question: why does the source contain so many small files? The answer is on the pie chart: This is mainly a C++ project, and as such, it has many of the declarations in header files. But then, why is there a significant JavaScript part in the source? For that answer, we need to dig a little deeper.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-try-a-new-approach"&gt;
  &lt;/a&gt;
  Let’s try a new approach
&lt;/h2&gt;

&lt;p&gt;For further analysis, we have to rearrange the table. We could use the spreadsheet applications, but many pivot tables would be needed, which can become very inconvenient very soon. At this point, it’s better to choose a professional data visualization tool or select a library and write a few lines of code. Solving our task with Jupyter or Tableau is alright, but their usage is atypical among developers. For us, coding comes much more naturally.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EbfeqkGs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pfeg3ktoshvm8q5p6t5u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EbfeqkGs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pfeg3ktoshvm8q5p6t5u.png" alt="Vizzu logo" width="475" height="136"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Animated, open source charting library: &lt;a href="https://vizzuhq.com/"&gt;Vizzu&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I chose the Vizzu library because it describes all chart types with a uniform description. I like that. And it’s open source. With Vizzu, I didn't have to know the parameters and settings of a bar chart, pie chart, or treemap. Instead, I can just construct them by changing generic settings. &lt;/p&gt;

&lt;p&gt;The theory in the background sounds simple: the charts are made of different markers. The markers have six visual parameters that the data series can control: the channels. The following channels are available: x (horizontal position), y (vertical position), color, size, lightness, and the label of the markers. One continuous and any number of discrete data series can be attached to these channels. Selecting the shape of the markers and the applied coordinate system gives access to a universe of different charts. In the late 90s, Leland Wilkinson built charts with a similar logic described in his book The Grammar of Graphics.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#taking-the-first-steps-with-vizzu"&gt;
  &lt;/a&gt;
  Taking the first steps with Vizzu
&lt;/h2&gt;

&lt;p&gt;I converted the table into a js file and put it into a git repository to start playing with the visualization in JSFiddle.&lt;br&gt;
To get acquainted with this generic logic, let’s try to recreate one of the charts from above using Vizzu. What will be the result if I attach the 'Line count' to the 'x’ channel, and put the 'File names' on the 'y' channel? The answer is easy: rectangular markers for each file are distributed along the y-axis, and their width along the x-axis will represent the line count of each file. Bingo, this is the bar chart of the source code line count.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://jsfiddle.net/tczagany/ou0tbL3f/"&gt;Bar chart in JsFiddle:&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import Vizzu from '...';
import { data } from '...';
let chart = new Vizzu('myVizzu');
chart.initializing
.then(chart =&amp;gt; chart.animate({
  data: data,
  config: {
    channels: { y: 'Line count', x: 'File name' }
  }
}));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://jsfiddle.net/tczagany/ou0tbL3f/"&gt;In polar coordinate system:&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
channels: { x: 'Line count', y: 'File name' },
coordSystem: 'polar'
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://jsfiddle.net/tczagany/ow9r384L/"&gt;With circle marker geometry:&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
channels: { x: 'Line count', y: 'File name' },
coordSystem: 'polar',
geometry: 'circle'
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The last example looks hardly understandable, but it has been our choice. The library doesn' make corrections on settings, just displays the chart with the given method.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WjI5Pkfp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/um993qpt7aqoynqzo6c1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WjI5Pkfp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/um993qpt7aqoynqzo6c1.png" alt="Vizzu samples" width="880" height="254"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;First steps with Vizzu&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Next, let’s recreate the pie chart showing the line count of the different languages. To achieve this, we will need a marker for each language with the summarised line count. The following line performs this job:&lt;br&gt;
&lt;code&gt;channels: { x: ['Line count', 'Language'], color: 'Language', }&lt;/code&gt;&lt;br&gt;
This example shows that channels can hold more than one data series. The first can be continuous, all the others must hold discrete values. We are nearly there now, just need to change the coordinate system to polar and our pie chart is ready.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KwfUQrQ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/st4d34v2rgx4pjeigs5s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KwfUQrQ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/st4d34v2rgx4pjeigs5s.png" alt="Vizzu pie chart" width="640" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://jsfiddle.net/tczagany/ow9r384L/"&gt;Distribution of languages&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#and-yet-it-even-moves"&gt;
  &lt;/a&gt;
  And yet it even moves…
&lt;/h2&gt;

&lt;p&gt;The uniform description of charts in Vizzu has an interesting consequence: it allows the interpolation of two graphs since only their parameters differ from one another. In other words: it allows the creation of animated charts. The animation creates a strong link between the charts for the viewer, enables storytelling and a deeper understanding of the data.&lt;/p&gt;

&lt;p&gt;Let’s try and create an animated series of charts that give the same insight that the three, distinct, static charts provided in the beginning. This requires a specific approach where each transition has to be easily followed by the viewer. Sounds complex but as you’ll see it’s quite easy if you change the chart settings one-by-one.&lt;br&gt;
Here’s an outline - or as we’re building an animation, a storyboard - of what I want to&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pJvHxSQ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xwjp34mc3ferz7n21v0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pJvHxSQ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xwjp34mc3ferz7n21v0.jpg" alt="Animation outline" width="880" height="447"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Storyboard of animated chart&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The first chart still shows the number of rows in the files. Then we sort them so we get to the histogram but with a much finer resolution then originally. So far so good, the animation can be followed easily. Next I just add the ‘languages’ to the color channel and I don't think there's a problem with that either especially since the legend automatically appears. Tracking the last step seems to be the most difficult, maybe I could have inserted some interim steps so that it’s easier for the viewer to follow along. Still, the end result is pretty clear, especially when I add the ‘Line count’ to the ‘label’ channel. And I achieved all this with just 50 lines of code!&lt;/p&gt;

&lt;p&gt;Here is the result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jvCE20RX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tkctixdb9e9o6bzqxqdi.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jvCE20RX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tkctixdb9e9o6bzqxqdi.gif" alt="Animated source visualization" width="600" height="338"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://jsfiddle.net/tczagany/9zbyojrL/"&gt;Animation source in JsFiddle&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I think this is a surprisingly good solution. During the animation, you can track exactly what languages the individual files belong to and how many lines are in those languages overall.&lt;/p&gt;

&lt;p&gt;At this point, we have the data from our source code and we have a tool to browse them efficiently. Plus, as a bonus, we’ve got animations that allow us to connect the charts while keeping the context. But what about displaying the folder structure? How can we dig deeper, as I mentioned earlier? I will answer the questions in my next post. I enjoyed working with Vizzu and it has changed my understanding about chart drawing. Feel free to fiddle with the code snippets and hope you’ll find it as much fun as I did.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>productivity</category>
      <category>opensource</category>
      <category>dataviz</category>
    </item>
    <item>
      <title>3. Accessing by value and references</title>
      <author>SungJunEun</author>
      <pubDate>Fri, 14 Jan 2022 12:04:13 +0000</pubDate>
      <link>https://dev.to/sungjuneun/3-accessing-by-value-and-references-14a2</link>
      <guid>https://dev.to/sungjuneun/3-accessing-by-value-and-references-14a2</guid>
      <description>&lt;h3&gt;
  &lt;a href="#articles"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Articles&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://codeburst.io/explaining-value-vs-reference-in-javascript-647a975e12a0"&gt;Explaining Value vs. Reference in Javascript — Arnav Aggarwal&lt;/a&gt; 100%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://gist.github.com/branneman/7fb06d8a74d7e6d4cbcf75c50fec599c"&gt;Primitive Types &amp;amp; Reference Types in JavaScript — Bran van der Meer&lt;/a&gt; 100%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://medium.com/@benastontweet/lesson-1b-javascript-fundamentals-380f601ba851"&gt;Value Types, Reference Types and Scope in JavaScript — Ben Aston&lt;/a&gt; 100%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://medium.com/dailyjs/back-to-roots-javascript-value-vs-reference-8fb69d587a18"&gt;Back to roots: JavaScript Value vs Reference — Miro Koczka&lt;/a&gt; 100%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hackernoon.com/grasp-by-value-and-by-reference-in-javascript-7ed75efa1293"&gt;Grasp “By Value” and “By Reference” in JavaScript — Léna Faure&lt;/a&gt; 100%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hackernoon.com/javascript-reference-and-copy-variables-b0103074fdf0"&gt;JavaScript Reference and Copy Variables — Vítor Capretz&lt;/a&gt; 100%&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.javascripttutorial.net/javascript-primitive-vs-reference-values/"&gt;JavaScript Primitive vs Reference Values&lt;/a&gt; 100%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://stackoverflow.com/questions/6605640/javascript-by-reference-vs-by-value"&gt;JavaScript by Reference vs. by Value — nrabinowitz&lt;/a&gt; 100%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/mostlyfocusedmike/javascript-interview-prep-primitive-vs-reference-types-3o4f"&gt;JavaScript Interview Prep: Primitive vs. Reference Types — Mike Cronin&lt;/a&gt; 100%]&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#primitve-amp-objects"&gt;
  &lt;/a&gt;
  Primitve &amp;amp; Objects
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#primitive"&gt;
  &lt;/a&gt;
  Primitive
&lt;/h3&gt;

&lt;p&gt;Primitve values are immutable. So, variable storing primitve value allocates fixed amount of memory. And we say that those variables are &lt;strong&gt;accessed by value&lt;/strong&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#object"&gt;
  &lt;/a&gt;
  Object
&lt;/h3&gt;

&lt;p&gt;Objects are mutable. For performance reasons, reference(address) of that object is stored in variable. The real objects are stored in heap. We say that those variables are &lt;strong&gt;accessed by references&lt;/strong&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#copying-variable"&gt;
  &lt;/a&gt;
  Copying variable
&lt;/h2&gt;

&lt;p&gt;One rule: in-memory value is copied.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;primitve value: actual value is stored in memory
-&amp;gt; actual value is copied
As actual values are copied, copied variables has no relationships.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abc&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// a = 10, but no relationship with x&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// b = 'abc', but no relationship with y&lt;/span&gt;

&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;object: reference of object is stored in memory
-&amp;gt; reference of the object is stored.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;first&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;second&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;object2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;object&lt;/span&gt; &lt;span class="c1"&gt;// object2 and object has same reference that points &lt;/span&gt;
                     &lt;span class="c1"&gt;//to same object&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;## Reassigning variable&lt;br&gt;
 One rule: reassigning variable -&amp;gt; variable points to new primitve or object&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As primitve values are immutable, 4 didn't changed to 5. 4 has been replaced with 5.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;first&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;second&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt; &lt;span class="c1"&gt;// object stores a reference &amp;lt;#001&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;third&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fourth&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt; &lt;span class="c1"&gt;// reference &amp;lt;#001&amp;gt; replaced to &amp;lt;#002&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's say that {first:'second'}'s address is #001 and {third: 'fourth'}'s address is #002. &lt;br&gt;
Then first variable &lt;code&gt;object&lt;/code&gt; stores #001. And when it has been assigned with new object, #001 is replaced to #002. &lt;/p&gt;

&lt;p&gt;In above case, data stored in address #001 has losts its reference to object. Then Javascript engine performs &lt;strong&gt;garbage collection&lt;/strong&gt;, which finds unneccessary memory and deletes it.&lt;/p&gt;

&lt;p&gt;However, modifying the property of object works little different.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reference&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;first&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;second&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt; &lt;span class="c1"&gt;// address #001&lt;/span&gt;
&lt;span class="nx"&gt;reference&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;third&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fourth&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reference&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// {first:'second', thrid: 'fourth'};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Modifying the property of the assigned object changes the underlying object, not assigning new object. Reference stored in the &lt;code&gt;reference&lt;/code&gt; has not replaced.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#passing-variable-to-parameter"&gt;
  &lt;/a&gt;
  Passing variable to parameter
&lt;/h2&gt;

&lt;p&gt;Passing variable as a parameter of function is same as copying variable; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;primitive type: actual value is passed.&lt;/li&gt;
&lt;li&gt;object: reference of object is passed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#pure-funciton"&gt;
  &lt;/a&gt;
  Pure funciton
&lt;/h3&gt;

&lt;p&gt;Pure funciton is a function that doesn't affect anything outside the scope. &lt;code&gt;Array.map&lt;/code&gt;, &lt;code&gt;Array.filer&lt;/code&gt; are written as pure function.&lt;/p&gt;

&lt;p&gt;If function only takes primitve vaule as parameter, and doesn't uses any variable outside scope, it's pure funciton. &lt;br&gt;
If object is passed to parameter and modified inside the function, change it makes may persist in outer scope.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;impure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;John&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="na"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;male&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;impure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;John&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;John&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 20;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, we should be careful to distinguish modifying property and reassigning variable. Reassigning doesn't affect the underlying object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;reassigning&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Alex&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;male&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;John&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="na"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;male&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;reassigning&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;John&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;John&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//{name: 'John', gender: 'male'};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In above example, first, reference stored in &lt;code&gt;John&lt;/code&gt; is copied and stored in &lt;code&gt;object&lt;/code&gt;. Next, new reference is stored in &lt;code&gt;object&lt;/code&gt; in the &lt;code&gt;reassigning&lt;/code&gt; function. This doesn't affects &lt;code&gt;John&lt;/code&gt;. After the function is returned, variabe &lt;code&gt;object&lt;/code&gt; is garbage collected.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#spread-operator"&gt;
  &lt;/a&gt;
  spread operator
&lt;/h3&gt;

&lt;p&gt;There can be situation where we want to keep the originality of object and apply the function on copied one. In this case, we can use spread operator. It works as follows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;car2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;car1&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, new reference is stored in &lt;code&gt;car2&lt;/code&gt; with same properties of car1. So modifying car2 doesn't affects &lt;code&gt;car1&lt;/code&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#-amp-"&gt;
  &lt;/a&gt;
  == &amp;amp; ===
&lt;/h2&gt;

&lt;p&gt;When equality operators are used in reference-type variables, they check if the references are the same.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To check if the properties of the object are same,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr1str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr2str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr1str&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;arr2str&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have changed it to string, which is primitive data type.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>JUnit Complete Tutorial For Beginners </title>
      <author>LambdaTest</author>
      <pubDate>Fri, 14 Jan 2022 12:03:50 +0000</pubDate>
      <link>https://dev.to/lambdatest/junit-complete-tutorial-for-beginners-5a78</link>
      <guid>https://dev.to/lambdatest/junit-complete-tutorial-for-beginners-5a78</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/HXtC-a_4HAc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;This JUnit tutorial teaches you everything you need to know to work with JUnit for Selenium automation testing. &lt;/p&gt;

</description>
      <category>junit</category>
      <category>tutorial</category>
      <category>programming</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How practice and improve trade skills with demo trading on trading view with bar reply mode feature? (open source project)</title>
      <author>Ali Moradi</author>
      <pubDate>Fri, 14 Jan 2022 12:00:50 +0000</pubDate>
      <link>https://dev.to/xibalbas/how-practice-and-improve-trade-skills-with-demo-trading-on-trading-view-with-bar-reply-mode-feature-open-source-project-3gjk</link>
      <guid>https://dev.to/xibalbas/how-practice-and-improve-trade-skills-with-demo-trading-on-trading-view-with-bar-reply-mode-feature-open-source-project-3gjk</guid>
      <description>&lt;p&gt;&lt;a href="https://github.com/xibalbas/paper_trading_view.git"&gt;paper trading view repo on github&lt;/a&gt;&lt;br&gt;
a few weeks ago when i was practicing price action method in MT4 i found out Trading View has a feature call Bar reply , you can cut the candlestick chart to the back , so i decided to buy a pro account .&lt;/p&gt;

&lt;p&gt;but after a while i find out this feature does not prepare paper test . if you want to practice with Bar reply mode you should write your trade on paper and this was not a good idea.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_S9HbnuB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hvf8q6uak3s8crx2jh2i.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_S9HbnuB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hvf8q6uak3s8crx2jh2i.gif" alt="Image description" width="600" height="338"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=zW962uAD4TU&amp;amp;t=28s"&gt;Quick installation tutorial video&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;so i decided to search i found another package on Git hub they call tradingview-trainer but this did not help me because it was not complete .&lt;/p&gt;

&lt;p&gt;it’s simple work with Selenium , tkinter&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#papertradingview-features"&gt;
  &lt;/a&gt;
  paper-trading-view Features
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;work with TradingView: For bar reply and getting price we use trading view.

&lt;p&gt;Limit/Market orders: you can place a Limit or Market order in 2 side "long", "Short" .&lt;/p&gt;

&lt;p&gt;SL/TP set: you can set stop loss and take profit for your market or limit order .&lt;/p&gt;

&lt;p&gt;see Open orders: you can see list of open orders.&lt;/p&gt;

&lt;p&gt;see Open positions: you can see list of open positions.&lt;/p&gt;

&lt;p&gt;see trade history: you can see list of trade history.&lt;/p&gt;

&lt;p&gt;Next/Play/Pause in bar reply: you can use this items in PTV and when price is changing open positions and open orders will be check.&lt;/p&gt;

&lt;p&gt;initial setting: you can set your initial money / commission.&lt;/p&gt;

&lt;p&gt;profit/loss of account: your total profit / loss calculate when your position close.&lt;/p&gt;

&lt;p&gt;save report: you can save your trade history in a csv file.&lt;br&gt;
&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
&lt;br&gt;
  &lt;a href="#papertradingview-github-source"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  paper-trading-view Github Source&lt;br&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kjv0Dfwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e3i93trlgc2kkpbgxkgr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kjv0Dfwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e3i93trlgc2kkpbgxkgr.png" alt="Image description" width="880" height="511"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/xibalbas/paper_trading_view.git"&gt;https://github.com/xibalbas/paper_trading_view.git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The installation instructions can be found on project page! If you have any questions or comments, feel free to leave them down below! Good luck on your practice trading, hope this tool helps!&lt;/p&gt;

&lt;p&gt;if you like it give a start :)))&lt;/p&gt;

&lt;p&gt;designed with love&lt;/p&gt;

</description>
      <category>python</category>
      <category>github</category>
      <category>tutorial</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Zebrunner and LambdaTest
smart test execution and
transparent test analytics</title>
      <author>LambdaTest</author>
      <pubDate>Fri, 14 Jan 2022 11:51:52 +0000</pubDate>
      <link>https://dev.to/lambdatest/zebrunner-and-lambdatestsmart-test-execution-andtransparent-test-analytics-3g7j</link>
      <guid>https://dev.to/lambdatest/zebrunner-and-lambdatestsmart-test-execution-andtransparent-test-analytics-3g7j</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/t86qAmICBEg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Brief&lt;/strong&gt;&lt;br&gt;
Keeping the effective test automation process usually requires much effort and time from QA teams. To simplify test execution and analysis, Zebrunner and &lt;a href="https://www.lambdatest.com/?utm_source=dev%20to&amp;amp;utm_medium=organic&amp;amp;utm_campaign=jan_14&amp;amp;utm_term=nt&amp;amp;utm_content=webpage"&gt;LambdaTest&lt;/a&gt; are happy to present an innovative combo solution that helps QA engineers perform testing in an easier way.&lt;/p&gt;

&lt;p&gt;Now users can run tests via LambdaTest Selenium Grid, report test results directly into Zebrunner, and quickly analyze them with a wide range of artifacts (video, screenshots, test logs), AI/ML failure classification, and quality trend reports. With Zebrunner, it’s also possible to keep traceability between systems using integrations with the most popular Project Management/Quality Assurance tools on the market.&lt;/p&gt;

&lt;p&gt;Join this 1-hour webinar with Zebrunner and LambdaTest to dive deeper into effective test automation with the combo solution.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here are the key takeaways:&lt;/strong&gt;&lt;br&gt;
Overview: what are the benefits of LambdaTest + Zebrunner integration&lt;br&gt;
Getting started: how to configure LambdaTest and Zebrunner accounts&lt;br&gt;
Smart execution: how to launch tests on LambdaTest side from Zebrunner&lt;br&gt;
Advanced test analysis: how to detect failures with rich artifacts and AI/ML&lt;br&gt;
Customized test reporting: how to track product quality with live dashboards&lt;/p&gt;

</description>
    </item>
    <item>
      <title>8 ways to become a BETTER SRE ( Right now! ) | 8 non-technical characteristics to have</title>
      <author>Tharun Shiv</author>
      <pubDate>Fri, 14 Jan 2022 11:25:11 +0000</pubDate>
      <link>https://dev.to/developertharun/8-ways-to-become-a-better-sre-right-now-8-non-technical-characteristics-to-have-3n4p</link>
      <guid>https://dev.to/developertharun/8-ways-to-become-a-better-sre-right-now-8-non-technical-characteristics-to-have-3n4p</guid>
      <description>&lt;p&gt;Site Reliability Engineering, also popularly referred to as the SRE, is a role in Computer Science Engineering where the main purpose is to provision, maintain, monitor, and manage the infrastructure to provide maximum application uptime and reliability. SRE is an emerging role, but the tasks that the SRE does were always there ever since the first application that was developed. The scope of the software developers ends where they write code to develop the application and right from setting up the infrastructure, the various services that run on them, the network connectivity that is required, providing a platform for the application to run and making sure every part of the application is up and running reliably 24x7 is the duty of an SRE. We can consider Site Reliability Engineers are the strong bridge between the users and a reliable application.&lt;/p&gt;

&lt;p&gt;Let us look at 8 ways in which you can become a better SRE at work. SRE not just involves various technologies to deal with and keep them running, but also several non-technical characteristics. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/2drsyhJzcao"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-sre-is-all-about-the-right-mindset"&gt;
  &lt;/a&gt;
  1. SRE is all about the right Mindset
&lt;/h2&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;a. No blame game

b. Thirst to solve
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;As an SRE we deal with multiple components and are a bridge between the users and the application. Even though the application is well written, a bigger responsibility falls upon SRE to keep the applications and the services it uses up and running. In this process, there might be a few situations where one of the SRE does a mistake that causes a disruption or even an outage. When this happens, the first thing to happen shouldn't be to blame anyone for the outage, but the following has to be performed. &lt;/p&gt;

&lt;p&gt;i. Fix the issue&lt;/p&gt;

&lt;p&gt;ii. Write an RCA ( Root Cause Analysis ) that mentions why the issue occurred in the first place, the names can be anonymous.&lt;/p&gt;

&lt;p&gt;iii. Mention the first aid and the fix for the issue&lt;/p&gt;

&lt;p&gt;iv. Discuss how the issue can be prevented the next time &lt;/p&gt;

&lt;p&gt;v. Set an ETA for the fix&lt;/p&gt;

&lt;p&gt;Another aspect is to have the right mindset to solve problems. As an SRE you have the responsibility to optimize the infrastructure, fix issues, build automation tools, monitoring tools, and more, which requires a lot of problem-solving skills. Unless you have the thirst to solve the problems, you will only feel more stressed out, or even worse, would cause issues.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-communication"&gt;
  &lt;/a&gt;
  2. Communication
&lt;/h2&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;a. Overcommunication is not a problem

b. Be kind and show empathy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Are you performing a production activity or even a stage change that could affect other teams? Have you made progress in the project that you are working on? Make sure to keep the necessary stakeholders in sync always. Write emails, send slack messages well in advance before the production activity, just before and after the activity. It might sound like over-communication, but trust me, as the company scales, you need to keep everyone relevant to the component that you are working on in sync. This way, if they have to take any actions from their side, they will do it, or if they face any issues post-activity they'll know who the right person to get in touch with is.&lt;/p&gt;

&lt;p&gt;One other important characteristic to have as a human being is to be kind and show empathy. This will apply to all levels of engineering on either side of the conversation, period. Whether someone asks a silly question, or does a mistake, or behaves rudely with you, you should never mirror that behavior.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-stay-synced-with-the-team"&gt;
  &lt;/a&gt;
  3. Stay synced with the team
&lt;/h2&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;a. Do not miss team meetings

b. Prevent duplication of work

c. Do not compete, but contribute
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;In this work from home ( WFH ) period, the only time where you have an opportunity to speak to your teammates is during a team meet. The reason why this is special is, you get an opportunity to stay synced with your team on what they all are working on, whether they are blocked on any tasks, how you can contribute to their tasks and also you will be using this opportunity to convey on what you are working on and get help if necessary. This also prevents duplication of work.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-shadow-teammates-on-tasks-and-issues"&gt;
  &lt;/a&gt;
  4. Shadow teammates on tasks and issues
&lt;/h2&gt;

&lt;p&gt;The best way to learn is by doing it hands-on and the best way to begin would be by watching how it is done. I also believe that the best way to retain the learned information is by performing it repeatedly. This also includes watching your teammates perform the activities. It ensures that the activity is done without any mistakes when there are several eyes to watch it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-no-spoonfeeding-do-homework"&gt;
  &lt;/a&gt;
  5. No Spoon-feeding, do homework
&lt;/h2&gt;

&lt;p&gt;Do not expect all details to be taught by your teammates and seniors. Read the documentation, watch tutorials, read engineering blogs, practice on your own, and suggest improvisations. Even a well-built system will have much more efficient solutions, that you can propose. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u6YviJar--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8qlsvmu5wowdihngs04h.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u6YviJar--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8qlsvmu5wowdihngs04h.PNG" alt="SRE mindmap" width="880" height="367"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-be-attentive-and-cautious-on-production"&gt;
  &lt;/a&gt;
  6. Be attentive and cautious on production
&lt;/h2&gt;

&lt;p&gt;I've heard people pretending to work while watching web series. They might be proud of their multitasking skills, but as far as I know, there is no such thing as multitasking at work while watching a web series and I highly recommend one to not do that. If you are interested in watching a series, I would suggest you use that motivation to focus on the work, finish the tasks quickly and reward yourself with a couple of episodes later in the evening.&lt;/p&gt;

&lt;p&gt;Attention is the core necessity of life, and the same holds true to an SRE. Be attentive to the commands you run, the alerts you get, the trend the charts show, and the logs of the services and applications. Prepare for activities well in advance and let the actual activities be a no-brainer copy-paste so that you can pay attention to other indications during the activity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-think-before-you-hit-enter"&gt;
  &lt;/a&gt;
  7. Think before you hit enter
&lt;/h2&gt;

&lt;p&gt;Do not underestimate sudo privilege. A lot of us have a habit to enter into the sudo mode as soon as we login into a machine, which is unnecessary. Even if the command you are running looks like a harmless command, make sure to get the process and commands reviewed by your teammates, seniors, or the subject experts, this will save you from outages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-keep-version-control-systems-in-sync"&gt;
  &lt;/a&gt;
  8. Keep version control systems in sync
&lt;/h2&gt;

&lt;p&gt;Whether it is NGINX config or any service config, make sure to keep the version control system that is isolated from the system in sync. No one hopes for the machine to become unresponsive, but when the machine becomes unusable all of a sudden, you have another opportunity to bring up alternate machines with the same configs as the previous ones. Keeping the version control system in sync also helps in automation.&lt;/p&gt;

&lt;p&gt;Listen to the Podcast with more examples and explanation&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://open.spotify.com/embed/episode/1xAQZ0u0He3VDQ4bzPzS7y" width="100%" height="232px"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Read about what Site Reliability Engineering is and what are the 4 main things that the Site Reliability Engineers take part in: &lt;a href="https://dev.to/developertharun/1-whats-site-reliability-engineering-sre-roles-responsibilities-technologies-involved-1dcc"&gt;Link to the Article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/JgS4ZlQZfj4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Check out my YouTube Channel here: &lt;a href="https://www.youtube.com/c/developerTharun"&gt;Developer Tharun - YouTube&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Thank you for reading the article.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>beginners</category>
      <category>security</category>
      <category>cloud</category>
    </item>
    <item>
      <title>How to structure your Express and Node.Js project</title>
      <author>nermineslimane</author>
      <pubDate>Fri, 14 Jan 2022 11:19:21 +0000</pubDate>
      <link>https://dev.to/nermineslimane/how-to-structure-your-express-and-nodejs-project-3bl</link>
      <guid>https://dev.to/nermineslimane/how-to-structure-your-express-and-nodejs-project-3bl</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-is-project-architecture-so-crucial"&gt;
  &lt;/a&gt;
  Why is project architecture so crucial?
&lt;/h2&gt;

&lt;p&gt;Having a proper foundation for our project architecture is critical for the project's longevity as well as your capacity to react to changing needs in the future. A faulty, unorganized project architecture frequently results in:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Unreadable and messy code slows down development and makes testing the product more difficult.&lt;/li&gt;
&lt;li&gt;Repetition is inefficient and makes code more difficult to maintain and manage.&lt;/li&gt;
&lt;li&gt;It's difficult to add new features without breaking old code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The primary goal of any Node.js project structure is to assist you in:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create code that is both tidy and readable.&lt;/li&gt;
&lt;li&gt;Create code that can be reused across our program.&lt;/li&gt;
&lt;li&gt;Repetition should be avoided.&lt;/li&gt;
&lt;li&gt;New features can be added without affecting current code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#there-is-no-correct-or-wrong-way-"&gt;
  &lt;/a&gt;
  There is no correct or wrong way !
&lt;/h2&gt;

&lt;p&gt;In the end, I don't think there's a single optimum project structure for Express projects.&lt;/p&gt;

&lt;p&gt;Rather than asking, "How should I organize my files and folders?"&lt;br&gt;
I believe it is more appropriate to ask, "Where do my various sorts of logic go?"&lt;br&gt;
There are more specific answers to that issue, as well as steps we may take.&lt;br&gt;
And, if we do a good job of layering our logic, a project structure will develop automatically. &lt;br&gt;
A structure that can be organized in whatever way you want, whether it's using more classic MVC (or MVC-ish) or the cool new kid, components. This is due to the fact that these structures will be layered in either case! Simply place the routes, controllers, services, and other items in a component folder.&lt;/p&gt;

&lt;p&gt;The idea is to use the principle of separation of concerns, to move the business logic away from the node.js API Routes.&lt;/p&gt;

&lt;p&gt;Here's what i would suggest :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;│   app.js          # App entry point
└───routes          # Our routes controllers for all the endpoints of the app
└───config          # Environment variables and configuration related stuff
└───controllers     # Functions for our APIs
└───models          # Database models
└───middlewares     # Contains all the middleware that we need
└───utils           # Common functions that would be used repetitively
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's get right in and learn more about the project's structure.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;/Controllers- This folder would contain all the functions for your APIs. Naming of files- xxxxx.controllers.js&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;/Routes- This folder would contain all the routes that you have created using Express Router and what they do would be exported from a Controller file&lt;br&gt;
Naming of files- xxxxx.routes.js&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;/Models- This folder would contain all your schema files and and the functions required for the schema would also lie over here.&lt;br&gt;
Naming of files- xxxxx.js&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;/Middleware- This folder would contain all the middleware that you have created, whether it be authentication/some other function.&lt;br&gt;
Naming of files- xxxxx.middleware.js&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;/Utils(Optional)- The common functions that you would require multiple times throughout your code&lt;br&gt;
Naming of files- Normal project file naming scheme&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;/Templates(Optional)- If your code requires you to send certain emails/ HTML code to the client-side, store it in this files&lt;br&gt;
Naming of files- Normal project file naming scheme&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;/Config(Optional)- Configuration files for third party APIs/services like amazon s3 or db connections ...&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Files in the root of your project&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;app.js- This file would basically be the entry point of the Express application and should be as minimal as possible&lt;br&gt;
package.json- file which contains all the project npm details, scripts and dependencies.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;.gitignore- The files you don’t want to push to git&lt;br&gt;
Enough talking, let’s see how the project structure would actually look like with some example files&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;.env- This file is where you store all your secret keys, it should never be pushed to your github repo ! &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That is pretty much it, you are now ready to make your own Express project from scratch !&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>programming</category>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Managed Kubernetes Comparison: EKS vs GKE</title>
      <author>Romaric P.</author>
      <pubDate>Fri, 14 Jan 2022 11:11:04 +0000</pubDate>
      <link>https://dev.to/rophilogene/managed-kubernetes-comparison-eks-vs-gke-4o2p</link>
      <guid>https://dev.to/rophilogene/managed-kubernetes-comparison-eks-vs-gke-4o2p</guid>
      <description>&lt;p&gt;&lt;a href="https://kubernetes.io/"&gt;Kubernetes&lt;/a&gt; is changing the tech space as it becomes increasingly prominent across various industries and environments. Kubernetes can now be found in on-premise data centers, cloud environments, edge solutions, and even &lt;a href="https://www.zdnet.com/video/kubernetes-in-space-bringing-devops-to-satellites/"&gt;space&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As a container orchestration system, Kubernetes automatically manages the availability and scalability of your containerized applications. Its architecture consists of &lt;a href="https://kubernetes.io/docs/concepts/overview/components/"&gt;various planes&lt;/a&gt; that make up what is known as a &lt;em&gt;cluster&lt;/em&gt;. This cluster can be implemented (or deployed) in various ways, including adopting a &lt;a href="https://www.cncf.io/certification/software-conformance/"&gt;CNCF-certified&lt;/a&gt; hosted or managed Kubernetes cluster. &lt;/p&gt;

&lt;p&gt;This article explores and contrasts two of the most popular hosted clusters: &lt;a href="https://aws.amazon.com/eks/"&gt;Amazon Elastic Container Service for Kubernetes (EKS)&lt;/a&gt; and &lt;a href="https://cloud.google.com/kubernetes-engine"&gt;Google Kubernetes Engine (GKE)&lt;/a&gt;. You’ll compare the tools looking at ease of setup and management, compatibility with Kubernetes version releases, support for government cloud, support for hybrid cloud models, cost, and developer community adoption.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3rKrvmkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/1J4lcwO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3rKrvmkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/1J4lcwO.png" alt="GKE vs EKS" width="880" height="509"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overview-of-managed-kubernetes-solution"&gt;
  &lt;/a&gt;
  Overview of Managed Kubernetes Solution
&lt;/h2&gt;

&lt;p&gt;A managed Kubernetes solution involves a third-party, such as a cloud vendor, taking on some or full responsibility for the setup, configuration, support, and operations of the cluster. &lt;a href="https://cloud.google.com/kubernetes-engine"&gt;Google Kubernetes Engine (GKE)&lt;/a&gt;, &lt;a href="https://aws.amazon.com/eks/"&gt;Amazon Elastic Container Service for Kubernetes (EKS)&lt;/a&gt;, &lt;a href="https://azure.microsoft.com/en-us/services/kubernetes-service"&gt;Azure Kubernetes Service&lt;/a&gt;, and &lt;a href="https://www.ibm.com/cloud/kubernetes-service"&gt;IBM Cloud Kubernetes Service&lt;/a&gt; are examples of managed Kubernetes clusters.&lt;/p&gt;

&lt;p&gt;Managed Kubernetes solutions are useful for software teams that want to focus on the development, deployment, and optimization of their workloads. The process of managing and configuring clusters is complex, time-consuming, and requires proficient Kubernetes administration, especially for production environments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overview-of-gke"&gt;
  &lt;/a&gt;
  Overview of GKE
&lt;/h2&gt;

&lt;p&gt;Let’s look at qualities that your organization should consider before choosing GKE as their hosted cluster solution: &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cluster-configurations"&gt;
  &lt;/a&gt;
  Cluster Configurations
&lt;/h3&gt;

&lt;p&gt;GKE has two cluster configuration options (or modes, as they are called): Standard and Autopilot.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Standard mode: This mode allows software teams to manage the underlying infrastructure (node configurations) of their clusters. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MxEIpokJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/a10EFrJ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MxEIpokJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/a10EFrJ.png" alt="GKE Standard cluster architecture" width="835" height="499"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Autopilot mode: This mode offers software teams a hands-off experience of a Kubernetes cluster. GKE manages the provisioning and optimization of the cluster and its node pools.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2DnoM-zW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/sTukyuw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2DnoM-zW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/sTukyuw.png" alt="GKE Autopilot cluster architecture" width="835" height="499"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setup-and-configuration-management"&gt;
  &lt;/a&gt;
  Setup and Configuration Management
&lt;/h3&gt;

&lt;p&gt;Cluster setup and configuration can be a time-consuming and arduous process. In a cloud environment, you must also understand networking topologies since they form the backbone of cluster deployments. &lt;/p&gt;

&lt;p&gt;For teams and operators looking for a solution with less operational overhead, GKE has the automated capabilities you’re looking for. This includes &lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-repair"&gt;automated health checks and repairs on nodes&lt;/a&gt;, as well as automatic &lt;a href="https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-upgrades"&gt;cluster and node upgrades&lt;/a&gt; for new version releases.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#service-mesh"&gt;
  &lt;/a&gt;
  Service Mesh
&lt;/h3&gt;

&lt;p&gt;Software teams deploying applications based on microservice architectures quickly find out that Kubernetes service level capabilities are insufficient in a number of ways. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.redhat.com/en/topics/microservices/what-is-a-service-mesh"&gt;&lt;em&gt;Service meshes&lt;/em&gt;&lt;/a&gt; are dedicated infrastructure layers that address network and security issues at an application service level and help complement large complex workloads. &lt;/p&gt;

&lt;p&gt;GKE comes with &lt;a href="https://istio.io/"&gt;Istio&lt;/a&gt; installed by default. &lt;em&gt;Istio&lt;/em&gt; is an open-source service mesh implementation that can help organizations secure large and critical workloads.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubernetes-versions-and-upgrades"&gt;
  &lt;/a&gt;
  Kubernetes Versions and Upgrades
&lt;/h3&gt;

&lt;p&gt;In comparison to EKS, GKE offers a wide variety of release versions depending on the &lt;a href="https://cloud.google.com/kubernetes-engine/docs/release-notes#rapid-channel_1"&gt;release channel you select&lt;/a&gt; (stable, regular, or rapid). The rapid channel includes the latest version of Kubernetes (v1.22 at the time of this post). &lt;/p&gt;

&lt;p&gt;GKE also has auto-upgrade capabilities for both clusters and nodes in &lt;a href="https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-upgrades"&gt;Standard&lt;/a&gt; and &lt;a href="https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-upgrades-autopilot"&gt;Autopilot&lt;/a&gt; cluster modes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#no-government-cloud-support"&gt;
  &lt;/a&gt;
  No Government Cloud Support
&lt;/h3&gt;

&lt;p&gt;Google doesn’t offer a &lt;a href="https://platform9.com/blog/eks-gke-aks-compare-managed-kubernetes/"&gt;government cloud solution like AWS&lt;/a&gt; for hosted clusters. Any software solutions that require security posture, regulation, and stringency by government agencies will have to be developed based on your standard regional offerings. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#exclusive-to-cloud-vms"&gt;
  &lt;/a&gt;
  Exclusive to Cloud VMs
&lt;/h3&gt;

&lt;p&gt;A majority of enterprises prefer a &lt;a href="https://www.dimensiondata.com/en-gb/insights/blogs/what-are-the-benefits-of-hybrid-cloud/"&gt;hybrid model&lt;/a&gt; over other cloud strategies; however, GKE only offers cluster architecture models that consist of Virtual Machines (VMs) in a cloud environment.&lt;/p&gt;

&lt;p&gt;For organizations looking to distribute their workloads between nodes in on-premise data centers and the cloud, EKS would be more suitable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conditional-service-level-agreement-sla"&gt;
  &lt;/a&gt;
  Conditional Service Level Agreement (SLA)
&lt;/h3&gt;

&lt;p&gt;When making use of a single zone cluster, GKE is the more affordable solution, as there are no costs involved in managing the control plane; however, this solution type doesn’t offer a Service Level Agreement (SLA) unless you opt for a regional cluster solution, which costs &lt;a href="https://cloud.google.com/kubernetes-engine/pricing"&gt;ten cents per hour&lt;/a&gt; for control plane management. &lt;/p&gt;

&lt;p&gt;EKS offers SLA coverage at &lt;a href="https://aws.amazon.com/eks/sla/"&gt;99.95 percent&lt;/a&gt;, whereas GKE only offers &lt;a href="https://cloud.google.com/kubernetes-engine/pricing#cluster_management_fee_and_free_tier"&gt;99.5 percent for its zonal clusters and 99.95 percent for its regional clusters&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cli-support"&gt;
  &lt;/a&gt;
  CLI Support
&lt;/h3&gt;

&lt;p&gt;The GKE CLI is a sub-module of the official GCP CLI (&lt;code&gt;gcloud&lt;/code&gt;). Once a user has installed &lt;code&gt;gcloud&lt;/code&gt; and authenticated with &lt;code&gt;gcloud init&lt;/code&gt;, they can proceed to perform lifecycle activities on their GKE clusters. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h3&gt;

&lt;p&gt;GKE clusters can be launched either in &lt;a href="https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture"&gt;Standard mode&lt;/a&gt; or &lt;a href="https://cloud.google.com/kubernetes-engine/docs/concepts/autopilot-architecture"&gt;Autopilot mode&lt;/a&gt;. Both modes have an hourly charge of ten cents per cluster after the free tier. &lt;/p&gt;

&lt;p&gt;From a pricing perspective, GKE differs from EKS because it has a free tier with monthly credits that, if applied to a single zonal cluster or Autopilot cluster, will completely cover the operational costs involved in running the cluster.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-cases"&gt;
  &lt;/a&gt;
  Use Cases
&lt;/h3&gt;

&lt;p&gt;Based on the characteristics outlined above, GKE works particularly well in the following scenarios:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Minimal management overhead&lt;/li&gt;
&lt;li&gt;High degree of operational automation&lt;/li&gt;
&lt;li&gt;Wide support of Kubernetes versions (including an option for latest versions)&lt;/li&gt;
&lt;li&gt;Cost-effective model for small clusters&lt;/li&gt;
&lt;li&gt;Out-the-box service mesh integration (with Istio)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#overview-of-eks"&gt;
  &lt;/a&gt;
  Overview of EKS
&lt;/h2&gt;

&lt;p&gt;Now let’s take a look at EKS and what factors you should consider before using their hosted cluster solution. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cluster-configurations"&gt;
  &lt;/a&gt;
  Cluster Configurations
&lt;/h3&gt;

&lt;p&gt;EKS has three cluster configuration options for launching or deploying your managed Kubernetes cluster in AWS. These three configurations are &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html"&gt;managed node groups&lt;/a&gt;, &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/worker.html"&gt;self-managed nodes&lt;/a&gt;, and &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/fargate.html"&gt;Fargate&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#managed-node-groups"&gt;
  &lt;/a&gt;
  Managed Node Groups
&lt;/h4&gt;

&lt;p&gt;The launch configuration automates the provision and lifecycle management of your EC2 worker nodes for your EKS cluster. In this mode, AWS manages the running and updating of the EKS AMI on your nodes, applying labels to node resources and draining of nodes.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#selfmanaged-worker-nodes"&gt;
  &lt;/a&gt;
  Self-managed Worker Nodes
&lt;/h4&gt;

&lt;p&gt;As the name implies, this option gives teams and operators the most flexibility for configuring and managing their nodes. It’s the DIY option from the different launch configurations. &lt;/p&gt;

&lt;p&gt;You can either launch Auto Scaling groups or individual EC2 instances and register them as worker nodes to your EKS cluster. This approach requires that all underlying nodes have the same instance type, the same &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html"&gt;Amazon Machine Image (AMI)&lt;/a&gt;, and the same &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html"&gt;Amazon EKS node IAM role&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#serverless-worker-nodes-with-fargate"&gt;
  &lt;/a&gt;
  Serverless Worker Nodes with Fargate
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/fargate.html"&gt;AWS Fargate&lt;/a&gt; is a serverless engine that allows you to focus on optimizing your container workloads while it takes care of the provisioning and configuration of the infrastructure for your containers to run on.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#eks-anywhere"&gt;
  &lt;/a&gt;
  EKS Anywhere
&lt;/h3&gt;

&lt;p&gt;Businesses &lt;a href="https://www.dimensiondata.com/en-gb/solutions/intelligent-infrastructure/cloud/2021-hybrid-cloud-report/"&gt;recognize the cloud as a great enabler&lt;/a&gt; and are using it to meet their needs in combination with on-premise data centers.&lt;/p&gt;

&lt;p&gt;Amazon EKS recently launched &lt;a href="https://aws.amazon.com/eks/eks-anywhere/"&gt;Amazon EKS Anywhere&lt;/a&gt;, which enables businesses to deploy Kubernetes clusters on their own infrastructure (using &lt;a href="https://www.vmware.com/products/vsphere.html"&gt;VMware vSphere&lt;/a&gt;) while still being supported by AWS automated cluster management. &lt;/p&gt;

&lt;p&gt;This deployment supports the hybrid cloud model, which in turn enables businesses to have operational consistency in their workloads, both on-premises and in the cloud. At this point in time, EKS doesn’t offer the option for using bare metal nodes, but AWS has stated that this feature is expected in &lt;a href="https://aws.amazon.com/eks/eks-anywhere/"&gt;2022&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#integration-with-aws-ecosystem"&gt;
  &lt;/a&gt;
  Integration with AWS Ecosystem
&lt;/h3&gt;

&lt;p&gt;For years, AWS has been the leading cloud compute services provider. EKS can easily integrate with other AWS services, allowing enterprises to make use of other cloud compute resources that meet their requirements. If your business’ cloud strategy consists of resources in the AWS landscape, your Kubernetes workloads can be seamlessly integrated using EKS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#developer-community"&gt;
  &lt;/a&gt;
  Developer Community
&lt;/h3&gt;

&lt;p&gt;EKS has a vast developer community with the highest adoption and usage rate &lt;a href="https://acloudguru.com/blog/engineering/aks-vs-eks-vs-gke-managed-kubernetes-services-compared"&gt;among the Kubernetes managed cluster solutions&lt;/a&gt;. Because of the complex challenges that configuring and optimizing Kubernetes entails, this community offers you a great deal of value as it can support structure around common use cases, forms a knowledge base for you to query as you face problems, and offers examples from others using similar technologies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#government-cloud-solution"&gt;
  &lt;/a&gt;
  Government Cloud Solution
&lt;/h3&gt;

&lt;p&gt;AWS has a &lt;a href="https://aws.amazon.com/govcloud-us/?whats-new-ess.sort-by=item.additionalFields.postDateTime&amp;amp;whats-new-ess.sort-order=desc"&gt;government cloud solution&lt;/a&gt; that enables you to run sensitive workloads securely while meeting the relevant compliance requirements. As a result, the power of Kubernetes can be used in the AWS ecosystem to support operations that fit this criterion.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setup-and-configuration-management"&gt;
  &lt;/a&gt;
  Setup and Configuration Management
&lt;/h3&gt;

&lt;p&gt;Compared to GKE, operating EKS from the console requires additional manual steps and configuration in order to provision the cluster. This requires knowledge and proficiency from software teams to understand the underlying networking components of AWS and how it impacts the cluster to be provisioned.&lt;/p&gt;

&lt;p&gt;Furthermore, installation of components like &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/calico.html"&gt;Calico CNI&lt;/a&gt;, as well as &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/managing-vpc-cni.html"&gt;upgrading the AWS VPC CNI&lt;/a&gt; has to &lt;a href="https://www.stackrox.io/blog/eks-vs-gke-vs-aks-jan2021/"&gt;be done manually&lt;/a&gt;, and EKS doesn’t support automatic node health repair checks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubernetes-versions-and-upgrades"&gt;
  &lt;/a&gt;
  Kubernetes Versions and Upgrades
&lt;/h3&gt;

&lt;p&gt;EKS supports &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/kubernetes-versions.html"&gt;three or more minor Kubernetes version releases&lt;/a&gt;, not including the most recent Kubernetes release. In addition, when using EKS, Kubernetes &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/update-cluster.html"&gt;version upgrades&lt;/a&gt; have to be done manually. &lt;/p&gt;

&lt;p&gt;For software teams that want to stay on top of the latest security patches as well as work with the latest features, the limited options that EKS offers can make meeting certain requirements challenging. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cli-support"&gt;
  &lt;/a&gt;
  CLI Support
&lt;/h3&gt;

&lt;p&gt;Similar to GKE, EKS has full CLI support in the form of a sub-module of the official &lt;a href="https://aws.amazon.com/cli/"&gt;AWS CLI &lt;/a&gt; tool. When a software developer configures their AWS profile (that has the right permissions) with the CLI, they can proceed to perform operations on their EKS cluster. &lt;/p&gt;

&lt;p&gt;Updating the local kube config file to contain the credentials for the Kubernetes cluster API endpoint can be done with the following command: &lt;code&gt;aws eks update-kubeconfig --region &amp;lt;region&amp;gt; --name &amp;lt;cluster-name&amp;gt;&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;In addition, the team from &lt;a href="https://www.weave.works/"&gt;Weaveworks&lt;/a&gt; produced an EKS CLI tool called &lt;a href="https://eksctl.io/"&gt;&lt;code&gt;eksctl&lt;/code&gt;&lt;/a&gt; which is used to implement and manage the lifecycle of EKS clusters in the form of &lt;a href="https://docs.microsoft.com/en-us/devops/deliver/what-is-infrastructure-as-code"&gt;infrastructure-as-code&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h3&gt;

&lt;p&gt;Amazon EKS charges &lt;a href="https://aws.amazon.com/eks/pricing/"&gt;ten cents per hour&lt;/a&gt;, which is a fee based on the management of the control plane. Any additional charges are incurred based on the standard prices for other AWS resources (i.e., EC2 instances for worker nodes). &lt;/p&gt;

&lt;p&gt;When Amazon EKS is run on AWS Fargate (serverless engine), the additional &lt;a href="https://aws.amazon.com/fargate/pricing/"&gt;pricing&lt;/a&gt; (outside of the hourly rate for the control plane) is calculated based on the memory and vCPU usage of the underlying resources used to run the container workloads. &lt;/p&gt;

&lt;p&gt;Unlike GKE, AWS doesn’t offer a limited free tier service for EKS. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-cases"&gt;
  &lt;/a&gt;
  Use Cases
&lt;/h3&gt;

&lt;p&gt;Based on the characteristics outlined above, EKS works particularly well in the following scenarios:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Running workloads in a hybrid cloud model&lt;/li&gt;
&lt;li&gt;Integrating workloads with AWS ecosystem&lt;/li&gt;
&lt;li&gt;Desired support from a large community of practitioners&lt;/li&gt;
&lt;li&gt;Running workloads in a dedicated government cloud environment&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;By design, managed Kubernetes solutions like EKS and GKE reduce the operational overhead and complexities that come with managing a Kubernetes cluster. Each cluster solution has pros and cons that organizations need to consider against their needs and workload requirements. &lt;/p&gt;

&lt;p&gt;Software teams also need to consider an optimal way of deploying their infrastructure and application workloads. In this case, &lt;a href="https://www.qovery.com/"&gt;Qovery&lt;/a&gt; can help your teams become more autonomous and efficient. &lt;em&gt;Qovery&lt;/em&gt; is a cloud-agnostic deployment platform that can help teams with Kubernetes cluster management, whether EKS or GKE, in a scalable way.&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>aws</category>
      <category>googlecloud</category>
    </item>
  </channel>
</rss>
