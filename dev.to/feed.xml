<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>My Web Development Study Plan For 2021</title>
      <author>Eddy Vinck</author>
      <pubDate>Fri, 18 Dec 2020 09:27:26 +0000</pubDate>
      <link>https://dev.to/eddyvinck/my-web-development-study-plan-for-2021-5b57</link>
      <guid>https://dev.to/eddyvinck/my-web-development-study-plan-for-2021-5b57</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was originally posted on my &lt;a href="https://www.eddyvinck.com/blog/my-2021-web-developer-study-plan/"&gt;personal website&lt;/a&gt;. You can subscribe to my newsletter &lt;a href="https://www.eddyvinck.com/newsletter"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;As 2020 is coming to an end, I have been reflecting on how much I have learned this year.&lt;/p&gt;

&lt;p&gt;For many, including me, it has been a rather difficult year. Unsurprisingly, this has had an impact on what I have been able to learn or build.&lt;/p&gt;

&lt;p&gt;Looking towards 2021 with the intention of further improving myself as a developer I have written a list of things I want to study.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learning" class="anchor"&gt;
  &lt;/a&gt;
  Learning
&lt;/h2&gt;

&lt;p&gt;I have many things I want to learn. The things I want to learn generally fall into the following categories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fundamentals and getting better at things I already know and use&lt;/li&gt;
&lt;li&gt;Promising tools and concepts that I've been keepign an eye on&lt;/li&gt;
&lt;li&gt;Things that will allow me to create things I cannot create with my current skillset&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer: This list is ambitious&lt;/strong&gt;. Especially since I will be moving into my own house next year. It's unlikely I will be able to do all of it, and that's okay.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#back-to-basics" class="anchor"&gt;
  &lt;/a&gt;
  Back to basics
&lt;/h3&gt;

&lt;p&gt;The fundamentals of the web, JavaScript and programming will always be relevant. I find that even as someone who has been coding for about 5 years that I still benefit from going back to the basics.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;These are the fundamentals that I want to study (again)&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Event loop&lt;/li&gt;
&lt;li&gt;Design patterns&lt;/li&gt;
&lt;li&gt;Prototypes and classes&lt;/li&gt;
&lt;li&gt;Regular functions vs. arrow functions&lt;/li&gt;
&lt;li&gt;Learn more about how web pages are rendered&lt;/li&gt;
&lt;li&gt;Promises and &lt;code&gt;async&lt;/code&gt; / &lt;code&gt;await&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;How the internet works (generally)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#refreshers" class="anchor"&gt;
  &lt;/a&gt;
  Refreshers
&lt;/h3&gt;

&lt;p&gt;It's good to know the tools you use. I want to brush up on things that I use frequently or want to start using more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;These are the things I want to brush up on&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go through all the ReactJS documentation again&lt;/li&gt;
&lt;li&gt;Setting up GraphQL servers&lt;/li&gt;
&lt;li&gt;Unit testing with &lt;a href="https://testing-library.com/docs/react-testing-library/intro"&gt;React Testing Library&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;End to end testing with &lt;a href="https://www.cypress.io/"&gt;Cypress&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Chrome devtools - what's new that I'm not using yet?&lt;/li&gt;
&lt;li&gt;TypeScript&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#going-outside-of-my-comfort-zone" class="anchor"&gt;
  &lt;/a&gt;
  Going outside of my comfort zone
&lt;/h3&gt;

&lt;p&gt;Up until this year I have mostly been "just" a frontend developer. In an effort to go outside of my comfort zone I have been venturing into the backend, but only slightly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I want to get more familiar with backend in 2021.&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Authentication with JWT (JSON Web Tokens)&lt;/li&gt;
&lt;li&gt;API Gateways&lt;/li&gt;
&lt;li&gt;Restful APIs (I have mostly done GraphQL at this point)&lt;/li&gt;
&lt;li&gt;PostgresQL with Sequelize&lt;/li&gt;
&lt;li&gt;Server logging best practices beyond &lt;code&gt;console.log&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Docker and Docker Compose&lt;/li&gt;
&lt;li&gt;Get more familiar with Postman (or Insomnia which is a free alternative)&lt;/li&gt;
&lt;li&gt;Authentication library like PassportJS&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Serverless and JAMstack&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Serverless and JAMstack are things that aren't going away anytime soon. I have some general knowledge about it, but I haven't really taken the time yet to dive deeper into these concepts and build something with it. Now that this way of building has matured I think it's time to give it a fair shot.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;NextJS: it's a framework for React that is designed to work great for JAMstack projects. I'll probably be taking Wes Bos' Advanced React course when he updates it since I already purchased it.&lt;/li&gt;
&lt;li&gt;A headless CMS like KeystoneJS, Strapi or similar. Probably one of the cheaper ones since some are &lt;em&gt;really&lt;/em&gt; expensive.&lt;/li&gt;
&lt;li&gt;AWS Lambda and other Amazon services that might come in handy.&lt;/li&gt;
&lt;li&gt;Something with a database. Not sure what yet.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are also things in frontend that I want to check out but haven't yet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;These are my frontend picks:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;TailwindCSS&lt;/li&gt;
&lt;li&gt;XState: a state management library&lt;/li&gt;
&lt;li&gt;React Hook Form&lt;/li&gt;
&lt;li&gt;Styled System: a helper library for Styled Components, which I already use&lt;/li&gt;
&lt;li&gt;Design systems&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#courses" class="anchor"&gt;
  &lt;/a&gt;
  Courses
&lt;/h3&gt;

&lt;p&gt;I have a Frontend Masters subscription and I will be using it of course.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;These are the courses I want to check out next year:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;JavaScript Hard Parts v2&lt;/li&gt;
&lt;li&gt;JavaScript Recent Parts&lt;/li&gt;
&lt;li&gt;JavaScript New Hard Parts&lt;/li&gt;
&lt;li&gt;Production Grade TypeScript&lt;/li&gt;
&lt;li&gt;Production Ready NextJS&lt;/li&gt;
&lt;li&gt;Intro to Containers&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Maybe I'll also take a look at the Computer Science Learning Path.&lt;/p&gt;

&lt;p&gt;If I can get through the courses above I will also be checking out some of the serverless / JAMstack courses on there.&lt;/p&gt;



Not sponsored by the way (but I definitely could be because I recommend them so often.)



&lt;h3&gt;
  &lt;a href="#additional-things-to-learn" class="anchor"&gt;
  &lt;/a&gt;
  Additional things to learn
&lt;/h3&gt;

&lt;p&gt;These are things related to my field, but not particularly to my role. These are just things that interest me generally.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How to write good content&lt;/li&gt;
&lt;li&gt;Search Engine Optimization (SEO)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#doing" class="anchor"&gt;
  &lt;/a&gt;
  Doing
&lt;/h2&gt;

&lt;p&gt;Learning is very important, but to truly learn you must also do.&lt;/p&gt;

&lt;p&gt;I would like to start a larger side project in 2021. I'm not sure what it is going to be yet.&lt;/p&gt;

&lt;p&gt;I'd like to have a project that has either a proper backend that I can use to learn more about backend or a serverless setup. Or maybe I will build something serverless, but have a serverless application that works together with some sort of backend I can build.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-busy-year-ahead" class="anchor"&gt;
  &lt;/a&gt;
  A busy year ahead
&lt;/h2&gt;

&lt;p&gt;In 2020 I definitely overworked myself a couple times to a point where I &lt;em&gt;needed&lt;/em&gt; a longer break. I'd love to avoid that in 2021.&lt;/p&gt;

&lt;p&gt;Not that taking breaks is a bad thing, but ideally I should not overwork myself to the point where I don't want to do any coding outside of work for a couple of months. I'd like to be more consistent with programming throughout the year.&lt;/p&gt;

&lt;p&gt;With that in mind, I don't think I will be able do all the things in this list.&lt;/p&gt;

&lt;p&gt;I will be moving into my own house and learn a lot of things related to that, so I'll also have less time to work on web development outside of work.&lt;/p&gt;

&lt;p&gt;I can always move things to 2022 if I don't get to them in 2021.&lt;/p&gt;

&lt;p&gt;Happy holidays!&lt;/p&gt;




&lt;p&gt;&lt;em&gt;This article was originally posted on my &lt;a href="https://www.eddyvinck.com/blog/my-2021-web-developer-study-plan/"&gt;personal website&lt;/a&gt;. You can subscribe to my newsletter &lt;a href="https://www.eddyvinck.com/newsletter"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>React Redux: Token Authentication example with JWT &amp; Axios</title>
      <author>bezkoder</author>
      <pubDate>Fri, 18 Dec 2020 03:33:45 +0000</pubDate>
      <link>https://dev.to/bezkoder/react-redux-token-authentication-example-with-jwt-axios-1i1p</link>
      <guid>https://dev.to/bezkoder/react-redux-token-authentication-example-with-jwt-axios-1i1p</guid>
      <description>&lt;p&gt;In this tutorial, we’re gonna build a React + Redux Application for Token Authentication example with JWT, LocalStorage, React Router, Axios and Bootstrap. I will show you:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JWT Authentication Flow for User Signup &amp;amp; User Login&lt;/li&gt;
&lt;li&gt;Project Structure for React Redux JWT Authentication, LocalStorage, Router, Axios&lt;/li&gt;
&lt;li&gt;Working with Redux Actions, Reducers, Store for Application state&lt;/li&gt;
&lt;li&gt;Creating React Components with Form Validation&lt;/li&gt;
&lt;li&gt;React Components for accessing protected Resources (Authorization)&lt;/li&gt;
&lt;li&gt;Dynamic Navigation Bar in React App&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Inside tutorial, you can also find Spring Boot backend that works well with this React Client:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;one working with MySQL/PostgreSQL&lt;/li&gt;
&lt;li&gt;and one working with MongoDB&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#overview-of-react-redux-jwt-authentication-example" class="anchor"&gt;
  &lt;/a&gt;
  Overview of React Redux JWT Authentication example
&lt;/h2&gt;

&lt;p&gt;We will build a React application in that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There are Login/Logout, Signup pages.&lt;/li&gt;
&lt;li&gt;Form data will be validated by front-end before being sent to back-end.&lt;/li&gt;
&lt;li&gt;Depending on User’s roles (admin, moderator, user), Navigation Bar changes its items automatically.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are the screenshots:&lt;br&gt;
– Signup Page:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qTGuJPYq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/qi9jnomvx8rhtpcwxn2c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qTGuJPYq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/qi9jnomvx8rhtpcwxn2c.png" alt="react-redux-jwt-authentication-token-example-signup"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;– Signup failed:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QBmoUUV_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/29glpi1hkkjha9r1k3f0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QBmoUUV_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/29glpi1hkkjha9r1k3f0.png" alt="react-redux-jwt-authentication-token-example-signup-email-duplicate"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;– Form Validation Support:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lwU3knz6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/2mqrlvr0mefez74ggts3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lwU3knz6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/2mqrlvr0mefez74ggts3.png" alt="react-redux-jwt-authentication-token-example-form-validation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;– Login Page:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xPwbI6Wh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/zdya3j6wofa1p6p04su2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xPwbI6Wh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/zdya3j6wofa1p6p04su2.png" alt="react-redux-jwt-authentication-token-example-login"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;– Profile Page (for successful Login):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p0fRYDf9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/df5v88t9pimjv1vss9g2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p0fRYDf9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/df5v88t9pimjv1vss9g2.png" alt="react-redux-jwt-authentication-token-example-profile-page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;– For Moderator account login, the navigation bar will change by authorities:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9ky0LKOq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/cny05u9va48oaeomy662.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ky0LKOq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/cny05u9va48oaeomy662.png" alt="react-redux-jwt-authentication-token-example-authorization-login"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;– Check Browser Local Storage:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o6BFcWy_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ftb9bzu540ukjhdg3y2k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o6BFcWy_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ftb9bzu540ukjhdg3y2k.png" alt="react-redux-jwt-authentication-token-example-local-storage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;– Check State in Redux using &lt;code&gt;redux-devtools-extension&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pTr7zkXw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jin3hsd49fxpa2paixi7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pTr7zkXw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jin3hsd49fxpa2paixi7.png" alt="react-redux-jwt-authentication-token-example-redux-devtools-extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#user-registration-and-user-login-flow" class="anchor"&gt;
  &lt;/a&gt;
  User Registration and User Login Flow
&lt;/h2&gt;

&lt;p&gt;For JWT Authentication, we’re gonna call 2 endpoints:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;POST &lt;code&gt;api/auth/signup&lt;/code&gt; for User Registration&lt;/li&gt;
&lt;li&gt;POST &lt;code&gt;api/auth/signin&lt;/code&gt; for User Login&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following flow shows you an overview of Requests and Responses that React Client will make or receive. This React Client must add a JWT to HTTP Header before sending request to protected resources.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pwW3vLlW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gqmaudsppx48t7zdv16h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pwW3vLlW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gqmaudsppx48t7zdv16h.png" alt="react-redux-jwt-authentication-token-example-flow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can find step by step to implement these back-end servers in following tutorial:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/spring-boot-jwt-authentication/"&gt;Spring Boot JWT Authentication with Spring Security, MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/spring-boot-security-postgresql-jwt-authentication/"&gt;Spring Boot JWT Authentication with Spring Security, PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/spring-boot-jwt-auth-mongodb/"&gt;Spring Boot JWT Authentication with Spring Security, MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/node-js-jwt-authentication-mysql/"&gt;Node.js JWT Authentication &amp;amp; Authorization with MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/node-js-mongodb-auth-jwt/"&gt;Node.js JWT Authentication &amp;amp; Authorization with MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/node-js-jwt-authentication-postgresql/"&gt;Node.js JWT Authentication &amp;amp; Authorization with PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#react-component-diagram-with-redux-router-axios" class="anchor"&gt;
  &lt;/a&gt;
  React Component Diagram with Redux, Router, Axios
&lt;/h2&gt;

&lt;p&gt;Let’s look at the diagram below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oid8MyXy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/0m0skxpbu722jo01zzks.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oid8MyXy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/0m0skxpbu722jo01zzks.png" alt="react-redux-jwt-authentication-token-example-project-overview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more details, implementation and Github Source code, please visit:&lt;br&gt;
&lt;a href="https://bezkoder.com/react-redux-jwt-auth/"&gt;https://bezkoder.com/react-redux-jwt-auth/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Without Redux:&lt;br&gt;
&lt;a href="https://bezkoder.com/react-jwt-auth/"&gt;React JWT Authentication example&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>redux</category>
      <category>authentication</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What I learned from failing my technical interviews</title>
      <author>Farhana</author>
      <pubDate>Thu, 17 Dec 2020 22:53:02 +0000</pubDate>
      <link>https://dev.to/farhanaxmustafa/what-i-learned-from-failing-my-technical-interviews-276a</link>
      <guid>https://dev.to/farhanaxmustafa/what-i-learned-from-failing-my-technical-interviews-276a</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vEiGr0XU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/r7zjod4bb04m0691kbbj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vEiGr0XU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/r7zjod4bb04m0691kbbj.png" alt="undraw_interview_rmcf"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Technical interviews are a nerve wracking experience that can demoralize a developer. In the past, these consisted of weird brain churning questions where you had to &lt;a href="https://www.businessinsider.com/answers-to-15-google-interview-questions-that-will-make-you-feel-stupid-2009-11"&gt;calculate how many golf balls can fit in a school bus&lt;/a&gt;. Thankfully, we don't have to answer these anymore. But to this day, the interview process has candidates solve unrealistic problems, with at least one other pair of eyes judging your every move, in at least 15 minutes.&lt;/p&gt;

&lt;p&gt;A little about me, I graduated with a bachelor's degree in computer science. It was the hardest experience ever and I even grew some gray hairs. However, I was fortunate enough to have found an amazing group of friends where we regularly studied together with our minds blank, our eyes dry and our bellies full of fast food in the computer lab until dawn.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-of-the-companies-i-interviewed-with-that-made-a-long-lasting-impact-on-me" class="anchor"&gt;
  &lt;/a&gt;
  Some of the companies I interviewed with that made a long, lasting impact on me
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#ibm" class="anchor"&gt;
  &lt;/a&gt;
  IBM
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Year: 2017&lt;/li&gt;
&lt;li&gt;Position: Front-end Developer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My first blunder. I haven't done a coding assessment before. I attempted my first one through an online platform that recorded you through your webcam. I received two questions, one was similar to FizzBuzz. FIZZBUZZ! I didn't know how to solve it. I swear. I was a mess on that keyboard. I had no idea how to solve that question fully. I gave up, submitted whatever I had and went to my next class.&lt;/p&gt;

&lt;p&gt;What I learned:&lt;br&gt;
Although I was humiliated to fail &lt;a href="https://leetcode.com/problems/fizz-buzz/"&gt;FizzBuzz&lt;/a&gt;, I realized this was only my first coding assessment and definitely not my last. I was going to take Leetcode more seriously and keep applying to more companies in order to gain more exposure to the interview process.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#espn" class="anchor"&gt;
  &lt;/a&gt;
  ESPN
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Year: 2017 &lt;/li&gt;
&lt;li&gt;Position: Front-end Engineer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I was asked some front end questions like: Explain AJAX and what does Asynchronous mean. There were also a couple of Leetcode easy questions. I didn't have any prior front end experience so I didn't know how to answer the specific front end questions, nor did I expect them.&lt;/p&gt;

&lt;p&gt;What I learned:&lt;br&gt;
In addition to Leetcode, I needed to study for the specific role I wanted to go for. I started searching up typical front-end interview questions as well as practicing my skills by creating side projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#google" class="anchor"&gt;
  &lt;/a&gt;
  Google
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Year: 2017&lt;/li&gt;
&lt;li&gt;Position: &lt;a href="https://www.google.com/about/careers/students/engres.html"&gt;Engineering Residency program&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first round included two technical phone interviews. The interviewer called me on my phone and sent me a google doc link. He also pastes the coding question on the doc and I dove right into trying to solve the problem. Then I became confused. I asked him questions about what's a valid input and what isn't. Then I got more confused and he spent a lot of time trying to explain. Then I told him, I didn't want to continue the interview further. There was sympathy in his voice as he tried one more time to get me to understand the problem but I was firm and we hung up.&lt;br&gt;
I cried. I cried until it was time for the next interview. The person was calling my phone and I refused to answer. They left a couple of missed calls and then my recruiter immediately tries to contact me and asked if I was still joining. I didn't answer her either. &lt;/p&gt;

&lt;p&gt;I ghosted Google. &lt;/p&gt;

&lt;p&gt;Google, if you're reading this I'm sorry. I've grown since then. &lt;/p&gt;

&lt;p&gt;What I learned:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I had a friend pick a random problem off Leetcode and I had to solve it on a video call while sharing my screen.&lt;/li&gt;
&lt;li&gt;I had recruited classmates to join me in white boarding the coding problems we encountered during our interviews in the library.&lt;/li&gt;
&lt;li&gt;I had organized a study group every weekend where we tackled data structures and algorithms together and solved Leetcode problems together.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I put in the effort to practice more and more, no matter how grueling it was. I forced myself to be put on the spot more, to get used to this uncomfortable feeling and become more confident.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#microsoft" class="anchor"&gt;
  &lt;/a&gt;
  Microsoft
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Year: 2019&lt;/li&gt;
&lt;li&gt;Position: Software development engineer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I passed the first round interview, which was a mix of behavioral and technical, and then proceeded to the final round. This was at a conference where I had two in-person interviews. The first one, I believe I did great for the behavioral questions where I talked about my past projects that were listed on my resume. Then he hit me with a system design question. W H A T. I didn't know how to solve it but I tried anyway. Didn't solve it correctly and the interviewer showed me the correct flow at the end. When it was time for me to ask questions, I asked him for something that stuck out to him that I should improve on. He said that I need to learn how to say I don't know if I didn't know how to solve a question... Point taken.&lt;/p&gt;

&lt;p&gt;What I learned:&lt;br&gt;
I accepted the fact that I needed to say "I don't know" in the interview. But I couldn't just leave it like that. I honed my answer to be something like "Honestly, I don't know, but if I were to guess, I think ..." I like to believe this answer instead has a better impact.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#facebook" class="anchor"&gt;
  &lt;/a&gt;
  Facebook
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Year: 2020&lt;/li&gt;
&lt;li&gt;Position: Full stack engineer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I was getting ghosted a lot this year, it was tough to get any company interested due to the pandemic. I was pretty happy to get someone to invite me for a first round coding interview.&lt;/p&gt;

&lt;p&gt;This was conducted over BlueJeans and I was sent a Coderpad link. I've done a good amount of studying at this point but was still nervous because of the competitive reputation of this company. I was asked a question regarding calculating taxes. The majority of the time, the interviewer had to explain to me the MATH behind taxes. I DON'T KNOW WHY I COULDN'T MATH. It just wasn't sticking. Because I couldn't math, I couldn't come up with a working solution and then time ran out. &lt;/p&gt;

&lt;p&gt;What I learned&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Taxes.&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://guides.codepath.com/compsci/UMPIRE-Interview-Strategy"&gt;UMPIRE Interview strategy&lt;/a&gt;. I needed to know exactly how to approach a technical interview. After learning and practicing this strategy, I felt more confident on understanding the problem and solving it and pretty sure this impressed my future interviewers as well. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up" class="anchor"&gt;
  &lt;/a&gt;
  Wrap up
&lt;/h2&gt;

&lt;p&gt;When I received the email that started out saying  "Congratulations! We're pleased to offer you the position of Software engineer", I felt this burden drop from my shoulders. The constant Leetcoding, the burnouts, the vast amount of time on submitting applications, networking and still contributing to my side projects were finally done. (Maybe more like put on pause) &lt;/p&gt;

&lt;p&gt;I promise it gets better. You're not in this alone as computer science is becoming more and more in demand. Utilize your community and up-lift one another and remember the reason(s) why you're striving for success.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tips" class="anchor"&gt;
  &lt;/a&gt;
  Tips
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Interview constantly. Interview with companies you don't care about. &lt;/li&gt;
&lt;li&gt;Practice solving the questions under pressure e.g. timed, having someone watch you, think of ways to optimize the algorithm right then and there, etc.&lt;/li&gt;
&lt;li&gt;Learning the Pomodoro technique helped me take my Data structure and algorithm studying seriously. I stayed alert and focused and was able to increase my completed questions on Leetcode from 50 to 100. &lt;/li&gt;
&lt;li&gt;If you're financially able to, invest in Leetcode Premium. It helped to see the solution when I was stuck on a problem.&lt;/li&gt;
&lt;li&gt;Depending on what software engineering role you're going for, you'd need to study for the position as well. For example, front end roles will ask you about AJAX, the DOM tree, etc and iOS roles would ask you questions about Swift and Objective C.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#resources" class="anchor"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.crackingthecodinginterview.com/"&gt;Cracking the Coding Interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/"&gt;Leetcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.thestandoutdeveloper.com/job-hunting#pricing"&gt;The Standout Developer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/how-to-prepare-for-a-software-developer-interview/"&gt;How to Prepare for a Software Developer Interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/arslan_ah/the-ultimate-strategy-to-preparing-for-the-coding-interview-3ace"&gt;The Ultimate Strategy to Preparing for the Coding Interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://techdevguide.withgoogle.com/"&gt;Tech Dev Guide With Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://guides.codepath.com/compsci/"&gt;CodePath's Computer Science Guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yangshun.github.io/tech-interview-handbook/"&gt;Tech Interview Handbook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#for-more-content-like-this-be-sure-to-follow-me-on-twitter" class="anchor"&gt;
  &lt;/a&gt;
  For more content like this, be sure to follow me on &lt;a href="https://twitter.com/farhanaxmustafa"&gt;Twitter&lt;/a&gt;!
&lt;/h2&gt;

</description>
      <category>career</category>
      <category>beginners</category>
      <category>interview</category>
    </item>
    <item>
      <title>My beloved PHP cheat sheet</title>
      <author>rickavmaniac</author>
      <pubDate>Thu, 17 Dec 2020 22:49:50 +0000</pubDate>
      <link>https://dev.to/rickavmaniac/my-beloved-php-cheat-sheet-7dl</link>
      <guid>https://dev.to/rickavmaniac/my-beloved-php-cheat-sheet-7dl</guid>
      <description>&lt;p&gt;Here is my cheat sheet I created along my learning journey. If you have any recommendations (addition/subtraction) let me know.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="c1"&gt;//Naming convention&lt;/span&gt;
&lt;span class="nv"&gt;$first_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="c1"&gt;// all lower case with underscore separators&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;updateProduct&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// camelCase&lt;/span&gt;
&lt;span class="kt"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProductItem&lt;/span&gt; &lt;span class="c1"&gt;// StudlyCaps&lt;/span&gt;
&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="no"&gt;ACCESS_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'123abc'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// all upper case with underscore separators&lt;/span&gt;

&lt;span class="c1"&gt;//output&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'Hello World'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//variable declaration&lt;/span&gt;
&lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//string&lt;/span&gt;
&lt;span class="nv"&gt;$isActive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//boolean&lt;/span&gt;
&lt;span class="nv"&gt;$number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//integer&lt;/span&gt;
&lt;span class="nv"&gt;$amount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;99.95&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//float&lt;/span&gt;


&lt;span class="c1"&gt;//string concat&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'Hello '&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//string escape characters \n new line  \t tab  \\ backslash&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Hello Mike&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;Hello David"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//string interpolation&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Hello &lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//string number of characters&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Remove space(s) before and after&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// Convert to lowercase / uppercase&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;strtolower&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;strtoupper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Converts the first character to uppercase&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;ucfirst&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// 'Mike' &lt;/span&gt;

&lt;span class="c1"&gt;// Replace text a by text b in $text&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'b'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// String Contains (PHP 8)&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nf"&gt;str_contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ke'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# true&lt;/span&gt;

&lt;span class="c1"&gt;// Check if numeric&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;is_numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'59.99'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;# true&lt;/span&gt;


&lt;span class="c1"&gt;// Round a number&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.80&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;  &lt;span class="c1"&gt;// returns 1&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.49&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;  &lt;span class="c1"&gt;// returns 0&lt;/span&gt;


&lt;span class="c1"&gt;// Random number&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;# 89&lt;/span&gt;


&lt;span class="c1"&gt;// Ternary operator (true : false)&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$valid&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="s1"&gt;'user valid'&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'user not valid'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="c1"&gt;//Null Coalesce Operator&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;//output 'Mike' if $name is null&lt;/span&gt;

&lt;span class="c1"&gt;//Null Coalesce Assignment&lt;/span&gt;
&lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="o"&gt;??=&lt;/span&gt; &lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="c1"&gt;// Null Safe Operator (PHP 8) will return null if one ? is null&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;?-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;profile&lt;/span&gt;&lt;span class="o"&gt;?-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;activate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// Null Safe + Null Coalesce (if null will return 'No user profile')&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;?-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;profile&lt;/span&gt;&lt;span class="o"&gt;?-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;activate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="s1"&gt;'Not applicable'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="c1"&gt;//Spaceship operator return -1 0 1&lt;/span&gt;
&lt;span class="nv"&gt;$names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Paul'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'John'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;usort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$names&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// ['John', 'Mike', 'Paul']&lt;/span&gt;


&lt;span class="c1"&gt;// print variables contents (for debug)&lt;/span&gt;
&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$names&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;print_r&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$names&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// terminate the current script&lt;/span&gt;
&lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;


&lt;span class="c1"&gt;//Conditionals&lt;/span&gt;
&lt;span class="k"&gt;If&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$condition&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'condition 10'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$condition&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'condition 5'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'all other conditions'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//Comparaison operation&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="c1"&gt;// equal no type check&lt;/span&gt;
&lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="c1"&gt;// equal with type check&lt;/span&gt;
&lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="c1"&gt;//not equal&lt;/span&gt;
&lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="c1"&gt;//or&lt;/span&gt;
&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="c1"&gt;//and&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="c1"&gt;//greater than&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="c1"&gt;//less than&lt;/span&gt;


&lt;span class="c1"&gt;// Match Expression (PHP 8)&lt;/span&gt;
&lt;span class="nv"&gt;$type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$color&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'red'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'danger'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'yellow'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'orange'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'warning'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'green'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'Unknown'&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;


&lt;span class="c1"&gt;//for loop&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"i value = "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;//while loop&lt;/span&gt;
&lt;span class="nv"&gt;$number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$number&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'value : '&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$number&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$number&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;//do while&lt;/span&gt;
&lt;span class="nv"&gt;$number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'value : '&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$number&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$number&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$number&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="c1"&gt;//Array declaration&lt;/span&gt;
&lt;span class="nv"&gt;$names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Peter'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Shawn'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'John'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;


&lt;span class="c1"&gt;//add to array&lt;/span&gt;
&lt;span class="nv"&gt;$names&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Micheal'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="c1"&gt;//Spread Operator&lt;/span&gt;
&lt;span class="nv"&gt;$names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Peter'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Paul'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nv"&gt;$people&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'John'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="nv"&gt;$names&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// ['John', 'Mike', 'Peter', 'Paul']&lt;/span&gt;


&lt;span class="c1"&gt;//Remove array entry:&lt;/span&gt;
&lt;span class="nb"&gt;unset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$names&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Peter'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;


&lt;span class="c1"&gt;//Array to string&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;implode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;', '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$names&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//output Mike, Shawn, John, Micheal&lt;/span&gt;


&lt;span class="c1"&gt;// String to Array&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;explode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;','&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ['Mike', 'Shawn', 'John']&lt;/span&gt;


&lt;span class="c1"&gt;// Direct access&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;//output Peter&lt;/span&gt;


&lt;span class="c1"&gt;//loop for each array entry&lt;/span&gt;
&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$names&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
   &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'Hello '&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;// loop break / continue&lt;/span&gt;
&lt;span class="nv"&gt;$values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'one'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'two'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'three'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$values&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;'two'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// exit loop&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;'three'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// next loop iteration&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;// Number of items in a Array&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$names&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  


&lt;span class="c1"&gt;//Associative array:&lt;/span&gt;
&lt;span class="nv"&gt;$person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'age'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'genre'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'men'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;


&lt;span class="c1"&gt;//Add to ass. array:&lt;/span&gt;
&lt;span class="nv"&gt;$person&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="c1"&gt;//loop ass. array key =&amp;gt; value: &lt;/span&gt;
&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$names&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
   &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;' : '&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;// Check if a specific key exist&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nf"&gt;array_key_exist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'age'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$person&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="c1"&gt;// Return keys&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;array_keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$person&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ['age', 'genre']&lt;/span&gt;


&lt;span class="c1"&gt;// Return values&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;array_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$person&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// [45, 'men']&lt;/span&gt;


&lt;span class="c1"&gt;//Array filter (return a filtered array)&lt;/span&gt;
&lt;span class="nv"&gt;$filtered_people&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;array_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$people&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$person&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$names&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;active&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;


&lt;span class="c1"&gt;// Array map (return transform array):&lt;/span&gt;
&lt;span class="nv"&gt;$only_names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;array_map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$person&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$person&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nv"&gt;$people&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;//function declararion&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$first_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$last_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'default value'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;puts&lt;/span&gt; &lt;span class="nv"&gt;$first_name&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$last_name&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//function call&lt;/span&gt;
&lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Taylor'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//function call with named parameters (PHP 8)&lt;/span&gt;
&lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;last_name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Taylor'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// order can change&lt;/span&gt;

&lt;span class="c1"&gt;//function variables params&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nv"&gt;$params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;// Closure function&lt;/span&gt;
&lt;span class="nc"&gt;Route&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'welcome'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;


&lt;span class="c1"&gt;// Arrow functions&lt;/span&gt;
&lt;span class="nc"&gt;Route&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'welcome'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="c1"&gt;//File read&lt;/span&gt;
&lt;span class="nv"&gt;$file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;fopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"test.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"r"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//Output lines until EOF is reached&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;feof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nv"&gt;$line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;fgets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;br&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;fclose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="c1"&gt;// File write&lt;/span&gt;
&lt;span class="nv"&gt;$file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;fopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'export.csv'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'age'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;//Write key name as csv header&lt;/span&gt;
&lt;span class="nb"&gt;fputcsv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;array_keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]));&lt;/span&gt;

&lt;span class="c1"&gt;//Write lines (format as csv)&lt;/span&gt;
&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$array&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;fputcsv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$row&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;fclose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="c1"&gt;//Throw Error&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;someCondition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Data format error'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;//Catch the Error&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nv"&gt;$db&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;checkData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getMessage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;//class declaration&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;// object instantiation&lt;/span&gt;
&lt;span class="nv"&gt;$person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt;


&lt;span class="c1"&gt;//class properties and constructor&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$first_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$last_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$first_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$last_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;first_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$first_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;last_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$last_name&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Constructor Property Promotion (PHP 8)&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$first_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$last_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//static constructor&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nv"&gt;$params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="nc"&gt;Mike&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="nc"&gt;Taylor&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="c1"&gt;// class inheritance&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'Override method'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;// Static Method&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;greeting&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Hello World!"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Call static method&lt;/span&gt;
&lt;span class="n"&gt;greeting&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;


&lt;span class="c1"&gt;// Static method internal call&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;greeting&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Hello World!"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;


&lt;span class="c1"&gt;// Interface&lt;/span&gt;
&lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;Animal&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;makeSound&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Cat&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;Animal&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;makeSound&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Meow"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$animal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Cat&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$animal&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;makeSound&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;


&lt;span class="c1"&gt;//Trait (mix-in)&lt;/span&gt;
&lt;span class="kd"&gt;trait&lt;/span&gt; &lt;span class="nc"&gt;HelloWorld&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;sayHello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'Hello World!'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Greetings&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;HelloWorld&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Greetings&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$object&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;sayHello&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



</description>
      <category>php</category>
      <category>laravel</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Asking is thriving</title>
      <author>Ben Szabo</author>
      <pubDate>Thu, 17 Dec 2020 22:33:45 +0000</pubDate>
      <link>https://dev.to/finnhvman/asking-is-thriving-45hi</link>
      <guid>https://dev.to/finnhvman/asking-is-thriving-45hi</guid>
      <description>&lt;p&gt;I started my career as a Java Software Engineer without any prior Java knowledge. I didn't study Computer Science at the university and I didn't do any software internship. All I knew was how to create static web pages with HTML and CSS.&lt;/p&gt;

&lt;p&gt;I became the first Java Engineer in the team and my role was to take over the development of an internal tool inherited from another team. I had to get up to speed really fast in order to survive.&lt;/p&gt;

&lt;p&gt;The thing I couldn't get away without was asking questions. A lot. There was so much to learn about the tool, domain and Java that I never ran out of questions. I was determined, relentless, out of my comfort zone and I'm pretty sure I was annoying. In the back of my mind there was this thought that I'm asking too many times and they would start hating me, but the drive to fit in the role was stronger.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TzooikNV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vykowqa32cxz82mpcicy.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TzooikNV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vykowqa32cxz82mpcicy.jpeg" alt="Question marks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Though the members who built the tool always answered. However frequently I went they always gave me guidance. I guess I was lucky for having such helpful and resilient mentors, because there was a wide gap to bridge with me. In the end I came through and I have been in software for the last decade, probably thanks to all those questions.&lt;/p&gt;

&lt;p&gt;Asking questions is a pretty important thing to do in software teams (most likely in any kinds of teams). So if you are ever pondering whether you should ask a question or not, rather ask away! Okay, maybe it's not always that simple because many factors come to play. But worry not, I put together a list of tips that could help you manage these factors and make you an effective asker!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tips-for-asking-effectively" class="anchor"&gt;
  &lt;/a&gt;
  Tips for asking effectively
&lt;/h1&gt;

&lt;p&gt;🔍 Come &lt;a href="#preparing-yourself"&gt;prepared&lt;/a&gt;&lt;br&gt;
⌚️ Find &lt;a href="#time-and-place"&gt;the right place and right time&lt;/a&gt;&lt;br&gt;
😊 Be &lt;a href="#politeness"&gt;polite&lt;/a&gt;&lt;br&gt;
👌 Express yourself &lt;a href="#communicating-concisely"&gt;concisely&lt;/a&gt;&lt;br&gt;
📝 Take &lt;a href="#notes"&gt;notes&lt;/a&gt; of the answer if necessary&lt;br&gt;
👋 Return the favor &lt;a href="#being-the-one-asked"&gt;when asked&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#preparing-yourself" class="anchor"&gt;
  &lt;/a&gt;
  Preparing yourself
&lt;/h1&gt;

&lt;p&gt;First, try to get prepared as much as you can around the topic you are about to ask. There's a chance that you might bump into the answer. However, if you don't then you still took some time to dive deeper in the area. Presenting that you already have a level of understanding helps a lot in communication.&lt;/p&gt;

&lt;p&gt;For example let's pretend you are given a task that revolves around hypergraphs and you know nothing about them. (Let's also pretend that most knowledge of hypergraphs has been wiped off the internet.) There's an expert in the company, but before you ask you could study around the matter. In this case the best start is to learn or revisit what graphs are. For instance understand that they are made of vertices and edges, there are undirected and directed graphs, and there are unweighted and weighted graphs.&lt;/p&gt;

&lt;p&gt;The point is to gain a good base knowledge of the topic you are requesting some help about. This will save you and the person you are meaning to ask some time and reduce the friction of the interaction. Here's a visualization of a hypergraph if you were wondering how they look:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0V3Pu_M7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jt9ny7mvrdpbi1ujtg89.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0V3Pu_M7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jt9ny7mvrdpbi1ujtg89.png" alt="A hypergraph visualized"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#time-and-place" class="anchor"&gt;
  &lt;/a&gt;
  Time and place
&lt;/h1&gt;

&lt;p&gt;A question might arise in you at any time, but you won't always say it out loud right away. We have been taught in ways when to speak up and when to stay quiet. So it's important to be aware of what situation you are in. There are several anchors to this. I'm dividing them into two groups: the rather objective ones and the more subjective ones in the following two sections.&lt;/p&gt;

&lt;p&gt;It's a good idea to gauge who might be interested in the answer for your question so you ask it in front of the right audience. If you are asking questions of taxation on a global all hands of a multinational company, you are probably wasting everyone's time who doesn't tax in your country. Similarly, think of the time presumably necessary to answer your question. Avoid asking long, open-ended questions if you are short on time, for example during a stand-up. In a fully remote setup you have much less meta information on what your coworkers occupied with, but you can resort to checking their calendars and chat statuses. So check these before you try to engage in a discussion with someone to diminish the "Why aren't they answering?" feeling.&lt;/p&gt;

&lt;p&gt;Some other circumstantial things need to be "felt out". Cultural backgrounds vary a lot, for example I remember the feeling of not being too encouraged to ask questions in the class room. Why? Because if you asked something dumb or obvious you got shamed by the class or even the teacher. We might carry these ideas throughout our lives as golden truths, so it's good to remind ourselves that we are not sitting in classrooms anymore. Another, maybe even greater part of this is that each country and region has their unwritten laws of how you should behave at the workplace. It's really hard to put your finger on these things, but try to be aware of these patterns as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hbG08Ylv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/33bgzi5h9uhpiqaf1o9o.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hbG08Ylv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/33bgzi5h9uhpiqaf1o9o.jpeg" alt="Children in school raising their hands"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#politeness" class="anchor"&gt;
  &lt;/a&gt;
  Politeness
&lt;/h1&gt;

&lt;p&gt;This is a no brainer, of course being polite always helps. It's good to remind ourselves to approach our colleagues respectfully. Surely people are more likely to answer a question that's asked nicely. Furthermore, keep in mind that the person might not be available to answer your question at the moment. Understand, that you may need to wait for them to come back to you, or schedule a meeting in the next few days or weeks.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#communicating-concisely" class="anchor"&gt;
  &lt;/a&gt;
  Communicating concisely
&lt;/h1&gt;

&lt;p&gt;I already mentioned respecting other people's time earlier. Being terse is respecting the time of the person you are asking. No one wants to answer long-winded questions or verbose emails. On top of it no one wants to pay the mental tax of figuring out the important details of a lengthy request. Phrase your questions with just the necessary information and you will save the receiver from spending a lot of mental energy. &lt;/p&gt;

&lt;p&gt;Take a look at the following fictional email.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hi Alice,&lt;/p&gt;

&lt;p&gt;I'm Bob, the latest member of the Hugs Team. I'm writing you  because I would like to learn about the technology you used when implemented Haha's. We are looking to integrate Hugs beside Haha's in the next quarter, so it would be really helpful if you could answered the following questions.&lt;/p&gt;

&lt;p&gt;Hugs would be something similar like Haha's, but they would represent a different emotion. (It's still a positive one, but could be used for expressing gratitude.)&lt;/p&gt;

&lt;p&gt;[some in-depth questions here]&lt;br&gt;
[...]&lt;br&gt;
[...]&lt;/p&gt;

&lt;p&gt;Thanks in advance and looking forward for your answer!&lt;/p&gt;

&lt;p&gt;Best Regards,&lt;br&gt;
&lt;em&gt;Bob Bobson&lt;/em&gt;&lt;br&gt;
&lt;em&gt;Software Engineer&lt;/em&gt;&lt;br&gt;
&lt;em&gt;Hugs Team&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Have you noticed any unnecessary parts? I'm not saying the above email is wrong, but it could be optimized. It's more polite than necessary, burdens the reader with a lot of extra information, and has some redundant pieces.&lt;/p&gt;

&lt;p&gt;Now take a look at the optimized version.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hi Alice,&lt;/p&gt;

&lt;p&gt;We are looking to implement a feature called Hugs that's similar to Haha's in the next quarter. We would appreciate if you could answer these questions:&lt;/p&gt;

&lt;p&gt;[some in-depth questions here]&lt;br&gt;
[...]&lt;br&gt;
[...]&lt;/p&gt;

&lt;p&gt;Many Thanks,&lt;br&gt;
&lt;em&gt;Bob Bobson&lt;/em&gt;&lt;br&gt;
&lt;em&gt;Software Engineer&lt;/em&gt;&lt;br&gt;
&lt;em&gt;Hugs Team&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We made the email shorter yet polite and still kept some crucial contextual information. Another commonly used medium is instant messaging like Slack. Whenever you are writing someone, it's better to write your request as a whole message and not line by line like you would do in a real life dialogue.&lt;/p&gt;

&lt;p&gt;IRL type of messaging:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Bob&lt;/strong&gt; 9:37 AM&lt;br&gt;
Hi!&lt;br&gt;
&lt;strong&gt;Alice&lt;/strong&gt; 9:41AM&lt;br&gt;
Hello&lt;br&gt;
&lt;strong&gt;Bob&lt;/strong&gt; 9:42 AM&lt;br&gt;
Can I ask you some questions?&lt;br&gt;
&lt;strong&gt;Alice&lt;/strong&gt; 9:44 AM&lt;br&gt;
Sure&lt;br&gt;
&lt;strong&gt;Bob&lt;/strong&gt; 9:45 AM&lt;br&gt;
What library did you use to implement the frontend components of Haha's?&lt;br&gt;
&lt;strong&gt;Alice&lt;/strong&gt; 9:49 AM&lt;br&gt;
We used... [Alice proceeds to explain the answer]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Notice how 8 minutes passed from the start until Alice received the question, and 12 minutes until Bob got an answer. Instead Bob could have opened with something like this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Bob&lt;/strong&gt; 9:37 AM&lt;br&gt;
Hi! Could tell what library did you use to implement the frontend components of Haha's?&lt;br&gt;
&lt;strong&gt;Alice&lt;/strong&gt; 9:39 AM&lt;br&gt;
We used... [Alice proceeds to explain the answer]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With this type of messaging Alice received the question straight away and Bob got an answer after 2 minutes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DRDMS_hH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/2qnbp09hrv9ygovu5w55.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DRDMS_hH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/2qnbp09hrv9ygovu5w55.jpg" alt="Everyone liked that"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#notes" class="anchor"&gt;
  &lt;/a&gt;
  Notes
&lt;/h1&gt;

&lt;p&gt;Sometimes you will get some long and complicated answers, and sometimes you will get some short answers but won't use it for a long time. Either way you might forget about the answer. Taking notes will help you with that. This seems unnecessary in a mailing for example, but another benefit of taking notes is that it forces you to actually interpret the answer. Interpreting immediately will push you to find potential holes in your understanding, thus driving you to ask more questions to get closer to what you need.&lt;/p&gt;

&lt;p&gt;All in all, try to be really attentive when you are receiving an answer so you can avoid the need of repeating your questions in the future. Moreover, from the answerer's perspective it's much better to explain something to someone who is really listening. People can easily tell that, like you can tell that the dog below is paying high attention to something.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wERH1-mV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wogbdvawox0uj88wjz0s.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wERH1-mV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wogbdvawox0uj88wjz0s.jpeg" alt="Dog watching something"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#being-the-one-asked" class="anchor"&gt;
  &lt;/a&gt;
  Being the one asked
&lt;/h1&gt;

&lt;p&gt;You will certainly find yourself on the other side of Q&amp;amp;A. In that case be mindful of the tips above. Try to stay approachable so people will remember that you are someone they can ask. Set up reminders for emails you want to answer later, set up reminders even for inquiries received via Slack. It takes some effort, but people will learn that you are reliable.&lt;/p&gt;

&lt;p&gt;Consider helping others when they ask as part of your job because the success of your company's might just depend on it.  Be helpful and nourish a great culture that will lead you and your peers to great wins.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#when-desperate-be-loud" class="anchor"&gt;
  &lt;/a&gt;
  When desperate be loud
&lt;/h1&gt;

&lt;p&gt;This isn't a serious advice rather a ridiculous last resort. If none of the above worked, try following some guerrilla marketing-esque tactics: State something blatantly wrong loud enough and in time someone will come and correct you anyways. Alternative explanation by David Khourshid:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--kkIzey0b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/619677584805208064/RwwbnNpi_normal.jpg" alt="David K. 🎹 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        David K. 🎹
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/davidkpiano"&gt;@davidkpiano&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      You can solve *any* problem if you believe in yourself, put your mind to it, and tweet the wrong answer then wait 5 minutes.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:37 PM - 30 Nov 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1333404876890648577" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1333404876890648577" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      74
      &lt;a href="https://twitter.com/intent/like?tweet_id=1333404876890648577" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      808
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;





&lt;p&gt;&lt;em&gt;I hope these tips gave you a confidence boost to ask more often!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>career</category>
      <category>productivity</category>
      <category>help</category>
    </item>
    <item>
      <title>What awesome tools did you discover recently?</title>
      <author>Madza</author>
      <pubDate>Thu, 17 Dec 2020 22:22:37 +0000</pubDate>
      <link>https://dev.to/madza/what-awesome-tools-did-you-discover-recently-24l7</link>
      <guid>https://dev.to/madza/what-awesome-tools-did-you-discover-recently-24l7</guid>
      <description>&lt;p&gt;Could you share some amazing apps, tools, or services that you have come across recently and thought deserve more spotlight?&lt;/p&gt;

&lt;p&gt;Some of my recent discoveries would include:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://fontjoy.com/"&gt;FontJoy&lt;/a&gt; - an online tool for exploring different font combinations.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://neumorphism.io/"&gt;Neumorphism&lt;/a&gt; -an online tool for generating CSS shadows.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.vantajs.com/"&gt;VantaJS&lt;/a&gt; - animated website backgrounds  with a built-in customization.&lt;/p&gt;

&lt;p&gt;Share your hidden online gems you just dug out!&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>productivity</category>
      <category>inspiration</category>
    </item>
    <item>
      <title>Murders in the ocean - DO+DEV Hackaton Submission (Part 1)</title>
      <author>Denislav Gavrilov 👨‍🚀🤖🤷‍♂️</author>
      <pubDate>Thu, 17 Dec 2020 21:36:57 +0000</pubDate>
      <link>https://dev.to/denislav__/murders-in-the-ocean-do-dev-hackaton-submission-part-1-3jpb</link>
      <guid>https://dev.to/denislav__/murders-in-the-ocean-do-dev-hackaton-submission-part-1-3jpb</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-i-built-am-building" class="anchor"&gt;
  &lt;/a&gt;
  What I built (am building)
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;STILL IN DEVELOPMENT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hey there people on the web. I hope everyone is building marvelous stuff for this amazing hackathon and I am looking forward to seeing a lot of cool projects. Let me tell you a little bit about my project and the state of it.&lt;/p&gt;

&lt;p&gt;Due to the submission template being perfect, I will stick to it. Let's go!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#category-submission" class="anchor"&gt;
  &lt;/a&gt;
  Category Submission:
&lt;/h3&gt;

&lt;p&gt;Random Roulette 🕹️&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#app-link" class="anchor"&gt;
  &lt;/a&gt;
  App Link
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://do-dev-hackaton-sv6sl.ondigitalocean.app/"&gt;https://do-dev-hackaton-sv6sl.ondigitalocean.app/&lt;/a&gt; - The URL is going to change in the future. I am, once again, having enormous problems choosing the perfect domain... I will make sure to edit my post when I pick the domain. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#screenshots" class="anchor"&gt;
  &lt;/a&gt;
  Screenshots
&lt;/h3&gt;

&lt;p&gt;This is the screen when the game is started:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XYEs83Ji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/f7gs9grj7s48e46iccvm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XYEs83Ji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/f7gs9grj7s48e46iccvm.png" alt="Start Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the 'first-round' where everyone can still see the screen (the whole screen it a lot richer on details, this viewport is due to the 4 screens on 1 monitor):&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9i988PAv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jnkmo19qfgs2cm29wd5a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9i988PAv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jnkmo19qfgs2cm29wd5a.png" alt="First Round"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;This is what all the players see when it's the medic's round (explanation of the rules in the description):&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1uBMyFxR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/p345dpspjht4vdbgo9ue.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1uBMyFxR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/p345dpspjht4vdbgo9ue.png" alt="Medic Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is what the individual screens look like for the killer and the medic when they choose who to kill/heal:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6UGe7eBD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/r03monb6l02oxlzof0vo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6UGe7eBD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/r03monb6l02oxlzof0vo.png" alt="Kill or Heal"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#description" class="anchor"&gt;
  &lt;/a&gt;
  Description
&lt;/h3&gt;

&lt;p&gt;The game is simply a murder mystery. I doubt it if the majority of the players haven't played this format before.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#rules" class="anchor"&gt;
  &lt;/a&gt;
  Rules:
&lt;/h4&gt;

&lt;p&gt;There is 1 killer, 1 medic, and the rest of the players are passengers. The goal is to find the killer through discussion. The rules go like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Round 1 - The screen for everybody except for the killer goes off and the killer chooses his prey (who to kill).&lt;/li&gt;
&lt;li&gt;Round 2 - The screen for everybody except for the medic goes off and the medic chooses who to save.&lt;/li&gt;
&lt;li&gt;Round 3 - The screen for everybody comes clean and the results are shown: If nobody is killed, this means the medic managed to save the prey. If there is one killed, it means the medic could not save the prey. Everybody in the room discusses who to vote off and if they don't manage to catch the killer, the game continues looping through the next 3 rounds and so on.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#link-to-source-code" class="anchor"&gt;
  &lt;/a&gt;
  Link to Source Code
&lt;/h3&gt;

&lt;p&gt;I will be pasting the source code of the game once I finish it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#permissive-license" class="anchor"&gt;
  &lt;/a&gt;
  Permissive License
&lt;/h3&gt;

&lt;p&gt;MIT License. I will post a link once I finish the project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#background" class="anchor"&gt;
  &lt;/a&gt;
  Background
&lt;/h2&gt;

&lt;p&gt;I was heavily inspired by Among Us (predictable, eh?) and I also remember playing this particular format of murder mystery games with a group of friends.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-i-built-it-am-building-it" class="anchor"&gt;
  &lt;/a&gt;
  How I built it (am building it)
&lt;/h3&gt;

&lt;p&gt;I've been working as a sysadmin for 1 year and as you can imagine, development is not one of my strong sides. Having that in mind, I am amazed by how easy DigitalOcean's app platform is. I am so glad I don't have to deal with server stuff and have the ability to deploy my app with a click of a button. It's superb, really!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-resourcesinfo" class="anchor"&gt;
  &lt;/a&gt;
  Additional Resources/Info
&lt;/h3&gt;

&lt;p&gt;This is my submission post to put my app out there but it is still not completed. That is why, I will be covering my adventure in a series of posts where I will be sharing my progress and post openly on how I built it, what challenges I face and how I overcome such.&lt;/p&gt;

&lt;p&gt;The game is being built with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://socket.io/"&gt;socket.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/docs/app-platform/"&gt;DigitalOcean's APP platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bootstrap for grinding&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>dohackathon</category>
    </item>
    <item>
      <title>Build and Deploy a Serverless URL Shortener with Python and Fauna</title>
      <author>LordGhostX</author>
      <pubDate>Thu, 17 Dec 2020 19:51:42 +0000</pubDate>
      <link>https://dev.to/lordghostx/build-and-deploy-a-serverless-url-shortener-with-python-and-fauna-3077</link>
      <guid>https://dev.to/lordghostx/build-and-deploy-a-serverless-url-shortener-with-python-and-fauna-3077</guid>
      <description>&lt;p&gt;Recently, I have been exploring and experimenting with serverless databases and built a &lt;a href="https://dev.to/lordghostx/building-a-telegram-bot-with-python-and-fauna-494i"&gt;Telegram Bot to manage a to-do list with Fauna&lt;/a&gt;. So I decided to create something a bit complex this time around like a URL shortener.&lt;/p&gt;

&lt;p&gt;A URL shortener is a service that shortens long web addresses making them easily shareable on social media. They work by generating a short identifier to represent a long web address. So, when a user submits the identifier to the platform, they are automatically redirected to the original URL.&lt;/p&gt;

&lt;p&gt;In this article, we will be building a simple URL shortener using the Python programming language, Flask web framework, and the serverless database, &lt;a href="https://fauna.com/"&gt;Fauna&lt;/a&gt;. We will also be deploying our app to Heroku.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-use-fauna" class="anchor"&gt;
  &lt;/a&gt;
  Why Use Fauna?
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://fauna.com/"&gt;Fauna&lt;/a&gt; is a serverless document database that offers two interfaces, GraphQL and the Fauna Query Language (FQL). It can store collections, indexes, and even other databases (multi-tenancy). Here are a few reasons for using Fauna:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fauna is very easy to learn and integrate into projects.&lt;/li&gt;
&lt;li&gt;Increase in productivity as Fauna handles a lot of database operations under the hood for you.&lt;/li&gt;
&lt;li&gt;Fauna provides infinite scalability for your projects.&lt;/li&gt;
&lt;li&gt;Fauna allows you to model any data that is required by your business e.g relations, documents, graphs, or a combination.&lt;/li&gt;
&lt;li&gt;Fauna provides native GraphQL support for your database along with functionalities such as transactions, custom logic, and access control.&lt;/li&gt;
&lt;li&gt;Fauna databases have low-latency, so you can serve your users everywhere with consistent data that is being replicated in real-time to multiple regions and served from the closest locations to them.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#getting-started-with-fauna" class="anchor"&gt;
  &lt;/a&gt;
  Getting Started with Fauna
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#step-1-setting-up-our-fauna-database" class="anchor"&gt;
  &lt;/a&gt;
  Step 1: Setting up our Fauna Database
&lt;/h2&gt;

&lt;p&gt;The first thing we need to do is create the database for our app in our Fauna dashboard. If you have not created an account on Fauna before now, create one here: &lt;a href="https://dashboard.fauna.com/accounts/register"&gt;https://dashboard.fauna.com/accounts/register&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aM3FI7nX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dwprs4756tzz34rqbrgs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aM3FI7nX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dwprs4756tzz34rqbrgs.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Provide a name for your database then press the &lt;code&gt;SAVE&lt;/code&gt; button. The next thing we have to do is create a collection in our database. A collection is similar to SQL tables that contain data with similar characteristics e.g user collection that contain information about users in the database. We will start by pressing the &lt;code&gt;NEW COLLECTION&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A-eKfZXx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/zk7egrpgxuws1w02o20g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A-eKfZXx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/zk7egrpgxuws1w02o20g.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, we supply a name for the collection we will be creating and working with (we will be using &lt;code&gt;urls&lt;/code&gt; for this example). Once you have supplied this information proceed by pressing the &lt;code&gt;SAVE&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2dOfcEFO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/lh3tpj0dfhqgj7cwbivy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2dOfcEFO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/lh3tpj0dfhqgj7cwbivy.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xN3pe8j---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/erlt04ly5o9s1g07tsl3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xN3pe8j---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/erlt04ly5o9s1g07tsl3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We also need to create an index for our collection. A Fauna index allows us to browse through data that is stored in a database collection, based on specific attributes. To create one, navigate to the &lt;code&gt;DB Overview&lt;/code&gt; tab on the Fauna sidebar (left side of the screen) then click the &lt;code&gt;NEW INDEX&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--465XSF_W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/tkut670to862ag3d5uka.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--465XSF_W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/tkut670to862ag3d5uka.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v4iqt11s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/zsrmbif030yhj9vaz4a8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v4iqt11s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/zsrmbif030yhj9vaz4a8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Supply the name you want to use for your index, set the terms to &lt;code&gt;data.identifier&lt;/code&gt; as we will be using that variable to reference our URLs later. Also, remember to select the &lt;code&gt;Unique&lt;/code&gt; attribute for our index, this ensures that we do not have a duplicate in our database entries.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-generating-fauna-api-key" class="anchor"&gt;
  &lt;/a&gt;
  Step 2: Generating Fauna API Key
&lt;/h2&gt;

&lt;p&gt;We will need to create a Fauna API Key to connect to our database from our Python application. To do this, navigate to the security settings on the Fauna sidebar (left side of the screen).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hoLsDEQ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/5h3c6432h3tzo7z83vai.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hoLsDEQ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/5h3c6432h3tzo7z83vai.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_uP3GczC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/l99na6wh10j4je1rd84y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_uP3GczC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/l99na6wh10j4je1rd84y.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oDkwfTFi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/80qxqejaacqpwooo8rc3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oDkwfTFi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/80qxqejaacqpwooo8rc3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you have done this, you will be presented with your API key (hidden here for privacy reasons). The key should be copied as soon as it is generated then stored somewhere you can easily retrieve.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-integrating-fauna-with-python" class="anchor"&gt;
  &lt;/a&gt;
  Step 3: Integrating Fauna with Python
&lt;/h2&gt;

&lt;p&gt;Next, we need to get the Python library for Fauna. It’s available on pip and can be installed with a single line in our terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pip install faunadb
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;After this is installed, we are going to run the sample code provided in Fauna Python driver docs &lt;a href="https://docs.fauna.com/fauna/current/drivers/python.html"&gt;https://docs.fauna.com/fauna/current/drivers/python.html&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faunadb&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faunadb.objects&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Ref&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faunadb.client&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FaunaClient&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FaunaClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"your-secret-here"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;indexes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;paginate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indexes&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;indexes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The code above shows how the Fauna Python driver connects to a database with its API key and prints the indexes associated with it. The result from running this code is similar to the image below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VP3K9nTU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xvpyzbnkgsdzb5qg1zua.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VP3K9nTU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xvpyzbnkgsdzb5qg1zua.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#building-our-shortener-with-flask" class="anchor"&gt;
  &lt;/a&gt;
  Building our Shortener with Flask
&lt;/h1&gt;

&lt;p&gt;Now that we have successfully integrated our Python script with Fauna, let’s get started with building our shortener with Flask. To keep things simple, we’ll be building our app as an API instead of a full-stack web application with HTML and CSS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-setting-up-our-flask-server" class="anchor"&gt;
  &lt;/a&gt;
  Step 1: Setting up our Flask Server
&lt;/h2&gt;

&lt;p&gt;We need to install the flask library the same way we installed Fauna earlier using pip and our terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pip install flask
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Let’s get a basic server running in Flask that will display the text &lt;code&gt;Hello World&lt;/code&gt; when opened. Create a new project folder and a python file with the name &lt;code&gt;app.py&lt;/code&gt; and type the following code inside.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;home&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Hello World!"&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;When we run our &lt;code&gt;app.py&lt;/code&gt; file we should get a response similar to the image below&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wNlNa0Ts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/5tx2mcyonvycqjwexdor.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wNlNa0Ts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/5tx2mcyonvycqjwexdor.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you get this, you’re on the right track. Open the following in your browser &lt;code&gt;http://127.0.0.1:5000&lt;/code&gt; to access the app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Osv92YID--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/h6fi2xvyn8udubpi8g2d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Osv92YID--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/h6fi2xvyn8udubpi8g2d.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-create-the-shortener-function" class="anchor"&gt;
  &lt;/a&gt;
  Step 2: Create the Shortener Function
&lt;/h2&gt;

&lt;p&gt;This is a core part of our application, we need a function that generates a random string that will serve as our identifier for our shortened URLs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;string&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generate_identifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;identifier&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;identifier&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ascii_letters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;identifier&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We used the &lt;code&gt;choice&lt;/code&gt; method in the &lt;code&gt;random&lt;/code&gt; library to randomly select a letter provided by &lt;code&gt;string.ascii_letters&lt;/code&gt; variable then concatenated the results to generate a random string. When we run this function we should get results like the ones in the image below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_zzwKTz3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dnko06434mp50ov59vbz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_zzwKTz3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dnko06434mp50ov59vbz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You might also want to look at the &lt;a href="https://docs.fauna.com/fauna/current/api/fql/functions/newid?lang=python"&gt;&lt;code&gt;NewId&lt;/code&gt; function&lt;/a&gt; function provided by Fauna which can be used to generate time-based random numbers that are guaranteed to be unique across the entire cluster of your database. Also, once generated they can never be generated a second time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-build-the-shortener-endpoint" class="anchor"&gt;
  &lt;/a&gt;
  Step 3: Build the Shortener Endpoint
&lt;/h2&gt;

&lt;p&gt;We have now created a function that is responsible for generating the identifiers, we need to create an endpoint in our web application that will take a web address as input, generate an identifier, save it in our database and give the user the shortened URL.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;string&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faunadb&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faunadb.objects&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Ref&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faunadb.client&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FaunaClient&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FaunaClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"your-secret-here"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generate_identifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;identifier&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;identifier&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ascii_letters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;identifier&lt;/span&gt;


&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;home&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Hello World!"&lt;/span&gt;


&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/generate/&amp;lt;path:address&amp;gt;/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;identifier&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;generate_identifier&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"urls"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;"identifier"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;identifier&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}))&lt;/span&gt;

    &lt;span class="n"&gt;shortened_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;host_url&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;identifier&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;"identifier"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;identifier&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"shortened_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;shortened_url&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We used the &lt;code&gt;create&lt;/code&gt; method of the FQL client to store the original URL provided by the user along with the short identifier we generated in our database collection using &lt;code&gt;client.query(q.create(q.collection(collection_name), data))&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here, we imported the &lt;code&gt;jsonify&lt;/code&gt; method from Flask which is used in REST APIs to return JSON data and the &lt;code&gt;request&lt;/code&gt; variable so we can access data our browser sent to the server along with its request. When we access this endpoint in our browser, we should get a response similar to this. We can also see our newly created document in our Fauna dashboard.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c6Rs_NDx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/347v6rf6tjo7979cjkad.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c6Rs_NDx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/347v6rf6tjo7979cjkad.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jUoC67GT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3hhgqhfblhuj6hwmbuih.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jUoC67GT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3hhgqhfblhuj6hwmbuih.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-4-write-the-url-redirection-logic" class="anchor"&gt;
  &lt;/a&gt;
  Step 4: Write the URL Redirection Logic
&lt;/h2&gt;

&lt;p&gt;The only thing left is building the logic that will redirect the user to the original URL when it receives the shortened URL. For this to work, we would build an endpoint that will take the identifier as input, query our database then redirect the user to the original URL if it exists, or display a 404 page if it doesn’t.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/&amp;lt;string:identifier&amp;gt;/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fetch_original&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;identifier&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"urls_by_identifier"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;identifier&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;abort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We imported 2 more methods from Flask (&lt;code&gt;abort&lt;/code&gt; and &lt;code&gt;redirect&lt;/code&gt;); &lt;code&gt;abort&lt;/code&gt; will stop the code that is currently running and trigger the response of a provided status code while &lt;code&gt;redirect&lt;/code&gt; will redirect a user to another web address, either on your server or an external one. The full code should resemble the one below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;string&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;abort&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faunadb&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faunadb.objects&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Ref&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;faunadb.client&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FaunaClient&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FaunaClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"your-secret-here"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generate_identifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;identifier&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;identifier&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ascii_letters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;identifier&lt;/span&gt;


&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;home&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Hello World!"&lt;/span&gt;


&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/generate/&amp;lt;path:address&amp;gt;/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;identifier&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;generate_identifier&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"urls"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;"identifier"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;identifier&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}))&lt;/span&gt;

    &lt;span class="n"&gt;shortened_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;host_url&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;identifier&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;"identifier"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;identifier&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"shortened_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;shortened_url&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;


&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/&amp;lt;string:identifier&amp;gt;/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fetch_original&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;identifier&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"urls_by_identifier"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;identifier&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;abort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now that wraps up the whole code for our URL shortener service with Python and Fauna.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#deploying-our-python-app-to-heroku" class="anchor"&gt;
  &lt;/a&gt;
  Deploying our Python App to Heroku
&lt;/h1&gt;

&lt;p&gt;Deploying an application means you are uploading it online so it can be accessible to anyone from anywhere in the world. In this article, we would be deploying our Python application to a free and popular hosting platform called Heroku.&lt;/p&gt;

&lt;p&gt;The prerequisites needed to work with Heroku is an account on Heroku, Heroku CLI, and GIT.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a Heroku account here - &lt;a href="https://signup.heroku.com/login"&gt;https://signup.heroku.com/login&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Follow this guide to install Heroku CLI - &lt;a href="https://devcenter.heroku.com/articles/heroku-cli"&gt;https://devcenter.heroku.com/articles/heroku-cli&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Follow this guide to install GIT - &lt;a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git"&gt;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#step-1-install-gunicorn" class="anchor"&gt;
  &lt;/a&gt;
  Step 1: Install Gunicorn
&lt;/h2&gt;

&lt;p&gt;Gunicorn is a pure-Python HTTP server for WSGI applications. It allows you to run any Python application concurrently by running multiple Python processes within a single dyno. It provides a perfect balance of performance, flexibility, and configuration simplicity when deploying a web app to somewhere such as &lt;a href="https://www.heroku.com/"&gt;Heroku&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pip install gunicorn
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-2-create-a-raw-wsgipy-endraw-file" class="anchor"&gt;
  &lt;/a&gt;
  Step 2: Create a &lt;code&gt;wsgi.py&lt;/code&gt; file
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;app&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;A WSGI file is an entry to our Python application, create a file with the name &lt;code&gt;wsgi.py&lt;/code&gt; in the same folder as our &lt;code&gt;app.py&lt;/code&gt; and save the content above in it. Our file structure should look like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t5_d7I1A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jfdyk0prfwxn94hbjjx9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t5_d7I1A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jfdyk0prfwxn94hbjjx9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-generate-your-raw-requirementstxt-endraw-file" class="anchor"&gt;
  &lt;/a&gt;
  Step 3: Generate your &lt;code&gt;requirements.txt&lt;/code&gt; file
&lt;/h2&gt;

&lt;p&gt;The next step is to generate your &lt;code&gt;requirements.txt&lt;/code&gt; file with either &lt;code&gt;pip freeze&lt;/code&gt; or &lt;code&gt;pipreqs&lt;/code&gt;. Whatever method you use, make sure &lt;code&gt;gunicorn&lt;/code&gt; is in your requirements file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pip freeze &amp;gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;OR&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pip install pipreqs
$ pipreqs .
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Our file structure and &lt;code&gt;requirements.txt&lt;/code&gt; should look like the image below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BqBEZ8RX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/opa2iriat3kz168lzo43.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BqBEZ8RX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/opa2iriat3kz168lzo43.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-4-create-a-raw-procfile-endraw-" class="anchor"&gt;
  &lt;/a&gt;
  Step 4: Create a &lt;code&gt;Procfile&lt;/code&gt;
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;web: gunicorn wsgi:app
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;A &lt;code&gt;Procfile&lt;/code&gt; is used to specify commands that should be executed by a Heroku app when they are started. Create a file with the name &lt;code&gt;Procfile&lt;/code&gt; in the same folder as our &lt;code&gt;app.py&lt;/code&gt; and &lt;code&gt;wsgi.py&lt;/code&gt; then save the content above in it. Our file structure should look like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hBDSWdmy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/avunucnsl148grjdruyy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hBDSWdmy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/avunucnsl148grjdruyy.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-5-create-our-app-in-heroku" class="anchor"&gt;
  &lt;/a&gt;
  Step 5: Create our App in Heroku
&lt;/h2&gt;

&lt;p&gt;Navigate to the &lt;code&gt;Create new app&lt;/code&gt; tab in your Heroku dashboard and you will be presented with a screen similar to the one below. Choose a name for your app and the region it should be deployed to.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Iv-MX7ch--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6t6ejjtowy0adk98fjd3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Iv-MX7ch--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6t6ejjtowy0adk98fjd3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-6-deploy-our-app-to-heroku" class="anchor"&gt;
  &lt;/a&gt;
  Step 6: Deploy our App to Heroku
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ heroku login
$ git init
$ heroku git:remote -a fauna-shortener
$ git add .
$ git commit -m "deploying to heroku"
$ git push heroku master
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0tDnOVuB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/efjq6t4w3s74ndmc6ln6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0tDnOVuB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/efjq6t4w3s74ndmc6ln6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bfsQRPaA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ha47btz0vsl0tdww0gu2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bfsQRPaA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ha47btz0vsl0tdww0gu2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Congratulations, we have successfully deployed our application to Heroku and it can be accessed from anywhere in the world with the web address that will be given to you by Heroku after deployment. Since the name of the app created in this tutorial is &lt;code&gt;fauna-shortener&lt;/code&gt;, its URL would be &lt;a href="https://fauna-shortener.herokuapp.com/"&gt;https://fauna-shortener.herokuapp.com/&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#testing-our-url-shortener" class="anchor"&gt;
  &lt;/a&gt;
  Testing our URL Shortener
&lt;/h1&gt;

&lt;p&gt;Now we have deployed our web app to Heroku, we can shorten URLs using the &lt;code&gt;generate&lt;/code&gt; endpoint.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LXC8bkJ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/z9x7zkce2fodjcuerhk8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LXC8bkJ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/z9x7zkce2fodjcuerhk8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---M8A1tvS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4mpj93zcof4ukqi5bukh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---M8A1tvS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4mpj93zcof4ukqi5bukh.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;A URL shortener is a service that takes a long URL and converts it to a shorter one. When the shortened link is visited, the user is redirected to the original URL. In this article, we used Fauna's serverless database to build a simple URL shortener. We also saw how easy it was to integrate Fauna with Python, got the chance to explore its CRUD functionalities, and finally deploy our app to Heroku.&lt;/p&gt;

&lt;p&gt;The source code of the app is available on &lt;a href="https://github.com/LordGhostX/fauna-url-shortener"&gt;GitHub&lt;/a&gt;. If you have any questions, don't hesitate to contact me on Twitter:  &lt;a href="https://twitter.com/LordGhostX"&gt;@LordGhostX&lt;/a&gt; &lt;/p&gt;

</description>
      <category>faunadb</category>
      <category>serverless</category>
      <category>python</category>
      <category>webdev</category>
    </item>
    <item>
      <title>12+ Java Practice Projects to Improve Your Programming Career Prospects</title>
      <author>John Selawsky</author>
      <pubDate>Thu, 17 Dec 2020 18:58:23 +0000</pubDate>
      <link>https://dev.to/selawsky/12-java-practice-projects-to-improve-your-programming-career-prospects-446k</link>
      <guid>https://dev.to/selawsky/12-java-practice-projects-to-improve-your-programming-career-prospects-446k</guid>
      <description>&lt;p&gt;So, you’ve started to learn Java programming and wonder how to make the learning process faster and boost your career prospects. While reading books and watching tutorials on YouTube is a significant part of honing a new programming language, it may not be still that effective without being accompanied by the hands-on part. Java practices, tasks, and challenges are what can boost your coding skills and take you one step closer to your dream job.&lt;/p&gt;

&lt;p&gt;To save you the hassle of surfing the Internet looking for the appropriate programs, I’ve created a list of Java project ideas that will brush up your skills. So, without any further delay, let’s get to the project ideas.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12-project-ideas-to-edge-your-java-programming-skills" class="anchor"&gt;
  &lt;/a&gt;
  12+ Project Ideas to Edge Your Java Programming Skills
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#project-ideas-for-complete-beginners" class="anchor"&gt;
  &lt;/a&gt;
  Project Ideas for Complete Beginners
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-remake-of-the-classical-videogame" class="anchor"&gt;
  &lt;/a&gt;
  1. Remake of the Classical Videogame
&lt;/h3&gt;

&lt;p&gt;As soon as you polish at least basic knowledge of Java, it’s high time to start creating your own Java practice projects, say, reproducing a classical video game in your own way. Developing a game is not an easy task, but the &lt;a href="http://codegym.cc/"&gt;CodeGym&lt;/a&gt; Games section with its step-by-step mini-courses will make it easier for you. The access to the section is free and divided into levels, so you can choose to write the one matching your current skills.&lt;/p&gt;

&lt;p&gt;The games are not small tasks — they are fully-fledged projects split into twenty subtasks. To finish up the game, you need to complete each subtask one by one. The online platform allows you to create your own version of Mine Picker, Hungry Snake, 2048, Racer, and other games. Once it is ready, you can share a link to a published game with your fellow coders so that they can consider it and get back to you with feedback.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Video instruction:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/jnzGMZ8BHOk"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oY79T8F5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/jnzGMZ8BHOk/0.jpg" alt="Codegym Games"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-tictactoe-game" class="anchor"&gt;
  &lt;/a&gt;
  2. Tic-Tac-Toe Game
&lt;/h3&gt;

&lt;p&gt;I haven’t seen an easier game than this one. Tic-tac-toe game is not only easy to play, but it is also fairly easy to code up. Creating your own version of Tic-tac-toe assumes that you have a clear understanding of basic Java syntax and have access to a working Java editor. One of the easiest approaches for a programmer to build a project is to take Java Class, bind it to the GUI interface, or integrate right into the console app. The class code consists of three sections, including board functions, win conditions, and player functions.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Video instruction:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/gQb3dE-y1S4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1zsAJoUP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/gQb3dE-y1S4/0.jpg" alt="Tic-Tac-Toe Game"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-atm-system" class="anchor"&gt;
  &lt;/a&gt;
  3. ATM System
&lt;/h3&gt;

&lt;p&gt;ATM interface refers to a Java console system and allows creating the app to monitor transactions. While working on the project, you will pass five classes and get familiar with the account holder, account, bank translation, bank itself, and ATM.&lt;/p&gt;

&lt;p&gt;Right after entering an identifier and pin, users can access records of every transaction, make deposits, withdrawals, and transfers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Video instruction:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/k0BofouWX-o"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xj6EVLuf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/k0BofouWX-o/0.jpg" alt="ATM System"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-currency-converter" class="anchor"&gt;
  &lt;/a&gt;
  4. Currency Converter
&lt;/h3&gt;

&lt;p&gt;This is another Java practice project best suited for novice specialists. It is used to convert currencies: the users enter a certain amount of money in one currency and set the currency they want to check the monetary value of.&lt;/p&gt;

&lt;p&gt;The project has a web-based interface that ensures a simple visual experience for programmers when it comes to creating Java applications. While developing the app, the beginners can master classes, variables, algorithms, loops, if statements, and other Java concepts.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Video instruction:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/_GGA3Pf06ME"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JT4vFjpQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/_GGA3Pf06ME/0.jpg" alt="Currency Converter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#midlevel-project-ideas" class="anchor"&gt;
  &lt;/a&gt;
  Mid-Level Project Ideas
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#5-grading-system-in-java" class="anchor"&gt;
  &lt;/a&gt;
  5. Grading System in Java
&lt;/h3&gt;

&lt;p&gt;I also recommend expanding your list of Java practice projects with a grade processing system developed to help you edge your fundamental Java skills. Upon receiving the scores of quizzes, exams, tests, tasks for different subjects, the system outputs the results in the form of grades. An important point here is that the users can add as many subjects as they see fit.&lt;/p&gt;

&lt;p&gt;All the necessary information about students, be it an assigned roll number or their names have its own fields in the interface, while students’ grades will be displayed along with the relative rank in their classes.&lt;/p&gt;

&lt;p&gt;When creating the project, you will build it with Netbeans (or use the other IDE) using JTextField, JTextArea, JButtons, JPanels, JLabels, JOPtionPane, and other visual components.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Video instruction:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/e1Ktv9AlwjU"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0yyv5D3Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/e1Ktv9AlwjU/0.jpg" alt="Grading System"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-intelligent-hospital-system-in-java" class="anchor"&gt;
  &lt;/a&gt;
  6. Intelligent Hospital System in Java
&lt;/h3&gt;

&lt;p&gt;In terms of a pandemic situation, the hospital system has never been that relevant. Among other things, it can help health care professionals to approximate disease based on the symptoms added to the system.&lt;br&gt;
Right after registration, the doctor, the major unit of the system, enters health records of the patient, including personal information, blood type and pressure, body weight, test results, and other details. Given the received data, the intelligent hospital system builds up a preliminary report on the patient’s health status.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Video instruction:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/1v9z2EAJAhQ"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tkPGv5k5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/1v9z2EAJAhQ/0.jpg" alt="Intelligent Hospital System"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-word-counter-in-java" class="anchor"&gt;
  &lt;/a&gt;
  7. Word Counter in Java
&lt;/h3&gt;

&lt;p&gt;When it comes to honing the knowledge of Java String and File Handling concepts, the Word Count tools project is good to go. It allows newcomers with previous experience in building projects to create a content writing interface with a built-in word count function. While the latter is quite ordinary, the programmers can come out of the box making the project more unconventional — all they need is just to implement new features by adding counting characters and words without whitespaces.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Video instruction:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/ZHMyU1Neepc?list=PLcMTgyAlV4ZkRlASxU1BP5uEdgbfbj8ih"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qqO2jAUH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/ZHMyU1Neepc/0.jpg" alt="Word Counter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-pharmacy-information-system" class="anchor"&gt;
  &lt;/a&gt;
  8. Pharmacy Information System
&lt;/h3&gt;

&lt;p&gt;Another project you can build is a pharmacy management system with a plain GUI. This medical store system allows its users to keep track of the drug store, add or remove items from there. The project is simple and consists of three modules, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CVS or Consumer Value Stores (American retail company) to monitor medical products and changes applied to the store;&lt;/li&gt;
&lt;li&gt;Pharma to add as many new stores as you see fit;&lt;/li&gt;
&lt;li&gt;Store Admin to add and change the number of drugs, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Video instruction:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/_bIIBCWbB2U"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nkUXZfN5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/_bIIBCWbB2U/0.jpg" alt="Pharmacy Information System"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advancedlevel-project-ideas" class="anchor"&gt;
  &lt;/a&gt;
  Advanced-Level Project Ideas
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#9-email-application" class="anchor"&gt;
  &lt;/a&gt;
  9. Email Application
&lt;/h3&gt;

&lt;p&gt;As soon as you get familiar with the Java development environment and master at least OOPs, it’s high time to move further and create projects for advanced learners. The email application is one of them. Other than giving you a clear understanding of the Math.random method, the project also lets you sharpen encapsulation, one of the fundamental concepts in object-oriented programming.&lt;/p&gt;

&lt;p&gt;When you finish your application, it should do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Generate an email with &lt;a href="mailto:firstname.lastname@department.company"&gt;firstname.lastname@department.company&lt;/a&gt; syntax.&lt;/li&gt;
&lt;li&gt;Determine the department.&lt;/li&gt;
&lt;li&gt;Generate a random String for a password.&lt;/li&gt;
&lt;li&gt;Have methods to change the password, set the mailbox capacity, and define an alternative email address.&lt;/li&gt;
&lt;li&gt;Have methods to showcase the name, email, and mailbox capacity.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To figure out how to do that, watch the video tutorial below.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Video instruction:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/U3Ibvu0htNs"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JplkK0_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/U3Ibvu0htNs/0.jpg" alt="Email Application"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-super-mario-bros-clone" class="anchor"&gt;
  &lt;/a&gt;
  10. Super Mario Bros Clone
&lt;/h3&gt;

&lt;p&gt;Have you played Super Mario in your childhood and now miss that game a lot? Keep your head up — I have good news for you. Android has recently launched a clone version of Super Mario Run based on Java and LibGDX framework.&lt;/p&gt;

&lt;p&gt;LibGDX is an open-source project that programmers find perfect for learning to write coding games. This mini Java practice project will let you learn more about Game Loops, Sprites, Sprite Sheets, Texture Maps, Collision Detection, and other concepts. You’ll end up with a game that works perfectly on different platforms, including Android, iOS, and others.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Video instruction:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/a8MPxzkwBwo?list=PLZm85UZQLd2SXQzsF-a0-pPF6IWDDdrXt"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fi4r6kxI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/a8MPxzkwBwo/0.jpg" alt="Super Mario Bros Clone"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-sports-management-software" class="anchor"&gt;
  &lt;/a&gt;
  11. Sports Management Software
&lt;/h3&gt;

&lt;p&gt;Creating a Sports Manager (SM) system will keep you excited, especially if you are fond of sports management. This Java project allows developing an interface used to handle sporting activities and schedule sports-related events for different educational institutions and organizations.&lt;/p&gt;

&lt;p&gt;SM is a hassle-free option for those responsible for managing sports events, as well as controlling information related to players and trophies. SM admin has the right to edit all the necessary data, while users are allowed to consider players’ information and subscribe to preferred events. The active subscription allows users to get notified about the coming events by email.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Video instruction:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/ia7EtJ6zU0Q"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_pyK_GuG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/ia7EtJ6zU0Q/0.jpg" alt="Sports Management Software"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-flight-booking-software" class="anchor"&gt;
  &lt;/a&gt;
  12. Flight Booking Software
&lt;/h3&gt;

&lt;p&gt;Let’s face it: web-based online booking solutions are not something that can surprise people. But, you still have a chance to improve the system if you have ideas on how to do that effectively. An airline reservation system Java project will help you with that. Other than making it simple for users to view available seats and get flight records, the app allows proceeding with online payments. Although the project has no option to process the payment and cancel the booking, you still can add those options on your own.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Video instruction:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/UbIIFLsEeiM"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eceId6lF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/UbIIFLsEeiM/0.jpg" alt="Flight Booking Software"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13-library-management-system" class="anchor"&gt;
  &lt;/a&gt;
  13. Library Management System
&lt;/h3&gt;

&lt;p&gt;Now, you’ve got to designing MySQL databases. Other than sharpening the knowledge and skill of databases, you will also be able to create a system to make librarians’ work more efficient. The management system will automate manual processes and get all manually-configured data, including book inventory, titles, and genres, stored in one digital database.&lt;/p&gt;

&lt;p&gt;When working on the software, you can add as many modules as possible to control library operations and let both librarians and students navigate the database with no hassle. To get to the needed book, they only need to enter the author’s name and title.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Video instruction:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/G11sFijYjQM?list=PL5BFcXE899zzCSw0G--BYidzhydyaQBYA"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pku9VaH4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/G11sFijYjQM/0.jpg" alt="Flight Booking Software"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summing-things-up" class="anchor"&gt;
  &lt;/a&gt;
  Summing Things Up
&lt;/h2&gt;

&lt;p&gt;As you might have noticed, all the projects are sorted by difficulty level. Sure, you can stop at one of them. But, I sincerely recommend not staying in the same place. Only upgrading your skills by creating projects of increasing complexity will help you boost your programming career and land the job of your dream.&lt;/p&gt;

&lt;p&gt;Let me know if you’ve found these Java practice projects useful. And if you have other ideas at hand, feel free to share them.&lt;/p&gt;

&lt;p&gt;First published on &lt;a href="https://levelup.gitconnected.com/12-java-practice-projects-to-improve-your-programming-career-prospects-7b6f57f2f49d"&gt;Levelup gitConnected&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>java</category>
      <category>coding</category>
      <category>programming</category>
    </item>
    <item>
      <title>Programmatically Remind Your Teammates on Slack to Review GitHub PRs</title>
      <author>Alan Lee</author>
      <pubDate>Thu, 17 Dec 2020 17:50:56 +0000</pubDate>
      <link>https://dev.to/alanblee/programmatically-remind-your-teammates-on-slack-to-review-github-prs-b6n</link>
      <guid>https://dev.to/alanblee/programmatically-remind-your-teammates-on-slack-to-review-github-prs-b6n</guid>
      <description>&lt;p&gt;The Github integration for Slack is great for team productivity. Having the ability to give Slack channels full visibility into Github projects, for real-time notifications, is an amazing way to keep the development team on the same page. However, this can become a double-edged sword. Developers may decide to ignore these messages being sent because it may be information overload. &lt;/p&gt;

&lt;p&gt;I’ve been in a similar situation where pull requests needed approval from reviewers but they wouldn’t check the channels or their emails. The only thing that got their attention were direct messages. This hindered delivery and having to ping the reviewer myself was becoming a pain.&lt;/p&gt;

&lt;p&gt;As great as the Github app for Slack is, I wanted something more custom that would suit my needs. For example, whenever a pull request is made with reviewers, only send direct messages to those who have been requested.&lt;/p&gt;

&lt;p&gt;In this article, we will use Github, Slack, and &lt;a href="https://dev.reshuffle.com/"&gt;Reshuffle&lt;/a&gt; to create the workflow to directly message the reviewers on a pull request.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-build-it" class="anchor"&gt;
  &lt;/a&gt;
  How to Build It
&lt;/h2&gt;

&lt;p&gt;Before getting started with the code, we’ll need to get credentials set up with Github and Slack.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Log in and generate a token &lt;a href="https://github.com/settings/tokens"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Save the token somewhere, as you''ll need it soon&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Slack&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a new Slack App &lt;a href="https://api.slack.com/apps"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Enter the App name and select the workspace&lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;Create App&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Click on your new App&lt;/li&gt;
&lt;li&gt;The signing secret is under &lt;code&gt;Basic Information&lt;/code&gt; &amp;gt; &lt;code&gt;App Credentials&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;The token is under &lt;code&gt;Settings&lt;/code&gt; &amp;gt; &lt;code&gt;Install App&lt;/code&gt; &amp;gt; &lt;code&gt;OAuth Access Token&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Save the token and signing secret somewhere, as you''ll need it soon&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See links for full documentation: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/reshufflehq/reshuffle"&gt;Reshuffle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/reshufflehq/reshuffle-slack-connector"&gt;Slack Connector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/reshufflehq/reshuffle-github-connector"&gt;Github Connector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/reshufflehq/reshuffle/blob/master/doc/CronConnector.md"&gt;Cron Connector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the credentials saved somewhere safe, we can begin by instantiating a Reshuffle app and configuring the connectors.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: The Github Connector requires a runTimeBaseUrl. A tool like &lt;a href="https://ngrok.com/"&gt;ngrok&lt;/a&gt; can be used to generate a url that exposes your localhost over SSL.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Reshuffle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;CronConnector&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;reshuffle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;GitHubConnector&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;reshuffle-github-connector&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;SlackConnector&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;reshuffle-slack-connector&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Reshuffle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// Cron config&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cronConnector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CronConnector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Github Config&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;githubConnector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;GitHubConnector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;runtimeBaseUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RUNTIME_BASE_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;slackConnector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SlackConnector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SLACK_TOKEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;signingSecret&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SLACK_SIGN_SECRET&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

 &lt;span class="c1"&gt;// Code listed further down&lt;/span&gt;
 &lt;span class="c1"&gt;// will be inserted here&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Reshuffle Connectors provide events and actions that allow developers to easily build custom workflows and integrations. We’re now able to take advantage of what they can do.&lt;/p&gt;

&lt;p&gt;We’ll continue by getting a list of the user’s Github handles and their Slack IDs. In order to get this data, we use a method on Slack Connector that exposes &lt;a href="https://slack.dev/bolt-js/concepts#web-api"&gt;Slack's web client&lt;/a&gt; actions.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: In this example, display_name is being assumed to be the same as the Github handle. You can definitely add your own profile fields that suit your team.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;slackUsers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;webClient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;slackConnector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getWebClient&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;members&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;webClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
 &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;usersHash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
 &lt;span class="nx"&gt;members&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;member&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;usersHash&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;member&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;member&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="p"&gt;});&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;usersHash&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Next, we’ll write a helper function to handle the event when a pull request is created, this will take in a list of reviewers from Github, the user list from Slack, and the link url to the pull request. If there are no reviewers, we’ll simply post to the general channel, otherwise, we match the reviewers to the slack members list and send them a direct message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;messageHelper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="nx"&gt;ghReviewers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nx"&gt;slackList&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nx"&gt;prLink&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nx"&gt;pending&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ghReviewers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;slackConnector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
     &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;general&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;pending&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Pending pull request&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;New pull request&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; - &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;prLink&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
   &lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;ghReviewers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slackList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasOwnProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;slackConnector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
         &lt;span class="nx"&gt;slackList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
         &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;
           &lt;span class="nx"&gt;pending&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;* Pending review *&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;* New review requested *&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;prLink&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
       &lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;To tie everything together, we configure the Github Connector to trigger an event anytime a pull request is created.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: See the full list of available events &lt;a href="https://github.com/reshufflehq/reshuffle-github-connector#connector-events"&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We can get the list of requested reviewers from the event object, passing onto our helper, which is only called if the event action matches “opened” or “reopened”.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;githubConnector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="na"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GITHUB_OWNER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GITHUB_REPO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;githubEvent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pull_request&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;requested_reviewers&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
     &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;html_url&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;opened&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;reopened&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reviewers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;requested_reviewers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;reviewer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;reviewer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;messageHelper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reviewers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;slackUsers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;html_url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Note: For more information on the parameters of postMessage check the &lt;a href="https://github.com/reshufflehq/reshuffle-slack-connector#postMessage"&gt;docs&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;With that, we’re finished, any time a pull requests is created with reviewers, they are directly messaged.&lt;/p&gt;

&lt;p&gt;As a bonus, if the reviewers forget about the pull request, we can use the Cron Connector as a scheduler to check for any open PRs on the repository and message the reviewers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;cronConnector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0 12 * * 3 *&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;githubConnector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;pulls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
   &lt;span class="na"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GITHUB_OWNER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GITHUB_REPO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="p"&gt;});&lt;/span&gt;
 &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;html_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;requested_reviewers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;reviewers&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;messageHelper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reviewers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;slackUsers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;html_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This example provides a good starting point to how you can easily create a custom workflow for your team's needs using Reshuffle.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#now-make-it-happen" class="anchor"&gt;
  &lt;/a&gt;
  Now, Make it Happen
&lt;/h2&gt;

&lt;p&gt;As your developers and project management teams experience the ease of working with integrated applications, we encourage you to consider where else integrating workflows would benefit your teams. With so many different tools, the more you can consolidate them into one common interface, the easier people can get work done. &lt;/p&gt;

&lt;p&gt;Reshuffle is continually listening to what our customers need and desire. Don’t see a Connector to a service you’d like to integrate? Send a tweet to &lt;a href="https://twitter.com/reshufflehq"&gt;@ReshuffleHQ&lt;/a&gt; to let us know which Connector you’d like us to develop next. &lt;/p&gt;

</description>
      <category>opensource</category>
      <category>github</category>
      <category>slack</category>
      <category>reshuffle</category>
    </item>
    <item>
      <title>Women in Tech: The Great Big List of Communities by Country</title>
      <author>Andrew Stetsenko</author>
      <pubDate>Thu, 17 Dec 2020 17:29:43 +0000</pubDate>
      <link>https://dev.to/stetsenko_me/women-in-tech-the-great-big-list-of-communities-by-country-596j</link>
      <guid>https://dev.to/stetsenko_me/women-in-tech-the-great-big-list-of-communities-by-country-596j</guid>
      <description>&lt;p&gt;Although many workplaces have become much more diverse over the past few decades, the vast majority of &lt;a href="https://relocate.me/search"&gt;software engineering, cybersecurity, and other tech jobs&lt;/a&gt; are filled by men. However, a diverse workforce (especially in the IT industry) means a richer company culture, happier and more productive employees, and the ability to innovate products that appeal to all sectors of society.&lt;/p&gt;

&lt;p&gt;While women are still very much under-represented in the tech industry, there has been a small but steady increase in the number of female technologists over the past years, according to AnitaB.org’s &lt;a href="https://anitab.org/research-and-impact/top-companies/2020-results"&gt;latest report&lt;/a&gt;, which is promising.&lt;/p&gt;

&lt;p&gt;By the way, did you know that &lt;a href="https://www.europeanwomenintech.com/blog/women-in-tech-by-country"&gt;Bulgaria has the highest proportion of female ICT specialists&lt;/a&gt; in the EU?  &lt;/p&gt;

&lt;p&gt;A lot of progress has already been made in terms of diversity but unfortunately we still have a long way to go. With the help of ground-breaking, global organizations and initiatives that support the promotion of women in the workplace, females are being encouraged more than ever before to consider careers in STEM, and tech employers are being encouraged to employ women.&lt;/p&gt;

&lt;p&gt;Here are just some of these organizations and initiatives:&lt;/p&gt;

&lt;h2&gt;Global 🌍&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.womentech.net"&gt;WomenTech Network&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;WomenTech Network believes that women are just as (if not more so) competent as their male counterparts in the tech industry. They regularly arrange networking events and provide mentorship programs and opportunities for professional growth for female tech professionals throughout the world.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.womenwhocode.com"&gt;Women Who Code (WWCode)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Women Who Code was started back in 2011 and initially served the organization’s local community. Today, WWCode has a whopping 230,000 members—software engineers, data scientists, solutions architects, and more—in 122 countries and shows no signs of slowing down. Joining Women Who Code will give you access to coding resources, a global community, and the WWCode job board.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.hiretechladies.com"&gt;Tech Ladies&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tech Ladies is a leading platform that provides women with information on up and coming positions in the tech industry and provides useful information on a wide range of tech companies.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://girlswhocode.com"&gt;Girls Who Code&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Girls Who Code understands that careers in the tech industry still seems unattainable or unattractive to many young women. Their goal is to change this perception and to change the image of a programmer.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.womeninai.co"&gt;Women in AI&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Women in AI provides support and mentorship to females in the field of AI. This popular organization is the first of its kind to support women in AI and boasts over 5,000 members in more than 100 countries. They have played a large role in promoting more diversity in their field.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.womenindata.org"&gt;Women in Data (WiD)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With more than 30 global chapters and over 12,000 community members, WiD is a non-profit international organization that exists to increase gender diversity in the field of data science and analytics.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://ascend.women-in-technology.com"&gt;Ascend&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are a female tech professional, joining Ascend is free of charge and will provide you with excellent support and information on how to excel in your field.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://women-in-tech.org"&gt;Women in Tech&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With members in more than 100 countries, Women in Tech is dedicated to closing the gender gap in the tech field. Their global reach means that they are able to support the education and training of women who wish to pursue tech careers.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.adaslist.co"&gt;Ada’s List&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ada’s List was initially founded to provide a supportive and useful community for women in the tech field. Although they never dreamed that they would become as large as they are today (with over 7,500 members), they simply wanted to help women find great jobs, suppliers and vendors, in addition to providing great quality advice.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://powertofly.com"&gt;PowerToFly&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Whether you are a young, female tech professional or an experienced tech leader, PowerToFly has something for all women in the tech industry. They have many useful resources, information on new jobs and a community of like-minded professionals.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://elpha.com"&gt;Elpha&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Elpha is a community of women professionals in the tech industry. On this platform, women can ask important questions, join their mentorship program, and encourage one another in a supportive environment.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="http://railsgirls.com"&gt;Rails Girls&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Born in Helsinki, Rails Girls is nowadays a global movement designed to encourage more women and girls to get involved in coding. Since 2010, they have arranged hundreds of free Ruby on Rails workshops around the world.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="http://www.pyladies.com"&gt;PyLadies&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With over 100 &lt;a href="https://pyladies.com/locations"&gt;local Meetup groups&lt;/a&gt;, PyLadies is a global community for aspiring and experienced female developers who are passionate about the Python programming language.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://gocarrots.org"&gt;Geek Girls Carrots&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Geek Girls Carrots is one of the biggest communities of women in tech. Established in Poland in 2011, this organization now operates all around the world. Through meetups, tech workshops, and other events, it is striving to bring more women into the tech workforce.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://girlsintech.org"&gt;Girls in Tech&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Like other initiatives and organizations mentioned in this list, Girls in Tech is working to eliminate the gender gap in tech. Since 2007, it has grown into a global community with more than 50 chapters and over 100,000 members around the globe. Programming and events vary by chapter based on local interests and needs. Membership is free.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://leanin.org"&gt;LeanIn.org&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Founded by Rachel Thomas and Facebook’s COO Sheryl Sandberg in 2013, LeanIn.org is a movement dedicated to helping women achieve their ambitions. One of its key initiatives—Lean In Circles—provides an opportunity for tens of thousands of women around the world to meet with peers, get/give peer mentorship, and sharpen their skills. Lean In’s partner network now boasts over 1,400 companies and organizations, including LinkedIn and Salesforce, who are publicly committed to gender equality.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://anitab.org"&gt;AnitaB.org&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With a few dozens of local communities in different countries, AnitaB.org is rightly considered one of the leading organizations for women in technology. All its events and programs are aimed at promoting diversity and helping women to achieve success in tech.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.ladiesthatux.com"&gt;Ladies that UX&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ladies that UX is a welcoming and collaborative community of women who work in UX. They meet monthly to talk about UX and exchange knowledge. The community has a growing number of local groups based in different cities worldwide, including &lt;a href="https://www.meetup.com/Ladies-that-UX-Amsterdam"&gt;Amsterdam&lt;/a&gt;, &lt;a href="https://www.meetup.com/de-DE/LTUX-Berlin"&gt;Berlin&lt;/a&gt;, &lt;a href="https://twitter.com/ladiesthatux_ln"&gt;London&lt;/a&gt;, &lt;a href="https://www.meetup.com/Ladies-That-UX-Boston"&gt;Boston&lt;/a&gt;, &lt;a href="https://www.meetup.com/Ladies-that-UX-Seattle"&gt;Seattle&lt;/a&gt;, and &lt;a href="https://www.meetup.com/Ladies-That-UX-Melbourne"&gt;Melbourne&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://womenwhotech.com"&gt;Women Who Tech&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Women Who Tech works to get more women-led startups funded. Through the Women Startup Challenge, an 8-week virtual program, they provide funding, mentoring, and other resources for women entrepreneurs building innovative tech products to solve real-world issues.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.latinasintech.org"&gt;Latinas in Tech&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Latinas in Tech was started in Silicon Valley in 2014 and has since grown into a 12,000-strong community with chapters in 15+ locations, including Austin, Chicago, Houston, London, Los Angeles, Mexico, New York City, and Seattle. Their mission is to connect, support, and empower Latina women working in tech and to create safe spaces for learning, mentorship, and recruitment. The members of Latinas in Tech meet regularly to advance their careers and host professional development workshops every week.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://codeop.tech"&gt;CodeOp&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Founded and led by females, CodeOp is a women-focused tech school offering Full Stack Development, Data Analytics, and Product Management courses. The school operates globally through its remote programs and has campuses for in-person learning in Barcelona (HQ) and Kuala Lumpur. CodeOp is not just a bootcamp; it’s a community of 18-45 year old women, trans, and gender non-conforming people from over 50 countries worldwide.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.lmfnetwork.com"&gt;Like Minded Females (LMF) Network CIC&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;LMF Network CiC is a community founded by Sonya Barlow to reduce inequalities in tech, entrepreneurship, and digital by providing a foundation to succeed to women and underrepresented minorities. Since 2018, they have delivered more than 200 workshops globally, trained over 20,000 people, and partnered with some of the world’s top companies like Google and Vodafone. The network currently has chapters in the UK and Canada.&lt;/p&gt;

&lt;h2&gt;Australia 🇦🇺&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://musescodejs.org"&gt;MusesCodeJS&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Running workshops on Node.js and JavaScript, MusesCodeJS believes that women are just as competent as men when it comes to IT careers.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.codelikeagirl.com"&gt;Code Like a Girl&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Code Like a Girl is a Melbourne-based initiative that supports women to enter, and succeed, in the world of coding. Besides regular events for women in tech, this social enterprise is offering coding camps for girls and online short courses for adults. What’s more, they are connecting Australia’s leading companies with talented women looking to get their foot in the door.&lt;/p&gt;

&lt;h2&gt;Finland 🇫🇮&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://mimmitkoodaa.ohjelmistoebusiness.fi/in-english"&gt;Mimmit koodaa&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The purpose of Mimmit koodaa, the program powered by the Finnish Software and E-business Association and its member companies, is to shatter stereotypes about women in coding and bridge the gender gap in the Finnish software industry. The program currently boasts over 6,000 adult women participating.&lt;/p&gt;

&lt;h2&gt;France 🇫🇷&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.50intech.com"&gt;50inTech&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;50inTech is a platform connecting women in tech with fellow peers, companies, and investors to achieve greater diversity and inclusion in the industry. (Joining the platform is free.) In addition to regular events, the team also launched a podcast dedicated to building a successful career in tech and growing a business.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.meetup.com/Women-in-FinTech-France"&gt;Women in FinTech France&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Regular meetups for women in fintech in Paris. The community currently consists of 300 members.&lt;/p&gt;

&lt;h2&gt;Netherlands 🇳🇱&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://womennetworknl.wixsite.com/womenhiringcircle"&gt;Women Hiring Circle&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Women Hiring Circle aims to support women who are seeking a job opportunity or the next step in their career. It’s a community-driven initiative that opens a dialogue between female professionals to successfully reach their potential in the local job market.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://rightbrains.nl"&gt;RightBrains&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Since its founding in 2014, RightBrains has been laser-focused on increasing the number of women working in digital-focused roles. Its platform offers an opportunity for women to learn, network, and get inspired for a career in digital technology.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://techionista.com"&gt;Techionista&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Techionista is a Dutch platform that encourages women to consider a career in tech and provides support for such women.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.meetup.com/SheSharp"&gt;SheSharp&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;SheSharp is a nonprofit aimed at fostering diversity and inclusion in tech and entrepreneurship. They regularly host events—public talks, (coding) workshops, panel events, or interviews—covering topics like data science, machine learning, IoT, front end development, DevOps, QA, and much more.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="http://codetochange.org"&gt;The Code to Change&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This initiative exists to help women develop the necessary skills to flourish in the tech sector. In addition to a 5-month mentorship program, they regularly host &lt;a href="https://www.meetup.com/nl-NL/Amsterdam-Women-in-Technology"&gt;meetups&lt;/a&gt;, workshops, and other events in Amsterdam.&lt;/p&gt;

&lt;h2&gt;United States 🇺🇸&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.wicys.org"&gt;Women in CyberSecurity (WiCyS)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As the name suggests, WiCyS is a fast-growing group of female cybersecurity professionals. The organization’s long-term goal is to ensure that there is much more gender equality and diversity in the field and they do this by encouraging the recruitment and promotion of women in cybersecurity. WiCyS offers mentoring, training programs, scholarships, virtual and in-person conferences, leadership series, career fairs, webinars, and more to women at all stages of their cybersecurity career journey!&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.hiretechladies.com"&gt;Tech Ladies&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Started as a small coffee meetup in NYC in 2015, Tech Ladies is nowadays a worldwide community with 100,000 members. Through a supportive online group, a free job board, and opportunities to learn, it helps women and non-binary people in tech grow their careers.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://rewritingthecode.org"&gt;Rewriting the Code&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Through mentorship, community engagement, and educational resources, Rewriting the Code supports and empowers college and early career women with a passion for technology to thrive in the industry. The community currently boasts over 9,500 members.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.writespeakcode.com"&gt;Write/Speak/Code&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Write/Speak/Code is on a mission to promote the visibility and leadership of women and non-binary technologists through peer-led professional development. The organization runs &lt;a href="https://www.meetup.com/pro/writespeakcode"&gt;conferences, workshops, and events&lt;/a&gt; across the country and currently has communities in at least six major US cities such as SF, NYC, Austin, Seattle, LA, and Chicago.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="http://lwc.tech"&gt;League of Women Coders&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;League of Women Coders brings the brightest female minds together to discuss tech, hack on projects, and share ideas. Every month, they run meetups in &lt;a href="https://www.meetup.com/League-of-Women-Coders"&gt;NYC&lt;/a&gt; and &lt;a href="https://www.meetup.com/League-of-Women-Coders-Washington-DC"&gt;Washington, DC&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;em&gt;This is a non-exhaustive list of global and local communities of women in tech. To view the full list, follow &lt;a href="https://relocate.me/blog/online-communities/women-in-tech-the-great-big-list-of-communities-by-country"&gt;this link&lt;/a&gt; to the original article.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>womenintech</category>
      <category>shecoded</category>
      <category>diversity</category>
      <category>communities</category>
    </item>
    <item>
      <title>Strict Schema Enforcement vs. Schemaless vs. Dynamic Schema</title>
      <author>DavidCockerill</author>
      <pubDate>Thu, 17 Dec 2020 16:01:10 +0000</pubDate>
      <link>https://dev.to/harperdb/strict-schema-enforcement-vs-schemaless-vs-dynamic-schema-333a</link>
      <guid>https://dev.to/harperdb/strict-schema-enforcement-vs-schemaless-vs-dynamic-schema-333a</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D-7jhP5x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wkkpsq2h0a30q1euv18o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D-7jhP5x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wkkpsq2h0a30q1euv18o.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The debate over whether to use a schema or not has passionate support on both sides. One side appreciates data integrity constraints and predictability, while the other prefers more flexibility (or “agility”) and time effectiveness. The ultimate answer as to which is “better” most likely depends on the specific project, data used, and associated skill set. &lt;/p&gt;

&lt;p&gt;In this post I will cover strict schema enforcement, schemaless, and dynamic schema, including the pros and cons of each one.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#strict-schema" class="anchor"&gt;
  &lt;/a&gt;
  Strict Schema
&lt;/h3&gt;

&lt;p&gt;A schema is a blueprint of how a database is constructed. It doesn’t actually hold the data, but instead describes the shape of the data and how it might relate to other tables in the database. Schema’s contain information on all the objects in a database such as tables, attributes, data types and relationships, it can also include triggers, views, indexes and so on. Some common databases that use strict schemas are Oracle, MS SQL Server and PostgreSQL.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Gives a high level view of the structure and relationship of the tables in your database. Can make it easier to keep track of what information is and is not in the database. &lt;/li&gt;
&lt;li&gt;Enforces data integrity constraints, these are a set of rules that maintain consistent formatting of all entries. &lt;/li&gt;
&lt;li&gt;More predictable, which can provide a more efficient storage and indexing structure.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Takes time to design and build when starting a new project. Modifying the schema can be tricky. Can be a lot of work to maintain.&lt;/li&gt;
&lt;li&gt;Rigid limits, not flexible.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mAccC5Me--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B7D931BFFFCC24E919AF5549F64B80AA607D7B2E243C76B3413D85BD1FDC4DD9_1607468910480_g0od-relations-with-tables-this-database-has-imgflip-conm-when-you-44714504.png" alt=""&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#schemaless" class="anchor"&gt;
  &lt;/a&gt;
  Schemaless
&lt;/h3&gt;

&lt;p&gt;As the name implies, schemaless does not use a schema. It means the database does not have any fixed structure. A schemaless database does not enforce any data type limitations and can store structured and unstructured data. Some common schemaless databases are MongoDB, CouchDB, and Google Cloud Datastore.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Quick and easy to setup because there is no schema to model or additional layers required, so the complexity is greatly reduced. With just a few clicks a developer can have a working database.&lt;/li&gt;
&lt;li&gt;Updates can be made on the fly without having to make changes to a schema or shutting the database down.&lt;/li&gt;
&lt;li&gt;More flexibility when storing data. You don’t need to decide up front what you’re going to store, how it’s structured or related to other information in the database.&lt;/li&gt;
&lt;li&gt;Less overhead, which can lead to better performance and scalability.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No columns means the application has to parse every document to find requested data.&lt;/li&gt;
&lt;li&gt;No unified metadata, you end up looking at the application to understand the data rather than having that information.&lt;/li&gt;
&lt;li&gt;No control over the data, you may be receiving garbage, but you don’t have any filters so bad data gets loaded either way. Data filters are pushed out to the application layer.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jrei5uyB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B7D931BFFFCC24E919AF5549F64B80AA607D7B2E243C76B3413D85BD1FDC4DD9_1607469313288_tumblr_o16n2kBlpX1ta3qyvo1_1280.jpg" alt=""&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#dynamic-schema" class="anchor"&gt;
  &lt;/a&gt;
  Dynamic Schema
&lt;/h3&gt;

&lt;p&gt;What many claim as the best of both worlds, a dynamic schema is one that changes as you add data. There is no need to define the schema beforehand. When data is inserted, updated, or removed, the database builds a schema dynamically. Popular dynamic schema databases include HarperDB and MongoDB.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy to set up, requires no input from the user.&lt;/li&gt;
&lt;li&gt;Provides the structure that comes with a schema, which equals a more efficient storage and indexing model. &lt;/li&gt;
&lt;li&gt;Doesn’t force data constraints, can ingest unstructured data.&lt;/li&gt;
&lt;li&gt;Flexible to develop with as the data model can easily evolve over time.&lt;/li&gt;
&lt;li&gt;Can handle semistructured data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No data enforcement means developers must ensure data adheres to the data model.&lt;/li&gt;
&lt;li&gt;Data model can get messy if proper processes are not followed
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mba57ynz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B7D931BFFFCC24E919AF5549F64B80AA607D7B2E243C76B3413D85BD1FDC4DD9_1607469797463_blog1.png" alt=""&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see, there are valid points on each side of the argument and numerous factors to considering when choosing which is right for your specific project. At the end of the day, this decision has a lot to do with the preference of the user and long term project goals. For example, at HarperDB, we are big fans of the &lt;a href="https://harperdb.io/blog/dynamic-schema-the-harperdb-way/"&gt;dynamic schema&lt;/a&gt;, which enables us to ingest any type of data at scale. HarperDB frees you from the hassle of defining data types, providing unlimited flexibility as your applications evolve and scale over time. Which type of schema do you prefer?&lt;/p&gt;

&lt;p&gt;While it may not be top of mind, it’s important to get your schema right upfront to avoid unnecessary headaches and additional time and costs later on. Foundation is key, and it’s much more difficult to go back and change that foundation once you’ve actually built on top of it. Take the time to weigh the pros and cons of strict schema enforcement vs. schemaless vs. dynamic schema before you start building, you won’t regret it.  &lt;/p&gt;

</description>
      <category>database</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>schema</category>
    </item>
  </channel>
</rss>
