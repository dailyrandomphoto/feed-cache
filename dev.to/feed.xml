<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How are client hints really useful for web performance</title>
      <author>Hargunbeer Singh</author>
      <pubDate>Sun, 22 Aug 2021 13:01:30 +0000</pubDate>
      <link>https://dev.to/hamiecod/how-are-client-hints-really-useful-for-web-performance-4491</link>
      <guid>https://dev.to/hamiecod/how-are-client-hints-really-useful-for-web-performance-4491</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Client Hints are HTTP request header fields that a server can request from a client in order to get information about the client's device, network, etc. The server can then determine the type of data to be displayed according to the client information received.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;A server must tell the client that it supports client hints, this can be done using the &lt;code&gt;Accept-CH&lt;/code&gt; header. When a client that supports client hints receives the &lt;code&gt;Accept-CH&lt;/code&gt; header it can append client hint headers that match the advertised field-values to subsequent requests. For example: on receiving &lt;code&gt;Accept-CH&lt;/code&gt; as a header from the server, the client would append &lt;code&gt;Width&lt;/code&gt; headers to all subsequent requests, which sends some information about the client to the server in this format:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Accept-CH: Width
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Client hints can also be specified in HTML using the &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag with &lt;code&gt;http-equiv&lt;/code&gt; attribute.&lt;br&gt;&lt;br&gt;
The data from the client is not sent in the initial request to the server, in the initial request the server returns &lt;code&gt;Accept-CH&lt;/code&gt; in the headers which informs the client that it takes data, in the future request the client would append the header with the corresponding data.&lt;br&gt;&lt;br&gt;&lt;br&gt;
Before client hints were a thing &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vary-header"&gt;
  &lt;/a&gt;
  Vary Header
&lt;/h2&gt;

&lt;p&gt;The client hints which determine which resources are sent in responses should be included in the &lt;strong&gt;Vary&lt;/strong&gt; header. This ensures that a different resource is cached for every different value of the hint header. Usually, client hints like &lt;code&gt;Width&lt;/code&gt; and &lt;code&gt;DPR&lt;/code&gt; are specified in the Vary header.&lt;br&gt;&lt;br&gt;&lt;br&gt;
You may omit using Vary header if the values of the client hints change frequently, causing a lot of cache enteries, thus costing more money for maintaining the caches.&lt;br&gt;&lt;br&gt;&lt;br&gt;
Example: You would specify &lt;code&gt;Width&lt;/code&gt; in Vary header generally as you want the response to be cached because the width of the device does not frequently change. You would not specify the network speed in the Vary header as it changes frequently and you would not like to store multiple resources for different network speeds unless you want to burn your money spinning up multiple caches.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#analogy"&gt;
  &lt;/a&gt;
  Analogy
&lt;/h2&gt;

&lt;p&gt;Suppose you want to dine at a restaurant, so you look up the restaurant on google maps and it says that it has table reservations and you can specify the food beforehand to save you time. You like specifying the food beforehand, so you call up the restaurant and tell the staff the time you wanna dine and the food you will eat(suppose chicken soup and kebab). So when you go to the restaurant, they give you the already specified food saving you time.&lt;br&gt;&lt;br&gt;&lt;br&gt;
In this analogy, the restaurant specifying on google maps that it accepts orders beforehand is &lt;code&gt;Accept-CH&lt;/code&gt; in client hints as the server specifies that it would take client data. You calling up the restaurant and specifying the food beforehand is the data you send, like your operating system, device width or even browser dark or light mode. The restaurant staff keeping the food ready beforehand is related to the server returning specific data corresponding to the data it received, like it would show different colors if the client has dark mode and it would make the website responsive if the width of the client's device is shorter.&lt;br&gt;&lt;br&gt;&lt;br&gt;
While departing from the restaurant, you say that you really like the food and would come to the restaurant again to eat the same food, the restaurant staff remembers that, when you call them up next time and book a table and specify that you need the same food, they would not need to ask you the specific food items as they remember that you ate chicken soup and kebab last time and they would serve the same, thus saving you time.&lt;br&gt;&lt;br&gt; &lt;br&gt;
Here, you telling the staff at your first visit that you would eat the same food is the client hint in the Vary header, the staff remembering it is related to caching the response for the request. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;A client hint would require to know your operating system information and then show linux download files if it is a linux operating system or windows download files if it is a windows operating system.&lt;/li&gt;
&lt;li&gt;A client sends the width and height of his device to the server via client hints. This helps make the website responsive, the width received by client hints is then used in media queries.&lt;/li&gt;
&lt;li&gt;It is used for image delivery optimization, if you want to send an image to the client, you would usually send the same image for various device widths and sizes, and then optimize them to suit the width of the client's device in the client side code, this is really inefficient as suppose you are sending a 4k image to all the devices, the image is about 10mb in size, the image would be rendered nicely on a 4k monitor, but for other devices, suppose tablets and mobiles, you would need to decrease the height and width of the image to suit it to tablets and mobiles. Using client hints, you would just send the required resolution image(suppose a 300x300 image for a mobile phone), and you would not have to send the huge 4k image to every device and then suit it to the device with client-side code. Here, client-side code is not the problem but bandwidth is, you are sending huge images to devices which do not even need them, hence lowering the performance of your website&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#more-info"&gt;
  &lt;/a&gt;
  More Info
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.keycdn.com/blog/client-hints"&gt;KeyCDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/web/updates/2015/09/automating-resource-selection-with-client-hints"&gt;Google Developers blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.dev/user-agent-client-hints/"&gt;Web.dev blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>performance</category>
    </item>
    <item>
      <title>Training Machine Learning models in AzureML</title>
      <author>Vivek0712</author>
      <pubDate>Sun, 22 Aug 2021 11:39:05 +0000</pubDate>
      <link>https://dev.to/vivek0712/training-machine-learning-models-in-azureml-118m</link>
      <guid>https://dev.to/vivek0712/training-machine-learning-models-in-azureml-118m</guid>
      <description>&lt;p&gt;Welcome to the next part of my blog series on Azure Machine Learning. Now we are going to jump into one of the most important aspect of the MLOps - Training of Machine Learning Models.&lt;/p&gt;

&lt;p&gt;Usually Machine Learning models require high compute power to train on the dataset. It is quite evident that not everyone has access to high processing and storage capabilities. So, keeping in mind of the cost of procuring the infrastructure for the same, its better option to leverage the cloud resources and pay for the usage. &lt;/p&gt;

&lt;p&gt;Now, coming to training of Machine Learning models in Azure, we are going to follow simple steps to do so. At the end of the article, you will have created a training environment, trained your ML model and stored the artefacts of the models for future use. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps"&gt;
  &lt;/a&gt;
  Steps
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Setup the environment&lt;/li&gt;
&lt;li&gt;Creating your ML Script&lt;/li&gt;
&lt;li&gt;Create Training Environment dependency file&lt;/li&gt;
&lt;li&gt;Training the model&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#setup-the-environment-for-ml"&gt;
  &lt;/a&gt;
  Setup the Environment for ML
&lt;/h2&gt;

&lt;p&gt;Follow the previous article to create Workspace, Compute and Data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-your-ml-script"&gt;
  &lt;/a&gt;
  Creating your ML Script
&lt;/h2&gt;

&lt;p&gt;Before creating the ML Script, lets first create the directories for source files&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The ML Script does the following &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Parsess the Argument passed to the script (Input Data and Hyperparameters)&lt;/li&gt;
&lt;li&gt;Starts the run for the experiment&lt;/li&gt;
&lt;li&gt;Does all the ML Training&lt;/li&gt;
&lt;li&gt;Logs the metrics of the run&lt;/li&gt;
&lt;li&gt;Stores the output model&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#creating-training-environment-dependency-file"&gt;
  &lt;/a&gt;
  Creating Training Environment Dependency File
&lt;/h2&gt;

&lt;p&gt;An Environment is managed and versioned in an Azure Machine Learning Workspace. You can update an existing environment and retrieve a version to reuse. Environments are exclusive to the workspace they are created in and can't be used across different workspaces.&lt;/p&gt;

&lt;p&gt;We will use YAML file to list the dependencies of the environment we are going to use&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#training-the-machine-learning-model"&gt;
  &lt;/a&gt;
  Training the Machine learning Model
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create the environment from the dependency file&lt;/li&gt;
&lt;li&gt;Creating Configuration for Python Script&lt;/li&gt;
&lt;li&gt;Submitting the Script to the Experiment&lt;/li&gt;
&lt;li&gt;Register the model along with the RSME Value&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We are going to create 10 different runs for 10 different Alpha values for our Ridge Algorithm to be trained on the Diabetes Dataset. The model with less RMSE will be considered as best model.&lt;/p&gt;

&lt;p&gt;A ScriptRunConfig packages together the configuration information needed to submit a run in Azure ML, including the script, compute target, environment, and any distributed job-specific configs.&lt;/p&gt;

&lt;p&gt;A model is the result of a Azure Machine learning training Run or some other model training process outside of Azure.Register a model with the provided workspace, we use &lt;em&gt;register&lt;/em&gt; method.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;We have successfully created and trained our Machine Learning model. In next article, we will see how to deploy our model to production and perform real-time inference.&lt;/p&gt;

</description>
      <category>azure</category>
      <category>microsoft</category>
      <category>machinelearning</category>
      <category>cloud</category>
    </item>
    <item>
      <title>6 CSS Shorthand properties to improve your web application</title>
      <author>Carmine Scarpitta</author>
      <pubDate>Sun, 22 Aug 2021 10:55:25 +0000</pubDate>
      <link>https://dev.to/cscarpitta/6-css-shorthand-properties-to-improve-your-web-application-2dbj</link>
      <guid>https://dev.to/cscarpitta/6-css-shorthand-properties-to-improve-your-web-application-2dbj</guid>
      <description>&lt;h1&gt;
  &lt;a href="#why-should-i-care-shorthand-properties-balloon"&gt;
  &lt;/a&gt;
  Why should I care shorthand properties? 🎈
&lt;/h1&gt;

&lt;p&gt;CSS is a language used to describe how a web page should look like. With CSS we can set position, colors, fonts, layout of each element in an HTML page. 🌈&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bJh4UVgi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/suxzb0mwwowa8nbvmy7n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bJh4UVgi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/suxzb0mwwowa8nbvmy7n.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this blog post, I will share some tips to improve your CSS code and the performance of your web app. ⚠️&lt;/p&gt;


&lt;center&gt; 🔥 🌞 🌴 🍄 🔥 &lt;/center&gt;

&lt;p&gt;There are several ways in which a CSS file can be optimized. One of the things you should care when writing your CSS code is to minimize the number of lines. 💥&lt;/p&gt;

&lt;p&gt;There are several reasons to care about the number of code lines 😲:&lt;br&gt;
👉 improve the code readability&lt;br&gt;
👉 improve the loading speed of your web page&lt;br&gt;
👉 improve the ranking in search engines (e.g. Google Search, Bing, ...), because ranking depends on the loading speed and optimization level of your application&lt;/p&gt;


&lt;center&gt;🔥 🔥 🔥 🔥 🔥&lt;/center&gt;

&lt;p&gt;An interesting tip to reduce the number of lines of code is the following:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Use CSS shorthand properties whenever possible&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this blog post I'll show you what shorthand properties are and how they can be used to optimize your CSS code.&lt;/p&gt;

&lt;p&gt;Interested? Read on!!! 😊💻&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#what-are-shorthand-properties"&gt;
  &lt;/a&gt;
  What are shorthand properties?
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Shorthand properties&lt;/strong&gt; let you set the values of multiple other CSS properties simultaneously.&lt;/p&gt;

&lt;p&gt;CSS supports a number of shorthand properties. In this blog post we will see the most used ones. ✈️&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#css-background-shorthand"&gt;
  &lt;/a&gt;
  CSS Background Shorthand
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Background property&lt;/strong&gt; lets you set different background properties of an HTML element (e.g. a &lt;code&gt;div&lt;/code&gt;) in a single line of CSS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Background&lt;/strong&gt; is a shorthand for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;background-color&lt;/li&gt;
&lt;li&gt;background-image&lt;/li&gt;
&lt;li&gt;background-position&lt;/li&gt;
&lt;li&gt;background-size&lt;/li&gt;
&lt;li&gt;background-repeat&lt;/li&gt;
&lt;li&gt;background-origin&lt;/li&gt;
&lt;li&gt;background-clip&lt;/li&gt;
&lt;li&gt;background-attachment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So instead of having background-color, background-image,  background-position, background-size, background-repeat, background-origin, background-clip, background-attachment defined for an HTML element, we can use a single property. 😍&lt;/p&gt;

&lt;p&gt;Hmmm confused??? 😱 😕 &lt;/p&gt;

&lt;p&gt;A picture is worth a thousand words:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uVdTk2Z_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zukoe629szz9kl9kng5a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uVdTk2Z_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zukoe629szz9kl9kng5a.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's the trick. Thanks to &lt;code&gt;background&lt;/code&gt; shorthand property, we have compressed 8 CSS lines into one line.&lt;/p&gt;

&lt;p&gt;Now let's image a complex web application, with dozens of CSS files and thousands of lines per file. 😱&lt;/p&gt;

&lt;p&gt;Definitely, this results in much smaller files, cleaner code and faster loading times for your web application. 😄&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#css-border-shorthand"&gt;
  &lt;/a&gt;
  CSS Border Shorthand
&lt;/h1&gt;

&lt;p&gt;The second shorthand property that I want to show you is called &lt;strong&gt;Border&lt;/strong&gt;. Border shorthand is used to set the border of an HTML element.&lt;/p&gt;

&lt;p&gt;It is a shorthand for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;border-width&lt;/li&gt;
&lt;li&gt;border-style&lt;/li&gt;
&lt;li&gt;border-color&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is an example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3n5Y0C32--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ua2jaajgkkzyzkujcekc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3n5Y0C32--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ua2jaajgkkzyzkujcekc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Three properties at one go. Not so bad!!! 😏 🔥&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#css-font-shorthand"&gt;
  &lt;/a&gt;
  CSS Font Shorthand
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Font&lt;/strong&gt; shorthand is used to set the following font properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;font-style&lt;/li&gt;
&lt;li&gt;font-variant&lt;/li&gt;
&lt;li&gt;font-weight&lt;/li&gt;
&lt;li&gt;font-size/line-height&lt;/li&gt;
&lt;li&gt;font-family&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R1dFEYpk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/epbng7ypqeahp7wsnvbf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R1dFEYpk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/epbng7ypqeahp7wsnvbf.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#css-inset-shorthand"&gt;
  &lt;/a&gt;
  CSS Inset Shorthand
&lt;/h1&gt;

&lt;p&gt;The &lt;strong&gt;Inset&lt;/strong&gt; property has to do with the positioning of an HTML element. It is a shorthand for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;top&lt;/li&gt;
&lt;li&gt;right&lt;/li&gt;
&lt;li&gt;bottom&lt;/li&gt;
&lt;li&gt;left&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q29d4mVq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ppsfx8coso1j5zsmyg9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q29d4mVq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ppsfx8coso1j5zsmyg9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simple and efficient! ☺️ 🌺&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#css-padding-shorthand"&gt;
  &lt;/a&gt;
  CSS Padding Shorthand
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Padding&lt;/strong&gt; is a way to add space around an element. More precisely it allows you to add space between the element and its border.&lt;/p&gt;

&lt;p&gt;To completely set the padding of an HTML element, we need to set four values:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;padding-top&lt;/li&gt;
&lt;li&gt;padding-right&lt;/li&gt;
&lt;li&gt;padding-bottom&lt;/li&gt;
&lt;li&gt;padding-left&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The meaning of these values is quite intuitive:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;padding-top&lt;/strong&gt; is the space between the element and the its border&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;padding-right&lt;/strong&gt; is the space between the element and its right border&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;padding-bottom&lt;/strong&gt; is the space between the element and its bottom border&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;padding-left&lt;/strong&gt; is the space between the element and its left border&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All these properties can be specified in a single declaration, using the &lt;strong&gt;padding&lt;/strong&gt; shorthand. 🌻&lt;/p&gt;

&lt;p&gt;The syntax is straightforward:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;padding-top&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;padding-right&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;padding-bottom&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;padding-left&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is an example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_siOyeqy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pi10x5153xgp7lyg8kct.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_siOyeqy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pi10x5153xgp7lyg8kct.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#css-margin-shorthand"&gt;
  &lt;/a&gt;
  CSS Margin Shorthand
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Margin&lt;/strong&gt; property is similar to padding. Margin is the space around the element, outside its borders.&lt;/p&gt;

&lt;p&gt;To specify a margin you need to provide four different values:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;margin-top&lt;/strong&gt; is the space between the top border of the element and the other elements&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;margin-right&lt;/strong&gt; is the space between the right border of the element and the other elements&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;margin-bottom&lt;/strong&gt; is the space between the bottom border of the element and the other elements&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;margin-left&lt;/strong&gt; is the space between the left border of the element and the other elements&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The syntax is straightforward 🌹:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;margin-top&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;margin-right&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;margin-bottom&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;margin-left&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is an example:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WprVOB20--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ay5vhdzzts34yyv060yh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WprVOB20--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ay5vhdzzts34yyv060yh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;We have come to an end. 🌼 I want to remark the following tip:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Use CSS shorthand properties whenever possible&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;because they help to reduce the lines of CSS code and improve readability. &lt;/p&gt;

&lt;p&gt;Reducing the CSS file size will also &lt;strong&gt;improve the loading speed of our web pages&lt;/strong&gt;, because the CSS file is &lt;strong&gt;smaller&lt;/strong&gt;. This will also &lt;strong&gt;improve our ranking in search engine&lt;/strong&gt;, because the search engine algorithms tend to reward the optimized web pages. 🌈 🚀&lt;/p&gt;


&lt;center&gt;🔥 🔥 🔥 🔥 🔥&lt;/center&gt;

&lt;p&gt;I hope I convinced you to care about lines of CSS code. 😜&lt;/p&gt;

&lt;p&gt;If you liked this post, consider following me on Twitter &lt;a href="https://twitter.com/cscarpitta94"&gt;@cscarpitta94&lt;/a&gt; and on dev &lt;a href="https://dev.to/cscarpitta"&gt;cscarpitta&lt;/a&gt; 😍&lt;/p&gt;



&lt;center&gt;👋 🔥&lt;/center&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Last words on UI architecture before an AI takes over</title>
      <author>Oleg Isonen</author>
      <pubDate>Sun, 22 Aug 2021 10:36:27 +0000</pubDate>
      <link>https://dev.to/oleg008/last-words-on-ui-architecture-before-an-ai-takes-over-dd3</link>
      <guid>https://dev.to/oleg008/last-words-on-ui-architecture-before-an-ai-takes-over-dd3</guid>
      <description>&lt;p&gt;“Big Ball of Mud” is the current state of the UI architecture, despite component-based composition.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#components-are-not%C2%A0enough"&gt;
  &lt;/a&gt;
  Components are not enough
&lt;/h3&gt;

&lt;p&gt;Components and composition are just one piece of architecture. You still need to know how to compose pieces without recreating the “Big Ball of Mud” using a new (not really) shiny components-based approach.&lt;/p&gt;

&lt;p&gt;Components are too generic to actually solve architectural problems. They are comparable to the bricks. You can for sure use bricks to build a house, but there is so much more to building a house that bricks aren’t even 10% of what you need to use.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#new-architecture"&gt;
  &lt;/a&gt;
  New Architecture?
&lt;/h3&gt;

&lt;p&gt;We spent decades defining methodologies and principles for great architecture and yet here we are — every new job will surprise you with new ways of creating an utterly broken architecture.&lt;/p&gt;

&lt;p&gt;Is everyone stupid? Did nobody read about SoC, SOLID, DRY, KISS, WTF, GoF, GRASP YAGNI, WTF, Atomic Design, DDD, Onion, Clean Architecture, etc?&lt;/p&gt;

&lt;p&gt;I am sure everyone heard at least one or two of those and maybe even understood them, so what’s the problem? Why can’t we have a better architecture in practice?&lt;/p&gt;

&lt;p&gt;Maybe all we need is another, “better” architecture that solves all the problems? (Not really)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#theory-vs%C2%A0practice"&gt;
  &lt;/a&gt;
  Theory vs. practice
&lt;/h3&gt;

&lt;p&gt;These are the most popular reasons why your organization will inevitably fail at the architectural level:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Many well-known principles and methodologies are conflicting.&lt;/li&gt;
&lt;li&gt; Requirements change over time.&lt;/li&gt;
&lt;li&gt; Organizational restructuring.&lt;/li&gt;
&lt;li&gt; There are no generic good ways to enforce a particular architecture.&lt;/li&gt;
&lt;li&gt; Poor communication of the applied architecture.&lt;/li&gt;
&lt;li&gt; Practical implementation difficulties.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#conflicting-principles"&gt;
  &lt;/a&gt;
  Conflicting principles
&lt;/h3&gt;

&lt;p&gt;Let’s take one example: DRY — Don’t Repeat Yourself vs. High Cohesion — keep related code close.&lt;/p&gt;

&lt;p&gt;In theory, they both sound great, though both of them fall apart when you have 2 independent features that need the same function. I understand this is too theoretical and it never happened to YOU in the real world /s, but bear with me for a second.&lt;/p&gt;

&lt;p&gt;As soon as you have to share a function between 2 features you have 3 options:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Let feature A import that function from feature B directly and marry both features together in the sense one has to know about the existence of the other.&lt;/li&gt;
&lt;li&gt; Move that shared function into some “shared” directory and use it from both places.&lt;/li&gt;
&lt;li&gt; Copy that function into both features&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you are reusing that function, you are breaking “High Cohesion”. If you are copying — you are breaking DRY.&lt;/p&gt;

&lt;p&gt;And this is just one simple example, there are many more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#changing-requirements"&gt;
  &lt;/a&gt;
  Changing requirements
&lt;/h3&gt;

&lt;p&gt;In the modern world of startups, every company starts with some small prototype that can be manufactured quickly and then hopes to evolve it into something better.&lt;/p&gt;

&lt;p&gt;When building things quick and dirty — you don’t have time for good architecture, let alone you don’t know yet what “good” means for that particular product.&lt;/p&gt;

&lt;p&gt;Product is changing and so are the requirements. You either have decades of experience and can predict what architecture needs to be because you saw this very same thing happening already or you will start with some baseline architecture that minimizes your risks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#organizational-restructuring"&gt;
  &lt;/a&gt;
  Organizational restructuring
&lt;/h3&gt;

&lt;p&gt;It’s not a secret that the architecture needs to not only be designed around the product requirements but also around the people working on it.&lt;/p&gt;

&lt;p&gt;If you have a team of 2 engineers, exchanging information, agreeing on architecture, and keeping things consistent is one million times easier than having a team of 20 people. (please teach me the math here /s)&lt;/p&gt;

&lt;p&gt;Every product starts with a small team and then adds the team members over time. People join, people live and communication pathways change all the time.&lt;/p&gt;

&lt;p&gt;Can we have an architecture that is correct no matter how many people work on the product?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#enforcing-an-architecture"&gt;
  &lt;/a&gt;
  Enforcing an architecture
&lt;/h3&gt;

&lt;p&gt;If a magical tool existed that could enforce every principle and every architectural decision that is used on a product, we could have a consistent architecture and much better communication of it.&lt;/p&gt;

&lt;p&gt;People don’t read docs. They don’t read not because they don’t know how to, but because they don’t know what those words mean in their specific context, and learning it is hard work.&lt;/p&gt;

&lt;p&gt;Tools can tell a person to read something when they are about to make a mistake or create an inconsistency, but creating such tools is hard because many violations of principles are hard to detect in code.&lt;/p&gt;

&lt;p&gt;We definitely need tools to communicate architecture, and yet, do we know many tools that try to do that at least on some basic level?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#poor-communication"&gt;
  &lt;/a&gt;
  Poor communication
&lt;/h3&gt;

&lt;p&gt;Documentation is hard. Documentation of principles and methodologies is harder. Documenting them well as a by-product of some product work — impossible.&lt;/p&gt;

&lt;p&gt;Your internal documentation around principles and architecture will always suck unless you have people who have a serious level of dedication for the topic — aka “architect”.&lt;/p&gt;

&lt;p&gt;How many companies have you worked for that have people with architectural roles?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tactics-vs-logistics"&gt;
  &lt;/a&gt;
  Tactics vs. logistics
&lt;/h3&gt;

&lt;p&gt;One dude said once:&lt;/p&gt;

&lt;p&gt;“The amateurs discuss tactics: the professionals discuss logistics.”&lt;/p&gt;

&lt;p&gt;Tactics in our context are the same as abstract principles and methodologies. Those are just words that don’t tell you what to do in your context because they are too abstract and conflicting.&lt;/p&gt;

&lt;p&gt;The missing piece in the industry is a set of principles that can be well understood and applied in practice that go along with tools that help to enforce them.&lt;/p&gt;

&lt;p&gt;This is the logistics analogy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h3&gt;

&lt;p&gt;Am I here to just criticize the current state or to move the needle? Well, without agreeing on critiques we can’t move on to something better. Can we come up with something better? I believe so.&lt;/p&gt;

&lt;p&gt;I expressed some ideas in my talk in 2018 with the title “Feature Driven Architecture” &lt;a href="https://www.youtube.com/watch?v=BWAeYuWFHhs"&gt;https://www.youtube.com/watch?v=BWAeYuWFHhs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is nothing fundamentally new in it, it is a collection of well-known ideas put together into a single practical architecture.&lt;/p&gt;

&lt;p&gt;If you like and retweet this article hard enough, I might work on defining those ideas and examples more clearly in this repository &lt;a href="https://github.com/kof/feature-driven-architecture"&gt;https://github.com/kof/feature-driven-architecture&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-are-everything"&gt;
  &lt;/a&gt;
  Features are everything
&lt;/h3&gt;

&lt;p&gt;The word "features" is the most common to describe application-level components. An application will have features added, removed, modified. It will have big features, small features, life-changing features. Features that make you proud of yourself, features that will embarrass the entire company. Features are the most important piece of every application.&lt;/p&gt;

&lt;p&gt;This is why it is so important to make it your life goal as an architect of an application to make sure a feature can be added, removed, or extended with the least amount of work.&lt;/p&gt;

&lt;p&gt;Being able to completely remove a feature without leaving pieces of logic left behind spread over the entire application is the key to a maintainable product.&lt;/p&gt;

&lt;p&gt;An &lt;strong&gt;ultimate test&lt;/strong&gt; for any architecture should be to remove a feature directory from the file system and the application should stay fully functional without it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;An ideal feature contains everything it needs.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#principles-of-a%C2%A0feature"&gt;
  &lt;/a&gt;
  Principles of a feature
&lt;/h3&gt;

&lt;p&gt;These are the most important principles that have to be followed in a Feature Driven Architecture:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-a-feature-can-not-know-other-features-or-its-consumers"&gt;
  &lt;/a&gt;
  1. A feature can not know other features or its consumers.
&lt;/h4&gt;

&lt;p&gt;It’s simple — you will break one feature when you change the other otherwise. You also can’t remove one feature without affecting another, if you break this principle.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-a-feature-has-to-express-its-dependencies-declaratively"&gt;
  &lt;/a&gt;
  2. A feature has to express its dependencies declaratively.
&lt;/h4&gt;

&lt;p&gt;If there is data or any other dependencies — it has to express them declaratively and a consumer should be able to provide them.&lt;/p&gt;

&lt;p&gt;Much like a component, features don’t live in a vacuum, they have dependencies. To name a few: data, static artifacts like images, libraries, functions shared between features, knowledge of app architecture, build system, and more.&lt;/p&gt;

&lt;p&gt;Dependencies are what makes it hard to build features that are fully encapsulated and integrate well with the rest of the application. That’s why on the architectural level we can only define basic rules of behavior, but not the specifics around implementation details because those will vary depending on your stack and particular business requirements.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;An ideal feature doesn’t have dependencies.&lt;/em&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-be-disposable"&gt;
  &lt;/a&gt;
  3. Be disposable
&lt;/h4&gt;

&lt;p&gt;Much like a component, a feature has to be disposable. You need to architect the feature so that you can remove it easily. &lt;strong&gt;That’s the whole point.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#screens"&gt;
  &lt;/a&gt;
  Screens
&lt;/h3&gt;

&lt;p&gt;If one feature doesn’t know any other feature, there has to be something else that knows all the features, otherwise, we will render a vacuum.&lt;/p&gt;

&lt;p&gt;Screens have to follow &lt;strong&gt;the same principles&lt;/strong&gt; we described for the feature for the exact same reasons. In addition, it acts as a features manager:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-doesnt-know-about-other%C2%A0screens"&gt;
  &lt;/a&gt;
  1. Doesn’t know about other screens
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#2-renders-the%C2%A0features"&gt;
  &lt;/a&gt;
  2. Renders the features
&lt;/h4&gt;

&lt;p&gt;A screen can import a feature and access its public API, including its rendering interface and its declaration of dependencies. The screen’s main goal is to render the features on the screen.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-provides-dependencies"&gt;
  &lt;/a&gt;
  3. Provides dependencies
&lt;/h4&gt;

&lt;p&gt;In case a feature can not satisfy its dependencies itself, a screen will have to provide them. It could be static artifacts, data, or anything else. Important is that if a feature can provide those things itself — it should. I can only see the need to express dependencies when the dependency is outside of features scope or it is something 2+ features on the screen depend on, so it would potentially make sense to hoist the logic to the screen.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-connects-the%C2%A0features"&gt;
  &lt;/a&gt;
  4. Connects the features
&lt;/h4&gt;

&lt;p&gt;Sometimes one feature depends on something that some other feature has or does, but since features can’t know about each other, this dependency has to be expressed via a simplified protocol. &lt;br&gt;&lt;br&gt;
If the dependency is data — one feature has to express what data it requires via an interface and the screen will pipe that data from one feature into another while trying to keep the least amount of knowledge about its contents.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The more screen knows about each feature — the harder will it be to remove a feature from the screen.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#clusters"&gt;
  &lt;/a&gt;
  Clusters
&lt;/h3&gt;

&lt;p&gt;Sometimes a set of independent features is used on 2+ screens together as a set. You don’t need a cluster to achieve that if a feature is fully self-contained, but if a feature has dependencies provided by the screen — you would have to duplicate the setup logic that wires up those features 2+ times for each screen.&lt;/p&gt;

&lt;p&gt;If that setup code a feature needs is trivial — you may want to avoid having a cluster to avoid the need for this additional abstraction.&lt;/p&gt;

&lt;p&gt;But if you end up needing a cluster — the rules it follows are similar to a feature:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Doesn’t know about other clusters&lt;/li&gt;
&lt;li&gt; Doesn’t know about screens&lt;/li&gt;
&lt;li&gt; Knows all features from that cluster and exposes a declarative interface for the screen.&lt;/li&gt;
&lt;li&gt; Provides features with dependencies just like a screen.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#shared"&gt;
  &lt;/a&gt;
  Shared
&lt;/h3&gt;

&lt;p&gt;Sometimes you need to share a function between features, screens, or clusters that has business awareness. This is where a “shared” space comes in handy.&lt;/p&gt;

&lt;p&gt;Shared space has one rule to follow — it can’t directly depend on anything outside of “shared” except the libraries. It can’t depend on a feature, screen or a cluster.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#libraries"&gt;
  &lt;/a&gt;
  Libraries
&lt;/h3&gt;

&lt;p&gt;The final and the most low-level piece is a library. A library has no knowledge about business logic. It can be published to or installed from an Open Source repository and can be shared between businesses. You can have a lib directory inside the product or you can treat the installed package from an external source as a lib. One example is the node_modules package, if it doesn’t contain a business-aware logic — it's a library.&lt;/p&gt;




&lt;p&gt;To sum it up, my proposal is to split an application by a number of principled types that would let your application be maintainable, guided by the need to have built-in discoverability, disposability, and scalability. The proposed types are in the order from higher to a lower level of abstraction:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Screens
&lt;/li&gt;
&lt;li&gt;Clusters
&lt;/li&gt;
&lt;li&gt;Features
&lt;/li&gt;
&lt;li&gt;Shared
&lt;/li&gt;
&lt;li&gt;Libraries&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I am certain the constraints I expressed are basic and there is more to it. We need to work on a well-defined spec for them. I am also certain that enforcing those constraints should be automated one way or another and we need to build tools and interfaces to make a consistent architecture.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Javascript Clean Code Tips &amp; Good Practices</title>
      <author>Apoorv Tyagi</author>
      <pubDate>Sun, 22 Aug 2021 10:17:53 +0000</pubDate>
      <link>https://dev.to/apoorvtyagi/javascript-clean-code-tips-good-practices-2od4</link>
      <guid>https://dev.to/apoorvtyagi/javascript-clean-code-tips-good-practices-2od4</guid>
      <description>&lt;p&gt;Code should be written in such a way that is self-explanatory, easy to understand, and easy to modify or extend for the new features. Because code is read more than it is written that's why so much emphasis is given to clean code.&lt;/p&gt;

&lt;p&gt;The more readable our source code is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  The easier it is to maintain&lt;/li&gt;
&lt;li&gt;  The less time required to understand an implementation for a new developer&lt;/li&gt;
&lt;li&gt;  The easier it is to discover what code can be reused&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this blog post, I will share some general clean coding principles that I've adopted over time as well as some JavaScript-specific clean code practices.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#0-naming"&gt;
  &lt;/a&gt;
  0. Naming
&lt;/h2&gt;

&lt;p&gt;Don't turn naming into a riddle game. &lt;strong&gt;Name your variables and functions in a way that they reveal the intention behind why they were created in the first place&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This way they become searchable and easier to understand if let's say a new developer joins the team.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Only go for Shortening and abbreviating names when you want the next developer working on your code to guess what you were thinking about 😉&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Bad 👎&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;getFullYear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1990&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Good 👍&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userAge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;currentYear&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;getFullYear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userAge&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentYear&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;userAge&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1990&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6jQOafhp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629479918874/E6RbSRvkE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6jQOafhp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629479918874/E6RbSRvkE.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, don’t add extra unnecessary letters to the variable or functions names.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bad 👎&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;nameValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;theProduct&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Good 👍&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#1-conditionals"&gt;
  &lt;/a&gt;
  1. Conditionals
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Avoid negative conditionals&lt;/strong&gt;. Negatives are just a bit harder to understand than positives.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bad 👎&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isUserExist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Good 👍&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isUserExist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-functions-should-do-one-thing"&gt;
  &lt;/a&gt;
  2. Functions should do one thing
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;The function should not have more than an average of 30 lines (excluding spaces and comments)&lt;/strong&gt;. The smaller the function the better it is to understand and refactor. Try making sure your function is either modifying or querying something but not both.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-use-default-arguments"&gt;
  &lt;/a&gt;
  3. Use default arguments
&lt;/h2&gt;

&lt;p&gt;Use default arguments instead of short-circuiting or conditionals.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Default arguments are often cleaner than short-circuiting&lt;/strong&gt;. Remember that if you use them, your function will only provide default values for undefined arguments. Other &lt;em&gt;falsy&lt;/em&gt; values such as '', "", false, null, 0, and NaN, will not be replaced by a default value.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bad 👎&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getUserData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Patrick Collision&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Good 👍&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getUserData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Patrick Collision&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-single-level-of-abstractionsla"&gt;
  &lt;/a&gt;
  4. Single Level of Abstraction(SLA)
&lt;/h2&gt;

&lt;p&gt;While writing any function, &lt;strong&gt;if you have more than one level of abstraction, your function is usually doing more than one thing&lt;/strong&gt;. Dividing a bigger function into multiple functions leads to reusability and easier testing.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Functions should do one thing. They should do it well. They should do it only. — Robert C. Martin&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jnvswptm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629479806409/qJ0VeLUxO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jnvswptm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629479806409/qJ0VeLUxO.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bad 👎&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;checkSomething&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;statement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;REGEXES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;
  &lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;statements&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;statement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tokens&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
  &lt;span class="nx"&gt;REGEXES&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;REGEX&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;statements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;statement&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// ...&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;names&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
  &lt;span class="nx"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// lex...&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;names&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// parse...&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Good 👍&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;checkSomething&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;statement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tokens&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;tokenize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;statement&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;syntaxTree&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;syntaxTree&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// parse...&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;tokenize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;REGEXES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;
  &lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;statements&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tokens&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
  &lt;span class="nx"&gt;REGEXES&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;REGEX&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;statements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;statement&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="cm"&gt;/* ... */&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;syntaxTree&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
  &lt;span class="nx"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;syntaxTree&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="cm"&gt;/* ... */&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;syntaxTree&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-dont-ignore-caught-errors"&gt;
  &lt;/a&gt;
  5. Don't ignore caught errors
&lt;/h2&gt;

&lt;p&gt;Doing nothing with a caught error doesn't give you the ability to fix or react to that particular error.&lt;/p&gt;

&lt;p&gt;Logging the error to the console (console.log) isn't much better as oftentimes it can get lost among other things printed to the console.&lt;/p&gt;

&lt;p&gt;If you wrap any bit of code in a try/catch it means you think an error may occur there and therefore you should have a plan for when it occurs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bad 👎&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;functionThatMightThrow&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Good 👍&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;functionThatMightThrow&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;notifyUserOfError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
  &lt;span class="nx"&gt;reportErrorToService&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#6-minimize-comments"&gt;
  &lt;/a&gt;
  6. Minimize Comments
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Only comment the part of the code that has business logic complexity&lt;/strong&gt;.&lt;br&gt;
Comments are not a requirement. Good code mostly documents itself.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bad 👎&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;hashing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// The hash&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Length of string&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Loop through every character in data&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Get character code.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;char&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charCodeAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// Make the hash&lt;/span&gt;
    &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;char&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// Convert to 32-bit integer&lt;/span&gt;
    &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Good 👍&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;hashing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;char&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charCodeAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;char&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// Convert to 32-bit integer&lt;/span&gt;
    &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;“Redundant comments are just places to collect lies and misinformation.” ― Robert C. Martin&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#7-remove-commented-code"&gt;
  &lt;/a&gt;
  7. Remove commented code
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Don't leave commented out code in your codebase&lt;/strong&gt;, Version control exists for a reason. Leave old code in your history. If you ever need them back, pick them up from your git history.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bad 👎&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;doSomething&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// doOtherStuff();&lt;/span&gt;
&lt;span class="c1"&gt;// doSomeMoreStuff();&lt;/span&gt;
&lt;span class="c1"&gt;// doSoMuchStuff();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Good 👍&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;doSomething&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#8-import-only-what-you-need"&gt;
  &lt;/a&gt;
  8. Import only what you need
&lt;/h2&gt;

&lt;p&gt;Destructuring was introduced with ES6. It makes it possible to unpack values from arrays, or properties from objects, into distinct variables. You can use this for any kind of object or module.&lt;/p&gt;

&lt;p&gt;For instance, if you only require to &lt;code&gt;add()&lt;/code&gt; and &lt;code&gt;subtract()&lt;/code&gt; function from another module:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bad 👎&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;calculate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./calculations&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;calculate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;calculate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subtract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Good 👍&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;subtract&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./calculations&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;calculate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subtract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It makes sense to only import the functions you need to use in your file instead of the whole module, and then access the specific functions from it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--puJQ878e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629479831245/hf55o5gIi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--puJQ878e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629479831245/hf55o5gIi.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-keep-function-arguments-3-or-less-ideally"&gt;
  &lt;/a&gt;
  9. Keep Function arguments 3 or less (ideally)
&lt;/h2&gt;

&lt;p&gt;Limiting the number of function parameters is really important because it makes testing your function easier. Having more than three parameters leads you to test tons of different cases with each separate argument.&lt;/p&gt;

&lt;p&gt;1-3 arguments are the ideal case, anything above that should be avoided if possible.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Usually, if you have more than three arguments then your function is trying to do too much. Which ultimately leads to the violation of the SRP(Single Responsibility Principle).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#10-use-array-spreads-to-copy-arrays"&gt;
  &lt;/a&gt;
  10. Use array spreads to copy arrays.
&lt;/h2&gt;

&lt;p&gt;Bad 👎&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;itemsCopy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;itemsCopy&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Good 👍&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;itemsCopy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#11-write-linear-code"&gt;
  &lt;/a&gt;
  11. Write linear code
&lt;/h2&gt;

&lt;p&gt;Nested code is hard to understand. &lt;strong&gt;Always write the linear code as much as possible&lt;/strong&gt;. It makes our code simple, clean, easy to read, and maintain, thus making developer life easier.&lt;/p&gt;

&lt;p&gt;For Example, &lt;strong&gt;Using promises over callbacks can increase readability multiple times&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12-use-eslint-and-prettier"&gt;
  &lt;/a&gt;
  12. Use ESLint and Prettier
&lt;/h2&gt;

&lt;p&gt;Always &lt;strong&gt;use ESLint and Prettier to enforce common coding styles across teams and developers&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Also try and use JavaScript's latest features to write code, like destructuring, spread operator, async-await, template literals, optional chaining, and more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#13-use-proper-parentheses"&gt;
  &lt;/a&gt;
  13. Use proper parentheses
&lt;/h2&gt;

&lt;p&gt;When working with operators, enclose them in parentheses. The only exception is the standard arithmetic operators: +, -, and ** since their precedence is broadly understood. It is highly recommended to enclose /, *, and % in parentheses because their precedence can be ambiguous when they are used together.&lt;/p&gt;

&lt;p&gt;This improves readability and clarifies the developer’s intention.&lt;/p&gt;

&lt;p&gt;Bad 👎&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Good 👍&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure your code doesn't lead to situations like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AB5vWR_9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629615495694/1NR4N-cND.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AB5vWR_9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629615495694/1NR4N-cND.png" alt="Bad.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#14-return-early-from-functions"&gt;
  &lt;/a&gt;
  14. Return early from functions
&lt;/h2&gt;

&lt;p&gt;To avoid deep nesting of if-statements, always return a function's value as early as possible.&lt;/p&gt;

&lt;p&gt;Bad 👎&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isPercentage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Good 👍&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isPercentage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This particular example can even improve further:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isPercentage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;isInRange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;isInRange&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Similarly, the same thing can be applied to Loops as well.&lt;/p&gt;

&lt;p&gt;Looping over large cycles can surely consume a lot of time. That is why you should always try to break out of a loop as early as possible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;There’s a saying in the development community that you should always write your code like the next developer that comes after you is a serial killer.&lt;/p&gt;

&lt;p&gt;Following this rule, I have shared 15 tips here that can (probably) save you from your fellow developers when they will look into your code.&lt;/p&gt;

&lt;p&gt;If you find any updates or corrections to improve these 15 tips or want to add one of your own that you think can be helpful, please feel free to share them in the comments.&lt;/p&gt;

&lt;p&gt;For further reading I would highly suggest you go through these 3 resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://github.com/airbnb/javascript"&gt;Airbnb JS style guide&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://google.github.io/styleguide/jsguide.html"&gt;Google JS style guide&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;Javascript Clean Code&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#starting-out-in-web-development"&gt;
  &lt;/a&gt;
  Starting out in web development?? 💻
&lt;/h3&gt;

&lt;p&gt;Checkout ▶ &lt;a href="https://gumroad.com/a/316675187"&gt;HTML To React: The Ultimate Guide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This ebook is a comprehensive guide that teaches you &lt;strong&gt;everything you need to know to be a web developer through a ton of easy-to-understand examples and proven roadmaps&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It contains 👇&lt;/p&gt;

&lt;p&gt;✅  Straight to the point explanations&lt;/p&gt;

&lt;p&gt;✅  Simple code examples&lt;/p&gt;

&lt;p&gt;✅  50+ Interesting project ideas&lt;/p&gt;

&lt;p&gt;✅  3 Checklists of secret resources&lt;/p&gt;

&lt;p&gt;✅  A Bonus Interview prep&lt;/p&gt;

&lt;p&gt;You can even check out &lt;a href="https://drive.google.com/drive/u/0/folders/1GJECqmBUbOwgg5eQvGlMwHcDShqxKISJ"&gt;a free sample from this book&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and here's the &lt;a href="https://gumroad.com/a/316675187"&gt;link&lt;/a&gt; with 60% off on the original price on the complete book set ⬇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gumroad.com/a/316675187"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GvQd_5ED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618289289910/D--w2qaO3h.png" alt="eBook.png"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>6 Best Resources to Crack Kubernetes Application Developer Certification (CKAD) in 2021</title>
      <author>javinpaul</author>
      <pubDate>Sun, 22 Aug 2021 10:02:36 +0000</pubDate>
      <link>https://dev.to/javinpaul/6-best-resources-to-crack-kubernetes-application-developer-certification-ckad-in-2021-5c46</link>
      <guid>https://dev.to/javinpaul/6-best-resources-to-crack-kubernetes-application-developer-certification-ckad-in-2021-5c46</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hello devs, if you are preparing for Kubernetes Application developer certification in 2021 or want to become a Certified Kubernetes Application developer (CKAD) 2021 and looking for the best online resources to prepare for this certification then you have come to the right place. &lt;/p&gt;

&lt;p&gt;Earlier, I have shared the best courses to learn &lt;a href="https://javarevisited.blogspot.com/2020/06/top-5-courses-to-learn-kubernetes-for-devops-and-certification.html"&gt;Kubernetes&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2019/05/top-5-courses-to-learn-docker-and-kubernetes-for-devops.html"&gt;Docker&lt;/a&gt;, and &lt;a href="https://javarevisited.blogspot.com/2020/09/top-5-courses-to-become-certified-Kubernetes-administrator-KCA.html"&gt;CKA courses&lt;/a&gt;, and today, I am going to share the best online courses, guides, and learning material to crack the Kubernetes Developer certification, also known as the CKAD. &lt;/p&gt;

&lt;p&gt;The most challenging thing about Kubernetes certification is that its an hands-on exam and you need solid experience and knowledge to pass this Kubernetes Developer certification.&lt;/p&gt;

&lt;p&gt;You actually need to demonstrate your Kubernetes skills in a command-line environment and you just can't do that by mugging up concept, you need to really know how things work and how to use them to pass this prestigious certification but all the efforts to crack this certification is worth it.&lt;/p&gt;

&lt;p&gt;The demand for Kubernetes application developers has increased significantly in recent years. Kubernetes is a new trend in the computer application community. &lt;/p&gt;

&lt;p&gt;When it comes to certification, there are two main Kubernetes certification available in the market:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Certified Kubernetes Application Developer &lt;a href="https://medium.com/javarevisited/10-best-kubernetes-courses-for-developers-and-devops-engineers-94c35cd3a2fd"&gt;CKAD&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Certified Kubernetes Administrator &lt;a href="https://medium.com/javarevisited/6-best-certified-kubernetes-administrator-courses-and-practice-tests-to-crack-cka-exam-46a14549720f"&gt;CKA&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The Certified Kubernetes Application Developer, also known as CKAD is a certification developed by Cloud Native Computing Foundation and Linux foundation to promotes this new technology.&lt;/p&gt;

&lt;p&gt;Kubernetes is new but it is expanding year by year. The cloud-native computing foundation is trying to expand the technology so that more people can join. &lt;/p&gt;

&lt;p&gt;Through the &lt;a href="https://www.cncf.io/certification/ckad/"&gt;CKAD program&lt;/a&gt;, the foundation is helping organizations all over the world in hiring quality Kubernetes application developers.&lt;/p&gt;

&lt;p&gt;CKAD certification is a valuable certification. It is highly recognized in the job market. The certification will surely help you grab a decent job as a &lt;a href="https://medium.com/javarevisited/top-15-online-courses-to-learn-docker-kubernetes-and-aws-for-fullstack-developers-and-devops-d8cc4f16e773"&gt;Kubernetes application developer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But it is a high-level exam that requires proper guidance and understanding of various Kubernetes concepts. In this article, we will list the top five Certified Kubernetes Application Developer (CKAD) courses which will help you clear the certification.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#best-courses-amp-guide-for-kubernetes-application-developer-certification"&gt;
  &lt;/a&gt;
  Best Courses &amp;amp; Guide for Kubernetes Application Developer Certification
&lt;/h2&gt;

&lt;p&gt;Here is the list of best online courses to pass the  Kubernetes Application Developer (CKAD) Exam in 2021. This list includes both beginners and advanced level courses to get you started and master the key topics for the exam. &lt;/p&gt;

&lt;p&gt;These are the best and most affordable online courses from &lt;a href="https://javarevisited.blogspot.com/2018/01/top-10-udemy-courses-for-java-and-web-developers.html"&gt;Udemy&lt;/a&gt;, &lt;a href="https://medium.com/javarevisited/top-10-javascript-courses-from-pluralsight-to-learn-in-2021-26352abe4fcd"&gt;Pluralsight&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2021/05/15-free-coursera-courses-to-learn-online.html"&gt;Coursera&lt;/a&gt;, and &lt;a href="https://javarevisited.blogspot.com/2017/07/entuware-or-whizlabs-which-exam-simulator-best-for-java-certification.html"&gt;Whizlabs&lt;/a&gt; and help you to prepare for key exam topics that are tested during the certification exam.&lt;/p&gt;

&lt;p&gt;You will not only learn Kubernetes in-depth but also become a Certified  Kubernetes Application Developer (CKAD) which is a great skill to add to your resume in this cloud computing era.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-kubernetes-certified-application-developer-ckad-with-tests-udemy"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fcertified-kubernetes-application-developer%2F"&gt;Kubernetes Certified Application Developer (CKAD) with Tests - Udemy&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is one of the best and certainly the most popular CKAD course at Udemy. It is a sever-hour long course with sixty-two well-organized articles.&lt;/p&gt;

&lt;p&gt;The course covers topics such as designing and deploying applications on clusters, developing cloud-first applications, securing Kubernetes cluster with network policies, creating and scheduling jobs, configuring persistent volumes and readiness and liveness probes, and troubleshooting applications deployed using logs and more.&lt;/p&gt;

&lt;p&gt;Requirements&lt;br&gt;
1. System administration&lt;br&gt;
2. Knowledge of application development using python.&lt;br&gt;
3. Basics of Kubernetes.&lt;/p&gt;

&lt;p&gt;The best thing about this course is that it also comes with practice tests which you can use to asses your kubernetes knowledge as well as find your strong and weak areas to work upon. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fcertified-kubernetes-application-developer%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Jngl1FT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-XAjLCZJHnGo/X1JC1a77VpI/AAAAAAAAi_w/_b53LMe8KGUO8EhiaZttj54YjHDD2-6wwCLcBGAsYHQ/s400/Kubernetes%252BCertified%252BApplication%252BDeveloper%252B%252528CKAD%252529%252Bwith%252BTests%252B-%252BUdemy%252Bbest%252Bcourse.jpg" alt="Top 5 Courses to Crack Certified Kubernetes Application Developer (CKAD) Exam in 2020"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;--&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#2-certified-kubernetes-application-developer-2021-udemy"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fmastering-certified-kubernetes-application-developer%2F"&gt;Certified Kubernetes Application Developer 2021 - Udemy&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;With over four thousand students, "Certified Kubernetes Application Developer 2021" is another popular course at &lt;a href="https://javarevisited.blogspot.com/2019/10/udemy-vs-pluralsight-review-which-is-better-to-learn-code.html"&gt;Udemy&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;The course is specifically designed for those who want to clear the CKAD program. It is a long course with total video content of ten hours.&lt;/p&gt;

&lt;p&gt;The course explains strong Kubernetes fundamentals, and how to deploy Kubernetes applications. Moreover, the course is specifically designed to prepare an individual for the CKAD examination.&lt;/p&gt;

&lt;p&gt;Requirements&lt;br&gt;
1. Knowledge of &lt;a href="https://medium.com/javarevisited/top-5-free-courses-to-learn-docker-for-beginners-best-of-lot-b2b1ad2b98ad"&gt;Docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you somehow don't find the first course interesting or not able to connect to the instructor, which is very unlikely then you can explore this course. It's also focused on the Kubernetes application developer and covers all exam topics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fmastering-certified-kubernetes-application-developer%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gSCqqH9i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-6jg3qquWKwQ/X1JCuCZvidI/AAAAAAAAi_s/xPTpXWcdJlAlhSkxbVLTxJUig4n7tWuHwCLcBGAsYHQ/s400/Certified%252BKubernetes%252BApplication%252BDeveloper%252B2020%252B-%252BUdemy%252Bbest%252Bcourse.jpg" alt="best Kubernetes Application developer course on Udemy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;--&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#3-certified-kubernetes-application-developer-ckad-whizlabs"&gt;
  &lt;/a&gt;
  3. &lt;a href="http://shrsl.com/2h59b"&gt;Certified Kubernetes Application Developer (CKAD)&lt;/a&gt; - Whizlabs
&lt;/h3&gt;

&lt;p&gt;This is a new course at whizlabs that cover all the necessary concepts required to clear Certified Kubernetes Application Developer (CKAD) examination.&lt;/p&gt;

&lt;p&gt;The course is divided into various sections. These sections are - core concepts, services and networking, Pod design, state persistence, configuration, observability, and multi-container pods. Moreover, in the end, it has a separate section that describes how to take the examination properly.&lt;/p&gt;

&lt;p&gt;Requirements&lt;br&gt;
1. Basic knowledge of Kubernetes.&lt;/p&gt;

&lt;p&gt;The course contains 37 lectures which are cover in seven hours. It offers unlimited access and can be accessed on different devices such as PC, Mac, iPad, iPhone, and Android. This is the best course at whizlabs.&lt;/p&gt;

&lt;p&gt;By the way, if you are preparing for IT certification, I highly recommend you to take &lt;a href="https://shareasale.com/r.cfm?b=1551042&amp;amp;u=880419&amp;amp;m=43514&amp;amp;urllink=&amp;amp;afftrack="&gt;&lt;strong&gt;Whizlabs subscription&lt;/strong&gt;&lt;/a&gt; which provides full access to all of their online training courses, hands-on labs, and practice test of different certifications like AWS, Java, Cloud, Docker, and Kubernetes with just $99 per annum (50% discount now).&lt;/p&gt;

&lt;p&gt;&lt;a href="http://shrsl.com/2h59b"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JakhBnLC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-eygaENRXOAE/X1JCnWmXQPI/AAAAAAAAi_k/XT4Zr0Tuhic3k3WexThXiEs-SXJmb8WyACLcBGAsYHQ/s400/Certified%252BKubernetes%252BApplication%252BDeveloper%252B%252528CKAD%252529%252B-%252BWhizlabs%252Bbest%252Bcourse.png" alt="best Kubernetes certification course on Whizlabs"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#4-kubernetes-for-developers-core-concepts-pluralsight"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fkubernetes-developers-core-concepts"&gt;Kubernetes for Developers: Core Concepts&lt;/a&gt; - Pluralsight
&lt;/h3&gt;

&lt;p&gt;This is the best course at Pluralsight for those who want to learn the core Kubernetes concepts to clear the Certified Kubernetes Application Developer (CKAD) examination. The course is particularly focused on the developer's role in &lt;a href="https://medium.com/javarevisited/7-free-online-courses-to-learn-kubernetes-in-2020-3b8a68ec7abc"&gt;Kubernetes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It covers the responsibilities of a developer, such as creating pods, deployments, services, configMaps, secrets, and understanding storage options.&lt;/p&gt;

&lt;p&gt;Requirements\&lt;br&gt;
1. Basic knowledge of Kubernetes is recommended.&lt;/p&gt;

&lt;p&gt;It is a beginner level course, so anyone can take it. The core concepts are very important to clear the &lt;a href="https://medium.com/javarevisited/10-best-it-certifications-for-java-developers-5b4a78e3605d"&gt;CKAD examination&lt;/a&gt;. This four-hour long course is specifically designed to explain the core concepts of Kubernetes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fkubernetes-developers-core-concepts"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jo0YlSZJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-JA7FT7KYrvc/X1I_4txlyLI/AAAAAAAAi-U/TEg4mMieWlE4h1V9HIp2yEaf0Zx7bHVjwCLcBGAsYHQ/s400/Best%252Bcourses%252Bto%252Blearn%252BKubernetes%252BPluralsight.png" alt="best Kubernetes Application developer certification course on Pluralsight"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#5-how-to-pass-cka-ckad-with-flying-colors-kubernetes-ultimate-preparation-guide-21-tips"&gt;
  &lt;/a&gt;
  5. How to Pass CKA, CKAD with Flying Colors? Kubernetes Ultimate Preparation Guide (21 Tips)
&lt;/h3&gt;

&lt;p&gt;This is a free Youtube video to learn about how to prepare for Kubernetes certification. Since Kubernetes certification is different than traditional multiple choice or multiple answer certification, going through this guide can really help you. &lt;/p&gt;

&lt;p&gt;This guide is prepared by Dinuth who have passed Certified Kubernetes Application (CKA) with 94% and Certified Kubernetes Application Developer (CKAD) with 99% scores. &lt;/p&gt;

&lt;p&gt;Based upon his own experience, he has created this Ultimate Preparation Guide for Kubernetes certifications. &lt;/p&gt;

&lt;p&gt;Here are the main topics you should prepare for &lt;/p&gt;

&lt;p&gt;13% – Core Concepts &lt;br&gt;
18% – Configuration&lt;br&gt;
10% – Multi-Container Pods&lt;br&gt;
20% – Pod Design&lt;br&gt;
13% – Services &amp;amp; Networking &lt;br&gt;
8% – State Persistence&lt;br&gt;
18% – Observability&lt;/p&gt;

&lt;p&gt;You can watch those short videos to prepare for those specific topics, and here is the complete video guide from youtube which you can watch right here or on Youtube:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/TJSAcwUP0pE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#6-kubernetes-for-developers-integrating-volumes-and-using-multicontainer-pods-pluralsight"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fkubernetes-developers-integrating-volumes-using-multi-container-pods"&gt;Kubernetes for Developers: Integrating Volumes and Using Multi-container Pods&lt;/a&gt; - Pluralsight
&lt;/h3&gt;

&lt;p&gt;This is another popular course at &lt;a href="https://medium.com/javarevisited/pluralsight-or-udemy-d9a94d2e8ee"&gt;Pluralsight&lt;/a&gt; which created for developers. This is an advanced level course and suited for intermediate and experienced Kubernetes developers. &lt;/p&gt;

&lt;p&gt;Created by Docker captain and one of my favorite instructor Nigel Poulton this course will teach you key Kubernetes concepts.&lt;/p&gt;

&lt;p&gt;Requirements\&lt;br&gt;
1. Fundamentals of Kubernetes.&lt;br&gt;
2. Basic knowledge of Kubernetes.&lt;/p&gt;

&lt;p&gt;Apart from core concepts, integrating volumes and using multi-container pods are two important topics for the Certified Kubernetes Application Developer (CKAD) examination. &lt;/p&gt;

&lt;p&gt;This two-hour long course specifically targets these two topics in depth. So if you want to learn how to integrate volumes and use multi-container pods in detail, this is the best course.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fkubernetes-developers-integrating-volumes-using-multi-container-pods"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r8q7c9IL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pluralsight.imgix.net/course-images/docker-kubernetes-big-picture-v1.png" alt="best Kubernetes Developer Certification course on Pluralsight"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By the way, you would need a &lt;a href="https://medium.com/javarevisited/codecademy-or-pluralsight-which-is-a-better-platform-to-learn-coding-skills-59251a080642"&gt;Pluralsight membership&lt;/a&gt; to join this course which costs around $29 per month or $299 per year (14% discount). I highly recommend this subscription to all programmers as it provides instant access to more than 7000+ online courses to learn any tech skill. &lt;/p&gt;

&lt;p&gt;Alternatively, you can also use their &lt;strong&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;10-day-free-pass&lt;/a&gt;&lt;/strong&gt; to watch this course for FREE.&lt;/p&gt;

&lt;p&gt;That's all about the best online courses to pass the Kubernetes Application Developer certification exam and become a Certified Kubernetes Application Developer. The Certified Kubernetes Application Developers (CKAD) examination is a three-hour-long and it requires a proper understanding of various Kubernetes concepts.&lt;/p&gt;

&lt;p&gt;The courses listed in these articles are some of the best courses you will find on the internet. These courses belong to reputed websites such as Udemy, Whizlabs, and Pluralsight. All of these courses are chosen carefully. So feel free to go through all of them before making the choice.&lt;/p&gt;

&lt;p&gt;Other &lt;strong&gt;DevOps, Cloud, and Programming Courses&lt;/strong&gt; you may like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://medium.com/hackernoon/the-2018-devops-roadmap-31588d8670cb"&gt;The 2021 DevOps Developer RoadMap&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://dev.to/javinpaul/top-10-courses-to-learn-docker-and-kubernetes-for-programmers-4lg0"&gt;10 Docker and Kubernetes Courses for Programmers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.sg/2018/02/10-free-docker-container-courses-for-Java-Developers.html"&gt;10 Free Docker Courses for Java and DevOps Professionals&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/09/top-5-jenkins-courses-for-java-and-DevOps-Programmers.html"&gt;Top 5 Courses to Learn Jenkins for Automation and DevOps&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/04/top-5-course-to-crack-aws-solution-architect-professional-sap-c01-certification-exam.html"&gt;5 Best Courses to Crack AWS Solution Architect Professional Exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/04/how-to-crack-microsoft-azure-fundamentals-certification-az-900-exam.html"&gt;How to Crack Azure Fundamentals (AZ-900) Certification&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/05/top-5-amazon-web-services-aws-courses-for-beginners-and-experienced-programmers.html"&gt;My favorite courses to learn Amazon Web Service&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/04/how-to-crack-microsoft-az-103-azure-administrator-associate-exam-certification.html"&gt;How to become an Azure Certified Administrator Associate?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/02/top-5-AZ-900-exam-Azure-Fundamentals-certification-practice-tests-and-mock-exams-to.html"&gt;Top 5 AZ-900 Practice tests for programmers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/04/how-to-crack-microsoft-azure-solution-architect-exam-az-300.html"&gt;How to Pass the AZ-300 Azure Solution Architect exam?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/07/top-5-google-cloud-platform-gcp-courses-certifications-online.html"&gt;Top 5 Courses to Pass Google Associate Cloud Engineer Certification&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/07/top-5-courses-to-crack-azure-architecture-technologies-certification-az-300-exam.html#axzz6E6VuRMsx"&gt;Top 5 Courses to crack Azure Cloud Architect (AZ-300) Exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/02/top-5-courses-to-crack-aws-certified-cloud-practitioner-exam-certification-clf-c01.html"&gt;Top 5 Courses to pass the AWS Cloud Practitioner Certification&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-amazon-web-services-aws-cloud-in-2020-best-and-free-317f10d7c21d"&gt;10 Free Courses to learn AWS and Cloud for Programmers&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading so far. If you like these Kubernetes Application developers (CKAD) certification courses then please share them with your friends and colleagues. If you have any questions or feedback, then please drop a note.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P. S.&lt;/strong&gt; - If you are new to Kubernetes and looking for a free course to start with then you can also check out this &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fkubernetes-getting-started%2F"&gt;Kubernetes: Getting Started &lt;/a&gt; - a &lt;strong&gt;free course&lt;/strong&gt; on Udemy. It's completely free and all you need is a free Udemy account to enroll in this online training course.&lt;/p&gt;

</description>
      <category>certification</category>
      <category>docker</category>
      <category>kubernetes</category>
      <category>devops</category>
    </item>
    <item>
      <title>Google Tag Manager with Next.js (TypeScript/Bangla)</title>
      <author>Muhid Hossain</author>
      <pubDate>Sun, 22 Aug 2021 09:39:41 +0000</pubDate>
      <link>https://dev.to/muhidhossain/google-tag-manager-with-next-js-typescript-bangla-31gp</link>
      <guid>https://dev.to/muhidhossain/google-tag-manager-with-next-js-typescript-bangla-31gp</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c2u2D-Ve--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2rmywme6kf7m56jmni50.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c2u2D-Ve--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2rmywme6kf7m56jmni50.jpg" alt="Google Tag Manager with Next.js"&gt;&lt;/a&gt;&lt;br&gt;
এই ব্লগটিতে আমরা শিখব কিভাবে &lt;em&gt;Next.js&lt;/em&gt; প্রোজেক্টে গুগল ট্যাগ ম্যানেজার ইমপ্লিমেন্ট করতে হয়।&lt;/p&gt;

&lt;p&gt;এজন্য আমাদের প্রয়োজন হবে,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Next.js&lt;/em&gt; প্রোজেক্ট&lt;/li&gt;
&lt;li&gt;গুগল ট্যাগ ম্যানেজার অ্যাকাউন্ট&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#%E0%A6%A7%E0%A6%BE%E0%A6%AA%E0%A6%B8%E0%A6%AE%E0%A7%82%E0%A6%B9"&gt;
  &lt;/a&gt;
  ধাপসমূহ
&lt;/h4&gt;

&lt;p&gt;১/ &lt;em&gt;.env&lt;/em&gt; ফাইলে গুগল ট্যাগ ম্যানেজার আইডি ডিফাইন করা&lt;br&gt;
২/ &lt;em&gt;pages&lt;/em&gt; ফোল্ডার এর মধ্যে &lt;em&gt;_document.tsx&lt;/em&gt; ফাইল তৈরি করা&lt;br&gt;
৩/ &lt;em&gt;lib/gtm/index.tsx&lt;/em&gt; ফাইল তৈরি করে প্রয়োজনীয় ফাংশন ডিফাইন করা&lt;br&gt;
৪/ &lt;em&gt;_app.tsx&lt;/em&gt; ফাইলে রাউট পরিবর্তন ট্র্যাক করা&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#%E0%A7%A7%E0%A6%AE-%E0%A6%A7%E0%A6%BE%E0%A6%AA%E0%A6%83"&gt;
  &lt;/a&gt;
  ১ম ধাপঃ
&lt;/h4&gt;

&lt;p&gt;রুট ডিরেক্টরিতে &lt;em&gt;.env&lt;/em&gt; ফাইলর মধ্যে আপনার প্রোজেক্টের গুগল ট্যাগ ম্যানেজার আইডি অ্যাড করুন।&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
GTM-XXXXXXX এর স্থলে আপানর গুগল ট্যাগ ম্যানেজার আইডি লিখুন।
&lt;h4&gt;
  &lt;a href="#%E0%A7%A8%E0%A7%9F-%E0%A6%A7%E0%A6%BE%E0%A6%AA%E0%A6%83"&gt;
  &lt;/a&gt;
  ২য় ধাপঃ
&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;pages&lt;/em&gt; ফোল্ডারের মধ্যে &lt;em&gt;_document.tsx&lt;/em&gt; ফাইল তৈরি করে গুগল ট্যাগ ম্যানেজার কনফিগার করুন।&lt;/p&gt;

&lt;p&gt;&lt;em&gt;_document.tsx&lt;/em&gt; সম্পর্কে বিস্তারিত জানতে &lt;em&gt;&lt;a href="https://nextjs.org/docs/advanced-features/custom-document"&gt;Next.js documentation&lt;/a&gt;&lt;/em&gt; পড়তে পারেন।&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h4&gt;
  &lt;a href="#%E0%A6%B8%E0%A6%AE%E0%A6%B8%E0%A7%8D%E0%A6%AF%E0%A6%BE%E0%A6%83"&gt;
  &lt;/a&gt;
  সমস্যাঃ
&lt;/h4&gt;

&lt;p&gt;গুগল ট্যাগ ম্যানেজার শুধুমাত্র পেইজ রিলোড করলে ট্যাগ ফায়ার করে। যেহেতু &lt;em&gt;React/Next.js&lt;/em&gt; এরমতো সিঙ্গেল পেইজ অ্যাপ্লিকেশানে রাউট পরিবর্তন হলেও পেইজ রিলোড হয় না। ফলে প্রথমবার ওয়েবসাইটে ঢুকলে ট্যাগ ফায়ার হয় পরবর্তীতে রাউট পরিবর্তন করলেও ট্যাগ ফায়ার হয় না।&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#%E0%A6%B8%E0%A6%AE%E0%A6%BE%E0%A6%A7%E0%A6%BE%E0%A6%A8%E0%A6%83"&gt;
  &lt;/a&gt;
  সমাধানঃ
&lt;/h4&gt;

&lt;p&gt;এই সমস্যার থেকে পরিত্রান পাওয়ার জন্য আমাদেরকে ম্যানুয়াল ভাবে প্রতিবার রাউট পরিবর্তন হলে নিম্নউক্ত &lt;em&gt;pageview&lt;/em&gt; ফাংশন কল করতে হবে এবং গুগল ট্যাগে হিস্টরি চেইঞ্জ ট্রিগার অ্যাড করতে হবে।&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#%E0%A6%B9%E0%A6%BF%E0%A6%B8%E0%A7%8D%E0%A6%9F%E0%A6%B0%E0%A6%BF-%E0%A6%9A%E0%A7%87%E0%A6%87%E0%A6%9E%E0%A7%8D%E0%A6%9C%E0%A7%87-%E0%A6%9F%E0%A7%8D%E0%A6%B0%E0%A6%BF%E0%A6%97%E0%A6%BE%E0%A6%B0%E0%A6%83-documentation"&gt;
  &lt;/a&gt;
  হিস্টরি চেইঞ্জে ট্রিগারঃ &lt;em&gt;&lt;a href="https://support.google.com/tagmanager/answer/7679322?hl=en"&gt;documentation&lt;/a&gt;&lt;/em&gt;
&lt;/h6&gt;

&lt;h4&gt;
  &lt;a href="#%E0%A7%A9%E0%A7%9F-%E0%A6%A7%E0%A6%BE%E0%A6%AA%E0%A6%83"&gt;
  &lt;/a&gt;
  ৩য় ধাপঃ
&lt;/h4&gt;

&lt;p&gt;রুট ডিরেক্টরিতে &lt;em&gt;lib/gtm&lt;/em&gt; ফোল্ডার তৈরি করে তার মধ্যে &lt;em&gt;index.tsx&lt;/em&gt; ফাইল তৈরি করুন এবং &lt;em&gt;pageviews&lt;/em&gt; এবং &lt;em&gt;events&lt;/em&gt; ট্রাক করার জন্য কাস্টমে ফাংশন লিখুন।&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h4&gt;
  &lt;a href="#%E0%A7%AA%E0%A7%9F-%E0%A6%A7%E0%A6%BE%E0%A6%AA%E0%A6%83"&gt;
  &lt;/a&gt;
  ৪য় ধাপঃ
&lt;/h4&gt;

&lt;p&gt;এখন রাউট পরিবর্তনে pageview ফাংশন কল করার জন্য _app.tsx ফাইলে useEffect হুক ব্যবহার করুন।&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
ব্যাস হয়ে গেলো ইমপ্লিমেন্টেশন।

</description>
      <category>nextjs</category>
      <category>typescript</category>
      <category>gtm</category>
      <category>bangla</category>
    </item>
    <item>
      <title>Use Babel to parse Vue.js SFC</title>
      <author>JuniorTour</author>
      <pubDate>Sun, 22 Aug 2021 09:11:31 +0000</pubDate>
      <link>https://dev.to/juniortour/use-babel-to-parse-vue-js-sfc-coe</link>
      <guid>https://dev.to/juniortour/use-babel-to-parse-vue-js-sfc-coe</guid>
      <description>&lt;h2&gt;
  &lt;a href="#github-repo-vuetemplatebabelcompiler"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/JuniorTour/vue-template-babel-compiler"&gt;Github Repo: vue-template-babel-compiler&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Enable &lt;code&gt;Optional Chaining(?.)&lt;/code&gt;, &lt;code&gt;Nullish Coalescing(??)&lt;/code&gt; and many new ES syntax for &lt;a href="https://vuejs.org/v2/guide/single-file-components.html"&gt;Vue.js SFC&lt;/a&gt; based on &lt;a href="https://babeljs.io/"&gt;Babel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://www.npmjs.com/package/vue-template-babel-compiler"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8I5SW19R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/npm/dt/vue-template-babel-compiler" alt="Downloads"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.npmjs.com/package/vue-template-babel-compiler"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C-0TK2Hx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/npm/v/vue-template-babel-compiler.svg%3Fsanitize%3Dtrue" alt="Version"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/JuniorTour/vue-template-babel-compiler"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dbsqj5zf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/github/last-commit/JuniorTour/vue-template-babel-compiler%3Fsanitize%3Dtrue" alt="LastCommit"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  DEMO
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o0Iw5-ra--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/14243906/127761300-076db45a-cdce-4fda-bd02-1f4fa96de6d8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o0Iw5-ra--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/14243906/127761300-076db45a-cdce-4fda-bd02-1f4fa96de6d8.png" alt="DEMO"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;All features of &lt;a href="https://github.com/vuejs/vue/tree/dev/packages/vue-template-compiler#readme"&gt;vue-template-compiler&lt;/a&gt; &amp;amp;&amp;amp; &lt;a href="https://github.com/vuejs/vue-template-es2015-compiler"&gt;vue-template-es2015-compiler&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;new ES syntax: &lt;code&gt;Optional Chaining&lt;/code&gt;, &lt;code&gt;Bigint&lt;/code&gt;, &lt;code&gt;Nullish Coalescing&lt;/code&gt; and more&lt;/li&gt;
&lt;li&gt;Customization syntax, babel plugin...&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-install"&gt;
  &lt;/a&gt;
  1. Install
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;vue-template-babel-compiler &lt;span class="nt"&gt;--save-dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-config"&gt;
  &lt;/a&gt;
  2. Config
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#1-vuecli"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader"&gt;Vue-CLI&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://github.com/JuniorTour/vue-template-babel-compiler-vue-cli-project"&gt;DEMO project for Vue-CLI&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// vue.config.js&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;chainWebpack&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-loader&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;compiler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-template-babel-compiler&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#2-nuxtjs"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://nuxtjs.org/docs/2.x/features/configuration#extend-webpack-to-load-audio-files"&gt;Nuxt.js&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://github.com/JuniorTour/vue-template-babel-compiler-nuxt-project"&gt;DEMO project for Nuxt.js&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// nuxt.config.js&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Build Configuration: https://go.nuxtjs.dev/config-build&lt;/span&gt;
  &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;loaders&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;vue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;compiler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-template-babel-compiler&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#3-webpack"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader"&gt;Webpack&lt;/a&gt;
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// your webpack.config.js where config vue-loader&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
  &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;vue$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-loader&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;compiler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-template-babel-compiler&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#api"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/JuniorTour/vue-template-babel-compiler/blob/main/doc/API.md"&gt;API&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#welcome-for-issues-ampamp-pr"&gt;
  &lt;/a&gt;
  Welcome for Issues &amp;amp;&amp;amp; PR.
&lt;/h3&gt;

</description>
    </item>
    <item>
      <title>Online whiteboards, Participant recruiting &amp; screening, Remote research, Sitemap builder &amp; Wireframing Tools | UX</title>
      <author>Eleftheria Batsou</author>
      <pubDate>Sun, 22 Aug 2021 09:03:41 +0000</pubDate>
      <link>https://dev.to/eleftheriabatsou/online-whiteboards-participant-recruiting-screening-remote-research-sitemap-builder-wireframing-tools-ux-561k</link>
      <guid>https://dev.to/eleftheriabatsou/online-whiteboards-participant-recruiting-screening-remote-research-sitemap-builder-wireframing-tools-ux-561k</guid>
      <description>&lt;p&gt;&lt;strong&gt;More than 60 free or paid tools to leverage in your next.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this UX series, I write about trusty UX tools I have used, or I’ve heard good things about or you folks have suggested.&lt;/p&gt;

&lt;p&gt;In my previous &lt;a href="https://blog.eleftheriabatsou.com/series/ux-tools"&gt;articles&lt;/a&gt;, I focused on the categories: automated UX analysis, analytics, accessibility, diagramming, card sorting, data visualization, evaluating design, interaction and Interface design, intercept surveys, live chat with users, mobile testing, mockups, mouse/eye tracking, etc.&lt;/p&gt;

&lt;p&gt;In this article, I will focus on: Online whiteboards, Participant recruiting, scheduling &amp;amp; screening, Presentation, Process aids, Project Management, Recruiting users, Remote research, Session Replay, Site map builder, User flows, User feedback &amp;amp; Wireframing tools.&lt;/p&gt;

&lt;p&gt;This time as you'll see we have more categories and fewer tools. If you are reading this &lt;a href="https://blog.eleftheriabatsou.com/series/ux-tools"&gt;series&lt;/a&gt;, a lot of the tools should be familiar to you, but of course we have some new and free ones!&lt;/p&gt;

&lt;p&gt;Let's start 😎.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#online-whiteboards"&gt;
  &lt;/a&gt;
  Online whiteboards
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#1-milanote"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://milanote.com/"&gt;Milanote&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yGBKxEld--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629460195518/2lZ61ivwa.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yGBKxEld--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629460195518/2lZ61ivwa.jpeg" alt="milanote-logo.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It can also be used for:&lt;/strong&gt; Collaboration, Project Management, Online Whiteboards  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost:&lt;/strong&gt; Free+ &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it do best:&lt;/strong&gt; A tool for organizing creative projects into visual boards. It is a great fit for designers who work in teams remotely.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Get organized. Stay creative. Milanote is an easy-to-use tool to organize your ideas and projects into visual boards.- By milanote.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#2miro"&gt;
  &lt;/a&gt;
  2.&lt;a href="https://miro.com/"&gt;miro&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C-4JRkJ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629460223860/PfALw844g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C-4JRkJ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629460223860/PfALw844g.png" alt="miro.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It can also be used for:&lt;/strong&gt; Collaboration, Online Whiteboards  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost:&lt;/strong&gt; Free+ &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it do best:&lt;/strong&gt; A visual collaboration platform and online meeting space and whiteboard to centralise communication between collocated, distributed, or remote teams across formats, tools, channels, and time zones.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The online collaborative whiteboard platform to bring teams together, anytime, anywhere. - By miro.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#3-mural"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://www.mural.co/"&gt;Mural&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6HDP8xOR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629460235209/_xQt-FPsI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6HDP8xOR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629460235209/_xQt-FPsI.png" alt="mural.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It can also be used for:&lt;/strong&gt; Research Notetaking, Collaboration, Online Whiteboards     &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost:&lt;/strong&gt; $12+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it do best:&lt;/strong&gt; An online whiteboard for small and medium sized companies and teams that need to collaborate visually. Drag and drop sticky notes, images links and documents.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Let’s transform teamwork. Discover digital-first visual collaboration with MURAL. More than an online whiteboard, where everyone contributes equally and hard problems are solved faster. - By mural.co&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#participant-recruiting-scheduling-amp-screening"&gt;
  &lt;/a&gt;
  Participant recruiting, scheduling &amp;amp; screening
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#4-user-interviews"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://www.userinterviews.com/"&gt;User Interviews&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wmdWJega--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629460829954/SYume39k_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wmdWJega--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629460829954/SYume39k_.png" alt="user interviews.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It can also be used for:&lt;/strong&gt;    Research, Design Research, Participant Recruiting, Remote Research      &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost:&lt;/strong&gt; Free+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it do best:&lt;/strong&gt; Find participants for any kind of research, or talk to your own users faster. Use Recruit to source from the User Interviews pool of 400,000+ participants, or use Research Hub to talk to your own users in 75% less time.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The fastest way to recruit research participants. Make better product decisions with seamless access to quality participants. Get fast, targeted access to our diverse audience of over 400,000 vetted professionals and consumers. Talk to your users simply and consistently with CRM and automations to build an ongoing customer research habit. - By userinterviews.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Similar tools that we've &lt;a href="https://blog.eleftheriabatsou.com/series/ux-tools"&gt;seen&lt;/a&gt; before are:&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-arcs-automated-recruiting-and-communication-system"&gt;
  &lt;/a&gt;
  5. &lt;a href="http://www.m-s-g.com/Pages/arcs"&gt;ARCS – Automated Recruiting and Communication System&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#6-ethnio"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://ethn.io/"&gt;Ethnio&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#7-userlytics"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://www.userlytics.com/"&gt;Userlytics&lt;/a&gt;
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#presentations"&gt;
  &lt;/a&gt;
  Presentations
&lt;/h1&gt;

&lt;p&gt;In this category, we have a plethora of tools and to be honest, probably you already have a favorite one! Nevertheless, let's check some more :)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-canva"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://www.canva.com/en_gb/"&gt;canva&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#9-keynote"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://www.apple.com/keynote/"&gt;keynote&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#10-ux-pressia"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://uxpressia.com/"&gt;UX Pressia&lt;/a&gt;
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#process-aids"&gt;
  &lt;/a&gt;
  Process Aids
&lt;/h1&gt;

&lt;p&gt;I have only 2 known tools in this category, so if you know more feel free to share them in the comments!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#11-enjoyhq"&gt;
  &lt;/a&gt;
  11. &lt;a href="https://getenjoyhq.com/"&gt;EnjoyHQ&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#12-reframer"&gt;
  &lt;/a&gt;
  12. &lt;a href="https://www.optimalworkshop.com/reframer/"&gt;reframer&lt;/a&gt;
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#project-management"&gt;
  &lt;/a&gt;
  Project Management
&lt;/h1&gt;

&lt;p&gt;If you have worked professionally as a developer in a team you most luckily know Jira, hence I won't include it in this list (plus Jira is more focused on developers rather than designers and researchers).&lt;/p&gt;

&lt;p&gt;Let's go with 3 tools from the past:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#13-trello"&gt;
  &lt;/a&gt;
  13. &lt;a href="https://trello.com/"&gt;Trello&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#14-zendesk"&gt;
  &lt;/a&gt;
  14. &lt;a href="https://www.zendesk.com/service/messaging/live-chat/?from=zp"&gt;ZenDesk&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#15-milanote"&gt;
  &lt;/a&gt;
  15. &lt;a href="https://milanote.com/"&gt;Milanote&lt;/a&gt;
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#recruiting-users"&gt;
  &lt;/a&gt;
  Recruiting users
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#16-clarity"&gt;
  &lt;/a&gt;
  16. &lt;a href="https://clarity.fm/"&gt;clarity&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3iiZ_-Y0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629462123938/xDmYQqd-w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3iiZ_-Y0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629462123938/xDmYQqd-w.png" alt="clarity.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It can also be used for:&lt;/strong&gt;    Recruiting Users, Subject Matter Experts        &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost:&lt;/strong&gt; $1+ (check the website for more info about the price!)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it do best:&lt;/strong&gt; Get expert advice for digital and business related problems. Browse for experts by topic, request a call with them, and connect directly with them. Calls are charged by length.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;How it works: 1-Find an Expert, Browse our community of experts to find the right one for you. 2-Request a Call, At this time, you will be pre-charged for the estimated length of the call, based on the expert's per-minute rate. 3-Connect Directly, Call the conference line provided. After the call, the charge will be adjusted to reflect the actual length of the call.- By clarity.fm&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Note: I haven't used this tool, but it seems interesting!&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#remote-research"&gt;
  &lt;/a&gt;
  Remote research
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#17pickfu"&gt;
  &lt;/a&gt;
  17.&lt;a href="https://www.pickfu.com/"&gt;PickFu&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tM5QdTo8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629475662674/pfBtHjKSX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tM5QdTo8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629475662674/pfBtHjKSX.png" alt="pickfu-logo.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It can also be used for:&lt;/strong&gt;    Remote Research, Surveying Users        &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost:&lt;/strong&gt; Free+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it do best:&lt;/strong&gt; Validate ideas, designs, and messaging in a lean way.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Seek the wisdom of the crowd. PickFu is a do-it-yourself online platform that unlocks powerful consumer research. In just minutes, you can crowdsource hundreds of opinions from the people who matter most to your business. - By pickfu.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#18try-my-ui"&gt;
  &lt;/a&gt;
  18.&lt;a href="https://www.trymyui.com/"&gt;Try my UI&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AYfig8WQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629475675888/8nmqcfSZf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AYfig8WQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629475675888/8nmqcfSZf.png" alt="trymyui.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It can also be used for:&lt;/strong&gt;    Remote Research, Usability Testing      &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost:&lt;/strong&gt; Free+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it do best:&lt;/strong&gt; Self-moderated. Hear what users are thinking as they use your site with a narrated video as they perform the tasks you want.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Set up your test. Write a list of tasks you want users to perform on your website. Pick your target user. Choose from a wide array of demographic factors to find the right users. Watch the video. Collect videos to hear what users are thinking and see where they’re getting stuck. - By trymyui.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#19uxcloud"&gt;
  &lt;/a&gt;
  19.&lt;a href="https://uxcloud.us/"&gt;UXcloud&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WuGPziaG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629475690925/WDyNzA_GD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WuGPziaG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629475690925/WDyNzA_GD.png" alt="ico.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It can also be used for:&lt;/strong&gt;    Remote Research, Usability Testing      &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost:&lt;/strong&gt; $50+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it do best:&lt;/strong&gt; Online platform for remote, moderated usability testing with .MP4 video recording and integrated screen sharing.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;UXCloud makes remotely moderated usability testing easy with .MP4 recording and screen sharing integrated into a single cloud-based platform. Test websites and application software on any desktop OS. Test mobile apps on Android and Apple IOS. Remote observers can securely join sessions using desktop computers or mobile devices. Take notes, chat with other observers, and identify and "+1" design ideas collaboratively. Record and store MP4 session videos in the cloud. Create downloadable MP4 highlight clips in the cloud. Export notes and design ideas to Excel spreadsheet. - By uxcloud.us&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#20ux-testing"&gt;
  &lt;/a&gt;
  20.&lt;a href="https://www.uxtesting.io/"&gt;UX testing&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T2Ls7thJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629475718029/OAd17s9gV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T2Ls7thJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629475718029/OAd17s9gV.png" alt="UXTesting-Logo-Square-Insight-Platforms.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It can also be used for:&lt;/strong&gt;    Remote Research, Usability Testing  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost:&lt;/strong&gt; No Info&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it do best:&lt;/strong&gt; Record and watch videos of real users speaking their thoughts on your website, app, or prototype, with screen capture, facial expressions, comments and touch points.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Get Global User Insights with Reliance. The best User Experience partner trusted by designers and researchers for efficiency, cost-effectiveness and demonstrate the profession.- By uxtesting.io&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Other tools you can use:&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#21-ethnio"&gt;
  &lt;/a&gt;
  21. &lt;a href="https://ethn.io/"&gt;ethnio&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#22-usabilityhub"&gt;
  &lt;/a&gt;
  22. &lt;a href="https://usabilityhub.com/"&gt;UsabilityHub&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#23-user-interviews"&gt;
  &lt;/a&gt;
  23. &lt;a href="https://www.userinterviews.com/"&gt;User Interviews&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#24-user-testing"&gt;
  &lt;/a&gt;
  24. &lt;a href="https://www.usertesting.com/"&gt;User Testing&lt;/a&gt;
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#session-replay"&gt;
  &lt;/a&gt;
  Session Replay
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;One of my favorite categories 🙌&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#25-forsee-verint"&gt;
  &lt;/a&gt;
  25. &lt;a href="https://www.foresee.com/"&gt;Forsee - Verint&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bjm-A5oA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629477668935/8Qrr_0iEW.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bjm-A5oA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629477668935/8Qrr_0iEW.png" alt="foresee-vector-logo.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It can also be used for:&lt;/strong&gt;    Usability Testing, Session Replay       &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost:&lt;/strong&gt; No Info&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it do best:&lt;/strong&gt; A suite of customer journey analysis apps and tools, including text analytics, replay for web and mobile, case management, etc. Measure touchpoints with a unified metric.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Measure and improve the customer experience at every step of the journey.&lt;br&gt;
Empower fast, smart action and move the needle on CSAT and NPS with Verint Experience Management. - By foresee.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#26-livesession"&gt;
  &lt;/a&gt;
  26. &lt;a href="https://livesession.io/"&gt;LiveSession&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QPPD5fFT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629477659646/BVnPVFih6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QPPD5fFT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629477659646/BVnPVFih6.png" alt="logo-new.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It can also be used for:&lt;/strong&gt; Session Replay, Mouse/Eye Tracking &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost:&lt;/strong&gt; $42+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it do best:&lt;/strong&gt; LiveSession is a qualitative analytics solution for websites and web applications. With always-on session recording, it gives you a way to fully understand user behavior. Start getting answers today and improve your conversion rate.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Understand how users really use your website. LiveSession helps you analyze customers’ behavior to improve UX, increase conversion rates and boost revenue. - By livesession.io&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#27-%CE%B7otjar"&gt;
  &lt;/a&gt;
  27. &lt;a href="https://www.hotjar.com/"&gt;Ηotjar&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#28-%CE%B9nspectlet"&gt;
  &lt;/a&gt;
  28. &lt;a href="https://www.inspectlet.com/"&gt;Ιnspectlet&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#29-%CE%BCatomo"&gt;
  &lt;/a&gt;
  29. &lt;a href="https://matomo.org/"&gt;Μatomo&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#30-%CE%BCousestats"&gt;
  &lt;/a&gt;
  30. &lt;a href="https://www.mousestats.com/"&gt;Μousestats&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#31-smartlook"&gt;
  &lt;/a&gt;
  31. &lt;a href="https://www.smartlook.com/"&gt;Smartlook&lt;/a&gt;
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#sitemap-builder"&gt;
  &lt;/a&gt;
  Sitemap Builder
&lt;/h1&gt;

&lt;p&gt;I'm afraid that in this category I also don't have a lot of tools to offer you. Actually, it's only one tool 😮. But it's a good, free and easy-to-use one!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#32-octopus-do"&gt;
  &lt;/a&gt;
  32. &lt;a href="https://octopus.do/"&gt;Octopus do&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FduLhqbN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629479678889/Jyxh8JhS-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FduLhqbN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629479678889/Jyxh8JhS-.png" alt="octopus_do_logo.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It can also be used for:&lt;/strong&gt; Sitemap Builder        &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost:&lt;/strong&gt; Free+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it do best:&lt;/strong&gt; An easy-to-use visual sitemap builder.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;OctopusDo is a lightning-fast visual sitemap builder. Build your website structure in real-time using our Content Brick Method and rapidly share it to collaborate with your team or clients. Start prototyping websites or apps instantly. - By octopus.do&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#user-feedback"&gt;
  &lt;/a&gt;
  User Feedback
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#33-refiner"&gt;
  &lt;/a&gt;
  33. &lt;a href="https://refiner.io/"&gt;Refiner&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;It can also be used for:&lt;/strong&gt; User Feedback, Surveys     &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost:&lt;/strong&gt; Free+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it do best:&lt;/strong&gt; A customer survey tool built specifically for SaaS, eCommerce and Membership sites.   &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Close the customer feedback loop with a survey platform for SaaS. Get more responses with our highly configurable in-app survey widgets, automate actions based on answers, and quickly find gaps in the understanding of your users.- By refiner.io&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#user-flows"&gt;
  &lt;/a&gt;
  User Flows
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#34-flowmapp"&gt;
  &lt;/a&gt;
  34. &lt;a href="https://www.flowmapp.com/"&gt;FlowMapp&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cEgzHOY5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629480129470/62Od73Uun.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cEgzHOY5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629480129470/62Od73Uun.jpeg" alt="fm.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It can also be used for:&lt;/strong&gt;    Information Architecture, User Flows        &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost:&lt;/strong&gt; Free+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it do best:&lt;/strong&gt; An online tool for creating visual sitemaps and user flows.   &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;UX tools for web design. Design exceptional UX for beautiful products, websites, and apps with online collaborative tools.- By flowmapp.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#wireframing"&gt;
  &lt;/a&gt;
  Wireframing
&lt;/h1&gt;

&lt;p&gt;That's an interesting category! We have some new and some old-time classic tools.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#35-gliffy"&gt;
  &lt;/a&gt;
  35. &lt;a href="https://www.gliffy.com/"&gt;gliffy&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y3uSYheR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629480695615/fDeaDWxOP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y3uSYheR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629480695615/fDeaDWxOP.png" alt="gliffy.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It can also be used for:&lt;/strong&gt;    Wireframing, Diagramming        &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost:&lt;/strong&gt; $8+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it do best:&lt;/strong&gt; Drag and drop to create flowcharts, diagrams, wireframes and technical drawings. Comes with hundreds of industry standard shapes and symbols.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Help Your Team Communicate and Collaborate. Gliffy’s enterprise-grade diagramming software allows any team to visually share ideas.- By gliffy.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#36-hotgloo"&gt;
  &lt;/a&gt;
  36. &lt;a href="https://www.hotgloo.com/"&gt;HotGloo&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v69TNvUV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629480702400/CBfQKFvxv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v69TNvUV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629480702400/CBfQKFvxv.png" alt="hotgloo.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It can also be used for:&lt;/strong&gt; Prototyping, Wireframing, Diagramming      &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost:&lt;/strong&gt; $12+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it do best:&lt;/strong&gt; A wireframing and prototyping tool for web, mobile and wearables. Helps to visualize planning processes, and build and test drive interactions.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;HotGloo is a UX, wireframe and prototyping tool designed to build wireframes for web, mobile and wearables. HotGloo helps to visualize planning processes, build and test drive interactions very easily. Create and share fully interactive prototypes with your team and clients and gather feedback on the process. From prototypes of the next award winning app to huge e-commerce wireframe shop solutions, HotGloo is the perfect match for every web worker. - By hotgloo.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#37-lucidchart"&gt;
  &lt;/a&gt;
  37. &lt;a href="https://www.lucidchart.com/pages/"&gt;Lucidchart&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bjqmaway--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629480712930/rpiT17EXe.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bjqmaway--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629480712930/rpiT17EXe.jpeg" alt="lucidchart_logo_Logo.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It can also be used for:&lt;/strong&gt; Mockups, Prototyping, Wireframing, Diagramming     &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost:&lt;/strong&gt; $4.95+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it do best:&lt;/strong&gt; Allows more than one person at a time to collaborate on a document and comes with widgets for UI components, icons and diagram shapes. Free for less than 60 elements and maximum 2 collaborators.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Lucidchart is the intelligent diagramming application that brings teams together to make better decisions and build the future. - By lucidchart.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#38-omnigraffle"&gt;
  &lt;/a&gt;
  38. &lt;a href="https://www.omnigroup.com/omnigraffle/"&gt;OmniGraffle&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n-BlG49w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629480722006/9NQSQXzNG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n-BlG49w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629480722006/9NQSQXzNG.png" alt="omni.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It can also be used for:&lt;/strong&gt; Wireframing, Diagramming       &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost:&lt;/strong&gt; $60+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it do best:&lt;/strong&gt; Create diagrams and designs with ease. Lines stay connected to shapes even when moved. Explain anything from a simple family tree to a complex systems theory with a diagram.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;With the power to diagram, rapid-prototype, and design, OmniGraffle was made for professionals who need to organize or communicate visually—beautifully. - By omnigroup.com/omnigraffle&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#39-power-mockup"&gt;
  &lt;/a&gt;
  39. &lt;a href="https://www.powermockup.com/"&gt;Power Mockup&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eTJIscUC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629480735608/eYc-pEKMw.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eTJIscUC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629480735608/eYc-pEKMw.jpeg" alt="powermockup-520x392.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It can also be used for:&lt;/strong&gt;    Wireframing, Diagramming, Design Prototyping        &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost:&lt;/strong&gt; $60+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it do best:&lt;/strong&gt; A large collection of user interface elements and icons made entirely out of PowerPoint shapes, useful for creating screen prototypes for mobile, web, and desktop applications using PowerPoint.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;PowerMockup provides a large collection of user interface elements and icons made entirely out of PowerPoint shapes. With these elements you easily can create screen prototypes of mobile, web, and desktop applications—right inside PowerPoint! - By powermockup.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;And here we have some more well-known tools we reviewed in previous categories: 🚀&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#40-adobe-xd"&gt;
  &lt;/a&gt;
  40. &lt;a href="https://www.adobe.com/products/xd.html"&gt;Adobe XD&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#41-axure-rp"&gt;
  &lt;/a&gt;
  41. &lt;a href="https://www.axure.com/"&gt;axure RP&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#42-balsamiq"&gt;
  &lt;/a&gt;
  42. &lt;a href="https://balsamiq.com/"&gt;balsamiq&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#43-flair-builder"&gt;
  &lt;/a&gt;
  43. &lt;a href="https://fantastech.co/flair-builder/"&gt;Flair Builder&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#44-indigo-design"&gt;
  &lt;/a&gt;
  44. &lt;a href="https://www.infragistics.com/products/indigo-design"&gt;Indigo Design&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#45-iplotz"&gt;
  &lt;/a&gt;
  45. &lt;a href="http://iplotz.com/"&gt;iPlotz&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#46-irise"&gt;
  &lt;/a&gt;
  46. &lt;a href="https://www.irise.com/"&gt;iRise&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#47-just-in-mind"&gt;
  &lt;/a&gt;
  47. &lt;a href="https://www.justinmind.com/"&gt;Just In Mind&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#48-mockflow"&gt;
  &lt;/a&gt;
  48. &lt;a href="https://mockflow.com/"&gt;MockFlow&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#49-mocking-bird"&gt;
  &lt;/a&gt;
  49. &lt;a href="https://gomockingbird.com/home"&gt;Mocking bird&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#50-mockplus"&gt;
  &lt;/a&gt;
  50. &lt;a href="https://www.mockplus.com/"&gt;Mockplus&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#51-moqups"&gt;
  &lt;/a&gt;
  51. &lt;a href="https://moqups.com/"&gt;Moqups&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#52-ninjamock"&gt;
  &lt;/a&gt;
  52. &lt;a href="https://www.ninjamock.com/"&gt;NinjaMock&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#53-pencil"&gt;
  &lt;/a&gt;
  53. &lt;a href="http://pencil.evolus.vn/"&gt;Pencil&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#54-photoshop-wireframing-kit"&gt;
  &lt;/a&gt;
  54. &lt;a href="https://www.photoshopwireframingkit.com/"&gt;Photoshop Wireframing Kit&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#55-pidoco"&gt;
  &lt;/a&gt;
  55. &lt;a href="https://pidoco.com/en"&gt;Pidoco&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#56-proto"&gt;
  &lt;/a&gt;
  56. &lt;a href="https://proto.io/"&gt;proto&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#57-protoshare"&gt;
  &lt;/a&gt;
  57. &lt;a href="http://www.protoshare.com/"&gt;protoshare&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#58-sketch"&gt;
  &lt;/a&gt;
  58. &lt;a href="https://www.sketch.com/"&gt;sketch&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#59-uxpin"&gt;
  &lt;/a&gt;
  59. &lt;a href="https://www.uxpin.com/"&gt;UXPin&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#60-wireframe-sketcher"&gt;
  &lt;/a&gt;
  60. &lt;a href="https://wireframesketcher.com/"&gt;Wireframe sketcher&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#61-wirify"&gt;
  &lt;/a&gt;
  61. &lt;a href="https://www.wirify.com/"&gt;Wirify&lt;/a&gt;
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#conclusion-12-categories-60-tools"&gt;
  &lt;/a&gt;
  Conclusion - 12 Categories - 60 Tools
&lt;/h1&gt;

&lt;p&gt;In this article, we checked different tools you can use for: Online whiteboards, Participant recruiting, scheduling &amp;amp; screening, Presentation, Process aids, Project Management, Recruiting users, Remote research, Session Replay, Site map builder, User flows, User feedback &amp;amp; Wireframing tools. Usually, the tools can be used for more than 1 thing (for example convention, heat maps, user testing, etc.). Some tools are free and others are paid. The paid tools, most often, will provide a free trial or a demo! &lt;/p&gt;

&lt;p&gt;More categories are coming soon! Make sure to sign in to my newsletter so you won't miss any updates on this or upcoming articles.&lt;/p&gt;

&lt;p&gt;I’d love to hear from you. Which one are you most looking forward to using?&lt;/p&gt;




&lt;p&gt;👋Hello, I'm Eleftheria, Community Manager at Hashnode, developer, public speaker, and chocolate lover.&lt;/p&gt;

&lt;p&gt;🥰If you liked this post please share.&lt;/p&gt;

&lt;p&gt;🍩Would you care about &lt;strong&gt;buying me a coffee&lt;/strong&gt;? You can do it &lt;a href="https://www.buymeacoffee.com/elef/"&gt;here&lt;/a&gt; but If you can't that's ok too!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.paypal.com/paypalme/eleftheriabatsou"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7QXiTcCu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1616336641314/ycZgZ44G3.gif" alt="cofGif.gif"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;🙏It would be nice to subscribe to my &lt;a href="https://www.youtube.com/c/EleftheriaBatsou"&gt;Youtube&lt;/a&gt; channel. It’s free and it helps to create more content.&lt;/p&gt;

&lt;p&gt;🌈&lt;a href="https://www.youtube.com/c/EleftheriaBatsou"&gt;Youtube&lt;/a&gt; | &lt;a href="https://codepen.io/EleftheriaBatsou"&gt;Codepen&lt;/a&gt; | &lt;a href="https://github.com/EleftheriaBatsou"&gt;GitHub&lt;/a&gt; | &lt;a href="https://twitter.com/BatsouElef"&gt;Twitter&lt;/a&gt; | &lt;a href="http://eleftheriabatsou.com/"&gt;Site&lt;/a&gt; | &lt;a href="https://www.instagram.com/elef_in_tech"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ux</category>
      <category>ui</category>
      <category>design</category>
      <category>tooling</category>
    </item>
    <item>
      <title>4 Design Challenges as an Indie App Developer and Helpful Tools: Color Schemes, App Screenshots, etc.</title>
      <author>Risa Fujii</author>
      <pubDate>Sun, 22 Aug 2021 08:57:12 +0000</pubDate>
      <link>https://dev.to/risafj/4-design-challenges-as-an-indie-app-developer-and-helpful-tools-color-schemes-app-screenshots-etc-3e0</link>
      <guid>https://dev.to/risafj/4-design-challenges-as-an-indie-app-developer-and-helpful-tools-color-schemes-app-screenshots-etc-3e0</guid>
      <description>&lt;p&gt;I recently released an iOS/Android app called &lt;a href="https://warikani.page.link/dev_to_indie_design"&gt;Warikani&lt;/a&gt;. It's an intuitive, simple-to-use expense tracker for couples, built on React Native. Creating the app involved a lot of non-programming tasks, from designing the UI to writing the app store descriptions.&lt;/p&gt;

&lt;p&gt;In this post, I will talk about 4 challenges related to design that I faced along the way, and tools that I found essential in solving them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: I am not discounting the work of designers. If you are a professional designer, or you can ask one to design your app, that is undoubtedly better. This is an article for developers who want to/have to design everything themselves.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#chapter-1"&gt;1. How should I decide the color scheme for my app?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-2"&gt;2. How do I design the app UI?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-3"&gt;3. How do I make app icons for each size?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-4"&gt;4. How do I create tasteful App Store screenshots?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#1-how-should-i-decide-the-color-scheme-for-my-app"&gt;
  &lt;/a&gt;
  1. How should I decide the color scheme for my app? &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Solution: Use Eva Design System's deep learning color generator&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I had a primary theme color that I wanted to use, but I didn't know what colors would go well with it. Eva Design System's color generator is great because it recommends colors for each situation (like success or error) that would go well with your main color. If you don't like their suggestions, you can also hit regenerate until you see a color scheme that you like.&lt;/p&gt;

&lt;p&gt;Another perk is that it supports multiple export methods, including JPEG and JSON.&lt;/p&gt;

&lt;p&gt;Try it here: &lt;a href="https://colors.eva.design"&gt;https://colors.eva.design&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--anQW8Qtj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n9a5xufifnab3ilzcoz2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--anQW8Qtj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n9a5xufifnab3ilzcoz2.png" alt="Eva_Design_System__Deep_learning_color_generator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-how-do-i-design-the-app-ui"&gt;
  &lt;/a&gt;
  2. How do I design the app UI? &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Solution: Learn the fundamentals of UI design from YouTube. Also, consider using a component library.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you're an engineer with no professional design experience (like me), you would probably benefit from learning the fundamentals of UI design. I recommend these videos by the Youtube channel &lt;a href="https://www.youtube.com/channel/UCVyRiMvfUNMA1UPlDPzG5Ow"&gt;DesignCourse&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_Hp_dI0DzY4"&gt;The 2019 UI Design Crash Course for Beginners
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=tRpoI6vkqLs"&gt;The 2020 UI Design Fundamentals Crash Course (INTERACTIVE)
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some of the topics covered in these videos may seem obvious  (e.g. use enough color contrast, provide adequate whitespace). But it was useful to understand why you should or shouldn't do something.&lt;/p&gt;

&lt;p&gt;Another piece of advice is to consider using a UI component library. Initially, I was creating most of my components like buttons and text inputs by styling the base React Native components. I didn't want to use a component library, because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It's one more dependency that you have to manage&lt;/li&gt;
&lt;li&gt;It adds a layer of complexity and makes it harder to fine-tune your components&lt;/li&gt;
&lt;li&gt;What if the library stops being maintained?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I was also concerned that using a library would make my app look "generic", for lack of a better term. But after a while, I changed my mind. I wanted to incorporate the look of &lt;a href="https://material.io/components/text-fields"&gt;Material Design text inputs&lt;/a&gt; in my app - specifically, how they change color and display a label when focused.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w9pqfoxV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gbb79iejvu1fhpq4cbzb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w9pqfoxV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gbb79iejvu1fhpq4cbzb.gif" alt="text-field"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So I installed &lt;a href="https://callstack.github.io/react-native-paper/"&gt;react-native-paper&lt;/a&gt;, which is a Material Design component library, and replaced some of my components. It's a subtle change, but the screen feels more polished overall.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Before&lt;/th&gt;
&lt;th&gt;After&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rml1BZos--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9u3ikids6wxfbkulein.png" alt="Simulator Screen Shot - iPhone 8 - 2021-08-15 at 16.41.43"&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hlYMcibS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l9gogbg3visi0e8vmfdi.png" alt="Simulator Screen Shot - iPhone 8 - 2021-08-15 at 16.40.49"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;As for the concern that the app could look more generic somehow, I don't think it's worth worrying about most of the time. After all, users prefer UI that looks familiar (&lt;a href="https://www.nngroup.com/videos/jakobs-law-internet-ux/"&gt;Jakob's Law&lt;/a&gt;).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-how-do-i-make-app-icons-for-each-size"&gt;
  &lt;/a&gt;
  3. How do I make app icons for each size? &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Solution: Use an online app icon generator&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I didn't know this until I became an app developer, but you have to provide your app icon in 10+ different sizes. This would be extremely tedious to do by hand, but thankfully, there are online app icon generators where you can drop an image and they will resize it for you. I can't remember the exact service I used, but just google "online app icon generator".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-how-do-i-create-tasteful-app-store-screenshots"&gt;
  &lt;/a&gt;
  4. How do I create tasteful App Store screenshots? &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Solution: Bite the bullet, learn a bit of Figma. There are some helpful templates out there.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TzDpYdCY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tyymgwtf96z6pgacjq5p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TzDpYdCY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tyymgwtf96z6pgacjq5p.png" alt="FIGMA"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Okay, I won't pretend like my screenshots are perfect - there's still room for improvement. Advice from designers is welcome.)&lt;/p&gt;

&lt;p&gt;When you submit your app on the App Store or Google Play Store, you're required to upload screenshots in specific sizes. The easiest solution is to take screenshots on your device emulator, and upload them as-is... but that's not exactly eye-catching. You'll notice that the screenshots for well-known apps aren't plain screenshots taken from the emulator (&lt;a href="https://apppresser.com/app-store-screenshots/"&gt;examples&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;I initially tried to improve my screenshots by using a tool like &lt;a href="https://www.appstorescreenshot.com/"&gt;this one&lt;/a&gt;. It's straightforward - drop in an image, select a background color, and write some text. But I couldn't find a template that allowed for enough customization and provided all the dimensions I needed. I eventually ended up creating the files on Figma.&lt;/p&gt;

&lt;p&gt;While doing so, I found these drag-and-drop tools that let you wrap the device screenshots in device frames to be useful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For Android screenshots, use the official device art generator: &lt;a href="https://developer.android.com/distribute/marketing-tools/device-art-generator"&gt;https://developer.android.com/distribute/marketing-tools/device-art-generator&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;For iOS screenshots, use community-provided Figma templates like this one: &lt;a href="https://www.figma.com/community/file/882254519102673494"&gt;https://www.figma.com/community/file/882254519102673494&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Good luck to the indie app developers out there, and let me know about any helpful tools that you found. Thanks for reading!&lt;/p&gt;

&lt;p&gt;P.S. Have a partner? Use &lt;a href="https://warikani.page.link/dev_to_indie_design"&gt;Warikani&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>design</category>
      <category>ui</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Multiple .NET SDKs and Runtimes Installation</title>
      <author>Bambang Purnomosidi D. P.</author>
      <pubDate>Sun, 22 Aug 2021 08:52:49 +0000</pubDate>
      <link>https://dev.to/zimera/multiple-net-sdk-and-runtimes-installation-28bi</link>
      <guid>https://dev.to/zimera/multiple-net-sdk-and-runtimes-installation-28bi</guid>
      <description>&lt;p&gt;As a beginner in Microsoft ecosystem, especially under Linux, I found a little bit difficult to get everything works as expected. Last week, I tried to get &lt;a href="https://websharper.com/"&gt;WebSharper&lt;/a&gt; up and run but turns out I can not get it worked. I probably will write about this later. The solution is pretty simple: I need to have .NET SDK - LTS version (3.1.x) while I only have &lt;em&gt;Current&lt;/em&gt; version (5.x.x).&lt;/p&gt;

&lt;p&gt;So yes, I have to intall more than one SDKs and Runtimes. How to do that? &lt;code&gt;dotnet&lt;/code&gt; command - AFAIK - can not be used to do that. The answer is &lt;a href="https://dotnet.microsoft.com/download/dotnet/scripts"&gt;dotnet-install scripts&lt;/a&gt; - available for Windows and for &lt;code&gt;Bash&lt;/code&gt; shell. Using this install script, I can install more than one SDK and Runtimes. Here's how.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-lts-version-first"&gt;
  &lt;/a&gt;
  Install LTS Version First
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The argument &lt;code&gt;--install-dir&lt;/code&gt; is used to let installer knows the installation directory.&lt;/li&gt;
&lt;li&gt;The argument -c LTS means that we will install latest version from LTS channel
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ dotnet-install.sh --install-dir ~/software/dotnet-dev-tools/dotnet-all -c LTS 
dotnet-install: Note that the intended use of this script is for Continuous Integration (CI) scenarios, where:
dotnet-install: - The SDK needs to be installed without user interaction and without admin rights.
dotnet-install: - The SDK installation doesn't need to persist across multiple CI runs.
dotnet-install: To set up a development environment or to run apps, use installers rather than this script. Visit https://dotnet.microsoft.com/download to get the installer.

dotnet-install: Downloading primary link https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.412/dotnet-sdk-3.1.412-linux-x64.tar.gz
dotnet-install: Extracting zip from https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.412/dotnet-sdk-3.1.412-linux-x64.tar.gz
dotnet-install: Adding to current process PATH: `/home/bpdp/software/dotnet-dev-tools/dotnet-all`. Note: This change will be visible only when sourcing script.
dotnet-install: Note that the script does not resolve dependencies during installation.
dotnet-install: To check the list of dependencies, go to https://docs.microsoft.com/dotnet/core/install, select your operating system and check the "Dependencies" section.
dotnet-install: Installation finished successfully.
$
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#install-current-version"&gt;
  &lt;/a&gt;
  Install Current Version
&lt;/h2&gt;

&lt;p&gt;Install current version at the same directory location&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ dotnet-install.sh --install-dir ~/software/dotnet-dev-tools/dotnet-all -c Current
dotnet-install: Note that the intended use of this script is for Continuous Integration (CI) scenarios, where:
dotnet-install: - The SDK needs to be installed without user interaction and without admin rights.
dotnet-install: - The SDK installation doesn't need to persist across multiple CI runs.
dotnet-install: To set up a development environment or to run apps, use installers rather than this script. Visit https://dotnet.microsoft.com/download to get the installer.

dotnet-install: Downloading primary link https://dotnetcli.azureedge.net/dotnet/Sdk/5.0.400/dotnet-sdk-5.0.400-linux-x64.tar.gz
dotnet-install: Extracting zip from https://dotnetcli.azureedge.net/dotnet/Sdk/5.0.400/dotnet-sdk-5.0.400-linux-x64.tar.gz
dotnet-install: Adding to current process PATH: `/home/bpdp/software/dotnet-dev-tools/dotnet-all`. Note: This change will be visible only when sourcing script.
dotnet-install: Note that the script does not resolve dependencies during installation.
dotnet-install: To check the list of dependencies, go to https://docs.microsoft.com/dotnet/core/install, select your operating system and check the "Dependencies" section.
dotnet-install: Installation finished successfully.
$
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#insntallation-check"&gt;
  &lt;/a&gt;
  Insntallation Check
&lt;/h2&gt;

&lt;p&gt;Now, when we use --info as &lt;code&gt;dotnet&lt;/code&gt; CLI argument, we will have those 2 SDKs and 2 Runtimes already installed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ dotnet --info
.NET SDK (reflecting any global.json):
 Version:   5.0.400
 Commit:    d61950f9bf

Runtime Environment:
 OS Name:     devuan
 OS Version:  4
 OS Platform: Linux
 RID:         linux-x64
 Base Path:   /home/bpdp/software/dotnet-dev-tools/dotnet-all/sdk/5.0.400/

Host (useful for support):
  Version: 5.0.9
  Commit:  208e377a53

.NET SDKs installed:
  3.1.412 [/home/bpdp/software/dotnet-dev-tools/dotnet-all/sdk]
  5.0.400 [/home/bpdp/software/dotnet-dev-tools/dotnet-all/sdk]

.NET runtimes installed:
  Microsoft.AspNetCore.App 3.1.18 [/home/bpdp/software/dotnet-dev-tools/dotnet-all/shared/Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 5.0.9 [/home/bpdp/software/dotnet-dev-tools/dotnet-all/shared/Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 3.1.18 [/home/bpdp/software/dotnet-dev-tools/dotnet-all/shared/Microsoft.NETCore.App]
  Microsoft.NETCore.App 5.0.9 [/home/bpdp/software/dotnet-dev-tools/dotnet-all/shared/Microsoft.NETCore.App]

To install additional .NET runtimes or SDKs:
  https://aka.ms/dotnet-download
$
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we can use &lt;code&gt;LTS&lt;/code&gt; and &lt;code&gt;Current&lt;/code&gt; version altogether. Enjoy!&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>beginners</category>
      <category>installation</category>
    </item>
    <item>
      <title>2 Important! Array methods you should know.</title>
      <author>Mohd Shahid</author>
      <pubDate>Sun, 22 Aug 2021 08:35:09 +0000</pubDate>
      <link>https://dev.to/sidmirza4/2-important-array-methods-you-should-know-2il2</link>
      <guid>https://dev.to/sidmirza4/2-important-array-methods-you-should-know-2il2</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hey-everyone"&gt;
  &lt;/a&gt;
  Hey everyone 👋
&lt;/h1&gt;

&lt;p&gt;Today's article is about two interesting (&lt;em&gt;also important&lt;/em&gt;) array methods:  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;.flat()&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;.flatMap()&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Let's get started 🚀
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-raw-flat-endraw-"&gt;
  &lt;/a&gt;
  1. &lt;code&gt;.flat()&lt;/code&gt;:
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;.flat()&lt;/code&gt; method recusively flattens the elements which are array into the original array and returns a new array.&lt;br&gt;&lt;br&gt;
 #### Examples 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flat&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newArray&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// [1,2,3,4]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;👉 &lt;code&gt;.flat()&lt;/code&gt; receives an optional argument &lt;code&gt;depth&lt;/code&gt; (1 by default).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]]];&lt;/span&gt;
&lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flat&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// [1, 2, 3, 4, [5, 6]]&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]]];&lt;/span&gt;
&lt;span class="nx"&gt;arr3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// [1, 2, 3, 4, 5, 6]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;👉 The &lt;code&gt;.flat()&lt;/code&gt; method removes empty slots in arrays:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr5&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;arr5&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flat&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// [1, 2, 4, 5]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#2-raw-flatmap-endraw-"&gt;
  &lt;/a&gt;
  2. &lt;code&gt;.flatMap()&lt;/code&gt;:
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;.flatMap()&lt;/code&gt; is identical to a &lt;code&gt;.map()&lt;/code&gt; followed by a &lt;code&gt;.flat()&lt;/code&gt; of depth 1.  &lt;/p&gt;

&lt;p&gt;#### Examples 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="c1"&gt;// [[2], [4], [6], [8]]&lt;/span&gt;

&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flatMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="c1"&gt;// [2, 4, 6, 8]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;👉 &lt;code&gt;.flatMap()&lt;/code&gt; only flattens the array up to depth 1.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;it's Sunny in&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;California&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// [["it's","Sunny","in"],[""],["California"]]&lt;/span&gt;

&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flatMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// ["it's","Sunny","in", "", "California"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;👉 As you know &lt;code&gt;.map&lt;/code&gt; always works &lt;em&gt;one-to-one&lt;/em&gt;, but &lt;code&gt;flatMap&lt;/code&gt; can be used to modify the number of items during &lt;code&gt;map&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A nice example I found on MDN 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Let's say we want to remove all the negative numbers&lt;/span&gt;
&lt;span class="c1"&gt;// and split the odd numbers into an even number and a 1&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;//       |\  \  x   |  | \   x   x   |&lt;/span&gt;
&lt;span class="c1"&gt;//      [4,1, 4,   20, 16, 1,       18]&lt;/span&gt;

&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flatMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt;      &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
                 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// [4, 1, 4, 20, 16, 1, 18]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it for this article, I hope you found it useful. 😊&lt;br&gt;&lt;br&gt;
Take a look on my article on &lt;a href="https://sidmirza.hashnode.dev/array-methods-in-javascript-when-to-use-which"&gt;array methods&lt;/a&gt;.&lt;br&gt;&lt;br&gt;
Please leave a like and follow me on &lt;a href="https://www.twitter.com/sidmirza4"&gt;twitter&lt;/a&gt;.  &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading. 💚
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#happy-coding"&gt;
  &lt;/a&gt;
  Happy coding.
&lt;/h4&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
