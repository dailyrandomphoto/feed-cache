<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>7 Amazingüòç Tips While Redesigning Your Website</title>
      <author>Coderz</author>
      <pubDate>Thu, 21 Oct 2021 08:05:27 +0000</pubDate>
      <link>https://dev.to/h763/7-amazing-tips-while-redesigning-your-website-33g1</link>
      <guid>https://dev.to/h763/7-amazing-tips-while-redesigning-your-website-33g1</guid>
      <description>&lt;p&gt;Redesigning a website may be a stressful, time-consuming, and complex task. It‚Äôs natural if the amount of information you need to know in order to build a new, fresh design repulses you. However, if you take the time to educate yourself and gain hands-on experience, you can avoid making mistakes and achieve your goals. Here are seven golden pointers for redesigning your website to get you started:&lt;/p&gt;
&lt;p&gt;When you consider rebuilding your website, you most likely imagine something huge and powerful. It‚Äôs the ideal opportunity to give your website a bold and dramatic new appearance. However, the world is not what you might assume.¬†&lt;/p&gt;

&lt;p&gt;&lt;b&gt;READ More&lt;/b&gt;: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/7-amazing-tips-while-redesigning-your-website/&amp;amp;ved=2ahUKEwjCx8Gc_JjzAhXawzgGHeQLBh4QFnoECAQQBQ&amp;amp;usg=AOvVaw1MCPezHaMcqtc9wW14T5Lx"&gt;7 Amazing Tips While Redesigning Your Website&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Get Started GSAP</title>
      <author>Sowjanya</author>
      <pubDate>Thu, 21 Oct 2021 07:58:09 +0000</pubDate>
      <link>https://dev.to/sowg/get-started-gsap-42pi</link>
      <guid>https://dev.to/sowg/get-started-gsap-42pi</guid>
      <description>&lt;p&gt;Learn the basics of GSAP in this article.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-gsap"&gt;
  &lt;/a&gt;
  What is GSAP?
&lt;/h1&gt;

&lt;p&gt;GSAP(Greensock Animation Platform) is a JavaScript library which can animate CSS properties, SVG, React, canvas, generic objects and many other things. It is 20 times faster than jQuery and solves countless browser inconsistencies.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#install-gsap"&gt;
  &lt;/a&gt;
  Install GSAP
&lt;/h1&gt;

&lt;p&gt;There are many ways you can use GSAP. Given below is the many ways and how to do it. Here is the &lt;a href="https://greensock.com/docs/v3/Installation"&gt;GSAP Installation Page&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#download"&gt;
  &lt;/a&gt;
  Download
&lt;/h2&gt;

&lt;p&gt;You can download GSAP from the zip file &lt;a href="https://greensock.com/docs/v3/Installation#download"&gt;here&lt;/a&gt;. If you want help here is the &lt;a href="https://greensock.com/docs/v3/Installation#modules"&gt;GSAP Install Helper&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-cdn"&gt;
  &lt;/a&gt;
  Use CDN
&lt;/h2&gt;

&lt;p&gt;Using CDNs are highly recommended because they're so widely cached and load super-fast.&lt;/p&gt;

&lt;p&gt;Docs - &lt;a href="https://greensock.com/docs/v3/Installation#cdn"&gt;https://greensock.com/docs/v3/Installation#cdn&lt;/a&gt;&lt;br&gt;
Get CDNs - &lt;a href="https://greensock.com/docs/v3/Installation#CDN"&gt;https://greensock.com/docs/v3/Installation#CDN&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#npm"&gt;
  &lt;/a&gt;
  NPM
&lt;/h2&gt;

&lt;p&gt;Docs - &lt;a href="https://greensock.com/docs/v3/Installation#npm-club"&gt;https://greensock.com/docs/v3/Installation#npm-club&lt;/a&gt;&lt;br&gt;
Input in code - &lt;a href="https://greensock.com/docs/v3/Installation#modules"&gt;https://greensock.com/docs/v3/Installation#modules&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#github"&gt;
  &lt;/a&gt;
  GitHub
&lt;/h2&gt;

&lt;p&gt;Docs - &lt;a href="https://greensock.com/docs/v3/Installation#github"&gt;https://greensock.com/docs/v3/Installation#github&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#codepen"&gt;
  &lt;/a&gt;
  CodePen
&lt;/h2&gt;

&lt;p&gt;Using CodePen or GSAP has a lot of advantages, you get to use all the Club GreenSock Plugins for free.&lt;/p&gt;

&lt;p&gt;Docs - &lt;a href="https://greensock.com/docs/v3/Installation#codepenContentSection"&gt;https://greensock.com/docs/v3/Installation#codepenContentSection&lt;/a&gt;&lt;br&gt;
Template - &lt;a href="https://codepen.io/GreenSock/pen/aYYOdN"&gt;https://codepen.io/GreenSock/pen/aYYOdN&lt;/a&gt;&lt;br&gt;
URLs - &lt;a href="https://greensock.com/docs/v3/Installation#codepen"&gt;https://greensock.com/docs/v3/Installation#codepen&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#club-greensock"&gt;
  &lt;/a&gt;
  Club Greensock
&lt;/h1&gt;

&lt;p&gt;In Club Greensock you pay for extra plugins, but as said in CodePen you can use all the plugins for free, but if you want to do it outside CodePen you have to get Club Greensock membership.&lt;/p&gt;

&lt;p&gt;Get Membership - &lt;a href="https://greensock.com/club"&gt;https://greensock.com/club&lt;/a&gt;&lt;br&gt;
See the Plugins available in Club Greensock - &lt;a href="https://greensock.com/club/#feature-list"&gt;https://greensock.com/club/#feature-list&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#code-your-first-animation"&gt;
  &lt;/a&gt;
  Code your first animation!
&lt;/h1&gt;

&lt;p&gt;Finally the coding part!&lt;/p&gt;

&lt;p&gt;This is a basic example using to() tween:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;gsap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#myID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you notice there are two things that make this animation work, there are : target and var. &lt;/p&gt;

&lt;p&gt;The target is the object your animating, this can be a raw object, an array of objects, or selector text like &lt;code&gt;".myClass"&lt;/code&gt; or &lt;code&gt;"#myID"&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The var is an object with property/value pairs that you're animating to (like &lt;code&gt;opacity:0.5&lt;/code&gt;, &lt;code&gt;rotation:45&lt;/code&gt;, etc.) and other optional special properties like &lt;code&gt;duration&lt;/code&gt; and &lt;code&gt;onComplete&lt;/code&gt;. You can also add CSS style raw instead of doing it in the long js way.&lt;/p&gt;

&lt;p&gt;JS:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;GSAP:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;gsap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note that I added the duration inside the round brackets instead of the curly ones? It can be done either ways&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is a table of short codes for transform-related properties:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;th&gt;GSAP&lt;/th&gt;
            &lt;th&gt;CSS&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;x: 100&lt;/td&gt;
            &lt;td&gt;transform: translateX(100px)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;y: 100&lt;/td&gt;
            &lt;td&gt;transform: translateY(100px)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;rotation: 360&lt;/td&gt;
            &lt;td&gt;transform: rotate(360deg)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;rotationX: 360&lt;/td&gt;
            &lt;td&gt;transform: rotateX(360deg)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;rotationY: 360&lt;/td&gt;
            &lt;td&gt;transform: rotateY(360deg)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;skewX: 45&lt;/td&gt;
            &lt;td&gt;    transform: skewX(45deg)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;skewY: 45&lt;/td&gt;
            &lt;td&gt;    transform: skewY(45deg)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;scale: 2&lt;/td&gt;
            &lt;td&gt;transform: scale(2, 2)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;scaleX: 2&lt;/td&gt;
            &lt;td&gt;transform: scaleX(2)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;scaleY: 2&lt;/td&gt;
            &lt;td&gt;transform: scaleY(2)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;xPercent: -50&lt;/td&gt;
            &lt;td&gt;transform: translateX(-50%)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;yPercent: -50&lt;/td&gt;
            &lt;td&gt;transform: translateY(-50%)&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;p&gt;Here is my first GSAP animation:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/sowg/embed/zYzgeye?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;This is all there is to building a basic animation with GSAP. &lt;/p&gt;

&lt;p&gt;Make an animation with GSAP and share it with me! I will be glad to clear your doubts in the comment. &lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Backend Developer Learning Path 2021üòé</title>
      <author>Coderz</author>
      <pubDate>Thu, 21 Oct 2021 07:55:42 +0000</pubDate>
      <link>https://dev.to/h763/backend-developer-learning-path-2021-4cho</link>
      <guid>https://dev.to/h763/backend-developer-learning-path-2021-4cho</guid>
      <description>&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;Who is a Backend Web Developer ? backend developer roadmap: Unlike the frontend developer, who takes care of the visible part of a site or app, the backend developer is a computer scientist who instead builds everything that is not seen but serves to make that site or application work. If we were to use the metaphor, ‚Ä¶&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/backend-web-developer-roadmap/&amp;amp;ved=2ahUKEwjpzZmgg9vzAhWljuYKHWv9COEQFnoECDAQAQ&amp;amp;usg=AOvVaw0wwwwOEMbJgRlh0aWNwnCj"&gt;Backend Developers learning path 2021&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Swift 101: Building a Library with Swift Package Manager</title>
      <author>Jake Barnby</author>
      <pubDate>Thu, 21 Oct 2021 07:39:31 +0000</pubDate>
      <link>https://dev.to/appwrite/swift-101-building-a-library-with-swift-package-manager-46h</link>
      <guid>https://dev.to/appwrite/swift-101-building-a-library-with-swift-package-manager-46h</guid>
      <description>&lt;p&gt;The Swift Package Manager, or SwiftPM, is included with Swift 3.0 and above. Initially, it was only available for server-side or command line Swift projects. Since the release of Swift 5 and Xcode 11, SwiftPM is compatible with the Apple ecosystem for creating apps. This is great news because packages make it easier to divide your code into reusable, logical groups you can easily share across projects, or even with the entire world.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%EF%B8%8F-modules"&gt;
  &lt;/a&gt;
  üì¶Ô∏è Modules
&lt;/h2&gt;

&lt;p&gt;Before looking at &lt;strong&gt;packages&lt;/strong&gt;, we first need to understand &lt;strong&gt;modules&lt;/strong&gt;. Swift organises code into modules. Each module defines a namespace and which parts of the code can be used from outside the module. You can define all of your code in a single module, or break it up into multiple which can depend on each other. Using modules lets you easily build on your own re-usable code, or others code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#packages"&gt;
  &lt;/a&gt;
  üéÅ Packages
&lt;/h2&gt;

&lt;p&gt;So what is a Swift package? A package is a collection of Swift source code files as well as a manifest file called &lt;code&gt;Package.swift&lt;/code&gt;, that defines various properties about the package, such as its name, the products it produces, any dependencies it has, and the targets it is built up of.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#anatomy-of-a-package"&gt;
  &lt;/a&gt;
  ü¶¥ Anatomy of a Package
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Products&lt;/strong&gt; define the libraries and executables produced by a package. A library is simply a collection of files, for use as a dependency by other Swift code. An executable is a package that can be run, such a web server.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Dependencies&lt;/strong&gt; are other Swift Packages you want to use code from, within your package.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Targets&lt;/strong&gt; are what defines the module(s) that a package contains and that other packages can import. Targets define their own dependencies and can depend on other targets the package, or products from packages that this package depends on.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-swift-package"&gt;
  &lt;/a&gt;
  ‚öôÔ∏è Creating a Swift Package
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;This tutorial assumes you already have Swift installed. You can check by running &lt;code&gt;swift --help&lt;/code&gt; from your terminal.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Creating a Swift Package from the command line is easy, and can be completed with one simple command from the directory you want to create your package in. For this example we'll start with a directory named &lt;code&gt;FooPackage&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;FooPackage
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;FooPackage

FooPackage&lt;span class="nv"&gt;$ &lt;/span&gt;swift package init &lt;span class="nt"&gt;--type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;library
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That‚Äôs it! There‚Äôll be some output detailing the files created for your new package. You should see:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  1 source file created inside a &lt;code&gt;Sources&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;  1 test source file inside a &lt;code&gt;Tests&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;  A &lt;code&gt;Package.swift&lt;/code&gt; manifest file at the root level&lt;/li&gt;
&lt;li&gt;  A README.md file at the root level&lt;/li&gt;
&lt;li&gt;  A .gitignore file at the root level&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of these files, only the single file in the &lt;code&gt;Sources&lt;/code&gt; directory and the manifest file are required for the package to build. This means you could easily create your own package by manually creating these two files as well.&lt;/p&gt;

&lt;p&gt;By default, the &lt;code&gt;Sources&lt;/code&gt; directory must contain all source code for the package, but you can use sub-directories to define sub-modules, if they are also defined as separate targets in your manifest file. Let's take a look at the generated &lt;code&gt;Package.swift&lt;/code&gt; for the new package to see the pieces we've discussed so far:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="c1"&gt;// swift-tools-version:5.3&lt;/span&gt;
&lt;span class="c1"&gt;// The swift-tools-version declares the minimum version of Swift required to build this package.&lt;/span&gt;

&lt;span class="kd"&gt;import&lt;/span&gt; &lt;span class="kt"&gt;PackageDescription&lt;/span&gt;

&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;package&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"TestPackage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;products&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nv"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"FooPackage"&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nv"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nv"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;target&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nv"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;          
            &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;testTarget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FooPackageTests"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nv"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;     
                &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;     
            &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here you can see that our package defines one &lt;strong&gt;library&lt;/strong&gt;, &lt;code&gt;TestPackage&lt;/code&gt;, as well as one &lt;strong&gt;target&lt;/strong&gt; of the same name, and one test target, with depends on the module target.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-first-build"&gt;
  &lt;/a&gt;
  ü•á The first build
&lt;/h2&gt;

&lt;p&gt;Now that the package has been created, let‚Äôs build it for the first time with the build command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;swift build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because the package has no dependencies or code yet, this should complete almost instantly, displaying ‚ÄúBuild Completed!‚Äù on success.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-dependencies"&gt;
  &lt;/a&gt;
  ‚ûï Adding dependencies
&lt;/h2&gt;

&lt;p&gt;Let's add a dependency and some code. Adding dependencies with SwiftPM is easy as you can use git URL's directly. We can add the following to our &lt;code&gt;Package.swift&lt;/code&gt; top level dependencies block to allow us to the Appwrite Swift SDK in our library:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;package&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Appwrite"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"https://github.com/appwrite/sdk-for-swift"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"0.1.0"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This declares that our package will pull in the code from the &lt;code&gt;Appwrite&lt;/code&gt; module in the &lt;code&gt;sdk-for-swift&lt;/code&gt; repository on GitHub, from the tag &lt;code&gt;0.1.0&lt;/code&gt; and allow us to add it to our targets dependencies as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;target&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; 
        &lt;span class="s"&gt;"Appwrite"&lt;/span&gt;    
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we added &lt;code&gt;Appwrite&lt;/code&gt;, as this is the name of the library we're using from the &lt;code&gt;sdk-for-swift&lt;/code&gt; repository.&lt;/p&gt;

&lt;p&gt;Let's take a look at the full manifest file with the new dependency added:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="c1"&gt;// swift-tools-version:5.3&lt;/span&gt;
&lt;span class="c1"&gt;// The swift-tools-version declares the minimum version of Swift required to build this package.&lt;/span&gt;

&lt;span class="kd"&gt;import&lt;/span&gt; &lt;span class="kt"&gt;PackageDescription&lt;/span&gt;

&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;package&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;products&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nv"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"FooPackage"&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nv"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;package&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Appwrite"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"https://github.com/appwrite/sdk-for-swift"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"0.1.0"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nv"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;target&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nv"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;    
                &lt;span class="s"&gt;"Appwrite"&lt;/span&gt;
            &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;testTarget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FooPackageTests"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nv"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;     
                &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;     
            &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we've changed the dependencies of our package, we need to &lt;strong&gt;resolve&lt;/strong&gt; them. This will happen automatically the first time you run &lt;code&gt;swift build&lt;/code&gt; with a new dependency, but if you manually update a version, you'll need to manually resolve the new version. This can be done by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;swift package resolve
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will update the &lt;code&gt;Package.resolved&lt;/code&gt; to contain the version metadata about the &lt;code&gt;Appwrite&lt;/code&gt; module we just added. &lt;/p&gt;

&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#whats-going-on-here"&gt;
  &lt;/a&gt;
  What's going on here?
&lt;/h4&gt;

&lt;p&gt;Swift Package Manager uses a lockfile system similar to &lt;code&gt;package.lock&lt;/code&gt; for NPM and &lt;code&gt;composer.lock&lt;/code&gt; for Composer. This comes in the form of a file called &lt;code&gt;Package.resolved&lt;/code&gt;, which contains metadata about the packages dependencies versions, as well as their transitive dependencies. When you run &lt;code&gt;swift build&lt;/code&gt; and the dependencies are fetched, the versions from the &lt;code&gt;Package.resolved&lt;/code&gt; file will be used if found.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once resolved, we can build our package with &lt;code&gt;swift build&lt;/code&gt; again. This time we'll see the &lt;code&gt;sdk-for-swift&lt;/code&gt; repository pulled into the build checkouts, as well as built with the rest of the library.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%EF%B8%8F-adding-library-code"&gt;
  &lt;/a&gt;
  üì•Ô∏è Adding library code
&lt;/h2&gt;

&lt;p&gt;Time to add some code. Let's open up the source file created earlier as &lt;code&gt;Sources/FooPackage/FooPackage.swift&lt;/code&gt; and update with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;import&lt;/span&gt; &lt;span class="kt"&gt;Appwrite&lt;/span&gt;

&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="kt"&gt;FooPackage&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;account&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;Account&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nv"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nv"&gt;projectId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nv"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nv"&gt;completion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;@escaping&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;AppwriteError&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Void&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;client&lt;/span&gt;
            &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setEndpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;projectId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;account&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;createSession&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nv"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nv"&gt;completion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;completion&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We now have a login function! We just need to deploy the package, and we'll be able to use the login function from any other package or Apple app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploying-the-package"&gt;
  &lt;/a&gt;
  üßë‚Äçüíª Deploying the package
&lt;/h2&gt;

&lt;p&gt;Fortunately deploying packages with Swift Package Manager is very easy. As the packages are Git based, all you need to do is push your changes to your default branch and create a tag for your release:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git init
&lt;span class="nv"&gt;$ &lt;/span&gt;git add &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git remote add origin &lt;span class="o"&gt;[&lt;/span&gt;GitHub Repository URL]
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"Initial Commit"&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git tag 1.0.0
&lt;span class="nv"&gt;$ &lt;/span&gt;git push origin main &lt;span class="nt"&gt;--tags&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#%EF%B8%8F-using-as-a-dependency"&gt;
  &lt;/a&gt;
  üì•Ô∏è Using as a dependency
&lt;/h2&gt;

&lt;p&gt;Using the same method we used earlier to add the Appwrite Apple SDK as a dependency, we can now add the newly deployed package as a dependency of a second package:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;

    &lt;span class="nv"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;package&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"https://github.com/[YOUR GITHUB USERNAME]/[YOUR GITHUB REPOSITORY]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nv"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;target&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nv"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;    
                &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;  
            &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-the-dependency"&gt;
  &lt;/a&gt;
  üèóÔ∏è Using the dependency
&lt;/h2&gt;

&lt;p&gt;With the package added as a dependency, we can now use the function we defined earlier anywhere in the second package:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;import&lt;/span&gt; &lt;span class="kt"&gt;FooPackage&lt;/span&gt;

&lt;span class="kt"&gt;FooPackage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"http://localhost/v1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;projectId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"6bfgh45fng3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"test@test.test"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"password"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; 
    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#updating-your-package"&gt;
  &lt;/a&gt;
  üîΩ Updating your package
&lt;/h2&gt;

&lt;p&gt;To update your package, the process is the same as deploying the initial version. You just need to push your changes to the default branch and a new version tag to go with.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  ‚úÖ That's it!
&lt;/h2&gt;

&lt;p&gt;You've now created, deployed, used and updated your very own Swift Package! Packages are a great way to re-use code and share your creations with the world. Looking forward to seeing what new packages come next for Swift!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%EF%B8%8F-resources"&gt;
  &lt;/a&gt;
  üìöÔ∏è Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://swift.org/"&gt;Swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swift.org/package-manager/"&gt;Swift Package Manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/documentation/xcode/creating_a_standalone_swift_package_with_xcode"&gt;Creating Swift Packages with Xcode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>ios</category>
      <category>swift</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>30 reasons üòç why you should learn JavaScript right nowüòé</title>
      <author>Coderz</author>
      <pubDate>Thu, 21 Oct 2021 07:29:12 +0000</pubDate>
      <link>https://dev.to/h763/30-reasons-why-you-should-learn-javascript-right-now-32np</link>
      <guid>https://dev.to/h763/30-reasons-why-you-should-learn-javascript-right-now-32np</guid>
      <description>&lt;p&gt;There are two reasons why it‚Äôs sometimes hard to make a choice; either there are too few options to choose from, or there are too many. When it comes to programming languages, there is an embarrassment of riches, which in turn can cause mental gridlock. There‚Äôs Python, Java, JavaScript, C/CPP, PHP, Swift, C#, Ruby, Objective-C, and SQL, and that‚Äôs not even the full list! How do you choose?&lt;/p&gt;
&lt;p&gt;Now, bear in mind that as far as programmers go, there‚Äôs no such thing as knowing too many languages. A programmer with a grasp of many languages is a programmer who is highly marketable and very much in demand. Upskilling is always a smart way to go.¬†&lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/15-reasons-why-you-should-learn-javascript-right-now/&amp;amp;ved=2ahUKEwjq3LetlNPzAhWCjeYKHXtzBaUQFnoECAQQBQ&amp;amp;usg=AOvVaw2jcX34baRnSUligpWiA29Q&amp;amp;cshid=1634532657525"&gt;30 reasons why you should learn JavaScript right now&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>[Road to Job] #5 Done School. Now what?</title>
      <author>Dev of Mith</author>
      <pubDate>Thu, 21 Oct 2021 07:06:02 +0000</pubDate>
      <link>https://dev.to/mithraperera/road-to-job-5-done-school-now-what-1jdi</link>
      <guid>https://dev.to/mithraperera/road-to-job-5-done-school-now-what-1jdi</guid>
      <description>&lt;h1&gt;
  &lt;a href="#finally-done"&gt;
  &lt;/a&gt;
  Finally Done
&lt;/h1&gt;

&lt;p&gt;I finally graduated! I'm not sure if I was more excited about that or the fact that I could finally spend all waking hours of the day doing something I loved.&lt;/p&gt;

&lt;p&gt;Basically, in short, I fell in love with coding in my last year of EE and decided to drop all the hard work I put in to startup a EE career to pursue this passion. &lt;/p&gt;

&lt;p&gt;So I let my boss know that I would not be returning to work after I graduated to pursue my passion. She wished me the best of luck. I finished up my final exams. Graduated and now here I am, jobless and learning more and studying more than I ever have before. I also built an app for a startup I worked on with a friend in a incubator program over the summer but more on that another day.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-i-have-been-up-to"&gt;
  &lt;/a&gt;
  What I have been up to
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Front End Web Dev&lt;/strong&gt;&lt;br&gt;
It's been a few months now since I have graduated and I have kept quite busy. I have been self teaching myself HTML, CSS and JavaScript. Building responsive websites and working towards learning React next.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS re/Start&lt;/strong&gt;&lt;br&gt;
Also, in my quest to find new things to learn, I stumbled across cloud engineering and I found it quite fascinating. So in following this curiosity, I found this cool program called &lt;strong&gt;AWS re/Start&lt;/strong&gt; run in partnership with YES(Youth Employment Services). I applied and after some tests and interviews, I was in! &lt;br&gt;
(&lt;em&gt;I will start a series to discuss this further for those that are interested.&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Google's 30 Days of Cloud&lt;/strong&gt;&lt;br&gt;
Now another cool program I found was this 30 Days of Cloud that I found out about because I am still part of the discord server for the &lt;em&gt;Google Student Developer Club&lt;/em&gt; of my university. It's pretty neat because they have 4 tracks and it runs 4 days a week for a month and you get to learn:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Cloud Computing Fundamentals&lt;/li&gt;
&lt;li&gt;Infrastructure in Google Cloud&lt;/li&gt;
&lt;li&gt;Networking and Security in Google Cloud&lt;/li&gt;
&lt;li&gt;Data, ML and AI in Google Cloud&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;and the coolest part...&lt;em&gt;it is all for free!&lt;/em&gt;&lt;br&gt;
(&lt;em&gt;I will start a series to discuss this as well so stay tuned!&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FREE Flutter Apprentice Book&lt;/strong&gt;&lt;br&gt;
Yup, I am just raining down gems today. Another cool learning opportunity for you all. The Flutter team has partnered with Ray Wenderlich to offer this book for free until &lt;em&gt;January 6th, 2022&lt;/em&gt;! I am already pretty decent with flutter but I figured it wouldn't hurt to read it in my spare time and watch the book club they have going on till Jan 6th.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;AWS re/Start&lt;/strong&gt; : &lt;a href="https://aws.amazon.com/training/restart/"&gt;https://aws.amazon.com/training/restart/&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Google's 30 Days of Cloud&lt;/strong&gt; : &lt;a href="https://cloudcoach.dev/home/"&gt;https://cloudcoach.dev/home/&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;FREE Flutter Apprentice Book&lt;/strong&gt; : &lt;a href="https://flutter.dev/apprentice-giveaway"&gt;https://flutter.dev/apprentice-giveaway&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h1&gt;

&lt;p&gt;Learning web dev and the cloud full time and hoping to secure my first job in this new industry early next year.&lt;/p&gt;

&lt;p&gt;Until then, onwards and upwards we go! üöÄ&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>cloud</category>
      <category>career</category>
    </item>
    <item>
      <title>using vscode online with vscode.dev</title>
      <author>domonic</author>
      <pubDate>Thu, 21 Oct 2021 07:04:59 +0000</pubDate>
      <link>https://dev.to/domonic/using-vscode-online-with-vscodedev-4e67</link>
      <guid>https://dev.to/domonic/using-vscode-online-with-vscodedev-4e67</guid>
      <description>&lt;p&gt;Did you know you can use vscode online?&lt;/p&gt;

&lt;p&gt;just visit &lt;a href="https://vscode.dev/"&gt;https://vscode.dev/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and connect to your git repo!&lt;/p&gt;

</description>
      <category>python</category>
      <category>javascript</category>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to automate the deployment with CDK Pipelines</title>
      <author>Igor Soroka</author>
      <pubDate>Thu, 21 Oct 2021 07:01:09 +0000</pubDate>
      <link>https://dev.to/aws-builders/how-to-automate-the-deployment-with-cdk-pipelines-2fn5</link>
      <guid>https://dev.to/aws-builders/how-to-automate-the-deployment-with-cdk-pipelines-2fn5</guid>
      <description>&lt;p&gt;&lt;em&gt;Modern software projects are going to be complicated to develop and maintain without automation. The most sophisticated way will be to create a pipeline for the project for sourcing, building, and deploying new changes. This article continues the previous one that was telling about the deployment of public serverless API. Here we will be doing further automation.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What was the project? It gives the ability to store, retrieve, edit and delete books from the Rest API. If you are going to follow instructions, it will be worth having the git repository cloned. It is situated &lt;a href="https://github.com/Grenguar/aws-cdk-api-workshop"&gt;here&lt;/a&gt;. First, it is crucial to have a common vocabulary.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#glossary"&gt;
  &lt;/a&gt;
  Glossary
&lt;/h3&gt;

&lt;p&gt;Used terms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;implementation code - the main application situated in the root folder&lt;/li&gt;
&lt;li&gt;implementation stack - the one which has the infra code for lambdas, API GW and &lt;/li&gt;
&lt;li&gt;pipeline stack - magical one which has the CI/CD logic in it, including self-mutation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#overview-of-manual-steps"&gt;
  &lt;/a&gt;
  Overview of Manual Steps
&lt;/h3&gt;

&lt;p&gt;In a nutshell, there are a couple of manual steps for succeeding. However, in the end, we will create the pipeline that will be getting the changes and check them in the infrastructure and implementation both. Here they are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating GitHub Connection using AWS Codestar&lt;/li&gt;
&lt;li&gt;Provisioning CDKToolkit (new or updated)&lt;/li&gt;
&lt;li&gt;Provisioning of CodePipeline from CLI &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#connect-github-as-a-source"&gt;
  &lt;/a&gt;
  Connect GitHub as a source
&lt;/h3&gt;

&lt;p&gt;Let's start with the very beginning of the project building process. The pipeline should be able to get the code from the GitHub repository. In old times, one should store the secret of the GitHub webhook. Now there is a second version of it. &lt;/p&gt;

&lt;p&gt;For using that, we will be setting up a connection. It is a region-specific service situated in &lt;a href="https://console.aws.amazon.com/codesuite/settings/connections"&gt;'Developer Tools -&amp;gt; Connections'&lt;/a&gt;. One should click 'Create Connection.' In this step, there are three options: BitBucket, GitHub, AWS Connector for GitHub.&lt;/p&gt;

&lt;p&gt;The connection requires the installation of 'AWS Connector for GitHub.' There are options to choose either all repositories from the account or selected ones.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kxlnani0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0m0faw8wzoetttn5h3z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kxlnani0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0m0faw8wzoetttn5h3z.png" alt="AWS Connector"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the next screen, there is an ARN of this connection. One should write it down because the first stage of the pipeline will use it. From experience, it is better to save it into SSM Parameter Store situated &lt;a href="https://eu-west-1.console.aws.amazon.com/systems-manager/parameters/"&gt;here&lt;/a&gt;. The path to the secret could be like&lt;br&gt;
&lt;code&gt;/serverless-api/git/connection-arn&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#preparing-pipeline-stack"&gt;
  &lt;/a&gt;
  Preparing pipeline stack
&lt;/h3&gt;

&lt;p&gt;The traditional approach of creating the CodePipeline projects is to have every stage described like sourcing, building, and deploying. The main issue was that everything like output artifacts and execution roles would be described from the ground-up.&lt;/p&gt;

&lt;p&gt;However, IaC tools are evolving. CDK has the concept of 'Construct,' which is basically a group of resources. There is a new one called &lt;code&gt;aws-cdk-lib/pipelines.&lt;/code&gt; It solves the above-mentioned problems of provisioning additional resources by hand.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;connectionArn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
  &lt;span class="nx"&gt;ssm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StringParameter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;valueForStringParameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/serverless-api/git/connection-arn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pipeline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CodePipeline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Pipeline&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;pipelineName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ServerlessAPI-Pipeline&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;synth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ShellStep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Build&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;CodePipelineSource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Grenguar/aws-cdk-api-workshop&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
          &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;main&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;connectionArn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;connectionArn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;}),&lt;/span&gt;
        &lt;span class="na"&gt;commands&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;npm ci&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;npm run build&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cd infra&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;npm ci&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;npm run build&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;npx cdk synth&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mv cdk.out ../&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}),&lt;/span&gt;
    &lt;span class="na"&gt;selfMutation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;pipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addStage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MyPipelineAppStage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Deploy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The synth option is the first we can start to discuss. It is basically our build stage all-in-one stop. SSM stores the connection ARN. It is a comprehensive security practice for putting it into managed service for secrets. The first argument for input connection is &lt;code&gt;&amp;lt;owner&amp;gt;/&amp;lt;repository_name&amp;gt;&lt;/code&gt;. This will work with the corporate accounts also. &lt;/p&gt;

&lt;p&gt;The commands option is basically a replacement for the buildspec. It is a sequence of commands which will be executed by the builder. In CDK, it is implemented as an array of strings. It can be handy for parametrization. It is important to note that first, the webpack project should be dealt with. Only after that will there be &lt;code&gt;code&lt;/code&gt; folder with our lambdas. Without that, infrastructure will fail.&lt;/p&gt;

&lt;p&gt;Self mutation gives the ability for the pipeline to be changed by itself. Previously, it was painful to change the settings of it. Now there are two stacks: implementation and pipeline. Both of them would be checked and deployed. 'MyPipelineAppStage' is the stack that has API Gateway, Lambdas, and DynamoDB table.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#choosing-the-main-stack"&gt;
  &lt;/a&gt;
  Choosing the main stack
&lt;/h2&gt;

&lt;p&gt;Previously there was only one CloudFormation stack - ApiStack. Now our primary stack is becoming the Pipeline one. In this case, the implementation stack becomes a Stage. It is a unit that has one or more stacks that would be deployed together. In this case, &lt;code&gt;infra/bin/infra.ts&lt;/code&gt; is the application entry. It will have only one stack to provision the pipeline (PipelineStack), whereas implementation one will be packed as a stage for ShellStep. The code example is here.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;MyPipelineAppStage&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Stage&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Construct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;StageProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ApiStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;APIStack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#provisioning-cdk-tools"&gt;
  &lt;/a&gt;
  Provisioning CDK Tools
&lt;/h3&gt;

&lt;p&gt;If one wants to use cdk, it is necessary to provision CDKToolkit. There is a one-line command for that. However, there are multiple versions of these tools. When I was preparing this article, my case was a problematic one. Deployments were not successful because of not enough rights for the CloudFormation to provision resources. For that case, I created &lt;strong&gt;Troubleshooting&lt;/strong&gt; part of this article. Refer to it before having issues with deployments. For the first-timers:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;CDK_NEW_BOOTSTRAP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
npx cdk bootstrap aws://&lt;span class="nv"&gt;$ACCOUNT&lt;/span&gt;/REGION
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why are we using &lt;code&gt;npx&lt;/code&gt;? In short: it will run cdk without the need to have it globally. From npx docs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Executes &amp;lt;command&amp;gt; either from a local node_modules/.bin, 
or from a central cache, installing any packages 
needed in order for &amp;lt;command&amp;gt; to run.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#time-to-build-and-deploy"&gt;
  &lt;/a&gt;
  Time to build and deploy
&lt;/h3&gt;

&lt;p&gt;We are almost done. Now the only thing is to run the command to provision pipeline from the &lt;code&gt;infra&lt;/code&gt; folder. It would be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx cdk deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it! Now we can relax and wait for a couple of minutes for the pipeline to succeed. The image shows the pipeline generated after that. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---YiMZP4u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjh7s6agvwp9v4893ey5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---YiMZP4u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjh7s6agvwp9v4893ey5.png" alt="AWS CodePipeline"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is sourcing the code from the latest git commit. After that, it builds the code according to the instructions in ShellStep. The third stage is checking the changes in the pipeline itself. The next one is interesting because it has two groups of artifacts. One is for the implementation code of lambdas. Another one is a handler for the custom Lambda resource for creating log groups and retention policies. The deployment stage will check the changeset of the generated CloudFormation project. &lt;/p&gt;




&lt;p&gt;In this article, I presented the modern way of creating CI/CD pipelines. The serverless use case is the most natural for me. However, one can use these findings for provisioning EC2 instances or ECS clusters. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#troubleshooting"&gt;
  &lt;/a&gt;
  Troubleshooting
&lt;/h3&gt;

&lt;p&gt;If the stack on the deployment stage is failing. Probably, you have issues with the 'CDKToolkit'. You will need to do these actions.&lt;/p&gt;

&lt;p&gt;So, what I did:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Found ‚ÄòCDKToolkit‚Äô in CFN. There I noted the S3 bucket.&lt;/li&gt;
&lt;li&gt;Deleted the toolkit stack.&lt;/li&gt;
&lt;li&gt;Deleted the bucket&lt;/li&gt;
&lt;li&gt;Did exactly like it was said in tutorial:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx cdk bootstrap aws://&amp;lt;account&amp;gt;/eu-west-1 &lt;span class="nt"&gt;--profile&lt;/span&gt; &amp;lt;profile&amp;gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--cloudformation-execution-policies&lt;/span&gt; arn:aws:iam::aws:policy/AdministratorAccess &lt;span class="se"&gt;\&lt;/span&gt;
    aws://&amp;lt;account&amp;gt;/&amp;lt;region&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Then, did
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx cdk deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;On the last step of the pipeline: checked that IAM Role for CFN deployment stack had AdminAccess policy in the role.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/dtconsole/latest/userguide/connections-create-github.html"&gt;Create GitHub/BitBucket connection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/cdk/latest/guide/cdk_pipeline.html"&gt;CDK Pipelines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>serverless</category>
      <category>aws</category>
      <category>tutorial</category>
      <category>devops</category>
    </item>
    <item>
      <title>Best üòç Coding app for beginners [Updated]</title>
      <author>Coderz</author>
      <pubDate>Thu, 21 Oct 2021 06:40:14 +0000</pubDate>
      <link>https://dev.to/h763/best-coding-app-for-beginners-updated-56g5</link>
      <guid>https://dev.to/h763/best-coding-app-for-beginners-updated-56g5</guid>
      <description>&lt;p&gt;Programming skills open doors to dozens of lucrative tech careers. And there‚Äôs never been a better or easier time to learn. Just like learning any other language, coding requires regular practice to master. But it‚Äôs not always easy for people to find time to practice in front of a computer. That‚Äôs why coding apps are so helpful. In this article, we‚Äôll cover the best coding apps on iOS and Android for those who want to learn to code.¬†&lt;/p&gt;
&lt;br&gt;Read More : &lt;b&gt;&lt;a href="https://www.codelivly.com/best-coding-apps-for-beginners/"&gt;Best Coding App For Beginners&lt;/a&gt;&lt;/b&gt;

</description>
    </item>
    <item>
      <title>25 amazing ü§© GitHub repositories that will help you ü™Ñ make a Beautiful Project</title>
      <author>Coderz</author>
      <pubDate>Thu, 21 Oct 2021 06:31:21 +0000</pubDate>
      <link>https://dev.to/h763/25-amazing-github-repositories-that-will-help-you-make-a-beautiful-project-94b</link>
      <guid>https://dev.to/h763/25-amazing-github-repositories-that-will-help-you-make-a-beautiful-project-94b</guid>
      <description>&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Today I would like to give examples of good GitHub repositories that will help you implement complex animations, as well as useful functions in your projects.&lt;/p&gt;
&lt;p&gt;So let's get started¬†&lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/10-awesome-github-repos-every-web-developer-should-know/&amp;amp;ved=2ahUKEwiw1e_qpqbzAhU78HMBHVvBAWkQFnoECBAQAQ&amp;amp;usg=AOvVaw1YdY91hlP3suK6HGMF0MXW"&gt;25 amazing ü§© GitHub repositories that will help you ü™Ñ make a Beautiful Project&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Top 5 Predictive Analytics Tools In 2021</title>
      <author>The APP Solutions</author>
      <pubDate>Thu, 21 Oct 2021 06:29:49 +0000</pubDate>
      <link>https://dev.to/theappsolutions/top-5-predictive-analytics-tools-in-2021-2p0e</link>
      <guid>https://dev.to/theappsolutions/top-5-predictive-analytics-tools-in-2021-2p0e</guid>
      <description>&lt;p&gt;&lt;strong&gt;Data is the new oil.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;How many times have you heard this cliched catchphrase? Our guess is - over 100 times. &lt;/p&gt;

&lt;p&gt;While we‚Äôre all tired of reminding that data is extremely important for future business intelligence, there‚Äôs a double meaning behind this phrase.&lt;/p&gt;

&lt;p&gt;First of all, just like oil, raw data isn't valuable in and of itself. Secondly, the value of oil has decreased dramatically in 2021, while data is in more demand than ever before.&lt;/p&gt;

&lt;p&gt;The true value of data crystallizes when it is gathered completely and accurately, gets intertwined with other relevant analytics data, and is used to make forecasts.&lt;/p&gt;

&lt;p&gt;The latter is when predictive analytics tools step on the scene. &lt;br&gt;
Today, we‚Äôll unravel the mission of &lt;a href="https://theappsolutions.com/blog/development/data_mining_vs_predictive_analytics/" rel="dofollow"&gt;predictive analytics and data mining&lt;/a&gt; by looking into the most popular predictive analytics tools in 2021.&lt;/p&gt;

&lt;h2&gt;A Short Primer On Predictive Analytics&lt;/h2&gt;

&lt;p&gt;Predictive Analytics Market Size is expected to register a record value of $5.7 billion by 2026. A myriad of factors drives the adoption of the predictive analytics market. These include digital transformation, innovations in business intelligence, data science, Artificial Intelligence, Machine Learning, and neural networks as well as remote practices due to the COVID-19 pandemic.&lt;/p&gt;

&lt;p&gt;Essentially, predictive analytics relies on data science, Artificial Intelligence, statistical algorithms, and Machine Learning algorithms to predict possible outcomes. The assumptions predictive analytics makes are based on historical data. &lt;/p&gt;

&lt;p&gt;But the biggest challenge for data science and predictive analytics in 2021 is that all historical data has been rendered useless. &lt;/p&gt;

&lt;p&gt;Guess, who‚Äôs to blame? (&lt;em&gt;clue: it starts with C and ends with 19&lt;/em&gt;). Luckily, innovative predictive analytics tools are here to ensure business resilience. The new future needs new data patterns.&lt;/p&gt;

&lt;h3&gt;What Are Predictive Analytics Tools?&lt;/h3&gt;
 

&lt;p&gt;Predictive analytics software refers to smart tools that process the existing data and use it to look into the future. But it‚Äôs not like you‚Äôre reading tea leaves to forecast your business future. The powerful combo of Machine Learning and Data Science ensures predictive analytics fetches an accurate prediction of your business's future.&lt;/p&gt;

&lt;p&gt;In 2021, data scientists don‚Äôt leverage the traditional approach of relying on historical data. The new real-time forecasting approach feeds on the current data that is relevant given the current state. In particular, predictive analytics now relies on any data gathered since March.&lt;/p&gt;

&lt;h2&gt;How Your Company Can Benefit From Predictive Analytics Software&lt;/h2&gt;
 

&lt;p&gt;Most business owners follow their gut feeling when they need to make an important decision. This flair is usually based on their own experience, professional advice, as well as their partners, friends, or relatives. And even if the idea pans out, it‚Äôs no more than a fluke.&lt;/p&gt;

&lt;p&gt;On the contrary, predictive analytics gives you a significant competitive advantage. It uses data mining, Machine Learning, and statistical techniques to squeeze the juice out of available data. &lt;/p&gt;

&lt;p&gt;Now, imagine that you always have a heads up on your business, know upcoming business trends, and the best solution in any situation. That‚Äôs right, you become invincible with 100% business resilience and predictive analytics.&lt;/p&gt;

&lt;p&gt;Here‚Äôs how predictive analytics solutions can improve your bottom line:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Find new product/service opportunities - by analyzing customer‚Äôs preferences, buying behavior, and responses, companies can tap into new areas of business or improve existing services;&lt;/li&gt;
&lt;li&gt;Optimize product and performance - predictive analytics tools also provide a deep look into the commercial offerings and supply chains as well as point out the improvement opportunities;&lt;/li&gt;
&lt;li&gt;Gain a deeper understanding of customers;&lt;/li&gt;
&lt;li&gt;Reduce costs and risks - by studying your past mistakes, you can prevent similar mistakes as well as select adequate precautionary actions to minimize the losses incurred.&lt;/li&gt;
&lt;li&gt;Meet consumer expectations - the advanced predictive analytics software will help you fine-tune your marketing tactics to cover the varying requirements of your current customers.&lt;/li&gt;
&lt;/ul&gt;
  

&lt;h2&gt;Real-World Use Cases of Predictive Analytics&lt;/h2&gt;

&lt;p&gt;If you‚Äôre still unmotivated to know more about predictive analytics, I‚Äôll give you an inspo board. This is how businesses of all sizes use predictive analytics solutions.&lt;/p&gt;

&lt;h3&gt;Churn Prevention&lt;/h3&gt;

&lt;p&gt;A churn prediction system uses big data to identify customers who may stop using your service or buying your product regularly. Such systems are used by most large SAAS companies to identify those most at risk of customer churn.&lt;/p&gt;

&lt;h3&gt;Fraud Detection&lt;/h3&gt;

&lt;p&gt;Predictive analytics tools and data mining may be some of the most effective ways an e-commerce merchant, bank, and other businesses can detect fraud. The predictive analytics system analyzes past data, trends, and variables, and then provides smarter fraud score algorithms.&lt;/p&gt;

&lt;h3&gt;Predictive maintenance&lt;/h3&gt;

&lt;p&gt;To keep their assets in peak operating condition, manufacturers pay due diligence to the well-being of their machines. Predictive analytics paves the way for predictive maintenance and monitors the current state of machinery for any irregularities or potential downtimes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.rolls-royce.com/products-and-services/nuclear/nuclear-lifecycle/operations-and-lifetime-extensions/ic-long-term-support/predictive-maintenance-pulse.aspx#section-download" rel="dofollow"&gt;Rolls-Royce&lt;/a&gt;, for example, monitors the aging of safety-critical I&amp;amp;C components with the help of Artificial Intelligence and predictive analytics software.&lt;/p&gt;

&lt;h3&gt;Healthcare diagnosis&lt;/h3&gt;

&lt;p&gt;Predictive analytics aims to inform clinicians of the possible events and outcomes, thus allowing them to prevent and treat health issues. It can be anything from detecting early signs of patient deterioration to &lt;a href="https://www.philips.com/a-w/about/news/archive/case-studies/20180507-delivering-predictive-care-for-at-risk-patients-in-their-homes.html" rel="dofollow"&gt;delivering predictive care&lt;/a&gt; for at-risk patients.&lt;/p&gt;

&lt;h3&gt;Virtual assistants&lt;/h3&gt;

&lt;p&gt;Coupled with deep learning, predictive analytics empowers the accurate work of virtual assistants. Solutions like Siri, OK Google, and Alexa are the most prominent examples of predictive analytics tools. &lt;/p&gt;

&lt;p&gt;They collect data, and through deep learning and predictive analytics, model the response and predict user behavior.&lt;/p&gt;

&lt;p&gt;Now let‚Äôs have a look at what data analytics tools can fast-forward your data-centered transformation.&lt;/p&gt;

&lt;h2&gt;What Data Analytics Platforms And Tools Are In Vogue Right Now?&lt;/h2&gt;

&lt;p&gt;If you haven‚Äôt unearthed the potential of predictive modeling data and predictive analytics, you can use the list below to get acquainted with top suppliers in this field.&lt;/p&gt;

&lt;h3&gt;SAS Advanced Analytics - Best business intelligence tool for enterprise&lt;/h3&gt;

&lt;p&gt;SAS Advanced Analytics software is coupled with cutting-edge algorithms that assist businesses in solving even the most intractable problems and embracing predictive analytics.&lt;/p&gt;

&lt;p&gt;SAS predictive analytics software has a full suite of analytics tools that guide your decision-making process and enable process automation at each data stage. Thus, you can rely on SAS advanced analytics for data and text mining, forecasts, data visualization, and machine learning.&lt;/p&gt;

&lt;p&gt;Besides, key features of SAS data management solution include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Data Mining;&lt;/li&gt;
&lt;li&gt;Statistical Analysis;&lt;/li&gt;
&lt;li&gt;Forecasting;&lt;/li&gt;
&lt;li&gt;Text Analytics;&lt;/li&gt;
&lt;li&gt;Predictive Analytics;&lt;/li&gt;
&lt;li&gt;Optimization and Simulation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In particular, SAS Data Mining capabilities underpin predictive modeling to uncover juicy opportunities and look into possible outcomes. Text Analytics helps sift through massive volumes of unstructured data to detect emerging trends and empowers the process of predictive analytics. Optimization and Simulation functionality models scenarios and offers recommendations to real-life challenges.&lt;/p&gt;

&lt;p&gt;Among other pros of SAS are the easy-to-navigate drag and drop display and great visual dashboards. However, to use predictive analytics, you‚Äôll need comprehensive training.&lt;/p&gt;

&lt;p&gt;SAS Advanced Analytics Pricing Plans include a free trial and quote-based plans per user. In the second case, you‚Äôll need to contact a vendor.&lt;/p&gt;

&lt;h3&gt;IBM SPSS Analytics Platform - Powerful analytics solution for researchers&lt;/h3&gt;
 

&lt;p&gt;No list of data and predictive analytics giants would be complete without IBM products. IBM SPSS Statistics is a cloud-based analytical software that empowers companies with granular statistical analysis of business data.&lt;/p&gt;

&lt;p&gt;IBM SPSS Statistics is a go-to data predictive platform for lots of companies, research centers, and independent analytical agencies that solve unique business tasks.&lt;/p&gt;

&lt;p&gt;Advanced statistical procedures and visualization in the SPSS system provide a reliable and user-friendly platform for processing subject data and solving complex business and research tasks. So whether it‚Äôs beating competitors or conducting research, you can count on this modeling tool. &lt;/p&gt;

&lt;p&gt;The software supports the following statistical research methods: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;regression analysis,&lt;/li&gt;
&lt;li&gt;decision trees,&lt;/li&gt; 
&lt;li&gt;forecasting,&lt;/li&gt; 
&lt;li&gt;neural networks,&lt;/li&gt; 
&lt;li&gt;categorization,&lt;/li&gt;
&lt;li&gt;combinatorial analysis,&lt;/li&gt; 
&lt;li&gt;complex sampling and others.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Among other key features of the SPSS Statistics Analytics:&lt;/p&gt;

&lt;ul&gt; 
&lt;li&gt;The system provides customized functions and user interfaces that cater to different skill levels and assigned responsibilities.&lt;/li&gt; 
&lt;li&gt;SPSS Statistics covers all major parts of the complex analytical process - from data preparation and management to predictive analytics and reporting.&lt;/li&gt; 
&lt;li&gt;SPSS offers you sophisticated statistical capabilities for analyzing the exact outcome.&lt;/li&gt;
&lt;li&gt;SPSS provides business users with design, plotting, reporting, and presentation features for more clarity, making it easy to put your results in a digestible form for other stakeholders.&lt;/li&gt;
&lt;/ul&gt;
 

&lt;p&gt;Pricing plans vary depending on the version. IBM SPSS Statistics is available for a free trial. It‚Äôs the main element of the SPSS Statistics suite that equips users with data access, data management, data preparation for analysis, data analysis, and report creation. &lt;/p&gt;

&lt;p&gt;You can also extend your Based edition for $99.00 per user per month with three optional add-ons or buy perpetual and term licenses for Base, Standard, Professional and Premium packages, including options to customize your configuration. &lt;/p&gt;

&lt;h3&gt;SAP Predictive Analytics Platform - Ultimate software for Big Data&lt;/h3&gt;
 

&lt;p&gt;This predictive analytics software enables AI-powered analytics and aims to make it as accessible as possible to the general audience. With augmented analytics features, business owners can tap into predictive analytics products with no intervention from data scientists.&lt;/p&gt;

&lt;p&gt;SAP Predictive analytics offers both on-premise implementations and a cloud-based version. &lt;/p&gt;

&lt;p&gt;SAP Predictive Analytics opens up a wide range of possibilities:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Conversational analytics - Natural Language Processing functionality allows business users to ask questions just like they would to their colleagues and get answers explained in natural language.&lt;/li&gt;
&lt;li&gt;Automated Machine Learning - self-service models that uncover relationships in your data and produce new insights with no manual input.&lt;/li&gt;
&lt;li&gt;Smart Insights - allow users to drill into their data visualizations without manual effort. Thus, they can look at the top contributors behind values or variances with just a click.&lt;/li&gt;
&lt;li&gt;Multifaceted set of features - allow you to automate data preparation, predictive modeling, and deployment, and easily monitor and re-train models.&lt;/li&gt;
&lt;li&gt;Uses integration with the R programming language to drive a variety of additional algorithms and custom scripts.&lt;/li&gt;
&lt;/ul&gt;
 

&lt;p&gt;SAP is compatible with Microsoft Azure and provides users with multiple Microsoft Azure services with one Advantco adapter and with no coding needed.&lt;/p&gt;

&lt;p&gt;You can either try SAP Predictive Analytics for free or request a demo.&lt;/p&gt;

&lt;h3&gt;Knime Analytics Platform - Analytics platform With intuitive Node-based workflow GUI&lt;/h3&gt;
 

&lt;p&gt;Knime Analytics Platform is an open-source framework for predictive analytics for data analysis. This framework allows you to implement the full cycle of data analysis including data reading from various data sources, transformation, and filtering, analysis, visualization, and export. &lt;/p&gt;

&lt;p&gt;It‚Äôs considered the top platform among predictive analytics tools for business intelligence due to its statistics and specific calculations, automatic AI learning, and integrated predictive modeling.&lt;/p&gt;

&lt;p&gt;Knime Analytics is an enterprise-grade tool for predictive analytics that relies on the might of the Eclipse platform. A powerful combination of other add-ons like Machine Learning algorithms and data mining assist business users in unraveling hidden data and gleaning business intelligence.&lt;/p&gt;

&lt;p&gt;The main differentiator of KNIME is its modular workflow approach. The latter documents and stores the analysis process, while leaving results always available for the user.&lt;/p&gt;

&lt;p&gt;Core KNIME features include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Streaming Analytics,&lt;/li&gt;
&lt;li&gt;Big Data Analytics,&lt;/li&gt;
&lt;li&gt;Statistical analysis,&lt;/li&gt;
&lt;li&gt;Reporting and analytics,&lt;/li&gt;
&lt;li&gt;Intelligent data analysis (IDA),&lt;/li&gt;
&lt;li&gt;Data Visualization,&lt;/li&gt;
&lt;li&gt;Machine Learning,&lt;/li&gt;
&lt;li&gt;Import/export of workflows (for exchanging with other KNIME users),&lt;/li&gt;
&lt;li&gt;API availability,&lt;/li&gt;
&lt;li&gt;Forecasting and predictive modeling.&lt;/li&gt;
&lt;/ul&gt;
 

&lt;p&gt;Moreover, Knime Analytics offers over 2000 modules, a wide range of integrated tools, sophisticated algorithms, and ready-to-deploy examples. This predictive analytics software supports only desktops and is a great fit for both SMEs and enterprises. It works on Microsoft Azure and enables data science cloud deployment.&lt;/p&gt;

&lt;p&gt;The drag and drop node function enables users to automate a huge number of database processes such as transactions, reading/writing, and others.&lt;/p&gt;

&lt;p&gt;The service is available on an annual subscription that is based on 5 users and 4 cores for execution.&lt;/p&gt;

&lt;h3&gt;Rapidminer Studio - Top free predictive analytics software&lt;/h3&gt;

&lt;p&gt;RapidMiner is a powerful and multi-user analytics platform with an extensive library of 1500+ algorithms and tools that provide the best model for every use case.&lt;/p&gt;

&lt;p&gt;RapidMiner Studio is an end-to-end data analytics tool. It is empowered by data modeling and machine learning that enable robust predictive modeling. The software is mounted on a fast drag and drop interface and offers active community support.&lt;/p&gt;

&lt;p&gt;Users can access ready-made templates for common use cases, including customer churn, preventive maintenance, supply chain management, and others. Here, data scientists repurpose existing code and embed new functionality via pre-built extensions. &lt;/p&gt;

&lt;p&gt;This analytics platform provides data mining and Machine Learning procedures for a spectrum of procedures, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Predictive and statistical modeling,&lt;/li&gt;
&lt;li&gt;Data set loading and transformation,&lt;/li&gt;
&lt;li&gt;Analytics Data visualization,&lt;/li&gt;
&lt;li&gt;Scoring,&lt;/li&gt;
&lt;li&gt;Data sets transformation,&lt;/li&gt;
&lt;li&gt;NLP extension, and others.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Designed for data science teams, RapidMiner software amplifies the entire life cycle of data science, including data preparation to machine learning, visualization of results, model validation, predictive model deployment, and model optimization.&lt;/p&gt;

&lt;p&gt;New users start with a 30-day trial of RapidMiner Studio Enterprise and then request pricing for their enterprise.&lt;/p&gt;

&lt;h2&gt;The Bottom Line&lt;/h2&gt;
 

&lt;p&gt;Data analytics has quickly made it to the front and center for businesses of all sizes. To follow the right path and meet the right future, you need to be able to gather, analyze data, and juice new insights. To do that, companies leverage business Intelligence services that bring easy data mining to the table.&lt;/p&gt;

&lt;p&gt;In this post, we had a quick look at the most popular data analytics platforms and predictive analytics tools in 2021. We can tell that there are no clear champions since all of them target different pain points of data analysis. You should make a decision based on your business needs and budget.&lt;/p&gt;

</description>
      <category>predictiveanalytics</category>
      <category>artificialintelligence</category>
      <category>machinelearning</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>5 best programming languages for AI advancement</title>
      <author>EveryPage</author>
      <pubDate>Thu, 21 Oct 2021 06:22:03 +0000</pubDate>
      <link>https://dev.to/everypagesite/5-best-programming-languages-for-ai-advancement-fc0</link>
      <guid>https://dev.to/everypagesite/5-best-programming-languages-for-ai-advancement-fc0</guid>
      <description>&lt;p&gt;Artificial intelligence (man-made brainpower) opens up a universe of opportunities for application designers. By exploiting AI or profound learning, you could create far superior client profiles, personalization, and suggestions, or consolidate more brilliant hunts, a voice interface, or wise help, or work on your application in quite a few alternate ways. You could even form applications that see, hear, and respond to circumstances you wont ever expect.&lt;/p&gt;

&lt;p&gt;Which programming language would it be advisable for you to figure out how to plumb the profundities of AI? Youll need a language with numerous great AI and profound learning libraries, obviously. It ought to likewise include great runtime execution, great instrument support, an enormous local area of developers, and a sound biological system of supporting bundles. That is an extensive rundown of necessities, yet there are still a lot of good alternatives.&lt;/p&gt;

&lt;p&gt;Here are my picks for the six best programming dialects for AI advancement, alongside two noteworthy notices. A portion of these dialects are on the ascent, while others are slipping. Still others you possibly need to think about in case youre keen on recorded profound learning designs and applications. How about we perceive how they all stack up.&lt;/p&gt;

&lt;h2&gt;Python&lt;/h2&gt;

&lt;p&gt;At number one, its still Python. How is it possible that it would be something else, truly? While there are incensing things about Python, in case youre accomplishing AI work, you more likely than not will utilize Python sooner or later. Whats more, a portion of the unpleasant spots have smoothed a bit.&lt;/p&gt;

&lt;p&gt;As we head into 2020, the issue of Python 2.x versus Python 3.x is becoming unsettled as pretty much every significant library upholds Python 3.x and is dropping Python 2.x help in a hurry. All in all, you can at last exploit all the new language includes decisively.&lt;/p&gt;

&lt;p&gt;And keeping in mind that Pythons bundling bad dreams where each unique arrangement is broken in a somewhat unique manner are as yet present, you can utilize Anaconda about 95% of the time and not stress over things to an extreme. In any case, it would be pleasant if the Python world could fix this long-standing issue for the last time.&lt;/p&gt;

&lt;p&gt;All things considered, the math and details libraries accessible in Python are practically unmatched in different dialects. NumPy has become so universal it is just about a standard API for tensor tasks, and Pandas brings Rs incredible and adaptable dataframes to Python. For regular language handling (NLP), you have the revered NLTK and the blazingly-quick SpaCy. For AI, there is the fight with Scikit-learn. Whats more, with regards to profound learning, the entirety of the current libraries (TensorFlow, PyTorch, Chainer, Apache MXNet, Theano, and so forth) are adequately Python-first undertakings.&lt;/p&gt;

&lt;p&gt;Assuming youre perusing state of the art profound learning research on arXiv, you will discover most of the studies that offer source code do as such in Python. Then, at that point there are different pieces of the Python environment. While IPython has become Jupyter Notebook, and less Python-driven, you will in any case track down that most Jupyter Notebook clients, and the vast majority of the scratch pad shared on the web, use Python. With respect to sending models, the approach of microservice designs and advances, for example, Seldon Core imply that its exceptionally simple to convey Python models underway nowadays.&lt;/p&gt;

&lt;p&gt;Theres no way to avoid it. Python is the language at the cutting edge of AI research, the one youll track down the most AI and profound learning structures for, and the one that nearly everyone in the AI world talks about. Therefore, Python is first among AI programming dialects, in spite of the way that your creator reveals the whitespace issues essentially one time each day.&lt;/p&gt;

&lt;h2&gt;C++&lt;/h2&gt;

&lt;p&gt;C++ is probably not going to be your best option when fostering an AI application, yet when you need to wring each and every digit of execution from the framework a situation that turns out to be more normal as profound learning goes to the edge and you need to run your models on asset obliged frameworks its an ideal opportunity to venture once again into the unnerving universe of pointers again.&lt;/p&gt;

&lt;p&gt;Fortunately, current C++ can be lovely to compose (genuine!). You have a selection of approaches. You can either make a plunge at the lower part of the stack, utilizing libraries like Nvidias CUDA to compose your own code that runs straightforwardly on your GPU, or you can utilize TensorFlow or PyTorch to get admittance to adaptable significant level APIs. Both PyTorch and TensorFlow permit you to stack models created in Python (or PyTorchs TorchScript subset of Python) and run them straight in a C++ runtime, drawing you nearer to the uncovered metal for creation while saving adaptability being developed.&lt;/p&gt;

&lt;p&gt;So, C++ turns into a basic piece of the tool stash as AI applications multiply across all gadgets from the littlest implanted framework to colossal groups. Artificial intelligence at the edge implies its difficult enough to be precise any longer; you should be acceptable and quick.&lt;/p&gt;

&lt;h2&gt;Java and other JVM dialects&lt;/h2&gt;

&lt;p&gt;The JVM group of dialects (Java, Scala, Kotlin, Clojure, and so on) keeps on being an incredible decision for AI application advancement. You have an abundance of libraries accessible for all pieces of the pipeline, regardless of whether its regular language handling (CoreNLP), tensor activities (ND4J), or a full GPU-sped up profound learning stack (DL4J). Besides you get simple admittance to enormous information stages like Apache Spark and Apache Hadoop.&lt;/p&gt;

&lt;p&gt;Java is the most widely used language of most ventures, and with the new language builds accessible in Java 8 and later forms, composing Java code isnt the scornful experience a considerable lot of us recollect. Composing an AI application in Java might feel a touch exhausting, however it can take care of business and you can utilize all your current Java framework for advancement, organization, and observation.&lt;/p&gt;

&lt;h2&gt;JavaScript&lt;/h2&gt;

&lt;p&gt;Youre probably not going to learn JavaScript exclusively for composing AI applications, yet Googles TensorFlow.js proceeds to improve and offer a fascinating method of conveying your Keras and TensorFlow models to your program or through Node.js utilizing WebGL for GPU-sped up computations.&lt;/p&gt;

&lt;p&gt;Notwithstanding, one thing we havent actually seen since the dispatch of TensorFlow.js is a tremendous deluge of JavaScript engineers flooding into the AI space. I feel that may be because of the encompassing JavaScript biological system not having the profundity of accessible libraries in contrast with dialects like Python.&lt;/p&gt;

&lt;p&gt;Further, on the worker side, theres not actually quite a bit of a benefit to conveying models with Node.js rather than one of the Python alternatives, so we might see JavaScript-based AI applications remain principally program situated soon. However, that actually sets out a lot of intriguing open doors for entertainment only like the Emoji Scavenger Hunt.&lt;/p&gt;

&lt;h2&gt;Swift&lt;/h2&gt;

&lt;p&gt;Swift For TensorFlow. A completely composed, sans cruft restricting of the best in class highlights of TensorFlow, and dim wizardry that permits you to import Python libraries as though you were utilizing Python in any case.&lt;/p&gt;

&lt;p&gt;The Fastai group is chipping away at a Swift form of their well known library, and were guaranteed bunches of additional advancements in producing and running models with moving a great deal of tensor smarts into the LLVM compiler. Is it creation prepared at the present time? Not actually, however it might for sure direct the way toward the up and coming age of profound learning improvement, so you ought to examine whats new with Swift.&lt;/p&gt;

&lt;h2&gt;R language&lt;/h2&gt;

&lt;p&gt;R comes in at the lower part of our rundown, and its declining. R is the language that information researchers love. Nonetheless, different software engineers regularly discover R somewhat aggravating, because of its dataframe-driven methodology. On the off chance that you have a devoted gathering of R engineers, it can bode well to utilize the incorporations with TensorFlow, Keras, or H2O for research, prototyping, and experimentation, however I wonder whether or not to suggest R for creation use or for greenfield improvement, because of execution and functional concerns. While you can compose performant R code that can be conveyed on creation workers, it will more likely than not be simpler to take that R model and recode it in Java or Python.&lt;/p&gt;

&lt;p&gt;Originally posted at: &lt;a href="https://en.everypage.site/technology/5-best-programming-languages-for-ai-advancement/"&gt;https://en.everypage.site/technology/5-best-programming-languages-for-ai-advancement/&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
