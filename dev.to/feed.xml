<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Top 3 mistakes every Test Automation Engineer makes!</title>
      <author>Dilpreet Johal</author>
      <pubDate>Wed, 06 Oct 2021 11:55:02 +0000</pubDate>
      <link>https://dev.to/automationbro/top-3-mistakes-every-test-automation-engineer-makes-47f</link>
      <guid>https://dev.to/automationbro/top-3-mistakes-every-test-automation-engineer-makes-47f</guid>
      <description>&lt;p&gt;In this article, I want to talk to you guys about Top 3 mistakes that I have seen every test automation engineer makes or have made at some point in their career. So let's get started -&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mistake-1-using-sleep-in-your-code%C2%A0"&gt;
  &lt;/a&gt;
  Mistake #1: Using "Sleep" in your code -
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j3VjEM2K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7o8cjaw3c0whb226irpn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j3VjEM2K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7o8cjaw3c0whb226irpn.png" alt="Example of a test using sleep (pause)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is one of the most common mistake I have seen everyone makes whenever they need to "fix" a test. Now, may be you already know or have heard that using "sleep" is bad in your code but let's look into why exactly this is bad - &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tests-take-longer-to%C2%A0complete"&gt;
  &lt;/a&gt;
  Tests take longer to complete
&lt;/h3&gt;

&lt;p&gt;So this one is obvious, you are adding hardcoded sleep of course it will take longer to complete. This is important because you want faster feedback right, that's the whole point of Agile approach and if few of your tests are taking like 30 mins to an hour or even more, that's adding a lot of extra time in your build pipeline.&lt;br&gt;
And if you are thinking I know I am adding this 2 second here, who cares no one will notice, well that takes us to our next point.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#using-sleep-without-being-aware-of%C2%A0it"&gt;
  &lt;/a&gt;
  Using "sleep" without being aware of it
&lt;/h3&gt;

&lt;p&gt;In the image below, we are using a method called .open() and right after that we are doing a 2 seconds wait to make sure the page loads.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hvqr-0_0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oyewkx9zvtutxfjeipuw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hvqr-0_0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oyewkx9zvtutxfjeipuw.png" alt="Calling the .open() method in the test"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But, let's understand what is happening inside the .open() method. Here, we are waiting for 2 seconds again. So most likely, the person that added 2 seconds wait in the previous wasn't aware of the wait that's already within the method.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0DDX2XdH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nv28kqa03w5kgmokoq99.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0DDX2XdH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nv28kqa03w5kgmokoq99.png" alt=".open() method implementation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While the total 4 seconds wait might not seem that bad but think of large projects where you have 10s and 100s of files, it will be a big problem if you are using sleep commands everywhere.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#makes-your-tests-unstable-flakiness"&gt;
  &lt;/a&gt;
  Makes your tests unstable (flakiness)
&lt;/h3&gt;

&lt;p&gt;Adding sleep makes your test unstable because you don't know how long to wait for a particular page or an element to load. Taking a look at our previous example once again - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Person A added 2 sec when they wrote the original test&lt;/li&gt;
&lt;li&gt;Person B had issues with 2 sec due to slowness so they ended up adding 2 seconds more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now imagine if you are running your tests in the env that is slow then these tests might fail again, so all you are doing is going back and adding more time to your tests which takes us back to this whole problem once again!&lt;/p&gt;

&lt;p&gt;Ok by now I hope you have realized the problems with using sleep commands, so what should we do instead?&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#99-of-the-time-you-can-replace-sleep-commands-with-appropriate-wait-commands"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;99% of the time you can replace 'sleep' commands with appropriate 'wait' commands&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;And if you are thinking why only 99%? That's because you might run into some scenarios where the wait commands are just not working, and this is really extreme case but I will be honest that yes sometimes you will encounter those. In that particular case it is fine to use sleep but come back to that problem again and think if theres a better way to implement that solution.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#mistake-2-over-complicated-tests"&gt;
  &lt;/a&gt;
  Mistake #2: Over Complicated Tests
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FxZqTQF2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lptzs7eildpxdtr1myce.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FxZqTQF2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lptzs7eildpxdtr1myce.png" alt="Example of an over complicated test"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another common mistake that I have seen over the years is writing over complicated long &amp;amp; complex test as shown in the image above. One key thing to notice in the above image is that at the bottom we have 180k ms i.e. 3 minutes of timeout added as the test takes that long to complete. &lt;/p&gt;

&lt;p&gt;So if you are writing tests like this then lets talk about the disadvantages of writing such tests -&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#no-idea-what-test-is-trying-to%C2%A0do"&gt;
  &lt;/a&gt;
  No idea what test is trying to do
&lt;/h3&gt;

&lt;p&gt;So this one is funny because there are times where I have written long and complex tests and in couple of months when I came back to it, I had no clue what my test was trying to do. And of course, you can imagine how other team members would feel when they read this kind of code (all I can say is I don't want to be near them at that time!)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#long-time-for-test-to%C2%A0complete%C2%A0"&gt;
  &lt;/a&gt;
  Long time for test to complete 
&lt;/h3&gt;

&lt;p&gt;This is obvious, when you write long tests, it will take long time to complete as well that's why we saw that 3 min timeout in the image above. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#longer-tests-causes-test-flakiness"&gt;
  &lt;/a&gt;
  Longer tests causes test flakiness
&lt;/h3&gt;

&lt;p&gt;What happens when we write long tests? Well, long tests are generally lot more unstable because simply theres a lot of things going on and due to that, it has a lot more chances to fail.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#difficult-to-debug-the%C2%A0code"&gt;
  &lt;/a&gt;
  Difficult to debug the code
&lt;/h3&gt;

&lt;p&gt;Which takes us to our last point, when the tests fail then oh boy! Good luck trying to debug this. Essentially, you will be running a test which takes 3–5 mins to complete and you are trying to find out in which line where exactly the issue is and how you can fix it. If you haven't run into this problem then I will say you are lucky as this is quite painful to work with.&lt;/p&gt;

&lt;p&gt;So what should we do instead? Well here's what I think - &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#test-should-focus-on-doing-1-thing-at-a-time"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Test should focus on doing 1 thing at a time.&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Now, don't take this statement to heart, by 1 thing it could be something that you and your team decides - can be 1 feature, 1 component, 1 E2E flow which completes in a reasonable amount of time (ideally less than a min).&lt;/p&gt;

&lt;p&gt;As long as the test has a single purpose which everyone understands, I think that's good enough to work with.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#mistake-3-test-dependency"&gt;
  &lt;/a&gt;
  Mistake #3: Test Dependency
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hSXesa9H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6da6e5q9dfvkd0oyswlg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hSXesa9H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6da6e5q9dfvkd0oyswlg.png" alt="Example of one test depending on another test"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the example above, the second test is dependent on the first test as that's where we open up the url for the page we are testing. This is bad because of few reasons:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#unable-to-run-individual-test-on%C2%A0failure"&gt;
  &lt;/a&gt;
  Unable to run individual test on failure
&lt;/h3&gt;

&lt;p&gt;If the second test fails due to some reason, you will not be able to run that test only as it depending on the first test where we are opening up the url. The only options you have is to run both the tests which will take longer time to execute or you will have to refactor your tests which we will talk about shortly.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#changing-the-order-of-the-test-will-cause-the-test-to%C2%A0fail"&gt;
  &lt;/a&gt;
  Changing the order of the test will cause the test to fail
&lt;/h3&gt;

&lt;p&gt;If someone else comes and simply change the order of these tests, it will start failing again because their test buddy is not in the same order as before. This is another big issue as now you will need to know the order of each of these tests to run them in future.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#makes-it-difficult-to-refactor-the%C2%A0code"&gt;
  &lt;/a&gt;
  Makes it difficult to refactor the code
&lt;/h3&gt;

&lt;p&gt;Now, when you do decide to make refactor in your tests, it would be quite painful as you will need to understand how all these dependencies work and have to fix all that to be able to do any kind of refactor which will end up taking a lot more of your time.&lt;/p&gt;

&lt;p&gt;So what should we do instead?&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#tests-should-be-isolated-independent"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Tests should be Isolated / Independent.&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Your goal should be to write tests which can be ran individually without relying on any other tests or even any other data. This will give you a lot more flexibility if you want to do any refactor or simply reorganize your tests in future.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#lets-review"&gt;
  &lt;/a&gt;
  Let's Review
&lt;/h2&gt;

&lt;p&gt;Let's do a quick sum up of everything we covered in this article -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Avoid using 'Sleep' in your code&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Do not write long and complex tests&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tests should not depend on each other&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hopefully if you avoid these mistakes you can create a stable and efficient test framework.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article &amp;amp; would like to learn more about Test automation &amp;amp; Best Practices then you should check out my new course on &lt;a href="https://medium.com/r?url=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fwebdriverio-complete-beginner-course%2F%3FreferralCode%3D5190D58FC784B9F4E1AD"&gt;WebdriverIO&lt;/a&gt; where I teach you how to do Web Automation using the industry standard best practices. &lt;/p&gt;

&lt;p&gt;You can check out the promo video of the course below:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/xgDDYeoxQlI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>testing</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>How Does React Native Work?</title>
      <author>MaxIam_777</author>
      <pubDate>Wed, 06 Oct 2021 11:49:21 +0000</pubDate>
      <link>https://dev.to/akveo/how-does-react-native-work-2a8h</link>
      <guid>https://dev.to/akveo/how-does-react-native-work-2a8h</guid>
      <description>&lt;p&gt;React Native is one of the leading cross-platform developing frameworks nowadays. &lt;a href="https://www.statista.com/statistics/869224/worldwide-software-developer-working-hours/"&gt;Recent research shows&lt;/a&gt; that 38% of developers use React Native to create mobile, desktop, and other types of apps in 2021.&lt;/p&gt;

&lt;p&gt;React Native is valuable because of the open-source, broad spectrum of features and application area it presents. In this article, we invite you to look under the hood of the framework and find out:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is React Native;&lt;/li&gt;
&lt;li&gt;How does React Native work?;&lt;/li&gt;
&lt;li&gt;React Native development process;&lt;/li&gt;
&lt;li&gt;React Native features;&lt;/li&gt;
&lt;li&gt;The future of React Native.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-react-native"&gt;
  &lt;/a&gt;
  What is React Native
&lt;/h2&gt;

&lt;p&gt;React Native was created in 2015 by Facebook. Developers wrote it in JavaScript after they faced the problem of rendering React web applications on mobile devices. It gained popularity very fast for its features and capabilities. Among the React Native applications are Instagram, Facebook, Tesla, Skype, UberEats, Walmart, and Shopify.&lt;/p&gt;

&lt;p&gt;Initially, the Facebook team designed React Native to create natively rendering Android, and iOS mobile apps, using React JS library. Then, due to the open environment of the framework, developers from all over the world contributed to it and extended its capabilities. Now, &lt;a href="https://reactnative.dev/docs/out-of-tree-platforms"&gt;it works with major mobile platforms&lt;/a&gt; and Linux, macOS, Windows, etc. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-react-native-work"&gt;
  &lt;/a&gt;
  How does React Native work?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#react-native-architecture"&gt;
  &lt;/a&gt;
  React Native architecture
&lt;/h3&gt;

&lt;p&gt;The cross-platform capability of React Native becomes possible owing to its unique architecture. &lt;/p&gt;

&lt;p&gt;The core element of React Native architecture is the Bridge. This system employs React library to render the application on a device. Simply put, the bridge transforms the JS code into the native components and vice versa. The bridge translates JavaScript into platform-specific components. It gets the JS call, leverages the APIs (Kotlin, Objective C, Java), which allows native rendering of an application. The process doesn’t affect user experience because these async calls take place apart from the main thread.&lt;/p&gt;

&lt;p&gt;However, if your app employs multiple threads and large amounts of data, this structure can cause delays. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#development-process"&gt;
  &lt;/a&gt;
  Development process
&lt;/h3&gt;

&lt;p&gt;React Native is based on React and uses the single JavaScript codebase to reuse the code on various platforms. Unlike Ionic and many other cross-platform development frameworks, React Native renders native components by invoking platform-specific APIs. For instance, to render UI components on iOS, React Native uses either Objective C or Swift APIs. As for Android mobile applications, it will be Java or Kotlin. In fact, a developer doesn’t need to know Objective C or Java to create the apps. &lt;/p&gt;

&lt;p&gt;The React Native development process happens in JavaScript, TypeScript, and JSX. The developers can reuse significant parts (up to 100%) of the code. &lt;/p&gt;

&lt;p&gt;Another peculiarity of React Native is its commands for component creation. Instead of HTML components, RN has specific components that replace them.&lt;/p&gt;

&lt;p&gt;Also, features like 3d party library support, hot reload, and vast UI libraries make the development process much more easy and productive for developers. When an application is ready, you can connect it with &lt;a href="https://www.akveo.com/blog/7-best-react-native-databases-and-how-to-choose-the-right-one-in-2021"&gt;a cloud or local database&lt;/a&gt; to provide the storage capacity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-native-features"&gt;
  &lt;/a&gt;
  React Native features
&lt;/h2&gt;

&lt;p&gt;Here, we will elaborate on React Native features that make the framework prominent.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#npm-repository-support"&gt;
  &lt;/a&gt;
  NPM repository support
&lt;/h3&gt;

&lt;p&gt;NPM (Node Package Manager) streamlines React Native apps development process. NPM is a repository of pre-made libraries that developers can use working with React Native framework. This feature makes the development process much faster, allowing React Native developers to upload the code patterns from the NPM libraries. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-reusability"&gt;
  &lt;/a&gt;
  Code reusability
&lt;/h3&gt;

&lt;p&gt;This is the core feature of any cross-platform development framework. However, the percentage of code you can reuse varies from platform to platform. In the case of React Native, you can use almost all the code throughout the different platforms. This feature saves plenty of time and reduces costs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flexible-programming-language"&gt;
  &lt;/a&gt;
  Flexible programming language
&lt;/h3&gt;

&lt;p&gt;The programming language and its flexibility play a crucial part in the framework’s performance and success. The more common the core language of the cross-platform development framework, the faster and easier the learning process becomes. It means you won’t have any problems training your JS developers to work with React Native. However, if you want to create a unique app faster, it makes sense &lt;a href="https://www.akveo.com/blog/how-to-hire-a-dedicated-react-native-developer-in-2021-ultimate-guide-interview-questions"&gt;to hire experienced React Native developers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Apart from that, React Native uses JavaScript as a base and supports TypeScript out-of-the-box. These peculiarities make the React Native platform accessible for a larger group of developers. &lt;a href="https://insights.stackoverflow.com/survey/2020#technology-programming-scripting-and-markup-languages-professional-developers"&gt;According to the latest developer survey&lt;/a&gt;, JS is the most popular programming language, with around 70% of developers using it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#strong-developer-community"&gt;
  &lt;/a&gt;
  Strong developer community
&lt;/h3&gt;

&lt;p&gt;React Native framework became popular among developers around the world almost instantly after its launch in 2015. Ever since, the community has been growing and contributing to the open-source framework, extending its functionality and making it faster. This characteristic secures the future of React Native cross-platform framework and makes it attractive for other developers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3d-party-libraries-support"&gt;
  &lt;/a&gt;
  3d party libraries support
&lt;/h3&gt;

&lt;p&gt;Another feature that makes React Native stand out from the other cross-platform frameworks is the 3d party libraries’ support. Integration with 3d party libraries empowers developers with more out-of-the-box solutions and broadens the development opportunities. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#high-performance-in-mobile-environments"&gt;
  &lt;/a&gt;
  High performance in mobile environments
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.akveo.com/blog/react-native-for-mobile-app-development-points-to-consider-in-2021"&gt;React Native has been working with mobile platforms&lt;/a&gt; (iOS, Android) from the first day of its existence. No wonder it has excellent performance with mobile apps development. React Native developers can reuse more code in the mobile environment than in any other, making it the fastest cross-platform framework for mobile apps now. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#live-amp-hot-reload"&gt;
  &lt;/a&gt;
  Live &amp;amp; Hot reload
&lt;/h3&gt;

&lt;p&gt;The HMR (Hot Module Replacement) facility allows React Native developers to change, add, and modify modules while the system is on the go. As a result, this feature streamlines the app development process in the following ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Saves time by updating only the changed code;&lt;/li&gt;
&lt;li&gt;Retains application’s state (that’s lost during the full reload);&lt;/li&gt;
&lt;li&gt;Updates the browser as soon as modifications in the JS code are made.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The live reload feature of React Native allows you to see the changes on your screen as soon as you change them. This feature is especially useful for mobile apps development. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rich-ui-capabilities%C2%A0"&gt;
  &lt;/a&gt;
  Rich UI capabilities 
&lt;/h3&gt;

&lt;p&gt;React Native framework is the go-to option if you give much attention to the UI of your application. The framework has exceptional rendering capabilities along with numerous UI libraries for all types of applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-future-of-react-native"&gt;
  &lt;/a&gt;
  The future of React Native
&lt;/h2&gt;

&lt;p&gt;The Facebook team, along with all the contributors from the developer community, continue upgrading the React Native environment. They add new features, widen the functionality of React Native, and expand its cross-platform capacity. &lt;/p&gt;

&lt;p&gt;There is no doubt that with the high performance and the dedicated developer community behind it, React Native is here to stay and will continue to emerge. Currently, React Native framework emerges in the following directions:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#streaming-model-upgrade"&gt;
  &lt;/a&gt;
  Streaming model upgrade
&lt;/h3&gt;

&lt;p&gt;Currently, React Native community is bringing to life the Fabric project that should change the existing mechanism once and for all. It will allow developers to invoke JavaScript synchronously on a given thread. This feature will reduce the main thread load time without hindering the response.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#moving-towards-platformagnosticism"&gt;
  &lt;/a&gt;
  Moving towards platform-agnosticism
&lt;/h3&gt;

&lt;p&gt;Platform-agnosticism is a certain app development philosophy that aims to create totally cross-platform applications. According to the concept, the ideal app is the one you can create once and use on every platform without any additional code manipulations. Although it’s not easy to achieve, the React Native community strives to make the framework capable of creating perfectly cross-platform applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bridge-simplification"&gt;
  &lt;/a&gt;
  Bridge simplification
&lt;/h3&gt;

&lt;p&gt;The next development direction React Native community is moving towards is bridge simplification. This will enhance direct invocation between native and JavaScript and allow the creation of new debugging tools.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#extension-of-async-capabilities"&gt;
  &lt;/a&gt;
  Extension of Async capabilities
&lt;/h3&gt;

&lt;p&gt;Async upgrade is aiming to enhance the asynchronous rendering of React Native framework. This, in its turn, will streamline asynchronous data handling and rendering.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Taking into account all the technologies and features React Native represents, we can say for sure that it is a top cross-platform development framework. Developer community recognition, thousands of outstanding applications with billiards of users prove it. With the support of Facebook and thousands of contributors, React Native will definitely evolve and make the app development process easier, faster, and more enjoyable.&lt;/p&gt;

&lt;p&gt;By the way, the Akveo developers’ team is proud to add value to the React Native community with the free and open-source UI Kitten based on the &lt;a href="https://eva.design/products"&gt;Eva Design system&lt;/a&gt;. Many developers saved their time, and money, using it. You can &lt;a href="https://akveo.github.io/react-native-ui-kitten/"&gt;try the Kitten and see all the benefits for yourself&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>reactnative</category>
      <category>beginners</category>
      <category>opensource</category>
    </item>
    <item>
      <title>🚀 The Missing Docker Crash Course for Developers</title>
      <author>Bobby Iliev</author>
      <pubDate>Wed, 06 Oct 2021 11:41:14 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/the-missing-docker-crash-course-for-developers-2ccb</link>
      <guid>https://dev.to/bobbyiliev/the-missing-docker-crash-course-for-developers-2ccb</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction-to-docker"&gt;
  &lt;/a&gt;
  Introduction to Docker
&lt;/h1&gt;




&lt;p&gt;It is more likely than not that &lt;strong&gt;Docker&lt;/strong&gt; and containers are going to be part of your IT career in one way or another.&lt;/p&gt;

&lt;p&gt;In this blog post series I'll cover the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  What are Docker images, containers and Docker Hub&lt;/li&gt;
&lt;li&gt;  Installing Docker on Ubuntu Linux on a DigitalOcean Droplet&lt;/li&gt;
&lt;li&gt;  Working with Docker containers&lt;/li&gt;
&lt;li&gt;  Working with Docker images&lt;/li&gt;
&lt;li&gt;  Deploying a Dockerized app&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'll be using &lt;strong&gt;DigitalOcean&lt;/strong&gt; for all of the demos, so I would strongly encourage you to create a &lt;strong&gt;DigitalOcean&lt;/strong&gt; account follow along. You would learn more by doing!&lt;/p&gt;

&lt;p&gt;To make things even better you can use my referral link to get a free $100 credit that you could use to deploy your virtual machines and test the guide yourself on a few &lt;strong&gt;DigitalOcean servers&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://m.do.co/c/2a9bba940f39"&gt;DigitalOcean $100 Free Credit&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Once you have your account here's how to deploy your first Droplet/server:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.digitalocean.com/docs/droplets/how-to/create/"&gt;https://www.digitalocean.com/docs/droplets/how-to/create/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'll be using &lt;strong&gt;Ubuntu 18.04&lt;/strong&gt; so I would recommend that you stick to the same so you could follow along.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-a-container"&gt;
  &lt;/a&gt;
  What is a container?
&lt;/h2&gt;

&lt;p&gt;According to the official definition from the &lt;a href="//docker.com"&gt;docker.com&lt;/a&gt; website, a container is a standard unit of software that packages up code and all its dependencies so the application runs quickly and reliably from one computing environment to another. A Docker container image is a lightweight, standalone, executable package of software that includes everything needed to run an application: code, runtime, system tools, system libraries, and settings.&lt;/p&gt;

&lt;p&gt;Container images become containers at runtime and in the case of Docker containers - images become containers when they run on Docker Engine. Available for both Linux and Windows-based applications, containerized software will always run the same, regardless of the infrastructure. Containers isolate software from its environment and ensure that it works uniformly despite differences for instance between development and staging.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DxUxL9qw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/container-what-is-container.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DxUxL9qw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/container-what-is-container.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-a-docker-image"&gt;
  &lt;/a&gt;
  What is a Docker image?
&lt;/h2&gt;

&lt;p&gt;A &lt;strong&gt;Docker Image&lt;/strong&gt; is just a template used to build a running Docker Container, similar to the ISO files and Virtual Machines. The containers are essentially the running instance of an image. Images are used to share a containerized applications. Collections of images are stored in registries like &lt;a href="https://hub.docker.com/"&gt;DockerHub&lt;/a&gt; or private registries.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eyWpF0pZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/1%2Ap8k1b2DZTQEW_yf0hYniXw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eyWpF0pZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/1%2Ap8k1b2DZTQEW_yf0hYniXw.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-docker-hub"&gt;
  &lt;/a&gt;
  What is Docker Hub?
&lt;/h2&gt;

&lt;p&gt;DockerHub is the default &lt;strong&gt;Docker image registry&lt;/strong&gt; where we can store our &lt;strong&gt;Docker images&lt;/strong&gt;. You can think of it as GitHub for Git projects.&lt;/p&gt;

&lt;p&gt;Here's a link to the Docker Hub:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hub.docker.com"&gt;https://hub.docker.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can sign up for a free account. That way you could push your Docker images from your local machine to DockerHub.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#installing-docker"&gt;
  &lt;/a&gt;
  Installing Docker
&lt;/h1&gt;

&lt;p&gt;Nowadays you can run Docker on Windows, Mac and of course Linux. I will only be going through the Docker installation for Linux as this is my operating system of choice.&lt;/p&gt;

&lt;p&gt;I'll deploy an &lt;strong&gt;Ubuntu VM on DigitalOcean&lt;/strong&gt; so feel free to go ahead and do the same:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.digitalocean.com/products/droplets/how-to/create"&gt;Create a Droplet DigitalOcean&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once your server is up and running, SSH to the Droplet and follow along!&lt;/p&gt;

&lt;p&gt;If you are not sure how to SSH, you can follow the steps here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.digitalocean.com/docs/droplets/how-to/connect-with-ssh/"&gt;https://www.digitalocean.com/docs/droplets/how-to/connect-with-ssh/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The installation is really straight forward, you could just run the following command, it should work on all major &lt;strong&gt;Linux&lt;/strong&gt; distros:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;wget -qO- https://get.docker.com | sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It would do everything that's needed to install &lt;strong&gt;Docker on your Linux machine&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;After that, set up Docker so that you could run it as a non-root user with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo usermod -aG docker ${USER}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To test &lt;strong&gt;Docker&lt;/strong&gt; run the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get some more information about your Docker Engine, you can run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker info
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the &lt;code&gt;docker info&lt;/code&gt; command, we can see how many running containers that we've got and some server information.&lt;/p&gt;

&lt;p&gt;The output that you would get from the docker version command should look something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C-_TwLai--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/tuGSemS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C-_TwLai--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/tuGSemS.png" alt="docker version output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In case you would like to install Docker on your Windows PC or on your Mac, you could visit the official Docker documentation here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.docker.com/docker-for-windows/install/"&gt;https://docs.docker.com/docker-for-windows/install/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.docker.com/docker-for-mac/install/"&gt;https://docs.docker.com/docker-for-mac/install/&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;That is pretty much it! Now you have Docker running on your machine!&lt;/p&gt;

&lt;p&gt;Now we are ready to start working with containers! We will pull a &lt;strong&gt;Docker image&lt;/strong&gt; from the &lt;strong&gt;DockerHub&lt;/strong&gt;, we will run a container, stop it, destroy it and more!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#working-with-docker-containers"&gt;
  &lt;/a&gt;
  Working with Docker containers
&lt;/h1&gt;

&lt;p&gt;Once you have your &lt;strong&gt;Ubuntu Droplet&lt;/strong&gt; ready, ssh to the server and follow along!&lt;/p&gt;

&lt;p&gt;So let's run our first Docker container! To do that you just need to run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker run hello-world
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will get the following output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mrAynivc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/docker-run.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mrAynivc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/docker-run.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We just ran a container based on the &lt;strong&gt;hello-world Docker Image&lt;/strong&gt;, as we did not have the image locally, docker pulled the image from the &lt;strong&gt;&lt;a href="https://hub.docker.com"&gt;DockerHub&lt;/a&gt;&lt;/strong&gt; and then used that image to run the container. &lt;br&gt;
All that happened was: the &lt;strong&gt;container ran&lt;/strong&gt;, printed some text on the screen and then exited.&lt;/p&gt;

&lt;p&gt;Then to see some information about the running and the stopped containers run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker ps -a
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will see the following information for your &lt;strong&gt;hello-world container&lt;/strong&gt; that you just ran:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;root@docker:~# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                     PORTS               NAMES
62d360207d08        hello-world         "/hello"            5 minutes ago       Exited (0) 5 minutes ago                       focused_cartwright
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In order to list the locally available Docker images on your host run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker images
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#pulling-an-image-from-docker-hub"&gt;
  &lt;/a&gt;
  Pulling an image from Docker Hub
&lt;/h2&gt;

&lt;p&gt;Let's run a more useful container like an &lt;strong&gt;Apache&lt;/strong&gt; container for example. &lt;/p&gt;

&lt;p&gt;First, we can pull the image from the docker hub with the &lt;strong&gt;docker pull command&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker pull webdevops/php-apache
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will see the following output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CUdZ5wID--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/docker-pull-php-apache.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CUdZ5wID--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/docker-pull-php-apache.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then we can get the image ID with the docker images command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker images
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output would look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NSztkHkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/docker-images.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NSztkHkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/docker-images.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note, you do not necessarily need to pull the image, this is just for demo pourpouses. When running the &lt;code&gt;docker run&lt;/code&gt; command, if the image is not available locally, it will automatically be pulled from Docker Hub.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After that we can use the &lt;strong&gt;docker run&lt;/strong&gt; command to spin up a new container:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker run -d -p 80:80 IMAGE_ID
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Quick rundown of the arguments that I've used:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;-d&lt;/code&gt;: it specifies that I want to run the container in the background. That way when you close your terminal the container would remain running.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;-p 80:80&lt;/code&gt;: this means that the traffic from the host on port 80 would be forwarded to the container. That way you could access the Apache instance which is running inside your docker container directly via your browser.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The output of the above command would look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SncWgyJd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/docker-run-image_id.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SncWgyJd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/docker-run-image_id.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With the docker info command now we can see that we have 1 running container. &lt;/p&gt;

&lt;p&gt;And with the &lt;code&gt;docker ps&lt;/code&gt; command we could see some useful information about the container like the container ID, when the container was started and etc.:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;root@docker:~# docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS                                   NAMES
7dd1d512b50e        fd4f7e58ef4b        "/entrypoint supervi…"   About a minute ago   Up About a minute   443/tcp, 0.0.0.0:80-&amp;gt;80/tcp, 9000/tcp   pedantic_murdock
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#stopping-and-restarting-a-docker-container"&gt;
  &lt;/a&gt;
  Stopping and restarting a Docker Container
&lt;/h2&gt;

&lt;p&gt;Then you can stop the running container with the docker stop command followed by the container ID:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker stop CONTAINER_ID
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you need to you can start the container again:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker start CONTAINER_ID
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In order to restart the container you can use the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker restart CONTAINER_ID
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#accessing-a-running-container"&gt;
  &lt;/a&gt;
  Accessing a running container
&lt;/h2&gt;

&lt;p&gt;If you need to attach to the container and run some commands inside the container use the &lt;code&gt;docker exec&lt;/code&gt; command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker exec -it CONTAINER_ID /bin/bash 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That way you will get to a &lt;strong&gt;bash shell&lt;/strong&gt; in the container and execute some commands inside the container itself. &lt;/p&gt;

&lt;p&gt;Then to detach from the interactive shell press &lt;code&gt;CTRL+PQ&lt;/code&gt; that way you will not stop the container but just detached from the interactive shell.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QnHWD2v6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/docker-exec-stop1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QnHWD2v6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/docker-exec-stop1.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#deleting-a-container"&gt;
  &lt;/a&gt;
  Deleting a container
&lt;/h2&gt;

&lt;p&gt;To delete the container run first make sure that the container is not running and then run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker rm CONTAINER_ID
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you would like to delete the container and the image all together, just run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker rmi IMAGE_ID
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;With that you now know how to pull Docker images from the &lt;strong&gt;Docker Hub&lt;/strong&gt;, run, stop, start and even attach to Docker containers!&lt;/p&gt;

&lt;p&gt;We are ready to learn how to work with &lt;strong&gt;Docker images!&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-are-docker-images"&gt;
  &lt;/a&gt;
  What are Docker Images
&lt;/h1&gt;

&lt;p&gt;A Docker Image is just a template used to build a running Docker Container, similar to the ISO files and Virtual Machines. The containers are essentially the running instance of an image. Images are used to share a containerized applications. Collections of images are stored in registries like DockerHub or private registries.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#working-with-docker-images"&gt;
  &lt;/a&gt;
  Working with Docker images
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;docker run&lt;/code&gt; command downloads and runs images at the same time. But we could also only download images if we wanted to wit the docker pull command. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker pull ubuntu
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or if you want to get a specific version you could also do that with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker pull ubuntu:14.04
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then to list all of your images use the docker images command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker images
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You would get a similar output to:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EtctgC4U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/docker-images-list.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EtctgC4U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/docker-images-list.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The images are stored locally on your docker host machine.&lt;/p&gt;

&lt;p&gt;To take a look a the docker hub, go to: &lt;a href="https://hub.docker.com"&gt;https://hub.docker.com&lt;/a&gt; and you would be able to see where the images were just downloaded from.&lt;/p&gt;

&lt;p&gt;For example, here's a link to the &lt;strong&gt;Ubuntu image&lt;/strong&gt; that we've just downloaded:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hub.docker.com/_/ubuntu"&gt;https://hub.docker.com/_/ubuntu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There you could find some useful information.&lt;/p&gt;

&lt;p&gt;As Ubuntu 14.04 is really outdated, to delete the image use the &lt;code&gt;docker rmi&lt;/code&gt; command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker rmi ubuntu:14.04
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#modifying-images-adhoc"&gt;
  &lt;/a&gt;
  Modifying images ad-hoc
&lt;/h2&gt;

&lt;p&gt;One of the ways of modifying images is with ad-hoc commands. For example just start your ubuntu container.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker run -d -p 80:80 IMAGE_ID
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that to attach to your running container you can run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker exec -it container_name /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install whatever packages needed then exit the container just press &lt;code&gt;CTRL+P+Q&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To then save your changes run the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker container commit ID_HERE
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then list your images and note your image ID:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker images ls
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The process would look as follows:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OUzKolab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/docker-commit.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OUzKolab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/docker-commit.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you would notice your newly created image would not have a name nor a tag, so in order tag your image run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker tag IMAGE_ID YOUR_TAG
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if you list your images you would see the following output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--puH9mUA4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/docker-tag.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--puH9mUA4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/docker-tag.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#pushing-images-to-docker-hub"&gt;
  &lt;/a&gt;
  Pushing images to Docker Hub
&lt;/h2&gt;

&lt;p&gt;Now that we have our new image locally, let's see how we could push that new image to DockerHub.&lt;/p&gt;

&lt;p&gt;For that you would need a Docker Hub account first. Then once you have your account ready, in order to authenticate, run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then push your image to the &lt;strong&gt;Docker Hub&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker push your-docker-user/name-of-image-here
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output would look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qc325ZfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/docker-push.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qc325ZfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/docker-push.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that you should be able to see your docker image in your docker hub account, in my case it would be here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.docker.com/repository/docker/bobbyiliev/php-apache"&gt;https://cloud.docker.com/repository/docker/bobbyiliev/php-apache&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NNgQWnZI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/docker-hub.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NNgQWnZI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/docker-hub.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#modifying-images-with-dockerfile"&gt;
  &lt;/a&gt;
  Modifying images with Dockerfile
&lt;/h2&gt;

&lt;p&gt;We will go the Dockerfile a bit more in depth in the next blog post, for this demo we will only use a simple Dockerfile just as an example:&lt;/p&gt;

&lt;p&gt;Create a file called &lt;code&gt;Dockerfile&lt;/code&gt; and add the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM alpine
RUN apk update
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All that this &lt;code&gt;Dockerfile&lt;/code&gt; does is to update the base Alpine image. &lt;/p&gt;

&lt;p&gt;To build the image run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker image build -t alpine-updated:v0.1 .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then you could again list your image and push the new image to the &lt;strong&gt;Docker Hub&lt;/strong&gt;!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#docker-images-knowledge-check"&gt;
  &lt;/a&gt;
  Docker images Knowledge Check
&lt;/h2&gt;

&lt;p&gt;Once you've read this post, make sure to test your knowledge with this Docker Images Quiz:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://quizapi.io/predefined-quizzes/common-docker-images-questions"&gt;https://quizapi.io/predefined-quizzes/common-docker-images-questions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that you know how to pull, modify, and push &lt;strong&gt;Docker images&lt;/strong&gt;, we are ready to learn more about the &lt;code&gt;Dockerfile&lt;/code&gt; and how to use it!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-a-dockerfile"&gt;
  &lt;/a&gt;
  What is a Dockerfile
&lt;/h1&gt;

&lt;p&gt;A &lt;strong&gt;Dockerfile&lt;/strong&gt; is basically a text file that contains all of the required commands to build a certain &lt;strong&gt;Docker image&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Dockerfile&lt;/strong&gt; reference page: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.docker.com/engine/reference/builder/"&gt;https://docs.docker.com/engine/reference/builder/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It lists the various commands and format details for Dockerfiles.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#dockerfile-example"&gt;
  &lt;/a&gt;
  Dockerfile example
&lt;/h2&gt;

&lt;p&gt;Here's a really basic example of how to create a &lt;code&gt;Dockerfile&lt;/code&gt; and add our source code to an image.&lt;/p&gt;

&lt;p&gt;First, I have a simple Hello world &lt;code&gt;index.html&lt;/code&gt; file in my current directory that I would add to the container with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;h1&amp;gt;Hello World - Bobby Iliev&amp;lt;/h1&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And I also have a Dockerfile with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM webdevops/php-apache-dev
MAINTAINER Bobby I.
COPY . /var/www/html
WORKDIR /var/www/html
EXPOSE 8080
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is a screenshot of my current directory and the content of the files:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kp4l27kl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/dockerfile-example.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kp4l27kl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/April2020/dockerfile-example.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is a quick rundown of the Dockerfile:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;FROM&lt;/code&gt;: The image that we would use as a ground&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;MAINTAINER&lt;/code&gt;: The person who would be maintaining the image&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;COPY&lt;/code&gt;: Copy some files in the image&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;WORKDIR&lt;/code&gt;: The directory where you want to run your commands on start&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;EXPOSE&lt;/code&gt;: Specify a port that you would like to access the container on&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#docker-build"&gt;
  &lt;/a&gt;
  Docker build
&lt;/h2&gt;

&lt;p&gt;Now in order to build a new image from our &lt;code&gt;Dockerfile&lt;/code&gt;, we need to use the docker build command. The syntax of the docker build command is the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker build [OPTIONS] PATH | URL | -
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The exact command that we need to run is this one:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker build -f Dockerfile -t your_user_name/php-apache-dev .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After the built is complete you can list your images with the docker images command and also run it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker run -d -p 8080:80 your_user_name/php-apache-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And again just like we did in the last step, we can go ahead and publish our image:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker login

docker push your-docker-user/name-of-image-here
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then you will be able to see your new image in your Docker Hub account (&lt;a href="https://hub.docker.com"&gt;https://hub.docker.com&lt;/a&gt;) you can pull from the hub directly:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker pull your-docker-user/name-of-image-here
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more information on the docker build make sure to check out the official documentation here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.docker.com/engine/reference/commandline/build/"&gt;https://docs.docker.com/engine/reference/commandline/build/&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#dockerfile-knowledge-check"&gt;
  &lt;/a&gt;
  Dockerfile Knowledge Check
&lt;/h2&gt;

&lt;p&gt;Once you've read this post, make sure to test your knowledge with this &lt;a href="https://quizapi.io/predefined-quizzes/basic-dockerfile-quiz"&gt;&lt;strong&gt;Dockerfile quiz&lt;/strong&gt;:&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://quizapi.io/predefined-quizzes/basic-dockerfile-quiz"&gt;https://quizapi.io/predefined-quizzes/basic-dockerfile-quiz&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a really basic example, you could go above and beyond with your Dockerfiles!&lt;/p&gt;

&lt;p&gt;Now you know how to write a Dockerfile, how to build a new image from a Dockerfile using the docker build command!&lt;/p&gt;

&lt;p&gt;In the next step we will learn how to set up and work with the &lt;strong&gt;Docker Swarm&lt;/strong&gt; mode!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#what-is-docker-swarm-mode"&gt;
  &lt;/a&gt;
  What is Docker Swarm mode
&lt;/h1&gt;

&lt;p&gt;According to the official &lt;strong&gt;Docker&lt;/strong&gt; docs, a swarm is a group of machines that are running &lt;strong&gt;Docker&lt;/strong&gt; and joined into a cluster. If you are running a &lt;strong&gt;Docker swarm&lt;/strong&gt; your commands would be executed on a cluster by a swarm manager. The machines in a swarm can be physical or virtual. After joining a swarm, they are referred to as nodes. I would do a quick demo shortly on my &lt;strong&gt;DigitalOcean&lt;/strong&gt; account!&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Docker Swarm&lt;/strong&gt; consists of &lt;strong&gt;manager nodes&lt;/strong&gt; and &lt;strong&gt;worker nodes&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;The manager nodes dispatch tasks to the worker nodes and on the other side Worker nodes just execute those tasks. For High Availability, it is recommended to have &lt;strong&gt;3&lt;/strong&gt; or &lt;strong&gt;5&lt;/strong&gt; manager nodes. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#docker-services"&gt;
  &lt;/a&gt;
  Docker Services
&lt;/h2&gt;

&lt;p&gt;To deploy an application image when Docker Engine is in swarm mode, you have create a service. A service is a group of containers of the same &lt;code&gt;image:tag&lt;/code&gt;. Services make it simple to scale your application. &lt;/p&gt;

&lt;p&gt;In order to have &lt;strong&gt;Docker services&lt;/strong&gt;, you must first have your &lt;strong&gt;Docker swarm&lt;/strong&gt; and nodes ready.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X2930z2U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/services-diagram.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X2930z2U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/services-diagram.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#building-a-swarm"&gt;
  &lt;/a&gt;
  Building a Swarm
&lt;/h2&gt;

&lt;p&gt;I'll do a really quick demo on how to build a &lt;strong&gt;Docker swarm with 3 managers and 3 workers&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;For that I'm going to deploy 6 droplets on DigitalOcean:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f0VnAZMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/docker-swarm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f0VnAZMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/docker-swarm.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then once you've got that ready, &lt;strong&gt;install docker&lt;/strong&gt; just as we did in the &lt;strong&gt;&lt;a href="https://devdojo.com/tutorials/introduction-to-docker-part-1"&gt;Introduction to Docker Part 1&lt;/a&gt;&lt;/strong&gt; and then just follow the steps here:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h3&gt;

&lt;p&gt;Initialize the docker swarm on your first manager node:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker swarm init --advertise-addr your_dorplet_ip_here
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h3&gt;

&lt;p&gt;Then to get the command that you need to join the rest of the managers simply run this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker swarm join-token manager
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note: This would provide you with the exact command that you need to run on the rest of the swarm manager nodes. Example:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rKrvKPHY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/docker-swarm-join-managers-bobby-iliev.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rKrvKPHY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/docker-swarm-join-managers-bobby-iliev.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3
&lt;/h3&gt;

&lt;p&gt;To get the command that you need for joining workers just run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker swarm join-token worker
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The command for workers would be pretty similar to the command for join managers but the token would be a bit different.&lt;/p&gt;

&lt;p&gt;The output that you would get when joining a manager would look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R-SJZVUg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/docker-join-manager.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R-SJZVUg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/docker-join-manager.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4"&gt;
  &lt;/a&gt;
  Step 4
&lt;/h3&gt;

&lt;p&gt;Then once you have your join commands, &lt;strong&gt;ssh to the rest of your nodes and join them&lt;/strong&gt; as workers and managers accordingly.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#managing-the-cluster"&gt;
  &lt;/a&gt;
  Managing the cluster
&lt;/h1&gt;

&lt;p&gt;After you've run the join commands on all of your workers and managers, in order to get some information for your cluster status you could use these commands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To list all of the available nodes run:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker node ls
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note: This command can only be run from a &lt;strong&gt;swarm manager&lt;/strong&gt;!Output:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Icn5joNY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/docker-node-ls.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Icn5joNY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/docker-node-ls.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To get information for the current state run:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker info
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6G_FFSJ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/docker-info-bobby-iliev.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6G_FFSJ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/docker-info-bobby-iliev.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#promote-a-worker-to-manager"&gt;
  &lt;/a&gt;
  Promote a worker to manager
&lt;/h2&gt;

&lt;p&gt;To promote a worker to a manager run the following from &lt;strong&gt;one&lt;/strong&gt; of your manager nodes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker node promote node_id_here
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also note that each manager also acts as a worker, so from your docker info output you should see 6 workers and 3 manager nodes.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#using-services"&gt;
  &lt;/a&gt;
  Using Services
&lt;/h2&gt;

&lt;p&gt;In order to create a service you need to use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker service create --name bobby-web -p 80:80 --replicas 5 bobbyiliev/php-apache
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that I already have my bobbyiliev/php-apache image pushed to the Docker hub as described in the previous blog posts.&lt;/p&gt;

&lt;p&gt;To get a list of your services run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker service ls
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F2TxHVLJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/docker-create-service.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F2TxHVLJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/docker-create-service.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then in order to get a list of the running containers you need to use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker services ps name_of_your_service_here
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T7bFrt6B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/docker-service-ps.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T7bFrt6B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/docker-service-ps.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then you can visit the IP address of any of your nodes and you should be able to see the service! We can basically visit any node from the swarm and we will still get the to service.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#scaling-a-service"&gt;
  &lt;/a&gt;
  Scaling a service
&lt;/h2&gt;

&lt;p&gt;We could try shitting down one of the nodes and see how the swarm would automatically spin up a new process on another node so that it matches the desired state of 5 replicas.&lt;/p&gt;

&lt;p&gt;To do that go to your &lt;strong&gt;DigitalOcean&lt;/strong&gt; control panel and hit the power off button for one of your Droplets. Then head back to your terminal and run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker services ps name_of_your_service_here
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b40-Sp_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/docker-replicas.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b40-Sp_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/docker-replicas.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the screenshot above, you can see how I've shutdown the droplet called worker-2 and how the replica bobby-web.2 was instantly started again on another node called worker-01 to match the desired state of 5 replicas. &lt;/p&gt;

&lt;p&gt;To add more replicas run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker service scale name_of_your_service_here=7
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7FPNJHdq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/docker-more-replicas.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7FPNJHdq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/docker-more-replicas.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This would automatically spin up 2 more containers, you can check this with the docker service ps command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker service ps name_of_your_service_here
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then as a test try starting the node that we've shutdown and check if it picked up any tasks?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: Bringing new nodes to the cluster does not automatically distribute running tasks.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#deleting-a-service"&gt;
  &lt;/a&gt;
  Deleting a service
&lt;/h2&gt;

&lt;p&gt;In order to delete a service, all you need to do is to run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker service rm name_of_your_service
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8GkTqQhf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/docker-delete-service.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8GkTqQhf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/posts/images/May2020/docker-delete-service.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you know how to initialize and scale a docker swarm cluster! For more information make sure to go through the official Docker documentation &lt;a href="https://docs.docker.com/engine/swarm/"&gt;here&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#docker-swarm-knowledge-check"&gt;
  &lt;/a&gt;
  Docker Swarm Knowledge Check
&lt;/h2&gt;

&lt;p&gt;Once you've read this post, make sure to test your knowledge with this &lt;strong&gt;&lt;a href="https://quizapi.io/predefined-quizzes/common-docker-swarm-interview-questions"&gt;Docker Swarm Quiz&lt;/a&gt;&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://quizapi.io/predefined-quizzes/common-docker-swarm-interview-questions"&gt;https://quizapi.io/predefined-quizzes/common-docker-swarm-interview-questions&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Well done for going through this Docker introduction tutorial! I hope that it was helpful and you've managed to learn some cool new things about &lt;strong&gt;Docker&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;As a next step make sure to spin up a few servers, install Docker and play around with all of the commands that you've learnt from this tutorial!&lt;/p&gt;

&lt;p&gt;Let me know if you have any questions or suggestions!&lt;/p&gt;

&lt;p&gt;Follow me on twitter at: &lt;a href="https://twitter.com/bobbyiliev_"&gt;@bobbyiliev_&lt;/a&gt;&lt;/p&gt;

</description>
      <category>docker</category>
      <category>devops</category>
      <category>linux</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Git Tutorial: How to Fix 18 Common Mistakes</title>
      <author>Creative Tim</author>
      <pubDate>Wed, 06 Oct 2021 11:34:32 +0000</pubDate>
      <link>https://dev.to/creativetim_official/git-tutorial-how-to-fix-18-common-mistakes-4een</link>
      <guid>https://dev.to/creativetim_official/git-tutorial-how-to-fix-18-common-mistakes-4een</guid>
      <description>&lt;p&gt;This article is a collection of the 18 most frequently asked questions and their answers when it comes to using Git in a team. Some Git questions are more intimidating and may seem difficult to answer, even for experienced Git users. For example, did you forget to include a certain change or make a mistake in your commit message? Don’t worry. In these situations, it’s common to want to roll back or undo a change made by you or your team. You can do this with almost all activities in Git, such as commits, merges, local or remote changes, and even uncommitted changes. It can all be “undone”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here’s the table of content for this article:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#1-how-to-create-a-git-branch"&gt;How to create a Git branch?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-how-to-rename-a-git-branch"&gt;How to rename a Git branch?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3-how-to-delete-a-local-git-branch"&gt;How to delete a local Git branch?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4-how-to-delete-a-remote-git-branch"&gt;How to delete a remote Git branch?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5-how-to-git-checkout-remote-branch"&gt;How to Git checkout remote branch?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#6-how-to-edit-amend-a-git-commit-message"&gt;How to edit (amend) a Git commit message?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#7-how-to-undo-the-last-commit"&gt;How to undo the last commit?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#8-how-to-git-revert-to-previous-commit"&gt;How to Git revert to the previous commit?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#9-how-to-revert-a-commit-that-has-been-pushed-to-the-remote"&gt;How to revert a commit that has been pushed to the remote?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#10-how-to-git-revert-single-file"&gt;How to Git revert a single file?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#11-how-to-undo-git-add"&gt;How to undo Git add?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#12-how-to-remove-a-file-from-git-without-removing-it-from-your-file-system"&gt;How to remove a file from gGit without removing it from your file system?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#13-git-pull-vs-git-fetch"&gt;Git Pull vs. Git Fetch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#14-how-to-force-git-pull-to-overwrite-local-files"&gt;How to force “Git pull” to overwrite local files?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#15-how-to-push-to-github-when-receiving-the-need-merge-error"&gt;How to push to GitHub when receiving the “need merge” error?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#16-how-to-create-tag-in-github-repository"&gt;How to create a tag in the GitHub repository?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#17-how-to-clone-all-remote-branches-in-git"&gt;How to clone all remote branches in Git?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#18-how-to-update-or-sync-a-forked-repository"&gt;How to update or sync a forked repository?&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kM9ecZZy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/09/github.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kM9ecZZy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/09/github.jpg" alt="github"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-how-to-create-a-git-branch"&gt;
  &lt;/a&gt;
  1. How to create a Git branch?
&lt;/h3&gt;

&lt;p&gt;Before starting to create a new branch, make sure that your master/main is updated with the latest changes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git pull
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After the above step, you can create your new branch and switch directly to it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git checkout -b &amp;lt;new-branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or, you can just create the new branch without switching to it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git branch &amp;lt;new-branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to switch to your new branch after you created it, just use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git checkout &amp;lt;new-branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that the branch is created, you can push it on GitHub:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git push origin &amp;lt;new-branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-how-to-rename-a-git-branch"&gt;
  &lt;/a&gt;
  2. How to rename a Git branch?
&lt;/h3&gt;

&lt;p&gt;In order to rename a Git branch, one option would be to first switch to it and follow the below step:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git checkout &amp;lt;old-branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Afterwards, you should see a message that confirms that the switch was successful:&lt;/p&gt;

&lt;p&gt;Switched to branch &lt;/p&gt;

&lt;p&gt;Now you can rename the branch by:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git branch -m &amp;lt;new-branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another way to rename your Git branch is by using only one line, specifying both the old name and the new name:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git branch -m &amp;lt;old-branch-name&amp;gt; &amp;lt;new-branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you have renamed your Git branch, it’s recommended to check its status:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git branch -a
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-how-to-delete-a-local-git-branch"&gt;
  &lt;/a&gt;
  3. How to delete a local Git branch?
&lt;/h3&gt;

&lt;p&gt;When developers work on different features, they often create other branches, separated from the main one with the main code.&lt;/p&gt;

&lt;p&gt;Once the work on a feature is completed, it is often recommended to delete the branch.&lt;/p&gt;

&lt;p&gt;As Git doesn’t allow you to delete the branch that you are currently on, you must first switch to a branch that you are NOT deleting, and after that, you can delete the branch that you want to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git checkout main // or master
 $ git branch -d &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the branch hasn’t been pushed or merged, you can force the deletion of the branch by using -D instead of -d.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-how-to-delete-a-remote-git-branch"&gt;
  &lt;/a&gt;
  4. How to delete a remote Git branch?
&lt;/h3&gt;

&lt;p&gt;In order to delete a branch remotely, you should use the next command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git push &amp;lt;remote-name&amp;gt; --delete &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-how-to-git-checkout-remote-branch"&gt;
  &lt;/a&gt;
  5. How to Git checkout remote branch?
&lt;/h3&gt;

&lt;p&gt;When working in a team, you might use remote repositories that can be hosted or on a colleague's local copy. Each of the remote repositories contains its own branches. For switching to a remote branch, you will have first to fetch the content of the branch and switch to it after that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git fetch --all
 $ git checkout &amp;lt;remote-branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-how-to-edit-amend-a-git-commit-message"&gt;
  &lt;/a&gt;
  6. How to edit (amend) a Git commit message?
&lt;/h3&gt;

&lt;p&gt;For some reason, in certain cases, you would want to change your commit message. First, you need to know that editing your commit message translates in creating a new commit and replacing the old one.&lt;/p&gt;

&lt;p&gt;If you haven’t pushed your commit yet to GitHub, and this exists only in your local repository, here is an easy way to change your last commit’s message. Go to the repository that contains your last commit in the command line and type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git commit --amend
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, you need to edit the commit message and save your new commit. The next time you push, you should be able to see your new commit and message on GitHub. &lt;/p&gt;

&lt;p&gt;As you might have been in the situation that you have already pushed the commit to GitHub, don’t worry, there is still a way to change your most recent commit message. In order to do this, you will have to force push a commit with an amended message. Be advised; this is not recommended as it changes the history of your repository, so use this option only when it is absolutely needed.&lt;/p&gt;

&lt;p&gt;First, follow the steps from above and then type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git push --force-with-lease &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-how-to-undo-the-last-commit"&gt;
  &lt;/a&gt;
  7. How to undo the last commit?
&lt;/h3&gt;

&lt;p&gt;You accidentally committed the wrong files to Git, but didn't push the commit to your Git repository yet. Because you did not push to a remote repository yet, your changes are not public. At this point, you can undo your changes. The easiest way to undo the last Git commit is to execute the $ git reset command with the “–soft” option that will preserve changes done to your files. You have to specify the commit to undo which is “HEAD~1” in this case.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git reset --soft HEAD-1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to delete the last commit, you can execute the &lt;code&gt;$ git reset&lt;/code&gt;  command with “-hard” option. The changes will be removed from the working directory and from the index, so &lt;em&gt;you will lose all modifications&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git reset --hard HEAD-1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note: If you are not familiar with this notation, “HEAD~1” means that you want to reset the HEAD (the last commit) to one commit before in the log history.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git log --oneline
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8-how-to-git-revert-to-the-previous-commit"&gt;
  &lt;/a&gt;
  8. How to git revert to the previous commit?
&lt;/h3&gt;

&lt;p&gt;First of all, get commits list in order to have the commit id, using the git log command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git log --online
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to temporarily go back to the previous commit and then come back to where you were, all you have to do is check out the desired commit:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git checkout &amp;lt;0c2a9da42&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or, if you want to make commits while you're there, go ahead and make a new branch while you're at it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git checkout -b old-state &amp;lt;0c2a9da42&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On the other hand, if you want to really get rid of everything you've done since then, but you didn't push any of these commits, there is a possibility. All you have to do is simply reset:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git reset --hard &amp;lt;0c2a9da42&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have pushed the commits, there is still a way to get rid of them. Check the next topic to see how.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-how-to-revert-a-commit-that-has-been-pushed-to-the-remote"&gt;
  &lt;/a&gt;
  9. How to revert a commit that has been pushed to the remote?
&lt;/h3&gt;

&lt;p&gt;If you have already pushed your chain of commits to the remote repository, a &lt;em&gt;revert&lt;/em&gt; is a nicer way to cancel out changes. The revert command adds a new commit at the end of the chain.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git revert &amp;lt;0c2a9da42&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#10-how-to-git-revert-single-file"&gt;
  &lt;/a&gt;
  10. How to Git revert single file?
&lt;/h3&gt;

&lt;p&gt;You have made multiple changes on a file and committed them. Now you want to return to a previous file version. You can do the following to revert a single file to its previous status.&lt;/p&gt;

&lt;p&gt;If the file isn’t committed, you can use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git checkout &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the file is already committed, you should find the hash of the commit and the path to your file and run this command in terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git checkout &amp;lt;commit-hash&amp;gt; -- &amp;lt;path/to/file&amp;gt;

 // e.g.
 $ git checkout &amp;lt;0c2a9da42&amp;gt; -- assets/main.css
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see the commits which have made modifications to the given file(s) very easily, and you can get the correct commit hash by running the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git log path/to/file
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#11-how-to-undo-git-add"&gt;
  &lt;/a&gt;
  11. How to undo Git add?
&lt;/h3&gt;

&lt;p&gt;You moved multiple files into the staging area with $ git add  command, but no longer want to be part of a commit, then a simple reset will do the job:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; // for all files
 $ git reset  // OR
 $ git reset HEAD // OR
 $ git reset 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to unstage a single file, you can use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; // for single file
 $ git reset &amp;lt;filename&amp;gt; // OR
 $ git reset HEAD &amp;lt;filename&amp;gt; // OR
 $ git reset @ &amp;lt;filename&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The changes you made will still be in the file/files. The above set of commands just remove that file/files from your staging area. The &lt;code&gt;$ git reset&lt;/code&gt; command allows you to &lt;em&gt;reset&lt;/em&gt; your current head to a specific state. You can reset the state of specific files as well as an entire branch. &lt;/p&gt;

&lt;p&gt;Note: &lt;em&gt;HEAD&lt;/em&gt; is a reference to the current commit. &lt;em&gt;@&lt;/em&gt; alone is a shortcut for head since Git v1.8.5&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-how-to-remove-a-file-from-git-without-removing-it-from-your-file-system"&gt;
  &lt;/a&gt;
  12. How to remove a file from Git without removing it from your file system?
&lt;/h3&gt;

&lt;p&gt;You committed the wrong file on Git, or you forgot to add a file to .gitignore and committed it. Now you want to remove the file from git but you don't want to remove it from your local development environment.&lt;/p&gt;

&lt;p&gt;Removing a single file with Git without deleting it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git rm --cached &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Removing multiple files with Git without deleting them&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git rm --cached &amp;lt;filename1 filename2 filename3&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Removing a single directory with Git without deleting it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git rm --cached &amp;lt;directory-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;--cached&lt;/code&gt; will remove from just the index but not allow you to delete the file on the local system. The files will be removed in the remote repository when you run &lt;code&gt;$ git push&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13-git-pull-vs-git-fetch"&gt;
  &lt;/a&gt;
  13. Git Pull vs. Git Fetch
&lt;/h3&gt;

&lt;p&gt;Git pull and fetch are two commands that are commonly used, so knowing the difference between them will come in handy.&lt;/p&gt;

&lt;p&gt;Suppose you're working on a clone repository, which is basically a duplicate of another repository. In that case, it's important to keep it updated with the latest changes that might have been applied to the original. In order to do that and bring those changes locally, you are going to use the above commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git fetch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the command that allows you to download an object from another repository but it will not do any file transferring, meaning that will not make any changes locally. Basically, it is just checking if any changes are available.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git pull
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This  is the command that will bring those changes from the remote repository and that will integrate them with your local branch. In other words, git pull does the same as git fetch, only that it is followed by an additional action(s):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; // e.g.  
 $ git merge
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#14-how-to-force-git-pull-to-overwrite-local-files"&gt;
  &lt;/a&gt;
  14. How to force “git pull” to overwrite local files?
&lt;/h3&gt;

&lt;p&gt;If you want to overwrite everything with a copy from the remote branch, note that you will discard all your local changes.&lt;br&gt;
If you have local commits that you haven’t pushed yet, those will be lost as well. &lt;br&gt;
To overwrite/reset your local files, follow the below steps:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git fetch --all
 $ git reset --hard origin/&amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#15-how-to-push-to-github-when-receiving-the-need-merge-error"&gt;
  &lt;/a&gt;
  15. How to push to GitHub when receiving the “need merge” error?
&lt;/h3&gt;

&lt;p&gt;If you didn’t run a  $ git pull before you tried to push your changes to the branch,  you’d be getting a merge error. When you get this error, it usually means that someone else pushed a commit to the same branch you are trying to push to, but you don’t have it locally yet.&lt;br&gt;
To fix the issue, run the below code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git pull origin &amp;lt;branch-name&amp;gt;
 $ git push origin &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to do a force push, meaning that you don’t want to merge your local branch with the remote one, you can use the below syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git push -f origin &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#16-how-to-create-a-tag-in-the-github-repository"&gt;
  &lt;/a&gt;
  16. How to create a tag in the GitHub repository?
&lt;/h3&gt;

&lt;p&gt;Git supports two types of tags: &lt;em&gt;lightweight&lt;/em&gt; and &lt;em&gt;annotated&lt;/em&gt;. &lt;br&gt;
A &lt;em&gt;lightweight&lt;/em&gt; tag is very much like a branch that doesn’t change — it’s just a pointer to a specific commit. &lt;br&gt;
&lt;em&gt;Annotated&lt;/em&gt; tags, however, are stored as full objects in the Git database. They’re checksummed; contain the tagger name, email, and date; have a tagging message. It’s generally recommended that you create annotated tags.&lt;/p&gt;

&lt;p&gt;Create a lightweight tag:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git tag &amp;lt;tagname&amp;gt; // e.g $ git tag v1.0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Created Annotated tag (&lt;em&gt;recommened&lt;/em&gt;):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git tag -a &amp;lt;tagname&amp;gt; // e.g $ git tag -a v1.0.0
 // or create tag with message
 $ git tag -a &amp;lt;tagname&amp;gt; -m "tag description" // e.g $ git tag -a v1.0.0 -m "First release"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When pushing to your remote repo, tags are NOT included by default. You will need to explicitly say that you want to push your tags to your remote repo.&lt;/p&gt;

&lt;p&gt;Push all locally tags:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git push origin --tags
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Push a single tag:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git push origin &amp;lt;tagname&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To list all tags, use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git tag
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#17-how-to-clone-all-remote-branches-in-git"&gt;
  &lt;/a&gt;
  17. How to clone all remote branches in Git?
&lt;/h3&gt;

&lt;p&gt;You can use the &lt;strong&gt;git clone command&lt;/strong&gt; to your local Git. It will clone the whole repo to your system, then change your current working directory to the cloned repository folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git clone git://account_name/reponame
 $ cd reponame
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have many remote branches that you want to fetch at once, do:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git pull --all
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, look at the local branches in your repository:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git branch 
 * main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But there are other branches hiding in your repository! You can see these using the -a flag:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git branch -a
 * main
   remotes/origin/HEAD
   remotes/origin/main
   remotes/origin/another-branch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you just want to take a quick peek at an upstream branch, you can check it out directly:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git checkout origin/another-branch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But if you want to work on that branch, you'll need to create a local tracking branch which is done automatically by:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git checkout another-branch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#18-how-to-update-or-sync-a-forked-repository"&gt;
  &lt;/a&gt;
  18. How to update or sync a forked repository?
&lt;/h3&gt;

&lt;p&gt;You have successfully forked your interested repository. You need to keep it up to date with the original repository. The original repository is commonly referred to upstream .&lt;/p&gt;

&lt;p&gt;Open your terminal and navigate to your cloned repository on local computer. Your local repository is not directly linked to the original repository. You must configure a remote that points to the upstream repository in Git.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git remote -v // list all remote 
 $ git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git
 $ git remote -v // verify the new upstream repository
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are two steps required to sync your repository with the upstream: first, you must fetch from the remote, then you must merge the desired branch into your local branch.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git fetch upstream
 $ git checkout main
 $ git merge upstream/main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Past the initial upstream setup and main checkout, all you need to do is run the following command to sync your main with upstream:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ git pull upstream main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EXiSesWN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/09/github-how-to.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EXiSesWN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/09/github-how-to.jpg" alt="github how to"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Final Thoughts&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Thanks for reading! These are the 18 repetitive questions that developers who use Git ask. We hope you found the answer you are looking for. If you encounter a problem in Git that is not on our list, share it with us in the comments section below. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Extra Resources&lt;/strong&gt;&lt;br&gt;
Check out our latest repos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/creativetimofficial/soft-ui-design-system/"&gt;Soft UI Design System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/creativetimofficial/soft-ui-dashboard/"&gt;Soft UI Dashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/creativetimofficial/purity-ui-dashboard/"&gt;Purity UI Dashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/creativetimofficial/muse-vue-ant-design-dashboard/"&gt;Muse Vue Ant Design Dashboard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>github</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Django Admin Template - Volt Bootstrap 5</title>
      <author>Sm0ke</author>
      <pubDate>Wed, 06 Oct 2021 10:11:02 +0000</pubDate>
      <link>https://dev.to/sm0ke/django-admin-template-volt-bootstrap-5-5bn3</link>
      <guid>https://dev.to/sm0ke/django-admin-template-volt-bootstrap-5-5bn3</guid>
      <description>&lt;p&gt;Hello Coders!&lt;/p&gt;

&lt;p&gt;This article presents an open-source &lt;a href="https://blog.appseed.us/django-admin-template-volt-bootstrap-5/"&gt;Django Admin Template&lt;/a&gt; that after the installation overwrites the default &lt;code&gt;admin&lt;/code&gt; interface (all widgets). This &lt;strong&gt;Django Template&lt;/strong&gt; is crafted on top of Bootstrap 5 using the latest version without a jQuery dependency by &lt;strong&gt;Themesberg&lt;/strong&gt;. For newcomers, Django is a leading web framework coded and actively supported by experienced developers that provides a default admin interface. &lt;strong&gt;Django Template Volt&lt;/strong&gt; aims to enhance the admin section with a responsive layout and more appealing components and widgets. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://pypi.org/project/django-admin-volt/"&gt;Django Admin Template Volt&lt;/a&gt; - PyPi Page&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://appseed.us/admin-dashboards/django-dashboard-volt"&gt;Django Volt Dashboard&lt;/a&gt; - open-source starter (same design)&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://django-volt-dashboard.appseed-srv1.com/"&gt;Django Volt Dashboard&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7lcqunBX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lnqtu2ipgb97v99ypnod.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7lcqunBX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lnqtu2ipgb97v99ypnod.png" alt="Django Admin Template Volt - Edit Users Page"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;The product can be downloaded and used via &lt;code&gt;PyPi&lt;/code&gt; (as a Python package) using &lt;code&gt;PIP&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;django-admin-volt
// OR
&lt;span class="nv"&gt;$ &lt;/span&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;git+https://github.com/app-generator/django-admin-volt.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the installation is complete, the next step is to update the &lt;code&gt;Django&lt;/code&gt; configuration with a few things to activate the template:&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;👉 &lt;strong&gt;Step #1&lt;/strong&gt; - Add &lt;code&gt;admin_volt&lt;/code&gt; to &lt;code&gt;INSTALLED_APPS&lt;/code&gt; node in project settings:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;  &lt;span class="n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;
        &lt;span class="s"&gt;'admin_volt.apps.AdminVoltConfig'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'django.contrib.admin'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;👉 &lt;strong&gt;Step #2&lt;/strong&gt; - Check &lt;code&gt;django.template.context_processors.request&lt;/code&gt;  is enabled&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;TEMPLATES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;'BACKEND'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'django.template.backends.django.DjangoTemplates'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;'DIRS'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
            &lt;span class="s"&gt;'APP_DIRS'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;'OPTIONS'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s"&gt;'context_processors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                    &lt;span class="p"&gt;...&lt;/span&gt;
                    &lt;span class="s"&gt;'django.template.context_processors.request'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="p"&gt;...&lt;/span&gt;
                &lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;As specified by the product &lt;a href="https://docs.appseed.us/boilerplate-code/django-templates/volt-dashboard"&gt;documentation&lt;/a&gt;, for legacy apps built with Django 1.8 (of bellow) the context processors should be specified using a different syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;global_settings&lt;/span&gt;

    &lt;span class="n"&gt;TEMPLATE_CONTEXT_PROCESSORS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;global_settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEMPLATE_CONTEXT_PROCESSORS&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;'django.core.context_processors.request'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;👉 &lt;strong&gt;Step #3&lt;/strong&gt; - Create the superuser and access the admin section&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Create Admin User&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py createsuperuser
&lt;span class="nv"&gt;$ &lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Start the application (development mode)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py runserver &lt;span class="c"&gt;# default port 8000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Access the admin section in the browser: &lt;code&gt;http://127.0.0.1:8000/admin/&lt;/code&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#django-dashboard-volt"&gt;
  &lt;/a&gt;
  ✨ Django Dashboard Volt
&lt;/h2&gt;

&lt;p&gt;This is an open-source Django Seed project that used the same UI as the admin template. The product can be downloaded and used directly from Github, without a registration lock. For more information about this Django dashboard, feel free to access the product page hosted by AppSeed:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://appseed.us/admin-dashboards/django-dashboard-volt"&gt;Django Dashboard Volt&lt;/a&gt; open-source seed project - Product Features:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Up-to-date dependencies: Django 3.2.6 LTS&lt;/li&gt;
&lt;li&gt;SCSS compilation via Gulp&lt;/li&gt;
&lt;li&gt;SQLite Database, Django Native ORM&lt;/li&gt;
&lt;li&gt;Modular design, clean code-base&lt;/li&gt;
&lt;li&gt;Session-Based Authentication, Forms validation&lt;/li&gt;
&lt;li&gt;Deployment scripts: Docker, Gunicorn / Nginx&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YSiVpYlN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q82hqm0vz72albkdi7vv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YSiVpYlN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q82hqm0vz72albkdi7vv.png" alt="Django Admin Template Volt - Open-source seed project crafted by AppSeed."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for Reading! For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;🔥 &lt;a href="https://appseed.us/"&gt;AppSeed&lt;/a&gt; for more starters and &lt;a href="https://appseed.us/support"&gt;support&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;🔥 &lt;a href="https://appseed.us/admin-dashboards/open-source"&gt;Open-Source Admin Dashboards&lt;/a&gt; - crafted in Flask, Django, and &lt;a href="https://appseed.us/apps/react"&gt;React&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>django</category>
      <category>dashboards</category>
      <category>appseed</category>
    </item>
    <item>
      <title>How we solved AWS Lambda timeouts... and improved performance</title>
      <author>Matthias Sondermann</author>
      <pubDate>Wed, 06 Oct 2021 10:08:07 +0000</pubDate>
      <link>https://dev.to/matzeso/how-we-solved-aws-lambda-timeouts-and-improved-performance-581i</link>
      <guid>https://dev.to/matzeso/how-we-solved-aws-lambda-timeouts-and-improved-performance-581i</guid>
      <description>&lt;blockquote&gt;
&lt;h5&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;CDK sets default lambda memorySize to only 128MB&lt;/li&gt;
&lt;li&gt;CPU power of lambda scales with memorySize&lt;/li&gt;
&lt;li&gt;Node needs quite some RAM&lt;/li&gt;
&lt;li&gt;Performance of Lambdas can be improved considerably by increasing memorySize&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#our-aws-tech-stack"&gt;
  &lt;/a&gt;
  Our AWS tech stack
&lt;/h4&gt;

&lt;p&gt;One of our microservices uses a Node-v14 runtime and runs on AWS Lambda using AWS API Gateway.&lt;/p&gt;

&lt;p&gt;We build the infrastructure with &lt;a href="https://aws.amazon.com/de/cdk/"&gt;AWS CDK&lt;/a&gt;, which is a &lt;code&gt;Infrastructure as Code&lt;/code&gt; (IaC) framework to create AWS resources, and use &lt;a href="https://aws.amazon.com/de/serverless/sam/"&gt;AWS SAM&lt;/a&gt; with its CLI to do local development.&lt;/p&gt;

&lt;p&gt;This local development unfortunately is far from resembling the cloud environment, which has caused us already quite some trouble (thinking of CORS handling, binary media types, DynamoDB permissions, ...), and now we had another issue with a new Lambda even though it ran fine locally in a couple of seconds.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-lambda-timeout-again"&gt;
  &lt;/a&gt;
  The lambda timeout... again
&lt;/h4&gt;

&lt;p&gt;When investigating why the newest function did not work as expected, we realized through the CloudWatch Logs, that the lambda timed out after 60 seconds. &lt;br&gt;
That is way too long for our lambda, which was just fetching some data from DynamoDB and creating and storing some of it in Google Sheets. So we spent quite some time figuring out whether there were configuration issues with DynamoDB or the newly introduced &lt;a href="https://www.npmjs.com/package/googleapis"&gt;googleapis&lt;/a&gt; had any problems connecting.&lt;/p&gt;

&lt;p&gt;But everything was setup correctly - so what could it have been? At the very end, we realized that we had been using all of the available &lt;code&gt;128 MB&lt;/code&gt; RAM allocated to the lambda, you can see that in your CloudWatch Logs in the last &lt;code&gt;REPORT&lt;/code&gt; entry. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#increasing-the-memory-size"&gt;
  &lt;/a&gt;
  Increasing the memory size
&lt;/h4&gt;

&lt;p&gt;128 MB seemed rather low anyway, so while looking up how pricing scaled up, I also found out that &lt;em&gt;lambda CPU power scales proportionally with memory size&lt;/em&gt; (&lt;a href="https://aws.amazon.com/de/about-aws/whats-new/2020/12/aws-lambda-supports-10gb-memory-6-vcpu-cores-lambda-functions/#:~:text=AWS%20Lambda%20customers%20can%20now,previous%20limit%20of%203%2C008%20MB.&amp;amp;text=Since%20Lambda%20allocates%20CPU%20power,to%20up%20to%206%20vCPUs."&gt;see this&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;So it was about time to give that Lambda some more power to play with. By simply increasing the &lt;code&gt;memorySize&lt;/code&gt; from &lt;code&gt;128&lt;/code&gt; to &lt;code&gt;384&lt;/code&gt; the functions were running fine, and even saved us money, since they ran a lot faster. A simple function that just created an entry in DynamoDB now ran &lt;strong&gt;4x faster&lt;/strong&gt; than before, so overall being even cheaper than the previous, slow and low RAM version.&lt;/p&gt;

&lt;p&gt;Now that we have this in mind, we are experimenting with different memory sizes to see what fits best in terms of performance/price for our use case.&lt;/p&gt;

&lt;p&gt;We never had issues with this prior, because our previous services were built with &lt;a href="https://www.serverless.com/"&gt;Serverless Framework&lt;/a&gt; which sets a default memory size of &lt;code&gt;1024 MB&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For CDK, you can set &lt;code&gt;memorySize&lt;/code&gt; as a property in your &lt;code&gt;lambda.Function&lt;/code&gt; &lt;a href="https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-lambda.Function.html#memorysize"&gt;constructor props&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>lambda</category>
      <category>cdk</category>
      <category>api</category>
    </item>
    <item>
      <title>How to Become a Full Stack Web Developer🔥</title>
      <author>Deepak Gupta</author>
      <pubDate>Wed, 06 Oct 2021 10:01:59 +0000</pubDate>
      <link>https://dev.to/deepakguptacoder/how-to-become-a-full-stack-web-developer-h50</link>
      <guid>https://dev.to/deepakguptacoder/how-to-become-a-full-stack-web-developer-h50</guid>
      <description>&lt;h1&gt;
  &lt;a href="#how-to-become-a-full-stack-web-developers-"&gt;
  &lt;/a&gt;
  How to become a full stack web developers ?
&lt;/h1&gt;

&lt;p&gt;If you want a become a full stack developer,you need to know HTML,CSS,JAVASCRIPT along with a BACK-END but making the right choice in an error where there are a lot of options creates a lot of confusion for New developers.&lt;/p&gt;

&lt;p&gt;The Bucket Technique&lt;br&gt;
As apart of this technique. we wil study each technology just enough to start building sites.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#list-of-backend-and-frontend-developers"&gt;
  &lt;/a&gt;
  List of BACK-END and FRONT-END Developers
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#frontend"&gt;
  &lt;/a&gt;
  FRONT-END
&lt;/h2&gt;

&lt;p&gt;*80% HTML&lt;br&gt;
*60% CSS&lt;br&gt;
*50% JAVASCRIPT&lt;br&gt;
*20% DATABASE&lt;/p&gt;

&lt;p&gt;After you finishing learning all these technologies,you will be able to build good designs but it is not possible to build a stunning website without Graphic designing skills.&lt;br&gt;
you need to either to be a good designer or refer to some design which is good enough for your site to look fabulous.&lt;/p&gt;

&lt;p&gt;You can also refer the free website to build designers or degisn resources for developers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rainboestrykr"&gt;
  &lt;/a&gt;
  rainboestrykr
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#backend"&gt;
  &lt;/a&gt;
  BACK-END
&lt;/h2&gt;

&lt;p&gt;*PHP&lt;br&gt;
*NODEJs&lt;br&gt;
*JAVA&lt;br&gt;
*C#&lt;br&gt;
*GOLANG&lt;/p&gt;

&lt;p&gt;That's for the Back-end developers &lt;br&gt;
*PHP = Easy to Learn, best for beginners,limited support of libraries.&lt;br&gt;
*NodeJs = JavaScript whisch you already know from frounted,Its difficult to learn JavaScript concepts like callbacks are used&lt;br&gt;
Djoango/Flask[Python based back-end Frameworks] includes ORM, Great set of python libraries need to learn python Not Recommended for beginners Front-end Frameworks are amazing.&lt;br&gt;
YOU also need to master HTML,CSS,JAVASCRIPT.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tools-every-web-developers-should-know-about"&gt;
  &lt;/a&gt;
  Tools every Web Developers Should know about.
&lt;/h1&gt;

&lt;p&gt;a] UX wing for Icons.&lt;br&gt;
b] PixaBay for free Images&lt;br&gt;
c] FreeHtml5 for Free Tamplates&lt;br&gt;
d] UnSplash for Image API&lt;br&gt;
e] Json Placeholder for fake Online REST API&lt;br&gt;
f] More Resources are available on here&lt;/p&gt;

&lt;p&gt;Also view the Video From the you Youtube&lt;br&gt;
fullstack developers&lt;/p&gt;

&lt;p&gt;If you liked this turtorial,you can support me and follow me..&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>devops</category>
      <category>startup</category>
    </item>
    <item>
      <title>Awesome Frontend Masters Course Resources</title>
      <author>AmnaAbd</author>
      <pubDate>Wed, 06 Oct 2021 09:55:47 +0000</pubDate>
      <link>https://dev.to/amnaabd/awesome-frontendmasters-course-resources-44b8</link>
      <guid>https://dev.to/amnaabd/awesome-frontendmasters-course-resources-44b8</guid>
      <description>&lt;h1&gt;Awesome FrontendMasters Course Resources&lt;/h1&gt;

&lt;p&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6gfXmIum--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6gfXmIum--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg" alt="Awesome Badge"&gt;&lt;/a&gt;
&lt;a href="https://github.com/AmnaAbd/awesome-frontendmasters"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aDr6lzuO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/static/v1%3Flabel%3D%25F0%259F%258C%259F%26message%3DIf%2520Useful%26style%3Dstyle%3Dflat%26color%3DBC4E99" alt="Star Badge"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/AmnaAbd/awesome-frontendmasters/blob/main/LICENSE"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jn0ei1Vv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/github/license/AmnaAbd/awesome-frontendmasters"&gt;
&lt;/a&gt;
&lt;br&gt;
A curated list of awesome frontendmasters course resources

&lt;br&gt;

&lt;a href="https://www.buymeacoffee.com/AmnaAbd"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQj764Ae--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-orange.png" alt="Buy Me A Coffee"&gt;
&lt;/a&gt;
&lt;/p&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Resource&lt;/th&gt;
&lt;th&gt;Repository&lt;/th&gt;
&lt;th&gt;Instructor/Developer&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://hendrixer.github.io/nextjs-course/"&gt;Introduction to Next.js&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Hendrixer/nextjs-course-app"&gt;nextjs-course-app&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Hendrixer"&gt;Scott Moss&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://static.frontendmasters.com/resources/2020-10-15-js-typescript-monorepos/js-ts-monorepos.pdf"&gt;JavaScript &amp;amp; TypeScript Monorepos&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mike-north/js-ts-monorepos/"&gt;js-ts-monorepos&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mike-north"&gt;Mike North&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://fem-design-systems.netlify.app/intro"&gt;Introduction to Design Systems&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/emmabostian/fem-design-systems"&gt;fem-design-systems&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/emmabostian"&gt;Emma Bostian&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://getting-the-front-end-job.surge.sh/"&gt;Getting The Front End Job&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/jeromehardaway/hot-to-get-front-end-job"&gt;hot-to-get-front-end-job&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/jeromehardaway"&gt;Jerome Hardaway&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/sdras/building-web-apps-with-vue#slides"&gt;Building Web Apps with Vue and Nuxt&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/sdras/building-web-apps-with-vue"&gt;building-web-apps-with-vue&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/sdras"&gt;Sarah Drasner&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/sdras/intro-to-vue#slides"&gt;Introduction to Vue.js&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/sdras/intro-to-vue"&gt;intro-to-vue&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/sdras"&gt;Sarah Drasner&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://observablehq.com/@sxywu/introduction-to-svg-and-d3-js"&gt;Introduction to SVG and D3.js&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://observablehq.com/@sxywu/introduction-to-svg-and-d3-js"&gt;introduction-to-svg-and-d3-js&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/sxywu"&gt;Shirley Wu&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://static.frontendmasters.com/resources/2020-07-22-serverless-functions/frontendmasters-serverless.pdf"&gt;Serverless Functions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/jlengstorf/frontendmasters-serverless"&gt;frontendmasters-serverless&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/jlengstorf"&gt;Jason Lengstorf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://btholt.github.io/complete-intro-to-linux-and-the-cli/"&gt;Complete Intro to Linux and the CLI&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/btholt/complete-intro-to-linux-and-the-cli"&gt;complete-intro-to-linux-and-the-cli&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/btholt"&gt;Brian Holt&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/shortdiv/frontend-masters-vuex#slides"&gt;State Management with Vuex&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/shortdiv/frontend-masters-vuex"&gt;frontend-masters-vuex&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/shortdiv"&gt;Divya&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://svelte-workshop.netlify.app/introduction/"&gt;Introduction to Svelte&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Rich-Harris/svelte-workshop"&gt;svelte-workshop&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Rich-Harris"&gt;Rich Harris&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://static.frontendmasters.com/resources/2020-05-28-angular-9/angular-9-fundamentals.pdf"&gt;Angular 9 Fundamentals&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/onehungrymind/angular9-fundamentals-workshop"&gt;angular9-fundamentals-workshop&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/onehungrymind"&gt;One Hungry Mind&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://static.frontendmasters.com/resources/2020-05-14-state-machines-xstate/state-machine-xstate.pdf"&gt;JavaScript State Machines &amp;amp; XState&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/davidkpiano/frontend-masters-xstate-workshop"&gt;frontend-masters-xstate-workshop&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/davidkpiano"&gt;David Khourshid&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://btholt.github.io/project-fox-game-site/"&gt;Complete FrontEnd Project: Project Fox Game&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/btholt/project-fox-game-site"&gt;project-fox-game-site&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/btholt"&gt;Brian Holt&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://kadikraman.github.io/react-native-v2/"&gt;React Native: Building mobile applications&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kadikraman/react-native-v2"&gt;react-native-v2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kadikraman"&gt;Kadi Kraman&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://static.frontendmasters.com/resources/2019-10-28-more-creative-coding/webgl-shaders.pdf"&gt;Creative Coding with WebGL &amp;amp; Shaders&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mattdesl/workshop-webgl-glsl"&gt;workshop-webgl-glsl&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mattdesl"&gt;Matt DesLauriers&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://static.frontendmasters.com/resources/2019-09-24-golang/golang.pdf"&gt;Go for JavaScript Developers&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/martensonbj/fem-intro-to-go"&gt;fem-intro-to-go&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/martensonbj"&gt;Brenna&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.google.com/presentation/d/1L5gxYQz2hyzbVJk5tkyNdDidf_cg4I1BlIGd_Y9jblU/edit#slide=id.g338d117be_040"&gt;Functional Architecture Patterns: JavaScript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/DrBoolean/Practically-Functional"&gt;Practically-Functional&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/DrBoolean"&gt;Brian Lonsdorf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.google.com/presentation/d/1nj5xmsHeJh-6RdjLs1190Hwl8smclvFLePqPCTVsrYw/edit#slide=id.g338d117be_040"&gt;Functional Programming in JavaScript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/DrBoolean/Functional-Light-JS"&gt;Functional-Light-JS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/DrBoolean"&gt;Brian Lonsdorf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Vadikus/practicalDL"&gt;Practical Guide to Deep Learning with TensorFlow 2.0 and Keras&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Vadikus/practicalDL"&gt;practicalDL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Vadikus"&gt;Vadim Karpusenko&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.google.com/presentation/d/1DaTDx2Jdolkws2xPx44ee6WuQYMiIAyaaEmN-IBaW1s/edit#slide=id.p"&gt;Advanced GraphQL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FrontendMasters/advanced-gql-v2"&gt;advanced-gql-v2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Hendrixer"&gt;Scott Moss&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://jlengstorf.github.io/presentations/fem-jamstack-intro/#/"&gt;Intro to JAMstack&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/jlengstorf/jamstack-intro"&gt;jamstack-intro&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/jlengstorf"&gt;Jason Lengstorf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://speakerdeck.com/stevekinney/react-state"&gt;State Management in Pure React&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FrontendMasters/pure-react-state-management"&gt;pure-react-state-management&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/stevekinney"&gt;Steve Kinney&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.google.com/presentation/d/1-04cvp4xDLNb8YRWpkmPTEY_4r-56sM5J178lxjU4vA/edit#slide=id.p"&gt;Interviewing for Frontend Engineers&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/young/frontend-interviewing"&gt;frontend-interviewing&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/young"&gt;Jem Young&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://btholt.github.io/complete-intro-to-containers/"&gt;Complete Intro to Containers&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/btholt/complete-intro-to-containers"&gt;complete-intro-to-containers&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/btholt"&gt;Brian Holt&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://static.frontendmasters.com/resources/2019-09-18-javascript-hard-parts-v2/javascript-hard-parts-v2.pdf"&gt;JavaScript: Hard Parts&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/StevanCakic/js-hard-parts"&gt;js-hard-parts&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/WillSen"&gt;Will Sentance&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/jlengstorf/gatsby-intermediate"&gt;Intermediate Gatsby with Gatsby Themes&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/jlengstorf/gatsby-intermediate"&gt;gatsby-intermediate&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/jlengstorf"&gt;Jason Lengstorf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://static.frontendmasters.com/resources/2019-10-14-full-stack-graphql/client-graphql-react.pdf"&gt;Client-Side GraphQL in React&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FrontendMasters/fullstack-graphql"&gt;fullstack-graphql&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Hendrixer"&gt;Scott Moss&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://static.frontendmasters.com/resources/2019-10-14-full-stack-graphql/server-graphql-nodejs.pdf"&gt;Server-Side GraphQL in Node.js&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FrontendMasters/fullstack-graphql"&gt;fullstack-graphql&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Hendrixer"&gt;Scott Moss&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.google.com/presentation/d/1Mvf_rOFz1wZeH1irajJqhRQgzid7BkqJBd8wigpz39M/edit"&gt;Full Stack for Front-End Engineers&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/young/Full-Stack-For-Frontend"&gt;Full-Stack-For-Frontend&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/young"&gt;Jem Young&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://static.frontendmasters.com/resources/2019-09-26-html-email-v2/html-email-v2.pdf"&gt;HTML Email Development&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/rodriguezcommaj/frontendmasters"&gt;html-email-development&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/rodriguezcommaj"&gt;Jason Rodriguez&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://static.frontendmasters.com/resources/2019-05-31-build-your-own-programming-language/programming-language.pdf"&gt;Building Your Own Programming Language&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/stevekinney/dropbear"&gt;dropbear&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/stevekinney"&gt;Steve Kinney&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://burkeholland.gitbook.io/vs-code-can-do-that/"&gt;Visual Studio Code Can Do That?&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/burkeholland/workshop-vs-code-can-do-that"&gt;workshop-vs-code-can-do-that&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/burkeholland"&gt;Burke Holland&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/jen4web/fem-adv-css-layout"&gt;Advanced CSS Layout&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/jen4web/fem-adv-css-layout"&gt;fem-adv-css-layout&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/jen4web"&gt;Jen Kramer&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://marcysutton.github.io/js-a11y-workshop/slides/"&gt;Accessibility in JavaScript Applications&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/marcysutton/js-a11y-workshop"&gt;js-a11y-workshop&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/marcysutton"&gt;Marcy Sutton&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://static.frontendmasters.com/resources/2019-05-28-react-state/redux-mobx.pdf"&gt;State Management: Redux and Mobx&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/stevekinney/redux-counter"&gt;redux-counter&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/stevekinney"&gt;Steve Kinney&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/FrontendMasters/service-workers-offline"&gt;Exploring Service Workers&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FrontendMasters/service-workers-offline"&gt;service-workers-offline&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/getify"&gt;Kyle Simpson&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://drive.google.com/file/d/1UGuP5Yhg-nZ5z_JFKhQCqHeLU_Yt_o3D/view"&gt;Ember Octane Fundamentals&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FrontendMasters/ember-octane"&gt;ember-octane&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mike-north"&gt;Mike North&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://static.frontendmasters.com/resources/2019-05-08-getting-into-javascript/getting-into-javascript.pdf"&gt;Getting started with JavaScript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/getify/You-Dont-Know-JS"&gt;You-Dont-Know-JS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/getify"&gt;Kyle Simpson&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://jlengstorf.github.io/presentations/workshop-gatsby-mdx-blog/#/"&gt;Introduction to Gatsby&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/frontendmasters/gatsby-intro"&gt;gatsby-intro&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/jlengstorf"&gt;Jason Lengstorf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://btholt.github.io/complete-intro-to-react-v5/"&gt;Intermediate React&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/btholt/complete-intro-to-react-v5"&gt;complete-intro-to-react-v5&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/btholt"&gt;Brian Holt&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://static.frontendmasters.com/resources/2019-04-24-servers-node-js/Hard-Parts-Servers-Node.pdf"&gt;Hard Parts: Servers &amp;amp; Node.js&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/frankPairs/fm-hard-parts-servers-nodejs"&gt;fm-hard-parts-servers-nodejs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/WillSen"&gt;Will Sentance&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="//slides.com/bgando/intro-graph-trees"&gt;Tree and Graph Data Structures&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;coding-interview-university&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/bgando"&gt;Bianca&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.learnpython.dev/"&gt;Intermediate Python&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/nnja/python"&gt;python&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/nnja"&gt;Nina Zakharenko&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://static.frontendmasters.com/resources/2019-03-07-deep-javascript-v2/deep-js-foundations-v2.pdf"&gt;Deep JavaScript Foundations&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/getify/You-Dont-Know-JS"&gt;You-Dont-Know-JS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/getify"&gt;Kyle Simpson&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://drive.google.com/file/d/170oHzpLNeprUa-TMmOAnSU4caEFDSb3e/view"&gt;TypeScript Fundamentals&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mike-works/typescript-fundamentals"&gt;typescript-fundamentals&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mike-north"&gt;Mike North&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/stevekinney/think-piece"&gt;Firebase with React&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/stevekinney/think-piece"&gt;think-piece&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/stevekinney"&gt;Steve Kinney&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://gist.github.com/stevekinney/7d9927ad0059322998f68914e172f32c"&gt;Electron Fundamentals&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/electron-in-action"&gt;electron-in-action&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/stevekinney"&gt;Steve Kinney&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://slides.com/scotups/api-design-in-node-with-express-v3/"&gt;API design in Node.js with Express&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FrontendMasters/api-design-node-v3"&gt;api-design-node-v3&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Hendrixer"&gt;Scott Moss&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/sdras/svg-workshop#slides"&gt;SVG Essentials &amp;amp; Animation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/sdras/svg-workshop"&gt;svg-workshop&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/sdras"&gt;Sarah Drasner&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/sdras/design-for-developers#slide-decks"&gt;Design For Developers&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/sdras/design-for-developers"&gt;design-for-developers&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/sdras"&gt;Sarah Drasner&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/onehungrymind/angular-reactive-workshop"&gt;Reactive Angular with NgRx&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/onehungrymind/angular-reactive-workshop"&gt;angular-reactive-workshop&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/onehungrymind"&gt;One Hungry Mind&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/onehungrymind/angular-core-workshop#getting-started"&gt;Angular Core&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/onehungrymind/angular-core-workshop"&gt;angular-core-workshop&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/onehungrymind"&gt;One Hungry Mind&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://static.frontendmasters.com/resources/2018-10-25-canvas-webgl/creative-coding.pdf"&gt;Creative Coding with Canvas &amp;amp; WebGL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mattdesl/workshop-generative-art"&gt;workshop-generative-art&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mattdesl"&gt;Matt DesLauriers&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/FrontendMasters/intro-mongo-db"&gt;Introduction to MongoDB&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FrontendMasters/intro-mongo-db"&gt;intro-mongo-db&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Hendrixer"&gt;Scott Moss&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/FrontendMasters/intro-node-js"&gt;Introduction to Nodejs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FrontendMasters/intro-node-js"&gt;intro-node-js&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Hendrixer"&gt;Scott Moss&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/rtfeldman/elm-0.19-workshop/blob/master/README.md"&gt;Advanced Elm&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/rtfeldman/elm-0.19-workshop"&gt;elm-0.19-workshop&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/rtfeldman"&gt;Richard Feldman&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://speakerdeck.com/stevekinney/aws-for-frontend-engineers"&gt;AWS for Frontend Engineers&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://gist.github.com/stevekinney/6ab02582829f039b6a14c973923909f8"&gt;aws-for-frontend&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/stevekinney"&gt;Steve Kinney&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/jkup/mastering-chrome-devtools"&gt;Mastering ChromeDev Tools&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/jkup/mastering-chrome-devtools"&gt;mastering-chrome-devtools&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/jkup"&gt;Jon Kuperman&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://slides.com/shirleywu/deck-10"&gt;Building Custom Data Visualizations&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/sxywu/custom-dataviz-example"&gt;custom-dataviz-example&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/sxywu"&gt;Shirley Wu&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://slides.com/shirleywu/deck-11"&gt;Data Visualization for React Developers&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/sxywu/react-d3-example"&gt;react-d3-example&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/sxywu"&gt;Shirley Wu&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.google.com/presentation/d/1FW3GT9Ww1S6SEGu8HAO5eRZUFggfVuFE2ievNCDWVDo/edit#slide=id.g376e8d6b61_0_4"&gt;Website Performance with Webpack&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/thelarkinn/webpack-workshop-2018"&gt;webpack-workshop-2018&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/TheLarkInn"&gt;Sean Larkin&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://btholt.github.io/intro-to-web-dev-v2/"&gt;Complete Intro to Web Development&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/btholt/intro-to-web-dev-v2"&gt;intro-to-web-dev-v2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/btholt"&gt;Brian Holt&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/FrontendMasters/serverless-with-aws"&gt;Serverless with AWS Lambda&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/FrontendMasters/serverless-with-aws"&gt;serverless-with-aws&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Hendrixer"&gt;Scott Moss&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://drive.google.com/file/d/17DckYclE6PJ2b42dMO-zVB_5WAk-bYYj/view"&gt;SQL Fundamentals&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mike-works/sql-fundamentals"&gt;sql-fundamentals&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mike-north"&gt;Mike North&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://speakerdeck.com/stevekinney/web-performance"&gt;Web Performance&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://gist.github.com/stevekinney/fe401ffb8b2b7279e56dd165b272f0c3"&gt;web-performance&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/stevekinney"&gt;Steve Kinney&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://btholt.github.io/four-semesters-of-cs-part-two/"&gt;4 Semesters of CS in 5 Hours&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/btholt/four-semesters-of-cs"&gt;four-semesters-of-cs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/btholt"&gt;Brian Holt&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/nnja/advanced-git"&gt;Git in Depth&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/nnja/advanced-git"&gt;advanced-git&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/nnja"&gt;Nina Zakharenko&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://drive.google.com/file/d/0B7LIdu29tPZRd1RWNWFYNjQxaWs/view"&gt;Web Security&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mike-works/web-security-fundamentals"&gt;web-security-fundamentals&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mike-north"&gt;Mike North&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/zgordon/frontend-masters-jsforwp"&gt;JavaScript for Wordpress&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/zgordon/frontend-masters-jsforwp"&gt;frontend-masters-jsforwp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/zgordon"&gt;Zac Gordon&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://drive.google.com/file/d/0B7LIdu29tPZRODE0SXpRMVVKYzA/view"&gt;PWA Fundamentals&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mike-works/pwa-fundamentals"&gt;pwa-fundamentals&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mike-north"&gt;Mike North&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://drive.google.com/file/d/0B7LIdu29tPZRU3h2YVJNajlWNGc/view"&gt;Modern SEO&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mike-works/modern-seo"&gt;modern-seo&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mike-north"&gt;Mike North&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://gist.github.com/1Marc/ccc99b341da3362a97dd9b3d06b67902"&gt;Sass Fundamentals&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://gist.github.com/1Marc/ccc99b341da3362a97dd9b3d06b67902"&gt;sass-workshop-setup&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://gist.github.com/1Marc"&gt;Marc Grabanski&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.google.com/presentation/d/1EaaM8fGJqp9eUP3-E9Dpec3P5EqbM36PsoFD6z4r8pg/edit#slide=id.g35f391192_00"&gt; Robust APIs with the Hapi.js Server Framework for Node.js&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/chenkie/fem-instructors-app"&gt;fem-instructors-app&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/chenkie"&gt;Ryan Chenkie&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://slides.com/kentcdodds/write-oss"&gt;Creating an Open Source JavaScript Library on Github&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://slides.com/kentcdodds/write-oss"&gt;write-oss&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kentcdodds"&gt;Kent C. Dodds&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/testdouble/real-world-testing/"&gt;Unit Testing with JavaScript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/testdouble/real-world-testing/"&gt;real-world-testing&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/testdouble"&gt;Test Double&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#vote-of-thanks"&gt;
  &lt;/a&gt;
  🙇‍♂️ Vote of Thanks
&lt;/h3&gt;

&lt;p&gt;A big shoutout to &lt;a href="https://github.com/FrontendMasters"&gt;FrontendMasters&lt;/a&gt; for creating high quality professional courses.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#support"&gt;
  &lt;/a&gt;
  🙏 Support
&lt;/h3&gt;

&lt;p&gt;
Loved the list? Please consider &lt;a href="https://www.buymeacoffee.com/amnaabd"&gt;donating&lt;/a&gt;  💸 to help it improve!
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://www.buymeacoffee.com/amnaabd"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kdzp2jon--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/support-buymeacoffee-orange%3Flogo%3Dbuymeacoffee%26style%3Dflat-square%26label%3DDonate" alt="sponsor amnaabd"&gt;
&lt;/a&gt;

&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zQj764Ae--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-orange.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQj764Ae--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-orange.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;
&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 38, OOP</title>
      <author>Aatmaj</author>
      <pubDate>Wed, 06 Oct 2021 09:46:53 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-38-oop-197</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-38-oop-197</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-we-will-learn-about-oop-in-python-today-we-will-make-a-simple-class-and-use-instances-of-the-classes"&gt;
  &lt;/a&gt;
  Today we will learn about OOP in Python. Today we will make a simple class and use instances of the classes.
&lt;/h2&gt;




&lt;p&gt;Almost everything in Python is an Object, with its properties and methods. A class is like an object blueprint for creating objects. To create a class, use the keyword class:&lt;/p&gt;

&lt;p&gt;Here is an example of a sample class commented wherever required&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;# creating a class named sample
&lt;/span&gt;
    &lt;span class="c1"&gt;# ATTRIBUTES
&lt;/span&gt;    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="c1"&gt;# class data has variable  named x with value five.
&lt;/span&gt;
&lt;span class="c1"&gt;# OBJECT CREATION(INSTANTIAZATION OF AN OBJECT)
&lt;/span&gt;&lt;span class="n"&gt;mysample&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# creating an instance of the class
&lt;/span&gt;
&lt;span class="c1"&gt;#Accessing the parameters
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mysample&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# We can access the attribute values using the '.' operator.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let us see one more sample&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
    &lt;span class="n"&gt;character&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'3'&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;character&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;23
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#class-methods"&gt;
  &lt;/a&gt;
  Class methods
&lt;/h3&gt;

&lt;p&gt;We can put functions inside a class, which are called as 'methods' &lt;br&gt;
Syntax&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def functionname (classname,......arguments......):
 ...
 ...
 ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The below example will make things very clear&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Tom"&lt;/span&gt;
    &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
    &lt;span class="n"&gt;character&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'3'&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;printname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printname&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Tom
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the method, one of the arguments passed was the class itself. This is necessary syntax in Python. If it is not done in the same manner, the program won't run. Below are code snippets of how a program won't run.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Common mistakes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1) Didnt use the dot operator in the method syntax&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Tom"&lt;/span&gt;
    &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
    &lt;span class="n"&gt;character&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'3'&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;printname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printname&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Traceback (most recent call last):
  File "main.py", line 9, in &amp;lt;module&amp;gt;
    a.printname()
  File "main.py", line 6, in printname
    print(name)
NameError: name 'name' is not defined
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2) Forgot to mention the classname in the arguments&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Tom"&lt;/span&gt;
    &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
    &lt;span class="n"&gt;character&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'3'&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;printname&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printname&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Traceback (most recent call last):
  File "main.py", line 9, in &amp;lt;module&amp;gt;
    a.printname()
TypeError: printname() takes 0 positional arguments but 1 was given

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#tired-of-writing-the-name-of-the-class-every-time-well-use-the-raw-self-endraw-keyword"&gt;
  &lt;/a&gt;
  Tired of writing the name of the class every time? Well use the &lt;code&gt;self&lt;/code&gt; keyword
&lt;/h6&gt;

&lt;p&gt;The &lt;code&gt;self&lt;/code&gt; keyword can be used in place of the entire class name&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Tom"&lt;/span&gt;
    &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
    &lt;span class="n"&gt;character&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'3'&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;printname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printname&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Tom
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Even replacing the class name by self &lt;strong&gt;inside&lt;/strong&gt; the method works&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Tom"&lt;/span&gt;
    &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
    &lt;span class="n"&gt;character&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'3'&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;printname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printname&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Tom
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#returning-values"&gt;
  &lt;/a&gt;
  Returning values
&lt;/h3&gt;

&lt;p&gt;We can make the methods return value as we would do in the usual methods&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Tom"&lt;/span&gt;
    &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
    &lt;span class="n"&gt;character&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'3'&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;printname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printname&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Tom
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let us take one more example related to the methods.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;rate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;set_amount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;print_tax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_amount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="c1"&gt;# Exercise why not self.set_amount(self,amount) ?
&lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rate&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;print_tax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;3.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, &lt;code&gt;set_amount(self)&lt;/code&gt; is a setter method, i.e. This methods sets the values of the method object. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#exercise"&gt;
  &lt;/a&gt;
  Exercise
&lt;/h3&gt;

&lt;p&gt;1) What will happen if we replace &lt;code&gt;self.set_amount(amount)&lt;/code&gt; by &lt;code&gt;self.set_amount(self,amount)&lt;/code&gt;? &lt;br&gt;
2) Write a program which contains a class student which contains variables Id, name and roll number&lt;br&gt;
The class must have methods &lt;code&gt;showId&lt;/code&gt; and &lt;code&gt;showrollnumber()&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#private-methods"&gt;
  &lt;/a&gt;
  Private methods
&lt;/h3&gt;

&lt;p&gt;We will now see how to make class methods as private. The private methods can only be accessed from &lt;strong&gt;inside&lt;/strong&gt; the class. No one outside can access it.&lt;br&gt;
In the above example, the &lt;code&gt;set_amount&lt;/code&gt; is used only inside the class. So why not mark it private? We can set private methods in Python by adding two underscores to the class name, like this &lt;code&gt;__set_amount&lt;/code&gt; Rest all remains the same&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;rate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__set_amount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;print_tax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__set_amount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rate&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;print_tax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;3.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This private method can not be accessed outside of the class&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;rate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__set_amount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;print_tax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__set_amount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rate&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__set_amount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;print_tax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Traceback (most recent call last):
  File "main.py", line 12, in &amp;lt;module&amp;gt;
    a.__set_amount(2)
AttributeError: 'sample' object has no attribute '__set_amount'

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;So friends that was all for this part. In the next part we will study the &lt;code&gt;__init__&lt;/code&gt; or the class constructor.&lt;/p&gt;

&lt;p&gt;Thank you&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>oop</category>
      <category>programming</category>
    </item>
    <item>
      <title>A first update on our salary survey</title>
      <author>DEVOPS-JOBS.NET</author>
      <pubDate>Wed, 06 Oct 2021 09:10:01 +0000</pubDate>
      <link>https://dev.to/devops_jobsnet/a-first-update-on-our-salary-survey-5e0b</link>
      <guid>https://dev.to/devops_jobsnet/a-first-update-on-our-salary-survey-5e0b</guid>
      <description>&lt;p&gt;🎉 We have a little update on our salary survey which we launched roughly &lt;a href="https://insights.devops-jobs.net/share-your-salary-and-see-what-everyone-else-is-making-in-devops/"&gt;three months ago&lt;/a&gt; (check out &lt;a href="https://salaries.devops-jobs.net/"&gt;https://salaries.devops-jobs.net/&lt;/a&gt; if you haven’t yet) and needless to say we’re still pretty excited about it.&lt;/p&gt;

&lt;p&gt;About four weeks after the launch we enabled the &lt;a href="https://salaries.devops-jobs.net/download/"&gt;download&lt;/a&gt; feature on the site so everyone can get the latest dataset in JSON and CSV format. Furthermore there’s now a weekly sync of these results to a dedicated &lt;a href="https://github.com/foorilla/devops-jobs-net-salaries"&gt;github repo&lt;/a&gt; as well.&lt;/p&gt;

&lt;p&gt;As initially announced, but not yet implemented during that time, we built our own &lt;a href="https://fxdata.foorilla.com/"&gt;FX data API&lt;/a&gt; to provide free and public currency data (yes, you can use it as well if you like!) for the Forex calculations taking place on the dataset in the salary_in_usd column. This is because we allow people to fill in their annual salary in their home or actually paid out currency and then do the work for you to translate that into its corresponding USD amount (yearly average) for better comparability/reference, with data provided by the &lt;a href="https://www.bis.org/"&gt;Bank for International Settlements&lt;/a&gt; (🏦 the bank for the central banks, basically).&lt;/p&gt;

&lt;p&gt;Well, it’s always fascinating how much effort can go into something seemingly simple like a salary survey (hint: way more than you anticipated). But still, it looks like it’s worth the effort.&lt;/p&gt;

&lt;p&gt;We also put in some more descriptive information on the &lt;a href="https://salaries.devops-jobs.net/download/"&gt;download page&lt;/a&gt; about what each column in the dataset represents or how to interpret it. Should be pretty straight forward by now, and hopefull very easy to work with.&lt;/p&gt;

&lt;p&gt;Now the plan is to keep this site up there indefinitely for the future to collect remote work salary information year by year on an ongoing basis. With this in mind it should be a good reason now to share this with your colleagues and friends if you haven’t done so yet. 😉&lt;/p&gt;

&lt;p&gt;It’ll be very interesting to see how much data we can gather in the long term, and also keep in mind that all this is in the &lt;a href="https://salaries.devops-jobs.net/download/"&gt;public domain&lt;/a&gt; (though mentioning the data came from us would be nice and also increases the amount of data available to share). Meaning it’s free to use by anyone for anything. 🙂&lt;/p&gt;

&lt;p&gt;Last but not least: Many thanks to all of you who filled out the survey form and shared the site with others. That’s pretty awesome! 💪&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This post first appeared on &lt;a href="https://insights.devops-jobs.net/a-first-update-on-our-salary-survey/"&gt;https://insights.devops-jobs.net/a-first-update-on-our-salary-survey/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>devops</category>
      <category>cloud</category>
      <category>salary</category>
    </item>
    <item>
      <title>The simplicity of ASP.NET Endpoints</title>
      <author>Tim Deschryver</author>
      <pubDate>Wed, 06 Oct 2021 09:09:46 +0000</pubDate>
      <link>https://dev.to/this-is-learning/the-simplicity-of-asp-net-endpoints-49g8</link>
      <guid>https://dev.to/this-is-learning/the-simplicity-of-asp-net-endpoints-49g8</guid>
      <description>&lt;p&gt;Follow me on Twitter at &lt;a href="https://timdeschryver.dev/twitter"&gt;@tim_deschryver&lt;/a&gt; | Subscribe to the &lt;a href="https://timdeschryver.dev/newsletter"&gt;Newsletter&lt;/a&gt; | Originally published on &lt;a href="https://timdeschryver.dev/blog/the-simplicity-of-net-endpoints"&gt;timdeschryver.dev&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://timdeschryver.dev/blog/the-simplicity-of-net-endpoints?tldr=true"&gt;Read the TLDR version on timdeschryver.dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this post, we continue where we left off in &lt;a href="https://timdeschryver.dev/blog/maybe-its-time-to-rethink-our-project-structure-with-dot-net-6"&gt;Maybe it's time to rethink our project structure with ASP.NET 6&lt;/a&gt;, and we're going to take a closer look at an Endpoint.&lt;/p&gt;

&lt;p&gt;The short recap of that post is that there are benefits by dividing an application into domain modules instead of grouping files by technical tiers, which is also known as the &lt;a href="https://jimmybogard.com/vertical-slice-architecture/"&gt;vertical slice architecture&lt;/a&gt;. The biggest benefit is that the code is simpler and more adaptable to changes, this plays nice with the new Endpoint feature of ASP.NET 6.&lt;/p&gt;

&lt;p&gt;In this post, we're taking a closer look at an endpoint and see how we can leverage the ASP.NET 6 dependency system to keep things simple.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;WebApplication
│   appsettings.json
│   Program.cs
│   WebApplication.csproj
│
├───Modules
│   └───Customers
│       │   CustomersModule.cs
│       ├───Endpoints
│       │       GetCustomer.cs
│       │       BlockCustomer.cs
│       ├───Core
│       │       Customer.cs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In traditional MVC ASP.NET API applications, you'll find controllers that include one or more routes.&lt;br&gt;
Because of this, a controller file can quickly become cluttered and often requires multiple constructor arguments. In production code, this isn't something that we have to think of because the dependency framework of your choice takes care of this. But still, a constructor that takes a lot of arguments is a bad practice and might be a problem in the future (e.g. when you need to move things around), if it isn't already causing troubles (e.g. in test setups).&lt;/p&gt;

&lt;p&gt;To give an example, we start with the following controller.&lt;br&gt;
In this case, we're keeping the example lightweight and only add one dependency to the customers' repository.&lt;br&gt;
The controller has 2 routes, a &lt;code&gt;GET&lt;/code&gt; and a &lt;code&gt;PUT&lt;/code&gt;, the implementation of both routes are written inline in the controller file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ApiController&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"api/[controller]"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CustomersController&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ControllerBase&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;ICustomersRepository&lt;/span&gt; &lt;span class="n"&gt;_customersRepository&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;CustomersController&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ICustomersRepository&lt;/span&gt; &lt;span class="n"&gt;customersRepository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_customersRepository&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;customersRepository&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;HttpGet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{customerId}"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetCustomer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;customerId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_customersRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetCustomer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;customerId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;HttpPut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"block/{customerId}"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;BlockCustomer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;customerId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BlockCustomer&lt;/span&gt; &lt;span class="n"&gt;blockCustomer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_customersRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetCustomer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;customerId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Block&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Reason&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_customersRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cancellationToken&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is still pretty straightforward, but things can get complicated real fast with this approach.&lt;/p&gt;

&lt;p&gt;That's one of the reasons why I think that a lot of teams have shifted towards using the &lt;a href="https://en.wikipedia.org/wiki/Mediator_pattern"&gt;Mediator pattern&lt;/a&gt;, more specific towards the &lt;a href="https://github.com/jbogard/MediatR"&gt;MediatR&lt;/a&gt; package.&lt;/p&gt;

&lt;p&gt;Using MediatR results in a low coupling between the routes of a controller and the implementation of the request, thus the request handlers can evolve independently from each other.&lt;br&gt;
All incoming requests are mapped to MediatR requests, often suffixed with &lt;code&gt;Query&lt;/code&gt; or &lt;code&gt;Command&lt;/code&gt;, and is then sent to the mediator pipeline.&lt;/p&gt;

&lt;p&gt;The result is that the controller:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;goes from possible multiple dependencies to only one dependency, the &lt;code&gt;IMediator&lt;/code&gt; instance&lt;/li&gt;
&lt;li&gt;has less (almost no) code because the route implementations are extracted into separate &lt;code&gt;IRequest&lt;/code&gt; handlers, the route only acts as a dispatcher to send the request to a handler&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The refactored controller, using MediatR, now looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ApiController&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"api/[controller]"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CustomersController&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ControllerBase&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;IMediator&lt;/span&gt; &lt;span class="n"&gt;_mediator&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;CustomersController&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IMediator&lt;/span&gt; &lt;span class="n"&gt;mediator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_mediator&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mediator&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;HttpGet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{customerId}"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetCustomer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;customerId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_mediator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;GetCustomerQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;customerId&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;HttpPut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"block/{customerId}"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;BlockCustomer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;customerId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BlockCustomer&lt;/span&gt; &lt;span class="n"&gt;blockCustomer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_mediator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;BlockCustomerCommand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;customerId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blockCustomer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Reason&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To give you the full picture, the associate handler of the &lt;code&gt;BlockCustomerCommand&lt;/code&gt; request looks like this.&lt;br&gt;
It's simply a copy-paste of the route's code to the &lt;code&gt;Handle&lt;/code&gt; method of a request handler.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BlockCustomerCommandHandler&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IRequestHandler&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;BlockCustomerCommand&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;ICustomersRepository&lt;/span&gt; &lt;span class="n"&gt;_customersRepository&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;BlockCustomerCommandHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ICustomersRepository&lt;/span&gt; &lt;span class="n"&gt;customersRepository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_customersRepository&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;customersRepository&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Unit&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BlockCustomerCommand&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CancellationToken&lt;/span&gt; &lt;span class="n"&gt;cancellationToken&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_customersRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CustomerId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cancellationToken&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Block&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Reason&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_customersRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cancellationToken&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Unit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is better than before &lt;em&gt;though it might not be clearly visible based on this trivial example&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;But now we can go a step further and simplify the code by rewriting the request handler as an endpoint.&lt;br&gt;
The endpoint expects 2 arguments, a pattern and a &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.requestdelegate?view=aspnetcore-6.0"&gt;RequestDelegate&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can think of the pattern as the &lt;code&gt;Route&lt;/code&gt; attribute from the MVC controller, and the request delegate as a function that is called when the endpoint is hit. The arguments of the request delegate are resolved from the request, and also from the configured services of the dependency container.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;builder&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WebApplication&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;CreateBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddTransient&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ICustomersRepository&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CustomersRepository&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Build&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapPut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"customers/block/{customerId}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;FromRoute&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;customerId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;FromBody&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;BlockCustomer&lt;/span&gt; &lt;span class="n"&gt;blockCustomer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;FromServices&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;ICustomersRepository&lt;/span&gt; &lt;span class="n"&gt;customersRepository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_customersRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CustomerId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cancellationToken&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Block&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Reason&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_customersRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cancellationToken&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also emit the attribute tags, so the shorthand version of the above snippet becomes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;builder&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WebApplication&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;CreateBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddTransient&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ICustomersRepository&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CustomersRepository&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Build&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapPut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"customers/block/{customerId}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;customerId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BlockCustomer&lt;/span&gt; &lt;span class="n"&gt;blockCustomer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ICustomersRepository&lt;/span&gt; &lt;span class="n"&gt;customersRepository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_customersRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CustomerId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cancellationToken&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Block&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Reason&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_customersRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cancellationToken&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is similar to what we had with MVC controllers, except that the DI is handled by the endpoint itself.&lt;/p&gt;

&lt;p&gt;By following the &lt;code&gt;IModule&lt;/code&gt; convention, we can easily refactor this code and move the handler to its own file, a la MediatR.&lt;br&gt;
Doing this gives us the following result.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CustomersModule&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IModule&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IServiceCollection&lt;/span&gt; &lt;span class="nf"&gt;RegisterModule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IServiceCollection&lt;/span&gt; &lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddTransient&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ICustomersRepository&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CustomersRepository&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IEndpointRouteBuilder&lt;/span&gt; &lt;span class="nf"&gt;MapEndpoints&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IEndpointRouteBuilder&lt;/span&gt; &lt;span class="n"&gt;endpoints&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;endpoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapGet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"customers/{customerId}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GetCustomer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Handler&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;endpoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapPut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"customers/block/{customerId}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BlockCustomer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Handler&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;endpoints&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the extracted handler:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BlockCustomer&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;customerId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BlockCustomer&lt;/span&gt; &lt;span class="n"&gt;blockCustomer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ICustomersRepository&lt;/span&gt; &lt;span class="n"&gt;customersRepository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_customersRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CustomerId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cancellationToken&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Block&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Reason&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_customersRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cancellationToken&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is similar to what we're used to but it's simpler and doesn't require a dependency on MediatR to handle an incoming request. You can even get rid of MediatR entirely if you're just using MediatR to send requests to handlers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The new Endpoints feature of ASP.NET 6 makes handling incoming requests simple.&lt;br&gt;
An endpoint can be extracted into a separate class, which makes sure that &lt;strong&gt;the code fits in your head&lt;/strong&gt;.&lt;br&gt;
Besides resolving route parameters and request bodies, the request handler also can inject dependencies from the dependency container.&lt;/p&gt;

&lt;p&gt;Besides the simplicity, an additional benefit of ASP.NET endpoints is that they're faster than controller based APIs &lt;a href="https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-6-preview-4/"&gt;faster&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;These new routing APIs have far less overhead than controller-based APIs. Using the new routing APIs, ASP.NET Core is able to achieve ~800k RPS in the &lt;a href="https://www.techempower.com/benchmarks/"&gt;TechEmpower JSON benchmark&lt;/a&gt; vs ~500k RPS for MVC.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Follow me on Twitter at &lt;a href="https://timdeschryver.dev/twitter"&gt;@tim_deschryver&lt;/a&gt; | Subscribe to the &lt;a href="https://timdeschryver.dev/newsletter"&gt;Newsletter&lt;/a&gt; | Originally published on &lt;a href="https://timdeschryver.dev/blog/the-simplicity-of-net-endpoints"&gt;timdeschryver.dev&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>csharp</category>
      <category>architecture</category>
    </item>
    <item>
      <title>How to: Azure PubSub Service</title>
      <author>Albert Bennett</author>
      <pubDate>Wed, 06 Oct 2021 09:07:18 +0000</pubDate>
      <link>https://dev.to/albertbennett/how-to-azure-pubsub-service-2ccb</link>
      <guid>https://dev.to/albertbennett/how-to-azure-pubsub-service-2ccb</guid>
      <description>&lt;p&gt;If you learned something new feel free to connect with me on &lt;a href="https://www.linkedin.com/in/albert-bennett/"&gt;linkedin&lt;/a&gt; or follow me on dev.to :)&lt;br&gt;
Also if you'd like to skip to the code I have posted it here on my &lt;a href="https://github.com/Albert-Bennett/AzurePubSubSample"&gt;GitHub&lt;/a&gt; page. &lt;br&gt;
&lt;br&gt;&lt;br&gt;
Today I'd like to chat a bit about the Azure Web PubSub Service and what it can do. I got the opportunity to use this service last week and I think that it is really interesting tech especially if you need to stream data through a websocket and don't want to set up a websocket server.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;strong&gt;So what is Azure PubSub?&lt;/strong&gt;&lt;br&gt;
It is a service in Azure that allows you to push data to a hub and subscribers of that hub can get the data. Below I have an image of how this works:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9o85PiZ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qrb2e48yzglk6ym046wc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9o85PiZ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qrb2e48yzglk6ym046wc.png" alt="Untitled"&gt;&lt;/a&gt;This connection happens over wss which is a TCP protocol over port 443. Traditionally to do this you'd need to set up a websocket server and establish a connection with it to serve the data. Using this new Azure service really removes a lot of headaches with streaming data to clients.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;strong&gt;About the Sample&lt;/strong&gt;&lt;br&gt;
What the sample that I am going to go through is going to do is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Allow the user to subscribe to a hub.&lt;/li&gt;
&lt;li&gt;Push data to our hub so that subscribers can see it via a http trigger function in the function app.&lt;/li&gt;
&lt;li&gt;Display the data from our hub.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;&lt;br&gt;
Firstly we need to create the Web PubSub Service. There is not much to it... see image below of what settings I used to set it up:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zZTPqaUA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7fo1tt20klaupkgjzwib.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zZTPqaUA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7fo1tt20klaupkgjzwib.png" alt="image"&gt;&lt;/a&gt; And that's about it for our Azure Services. You don't need to tweak anything on the new service, it's good to go as is well.. for our purposes it is. You can set up a function app with an app service plan as well if you wanted to deploy the code later on but... I didn't want to for this sample.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Step 2&lt;/strong&gt;&lt;br&gt;
Next onto the project setup. What we need to do first is to create an C# Function App project:&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lopnkxoh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e21gitgeyc90usx3bhdv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lopnkxoh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e21gitgeyc90usx3bhdv.png" alt="image"&gt;&lt;/a&gt; I have chosen to use a http trigger but, you could have used a timer trigger as the function as well because we will be using a timer function to send data to our hub. &lt;br&gt;
From here you need to install the following nuget packages:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Azure.Messaging.WebPubSub&lt;/li&gt;
&lt;li&gt;Microsoft.Azure.WebJobs.Extensions.WebPubSub&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These packages are in beta so you'll need to search for the preview packages. What these lets us do is to push messages to our hub and allows users to subscribe to a hub. Finally you'll need to add a connection string from your PubSub service to the local.settings.json file of your function app. You can find the connection string to the Web PubSub service by going to &lt;strong&gt;Keys &amp;gt; Connection String (under the 'Primary')&lt;/strong&gt;. See screen shot below:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2Gm7pHZ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g4a6az01f4rf5m12fi04.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2Gm7pHZ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g4a6az01f4rf5m12fi04.PNG" alt="pubsub connection string"&gt;&lt;/a&gt; I have left a sample of what my settings file looks like below after adding the connection string:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"IsEncrypted"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"Values"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"AzureWebJobsStorage"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"UseDevelopmentStorage=true"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"FUNCTIONS_WORKER_RUNTIME"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"dotnet"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"WebPubSubConnectionString"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[your connection string]"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Step 3&lt;/strong&gt;&lt;br&gt;
The code for this is very straight forward.&lt;br&gt;
We need a function to push data to our hub and a function to let users subscribe to our hub.&lt;br&gt;
Here is the code to get users to subscribe to our hub:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Subscribe&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;FunctionName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Subscribe"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;WebPubSubConnection&lt;/span&gt; &lt;span class="nf"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;HttpTrigger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AuthorizationLevel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Anonymous&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"post"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Route&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="n"&gt;HttpRequest&lt;/span&gt; &lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;WebPubSubConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Hub&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="n"&gt;WebPubSubConnection&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ILogger&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This function essentially establishes a connection to our hub and it returns a json response. Below is a sample response from the endpoint:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"baseUrl"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[base URL]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[base URL with access token]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"accessToken"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[the access token]"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The main value we want to make use of is the 'url' field. The value of this is our connection to the hub in the PubSub Service.&lt;br&gt;
And here is the code to push data to our hub.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PublishData&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;FunctionName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"PublishData"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nf"&gt;TimerTrigger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"*/10 * * * * *"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="n"&gt;TimerInfo&lt;/span&gt; &lt;span class="n"&gt;myTimer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ILogger&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;WebPubSub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Hub&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="n"&gt;IAsyncCollector&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;WebPubSubOperation&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;operations&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;operations&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;SendToAll&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Message&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BinaryData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;FromString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToShortTimeString&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
                &lt;span class="n"&gt;DataType&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MessageDataType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Essentially what this is doing is sending the data to all subscribers of the hub defined in the binding of our function in our case 'test'.&lt;br&gt;
With that being set up you can now get clients to subscribe to the hub and receive data being published to the hub in real time.&lt;br&gt;
Ok, so there isn't much to see here we can see that the timer function is being triggered but, not much else:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mZsGX3kz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t9dv06t30v6dvl8gu9qx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mZsGX3kz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t9dv06t30v6dvl8gu9qx.png" alt="image"&gt;&lt;/a&gt; In the repo I have added a new function to the app that returns a html page. On that page there is a js function that connects to the websocket and returns the data in real time. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ubFcE64y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqyxnwx0yxku2xqc070i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ubFcE64y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqyxnwx0yxku2xqc070i.png" alt="image"&gt;&lt;/a&gt; And with that, you can see that data being received by the subscriber in real time.&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
Thanks for reading my blog post, I hope you learned something new :)&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>csharp</category>
      <category>azure</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
