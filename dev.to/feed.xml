<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to Use Environment Variables (env) in ExpressJs </title>
      <author>Gerald</author>
      <pubDate>Thu, 21 Oct 2021 13:49:28 +0000</pubDate>
      <link>https://dev.to/geraldmuvengei06/how-use-environment-variables-env-in-expressjs-3bpc</link>
      <guid>https://dev.to/geraldmuvengei06/how-use-environment-variables-env-in-expressjs-3bpc</guid>
      <description>&lt;p&gt;Well, hello!&lt;br&gt;
If you're coming from frontend development with Vue, or React, you know that environment variables (.env) are initialized behind the scenes i.e. You don't have to require and use &lt;code&gt;dotenv&lt;/code&gt;. However, when writing backend with, Expressjs, for instance, you have to initialize it like so:-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./.env&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#problem-env-variable-not-found"&gt;
  &lt;/a&gt;
  Problem: Env variable not found
&lt;/h2&gt;

&lt;p&gt;A friend was building an API with Expressjs. He needed to connect to stripe for the payments. The response from stripe was &lt;code&gt;Authorization headers are missing&lt;/code&gt;. He couldn't get why this was happening despite the fact that he had defined the Stripe Secret Key on the environment variables (.env), and used it when initializing "stripe" npm package. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#serverjs"&gt;
  &lt;/a&gt;
  Server.js
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;..&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stripeRoute&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./routes/stripe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;..&lt;/span&gt;
&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./.env&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;..&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#routesstripejs"&gt;
  &lt;/a&gt;
  routes/stripe.js
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;stripe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;STRIPE_KEY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#env"&gt;
  &lt;/a&gt;
  .env
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;STRIPE_KEY=key_goes_here
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#soln-define-environment-variables-before-using-them"&gt;
  &lt;/a&gt;
  Soln: Define environment variables before using them
&lt;/h1&gt;

&lt;p&gt;The error was as a result of defining the Stripe routes before requiring the &lt;code&gt;.env&lt;/code&gt;. This solved his issue:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./.env&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stripeRoute&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./routes/stripe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Personally I like to define my environment variables at the start of the server file. &lt;/p&gt;

</description>
      <category>node</category>
      <category>expressjs</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Create a Slack Bot withÂ NodeJS</title>
      <author>Saji Wang</author>
      <pubDate>Thu, 21 Oct 2021 13:37:39 +0000</pubDate>
      <link>https://dev.to/codesphere/create-a-slack-bot-with-nodejs-215e</link>
      <guid>https://dev.to/codesphere/create-a-slack-bot-with-nodejs-215e</guid>
      <description>&lt;h3&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h3&gt;

&lt;p&gt;Platforms like Slack, Teams, and Discord have become much more than just a communication mechanism. In the world of remote work, these platforms become the very venue through which our teams operate.&lt;/p&gt;

&lt;p&gt;In this tutorial, we're going to be using NodeJS to create a Slack Bot which you can customize to handle HR operations, pull data, or just create a more enjoyable slack experience for your team.&lt;/p&gt;

&lt;p&gt;If you're interested in learning how to create bots on other communication platforms, let us know down below.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#project-setup"&gt;
  &lt;/a&gt;
  Project Setup
&lt;/h3&gt;

&lt;p&gt;Our project file system is going to be relatively simple. We're just going to need a standard node project which we can initialize with:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm init&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let's then add Slack's Bolt API for creating Slack Apps:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm i @slack/bolt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Finally, create a file called &lt;code&gt;index.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Next, we need to actually register our app with Slack. To do this, visit &lt;a href="https://api.slack.com/apps/"&gt;https://api.slack.com/apps/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And create an App from scratch.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1ZgvPS7U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/13az0wabga1098xgep6t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1ZgvPS7U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/13az0wabga1098xgep6t.png" alt="nameapp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Name your app and pick the workspace you want to test it in.&lt;br&gt;
From there, there are a number of settings that we are going to edit.&lt;/p&gt;

&lt;p&gt;First, in Basic information, go to App-Level Tokens and generate a new Token. Give this token the scopes "connections: write" and "authorizations: read"&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xIEG2c1p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2xfakz9syso9mpdq8hax.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xIEG2c1p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2xfakz9syso9mpdq8hax.png" alt="generateapptoken"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, go to Socket Mode and enable Socket Mode. This will allow us to connect to the Slack API with WebSockets. If you are publicly distributing your Slack App you are going to want to host it somewhere. More on that later.&lt;/p&gt;

&lt;p&gt;Next, go to OAuth &amp;amp; Permissions, and find the Scopes section. Add the following Bot Token Scopes. Depending on what you are doing you may want to add others, but for this tutorial, this is all we will need.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tXdsqJ3r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ng1kwiylcbvbf11wyrve.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tXdsqJ3r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ng1kwiylcbvbf11wyrve.png" alt="scopes"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all we need for configuration. Finally, we can initialize our app in &lt;code&gt;index.js&lt;/code&gt;:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;If we run this file and don't get any errors, then we've successfully authenticated our app!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#slash-commands"&gt;
  &lt;/a&gt;
  Slash Commands
&lt;/h3&gt;

&lt;p&gt;The first way that we can add functionality to our Slack bot is by creating Slash commands. These are exactly what you might imagine. Someone in our workspace can simply type /command-name and call some sort of function.&lt;/p&gt;

&lt;p&gt;To add a command, go to the Slash Commands tab in the Slack API dashboard and press "Create New Command"&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_nebZahd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q4vty9ecgj5yivi50s9h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_nebZahd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q4vty9ecgj5yivi50s9h.png" alt="socketmode"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can then add functionality to this command in &lt;code&gt;index.js&lt;/code&gt;:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Once you reinstall the app to your workspace (which can be done from the oAuth &amp;amp; Permissions Tab), you can use it like so:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cudiDUzX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ay6ve5ut6k5pbf4jabqp.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cudiDUzX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ay6ve5ut6k5pbf4jabqp.gif" alt="squaregif"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#handling-events"&gt;
  &lt;/a&gt;
  Handling Events
&lt;/h3&gt;

&lt;p&gt;The next way we can add functionality to our Slack Bot is through events. An event can be anything from direct messaging our bot or a new user joining our workspace. We can set up our bot to listen to these events and do certain things when the event is triggered.&lt;/p&gt;

&lt;p&gt;To set this up, go to the Events and Subscriptions tab and enable Events. From there, add&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8ZmKG2zM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b4ac5c8itwhf16ng4s97.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ZmKG2zM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b4ac5c8itwhf16ng4s97.png" alt="subscribetoBots"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From there, we can add the following code to our &lt;code&gt;index.js&lt;/code&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;And use it like so (again don't forget to reinstall the app to your workspace)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6sJxqUOX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ikqo4re6qp3ryqzk28ed.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6sJxqUOX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ikqo4re6qp3ryqzk28ed.gif" alt="helloGif"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#using-slack-apps-to-optimize-your-business-operations"&gt;
  &lt;/a&gt;
  Using Slack Apps to Optimize Your Business Operations
&lt;/h3&gt;

&lt;p&gt;Now obviously the examples we built here are pretty rudimentary, but the key thing to note here is that you can now interact with Slack however you want. This can allow you to build any number of tools such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Commands to pull certain metrics (just pull from API's in NodeJS)&lt;/li&gt;
&lt;li&gt;Run internal polls&lt;/li&gt;
&lt;li&gt;Find meeting availability&lt;/li&gt;
&lt;li&gt;Get progress reports (perhaps even integrate with Trello or Asana)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that the code is at your fingertips, anything you can do with NodeJS you can now do in Slack.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#publishing-your%C2%A0app"&gt;
  &lt;/a&gt;
  Publishing YourÂ App
&lt;/h3&gt;

&lt;p&gt;If you want to publish your bot so that anyone can integrate it into their workspace, you're going to need to deploy it somewhere. If you've ever built a bot that requires live deployment, you know how difficult and time-consuming it can be to test your app in the cloud when you can only develop it locally.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;At &lt;a href="https://link.codesphere.com/ES"&gt;Codesphere&lt;/a&gt;, we're building a cloud IDE so that you can code and deploy seamlessly.&lt;/strong&gt; With Codesphere's live test environment, you can make and test ad-hoc changes to your Slack bot instead of wasting time deploying after each minor change you make.&lt;/p&gt;

&lt;p&gt;So what kind of bot are you going to build? Let us know down below!&lt;/p&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Skills in Python That Every Junior Should Know</title>
      <author>Mark Vassilevskiy</author>
      <pubDate>Thu, 21 Oct 2021 13:36:36 +0000</pubDate>
      <link>https://dev.to/markfusion/simple-skills-in-python-that-every-junior-should-know-5f3g</link>
      <guid>https://dev.to/markfusion/simple-skills-in-python-that-every-junior-should-know-5f3g</guid>
      <description>&lt;p&gt;Hey Guys! Today I'll be showing you which skill you absolutely need to know to become a really good Junior Python Programmer. Also, in this article, I tried to describe the road to learning these skills right. Hope You'll Enjoy :)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-version-control-system-vcs"&gt;
  &lt;/a&gt;
  1. Version Control System (VCS)
&lt;/h2&gt;

&lt;p&gt;For working in companies or with your team you absolutely need VCS. It's created for working together and saving different steps of building your product with the ability to return to any stage of development if something went wrong. The most popular VCS service is GitHub, however, you can use others like GitLab, Bitbucket, etc. Also, you can share your project with other programmers and hear their feedback. You need to know:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;At least one VCS&lt;/li&gt;
&lt;li&gt;Basic operations like Check in, check out&lt;/li&gt;
&lt;li&gt;How to work with Branches (Understand the purpose of branches, Create new branches, Merge branches)&lt;/li&gt;
&lt;li&gt;Centralized (Trunk Based) approach &lt;/li&gt;
&lt;li&gt;GitFlow approach&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ohNHzxfI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wn04qgtjxi1uoe38lbw7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ohNHzxfI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wn04qgtjxi1uoe38lbw7.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-python-general-information"&gt;
  &lt;/a&gt;
  2. Python General Information
&lt;/h2&gt;

&lt;p&gt;Understand not only the basics of python like Data Types, Operations, Loops but also, things like Tuples, Dictionaries, Sets, Slices, etc. How every function or method works at the computer level. One of the most popular mistakes that almost every beginner doing is to write your code in apps like Vscode or PyCharm because to understand python you need to write code yourself without any help from the code editor. You need to know:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Differences between 2.x and 3.x in general &lt;/li&gt;
&lt;li&gt;Differences between List, Dictionary, Tuple (You don't need to fully understand these conceptions, just know basics and know what are the difference)&lt;/li&gt;
&lt;li&gt;Definition and properties of Sets&lt;/li&gt;
&lt;li&gt;Indexing and Slicing&lt;/li&gt;
&lt;li&gt;Mutable and Immutable types&lt;/li&gt;
&lt;li&gt;Definition of Dynamic Typing (Dynamic Typing is a really big conception and you don't need to understand it fully, just know the basics and how it works because it will be very useful)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#oop"&gt;
  &lt;/a&gt;
  OOP
&lt;/h3&gt;

&lt;p&gt;OOP (Object-oriented programming) is a big sphere and one of the main directions of current programming. In other languages living without OOP is almost impossible, however, in Python, it's not so important because actually everything that you can do with OOP in python you can do with usual functions. Also, because of Python specials, you just can't use many concepts of OOP. But, of course, you need to understand the basics of this concept:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Definition and syntax&lt;/li&gt;
&lt;li&gt;Inheritance&lt;/li&gt;
&lt;li&gt;Abstract base class&lt;/li&gt;
&lt;li&gt;Basic customization and Operators overloading&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E5Skj4FU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ohz0qo2ikq1j38flmc3j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E5Skj4FU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ohz0qo2ikq1j38flmc3j.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-algorithms"&gt;
  &lt;/a&gt;
  3. Algorithms
&lt;/h2&gt;

&lt;p&gt;Algorithms are maybe the most important part of learning programming itself and not only. It helps you to think differently in life. For example, you need to guess the number from 0 to 100 with the least number of operations. If you don't know any algorithms, then you will probably iterate through every number and ask if it's right. But what if I'll tell you that you can solve this problem in only 7 steps by using algorithms called "Binary Search". And the efficiency for it is exponentially increasing, if you need to guess the number from 4 billion, you'll need only 35 steps by using Binary Search, rather than take 4 billion steps by linear searching. There're many algorithms that you must know because you won't be able to build any serious project without them. Firstly you need to read Grokking Algorithms, which explain in a usual language how to use the most popular algorithms. A list of algorithms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Binary Search&lt;/li&gt;
&lt;li&gt;Bubble Sort (Simple algorithm for sorting)&lt;/li&gt;
&lt;li&gt;Quicksort (As you may notice, it's algorithms for sorting that works much faster)&lt;/li&gt;
&lt;li&gt;Hash-Function (It's a programmer name for dictionaries)&lt;/li&gt;
&lt;li&gt;Breadth-first search and Dijkstra's algorithm (Algorithms for finding the best way and to reach the finish line in the fastest way)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cw72J8vN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o6kdmcvnekg5v30b4v0h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cw72J8vN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o6kdmcvnekg5v30b4v0h.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-working-with-shell"&gt;
  &lt;/a&gt;
  4. Working with SHELL
&lt;/h2&gt;

&lt;p&gt;There're many analogies of shell/console for different OP (Operating System), like for Windows, Linux, macOS. And each of them has its own specific commands. The question "Why Do I need to learn Shell?" is a little bit confusing, because shell is where you can run your files, without it you just can't see what your code does and can't change something inside of it. in the Django framework, to start the server, you need to refer to the python script manage.py and call the runserver function as a parameter. You need to know:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Simple commands for your specific OS, like "cd"&lt;/li&gt;
&lt;li&gt;How to Launch Python scripts inside of it&lt;/li&gt;
&lt;li&gt;How to use flags and parameters in shell commands&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YyIfcKE7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2dh6zzrd4w860fk05qqb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YyIfcKE7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2dh6zzrd4w860fk05qqb.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;These are the most common and important skills that every Python developer, not only Junior should know. I didn't include Framework Topic, because it needs to better describing and I'll write an additional article about best frameworks for Python. I hope you enjoyed :)&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>[VIDEO] How to Deploy a Node.js App on Ubuntu with PM2, NGINX and Cloudflare</title>
      <author>Bobby Iliev</author>
      <pubDate>Thu, 21 Oct 2021 13:12:00 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/video-how-to-deploy-a-nodejs-app-on-ubuntu-with-pm2-nginx-and-cloudflare-5dh</link>
      <guid>https://dev.to/bobbyiliev/video-how-to-deploy-a-nodejs-app-on-ubuntu-with-pm2-nginx-and-cloudflare-5dh</guid>
      <description>&lt;p&gt;In this video you will learn how to deploy a Node.js application ready for production on an Ubuntu server using the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A specific Node.js version&lt;/li&gt;
&lt;li&gt;PM2 to allow you to run and manage your Node application 24/7 &lt;/li&gt;
&lt;li&gt;Nginx setup as a reverse proxy so that your users could access your website via HTTP on port 80&lt;/li&gt;
&lt;li&gt;Cloudflare so that you could use a domain name and secure your website with a free SSL certificate &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;DigitalOcean free $100 credit:&lt;br&gt;
&lt;a href="https://m.do.co/c/2a9bba940f39"&gt;https://m.do.co/c/2a9bba940f39&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/9FvgyWDsViA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;All commands used in the video can be found here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-node-js-application-for-production-on-ubuntu-16-04"&gt;https://www.digitalocean.com/community/tutorials/how-to-set-up-a-node-js-application-for-production-on-ubuntu-16-04&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://twitter.com/bobbyiliev_"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>devops</category>
      <category>ubuntu</category>
    </item>
    <item>
      <title>Scaling Kubernetes Clusters with Armory</title>
      <author>Michael Bogan</author>
      <pubDate>Thu, 21 Oct 2021 12:57:19 +0000</pubDate>
      <link>https://dev.to/mbogan/scaling-kubernetes-clusters-with-armory-24n4</link>
      <guid>https://dev.to/mbogan/scaling-kubernetes-clusters-with-armory-24n4</guid>
      <description>&lt;h1&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h1&gt;

&lt;p&gt;Imagine if Amazon were unavailable for just one day each year. At that rate, they would have 99.7% availability, which seems fairly reasonable on the surface. In 2020, however, Amazon's revenue was nearly $400 billion. Living with 99.7% availability instead of 100% would cost Amazon more than $1 billion. Downtimeâeven just a littleâwill cost your business.&lt;/p&gt;

&lt;p&gt;We minimize downtime through redundancy. Building reliable systems out of unreliable components requires having spare components to replace the faulty ones. Still, though, it takes time to replace faulty components.&lt;/p&gt;

&lt;p&gt;Now, let's take it to the realm of software. You have an enterprise-grade system with tens of thousands (or more) of servers and applications. Those are spread across the globe. You need to deploy your applications and services to your servers, manage your fleet of infrastructure, upgrade, patch, and support development. In case of an incident, you need to be able to roll back changes safely or failover to alternate systems. You need to secure all these systems and manage access.&lt;/p&gt;

&lt;p&gt;Kubernetes has risen to prominence over the last several years because it provides a solid, yet extensible, foundation to build such large-scale systems. For continuous delivery (CD) of large-scale systems, including those built on Kubernetes, the platform of choice is Spinnaker. However, if you were to use Spinnaker alone, managing Kubernetes deployments at this level of scale is untenable. What's needed is a robust tool for handling change management and pipeline configuration and security. Ultimately, what's needed is Armory's enterprise-level distribution of Spinnaker.  &lt;/p&gt;

&lt;p&gt;In this article, we'll consider the challenges of &lt;strong&gt;managing Kubernetes at scale&lt;/strong&gt; and the hurdles of handling &lt;strong&gt;operational environments&lt;/strong&gt; and &lt;strong&gt;upgrading Kubernetes&lt;/strong&gt;. Then, we'll look at the role of &lt;strong&gt;Spinnaker as a CD platform for Kubernetes&lt;/strong&gt;. Lastly, we'll look at the simplicity and safety that come with using &lt;strong&gt;&lt;a href="https://www.armory.io/"&gt;Armory Spinnaker&lt;/a&gt;&lt;/strong&gt; for the task of managing such large-scale Kubernetes systems. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#managing-kubernetes-at-scale"&gt;
  &lt;/a&gt;
  Managing Kubernetes at scale
&lt;/h1&gt;

&lt;p&gt;Kubernetes is great, however, it operates at the cluster level. And a Kubernetes cluster has limits. Kubernetes &lt;code&gt;1.21&lt;/code&gt; supports up to 5,000 nodes per cluster and 110 pods per node, up to a total of 150,000 pods and a total of 300,000 containers. That's a lot, but most enterprises exceed even these limits by several orders of magnitude.&lt;/p&gt;

&lt;p&gt;These cluster limits are unlikely to change anytime soon. For larger systems, the solution is to run multiple Kubernetes clusters. But, how sustainable is multi-cluster management without the support of good tools? In addition, we have the challenges of managing access control for users and services, coordinating multiple environments, and dealing with potentially system-breaking Kubernetes upgrades. At the level of scale we're consideringâand for enterprises where downtime is unacceptableâthe task is herculean. Let's look at each of these challenges in detail.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#multicluster-management"&gt;
  &lt;/a&gt;
  Multi-cluster management
&lt;/h2&gt;

&lt;p&gt;First, letâs look at multi-cluster land. If you have a small number of clusters (let's say fewer than 10), you may try to manage them directly. Humans will follow a runbook to perform tasks like provisioning a cluster, deploying essential software, upgrading, and patching.&lt;/p&gt;

&lt;p&gt;This kind of manual operation breaks pretty quickly. Kubernetes promotes the concept of treating your servers as cattle, not pets. At scale, you need to take this concept to your clusters as well. What does this mean? It means that clusters are disposable. A cluster that runs some workloads (including critical workloads) can be scaled (have more similar clusters running the same workloads), can be deleted, and/or can be drained, with its workloads transferred to another cluster.&lt;/p&gt;

&lt;p&gt;That level of control at scale requires a lot of dedicated cluster management software. One of the most useful patterns is the management cluster. The management cluster is a Kubernetes cluster whose job is to manage other Kubernetes clusters. A good starting point for this approach is the &lt;a href="https://cluster-api.sigs.k8s.io/"&gt;Kubernetes Cluster API&lt;/a&gt;, which is a Kubernetes sub-project that deals precisely with this problem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#users-service-accounts-and-permissions"&gt;
  &lt;/a&gt;
  Users, service accounts, and permissions
&lt;/h2&gt;

&lt;p&gt;Next, the issues of managing and controlling access when managing a large number of resources at scale. Kubernetes has support for concepts like users (humans) and service accounts (machines) and a role-based access control model (RBAC). Credentials and secrets need to be managed safely and rotated. Users and service accounts need to be provisioned and removed, and applications need to be onboarded and decommissioned. This type of managementâeven for a single clusterâis not trivial. When thinking about tens, hundreds, and even thousands of ephemeral clusters that come and go, the management problem can seem overwhelming.&lt;/p&gt;

&lt;p&gt;There are several issues at stake here, which we'll touch upon briefly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#user-experience"&gt;
  &lt;/a&gt;
  User experience
&lt;/h3&gt;

&lt;p&gt;The user experience involves requesting the correct level of access on each cluster. Without proper support, it is not easy for users to know what access level they need for each cluster. Often, users will attempt to access some resource through a UI and encounter an obscure âaccess deniedâ error.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#operator-experience"&gt;
  &lt;/a&gt;
  Operator experience
&lt;/h3&gt;

&lt;p&gt;The operator experience involves managing a complicated graph of resources and users. Often, these are organized in hierarchical structures of resource groups and user groups. Operators need to be able to manage the correct permissions for each user/group as well as user membership within groups. These permissions need adjusting whenever new users join the organization, leave the organization, or change roles. All of this requires integration between developers, operators, and IT.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#blast-radius"&gt;
  &lt;/a&gt;
  Blast radius
&lt;/h3&gt;

&lt;p&gt;The blast radius of a breach is often related to the granularity of permissions management. If every developer has full admin rights, then one compromised laptop can lead to a total crisis. On the other hand, custom tailoring the permissions of each user can lead to a lot of busywork. Mistakes will leave people locked out of the resources they need to perform their jobs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h3&gt;

&lt;p&gt;Security issues are closely related. If resources are not protected correctly, then sensitive information might leak out. Attackers can take control over critical systems.&lt;/p&gt;

&lt;p&gt;Once you add the simple reality that applications and automated systems also require their own permissions to the mix, the problems compound. &lt;/p&gt;

&lt;p&gt;The bottom line is that this scale of management is impossible to achieve by clicking on buttons in some web console. The entire process must be dynamic, with auto-discovery and consistent guidelines across the enterprise.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#operational-environments"&gt;
  &lt;/a&gt;
  Operational environments
&lt;/h1&gt;

&lt;p&gt;Now let's look into one aspect of a global, large-scale system in more detail. Each workload doesn't live in a single environment. During the lifecycle of development, deployment, and maintenance, a workload will be used in different environments. For example, a common model is to have multiple deployment environments such as development, staging, and production. When dealing with multiple Kubernetes clusters, managing each of these environments becomes much more difficult.&lt;/p&gt;

&lt;p&gt;The production environment is, of course, the most critical one. But often, the staging environment must adhere to very high standards of availability, mimicking the production environment because it serves as the gatekeeper to production deployment. &lt;/p&gt;

&lt;p&gt;Earlier, we mentioned redundancy and failover. The system architecture and topology may dictate if your Kubernetes clusters are deployed as multi-zone, multi-region, or even multi-cloud to protect yourself from different failure modes. Redundancy is expensive; managing failover isnât trivial either.&lt;/p&gt;

&lt;p&gt;If your clusters run on a mix of cloud providers and private data centers, this adds yet another dimension of complexity.&lt;/p&gt;

&lt;p&gt;Finally, your developers will appreciate a local development experience where they can test their changes before deploying them even to a shared development environment.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#upgrading-kubernetes"&gt;
  &lt;/a&gt;
  Upgrading Kubernetes
&lt;/h1&gt;

&lt;p&gt;Okay. Your Kubernetes clusters are up and running. Everyone is happy. However, even now, your job isn't done yet. Kubernetes releases a new version three times a year (before, they would release new versions four times a year). It behooves you to upgrade frequently. This is especially true if you use a managed Kubernetes offering like GKE, EKS, or AKS. Your cloud provider will upgrade your Kubernetes clusters whether you like it or not.&lt;/p&gt;

&lt;p&gt;Kubernetes has a very orderly deprecation and removal process. Every resource has a group, version, kind (GVK). First, a particular version will be deprecated. This means the version is still supported, but everyone knows it's on the chopping block to be completely removed at a later time. If you upgrade to a new version of Kubernetes, and you try to create or update a removed object, this will fail. Your cluster now contains broken resources.&lt;/p&gt;

&lt;p&gt;To prevent this from happening, you must be vigilant, constantly updating all your Kubernetes resources to supported versions. A good practice is to update even deprecated resources early. You don't want to delay updates until the last minute, just before you upgrade to the Kubernetes version that no longer supports those resources.&lt;/p&gt;

&lt;p&gt;How do you go about this? First, you would read the Kubernetes release notes to learn what resources will be deprecated or removed. Then, scan all your clusters for impacted resources. After identifying those resources, work with the stakeholders to update their resources to supported versions.&lt;/p&gt;

&lt;p&gt;At scale, you will need tools to assess compatibility. I wrote two tools that I may open-source soon: One tool accepts a list of deprecated/removed resource versions and scans a list of clusters for resources that use these versions. The other tool takes a list of clusters and a target cluster and does a dry run import of all the original resources to the target cluster. &lt;/p&gt;

&lt;p&gt;For example, if you want to upgrade from Kubernetes &lt;code&gt;1.18&lt;/code&gt; to Kubernetes &lt;code&gt;1.19&lt;/code&gt;, then you'll create a &lt;code&gt;1.19&lt;/code&gt; empty cluster and run the tool with a list of all your &lt;code&gt;1.18&lt;/code&gt; clusters. The tool will attempt to create (in dry-run mode) all the resources from the &lt;code&gt;1.18&lt;/code&gt; clusters in the &lt;code&gt;1.19&lt;/code&gt; cluster. Any incompatibility will cause an error that will be reported.&lt;/p&gt;

&lt;p&gt;Once you're ready for the upgrade and all your workloads use the supported version, it's time to perform the actual upgrade itself. There are two parts to the upgrade process: upgrading the control plane and upgrading the data plane (worker nodes). The data plane version means the version of the Kubernetes components that are installed on each node (kubelet, container runtime, kube-proxy). Different nodes may have different versions, but they can't be older than two minor versions of the control plane nor newer than the control plane version.&lt;/p&gt;

&lt;p&gt;That means that when you upgrade your cluster, first you must upgrade the control plane to a version that is &lt;em&gt;at most&lt;/em&gt; two minor versions ahead of your oldest node version. For example, if your nodes are on Kubernetes &lt;code&gt;1.18&lt;/code&gt; you can upgrade your control plane to &lt;code&gt;1.19&lt;/code&gt; or &lt;code&gt;1.20&lt;/code&gt;. Then, you can follow up and upgrade your nodes to the same version.&lt;/p&gt;

&lt;p&gt;The best practice is to keep everything consistentâyour control plane and all your nodes should all be on the same minor version of Kubernetes. The only exception is during the upgrade process itself; there will temporarily be some components on the old version and some on the new version.&lt;/p&gt;

&lt;p&gt;All of this requires considerable coordination, especially if you run Kubernetes clusters on a combination of cloud providers and on-prem. Perhaps not all cloud providers support the same versions of Kubernetes. You will need to find a common ground or deviate from the best practice and run different versions of Kubernetes on different providers.&lt;/p&gt;

&lt;p&gt;Has it become clear yet that managing Kubernetes at scale is a non-trivial task? Doing this well requires a lot of supporting software, most of which is not just available off the shelf. You will need to build your own tools, evolve them, and support advanced deployment scenarios.&lt;/p&gt;

&lt;p&gt;Beyond the task of managing your Kubernetes clusters is the colossal task of deploying and scaling; and this is where Spinnaker comes in.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#spinnaker-as-a-cd-platform-for-kubernetes"&gt;
  &lt;/a&gt;
  Spinnaker as a CD Platform for Kubernetes
&lt;/h1&gt;

&lt;p&gt;While there are several powerful and popular continuous delivery solutions for Kubernetes, Spinnaker has some unique features especially for enterprises that need to deal with a large number of Kubernetes clusters.&lt;/p&gt;

&lt;p&gt;First of all, Spinnaker has been battle-tested at scale. It was developed originally by Netflix and then extended by Google. Second, Spinnaker supports multiple providers and &lt;em&gt;not just&lt;/em&gt; Kubernetes. Not being Kubernetes-specific may seem like a disadvantage, however, no company with thousands of Kubernetes clusters has &lt;em&gt;only&lt;/em&gt; those clusters. Companies that operate at this scale have been around long before Kubernetes came about (which was just six years ago). They typically have a large portfolio of systems deployed in non-Kubernetes environments. Spinnaker supports their Kubernetes environments as well as their non-Kubernetes environments.&lt;/p&gt;

&lt;p&gt;In addition, Spinnaker is technically very powerful, supporting multiple models of deployments, which is necessary for managing a large variety of services and applications.&lt;/p&gt;

&lt;p&gt;Finally, Spinnakerâwhile being an open-source projectâalso enjoys strong commercial support from companies like &lt;a href="https://www.armory.io/"&gt;Armory&lt;/a&gt;. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#simplicity-and-safety-with-armory-spinnaker"&gt;
  &lt;/a&gt;
  Simplicity and Safety with Armory Spinnaker
&lt;/h1&gt;

&lt;p&gt;While Spinnaker gets our foot in the door in regard to large-scale deployments, for enterprises this is just the beginning. In enterprises running systems of this scale, it's not just one DevOps guru running all things Spinnaker. There are entire DevOps teams (plural) all touching Spinnaker pipelines at the same time. Spinnaker alone does not afford the policy management and pipeline change management that these enterprises need. To meet this need, Armory has developed its enterprise-level distribution of Spinnaker. Armory &lt;em&gt;extends&lt;/em&gt; Spinnaker in very significant ways to make it a better Kubernetes citizen, especially at scale.&lt;/p&gt;

&lt;p&gt;First, Armory builds on top of Vanilla Spinnaker using Spinnaker's own plugins. This is crucial for sustainable integration. About a decade ago, I worked for a company that built a social browser based on &lt;a href="https://www.chromium.org/"&gt;Chromium&lt;/a&gt;. The project was very innovative and successful, but it involved deep customization of Chromium. Whenever Chromium released a new version, we had to reapply all of our customizations on top of it. Whenever a security fix was disclosed, we were vulnerable until we finished the integration, which took days (in some cases, weeks). In this regard, Armory takes the high road, using the standard mechanisms for contributing a plugin framework to open source Spinnaker. Put simply, &lt;a href="https://www.armory.io/learn/how-armory-builds-on-oss-spinnaker/"&gt;Armory builds on top of open-source Spinnaker&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Second, Armory is also dedicated to Kubernetes, focused on making Spinnaker a better Kubernetes citizen. This starts with the &lt;a href="https://www.armory.io/armory-enterprise-spinnaker/armory-agent-for-kubernetes/"&gt;Armory Agent for Kubernetes&lt;/a&gt;. The agent allows distributed deployments to thousands of clusters and decentralized account management. In addition, Armory provides a &lt;a href="https://www.armory.io/armory-enterprise-spinnaker/policy-engine/"&gt;policy engine&lt;/a&gt; that allows the setting of organizational policies, increasing safety and compliance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wmLqpzrZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rbx8bwvrf9gvnc5sqahw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wmLqpzrZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rbx8bwvrf9gvnc5sqahw.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If that's enough, Armory throws in some other goodies like terraform integration and secrets management. But, arguably the most important capability for managing Kubernetes at scale is the &lt;a href="https://www.armory.io/armory-enterprise-spinnaker/pipelines-as-code-gitops/"&gt;Armory's "Pipelines as Code" feature&lt;/a&gt;. GitOps for Spinnaker pipelines is a crucial feature. Keeping your Spinnaker pipeline as code in source control and using your standard review and change management makes a huge difference. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Kubernetes solves many problems for modern container-based distributed applications. When you migrate enterprise-scale systems to Kubernetes, you might end up managing a large number of Kubernetes clusters. To do this well, you'll need a solid solution for deploying your workloads to all these clusters as well as managing the clusters themselves. Spinnaker and Armory can serve you well. If you manage a large number of Kubernetes clusters or plan to migrate large existing systems to Kubernetes, you'll likely find Spinnaker and Armory as your go-to continuous deployment solution.&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>devops</category>
      <category>architecture</category>
    </item>
    <item>
      <title>Building API-first eCommerce dashboards with Vue.js and Deploy Now</title>
      <author>Robert Schleinhege</author>
      <pubDate>Thu, 21 Oct 2021 12:55:52 +0000</pubDate>
      <link>https://dev.to/roberts/building-api-first-ecommerce-dashboards-with-vuejs-and-deploy-now-10me</link>
      <guid>https://dev.to/roberts/building-api-first-ecommerce-dashboards-with-vuejs-and-deploy-now-10me</guid>
      <description>&lt;p&gt;fdf# Building API-first eCommerce dashboards with Vue.js and Deploy Now&lt;/p&gt;

&lt;p&gt;A modern eCommerce system should be tailored to both the needs of the visitor and the needs of the person maintaining the shop. A good UX for visitors alone isn't enough to make a shop project successful if managing shipping processes or customer requests is inconvenient for shop owners. &lt;a href="https://www.ionos.com/agency-partner"&gt;IONOS Agency Partner&lt;/a&gt; Fruchtec specializes in building state-of-the-art eCommerce experiences. &lt;a href="https://www.fruchtec.de/"&gt;Fruchtec&lt;/a&gt; combines a set of specialized services for a shop experience that feels smooth for their clients and their clients' clients. All these services talk to Vue.js client dashboards via API. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#defining-a-good-shopping-experience"&gt;
  &lt;/a&gt;
  Defining a good shopping experience
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;"Buying an item or service online has to feel like visiting a good restaurant. You enter and want to be greeted nicely. The offer is presented to you and you are guided through the location. You see and understand the products, but nothing is forced upon you. No artificial scarcity, no time pressure. And of course the service doesn't end with the order. You have a good feeling that the deliveries will arrive on time. You know who to contact for questions and if you don't like a product that's no problem." â Jonas, Co-founder of Fruchtec&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Fruchtec view themselves as the construction company and the restaurant fitter, while their clients have to maintain and run the location. The objective is to make a buyer feel comfortable throughout the entire customer journey. This means that all processes that surround the buyer's customer journey, especially those involving action from the shop's staff, need to be well organized and supported by the right tools and technologies. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#merging-the-digital-and-physical-world"&gt;
  &lt;/a&gt;
  Merging the digital and physical world
&lt;/h2&gt;

&lt;p&gt;For a good shopping experience, a holistic toolchain is required that accompanies both buyer-side and staff-side processes. These processes can be entirely digital â or involve physical activities. Most shop owners have to manage a warehouse. They need to track and refill their inventory, send out packages and manage returns. Many clients combine online and local stores. Customers can view items physically before buying or reserving them online and picking them up in store. Fruchtec's goal is not to replace human activities with tech. Instead they want to minimize human errors that cause bad customer experiences.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#managing-shop-processes-with-apifirst-dashboards"&gt;
  &lt;/a&gt;
  Managing shop processes with API-first dashboards
&lt;/h2&gt;

&lt;p&gt;Fruchtec's key approach is to outsource different parts of the eCommerce experience to specialized services. All these services are connected to dashboards that are designed around different use cases for the shop's staff. By doing this, Fruchtec follows an API-first approach. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"The API-first approach refers to a strategy in software development where an application programming interface (API) is created before any code is written. An API, of course, is a type of software that lets an application obtain data from another one. It allows various applications to communicate with one another." â Techslang.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;API-first allows a complete decoupling of frontend and backend. Backend applications can be reused and connected to different client dashboards. The requirements of a dashboard in the warehouse that eases the shipping process differs from a dashboard for a stakeholder that manages marketing campaigns or customer requests. A decoupled approach makes it possible to assemble the right information for the right use case. Another big advantage is that sources of error are separated and easier to identify. Even if a single backend component fails, the frontend can still run and can display information about the problem. Different technologies can be used for different services and single services can be easily replaced as long as the API doesn't change.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fruchtecs-recommendations-for-a-powerful-ecommerce-setup"&gt;
  &lt;/a&gt;
  Fruchtec's recommendations for a powerful eCommerce setup
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2ZH3vLdv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owc2yz04dtc8xdatfo30.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2ZH3vLdv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owc2yz04dtc8xdatfo30.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vuejs-for-customer-dashboards"&gt;
  &lt;/a&gt;
  Vue.js for customer dashboards
&lt;/h3&gt;

&lt;p&gt;Fruchtec recommends Vue.js for building dashboards frontend. &lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt; is an open-source JavaScript framework for building single page applications and user interfaces. Fruchtec likes the fact that many of the positive aspects that can be found in React and Angular individually are merged into a single framework. They enjoy working with Vue-based UI libraries like &lt;a href="https://vuetifyjs.com/en/"&gt;Vuetify&lt;/a&gt; and &lt;a href="https://bootstrap-vue.org/"&gt;BootstrapVue&lt;/a&gt;. Thanks to its adoptability and scalability, Vue is equally suitable for beginners and large enterprises. The framework makes it easy to follow clean code rules and comes with a large community that can help with learning best practices. Fruchtec develops and deploys their Vue frontends with Deploy Now. The staging functionality allows them to work on new dashboard components without affecting their clients' current business operations. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#shopify-for-the-online-shop-system"&gt;
  &lt;/a&gt;
  Shopify for the online shop system
&lt;/h3&gt;

&lt;p&gt;The shop logic and frontends are built with &lt;a href="https://www.shopify.com/"&gt;Shopify&lt;/a&gt;. Shopify has a broad offering ranging from affordable packages for small businesses to large, cloud-based shop systems with Shopify Plus. A large app store allows users to easily connect marketing, accounting, buying and delivery processes to their shops. Fruchtec especially enjoys working with Liquid, an open-source templating language that can be used for building shop logics. The biggest advantage of Shopify is their sophisticated &lt;a href="https://shopify.dev/api"&gt;API&lt;/a&gt;, which is used by Fruchtec to talk to various dashboards and services. An Admin API provides access to product, order and customer data whereas a separate Storefront API can be used to bring shop functionalities to any touchpoint. As Shopify also offers GitHub integration, combining Deploy Now and Shopify allows Fruchtec to manage a majority of their code in the same place. Developers can push changes to shop themes and can instantly preview changes including the shop's live data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sendcloud-for-the-shipping-process"&gt;
  &lt;/a&gt;
  Sendcloud for the shipping process
&lt;/h3&gt;

&lt;p&gt;Shipping orders is often the most manual eCommerce process. Fruchtec uses &lt;a href="https://www.sendcloud.com/"&gt;Sendcloud&lt;/a&gt; to simplify this process. Sendcloud specializes in label creation, delivery tracking, picking and packing, as well as managing returns. The platform allows easy integration with Shopify and any dashboard via API.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#zendesk-for-customer-service"&gt;
  &lt;/a&gt;
  Zendesk for customer service
&lt;/h3&gt;

&lt;p&gt;Customer service touchpoints have a large impact on the satisfaction of shop visitors, but also play a large role in the satisfaction of Fruchtec's clients. With the help of &lt;a href="https://www.zendesk.com/"&gt;Zendesk&lt;/a&gt;, Fruchtec installs a ticket queue in which product-specific questions are forwarded to the shop owners, whereas technical issues are directly forwarded to Fruchtec. If a visitor has a technical issue with creating an account for example, the issue is instantly forwarded to a developer. This way, issues can be fixed immediately â and shop owners can focus on their business. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#placetel-for-managing-phone-calls"&gt;
  &lt;/a&gt;
  Placetel for managing phone calls
&lt;/h3&gt;

&lt;p&gt;Even though a lot of communication happens via digital channels, many shoppers like to speak to someone in person. Fruchtec recommends &lt;a href="https://www.placetel.com/gb"&gt;Placetel&lt;/a&gt; for managing phone communication. Placetel describes itself as a cloud phone system, which means that the solution is entirely software based, hosted in the cloud and operates calls via Voice over IP. Placetel easily integrates with any software where client information is managed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tips-for-getting-started-with-vuejs-and-apifirst-ecommerce-systems"&gt;
  &lt;/a&gt;
  Tips for getting started with Vue.js and API-first eCommerce systems
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-learn-the-basic-concepts-of-vue"&gt;
  &lt;/a&gt;
  1. Learn the basic concepts of Vue
&lt;/h3&gt;

&lt;p&gt;Fruchtec highly recommends &lt;a href="https://www.vuemastery.com/"&gt;Vue Mastery&lt;/a&gt; for learning the fundamentals of Vue. Vue Mastery offers free and paid courses as well as team discounts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-learn-how-to-use-apis"&gt;
  &lt;/a&gt;
  2. Learn how to use APIs
&lt;/h3&gt;

&lt;p&gt;The next step is to understand the concept and handling of APIs in general. How do I open connections? What are asynchronous calls? A fun way to do this is playing around with &lt;a href="https://api.chucknorris.io/"&gt;chucknorris.io&lt;/a&gt;, a free API that provides facts about Chuck Norris.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-experiment-with-the-shopify-api"&gt;
  &lt;/a&gt;
  3. Experiment with the Shopify API
&lt;/h3&gt;

&lt;p&gt;Once the API concept is understood, it makes sense to work with Shopify's specific API. All information needed to get started can be found in the &lt;a href="https://shopify.dev/api"&gt;documentation&lt;/a&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-host-a-frontend-on-deploy-now-and-start-with-the-first-integrations"&gt;
  &lt;/a&gt;
  4. Host a frontend on Deploy Now and start with the first integrations
&lt;/h3&gt;

&lt;p&gt;Deploy your Vue frontend instantly from your GitHub account to IONOS' in-house engineered infrastructure. Push new code to your repository and your website code is updated instantly. A step-by-step guide to setting up your deployment can be found &lt;a href="https://docs.ionos.space/docs/"&gt;here&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>ionos</category>
      <category>javascript</category>
      <category>vue</category>
      <category>api</category>
    </item>
    <item>
      <title>Deploy Elastic Beanstalk Application with Terraform</title>
      <author>Emre Oztoprak</author>
      <pubDate>Thu, 21 Oct 2021 12:54:18 +0000</pubDate>
      <link>https://dev.to/aws-builders/deploy-elastic-beanstalk-application-with-terraform-2f9l</link>
      <guid>https://dev.to/aws-builders/deploy-elastic-beanstalk-application-with-terraform-2f9l</guid>
      <description>&lt;p&gt;AWS Elastic Beanstalk is a managed service for deploying and scaling web applications and services. It supports languages such as Java,Â .NET, PHP, Node.js, Python, Ruby, Go, and also Docker. You can deploy these applications on Apache, Nginx, Passenger, and IIS.&lt;/p&gt;

&lt;p&gt;But Elastic Beanstalk has a lot of configurations. With Terraform we can automate this process. Later we can use the same Terraform script just changing variables.&lt;/p&gt;

&lt;p&gt;With this Terraform configuration, we will create PHP 8.0 Elastic Beanstalk WebServer Environment on Amazon Linux 2 and Nginx. Also Application Load Balancer and SSL certificate for our domain. We will validate this certificate, create A record for our domain and it will be pointed to Elastic Beanstalk Environment. In the end, it will create Cloudwatch alarms for Elastic Beanstalk Environment Health, LoadBalancer 5xx requests, and network out the traffic of our instances.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lvD880sn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/seo0mdc923n38a06n6ue.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lvD880sn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/seo0mdc923n38a06n6ue.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Structure of our Terraform Configurations&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html"&gt;Create EC2 Key PairÂ &lt;/a&gt;&lt;br&gt;
Creating key pair in the EC2 console and using the name of that key pair in Terraform is a secure way than passing the public key pair file in Terraform.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/sns/latest/dg/sns-create-topic.html"&gt;SNS Topic&lt;/a&gt;&lt;br&gt;
When Cloudwatch alarms are triggered you will get notifications via SNS. You can add subscriptions like E-Mail, SMS, or HTTP-HTTPS endpoint like Opsgenie. You can use the same SNS Topic later in different alarms.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/CreatingHostedZone.html"&gt;Route53 Public Hosted Zone&lt;/a&gt;&lt;br&gt;
SSL Certification and DNS Records for your domain&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deployment&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Clone the repository.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git@github.com:emreoztoprak/terraform-aws-elasticbeanstalk.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Change the variables in the terraform.tfvars file&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I set up one subnet for EC2 Instance and two subnets for ALB. You can change this any number you want.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gWLoM6_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1me3in6ooa1onxcbxymc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gWLoM6_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1me3in6ooa1onxcbxymc.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When everything is ready you can deploy with these 4 commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;terraform init
terraform validate
terraform plan
terraform apply

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;FinallyÂ :)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WRHpEejV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yg7visoqn1xp3w3c2f6k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WRHpEejV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yg7visoqn1xp3w3c2f6k.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/emreoztoprak/terraform-aws-elasticbeanstalk"&gt;Github repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope it was useful. Thank you for reading this article.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Building a Secure CI/CD Integration with Azure</title>
      <author>Adam Connelly</author>
      <pubDate>Thu, 21 Oct 2021 12:48:19 +0000</pubDate>
      <link>https://dev.to/spacelift/building-a-secure-cicd-integration-with-azure-2km6</link>
      <guid>https://dev.to/spacelift/building-a-secure-cicd-integration-with-azure-2km6</guid>
      <description>&lt;p&gt;Securing your infrastructure is critical for the success of your business. Failure to take security seriously can result in major damage including fines, loss of customer confidence, or the inability to carry out crucial business functions. The growth of Infrastructure as Code tools and CI/CD systems has allowed developers to integrate infrastructure management into our typical development workflows, improving quality and delivery speed.&lt;/p&gt;

&lt;p&gt;At the same time, in order to manage your infrastructure, the CI/CD system used needs access to sensitive credentials. At Spacelift, we aim to give our users the maximum balance between flexibility and security. Because of this, we provide multiple options for connecting your Azure subscriptions to Azure, including setting static credentials, using our fully managed integration, as well as utilizing private workers to avoid sharing credentials at all.&lt;/p&gt;

&lt;p&gt;In this post I wanted to give you an overview of how the &lt;a href="https://docs.spacelift.io/integrations/cloud-providers/azure#spacelift-managed-integration"&gt;Spacelift Azure integration&lt;/a&gt; works from a technical perspective, as well as discuss some of the issues we encountered and solved while designing and developing it. As a CI/CD system, we do quite a lot of work to integrate with other systems that our users use. Occasionally, like in the case of Azure, things get non-trivial. If youâre keen to learn more, read on, no Azure knowledge required! &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#concept"&gt;
  &lt;/a&gt;
  Concept
&lt;/h1&gt;

&lt;p&gt;Letâs start with a quick description of how our &lt;a href="https://docs.spacelift.io/integrations/cloud-providers"&gt;cloud integrations&lt;/a&gt; work. The overall workflow is very simple, and looks something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TVqNvR9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tboub81f1hfbayks4b37.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TVqNvR9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tboub81f1hfbayks4b37.png" alt="cloud integration workflow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Breaking the requirements down, we need to be able to get management credentials for a userâs cloud provider account and pass them to Terraform via environment variables, at which point Terraform can run an apply with access to the customerâs infrastructure.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; For simplicity this post uses Terraform in all its examples, but this overall approach also applies to the other tools that we support, for example, &lt;a href="https://docs.spacelift.io/vendors/pulumi"&gt;Pulumi&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The concept behind the Azure integration was to provide a similar experience to our &lt;a href="https://docs.spacelift.io/integrations/cloud-providers/aws"&gt;AWS&lt;/a&gt; and &lt;a href="https://docs.spacelift.io/integrations/cloud-providers/gcp"&gt;GCP&lt;/a&gt; integrations, but for our Azure customers. The following diagram shows a simplified outline of how the AWS integration works:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K_pow643--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9inav90w52qrrkvleb3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K_pow643--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9inav90w52qrrkvleb3.png" alt="AWS integration"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS provides the ability to temporarily &lt;a href="https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html"&gt;assume a role&lt;/a&gt; in another AWS account. This allows our users to create a role in IAM with any permissions they might want to give Spacelift. They can then set up a trust relationship for this role with our AWS account, which will allow our AWS account to assume the role. Role assumption provides us with raw AWS credentials and works seamlessly with any AWS tooling, including the Terraform AWS provider. It additionally allows us to specify the validity duration, so each run can get its own credentials which are constrained to a short period of time. &lt;/p&gt;

&lt;p&gt;Although Azure doesnât have the same capability, it provides another approach called Azure Active Directory Applications, that allow service accounts to be created. Azure AD Applications are the resources that allow Spacelift to seamlessly manage access to a customerâs Azure resources.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#azure-terminology"&gt;
  &lt;/a&gt;
  Azure Terminology
&lt;/h1&gt;

&lt;p&gt;Itâs worth explaining a few pieces of terminology that are used throughout the rest of this post:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://azure.microsoft.com/en-gb/services/active-directory/"&gt;Azure Active Directory&lt;/a&gt; (Azure AD) â the identity and access management component of Azure.&lt;/li&gt;
&lt;li&gt;Directory / tenant â an individual instance of Azure AD owned by a company or individual.&lt;/li&gt;
&lt;li&gt;Subscription â the container for any Azure compute resources. This roughly corresponds to an AWS Account. A subscription is linked to a single Azure AD tenant, but multiple subscriptions can be linked to the same tenant.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-how-applications-are-added"&gt;Azure AD Application&lt;/a&gt; â a way of creating external integrations with Azure AD.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/what-is-application-management"&gt;Enterprise Application&lt;/a&gt; â an instance of an Azure AD application that has been installed in another userâs Azure AD tenant.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals#service-principal-object"&gt;Service Principal&lt;/a&gt; â a service account that is automatically created when an Azure AD application is installed. This can be used to grant permissions that allow the application to manage Azure resources.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/graph/"&gt;Microsoft Graph API&lt;/a&gt; â the main API for managing Azure AD resources.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#goals"&gt;
  &lt;/a&gt;
  Goals
&lt;/h1&gt;

&lt;p&gt;We set a number of goals for the integration:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Making it really easy for customers to manage Azure infrastructure using Spacelift.&lt;/li&gt;
&lt;li&gt;Automatic handling of credential rotation so that customers donât have to deal with this themselves, or use very long-lived credentials to avoid it entirely.&lt;/li&gt;
&lt;li&gt;Providing a mechanism for customers to configure granular permissions in Azure for different stacks, or different types of runs (e.g. PRs vs Tracked Runs).&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#initial-approach"&gt;
  &lt;/a&gt;
  Initial Approach
&lt;/h1&gt;

&lt;p&gt;Initially, our idea was to create a single &lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/single-and-multi-tenant-apps"&gt;multi-tenant AD Application:&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4_GUrj-g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kabn3k4b3jcixfomqdbu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4_GUrj-g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kabn3k4b3jcixfomqdbu.png" alt="multi-tenant AD Application"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The idea was that we would generate an Access Token that could only be used for a specific customer directory, and pass that token to the Terraform Azure RM provider during runs. In the end, we had to revise our approach because of the following issues:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs"&gt;Terraform Azure RM provider&lt;/a&gt; doesnât support authentication via an Access Token. Instead, you have to supply the underlying credentials for the account â either a Client Secret or a Client Certificate. In our case, that would have meant passing the credentials for our own multi-tenant application to Spacelift runs. Since that application would have been installed in the Azure AD tenants of any Spacelift user who had setup the integration, this could have allowed users to access other userâs Azure accounts.&lt;/li&gt;
&lt;li&gt;The integration would have been less flexible. Using a single multi-tenant AD application would have prevented customers from creating more than one Azure integration per Active Directory tenant. The ability to create multiple integrations per tenant is useful because it allows different Azure permissions to be applied to each integration.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#revised-approach"&gt;
  &lt;/a&gt;
  Revised Approach
&lt;/h1&gt;

&lt;p&gt;After days of brainstorming on an alternative approach, we came up with a new architecture. We could programmatically generate a new Azure AD Application on our side for each Azure Integration created by Spacelift users. This way, having access to the credentials for an Azure AD Application would only lead to having access to a single Azure AD Tenant on a userâs side. This approach allows Client Secrets to be passed to Spacelift runs without fear of inter-user permission leakage. The final design ended up as shown in the following diagram:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5IunSN-N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lfg1y9u3v8k2nvif70j3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5IunSN-N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lfg1y9u3v8k2nvif70j3.png" alt="new Azure architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Applications are installed into a customerâs Active Directory tenant via a process called &lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/grant-admin-consent"&gt;Admin Consent&lt;/a&gt;. After admin consent has been completed, a Service Principal is created in the userâs Azure Active Directory to which the user can grant permissions. This allows users to decide the exact level of access that Spacelift has to their resources.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#credential-generation"&gt;
  &lt;/a&gt;
  Credential Generation
&lt;/h1&gt;

&lt;p&gt;The next issue we faced was related to generating credentials for a run. As described in the &lt;a href="https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/guides/service_principal_client_secret"&gt;provider documentation&lt;/a&gt;, the Azure RM provider can be configured by setting certain environment variables. Initially, we took a basic approach of attempting to generate credentials during a Spacelift run. This is what we do for our AWS and GCP integrations, so we werenât expecting major issues. The steps taken looked something like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Run triggered.&lt;/li&gt;
&lt;li&gt;Generate a new Client Secret with a short expiry time.&lt;/li&gt;
&lt;li&gt;Populate the required environment variables.&lt;/li&gt;
&lt;li&gt;Execute terraform.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This seemed to workâ¦ but only some of the time.&lt;/p&gt;

&lt;p&gt;While testing the integration, strange things were happening. As an example, the &lt;em&gt;planning&lt;/em&gt; phase for a run would succeed, but the &lt;em&gt;apply&lt;/em&gt; would fail with a permissions error from Azure. After investigating, we came to the conclusion that this was being caused by &lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/active-directory-architecture"&gt;eventual consistency&lt;/a&gt; in Azure AD.&lt;/p&gt;

&lt;p&gt;You can visualize the problem using the following diagram (note: this is just an illustration, and is not meant to be completely accurate):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wvHJRuzT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sam55nuu8oli0amofzcy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wvHJRuzT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sam55nuu8oli0amofzcy.png" alt="problem with eventual consistency in Azure AD"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the example above, step 2 may succeed or fail depending on whether the secret has managed to replicate to the Azure AD server that its request is routed to. Initially, we attempted to test whether or not the secret was usable by making an API request, and retrying until the request succeeded using an exponential backoff. What we soon realized was that even then, subsequent requests could be routed to a different Azure AD instance, which still hasnât received the new Client Secret, and potentially fail.&lt;/p&gt;

&lt;p&gt;Even if it was possible to verify when the secret was fully replicated, waiting for replication to complete would have added a minimum of 30 seconds, and potentially another &lt;strong&gt;several minutes&lt;/strong&gt;. Because of this, we decided to move credential generation and rotation out of the run flow, and into a scheduled task:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wP87yTYo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fd3rtlrpcdkboiy8f0f9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wP87yTYo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fd3rtlrpcdkboiy8f0f9.png" alt="moving credential generation and rotation out of the run flow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The scheduled task runs once per hour, generates secrets with an expiry of 24 hours, and attempts to generate a new secret for an integration roughly 2 hours before expiry of the old secret. This allows credential rotation while always keeping a valid secret.&lt;/p&gt;

&lt;p&gt;When a new secret is generated, we use AWSâs &lt;a href="https://aws.amazon.com/kms/"&gt;Key Management Service&lt;/a&gt; to encrypt it so that it is never stored in plaintext.&lt;/p&gt;

&lt;p&gt;When a run is triggered, we try to find the secret for the integration with the most amount of time until expiry. We also avoid using new secrets until roughly 10 minutes after generation to avoid the eventual consistency issues caused by Azure ADâs architecture.&lt;/p&gt;

&lt;p&gt;You can visualize the secret lifecycle using the following diagram:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZN9EqLTu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p6yy99vn078fcq90dbb8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZN9EqLTu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p6yy99vn078fcq90dbb8.png" alt="the secret lifecycle diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In addition, when creating a new integration we immediately generate a secret. This helps to ensure that the secret will have successfully propagated within Azure AD by the time a run is triggered.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#credential-rotation-for-the-integration"&gt;
  &lt;/a&gt;
  Credential Rotation for the Integration
&lt;/h1&gt;

&lt;p&gt;The last major issue we faced was figuring out how to implement credential rotation for our own management account. The integration itself uses an Azure AD Service Principal to manage customer AD Applications using the Microsoft Graph API. Because we run most of our own infrastructure in AWS, we didnât have the option of using a &lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview"&gt;Managed Service Identity&lt;/a&gt;, meaning that we needed to handle credential rotation ourselves. In addition, our goal was to automate the process to avoid developers having to periodically perform a manual task, and to reduce the risk of forgetting to renew the credentials before expiry.&lt;/p&gt;

&lt;p&gt;In the end, we decided to take the relatively simple approach of storing the certificate in Secrets Manager and writing a scheduled task to periodically check whether the certificate was ready to expire, similar to the approach we took for Client Secrets for the integration. If so the scheduled task generates a new certificate and uploads it to both Secrets Manager and Azure AD:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5wfUn59S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6n4hc3fyazlpsormpsq7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5wfUn59S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6n4hc3fyazlpsormpsq7.png" alt="Credential Rotation for the Integration&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The parts of the system that need to use the client certificate for authentication periodically check for an updated certificate. As with the client secret rotation, we avoid using the new certificate for approximately 10 minutes to allow time for the certificate to propagate throughout Azure AD.&lt;/p&gt;

&lt;p&gt;Similar to what happens with the integration client secrets, Secrets Manager uses AWS Key Management Service to encrypt the certificate at rest.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h1&gt;

&lt;p&gt;Hopefully, this post has given you a glimpse into the internals of Spaceliftâs Azure integration, along with some of the problems we had to solve while implementing it. As you probably noticed, weâre willing to go to great lengths to ensure a secure and pleasant experience for our users. To find out more, take a look at our Azure integration documentation available at &lt;a href="https://docs.spacelift.io/integrations/cloud-providers/azure"&gt;Spacelift Documentation&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>azure</category>
      <category>cicd</category>
      <category>devops</category>
      <category>terraform</category>
    </item>
    <item>
      <title>Day 13 of 100 Days of Code &amp; Scrum: Product Backlog and Failing to Use Twitter</title>
      <author>Rammina</author>
      <pubDate>Thu, 21 Oct 2021 12:25:54 +0000</pubDate>
      <link>https://dev.to/rammina/day-13-of-100-days-of-code-scrum-product-backlog-and-failing-to-use-twitter-oe</link>
      <guid>https://dev.to/rammina/day-13-of-100-days-of-code-scrum-product-backlog-and-failing-to-use-twitter-oe</guid>
      <description>&lt;p&gt;&lt;small&gt;&lt;cite&gt;Image by &lt;a href="http://jfbrett.github.io/"&gt;Jeremy Brett&lt;/a&gt; from &lt;a href="https://medium.com/@jfbrett/gobear-scotch-tape-and-sticky-notes-sprinting-singapore-style-b1f0c114a0fb"&gt;Medium&lt;/a&gt;&lt;/cite&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Hello there, everyone!&lt;/p&gt;

&lt;p&gt;I made a lot of progress with Scrum today, and I think I'm probably mostly familiar with all of the concepts I need to learn for the Professional Scrum Master I (PSM I) certification. Not much GraphQL though.&lt;/p&gt;

&lt;p&gt;Oh, and it was also my first time &lt;a href="https://twitter.com/RamminaR"&gt;using Twitter&lt;/a&gt;, and I &lt;br&gt;
had no idea what to do. ð I haven't really used social media that much in my life. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V0FI2-uH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zdsve1a0tr5ku9m74ecj.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V0FI2-uH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zdsve1a0tr5ku9m74ecj.gif" alt="Business Cat"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I finished the draft of the Scrum Master subsection and the Scrum Artifacts of my Scrum Guide for beginners, did some practice questions for Scrum.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;added a &lt;code&gt;Product Backlog&lt;/code&gt; section for my Scrum Guide.&lt;/li&gt;
&lt;li&gt;added a &lt;code&gt;Sprint Backlog&lt;/code&gt; section for my Scrum Guide.&lt;/li&gt;
&lt;li&gt;did a lot of practice quiz questions about Scrum (spent like a few hours on them).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#graphql"&gt;
  &lt;/a&gt;
  GraphQL
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;continued learning about GraphQL server-side.&lt;/li&gt;
&lt;li&gt;read more about &lt;code&gt;resolver functions&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;learned more about the &lt;code&gt;info&lt;/code&gt; argument in GraphQL resolvers.&lt;/li&gt;
&lt;li&gt;review concepts I've learned last week.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I wish everyone a great Thursday! Thank you for reading!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D4oIFvZG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1sqi2pecw4fq6dhghdkr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D4oIFvZG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1sqi2pecw4fq6dhghdkr.jpg" alt="Good Luck"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.prisma.io/blog/graphql-server-basics-demystifying-the-info-argument-in-graphql-resolvers-6f26249f613a"&gt;GraphQL Basics: Demystifying the &lt;code&gt;info&lt;/code&gt; Argument in GraphQL Resolvers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/chingu/a-short-introduction-to-the-scrum-methodology-7a23431b9f17"&gt;A Short Introduction to the Scrum Framework by Jim Medlock&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Building a Map Application with Amazon Location Service, MapLibre GL JS, AWS Amplify, and Vue.js</title>
      <author>Yasunori Kirimoto</author>
      <pubDate>Thu, 21 Oct 2021 12:24:51 +0000</pubDate>
      <link>https://dev.to/aws-builders/building-a-map-application-with-amazon-location-service-maplibre-gl-js-aws-amplify-and-vuejs-2m48</link>
      <guid>https://dev.to/aws-builders/building-a-map-application-with-amazon-location-service-maplibre-gl-js-aws-amplify-and-vuejs-2m48</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Woq90Vz6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Woq90Vz6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_12.png" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#i-built-a-map-application-using-amazon-location-service-maplibre-gl-js-aws-amplify-and-vuejs-tada"&gt;
  &lt;/a&gt;
  I built a map application using Amazon Location Service, MapLibre GL JS, AWS Amplify, and Vue.js ð
&lt;/h3&gt;

&lt;p&gt;Amazon Location Service is a service for building location-based applications within AWS. At present, five types of functions are available: map display function, address search function, route search function, geofence function, and tracking function. This time, I used the map display function to build a map application!&lt;/p&gt;



&lt;p&gt;Advance Preparation&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Setting up AWS Amplify and Vue.js to the login feature&lt;/li&gt;
&lt;/ul&gt;



&lt;h2&gt;
  &lt;a href="#configure-amazon-location-maps"&gt;
  &lt;/a&gt;
  Configure Amazon Location Maps
&lt;/h2&gt;

&lt;p&gt;First, we will configure Amazon Location Maps in the AWS console.&lt;/p&gt;



&lt;p&gt;Click on "Maps".&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--67cwgCQN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--67cwgCQN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_01.png" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on "Create map".&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jy-U30VY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jy-U30VY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_02.png" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enter a map name and select a map. This time, select "sample."&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yUqNgmm_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_03.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yUqNgmm_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_03.png" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on the map that has been created.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DssqvnSg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_04.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DssqvnSg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_04.png" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copy the "Name" and "ARN" shown here to use them in future settings.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PrPSKiRU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PrPSKiRU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_05.png" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will complete the setup of Amazon Location Maps ð &lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#frontend"&gt;
  &lt;/a&gt;
  Frontend
&lt;/h2&gt;

&lt;p&gt;Next, let's build the actual map application.  &lt;/p&gt;

&lt;p&gt;Once Amplify, and Vue.js are configured, it's just a matter of adding a new "MapPane.vue" and changing some of the code.&lt;/p&gt;



&lt;p&gt;execution environment&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;node v16.3.0
&lt;/li&gt;
&lt;li&gt;npm v7.15.1
&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Install the MapLibre GL JS package in advance.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;maplibre-gl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;Overall composition&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FGHvs-v7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_06.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FGHvs-v7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_06.png" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#packagejson"&gt;
  &lt;/a&gt;
  package.json
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"amazon-location-app"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"0.1.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"private"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"serve"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vue-cli-service serve"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vue-cli-service build"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"lint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vue-cli-service lint"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@aws-amplify/ui-vue"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.0.12"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"aws-amplify"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.1.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"core-js"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^3.6.5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"maplibre-gl"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.14.1-rc.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"vue"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.6.11"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"vue-router"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^3.2.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"vuetify"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.4.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"vuex"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^3.4.0"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@vue/cli-plugin-babel"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"~4.5.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@vue/cli-plugin-eslint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"~4.5.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@vue/cli-plugin-router"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"~4.5.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@vue/cli-plugin-vuex"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"~4.5.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@vue/cli-service"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"~4.5.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"babel-eslint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^10.1.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"eslint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^6.7.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"eslint-plugin-vue"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^6.2.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"sass"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"~1.32.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"sass-loader"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^10.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"vue-cli-plugin-vuetify"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"~2.4.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"vue-template-compiler"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.6.11"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"vuetify-loader"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.7.0"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"eslintConfig"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"root"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"env"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"node"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"extends"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"plugin:vue/essential"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"eslint:recommended"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"parserOptions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"parser"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"babel-eslint"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"rules"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"browserslist"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"&amp;gt; 1%"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"last 2 versions"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"not dead"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;/src&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#mainjs"&gt;
  &lt;/a&gt;
  main.js
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./router&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./store&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;vuetify&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./plugins/vuetify&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;maplibre-gl/dist/maplibre-gl.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-amplify/ui-vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Amplify&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-amplify&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;awsconfig&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./aws-exports&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="nx"&gt;Amplify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;awsconfig&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productionTip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;

&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;vuetify&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;render&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;$mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;Load MapLibre GL JS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;maplibre-gl/dist/maplibre-gl.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;/src/views&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#homevue"&gt;
  &lt;/a&gt;
  Home.vue
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"home"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;v-container&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;v-row&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;v-col&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Amazon Location Service&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/v-col&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/v-row&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;v-row&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;v-col&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;MapPane&amp;gt;&amp;lt;/MapPane&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/v-col&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/v-row&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;v-row&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;v-col&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;amplify-sign-out&amp;gt;&amp;lt;/amplify-sign-out&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/v-col&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/v-row&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/v-container&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;MapPane&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@/components/MapPane.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;home&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;MapPane&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nc"&gt;.home&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;padding-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;Set the map component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;v-row&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;v-col&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;MapPane&amp;gt;&amp;lt;/MapPane&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/v-col&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/v-row&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;Loads the map component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;MapPane&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@/components/MapPane.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;home&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;MapPane&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;







&lt;p&gt;/src/components&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#mappanevue"&gt;
  &lt;/a&gt;
  MapPane.vue
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;'mapPane'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;'map'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;maplibregl&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;maplibre-gl&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Signer&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-amplify&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;awsconfig&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../aws-exports&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MapPane&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;mounted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credentials&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentCredentials&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mapCreate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;mapCreate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;maplibregl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                    &lt;span class="na"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;map&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sample&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;139.7648&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;35.6794&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                    &lt;span class="na"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;bearing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;64.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;pitch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;transformRequest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transformRequest&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;});&lt;/span&gt;

                &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addControl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;maplibregl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NavigationControl&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="na"&gt;transformRequest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;resourceType&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resourceType&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Style&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;://&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://maps.geo.&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;awsconfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;aws_project_region&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.amazonaws.com/maps/v0/maps/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/style-descriptor`&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;amazonaws.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Signer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;signUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="na"&gt;access_key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;accessKeyId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="na"&gt;secret_key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;secretAccessKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="na"&gt;session_token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sessionToken&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="p"&gt;}),&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt; &lt;span class="na"&gt;scoped&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nf"&gt;#map&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;800px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;Load MapLibre GL JS and Amplify.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;maplibregl&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;maplibre-gl&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Signer&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-amplify&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;awsconfig&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../aws-exports&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;Obtain authentication information.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credentials&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentCredentials&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;Specify the "Name" of the map created in style.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;maplibregl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;map&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sample&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;139.7648&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;35.6794&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;bearing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;64.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;pitch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;transformRequest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transformRequest&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;Configure the settings to load Amazon Location Maps.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;transformRequest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;resourceType&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resourceType&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Style&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;://&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://maps.geo.&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;awsconfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;aws_project_region&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.amazonaws.com/maps/v0/maps/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/style-descriptor`&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;amazonaws.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Signer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;signUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;access_key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;accessKeyId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;secret_key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;secretAccessKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;session_token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sessionToken&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;}),&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#configure-amplify-roles"&gt;
  &lt;/a&gt;
  Configure Amplify Roles
&lt;/h2&gt;

&lt;p&gt;The last step is to add the Amazon Location Maps policy to the Amplify role.&lt;/p&gt;



&lt;p&gt;Search for the role that is used for the login function. Select "amplify-xxxxx-authRole".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pj2AvwTs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_07.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pj2AvwTs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_07.png" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click "Add Inline Policy".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FX-OGn9B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_08.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FX-OGn9B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_08.png" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select "JSON" to set the policy. Set the "ARN" of the created map to "Resource."&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2012-10-17"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Statement"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Sid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"MapsReadOnly"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Effect"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Allow"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"geo:GetMapStyleDescriptor"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"geo:GetMapGlyphs"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"geo:GetMapSprites"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"geo:GetMapTile"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Resource"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"arn:aws:geo:us-west-2:xxxxx:map/sample"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C2va0EHf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_09.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C2va0EHf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_09.png" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Set the name as needed. This time, set it as "amazon-location-maps."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4o1Nj9wK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_10.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4o1Nj9wK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_10.png" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make sure that the policy has been created.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JLLkjmYi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_11.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JLLkjmYi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-060_11.png" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This completes the role configuration for Amplify ð &lt;/p&gt;



&lt;p&gt;Let's check with a simple local server.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run serve
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;Startup a local server and try logging in. You are now able to see Amazon Location Maps ð¡ &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8la2WkFp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://day-journal.com/memo/images/try-060_00.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8la2WkFp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://day-journal.com/memo/images/try-060_00.gif" alt="img"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#i-was-able-to-build-a-map-application-using-a-combination-of-amazon-location-service-maplibre-gl-js-aws-amplify-and-vuejs-thumbsup"&gt;
  &lt;/a&gt;
  I was able to build a map application using a combination of Amazon Location Service, MapLibre GL JS, AWS Amplify, and Vue.js ð
&lt;/h4&gt;

&lt;p&gt;When I installed Amplify in advance, I was able to build Amazon Location Service quickly. However, some areas can still be improved, such as the need for separate role settings and the limited styles that can be selected. I'll continue to explore other features as well ð &lt;/p&gt;

</description>
      <category>amazonlocationservice</category>
      <category>awsamplify</category>
      <category>maplibre</category>
      <category>vue</category>
    </item>
    <item>
      <title>Custom Flutter Launcher Icon</title>
      <author>Ikwegbu George</author>
      <pubDate>Thu, 21 Oct 2021 12:22:39 +0000</pubDate>
      <link>https://dev.to/mrbrowny/custom-flutter-launcher-icon-2dpj</link>
      <guid>https://dev.to/mrbrowny/custom-flutter-launcher-icon-2dpj</guid>
      <description>&lt;p&gt;Image Credit: &lt;a href="https://www.pexels.com/@pixabay"&gt;Pixabay&lt;/a&gt; From &lt;a href="https://www.pexels.com/photo/sea-flight-sky-earth-2163/"&gt;Pexel&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#intro"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#icon"&gt;Selecting Appropriate Icon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#package"&gt;Flutter Package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#summary"&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  ð Introduction &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KbqBRIXB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fh6eax88thjcndx9jvly.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KbqBRIXB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fh6eax88thjcndx9jvly.png" alt="Flutter Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Flutter is Google's UI toolkit for building beautiful, natively compiled applications for mobile, web, desktop, and embedded devices from a single codebase.&lt;/p&gt;

&lt;p&gt;By default, Flutter ships its own app icon similar to the image above (well, not coupled with the name 'Flutter' of course ð¤£), for every newly created application.&lt;/p&gt;

&lt;p&gt;If not for demo purpose, say you wish to build a real-life application, you would definitely need to change the said default icon to your personalized version. And that is the aim of this article.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#selecting-appropriate-icon"&gt;
  &lt;/a&gt;
  ð Selecting Appropriate Icon &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;To start off, you will need a suitable icon(image), with certain dimension. This custom_icon of ours should try and represent what your app does (now there's no rule regarding that, you can use any image you like ð). But for the dimensions, you should provide a high resolution (say, 1080 x 1080) Portable Network Graphic (PNG) image file, so that when our launcher package runs, it gets to build for all screen sizes. Now you wouldn't want to have a pixelated image as your first 'user-encounter' experience now, would you?. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xSkjbqci--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5esnuuhlu4fpcnp4mm7e.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xSkjbqci--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5esnuuhlu4fpcnp4mm7e.gif" alt="Gif image of a screaming teddy because of disaster"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flutter-package"&gt;
  &lt;/a&gt;
  ð Flutter Package &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;There are so many approach to getting your custom_icon into your project, but for this article, we will be looking at &lt;a href="https://pub.dev/packages/flutter_launcher_icons"&gt;'flutter_launcher_icons'&lt;/a&gt; flutter package.&lt;/p&gt;

&lt;p&gt;You can always make reference to the official doc for the Flutter_launcher_icons &lt;a href="https://pub.dev/packages/flutter_launcher_icons"&gt;here&lt;/a&gt;. But I'd love to make reference to the few sections we would be needing for this article.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;   &lt;span class="c1"&gt;// paste the below code in your pubspec.yaml file&lt;/span&gt;

   &lt;span class="nl"&gt;dev_dependencies:&lt;/span&gt;
      &lt;span class="nl"&gt;flutter_launcher_icons:&lt;/span&gt; &lt;span class="s"&gt;"^0.9.2"&lt;/span&gt;

   &lt;span class="nl"&gt;flutter_icons:&lt;/span&gt;
      &lt;span class="nl"&gt;android:&lt;/span&gt; &lt;span class="s"&gt;"launcher_icon"&lt;/span&gt;
      &lt;span class="nl"&gt;ios:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
      &lt;span class="nl"&gt;image_path:&lt;/span&gt; &lt;span class="s"&gt;"assets/icon/icon.png"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NB: Please remember to give the specified number of indentation.
NB: run 'flutter pug get' to get the package.
NB: run flutter pub run flutter_launcher_icons:main , to build the icon.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Once you have successfully finished the above procedures, your icons, (yeah, icons, for various screen sizes) will be placed in your 'android\app\src\main\res' directory\folder.&lt;/p&gt;

&lt;p&gt;Close your application process, and run it again, this should incorporate the new launcher icon into the app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9LMrla9B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wjlj1cb1nrqv8ku0218j.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9LMrla9B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wjlj1cb1nrqv8ku0218j.gif" alt="We did it gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Finally, our app looks more like ours now, phew!!! ðªðª. There are still native ways to reproduce the launcher icons, but that would require you to get the image for the icon to various device screen sizes. That I know for a fact won't be easy.&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>mobile</category>
      <category>beginners</category>
      <category>dart</category>
    </item>
    <item>
      <title>Use VSCode editor in your browser.</title>
      <author>Moinul Moin</author>
      <pubDate>Thu, 21 Oct 2021 12:05:32 +0000</pubDate>
      <link>https://dev.to/moinulmoin/use-vscode-editor-in-your-browser-4c32</link>
      <guid>https://dev.to/moinulmoin/use-vscode-editor-in-your-browser-4c32</guid>
      <description>&lt;p&gt;Who wants to use VSCode editor in your web browser? yes, in the web browser!ð&lt;/p&gt;

&lt;p&gt;Back in 2019, when the .dev top-level domain opened, we picked up vscode.dev. They didn't what to do with it. But now in 2021, they have brought a lightweight web version of vscode editor which you can use as you use the desktop version. But currently, It's under development, a lot of features will be added day by day.&lt;/p&gt;

&lt;p&gt;for more details: link.moinulmoin.com/edg&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>news</category>
      <category>vscode</category>
    </item>
  </channel>
</rss>
