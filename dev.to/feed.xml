<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How To Get American Express Black ATM Card</title>
      <author>Frank Roland</author>
      <pubDate>Mon, 06 Dec 2021 19:58:05 +0000</pubDate>
      <link>https://dev.to/frankro45983828/how-to-get-american-express-black-atm-card-1ild</link>
      <guid>https://dev.to/frankro45983828/how-to-get-american-express-black-atm-card-1ild</guid>
      <description>&lt;p&gt;&lt;strong&gt;How To Get American Express Black ATM Card&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Amex Centurion "black" card makes other premium credit cards look downright affordable. It has an initiation fee of $7,500 and an annual fee of $5,000.&lt;br&gt;
It's also invite-only; you can't apply without permission from Amex.&lt;br&gt;
The card offers some incredible benefits, like complimentary elite status across four hotel chains and with Delta, airport arrival services, and access to a concierge.&lt;br&gt;
While some of these perks are exclusive to the Amex black card, you can enjoy many of them with  The Platinum Card® from American Express and The Business Platinum Card® from American Express .&lt;br&gt;
The Amex Platinum, with a $695 annual fee (See Rates), doesn't offer the same level of fancy benefits, but it's a great option for earning travel rewards and enjoying some luxury perks, including statement credits with Uber and Saks.&lt;br&gt;
See Business Insider's list of the best rewards credit cards you can get »&lt;br&gt;
Also known as the Centurion card, the American Express "black" card is so prestigious that you have to be invited to use it. You can't just apply for it and expect to get approved; you have to receive a private invitation from American Express.&lt;/p&gt;

&lt;p&gt;While the requirements for getting an invite for the black card aren't officially published, rumor has it that you have to be a high earner who has spent and paid off between $350,000 and $500,000 across all of your American Express accounts in a calendar year.&lt;/p&gt;

&lt;p&gt;And once you're approved for the card, there's a $7,500 initiation fee, and a $5,000 annual fee. It makes premium credit cards like the Platinum Card ($695 annual fee) and the Amex Business Platinum Card ($595 (See Rates)) look downright affordable. &lt;/p&gt;

&lt;p&gt;We're focused here on the rewards and perks that come with each card. These cards won't be worth it if you're paying interest or late fees. When using a credit card, it's important to pay your balance in full each month, make payments on time, and only spend what you can afford to pay.&lt;br&gt;
Contact us for your Black card&lt;br&gt;
&lt;a href="mailto:webmaster6099@gmail.Com"&gt;webmaster6099@gmail.Com&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to use Azure Blob Storage with Python</title>
      <author>Nelson Adonis Hernández</author>
      <pubDate>Mon, 06 Dec 2021 19:31:43 +0000</pubDate>
      <link>https://dev.to/nelsoncode/how-to-use-azure-blob-storage-with-python-54c2</link>
      <guid>https://dev.to/nelsoncode/how-to-use-azure-blob-storage-with-python-54c2</guid>
      <description>&lt;p&gt;In this publication we will see the main methods to use with Azure Blob Storage&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;azure-storage-blob
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#blob-service-client"&gt;
  &lt;/a&gt;
  Blob Service Client
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;getenv&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;azure.storage.blob&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BlobServiceClient&lt;/span&gt;

&lt;span class="n"&gt;blob_service_client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BlobServiceClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_connection_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"AZURE_STORAGE_CONNECTION_STRING"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#methods-for-blobs-files"&gt;
  &lt;/a&gt;
  Methods for blobs (Files)
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#upload-blob"&gt;
  &lt;/a&gt;
  Upload Blob
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;upload_blob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;BinaryIO&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;blob_client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;blob_service_client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_blob_client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blob&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;blob_client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upload_blob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"success"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#download-blob"&gt;
  &lt;/a&gt;
  Download Blob
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;download_blob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;blob_client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;blob_service_client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_blob_client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blob&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blob_client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;download_blob&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;readall&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#delete-blob"&gt;
  &lt;/a&gt;
  Delete Blob
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;delete_blob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;blob_client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;blob_service_client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_blob_client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blob&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;blob_client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete_blob&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"success"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#methods-for-containers-folders"&gt;
  &lt;/a&gt;
  Methods for Containers (Folders)
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#create-container"&gt;
  &lt;/a&gt;
  Create Container
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_container&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;blob_service_client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_container&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"success"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#delete-container"&gt;
  &lt;/a&gt;
  Delete Container
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;delete_container&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;blob_service_client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete_container&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"success"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#list-containers"&gt;
  &lt;/a&gt;
  List Containers
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_containers&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;containers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;blob_service_client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list_containers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"success"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Github Gist&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gist.github.com/nelsoncode019/eade5071c80f659bfa7ce9a452345d85"&gt;https://gist.github.com/nelsoncode019/eade5071c80f659bfa7ce9a452345d85&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>azure</category>
      <category>nelsoncode</category>
      <category>storage</category>
    </item>
    <item>
      <title>Project 6:Ajax Type Ahead</title>
      <author>prachigarg19</author>
      <pubDate>Mon, 06 Dec 2021 18:56:45 +0000</pubDate>
      <link>https://dev.to/prachigarg19/project-6ajax-type-ahead-40b3</link>
      <guid>https://dev.to/prachigarg19/project-6ajax-type-ahead-40b3</guid>
      <description>&lt;p&gt;Welcome to my "Build 30 Js Projects in 30 Days" Series .This is day 6 and project 6. If you haven't read the other articles in this series please check them out first. I'll list them at the end of this article.&lt;/p&gt;

&lt;p&gt;As mentioned in my previous article. This is the Day 6 challenge of &lt;a href="https://javascript30.com/"&gt;Wes Bos Javascript30 course&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-result"&gt;
  &lt;/a&gt;
  &lt;u&gt;&lt;em&gt;Final result:&lt;/em&gt;&lt;/u&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/prachigarg19/embed/RwLrVdX?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/prachigarg19/Javacript_beginner_projects/tree/main/js30"&gt;My source code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As always before starting download the starter files from &lt;a href="https://github.com/wesbos/JavaScript30"&gt;here&lt;/a&gt;. I've made a separate article on how to download starter files, you can check it out &lt;a href="https://dev.to/prachigarg19/build-30-javascript-projects-in-30-daysday-0-2m8j"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#part-1html"&gt;
  &lt;/a&gt;
  PART 1:HTML
&lt;/h2&gt;

&lt;p&gt;Here I've created two divs, container will contain heading and searchbox and second div display-part will display the list according to value entered by user.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#part-2css"&gt;
  &lt;/a&gt;
  PART 2:CSS
&lt;/h2&gt;

&lt;p&gt;Now we are going to style our project.Here I've simply used flex on body to center our content. I've also added css to city-list which will contain our list i.e. to be displayed&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#part-3javascript"&gt;
  &lt;/a&gt;
  PART 3:JAVASCRIPT
&lt;/h2&gt;

&lt;p&gt;Now we will make our project interactive.&lt;br&gt;
This is the major part of this project. &lt;br&gt;
The idea is to read user's input ,display list of cities matching that input and then display the city selected by user from this list on the input box.We will also highlight the letters entered by user in the list.&lt;/p&gt;

&lt;p&gt;We will first fetch the data from the &lt;a href="const%20url='https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json';"&gt;link&lt;/a&gt; . This link contains our data in json format. We will use fetch function to get data from this link. Also we will use map function &lt;a href="https://dev.to/prachigarg19/project-4-array-cardio-day-1-3b1k"&gt;check this article to know more&lt;/a&gt; to get a new array with just city names and store it in cities variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let data=document.getElementById('text');
// fetching 
let cities;
fetch(url,{
    method:'GET',
})
.then(response=&amp;gt;response.json())
.then(text=&amp;gt;{
    cities=text.map(item=&amp;gt;item['city']);

})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we will use keyup listener. This event is triggered whenever user enters a key in the element (here textbox). We will then generate regex expression using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp"&gt;regExp&lt;/a&gt; and store all the cities matching this expression into display. We will then call result function to display the list,highlight input by user and changing value in textbox to the value clicked by user.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;data.addEventListener('keyup',(e)=&amp;gt;{
    if(e.target.value==="") return;
 display=cities.filter(item=&amp;gt;{
     regex=new RegExp(e.target.value,'gi');
     return item.match(regex)

})
result(); //to display list
})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;u&gt;result()--&amp;gt;&lt;/u&gt;&lt;br&gt;
&lt;u&gt;Displaying and highlighting part-&lt;/u&gt;&lt;br&gt;
We will traverse through our display array and store it in a string which will later be appending to our display-part class.&lt;br&gt;
For highlighting, we will replace each item's regex equal part to span part and use inline css to style it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let resultdisplay=document.getElementById('list');
 str="";
    for(let item of display)
    {   let city=item.replace(regex,`&amp;lt;span style="background-color:green;"&amp;gt;${data.value}&amp;lt;/span&amp;gt;`);
        str+=`&amp;lt;ul&amp;gt;&amp;lt;button value="${item}" class="city-list"&amp;gt;${city}&amp;lt;/button&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;hr&amp;gt;`;  
    } 

    resultdisplay.innerHTML=str;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that I've given a class and value to each list item which will be later used to display city selected by user.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Changing text box display text&lt;/u&gt;&lt;br&gt;
Now we will select all elements with city-list class. We will traverse this list and listen for event on each item. When the user clicks any button the click event will be triggered and we will change value of textbox to the value of the button clicked.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;try{
    let cityarr=Array.from(document.getElementsByClassName("city-list"));
    for(cityitem of cityarr){
    cityitem.addEventListener('click',(e)=&amp;gt;{
        data.value=e.target.value;
        resultdisplay.innerHTML="";
        //removing list after user chose city
    });}
        }catch(TypeError){
        return;
        }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I've used try-catch block as if user clicks on the highlighted span part the textbox will give TypeError as span html part in result function didn't have a value attribute-&amp;gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let city=item.replace(regex,`&amp;lt;span style="background-color:green;"&amp;gt;${data.value}&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So we will simply catch this error and return from the loop.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#things-i-learnt"&gt;
  &lt;/a&gt;
  &lt;u&gt;&lt;em&gt;Things I learnt:&lt;/em&gt;&lt;/u&gt;
&lt;/h2&gt;

&lt;p&gt;1.keyup event listener&lt;br&gt;
2.How to highlight part of the list elements.&lt;br&gt;
3.Better understanding of regex.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#previous-article-from-this-series"&gt;
  &lt;/a&gt;
  &lt;u&gt;Previous article from this series:&lt;/u&gt;
&lt;/h2&gt;

&lt;p&gt;First of all thankyou for the great response on my previous article.🥰&lt;br&gt;
If you haven't checked it out here is the link.:&lt;br&gt;
&lt;a href="https://dev.to/prachigarg19/project-5flex-gallery-55jd"&gt;Project 5 day 5&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;u&gt;Conclusion&lt;/u&gt;
&lt;/h2&gt;

&lt;p&gt;That's it for today's project.Next project will be Array Cardio day2 .&lt;/p&gt;

&lt;p&gt;If you have any doubts or suggestions please do let me know in the comment section. I'll be more than happy to interact with you.&lt;/p&gt;

&lt;p&gt;If you like this series and want to be a part of it, do consider following me at &lt;a class="mentioned-user" href="https://dev.to/prachigarg19"&gt;@prachigarg19&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Thanks for reading. :)&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Git undo/merge issues solved with visual examples</title>
      <author>Fidal Mathew</author>
      <pubDate>Mon, 06 Dec 2021 18:54:48 +0000</pubDate>
      <link>https://dev.to/fidalmathew/git-undomerge-issues-solved-with-visual-examples-4oph</link>
      <guid>https://dev.to/fidalmathew/git-undomerge-issues-solved-with-visual-examples-4oph</guid>
      <description>&lt;p&gt;Hi folks, hope you are doing well. In this post I am going to share you some methods that will help you while using git.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I am gonna talk about -&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;1. Git conflicts&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;2. Git undo methods&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-git-merge-conflicts-"&gt;
  &lt;/a&gt;
  1. Git merge conflicts -
&lt;/h2&gt;

&lt;p&gt;Many developers fear when git merge conflict happens, I was one of them too until I knew why it happened.&lt;/p&gt;

&lt;p&gt;So, what causes Git merge conflict?&lt;/p&gt;

&lt;p&gt;Let me tell you via an example -&lt;/p&gt;

&lt;p&gt;Let us take an empty folder and make a file named Fidal.txt&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hIag2Vb2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sg9jbf2u2y87486jrkw7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hIag2Vb2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sg9jbf2u2y87486jrkw7.png" alt="initialize" width="821" height="210"&gt;&lt;/a&gt;&lt;br&gt;
Let's initialize the project with -&lt;br&gt;
&lt;code&gt;git init&lt;/code&gt;&lt;br&gt;
&lt;code&gt;git add .&lt;/code&gt;&lt;br&gt;
&lt;code&gt;git commit -m “first commit”&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If we check &lt;code&gt;git log&lt;/code&gt; then -&amp;gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m-Qp-KjO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9jnq888zrzv6aat60r2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m-Qp-KjO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9jnq888zrzv6aat60r2.png" alt="first commit" width="880" height="133"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I made some changes -&lt;/p&gt;

&lt;p&gt;The file is modified, now&lt;br&gt;
&lt;code&gt;git add .&lt;/code&gt;&lt;br&gt;
&lt;code&gt;git commit -m “ add ironman”&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--93_YmAeC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s22ih7enustywinazuok.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--93_YmAeC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s22ih7enustywinazuok.png" alt="add ironman" width="302" height="176"&gt;&lt;/a&gt;&lt;br&gt;
Now read carefully,&lt;br&gt;
consider the &lt;strong&gt;master&lt;/strong&gt; branch as the main branch of the repo you want to contribute. All the changes will eventually be committed there.&lt;/p&gt;

&lt;p&gt;Now, I want to work on the issue of making &lt;br&gt;
“Iron man” text into “Iron Man” (both capital).&lt;br&gt;
I made a new branch called &lt;strong&gt;“fix1”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git checkout -b fix1&lt;/code&gt;  &lt;/p&gt;

&lt;p&gt;But other members (assume, but in this example I will be portraying them) were simultaneously making commits in the master branch. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f7uEHFxD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8iugq28iyih268rpjpnk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f7uEHFxD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8iugq28iyih268rpjpnk.png" alt="fix1 branch" width="810" height="200"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(If you want to follow up)&lt;/p&gt;

&lt;p&gt;I added "2. Captain America"&lt;br&gt;
         "3. Thor" ...so on&lt;br&gt;
Added all the files and made a commit.&lt;br&gt;
This process went on.&lt;/p&gt;

&lt;p&gt;Currently, the master branch looks like - &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PgMDKRcy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qznrqrwehkucqc1llb15.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PgMDKRcy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qznrqrwehkucqc1llb15.png" alt="master branch" width="352" height="317"&gt;&lt;/a&gt; &lt;br&gt;
Commit list -&lt;br&gt;
&lt;code&gt;git log&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OKoiEAOs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ln1pvj0tggg0c6p1pty8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OKoiEAOs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ln1pvj0tggg0c6p1pty8.png" alt="git log" width="875" height="757"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The fix hasn’t been merged yet -&lt;br&gt;
So, let’s go to fix1 branch and fix the issue.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git checkout fix1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jH78k4j2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ijoj7c3u3dw2mfk6jofo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jH78k4j2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ijoj7c3u3dw2mfk6jofo.png" alt="git checkout fix1" width="812" height="80"&gt;&lt;/a&gt;&lt;br&gt;
Let’s fix it and make a git commit. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IOHnBDTY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0vjdurq9ul47m1v4i8q0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IOHnBDTY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0vjdurq9ul47m1v4i8q0.png" alt="commit in fix1" width="880" height="161"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now go to the “master” branch and “merge fix1” branch -&lt;br&gt;
&lt;code&gt;git checkout master&lt;/code&gt;&lt;br&gt;
&lt;code&gt;git merge fix1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J159O3Lz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wb9l764pz34bah5tj29t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J159O3Lz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wb9l764pz34bah5tj29t.png" alt="error" width="880" height="479"&gt;&lt;/a&gt;&lt;br&gt;
Now, this is exactly what happens when you send a pull request on a file that has been modified.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yHs-t2w3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y7r549t5dpdlxkwtz0nz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yHs-t2w3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y7r549t5dpdlxkwtz0nz.png" alt="merge conflict" width="880" height="439"&gt;&lt;/a&gt;&lt;br&gt;
Merge conflict happens because Git gets confused on which commit to choose.&lt;br&gt;
So now, you have to make the changes in the document manually.&lt;/p&gt;

&lt;p&gt;I manually adjusted the code and finally came up with this. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n7uLQH0N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i2w63ttnihlk6ko0urxn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n7uLQH0N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i2w63ttnihlk6ko0urxn.png" alt="merge success" width="422" height="388"&gt;&lt;/a&gt;&lt;br&gt;
After fixing the conflict just -&lt;br&gt;
&lt;code&gt;git add .&lt;/code&gt;&lt;br&gt;
&lt;code&gt;git commit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f8O6DpDB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nqm1f7h5by29v1msgcrm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f8O6DpDB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nqm1f7h5by29v1msgcrm.png" alt="final" width="597" height="135"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope you got clarity on how git merge conflicts happen and how to solve them if you get one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-undo-with-git-commands"&gt;
  &lt;/a&gt;
  2. Undo with Git Commands
&lt;/h2&gt;

&lt;p&gt;There are many times when I need to revert back to the previous commit or unstage the selected files.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-here-are-the-ways-you-can-do-it-"&gt;
  &lt;/a&gt;
  So, here are the ways you can do it -
&lt;/h3&gt;

&lt;p&gt;First let’s initialize an empty git repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jZ98TvWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2y0uld53wvl3fgrvgjdi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jZ98TvWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2y0uld53wvl3fgrvgjdi.png" alt="init" width="772" height="500"&gt;&lt;/a&gt;&lt;br&gt;
and add some changes.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aOXTC20w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxyc9j5mqrr7i0jg2zjq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aOXTC20w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxyc9j5mqrr7i0jg2zjq.png" alt="hello" width="202" height="207"&gt;&lt;/a&gt;&lt;br&gt;
and make a commit.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1reverting-unstaged-file-"&gt;
  &lt;/a&gt;
  1.Reverting unstaged file -
&lt;/h3&gt;

&lt;p&gt;Suppose you added some lines here and there and want those lines to be removed. &lt;br&gt;
The file is &lt;strong&gt;modified(not staged)&lt;/strong&gt; and has unnecessary lines.&lt;br&gt;
USE -&lt;code&gt;git checkout -- .&lt;/code&gt; or &lt;code&gt;git checkout -- filename&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6tzwhzH1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ztet179eyr485b247ws.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6tzwhzH1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ztet179eyr485b247ws.png" alt="git checkout -- ." width="553" height="232"&gt;&lt;/a&gt;&lt;br&gt;
After command -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aOXTC20w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxyc9j5mqrr7i0jg2zjq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aOXTC20w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxyc9j5mqrr7i0jg2zjq.png" alt="hello" width="202" height="207"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2unstage-the-staged-file-"&gt;
  &lt;/a&gt;
  2.Unstage the staged file -
&lt;/h3&gt;

&lt;p&gt;Sometimes, after you have made changes and added the changes using &lt;code&gt;git add -A&lt;/code&gt;&lt;br&gt;
If you want to unstage it  then &lt;br&gt;
use -&amp;gt; &lt;code&gt;git restore --staged .&lt;/code&gt;&lt;br&gt;
The file will keep the changes but remove them from the staging area.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vinn2mq1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/svn3er1lsq516jlq1glq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vinn2mq1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/svn3er1lsq516jlq1glq.png" alt="restore" width="880" height="437"&gt;&lt;/a&gt; &lt;br&gt;
If you want now you can use &lt;code&gt;git checkout -- .&lt;/code&gt; to go back to the last commit.&lt;/p&gt;

&lt;p&gt;OR&lt;/p&gt;

&lt;p&gt;If you want to &lt;strong&gt;unstage&lt;/strong&gt; it and go back to commit &lt;/p&gt;

&lt;p&gt;Use -&amp;gt; &lt;code&gt;git reset --hard&lt;/code&gt; if file is modified.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3undo-commits-"&gt;
  &lt;/a&gt;
  3.Undo commits -
&lt;/h3&gt;

&lt;p&gt;I made 3 commits - 1 =“ Hello I am fine”&lt;br&gt;
            2 =”How are you”&lt;br&gt;
            3 =” I am fine”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8K2LpgUU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pk7fr2h8g32lnqsh19rf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8K2LpgUU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pk7fr2h8g32lnqsh19rf.png" alt="log" width="642" height="423"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Suppose I want to go back to 1st commit &lt;br&gt;
I have to revert the 2nd commit &lt;br&gt;
Use - &lt;code&gt;git revert commit id-2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YVnlpakq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4iu4rcqiamg52nwyzz89.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YVnlpakq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4iu4rcqiamg52nwyzz89.png" alt="revert" width="851" height="507"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A merge conflict has occurred, simply choose the incoming change. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tbZwGtND--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0sf43m4kygs7j28yfucd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tbZwGtND--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0sf43m4kygs7j28yfucd.png" alt="merge error" width="866" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git add .&lt;/code&gt; command will add the changes to the staging area and get rid of the conflict sign.&lt;br&gt;
Now, you can do any changes you need.&lt;/p&gt;

&lt;p&gt;If you want to save the previous state changes-&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git reset commit_id-x file_name&lt;/code&gt;&lt;br&gt;
Use this to undo changes on a single file or directory from commit x, but retain them in the staged state.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git checkout commit_id-x file_name&lt;/code&gt;&lt;br&gt;
To undo changes on a single file or directory from commit x, but retain them in the unstaged state.&lt;/p&gt;

&lt;p&gt;I would recommend you to try these commands, you will learn way faster. &lt;br&gt;
If you would like to add any other commands that I missed out on, do let me know in the comments. &lt;br&gt;
Thank you for reading :)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Connect with me -&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/fidalmathew10"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FidalMathew"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/fidal-mathew-82aba7200/"&gt;Linkedin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>git</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Python 3.10 Structural Pattern Matching (Match Case)</title>
      <author>Vinay Khatri</author>
      <pubDate>Mon, 06 Dec 2021 18:35:59 +0000</pubDate>
      <link>https://dev.to/khatrivinay/python-310-structural-pattern-matching-match-case-35dh</link>
      <guid>https://dev.to/khatrivinay/python-310-structural-pattern-matching-match-case-35dh</guid>
      <description>&lt;p&gt;After a wait of so many updates, Python has finally introduced a switch-case like structure in its latest 3.10 version. If we talk about other programming languages like, C++, Java, and JavaScript all these three popular programming languages support switch case statement, which is an alternative to write efficient and cleaner conditional statement.&lt;br&gt;
Let's see an example of Switch Case statement in C++&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#switch-case-statement-in-c"&gt;
  &lt;/a&gt;
  Switch Case Statement in C++
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;
using namespace std;

int main() {
    int http = 200;

    switch (http) {
        case  200:
            cout&amp;lt;&amp;lt;"OK";
            break;
        case 201:
            cout&amp;lt;&amp;lt;"CREATED";
            break;
        case 202:
            cout&amp;lt;&amp;lt;"ACCEPTED";
            break;
        case 400:
            cout&amp;lt;&amp;lt;"BAD REQUEST";
            break;
        case 404:
            cout&amp;lt;&amp;lt;"NOT FOUND";
            break;
        case 503:
            cout&amp;lt;&amp;lt;"SERVICE UNAVAILABLE";
            break;
        default:
            cout &amp;lt;&amp;lt; "Error! HTTP Code is not valid";
            break;
    }

    return 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;OUTPUT&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;ok&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The above code is very clean example of conditional statement. The switch case comes very handy when we have a conditional operation based on a single data object.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python-structural-pattern-matching"&gt;
  &lt;/a&gt;
  Python Structural Pattern Matching
&lt;/h2&gt;

&lt;p&gt;In Python 3.10, the core developer team of Python introduced a new conditional statement syntax Structural Pattern Matching, which is a similar syntax to the switch case statement present in the other programming languages.&lt;/p&gt;

&lt;p&gt;Although Python contain &lt;code&gt;if..else&lt;/code&gt; and &lt;code&gt;if...elif...else&lt;/code&gt; statements to write conditional statements, but the all new Python Structural Pattern Matching provides a more elegant and legible way to write some conditional statement.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;match subject:
    case pattern1:
        #case 1 code block
    .....
    ....
    ...
    case patternN:
        #case N code block
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#keywords"&gt;
  &lt;/a&gt;
  Keywords
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;match&lt;/code&gt; is the keyword here.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;subject&lt;/code&gt; is the value that need to be match.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;case&lt;/code&gt; is also a keyword&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;pattern&lt;/code&gt; is the value that will be match with &lt;code&gt;subject&lt;/code&gt; if any case pattern matches the &lt;code&gt;match&lt;/code&gt; &lt;code&gt;subject&lt;/code&gt; that case code block will be executed.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http = 200

match http:
    case 200:
        print("OK")
    case 201:
        print("CREATED")
    case 202:
        print("ACCEPTED")
    case 400:
        print("BAD REQUEST")
    case 404:
        print("NOT FOUND")
    case 503:
        print("SERVICE UNAVAILABLE")
    case _:
        print("Error! HTTP Code is not valid")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;OK
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The new Python match case statement is an alternative of the switch case statement present in the other programming languages. Although the switch case statement provide an elegant way to write conditional statement, still for complex and multilayer conditional statement it is not a good option. It can only be used when the condition expression is a single value.&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to create a progress bar with HTML and CSS</title>
      <author>Alvaro Montoro</author>
      <pubDate>Mon, 06 Dec 2021 18:22:28 +0000</pubDate>
      <link>https://dev.to/alvaromontoro/how-to-create-a-progress-bar-with-html-and-css-1fl5</link>
      <guid>https://dev.to/alvaromontoro/how-to-create-a-progress-bar-with-html-and-css-1fl5</guid>
      <description>&lt;p&gt;There are many pages on how to create a progress bar using web technologies, why do we need a new one? I found that many of those tutorials are &lt;em&gt;bloated&lt;/em&gt;: they include a lot of unnecessary HTML elements or they base everything on JavaScript. Also, they tend to forget about Web Accessibility, and the resulting component will prove to be a challenge for assistive technologies (AT) users.&lt;/p&gt;

&lt;p&gt;But it doesn't have to be that way. We can create a dynamic progress bar component using a single HTML element and some CSS, and it can be customizable, responsive, and accessible. I explained the process in this video:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/aXmNG2wie7I"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you prefer reading rather than watching videos for tutorials, I'll have a post about this topic soon (it will be sort of a transcript from the video). Or if you want to jump directly to the code and explore it, you can view the source code on this &lt;a href="https://codepen.io/alvaromontoro/full/poWgdVV"&gt;CodePen demo&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/alvaromontoro/embed/poWgdVV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>tutorial</category>
      <category>youtube</category>
      <category>html</category>
    </item>
    <item>
      <title>Moving our Website to a new Domain!</title>
      <author>Rajdeep Malakar</author>
      <pubDate>Mon, 06 Dec 2021 18:18:55 +0000</pubDate>
      <link>https://dev.to/electronstore_/moving-our-website-to-a-new-domain-16lo</link>
      <guid>https://dev.to/electronstore_/moving-our-website-to-a-new-domain-16lo</guid>
      <description>&lt;p&gt;Quite a few months back we created the Electron App Store. In that time we chose &lt;strong&gt;Freenom&lt;/strong&gt; for our free Domain name. Since then the project became much popular. Just a month back we had applied for sponsorship from Fosshost.org. &lt;strong&gt;Fosshost.org&lt;/strong&gt; is a non-profit company who provides free cloud services and domain names to Open-Source projects. Proudly we got approved by them. We had applied for electron-store.org domain name and now we have it. Just a few weeks ago we had moved the main website to electron-store.org and now we had moved the API to api.electron-store.org! There's much more planned for the v0.0.5 update which is delayed because of new features.&lt;/p&gt;

&lt;p&gt;The new features includes (but not limited to):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Developer Portal to submit apps&lt;/li&gt;
&lt;li&gt;Faster Loading time (thanks to the new API)&lt;/li&gt;
&lt;li&gt;Account Login and Rating functionality&lt;/li&gt;
&lt;li&gt;Metrics/Statistics for Apps&lt;/li&gt;
&lt;li&gt;Claiming of existing apps in the Developer Portal&lt;/li&gt;
&lt;li&gt;New Terms &amp;amp; Conditions and a dedicated App Listing Agreement&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's not all and the exact features would be announced 2 days before the Official Update! Also stay in loop by following our &lt;a href="https://twitter.com/ElectronStore_"&gt;Twitter Account&lt;/a&gt; and Dev.to page!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Writer&lt;/strong&gt;: Rajdeep Malakar ( &lt;a class="mentioned-user" href="https://dev.to/rajdeep"&gt;@rajdeep&lt;/a&gt;
 )&lt;br&gt;
&lt;strong&gt;Domain Provided By&lt;/strong&gt;: Fosshost.org ( &lt;a class="mentioned-user" href="https://dev.to/fosshostorg"&gt;@fosshostorg&lt;/a&gt;
 )&lt;br&gt;
&lt;strong&gt;Twitter&lt;/strong&gt;: &lt;a href="https://twitter.com/ElectronStore_"&gt;@ElectronStore_&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;GitHub&lt;/strong&gt;: &lt;a href="https://github.com/Electron-Store"&gt;Electron-Store&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Get your OSS Apps ready for the new &lt;strong&gt;Electron Store&lt;/strong&gt;!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>create a Mock API using graphQl and Apollo </title>
      <author>karthikeyan</author>
      <pubDate>Mon, 06 Dec 2021 18:15:35 +0000</pubDate>
      <link>https://dev.to/karthik_n/create-a-mock-api-using-graphql-and-apollo-2pa9</link>
      <guid>https://dev.to/karthik_n/create-a-mock-api-using-graphql-and-apollo-2pa9</guid>
      <description>&lt;p&gt;install these packages&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    "cors": "^2.8.5",
    "express": "^4.17.1",
    "express-graphql": "^0.12.0",
    "graphql": "^15.4.0"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;UserType.js

const graphql = require("graphql");
const { GraphQLObjectType, GraphQLInt, GraphQLString } = graphql;

const UserType = new GraphQLObjectType({
  name: "User",
  fields: () =&amp;gt; ({
   //any fields
      Name: { type: GraphQLString  },
      age: { type: GraphQLString  },
  }),
});

module.exports = UserType;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Schema.js

const graphql = require("graphql");
const {
  GraphQLObjectType,
  GraphQLSchema,
  GraphQLInt,
  GraphQLString,
  GraphQLList,
} = graphql;

//import mock data here
const UserType = require("./UserType");

const RootQuery = new GraphQLObjectType({
  name: "RootQueryType",
  fields: {
    getAllUsers: {
      type: new GraphQLList(UserType),
      args: { Name: { type: GraphQLString } },
      resolve(parent, args) {
       //return mock data
        return data;
      },
    },
  },
});

module.exports = new GraphQLSchema({ query: RootQuery });
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;index.js 

const express = require("express");
const app = express();
const PORT = 6969;
const { graphqlHTTP } = require("express-graphql");
const schema = require("./Schemas/Schema");
const cors = require("cors");

app.use(cors());
app.use(express.json());
app.use(
  "/data",
  graphqlHTTP({
    schema,
    graphiql: true,
  })
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>react</category>
      <category>javascript</category>
      <category>node</category>
      <category>beginners</category>
    </item>
    <item>
      <title>CI-CD pipeline with discord issue notification</title>
      <author>Ayan-web</author>
      <pubDate>Mon, 06 Dec 2021 18:08:30 +0000</pubDate>
      <link>https://dev.to/ayanweb/ci-cd-pipeline-with-discord-issue-notification-4np3</link>
      <guid>https://dev.to/ayanweb/ci-cd-pipeline-with-discord-issue-notification-4np3</guid>
      <description>&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;

&lt;p&gt;A very simple pipeline. First have your project setup with scripts &lt;code&gt;test&lt;/code&gt; to test app, &lt;code&gt;build&lt;/code&gt; to build app. the action test on node &lt;code&gt;v16&lt;/code&gt;. &lt;br&gt;
Create a &lt;code&gt;HEROKU_API_KEY&lt;/code&gt; and &lt;code&gt;HEROKU_EMAIL&lt;/code&gt;( your heroku mail id) secret in your repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M2Hb3J_v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gm9eev7qhteog35vh8l7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M2Hb3J_v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gm9eev7qhteog35vh8l7.png" alt="Screenshot of setting secret" width="880" height="399"&gt;&lt;/a&gt;&lt;br&gt;
that's set now for the Issue message.&lt;br&gt;
Create a discord web hook for your server then create 2 more secrets &lt;code&gt;WEBHOOK_ID&lt;/code&gt; the number part after &lt;code&gt;https://discord.com/api/webhooks/&lt;/code&gt; and &lt;code&gt;WEBHOOK_TOKEN&lt;/code&gt; the text blob after the &lt;code&gt;id&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;DIY Deployments&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#yaml-file-or-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File or Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Ayan-web"&gt;
        Ayan-web
      &lt;/a&gt; / &lt;a href="https://github.com/Ayan-web/ci-cd-issuetracker-action"&gt;
        ci-cd-issuetracker-action
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      this my github action which has basic ci-cd and issue message with discord server
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
ci-cd-issuetracker-action&lt;/h1&gt;
&lt;p&gt;this my github action which has basic ci-cd and issue message with discord server
A very simple pipeline. Have your project setup with scripts &lt;code&gt;test&lt;/code&gt; to test app, &lt;code&gt;build&lt;/code&gt; to build app. the action test on node &lt;code&gt;v12.x&lt;/code&gt;, &lt;code&gt;v14.x&lt;/code&gt; and &lt;code&gt;v16.x&lt;/code&gt;.
Create a &lt;code&gt;HEROKU_API_KEY&lt;/code&gt; secret in your repository.
that's set now for the Issue message.
Create a discord web hook for your server then create 2 more secrets &lt;code&gt;WEBHOOK_ID&lt;/code&gt; the number part after &lt;code&gt;https://discord.com/api/webhooks/&lt;/code&gt; and &lt;code&gt;WEBHOOK_TOKEN&lt;/code&gt; the text blob after the &lt;code&gt;id&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Ayan-web/ci-cd-issuetracker-action"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;here is my demo &lt;a href="https://github.com/Ayan-web/demo"&gt;Git repo&lt;/a&gt;&lt;/p&gt;

</description>
      <category>actionshackathon21</category>
      <category>node</category>
      <category>devops</category>
      <category>discordbot</category>
    </item>
    <item>
      <title>8 New Features of Amplify Studio</title>
      <author>Ali Spittel</author>
      <pubDate>Mon, 06 Dec 2021 17:33:34 +0000</pubDate>
      <link>https://dev.to/aspittel/8-new-features-of-amplify-studio-14gf</link>
      <guid>https://dev.to/aspittel/8-new-features-of-amplify-studio-14gf</guid>
      <description>&lt;p&gt;&lt;strong&gt;This post was written with &lt;a class="mentioned-user" href="https://dev.to/theswaminator"&gt;@theswaminator&lt;/a&gt;
&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Last Thursday at re:Invent, AWS Amplify, the team I work on, launched Amplify Studio which brings developers new capabilities to help accelerate UI development. Amplify Studio automatically translates designs made in Figma to human-readable React UI component code. You can also connect a cloud backend to your UI components — Studio integrates with existing Amplify data modeling.&lt;/p&gt;

&lt;p&gt;Here are 10 exciting new features available in the brand new Amplify Studio!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#figma-to-react-code"&gt;
  &lt;/a&gt;
  Figma to React code
&lt;/h3&gt;

&lt;p&gt;The biggest new feature is the ability to go from designs made in &lt;a href="https://www.figma.com/"&gt;Figma&lt;/a&gt; to developer-friendly React code. Amplify Studio uses Figma capabilities such as components and auto-layout to generate React code that can be used directly in your own code. This workflow empowers UI/UX designers to control every styling decision of components – box shadows, border radii, paddings, margins, and colors that us devs always end up messing up 🙈. &lt;/p&gt;

&lt;p&gt;Studio allows developers to focus on the core business logic that makes their app different rather than spending tons of time going back-and-forth on UI styling.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3t_mAcyZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4xpny3f2mp3jg6yzsjd3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3t_mAcyZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4xpny3f2mp3jg6yzsjd3.png" alt="Figma to Studio" width="461" height="377"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#amplify-ui-library"&gt;
  &lt;/a&gt;
  Amplify UI Library
&lt;/h3&gt;

&lt;p&gt;To accelerate UI development, Amplify Studio uses the gorgeous, brand new &lt;a href="https://ui.docs.amplify.aws/"&gt;Amplify UI library&lt;/a&gt;. It offers dozens of components such as newsfeeds, contact forms, e-commerce cards, and primitives such as Buttons, TextFields, and Alerts. All of these components are also available in the &lt;a href="https://www.figma.com/community/file/1047600760128127424"&gt;Amplify Studio Figma community file&lt;/a&gt;. You can mix and match Figma generated UI components with Amplify UI components to build complete apps in very little time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a_7bHh9J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rses09ey55rpmhbx8wxg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a_7bHh9J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rses09ey55rpmhbx8wxg.png" alt="Figma to Code" width="776" height="744"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#figma-theming-plugin"&gt;
  &lt;/a&gt;
  Figma Theming plugin
&lt;/h3&gt;

&lt;p&gt;The Amplify UI library ships with theming capabilities, allowing you to define design tokens that apply globally across your app. The theming plugin for Figma allows you to update the Amplify Figma file to match your brand styles!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3lJkSWya--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s3xfwjhxg8nqxf5i23hm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3lJkSWya--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s3xfwjhxg8nqxf5i23hm.png" alt="Amplify Studio Figma theming plugin" width="880" height="1425"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bind-ui-to-data"&gt;
  &lt;/a&gt;
  Bind UI to data
&lt;/h3&gt;

&lt;p&gt;You can use Amplify’s point and click interface to visually bind UI components imported into Studio to items in your backend data model. Studio automatically generates all the ‘glue’ code required to power the UI with real data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1yTKrsor--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mabmplw0020gry7n7o1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1yTKrsor--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mabmplw0020gry7n7o1.png" alt="UI to Data" width="776" height="416"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-collections"&gt;
  &lt;/a&gt;
  Create collections
&lt;/h3&gt;

&lt;p&gt;Almost all apps we build render collections (or a repeating list of items). You can create collections in Studio that display multiple instances of your data. Connect to the data in your data manager, dynamically query data with filtering and sorting , bind your collection to specific records, and define your collection layout styling (e.g. grid vs list, padding, direction).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZyALNYZm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07mkca9o25q5qbktjgv9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZyALNYZm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07mkca9o25q5qbktjgv9.png" alt="UI collections layout" width="880" height="565"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#shuffle-preview"&gt;
  &lt;/a&gt;
  Shuffle preview
&lt;/h3&gt;

&lt;p&gt;Shuffle preview gives you the ability to test how your UI component renders with different types of data from your data model. You can make sure that your UI will still look good with a very short title and a very long one, for example!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LpvYKYWE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fwj9dk8lv3uyby0ei2e1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LpvYKYWE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fwj9dk8lv3uyby0ei2e1.gif" alt="UI Shuffle Gif" width="724" height="426"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ui-component-property-editor"&gt;
  &lt;/a&gt;
  UI component property editor
&lt;/h3&gt;

&lt;p&gt;Amplify Studio renders a live preview of your UI component, with the ability to edit properties ranging from styles such as color, font weight and data. All property changes made in the editor are reflected in real-time in the live preview.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GSAWByUR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6hefndmhaexhrxomkcuo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GSAWByUR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6hefndmhaexhrxomkcuo.png" alt="UI Component editor" width="880" height="865"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#extend-generated-code"&gt;
  &lt;/a&gt;
  Extend generated code
&lt;/h3&gt;

&lt;p&gt;My favorite part of Studio is that we focus first and foremost on a developer audience. We have a visual way to make components, but then they can be generated using normal React code. All generated code can be extended by either modifying the component props or by overriding the generated code. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OKrMMJJk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ffcaouvhppia7s57vla.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OKrMMJJk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ffcaouvhppia7s57vla.png" alt="code generation" width="880" height="175"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#check-it-out-for-yourself"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Check it out for yourself!&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Amplify Studio is live &lt;a href="https://console.aws.amazon.com/amplify/home?#/deploy-backend"&gt;right now&lt;/a&gt;! I’d &lt;strong&gt;love&lt;/strong&gt; to hear your feedback as you build with it!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>aws</category>
      <category>react</category>
    </item>
    <item>
      <title>All about closure in javascript</title>
      <author>sakethk</author>
      <pubDate>Mon, 06 Dec 2021 17:19:37 +0000</pubDate>
      <link>https://dev.to/sakethkowtha/all-about-closure-in-javascript-3of3</link>
      <guid>https://dev.to/sakethkowtha/all-about-closure-in-javascript-3of3</guid>
      <description>&lt;p&gt;Hello all 👋🏻,&lt;/p&gt;

&lt;p&gt;This article is all about closure in javascript.&lt;/p&gt;

&lt;p&gt;Closure is not a easy topic. It will be confusing topic for beginners. In this article i will try to explain it easily.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-closure"&gt;
  &lt;/a&gt;
  What is a closure
&lt;/h3&gt;

&lt;p&gt;According to MDN&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A closure is the combination of a function bundled together (enclosed) with references to its surrounding state (the lexical environment). In other words, a closure gives you access to an outer function’s scope from an inner function. In JavaScript, closures are created every time a function is created, at function creation time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;According to Stackoverflow&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A closure is a persistent scope which holds on to local variables even after the code execution has moved out of that block. Languages which support closure (such as JavaScript, Swift, and Ruby) will allow you to keep a reference to a scope (including its parent scopes), even after the block in which those variables were declared has finished executing, provided you keep a reference to that block or function somewhere.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It might confusing you again. Let's jump to javascript lexical scoping in a high level not in detail because lexical scoping is a huge concept i will try to publish article on it separately.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Devto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printTitle&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
 &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;printTitle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Devto&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above snippet will print &lt;code&gt;Devto&lt;/code&gt; in console. &lt;code&gt;title&lt;/code&gt; variable is accessible in printTitle method because &lt;code&gt;title&lt;/code&gt; variable is in &lt;code&gt;printTitle&lt;/code&gt; parent scope. So if &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;printTitle&lt;/code&gt; both are in single scope here i.e &lt;code&gt;global scope&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Consider the following snippet&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Devto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printTitle&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
   &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;printTitle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Devto&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above snippet will print &lt;code&gt;Devto&lt;/code&gt; in console but in this &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;printTitle&lt;/code&gt; are not in &lt;code&gt;global scope&lt;/code&gt; instead they are in &lt;code&gt;main method scope&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now checkout this example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Devto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printTitle&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
   &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;printTitle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Devto&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Same output but here the difference is &lt;code&gt;title&lt;/code&gt; is in &lt;code&gt;global scope&lt;/code&gt; and we are accessing it in &lt;code&gt;printTitle&lt;/code&gt; method. So here the point is child's can access their parent / global level scope items. This is not only in javascript you can see this feature in other languages like &lt;code&gt;Java&lt;/code&gt;, &lt;code&gt;C#&lt;/code&gt;, &lt;code&gt;C++&lt;/code&gt; and &lt;code&gt;Python&lt;/code&gt; etc..&lt;/p&gt;

&lt;p&gt;We will the change above snippet&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Devto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printTitle&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
   &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;printTitleGlobal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;printTitleGlobal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Devto&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In javascript functions are &lt;code&gt;First class objects&lt;/code&gt; means they are like variables. We can return any type of variable in a function so here we can return function itself because as i said it is also treated as a variable.&lt;/p&gt;

&lt;p&gt;In the above snippet &lt;code&gt;main&lt;/code&gt; method returning &lt;code&gt;printTitle&lt;/code&gt; method and we are assigned it to &lt;code&gt;printTitleGlobal&lt;/code&gt; variable and called that &lt;code&gt;printTitleGlobal&lt;/code&gt; function. Indirectly we are calling &lt;code&gt;printTitle&lt;/code&gt; function as &lt;code&gt;title&lt;/code&gt; in global scope it is accessible in &lt;code&gt;printTitle&lt;/code&gt; method so worked as expected.&lt;/p&gt;

&lt;p&gt;Now Check the following snippet&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Devto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printTitle&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
   &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;printTitleGlobal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;printTitleGlobal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Can you guess the output ?&lt;br&gt;
It is same but here the craziest thing is &lt;code&gt;title&lt;/code&gt; is in &lt;code&gt;main&lt;/code&gt; method's scope but we are executing &lt;code&gt;printTitleGlobal&lt;/code&gt; function in &lt;code&gt;global&lt;/code&gt; scope . As per javascript lexical scope concept once the function is executed completely JS will clear the memory allotted for that. Here once &lt;code&gt;main&lt;/code&gt; method is called it should clear all the references related to &lt;code&gt;main&lt;/code&gt; method so JS should clear &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;printTitle&lt;/code&gt; and &lt;code&gt;main&lt;/code&gt;. As we stored &lt;code&gt;printTitle&lt;/code&gt; in &lt;code&gt;printTitleGlobal&lt;/code&gt; we can call that method anytime but that method has &lt;code&gt;main&lt;/code&gt; method references which should be cleared after execution of &lt;code&gt;main&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Then how it is printing "Devto" ❓.&lt;/p&gt;

&lt;p&gt;That is what &lt;strong&gt;closure&lt;/strong&gt; is ❗️&lt;/p&gt;

&lt;p&gt;When ever we return any function in javascript. JS will not only return that method before returning it will find all the references required to that returned function it will pack all the references along with along with that function. We will call that pack as &lt;strong&gt;closure&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A closure is the combination of a function bundled together (enclosed) with references to its surrounding state (the lexical environment).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now the above definition will make sense once we call &lt;code&gt;main&lt;/code&gt; method it will give us a closure named &lt;code&gt;main&lt;/code&gt; that closure will hold all the references required for &lt;code&gt;printTitle&lt;/code&gt; and &lt;code&gt;main&lt;/code&gt; method scope will get cleared after execution but still some of references required for &lt;code&gt;printTitle&lt;/code&gt; are persistent in closure.&lt;/p&gt;

&lt;p&gt;Checkout this screenshots: &lt;br&gt;
I have added two &lt;code&gt;debuggers&lt;/code&gt; this is the screenshot taken at the time of first debugger which is in &lt;code&gt;main&lt;/code&gt; method. Look at the &lt;code&gt;call stack&lt;/code&gt; in the left side window and &lt;code&gt;scope&lt;/code&gt; in right side. &lt;code&gt;title&lt;/code&gt; is in &lt;code&gt;local&lt;/code&gt; scope. This is as expected. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ts5BqYn3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fbck5wlpvhrmiij8rk1a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ts5BqYn3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fbck5wlpvhrmiij8rk1a.png" alt="Image description" width="880" height="735"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now time for second debugger which is inside &lt;code&gt;printTitle&lt;/code&gt; method. &lt;code&gt;main&lt;/code&gt; got cleared from &lt;code&gt;call stack&lt;/code&gt; and in right side you can see &lt;code&gt;Closure (main)&lt;/code&gt; it has &lt;code&gt;title&lt;/code&gt; reference. This is the one holding reference of &lt;code&gt;title&lt;/code&gt; which is being used in &lt;code&gt;printTitle&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Em1a8x61--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bn03quhdgj2vg5fjroxk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Em1a8x61--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bn03quhdgj2vg5fjroxk.png" alt="Image description" width="880" height="781"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope you enjoyed it.&lt;br&gt;
Cheers!&lt;/p&gt;

&lt;p&gt;You can now extend your support by buying me a Coffee.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/sakethk"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y61HrVIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-blue.png" alt="Buy Me A Coffee" width="545" height="153"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>functional</category>
    </item>
    <item>
      <title>Integrating the Passport with the Forem Ecosystem</title>
      <author>Fernando</author>
      <pubDate>Mon, 06 Dec 2021 17:18:57 +0000</pubDate>
      <link>https://dev.to/devteam/integrating-the-passport-with-the-forem-ecosystem-42ea</link>
      <guid>https://dev.to/devteam/integrating-the-passport-with-the-forem-ecosystem-42ea</guid>
      <description>&lt;p&gt;This is the second post of a series that covers the new &lt;a href="https://passport.forem.com/"&gt;Forem Passport&lt;/a&gt; service provider, which integrates with the Forem open source software behind DEV and &lt;a href="https://discover.forem.com"&gt;other communities&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#upcoming-forem-passport-projects"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Upcoming Forem Passport Projects&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;This service provider is such an exciting project in my view, because of the power and flexibility baked into the OAuth protocol. Not only does it help solve a problem we had (&lt;em&gt;i.e. compliance and support across different platforms&lt;/em&gt;), it also interacts with many different core and ecosystem projects.&lt;/p&gt;

&lt;p&gt;Some of the projects that relate to Forem Passport in one way or another are:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#android-mobile-app"&gt;
  &lt;/a&gt;
  Android Mobile App
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;We just released the first few versions of our beta Android app!&lt;/p&gt;

&lt;p&gt;Are you interested in being part of the closed beta? Do you want to be notified when the open beta rolls out? Drop a comment below and we’ll contact you.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#ios-mobile-app"&gt;
  &lt;/a&gt;
  iOS Mobile App
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Version &lt;code&gt;1.2.2&lt;/code&gt; includes the Passport integration already! &lt;a href="https://apps.apple.com/us/app/forem/id1536933197"&gt;Try it out now&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#better-tooling-for-creators-to-fight-abuse"&gt;
  &lt;/a&gt;
  Better Tooling for Creators to Fight Abuse
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;In a network of Forem sites, smaller instances might benefit from abuse control measures taken in bigger instances, like DEV. This could include propagation of banished users (at least to flag as likely abusers) throughout the network, making everyone safer.&lt;/p&gt;

&lt;p&gt;⚠️ &lt;em&gt;Abuse in this case refers to anything that doesn’t adhere to the Forem's code of conduct or terms and conditions.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Please note that this is still in ideation and hasn’t yet been discussed in great depth.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#better-integration-between-the-passport-and-the-raw-admin-endraw-dash-for-creators"&gt;
  &lt;/a&gt;
  Better Integration Between the Passport and the &lt;code&gt;/admin&lt;/code&gt; Dash for Creators
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;We can automate the process of enabling the Forem authentication for a creator (directly from their &lt;code&gt;/admin&lt;/code&gt; dashboard) a lot more than its current form. &lt;/p&gt;

&lt;p&gt;This idea has definitely been discussed and it’s actually a high priority goal. We want to make it as easy as possible for creators to enable the Forem passport integration so more users can benefit from it across the ecosystem.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#push-notifications-for-mobile-apps-on-selfhosted-forems"&gt;
  &lt;/a&gt;
  Push Notifications for Mobile Apps on Self-Hosted Forems
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;We can’t openly give out our PN certificates to deliver push notifications to self hosted Forems. So, in order to overcome this we could rely on the authorization and not authentication aspect of the OAuth protocol.&lt;/p&gt;

&lt;p&gt;The objective of this project is to implement a mechanism relay PN delivery to the Passport via API calls if the certificates aren’t available (self hosted sites).&lt;/p&gt;

&lt;p&gt;This would only work for users that have connected their accounts with the Passport, because that’s the key part of how we would avoid abuse from any bad actor if they happen to spam their users.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#allowing-for-social-login-within-forem-passport-itself"&gt;
  &lt;/a&gt;
  Allowing for Social login within Forem Passport itself
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;We heard you like service providers, so we’re planning to integrate service providers on our service provider 😆&lt;/p&gt;

&lt;p&gt;In all seriousness, since we have more control over Forem Passport, we could implement many customized authentication providers and make them compatible with our whole ecosystem (i.e. mobile apps). &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#easier-account-management-across-many-forem-sites"&gt;
  &lt;/a&gt;
  Easier account management across many Forem sites
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;You could &lt;em&gt;in theory&lt;/em&gt; propagate a new profile picture across many Forem sites at once, directly from Forem Passport. &lt;/p&gt;

&lt;p&gt;This isn’t implemented and hasn’t even been discussed in depth either, but OAuth should allows us to make some of these integrations possible.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#open-sourcing-the-passport-codebase"&gt;
  &lt;/a&gt;
  Open sourcing the Passport codebase
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;The core Forem software has been open source for a while now, and we want to open source this project as well in the near future for many reasons.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our intention is to solidify the Passport project a bit more (i.e. have better abuse control) and other details sorted out before publishing the repo. We’ll be sure to communicate when this happens!&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#invitations-amp-closing-note"&gt;
  &lt;/a&gt;
  Invitations &amp;amp; Closing Note
&lt;/h2&gt;

&lt;p&gt;Phew! We've covered a lot in this series so far. 😄&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Invitations:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We’re interested in your feedback on all of the above, so please share your thoughts with us in the comments below.&lt;/li&gt;
&lt;li&gt;Do you already have an account on &lt;a href="https://passport.forem.com"&gt;https://passport.forem.com&lt;/a&gt;? Please leave us a comment below! What are your thoughts? Which upcoming project from the list above interests you most? Any other crazy ideas you might think would be cool to integrate with the Passport project?&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://apps.apple.com/us/app/forem/id1536933197"&gt;Try it out Version &lt;code&gt;1.2.2&lt;/code&gt; of the Forem iOS app&lt;/a&gt;, which includes the Passport integration&lt;/li&gt;
&lt;li&gt;Reminder that you can comment below if you'd like to be part of our closed beta test for the Forem Android app &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Closing Note:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We’re actively working on Forem Passport (i.e. design overhaul, abuse control features, new integrations, etc) so expect changes, big and small, to roll out on a weekly basis.&lt;/p&gt;




&lt;p&gt;In the next post in this series, I’m going to explain how we managed to implement the Passport project from a technical perspective. Keep an eye out for it in the next few days.&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
