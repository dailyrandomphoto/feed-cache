<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Responsive Design CSS Tips</title>
      <author>Fidal Mathew</author>
      <pubDate>Fri, 19 Nov 2021 13:59:18 +0000</pubDate>
      <link>https://dev.to/fidalmathew/responsive-design-css-tips-eab</link>
      <guid>https://dev.to/fidalmathew/responsive-design-css-tips-eab</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Padding/Margin - We usually use a lot of padding when we make websites for desktops, to make them more attractive. While making it responsive for mobiles, tablets try decreasing the existing paddings and margins.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use em/rem/ percentages - Always try using em/percentage/rem instead of px, so that the text, images size adjust with respect to the device width.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Flex-wrap - Using flexbox to align your HTML elements such as &lt;/p&gt;,&lt;p&gt; etc provides the &lt;br&gt;
force elements onto one line or can wrap onto multiple lines according to their width.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Media query - Media query should be used to set width and height according to the breakpoints. Breakpoint refers to the width at which the website starts looking distorted.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Box-Sizing - It resolves a lot of problems padding causes, using box-sizing on HTML elements with a percentage width will take padding into account rather than having to adjust the width due to padding.&lt;/p&gt;&lt;/li&gt;


&lt;/ol&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Day 42 of 100 Days of Code &amp; Scrum: Footer, SCSS Debugging, and Breakpoints</title>
      <author>Rammina</author>
      <pubDate>Fri, 19 Nov 2021 13:53:47 +0000</pubDate>
      <link>https://dev.to/rammina/day-42-of-100-days-of-code-scrum-footer-scss-debugging-and-breakpoints-1edh</link>
      <guid>https://dev.to/rammina/day-42-of-100-days-of-code-scrum-footer-scss-debugging-and-breakpoints-1edh</guid>
      <description>&lt;p&gt;Hello there, everyone!&lt;/p&gt;

&lt;p&gt;Today, I almost finished the skeleton layout for my entire homepage. Now, I just need to design the homepage and look for images to use for styling. I've made a decent amount of progress so far, so I'm fairly pleased.&lt;/p&gt;

&lt;p&gt;Anyway, let's move on to my daily report!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I finished most of the contact form's skeleton, added state management, and validation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are the things I learned and worked on today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nextjs"&gt;
  &lt;/a&gt;
  Next.js
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;fixed bugs on displaying error messages for the input fields.&lt;/li&gt;
&lt;li&gt;fixed broken CSS styling and classNames.&lt;/li&gt;
&lt;li&gt;add footer skeleton layout.&lt;/li&gt;
&lt;li&gt;add styling for different breakpoints.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I did some practice flashcards for Scrum.&lt;/li&gt;
&lt;li&gt;reviewed some of the things I've learned before.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Have a good day, everyone! Thank you for reading.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" alt="Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/learn/basics/create-nextjs-app?utm_source=next-site&amp;amp;utm_medium=nav-cta&amp;amp;utm_campaign=next-website"&gt;Official Next.js tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.scrum.org/pathway/scrum-master"&gt;Scrum Master learning pathway | Scrum.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#other-media"&gt;
  &lt;/a&gt;
  Other Media
&lt;/h3&gt;

&lt;p&gt;Feel free to reach out to me in other media!&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://twitter.com/RamminaR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C341ckO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636792959/twitter-logo_laoyfu_pdbagm.png" alt="Twitter logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://github.com/Rammina"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4ZlXeay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636795051/GitHub-Emblem2_epcp8r.png" alt="Github logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Adding React to an Optimizely UI - Part 2</title>
      <author>Sam Kirkpatrick</author>
      <pubDate>Fri, 19 Nov 2021 13:52:04 +0000</pubDate>
      <link>https://dev.to/skmte/adding-react-to-an-optimizely-ui-part-2-n37</link>
      <guid>https://dev.to/skmte/adding-react-to-an-optimizely-ui-part-2-n37</guid>
      <description>&lt;p&gt;In &lt;a href="https://dev.to/skmte/adding-react-to-an-optimizely-ui-part-1-31kh"&gt;Part 1 of this series&lt;/a&gt;, I gave a start-to-finish overview of how we at &lt;a href="https://www.madetoengage.com"&gt;Made to Engage&lt;/a&gt; integrated a React application into an Optimizely ASP.NET MVC website.&lt;/p&gt;

&lt;p&gt;I'd like to delve into several aspects of the process in more detail over the next few parts, starting with the choice of React itself and the specifics of how we actually implemented it, given there were (as there always is with anything front-end...) several options.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-a-frontend-framework"&gt;
  &lt;/a&gt;
  Why a Front-End Framework?
&lt;/h2&gt;

&lt;p&gt;JavaScript is easily the most flexible way of implementing a performant, user-centric experience in a browser. Your HTML gives you structure, CSS makes it pretty and JavaScript manipulates it as necessary. &lt;/p&gt;

&lt;p&gt;At some point, the amount of JavaScript code increases and the amount of manipulation required - even with the help of some still very popular libraries... &lt;strong&gt;cough...&lt;small&gt;jQuery&lt;/small&gt;...cough&lt;/strong&gt; - reaches the point of being unmanageable and unsustainable. FE frameworks have, in recent years, really risen to address these limitations. &lt;/p&gt;

&lt;p&gt;Taking on a project to do exactly what these frameworks are designed to do really meant it was a no-brainer to go with one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#but-which-one"&gt;
  &lt;/a&gt;
  But which one?
&lt;/h2&gt;

&lt;p&gt;The decision of which front-end framework to build on given a reasonably blank slate is always a challenging one. The stereotype of the front-end development landscape changing every 15 minutes is not entirely undeserved - the choices are, indeed, ever more numerous.&lt;/p&gt;

&lt;p&gt;But the big name players are still &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt;, &lt;a href="https://angular.io/"&gt;Angular&lt;/a&gt; and &lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt;, in my opinion (and I fully confess there was a lot of my opinion in the decision phase here!). Other noteworthy candidates were &lt;a href="https://nextjs.org/"&gt;Next.JS&lt;/a&gt; and &lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;However, for reasons including (but not limited to):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In-house developer experience&lt;/li&gt;
&lt;li&gt;Learning curve&lt;/li&gt;
&lt;li&gt;Community support and documentation&lt;/li&gt;
&lt;li&gt;Training availability&lt;/li&gt;
&lt;li&gt;Package library diversity&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;...we chose React. &lt;/p&gt;

&lt;p&gt;And then we added &lt;a href="https://www.typescriptlang.org"&gt;TypeScript&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;As someone who was - despite my years of experience and interest in new development tools - actively resistant to adopting TypeScript, I have to say that starting an essentially green-field JavaScript project nowadays without it would be churlish. And it has definitely grown on me. The supporting tools in IDEs like VS Code are really excellent and the assistance you get when developing actually does help significantly.&lt;/p&gt;

&lt;p&gt;I have no doubt that:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;perfectly valid arguments could have been made for using a number of other frameworks&lt;/li&gt;
&lt;li&gt;we would have successfully produced a solution using any one of those number of other frameworks&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;But React it would be for us for now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#integrating-with-net"&gt;
  &lt;/a&gt;
  Integrating with .NET
&lt;/h2&gt;

&lt;p&gt;Since we remain somewhat constrained by a traditional MVC architecture and a UI rendered using Razor views, we needed a way to integrate the React app into the site.&lt;/p&gt;

&lt;p&gt;One potential option would have been to use &lt;a href="https://reactjs.net/"&gt;ReactJS.NET&lt;/a&gt; - a platform almost specifically built to do what we were trying to do. But the coupling of Razor and React required by this tool just felt "wrong", and would have left us inseparably tied to React (&lt;a href="https://world.optimizely.com/forum/developer-forum/Developer-to-developer/Thread-Container/2020/5/using-reactjs-net-is-dxp/#222699"&gt;a view also expressed by the Optimizely team themselves&lt;/a&gt;). Given our "proof of concept" stage, maintaining the ability to swap out one framework for another one in the (unlikely-but-you-just-never-know) event of reaching an insurmountable road block was important.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-createreactapp-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;create-react-app&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;The de-facto standard when starting a new React application is to open a terminal and run &lt;code&gt;npx create-react-app&lt;/code&gt;. Again, we decided against this. Whilst this app does indeed give you absolutely everything you need to create, build and deploy a React application, it includes a bulk load of features that we didn't expect to need and we weren't creating a Single Page Application (SPA) - something &lt;code&gt;create-react-app&lt;/code&gt; is very much angled towards.&lt;/p&gt;

&lt;p&gt;Our app was going to be a fully built-by-hand endeavour. Starting with a brand new working folder and &lt;code&gt;npm init&lt;/code&gt; and a &lt;code&gt;src/index.tsx&lt;/code&gt;, off we went.&lt;/p&gt;

</description>
      <category>react</category>
      <category>optimizely</category>
      <category>javascript</category>
    </item>
    <item>
      <title>IRIS API Explorer Application</title>
      <author>InterSystems Developer</author>
      <pubDate>Fri, 19 Nov 2021 13:36:22 +0000</pubDate>
      <link>https://dev.to/intersystems/iris-api-explorer-application-32gk</link>
      <guid>https://dev.to/intersystems/iris-api-explorer-application-32gk</guid>
      <description>&lt;h3&gt;
  Background
&lt;/h3&gt;

&lt;p&gt;InterSystems IRIS 2019 is going to introduce new and exciting features. One of the areas with new interesting must-to-know things is the API Management. &lt;/p&gt;

&lt;p&gt;OpenAPI initiative (&lt;a href="https://www.openapis.org/"&gt;https://www.openapis.org/&lt;/a&gt;) is the organization supporting a standard specification to define APIs (&lt;a href="https://github.com/OAI/OpenAPI-Specification"&gt;https://github.com/OAI/OpenAPI-Specification&lt;/a&gt;). The OpenAPI Specification (OAS) defines a standard, programming language-agnostic interface description for REST APIs, which allows both humans and computers to discover and understand the capabilities of a service without requiring access to source code, additional documentation, or inspection of network traffic. When properly defined via OpenAPI, a consumer can understand and interact with the remote service with a minimal amount of implementation logic. Similar to what interface descriptions have done for lower-level programming, the OpenAPI Specification removes guesswork in calling a service.&lt;/p&gt;

&lt;p&gt;InterSystems introduces in InterSystems IRIS &lt;strong&gt;support for an API-design first approach&lt;/strong&gt;, this approach allows to design your specification first and then generate server-side from it. If we design the API first, normally we use Swagger Editor or another similar tool to create the specification and get the OAS specification in JSON format whenever we want.&lt;/p&gt;

&lt;p&gt;Once we have the API designed and ready to implement then we can create the server side API logic using the OAS specification. In InterSystems IRIS 2019.1 we can use the new routine &lt;strong&gt;^%REST&lt;/strong&gt; to scaffold the API and automatically generate the classes where put the code that will call the business logic. The methods of this classes will be based on naming conventions although you can define the method and class in your specification (operationId).&lt;/p&gt;

&lt;p&gt;Example of use of the InterSystems IRIS REST Command Line Interface:&lt;/p&gt;

&lt;p&gt;USER&amp;gt;do ^%REST&lt;br&gt; &lt;br&gt;REST Command Line Interface (CLI) helps you CREATE or DELETE a REST application &lt;/p&gt;

&lt;p&gt;Enter an application name or (L)ist all REST applications (L): acmeapi&lt;br&gt;REST application not found: acmeapi&lt;br&gt;Do you want to create a new REST application? Y or N (Y):&lt;br&gt; &lt;br&gt;File path or absolute URL of a swagger document.&lt;br&gt;If no document specified, then create an empty application.&lt;br&gt;OpenAPI 2.0 swagger: C:\myspec\acme.swagger.json&lt;br&gt; &lt;br&gt;OpenAPI 2.0 swagger document: C:\myspec\notification.swagger.json&lt;br&gt;Confirm operation, Y or N (Y):&lt;br&gt;-----Creating REST application: acmeapi-----&lt;br&gt;CREATE acmeapi.spec&lt;br&gt;GENERATE acmeapi.disp&lt;br&gt;CREATE acmenapi.impl&lt;br&gt;REST application successfully created.&lt;br&gt; &lt;br&gt;Create a web application for the REST application? Y or N (Y):&lt;br&gt;Specify web application name. Default is /csp/api/acme&lt;br&gt;Web application name: /csp/api/acme/v1&lt;br&gt; &lt;br&gt;-----Deploying REST application: acmeapi-----&lt;br&gt;Application acmeapi deployed to /csp/api/acme/v1&lt;br&gt; &lt;/p&gt;

&lt;p&gt;At this moment the creation of a REST API only can use the &lt;strong&gt;OpenAPI 2.0&lt;/strong&gt; Swagger specification in order to build the scaffold of the API.&lt;/p&gt;

&lt;p&gt;As you see this routine create three classes: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&amp;lt;application&amp;gt;&lt;strong&gt;.spec&lt;/strong&gt;: this class is the container for the swagger spec (XData OpenAPI block). This class is read-only.&lt;/li&gt;
&lt;li&gt;&amp;lt;application&amp;gt;&lt;strong&gt;.disp&lt;/strong&gt;: dispatch class ready to use in the CSP application. It extends %CSP.REST and define the XData UrlMap. This class is read-only and marked as system class (by default is hidden in Atelier).&lt;/li&gt;
&lt;li&gt;&amp;lt;application&amp;gt;&lt;strong&gt;.impl&lt;/strong&gt;: class defining all the necessary signature methods. This class should be complete in order to make the API works.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  What if I have my API developed already?
&lt;/h3&gt;

&lt;p&gt;In InterSystems IRIS 2018.1 InterSystems introduced the service discovery that enables developers to explore the API capabilities remotely. Also the Swagger integration allowing you to generate an Open API Specification (OAS) from your existing REST application. So, any API that we modify in InterSystems IRIS it can auto-generate the swagger specification.&lt;/p&gt;

&lt;p&gt;It is possible to query all the available APIs in the system through a management API:&lt;/p&gt;

&lt;p&gt;HTTP GET http://&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;/api/mgmnt/ &lt;/p&gt;

&lt;p&gt;Returns:&lt;/p&gt;

&lt;p&gt;&lt;br&gt;[&lt;br&gt;...,&lt;br&gt;    {&lt;br&gt;        "name": "/csp/petstore/v2",&lt;br&gt;        "dispatchClass": "petstore.disp",&lt;br&gt;        "namespace": "USER",&lt;br&gt;        "resource": "",&lt;br&gt;        "swaggerSpec": "/api/mgmnt/v1/USER/spec/csp/petstore/v2",&lt;br&gt;        "enabled": true&lt;br&gt;    }&lt;br&gt;]&lt;/p&gt;

&lt;p&gt;Moreover the Swagger specification of the API can be retrieve doing a HTTP GET to the URL show by the property swaggerSpec. Any API operation defined by the original swagger specification has a new property defining the name of the method that should implement the action:&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;p&gt;"x-ISC_ServiceMethod": "getPetById",&lt;/p&gt;

&lt;p&gt;A really funny stuff is that we can make use of this api/mgmnt not only for discovery, also for API creation/query/delete using &lt;/p&gt;

&lt;p&gt;HTTP POST to /api/mgmnt/v2/&amp;lt;namespace&amp;gt;/&amp;lt;applicationName&amp;gt;&lt;br&gt;HTTP GET to /api/mgmnt/v2/&amp;lt;namespace&amp;gt;/&amp;lt;applicationName&amp;gt;&lt;br&gt;HTTP DELETE to /api/mgmnt/v2/&amp;lt;namespace&amp;gt;/&amp;lt;applicationName&amp;gt;&lt;/p&gt;

&lt;h3&gt;
  IRIS API Explorer
&lt;/h3&gt;

&lt;p&gt;IRIS Explorer is an Angular 5 application that take advantage of this API in order to provide a nice visual tool to manage IRIS APIs. Let's do a quick tour:&lt;/p&gt;

&lt;p&gt;First we need to do a login into an InterSystems IRIS instance (by default look for a local instance in port 52773):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IK9xEXwn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wvm0jvtj2h300xwu6brs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IK9xEXwn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wvm0jvtj2h300xwu6brs.png" alt="Image description" width="880" height="657"&gt;&lt;/a&gt;&lt;br&gt;
After login the app make a query to retrieve all the existing APIS:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zrdykgG7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yrulrvtwpzkc54773lo4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zrdykgG7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yrulrvtwpzkc54773lo4.png" alt="Image description" width="880" height="332"&gt;&lt;/a&gt;&lt;br&gt;
We can delete an existing APIs or we can create a new one. To create a New Application we need to provide the Namespace, the Application Name and the Swagger specification from a .json file:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3_XZHwN9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m7p021fuzllbnhkap43i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3_XZHwN9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m7p021fuzllbnhkap43i.png" alt="Image description" width="880" height="400"&gt;&lt;/a&gt;&lt;br&gt;
Once we have the API created we can view the specification. In order to make this more funny I embedded a Swager-UI (&lt;a href="https://github.com/swagger-api/swagger-ui"&gt;https://github.com/swagger-api/swagger-ui&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W-SIT3IN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/df2w3ihbidqr4539zggr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W-SIT3IN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/df2w3ihbidqr4539zggr.png" alt="Image description" width="880" height="587"&gt;&lt;/a&gt;&lt;br&gt;
And of course we can retrieve the JSON OAS Spec:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--30ur4ydV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxq3whwj3x4xnvtkvrun.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--30ur4ydV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxq3whwj3x4xnvtkvrun.png" alt="Image description" width="880" height="548"&gt;&lt;/a&gt;&lt;br&gt;
All the code is open and is up to you to use or modify as your convenience. The App is available in Open Exchange:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://openexchange.intersystems.com/index.html#!/package/IRIS%20API%20EXPLORER"&gt;https://openexchange.intersystems.com/index.html#!/package/IRIS%20API%20EXPLORER&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And also in GitHub:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/drechema/iris-explorer"&gt;https://github.com/drechema/iris-explorer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope it will be useful&lt;/p&gt;

</description>
      <category>angular</category>
      <category>api</category>
      <category>practice</category>
      <category>programming</category>
    </item>
    <item>
      <title>Symfony Station Communique - 19 November 2021. A Look at Symfony and PHP News.</title>
      <author>Reuben Walker, Jr.</author>
      <pubDate>Fri, 19 Nov 2021 13:28:29 +0000</pubDate>
      <link>https://dev.to/reubenwalker64/symfony-station-communique-19-november-2021-a-look-at-symfony-and-php-news-53df</link>
      <guid>https://dev.to/reubenwalker64/symfony-station-communique-19-november-2021-a-look-at-symfony-and-php-news-53df</guid>
      <description>&lt;p&gt;This post originally appeared on &lt;a href="https://www.symfonystation.com/Communiques"&gt;Symfony Station&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Welcome to this week's Symfony Station Communique. It’s your weekly review of the most valuable and essential news in the Symfony and PHP development communities. This week it’s pretty extensive, so take your time and peruse it for the most valuable items.&lt;/p&gt;

&lt;p&gt;Thanks to Javier Eguiluz and Symfony for sharing &lt;a href="https://www.symfonystation.com/Symfony-Station-Communique-12-November-2021"&gt;our last communique&lt;/a&gt; in their &lt;a href="https://symfony.com/blog/a-week-of-symfony-776-8-14-november-2021"&gt;Week of Symfony&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;*Please note all links will open in a new browser window. My opinions, if I present any, will be in bold.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XH6z9_82--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/symfony-logo-no-text.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XH6z9_82--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/symfony-logo-no-text.png" alt="Symfony logo" width="300" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#symfony"&gt;
  &lt;/a&gt;
  Symfony
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#this-week"&gt;
  &lt;/a&gt;
  This week
&lt;/h3&gt;

&lt;p&gt;As always, we will start with the official news from Symfony.&lt;/p&gt;

&lt;p&gt;Highlight -&amp;gt; “This week, Symfony development activity focused on polishing and tweaking the upcoming Symfony 5.4 and 6.0 releases (both will be published before the end of this month). In addition, Symfony announced a new sponsoring program for SaaS providers to back their Symfony bridges.”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://symfony.com/blog/a-week-of-symfony-776-8-14-november-2021"&gt;A Week of Symfony #776 (8-14 November 2021)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Javier continues a series of posts on what’s new in Symfony 5.4.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://symfony.com/blog/new-in-symfony-5-4-new-validation-constraints"&gt;New in Symfony 5.4: New Validation Constraints&lt;/a&gt; &lt;br&gt;
&lt;a href="https://symfony.com/blog/new-in-symfony-5-4-configurable-exceptions"&gt;New in Symfony 5.4: Configurable Exceptions&lt;/a&gt;&lt;br&gt;
&lt;a href="https://symfony.com/blog/new-in-symfony-5-4-filesystem-path-class"&gt;New in Symfony 5.4: Filesystem Path Class&lt;/a&gt;&lt;br&gt;
&lt;a href="https://symfony.com/blog/new-in-symfony-5-4-redesigned-profiler-logs"&gt;New in Symfony 5.4: Redesigned Profiler Logs&lt;/a&gt;&lt;br&gt;
&lt;a href="https://symfony.com/blog/new-in-symfony-5-4-language-negotiation"&gt;New in Symfony 5.4: Language Negotiation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great deals are available if you are looking for official certification.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://symfony.com/blog/black-friday-2021-offers-from-the-symfony-ecosystem"&gt;Black Friday 2021 Offers from the Symfony Ecosystem&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This one is self-explanatory.&lt;br&gt;
&lt;a href="https://symfony.com/blog/symfony-6-0-0-beta2-released"&gt;Symfony 6.0.0-BETA2 released&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Symfony has announced the final schedule for SymfonyWorld Online 2021 Winter Conference. We're excited about the Symfony 6 sessions (of course) and the ones on design patterns, runtime, Docker, TWIG, API platform, and Symfony UX! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://symfony.com/blog/announcing-the-final-schedule-of-symfonyworld-online-2021-winter-conference"&gt;Announcing the Final Schedule of SymfonyWorld Online 2021 Winter Conference&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They also announced the new and retiring members of the Symfony Core Team.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://symfony.com/blog/new-core-team-members-2021-edition"&gt;New Core Team Members, 2021 Edition&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--thB3ZkQa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/Featured-Item.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--thB3ZkQa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/Featured-Item.png" alt="Featured Item graphic" width="660" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#featured-item"&gt;
  &lt;/a&gt;
  Featured Item
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;We continue to highlight the most significant post of the week.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-involved-with-this"&gt;
  &lt;/a&gt;
  Get involved with this!
&lt;/h3&gt;

&lt;p&gt;The first event was this Thursday, but it is a year-long initiative.&lt;/p&gt;

&lt;p&gt;Denmark notes: “Digital solutions can promote human rights, bring people closer to the decisions that influence their lives, and make democratic institutions stronger and more responsive. Yet online, expectations and aspirations for democracy have not been fully met. Digital technologies pose a severe threat to democracies globally and our democratic practices.”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://techfordemocracy.dk/"&gt;Join us to make tech work for democracy and human rights!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Via SymfonyCasts: “Another busy week in Symfony Security! So let's get down to business.” &lt;/p&gt;

&lt;p&gt;&lt;a href="https://5hy9x.r.ag.d.sendibm3.com/mk/mr/Y7pmZuSKCPrRs2rY9mCHTSeoD-yG8CW7x7pPARUGdEdM_yJUmeHST2T7g7dsmvKVIa4L0WezNLyDBtauw00KIdX-suCG8qQDpzCD-UBjZOeL-jrX3LeFs3b1AP6oozddeJyOOO1qrA"&gt;This week on SymfonyCasts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This one is self-explanatory. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.strangebuzz.com/en/snippets/getting-the-first-character-of-a-string-with-php"&gt;Getting the first character of a string with PHP and Symfony.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The following post looks at using the Svelte javascript framework with Symfony.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.dev-web.io/2021/11/09/svelte-symfony-ma-cure-damincissement/"&gt;Svelte + Symfony, ma cure d’amincissement&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We curated several posts last week from Mickaël Andrieu. Here is another one from his series on controlling the quality of your Symfony and PHP projects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mickael-andrieu.medium.com/contr%C3%B4lez-la-qualit%C3%A9-de-vos-projets-php-symfony-%C3%A0-laide-des-github-actions-2e82ce7f83b6"&gt;Contrôlez la qualité de vos projets PHP &amp;amp; Symfony à l’aide des GitHub Actions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Matthias Noback says: “a paradigm shift happened years ago when we went from symfony1 to Symfony 2, introducing the Dependency Injection container. The idea of Dependency Injection was quite new to many developers back then, and we had to talk and read about it a lot before we were ready for this amazing yet weird concept. What got in the way of adoption, I think, was the Yaml or XML syntax for service definitions, an approach that was probably copied from Spring. If we'd start by writing our service containers in plain PHP, that would've been much easier to learn and do.”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://matthiasnoback.nl/2021/11/the-dependency-injection-paradigm/"&gt;The Dependency Injection Paradigm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alexandre Daubois notes: “I’ve been involved in the addition of enumerations support in the Symfony framework. A news item was posted on Symfony’s blog about enumerations in the framework. You may want to read it first! This article is a supplement with additional code snippets and information.”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://alex-daubois.medium.com/using-php-8-1-enumerations-in-symfony-af5ba761135d"&gt;Using PHP 8.1 enumerations in Symfony: Symfony 5.4/6.0 will support them from day one.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wouter Carabain has another article on his Symfony and React app. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://woutercarabain.com/webdevelopment/tying-up-loose-ends-and-stock-portfolio-api-part-4/"&gt;Tying up loose ends &amp;amp; Stock Portfolio API (Part 4)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Techno Craft has two articles covering command line interfaces and Symfony.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/@technocraft.devops/how-to-create-a-custom-cli-and-use-it-in-symfony-part1-a41b2a763549"&gt;How to create a custom CLI and use it in Symfony (part1)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/@technocraft.devops/how-to-create-a-custom-cli-and-use-it-in-symfony-part2-cf688df73834"&gt;How to create a custom CLI and use it in Symfony (part2)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Marco Pfeiffer notes that there are only 2 types of database relations. All other types are usually bugs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.marco.zone/mastering-doctrine-orm-relations-571060c5b40e"&gt;Mastering Doctrine ORM relations&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#timeless"&gt;
  &lt;/a&gt;
  Timeless
&lt;/h3&gt;

&lt;p&gt;Soft Gorillas says: “Choosing the right technology for application development is an important task. However, a lack of knowledge about the most popular tech stack may result in choosing a framework that will not assure great performance or crucial features. So today, we’d like to tell you more about Symfony.”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/@Softgorillas/symfony-why-it-a-good-technology-for-your-business-application-development-4957645d044c"&gt;Symfony — why it's a good technology for your business application development&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Olususi Oluyemi has this classic post for us.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://auth0.com/blog/creating-your-first-symfony-app-and-adding-authentication/"&gt;Creating your First Symfony App and Adding Authentication&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I ran across Akashic Seer’s blog this month, which is a treasure chest of Symfony-related posts. Here are a few posts from his archive.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://akashicseer.com/web-development/how-does-login-and-authentication-work-in-symfony-5/"&gt;How does login and authentication work in Symfony 5?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://akashicseer.com/web-development/symfony-5-how-to-import-or-link-to-javascript-and-css-files-with-webpack-encore/"&gt;Symfony 5+: how to import or link to javascript and CSS files with webpack encore.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ga9mH96g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/php-logo_2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ga9mH96g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/php-logo_2.png" alt="PHP logo" width="880" height="645"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#php"&gt;
  &lt;/a&gt;
  PHP
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#this-week"&gt;
  &lt;/a&gt;
  This week
&lt;/h3&gt;

&lt;p&gt;Just how fast is PHP 8.1? It’s this quick. Wow.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://externals.io/message/116323"&gt;Automatic performance benchmarking: PHP 8.1 is ~30% faster than PHP 7.4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;“These days we hear a lot about dynamic properties in PHP and the possibility of it being deprecated by version 8.2, only to disappear from version 9. The proposal is documented in a dedicated RFC, and it generated a lot of discussions especially on the social networks (like Twitter, etc),” says Roberto Butti.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/geekculture/php-what-are-dynamic-properties-2509c6fbccf8"&gt;PHP, what are dynamic properties?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Roberto also published this very useful e-book. "50 drops of PHP" is an open-source e-book, that you can download for free. It collects 50 useful, unknown, and underrated PHP functions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/robertobutti/50-drops-of-php-433m"&gt;50 Drops of PHP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fabio Hiroki looks at the Adapter pattern’s use with email notifications. Its purpose is to make classes that have incompatible interfaces work together. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://fabiohiroki.medium.com/php-design-patterns-adapter-dce46dc74a2a"&gt;PHP Design Patterns — Adapter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Arash has another interesting pattern post on Medium.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/@arash-jafari/strategy-design-pattern-in-php-8-9c8bb2793e18"&gt;Strategy Design Pattern In PHP8&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, on Medium, Patrick Augustus looks at inheritances and traits in PHP. You will probably need the translate button on this one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/@trickaugusto1206/heran%C3%A7as-horizontais-com-traits-em-php-8a31929da2fd"&gt;Horizontal Inheritances with Traits in PHP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here’s some excellent information on using PHP and the Nginx server with Docker from Samuel Fontebasso in these two articles.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.fontebasso.com.br/php-nginx-with-docker-in-production-20ffdb73ec5b"&gt;PHP+Nginx with Docker in production: Part 1 - Introduction&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.fontebasso.com.br/php-nginx-with-docker-in-production-cc1a9be05b91"&gt;PHP+Nginx with Docker in production: Part 2 - Running your code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unlike traditional PHP, where you run servers behind an Apache or Nginx HTTP service with either mod_php or PHP-FPM enabled, your PHP applications would run using a stateless model, whereas Swoole runs using a stateful model. By design, Swoole runs in memory. It takes advantage of saving things in memory, so you don't have to reload everything for every request coming into your servers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.swoole.co.uk/article/isolating-variables-with-coroutine-context"&gt;Isolating global variables with a co-routine context manager in Swoole&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Arjuna Sky Kok says: “Dealing with dates and times is one of those things that can frustrate programmers a lot. At the same time, they are fundamental to software development, used from everything from meta and how things are ordered to time-based triggers and lots in between.&lt;/p&gt;

&lt;p&gt;Dates and times are prone to errors too. Handle them incorrectly, and they can confuse end-users and fellow programmers alike.&lt;/p&gt;

&lt;p&gt;This is a quick guide to dealing with dates and times specifically in the PHP programming language.”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://css-tricks.com/php-date-and-time-recipes/"&gt;PHP Date and Time Recipes&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#last-week"&gt;
  &lt;/a&gt;
  Last Week
&lt;/h3&gt;

&lt;p&gt;Speaking of time, Rubén Rubio - great name ;) - says: “It is a good practice to use an interface to manage the clock in an application, as it allows having full control of time. For example, it eases testing, as it lets us define the concrete time for each test.”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/filmineng/stopping-time-with-php-3m8k"&gt;Stopping time with PHP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PHP Architect has an enticing new book out. It’s worth a look.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.phparch.com/books/the-complementary-php-testing-tools-cookbook/https://smaine-milianni.medium.com/larchi-hexa-est-ce-archi-bien-fd0449b32e33"&gt;The Complementary PHP Testing Tools Cookbook&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#timeless"&gt;
  &lt;/a&gt;
  Timeless
&lt;/h3&gt;

&lt;p&gt;Ashley Allen states: “In programming, it's important to make sure that your code is readable, maintainable, extendable, and easily testable. One of the ways that we can improve all of these factors in our code is by using interfaces.”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ashallendesign.co.uk/blog/using-interfaces-to-write-better-php-code"&gt;Using Interfaces to Write Better PHP Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ashly Rich attended a talk a few years ago and found out how vastly complicated cryptography is and how PHP is making encryption more accessible thanks to the introduction of Sodium. Data encryption in PHP has been vital to his work on SpinupWP, a cloud-based server control panel with root access to thousands of servers and sites.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://deliciousbrains.com/php-encryption-methods/"&gt;Best Ways to Encrypt Passwords, Keys, &amp;amp; More with PHP in 2021&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xvXlR0Jk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/code-logo_1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xvXlR0Jk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/code-logo_1.jpeg" alt="Code logo" width="626" height="626"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other"&gt;
  &lt;/a&gt;
  Other
&lt;/h2&gt;

&lt;p&gt;Cinto provides a look at an important topic, SSL and TLS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://betterprogramming.pub/a-highly-simplified-overview-of-ssl-tls-dc4068543253"&gt;A Highly Simplified Overview of SSL/TLS: Understanding network communication using real-life analogies&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mateusz Cholewka notes: “Nowadays we are using docker a lot in web development. It’s easy to use, great for scaling, and gives us an immutable environment for running your application from local development to deploying on production. However, to get the best experience when using docker, you should apply some practices to get fast and light builds of your docker images.”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/@kontaktmtk3d/here-are-the-dockerfile-tips-you-can-use-to-get-your-builds-faster-and-safer-51ae8d16a6c7"&gt;Here are the Dockerfile tips you can use to get your builds faster and safer.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Abdul Wahab says: “In general, web services have been in existence for just as long as the HTTP protocol has existed. But, since the beginning of cloud computing, they have become the ubiquitous method of enabling client interaction with services and data.”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://abdulrwahab.medium.com/api-architecture-best-practices-for-designing-rest-apis-bf907025f5f"&gt;API Architecture — Design Best Practices for REST APIs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This post is more like a short book so bookmark it for reading at your leisure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.toptal.com/project-managers/agile/ultimate-introduction-to-agile-project-management"&gt;The Ultimate Introduction To Agile Project Management&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Image Credit: Rafael Henrique/SOPA Images/LightRocket via Getty Images&lt;/p&gt;

&lt;p&gt;Hear from CIOs, CTOs, and other C-level and senior execs on data and AI strategies at the Future of Work Summit this January 12, 2022. Learn more&lt;/p&gt;

&lt;p&gt;In this year’s GitHub Octoverse Report, their research tells you how to improve your performance and well-being by developing code, creating documentation, and supporting communities in smarter, more sustainable ways.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://octoverse.github.com/"&gt;State of the Octoverse&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OpenAI removed the waitlist for GPT-3, its large language model that can automatically write emails and articles, compose poetry, create code across a dozen programming languages, and more. Any developer in a supported country can sign up to begin integrating the model with their app or service.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://venturebeat.com/2021/11/18/openai-makes-gpt-3-generally-available-through-its-api/"&gt;OpenAI makes GPT-3 generally available through its API&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have you published or seen something related to Symfony or PHP that we missed? If so, please contact us.&lt;/p&gt;

&lt;p&gt;That's it for this week. Thanks for making it to the end of another extended edition. I look forward to sharing next week's Symfony and PHP news with you on Friday. Next week is also the Thanksgiving holiday in the U.S. so it may be a short (or long) edition. It depends on how much time I want to spend around the in-laws. ;)&lt;/p&gt;

&lt;p&gt;Please share this post. :) Be sure to join our newsletter list (at the bottom of &lt;a href="https://symfonystation.com/Communiques"&gt;this page&lt;/a&gt;, so you get each week's communique directly in your inbox (a day early). And &lt;a href="https://twitter.com/symfonystation"&gt;follow us on Twitter&lt;/a&gt; at @symfonfystation.&lt;/p&gt;

&lt;p&gt;Happy coding Symfonistas!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sHynFiuH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/Reuben_5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sHynFiuH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/Reuben_5.png" alt="Photo of Reuben Walker" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Reuben Walker&lt;br&gt;
Founder &lt;a href="https://www.symfonystation.com/"&gt;Symfony Station&lt;/a&gt;&lt;br&gt;
Reuben is also Ringmaster of &lt;a href="https://media.mobileatom.net/"&gt;Mobile Atom Media&lt;/a&gt; and its division &lt;a href="https://www.mobileatom.net/"&gt;Mobile Atom Code&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>symfony</category>
      <category>php</category>
      <category>docker</category>
      <category>cli</category>
    </item>
    <item>
      <title>How To Launch A Celebrity Subscription App Like OnlyFans In 2022?
</title>
      <author>Jenny C. Wilson</author>
      <pubDate>Fri, 19 Nov 2021 13:28:10 +0000</pubDate>
      <link>https://dev.to/jennycwilson/how-to-launch-a-celebrity-subscription-app-like-onlyfans-in-2022-2h7</link>
      <guid>https://dev.to/jennycwilson/how-to-launch-a-celebrity-subscription-app-like-onlyfans-in-2022-2h7</guid>
      <description>&lt;p&gt;OnlyFans is a London-based company that launched its app in 2016. Since its launch, it has revolutionized the content subscription apps market. Such apps give opportunities for content creators to showcase their talents and earn revenue. This platform has caught the attention of 170 million registered users and 1.5 million content creators. &lt;/p&gt;

&lt;p&gt;Among many other premium celebrity subscription apps, OnlyFans stand apart with a unique set of features. This platform’s growth &amp;amp; popularity prompts entrepreneurs to launch a fan club website similar to OnlyFans.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OnlyFans Clone - A Readily Available Premium Social Media App&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Those are the days when a conventional approach is preferred in which the app was crafted from scratch. But, this requires a lot of time and includes a considerable investment. There comes a clone script, a modern approach to developing the app which is available at a nominal cost and does not need much time. &lt;/p&gt;

&lt;p&gt;It would be the choice for you to prefer the app development approach based on your requirements. The ones who want to launch a premium social media app instantly can make use of the &lt;strong&gt;&lt;a href="https://www.uberlikeapp.com/onlyfans-clone"&gt;OnlyFans Clone Script&lt;/a&gt;&lt;/strong&gt;. It is a pre-built app solution that is readily available for deployment. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benefits of OnlyFans Clone Script&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On a general note, both app development approaches have pros and cons on their own. In this, let us see the key advantages of OnlyFans Clone Script.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Inclusion of new features and integration of third-party services&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As the script is highly customizable &amp;amp; fully scalable, any number of features can be included based on your app requirements. Alongside, you can contemplate integrating third-party services. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rebranding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The app solution will be well-crafted beforehand. With necessary modifications, you can brand it with your company name, tagline, symbol, etc. It indicates owning the app. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Available at an economical price&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The app that is built from scratch requires a maximum of 4 to 6 months. Depending on this time limit, the cost for development will be determined and considerably, you need to contribute more. On the other side, crafting the app using an OnlyFans Clone Script does not require much time for customization. And so, the cost would be comparatively less.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Soon to hit the market&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With the customization &amp;amp; scalability element, the OnlyFans Clone app can be launched sooner, depending on your platform selection. When choosing multiple platforms, you can aim for wider coverage. With the inclusion of features such as multilingual and multi-currency, you can leap into the global market without any barriers.    &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why wait? Launch OnlyFans Clone&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Why can’t you leverage a great opportunity? Utilize the clone script and launch OnlyFans Clone in 2022. Everything to do is, approach the company that is experienced in crafting the premium subscription-based celebrity app. &lt;/p&gt;

</description>
      <category>onlyfansclone</category>
      <category>onlyfansclonescript</category>
      <category>onlyfanscloneappdevelopment</category>
    </item>
    <item>
      <title>Node.js: multi-target debugging QEWDjs using Visual Studio Code</title>
      <author>InterSystems Developer</author>
      <pubDate>Fri, 19 Nov 2021 13:27:41 +0000</pubDate>
      <link>https://dev.to/intersystems/nodejs-multi-target-debugging-qewdjs-using-visual-studio-code-3b0g</link>
      <guid>https://dev.to/intersystems/nodejs-multi-target-debugging-qewdjs-using-visual-studio-code-3b0g</guid>
      <description>&lt;p&gt;One of the most important features during application development is the ability to debug your code easily. Because of the asynchrnous nature, a standard Node.js application server works single-threaded by default. When you are developing applications using an IDE like Visual Studio Code, you can very easily debug your Node.js process:&lt;/p&gt;

&lt;p&gt;First, &lt;a href="https://code.visualstudio.com/"&gt;download the free Visual Studio Code IDE&lt;/a&gt; (@code) and install it on your development machine.&lt;/p&gt;

&lt;p&gt;We will start with basic debugging using a very small test.js file and go to the debug view:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lOgu56vK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o5yer7xqq6pgiuz9pu4r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lOgu56vK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o5yer7xqq6pgiuz9pu4r.png" alt="Image description" width="880" height="663"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You'll notice we need to define a debug configuration first (at the top, click on "No configurations" and select "Add configuration". You'll see a "launch.json" file is created and select "Node.js: launch program":&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qnw4pSa2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qs935jfvcnbmxzhkb03n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qnw4pSa2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qs935jfvcnbmxzhkb03n.png" alt="Image description" width="880" height="663"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Modify the "program" property to the filename you want to launch and debug ("program": "${workspaceFolder}/test.js" in this case) and save launch.json. Now you can start debugging - click in the left column of the first "var" line in our "test.js" file to set a breakpoint, start the debug session with the green "play" button at the top (you'll notice that your "Launch program" configuration was automatically selected in the debugger). The debugger stops at our breakpoint:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T_ZieSKO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxlfblm9un8s6g14nbrv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T_ZieSKO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxlfblm9un8s6g14nbrv.png" alt="Image description" width="880" height="663"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;You can step now through the code, view variable contents hovering over the variable names in your code, watch variables, ... (see all possibilities in the Debug menu). You'll see that a debug toolbar is active at the top with the usual debug icons. Also notice on the left in "loaded scripts" that our node.js script is loaded and running. &lt;/p&gt;

&lt;p&gt;In this case, we launched the Node.js process "inside" the @code IDE and debug output is available in the "debug output" window:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ym8iemiK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/01yrlzgl8jcjuieb2o4v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ym8iemiK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/01yrlzgl8jcjuieb2o4v.png" alt="Image description" width="880" height="663"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;This is the "standard" way of debugging a Node.js application server - @code is by default using the standard "debug" protocol built into Node.js.&lt;/p&gt;

&lt;p&gt;You can also debug a Node.js application in a different way: when you run your Node.js application in it's own commandline window, you can "attach" the @code debugger to it. This is the recommended way to debug Node.js applications in a normal (development) setting. To do this, we first add a new "attach" debug configuration:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z_ZDnR_E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e7uctj58w8tsmg05ms99.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z_ZDnR_E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e7uctj58w8tsmg05ms99.png" alt="Image description" width="880" height="663"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Go to the debug configuration inside  launch.json and modify it as shown here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FqQ_o7nb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s1gkx01gz4iusm4x2onp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FqQ_o7nb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s1gkx01gz4iusm4x2onp.png" alt="Image description" width="880" height="663"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Now launch your Node.js application in it's own commandline window and add both the "inspect" and "debug-brk" flag to debug it ("inspect" is the newest debug protocol in Node.js, please make sure you have at least Node.js version 6.9.x or higher installed for this):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7mDOQug2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6de7i0nnmfn2tvq5vrsp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7mDOQug2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6de7i0nnmfn2tvq5vrsp.png" alt="Image description" width="659" height="482"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You see your application is started and the debugger is listening on the default inspector port 9229. Because we used the "debug-brk" flag, execution stopped at your first code line and node is waiting for an external debugger (@code in our case) to connect to it. Now go to @code and select the "Attach" debug configuration (don't forget to save "launch.json" first!), now set only a breakpoint on line 3 and start debugging:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sVmllzTv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idpdfimrlvwtskp5vlqs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sVmllzTv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idpdfimrlvwtskp5vlqs.png" alt="Image description" width="880" height="663"&gt;&lt;/a&gt;&lt;br&gt;
  You see the code is stopped at the first line (because we used the "debug-brk" flag) and we can debug again as usual. Output is appearing in our commandline window now. You see the debugger is attached too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HzQC_4Wh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g7bvb7j027ziystgzq98.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HzQC_4Wh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g7bvb7j027ziystgzq98.png" alt="Image description" width="659" height="482"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;When finished, disconnect the @code debugger with the rightmost icon in the debug toolbar. The node.js process in your commandline window will stop as soon as the @code debugger has disconnected.&lt;/p&gt;




&lt;p&gt;Above you could see how to debug a Node.js application running in a single thread. However, to take advantage of multi-core CPU's, Node.js also allows you to fork multiple child processes in your application using it's &lt;a href="https://nodejs.org/api/child_process.html"&gt;Child process module&lt;/a&gt;. In your code, you'll typically use the fork() method to start additional child processes. When you want to debug these, you'll need to launch them each with a different "inspector" port, because the Node.js child process module doesn't detect automatically the master process was started in debugging mode and you need to "fix" the commandline arguments for the child processes you are forking. A good way to do this is to increment the standard inspect port when forking each child process like the code in the &lt;a href="https://github.com/robtweed/ewd-qoper8/blob/master/lib/master/proto/startWorker.js"&gt;ewd-qoper8 module&lt;/a&gt; does for you inside the &lt;a href="http://qewdjs.com/"&gt;QEWDjs&lt;/a&gt; application server framework:&lt;/p&gt;

&lt;p&gt;  var q.worker.inspectPort = 9229;&lt;br&gt;  var q.worker.debugPort = 5858;&lt;br&gt;  ...&lt;br&gt;  var cp = require('child_process');&lt;br&gt;  ...&lt;br&gt;  var execArgv = process.execArgv.map(function (option, index) {&lt;br&gt;    if (option.indexOf('--inspect') !== -1) {&lt;br&gt;      q.worker.inspectPort++;;&lt;br&gt;      return '--inspect=' + q.worker.inspectPort;&lt;br&gt;    }&lt;br&gt;    else if ((option.indexOf('--debug') !== -1) &amp;amp;&amp;amp; (option.indexOf('--debug-brk') === -1)) {&lt;br&gt;      q.worker.debugPort++;&lt;br&gt;      return '--debug=' + q.worker.debugPort;&lt;br&gt;    }&lt;br&gt;    else {&lt;br&gt;      return option;&lt;br&gt;    }&lt;br&gt;  });&lt;br&gt;  var workerProcess = cp.fork(this.worker.loaderFilePath, args, { execArgv: execArgv, env: process.env });&lt;br&gt; &lt;/p&gt;

&lt;p&gt;As each child process has it's own debug port, you'll no longer get "Unable to open devtools socket: address already in use" errors when forking child processes with debugging options.&lt;/p&gt;

&lt;p&gt;FYI, if you use the Node.js &lt;a href="https://nodejs.org/api/cluster.html"&gt;cluster module&lt;/a&gt; in your applications, each forked worker will get it's &lt;a href="https://nodejs.org/api/cluster.html#cluster_cluster_settings"&gt;inspectPort incremented automatically&lt;/a&gt;. The cluster module fixes this for you.&lt;/p&gt;

&lt;p&gt;Because you want to debug these more complex situations where your Node.js application server is running a master process and multiple child/worker processes, we will use the technique above to run each process on it's own inspect port. We can now easily define a &lt;a href="https://code.visualstudio.com/docs/editor/debugging#_multitarget-debugging"&gt;multi-target debugging&lt;/a&gt; configuration and debug seamlessly as you do with a single-threaded server instance.&lt;/p&gt;

&lt;p&gt;I will show here how this works with a QEWDjs back-end server as I used in my &lt;a href="https://community.intersystems.com/post/nodejs-create-basic-web-app-react-part-2"&gt;React example part 2&lt;/a&gt;. In this example, the QEWDjs server has a poolSize of 1, this means you have a single master process and one worker process. The worker processes are started on-demand by default, but QEWDjs allows you to prefork them by adding a "poolPrefork: true" parameter in your QEWD config. This is necessary to make sure all worker processes are running before we start debugging in @code.&lt;/p&gt;

&lt;p&gt;In this debug setting, you will launch your QEWD server in debug mode using inspect mode with an optional starting port:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--egIgXpWU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ftd0kmjzaik90iayzzdr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--egIgXpWU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ftd0kmjzaik90iayzzdr.png" alt="Image description" width="659" height="482"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;This means your master process will listen on port 9329 and your first worker on port 9330, additional workers will listen on 9331, ...&lt;/p&gt;

&lt;p&gt;In @code, we will now define all debug configurations needed to attach to both Node.js processes. Attaching to the QEWDjs server is the way to go here because when you are using the microservices capabilities, you can have multiple QEWD server instances running on your development environment and sending the output to one single debug console in @code could become very confusing as you don't know which instance output is coming from.&lt;/p&gt;

&lt;p&gt;Go to @code and add two configurations as shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gNdX4JLA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fabvxtg6pf399cdj5oz6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gNdX4JLA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fabvxtg6pf399cdj5oz6.png" alt="Image description" width="880" height="663"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;We added an "attach" debug configuration for the master process and one for the worker process (on different ports). &lt;/p&gt;

&lt;p&gt;Now we can just use the "compounds" feature in @code to tie together both debug configs to one compound debug config we can start at the same time:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZZw45NGV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zephydwjcrdfcr3vlgx2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZZw45NGV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zephydwjcrdfcr3vlgx2.png" alt="Image description" width="880" height="663"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Now start debugging by selecting the "multi-target debugging" config at the top and watch the debugger attaching to both Node.js processes:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--epbKuVFd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0upbrgpxqv1dzqs35s1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--epbKuVFd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0upbrgpxqv1dzqs35s1.png" alt="Image description" width="659" height="482"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;You see "Debugger attached" appearing twice now. You can now easily debug in @code the same way as you would debug a single-threaded instance of Node.js - you won't see any difference. Just add your breakpoints, single-step through the code, ...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hVxSmDTg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2pdhh9o6zifl2owh6z9a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hVxSmDTg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2pdhh9o6zifl2owh6z9a.png" alt="Image description" width="880" height="663"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;You'll notice a difference at the left side: you see multiple processes running now on the call stack and in loaded scripts.&lt;/p&gt;

&lt;p&gt;To stop debugging, you'll need to disconnect all debug connections (you'll have to click "disconnect" in the top toolbar as many times as you have Node.js processes).&lt;/p&gt;

&lt;p&gt;This feature in @code makes it very powerful and as I outlined above, you can easily extend this to multiple server instances and more workers: just start the first one on the default debug port with:&lt;/p&gt;

&lt;p&gt;node --inspect=9229 qewd-start.js&lt;/p&gt;

&lt;p&gt;and the second instance with:&lt;/p&gt;

&lt;p&gt;node --inspect=9329 qewd-start-microservices.js&lt;/p&gt;

&lt;p&gt;Just add more debug configurations and compounds accordingly and you can debug as many processes simultaneously as you like!&lt;/p&gt;

&lt;p&gt;QEWDjs takes care of assigning debug ports correctly to each worker started.&lt;/p&gt;

&lt;p&gt;If you combine the debugging functionality for your Node.js JavaScript code with the &lt;a href="http://www.georgejames.com/serenji"&gt;Serenji&lt;/a&gt; debugger and/or Studio/Atelier, you can debug your extrinsic functions you can call from JavaScript with the &lt;a href="https://www.npmjs.com/package/qewd-cos"&gt;qewd-cos&lt;/a&gt; module too in Caché (adding the power of classes and SQL to JavaScript!).&lt;/p&gt;

&lt;p&gt;Happy debugging! &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JOeL2QOS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://community.intersystems.com/sites/all/libraries/ckeditor/plugins/smiley/images/wink_smile.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JOeL2QOS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://community.intersystems.com/sites/all/libraries/ckeditor/plugins/smiley/images/wink_smile.png" alt="wink" title="wink" width="23" height="23"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>studio</category>
      <category>node</category>
    </item>
    <item>
      <title>ForEach, Map, Filter and Reduce in Javascript</title>
      <author>Kamlesh Nehra</author>
      <pubDate>Fri, 19 Nov 2021 13:22:04 +0000</pubDate>
      <link>https://dev.to/unalo_baayriyo/foreach-map-filter-and-reduce-in-javascript-gi9</link>
      <guid>https://dev.to/unalo_baayriyo/foreach-map-filter-and-reduce-in-javascript-gi9</guid>
      <description>&lt;p&gt;ForEach, Map, reduce, and filter are all array methods in JavaScript. Map, reduce, and filter will iterate over an array and perform a transformation or computation and return some value while ForEach is used to just iterate over an array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ForEach:&lt;/strong&gt; ForEach method executes a provided function once for each array element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ex: 
let arrA = [1,2,3,4]
arrA.forEach(element =&amp;gt; console.log(element));
// [1,2,3,4]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Map:&lt;/strong&gt; Execute on each element of array and return new array with same length.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arrA = [1,2,3,4]
let arrB = arrA.map(_i =&amp;gt; i*2)
console.log(arrB)

// [1,4,6,8]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Filter:&lt;/strong&gt; Filter basically return new array with elements which satisfy condition or filter out the elements which not satisfy the condition.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arrA = [1,2,3,4]
let arrB = arrA.filter(_i =&amp;gt; i%2)
console.log(arrB)

// [2,4]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Reduce:&lt;/strong&gt; Reduce basically return a single value. While using it we have do define a initial value of accumulator and in each iteration we have to perform some operation and that will be added to accumulator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arrA = [1,2,3,4]
let initialVal=0
let result = arrA.reduce((accu, val) =&amp;gt; val + accu , initialVal);
console.log(result)

// 10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Polyfill for ForEach, Map, Filter and Reduce&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A polyfill is a piece of code (usually JavaScript on the Web) used to provide modern functionality on older browsers that do not natively support it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
Array.prototype.customForEach = function(callback) {
    for (var i = 0; i &amp;lt; this.length; i++)
        callback(this[i], i, this);
};

Array.prototype.customMap = function(callback) {
    arr = [];
    for (var i = 0; i &amp;lt; this.length; i++)
        arr.push(callback(this[i], i, this));
    return arr;
};

Array.prototype.customFilter = function(callback, context) {
    arr = [];
    for (var i = 0; i &amp;lt; this.length; i++) {
        if (callback.call(context, this[i], i, this))
            arr.push(this[i]);
    }
    return arr;
};

Array.prototype.customReduce = function(callback, initialVal) {
    var accum = (initialVal === undefined) ? undefined : initialVal;
    for (var i = 0; i &amp;lt; this.length; i++) {
        if (accum !== undefined){
            accum = callback.call(undefined, accum, this[i], 
                   i, this);
        } else{
            accum = this[i];
        }
    }
    return accum;
};


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>react</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>5 Underrated resources to learn Git and Github</title>
      <author>ifrah</author>
      <pubDate>Fri, 19 Nov 2021 13:15:09 +0000</pubDate>
      <link>https://dev.to/ifrah/5-underrated-resources-to-learn-git-and-github-4edi</link>
      <guid>https://dev.to/ifrah/5-underrated-resources-to-learn-git-and-github-4edi</guid>
      <description>&lt;p&gt;&lt;strong&gt;Save you time and use these resources to perfect your Git and GitHub knowledge.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This week, I finally built up the courage to deep dive into learning Git and GitHub without having to relying on GUI and using the command line. We are fortunate enough to have unlimited resources available to us at the click of the button. However, this can quickly become overwhelming and result in spending more time browsing articles and tutorials instead of actually learning! I have curated this list with hopes that time and energy can be saved.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1github-minesweeperprofydev%E2%80%8A%E2%80%8Afree"&gt;
  &lt;/a&gt;
  1.&lt;a href="https://profy.dev/project/github-minesweeper"&gt;Github Minesweeper[Profy.dev - Free]&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This is one of the best free courses to actively learn Git through playing a game with a bot.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xzrd_H1M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/chhjbdn3pgttuy2qmfd0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xzrd_H1M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/chhjbdn3pgttuy2qmfd0.png" alt="screenshot of the website profy.dev" width="880" height="581"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is a hand-on learning experience which helps prepare your Git skills for a job in a real-world team. It combines practice, theory and repetition to create the best learning environment to allow all the skills you learn to stick. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-version-control-with-gitudacity%E2%80%8A%E2%80%8Afree"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://www.udacity.com/course/version-control-with-git--ud123"&gt;Version Control with Git[Udacity - Free]&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This is a Udacity course which covers the essentials of using the version control system Git which takes approximately 4 weeks on average to complete. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RwKk7_It--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5lboy0zuw89lwz7moij.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RwKk7_It--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5lboy0zuw89lwz7moij.png" alt="Screenshot of udacity Git course landing page" width="880" height="524"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This course teaches you up to date skills using self-paced learning and interactive quizzes and tasks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3hacktoberfest"&gt;
  &lt;/a&gt;
  3.&lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Every October, Hacktoberfest takes place and is an event which encourages participation in the open source community with prices upon completion. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gc-_xUZp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lfduqoktc7nypjx51i4w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gc-_xUZp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lfduqoktc7nypjx51i4w.png" alt="Screenshot of Hacktoberfest landing page" width="880" height="523"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Highly recommended for beginners who wish to put into practice their Git skills in real world projects. Notably, most beginner repositories have step by step instructions of how to contribute to their projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4oh-my%C2%A0git"&gt;
  &lt;/a&gt;
  4.&lt;a href="https://ohmygit.org/"&gt;Oh My Git!&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Oh My Git! is an open source game about learning Git created for complete beginners. It is fun and interactive which is a refreshing break from the usual theoretical courses found online.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lp3UhiM4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ku55efim76rhrgtzv2rc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lp3UhiM4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ku55efim76rhrgtzv2rc.png" alt="Screenshot of Oh My Git! Gameplay" width="880" height="496"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It uses card game mechanics tasking players to work on repositories with others and fixing mistakes. It uses a mix of arrows and command cards to illustrate how changes in repositories flow. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5the-odin%C2%A0project"&gt;
  &lt;/a&gt;
  5.&lt;a href="https://www.theodinproject.com/paths/foundations/courses/foundations/lessons/git-basics"&gt;The Odin Project&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Odin Project collects the best resources to supplement your learning and present them in a logical order. In their Git Basics course provide clear step by step instructions are given to complete assignments as well as knowledge checks and cheatsheets throughout the course. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--az0oxmBM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ed304johfle98fcrv8s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--az0oxmBM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ed304johfle98fcrv8s.png" alt="Screenshot of The Odin Project page" width="880" height="749"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Odin Project also has a community via discord chatrooms which provides additional help and motivation.&lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How To Install Vue 3 in Laravel 8 From Scratch</title>
      <author>Suresh Ramani</author>
      <pubDate>Fri, 19 Nov 2021 13:12:37 +0000</pubDate>
      <link>https://dev.to/sureshramani/how-to-install-vue-3-in-laravel-8-from-scratch-46io</link>
      <guid>https://dev.to/sureshramani/how-to-install-vue-3-in-laravel-8-from-scratch-46io</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-vuejs"&gt;
  &lt;/a&gt;
  What is Vue.js?
&lt;/h2&gt;

&lt;p&gt;Vue is a progressive framework for building user interfaces. Unlike other monolithic frameworks, Vue is designed from the ground up to be incrementally adoptable. The core library is focused on the view layer only and is easy to pick up and integrate with other libraries or existing projects. Vue.js is a popular front-end framework for building Single Page Apps. It provides structure and abstraction. We can also create a server-side rendering application using Vue.js, It's helpful for SEO (Search Engine Optimization).&lt;/p&gt;

&lt;p&gt;In older versions of Laravel, Vue was set up automatically with every new installation. However, in newer versions, you have to set it up yourself.&lt;/p&gt;

&lt;p&gt;Luckily, the laravel/ui the package provides an easy way to set up Vue in your Laravel application.&lt;/p&gt;

&lt;p&gt;A step-by-step guide to installing, mounting, and displaying Vue 3 components in a base Laravel 8 install.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-install-laravel-project"&gt;
  &lt;/a&gt;
  Step 1: Install Laravel Project
&lt;/h3&gt;

&lt;p&gt;First, open Terminal and run the following command to create a fresh laravel project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;composer create-project --prefer-dist laravel/laravel laravel-vue3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or, if you have installed the Laravel Installer as a global composer dependency:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;laravel new laravel-vue3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-2-install-vue-amp-dependencies"&gt;
  &lt;/a&gt;
  Step 2: Install Vue &amp;amp; Dependencies
&lt;/h3&gt;

&lt;p&gt;First, we'll want to install Vue 3 and our dev dependencies:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save vue@next &amp;amp;&amp;amp; npm install --save-dev vue-loader@next
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-3-prepare-mix-for-vue"&gt;
  &lt;/a&gt;
  Step 3: Prepare Mix for Vue
&lt;/h3&gt;

&lt;p&gt;Let's go to our webpack.mix.js file and add a .vue() method chain. Our mix file should now look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const mix = require('laravel-mix');

/*
 |--------------------------------------------------------------------------
 | Mix Asset Management
 |--------------------------------------------------------------------------
 |
 | Mix provides a clean, fluent API for defining some Webpack build steps
 | for your Laravel applications. By default, we are compiling the CSS
 | file for the application as well as bundling up all the JS files.
 |
 */

mix.js('resources/js/app.js', 'public/js')
    .vue()
    .postCss('resources/css/app.css', 'public/css', [
        //
    ]);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-4-create-your-vue-3-component"&gt;
  &lt;/a&gt;
  Step 4: Create your Vue 3 component
&lt;/h3&gt;

&lt;p&gt;Next, let's go ahead and create our Vue 3 component. In the spirit of adventure, let's use the new composition API. Create a file /resources/js/components/Welcome.vue as so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;template&amp;gt;
    &amp;lt;h1&amp;gt;{{ title }}&amp;lt;/h1&amp;gt;
&amp;lt;/template&amp;gt;
&amp;lt;script&amp;gt;
export default {
    setup: () =&amp;gt; ({
        title: 'How To Install Vue 3 in Laravel 8 From Scratch'
    })
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-5-import-vue-to-the-laravel-javascript-file"&gt;
  &lt;/a&gt;
  Step 5: Import Vue to the Laravel javascript file
&lt;/h3&gt;

&lt;p&gt;First, we are not going to import Vue, we are going to import a named export from Vue 3 called createApp.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { createApp } from 'vue'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;let's import our Welcome component and create the Vue app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import HelloWorld from './components/Welcome.vue';

const app = createApp({});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, our app.js the file will look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;require('./bootstrap')

import { createApp } from 'vue'
import HelloWorld from './components/Welcome'

const app = createApp({})

app.component('hello-world', HelloWorld)

app.mount('#app')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-6-prepare-blade-for-vue"&gt;
  &lt;/a&gt;
  Step 6: Prepare Blade for Vue
&lt;/h3&gt;

&lt;p&gt;Now let us create an element that has that id. To do this, we can remove the standard markup found in our welcome.blade.php file and replace it with this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="{{ str_replace('_', '-', app()-&amp;gt;getLocale()) }}"&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;meta charset="utf-8"&amp;gt;
        &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1"&amp;gt;

        &amp;lt;title&amp;gt;Laravel&amp;lt;/title&amp;gt;

        &amp;lt;!-- Fonts --&amp;gt;
        &amp;lt;link href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&amp;amp;display=swap" rel="stylesheet"&amp;gt;

        &amp;lt;!-- Styles --&amp;gt;
        &amp;lt;style&amp;gt;
            /*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}a{background-color:transparent}[hidden]{display:none}html{font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}*,:after,:before{box-sizing:border-box;border:0 solid #e2e8f0}a{color:inherit;text-decoration:inherit}svg,video{display:block;vertical-align:middle}video{max-width:100%;height:auto}.bg-white{--bg-opacity:1;background-color:#fff;background-color:rgba(255,255,255,var(--bg-opacity))}.bg-gray-100{--bg-opacity:1;background-color:#f7fafc;background-color:rgba(247,250,252,var(--bg-opacity))}.border-gray-200{--border-opacity:1;border-color:#edf2f7;border-color:rgba(237,242,247,var(--border-opacity))}.border-t{border-top-width:1px}.flex{display:flex}.grid{display:grid}.hidden{display:none}.items-center{align-items:center}.justify-center{justify-content:center}.font-semibold{font-weight:600}.h-5{height:1.25rem}.h-8{height:2rem}.h-16{height:4rem}.text-sm{font-size:.875rem}.text-lg{font-size:1.125rem}.leading-7{line-height:1.75rem}.mx-auto{margin-left:auto;margin-right:auto}.ml-1{margin-left:.25rem}.mt-2{margin-top:.5rem}.mr-2{margin-right:.5rem}.ml-2{margin-left:.5rem}.mt-4{margin-top:1rem}.ml-4{margin-left:1rem}.mt-8{margin-top:2rem}.ml-12{margin-left:3rem}.-mt-px{margin-top:-1px}.max-w-6xl{max-width:72rem}.min-h-screen{min-height:100vh}.overflow-hidden{overflow:hidden}.p-6{padding:1.5rem}.py-4{padding-top:1rem;padding-bottom:1rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.pt-8{padding-top:2rem}.fixed{position:fixed}.relative{position:relative}.top-0{top:0}.right-0{right:0}.shadow{box-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px 0 rgba(0,0,0,.06)}.text-center{text-align:center}.text-gray-200{--text-opacity:1;color:#edf2f7;color:rgba(237,242,247,var(--text-opacity))}.text-gray-300{--text-opacity:1;color:#e2e8f0;color:rgba(226,232,240,var(--text-opacity))}.text-gray-400{--text-opacity:1;color:#cbd5e0;color:rgba(203,213,224,var(--text-opacity))}.text-gray-500{--text-opacity:1;color:#a0aec0;color:rgba(160,174,192,var(--text-opacity))}.text-gray-600{--text-opacity:1;color:#718096;color:rgba(113,128,150,var(--text-opacity))}.text-gray-700{--text-opacity:1;color:#4a5568;color:rgba(74,85,104,var(--text-opacity))}.text-gray-900{--text-opacity:1;color:#1a202c;color:rgba(26,32,44,var(--text-opacity))}.underline{text-decoration:underline}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.w-5{width:1.25rem}.w-8{width:2rem}.w-auto{width:auto}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}@media (min-width:640px){.sm\:rounded-lg{border-radius:.5rem}.sm\:block{display:block}.sm\:items-center{align-items:center}.sm\:justify-start{justify-content:flex-start}.sm\:justify-between{justify-content:space-between}.sm\:h-20{height:5rem}.sm\:ml-0{margin-left:0}.sm\:px-6{padding-left:1.5rem;padding-right:1.5rem}.sm\:pt-0{padding-top:0}.sm\:text-left{text-align:left}.sm\:text-right{text-align:right}}@media (min-width:768px){.md\:border-t-0{border-top-width:0}.md\:border-l{border-left-width:1px}.md\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}@media (min-width:1024px){.lg\:px-8{padding-left:2rem;padding-right:2rem}}@media (prefers-color-scheme:dark){.dark\:bg-gray-800{--bg-opacity:1;background-color:#2d3748;background-color:rgba(45,55,72,var(--bg-opacity))}.dark\:bg-gray-900{--bg-opacity:1;background-color:#1a202c;background-color:rgba(26,32,44,var(--bg-opacity))}.dark\:border-gray-700{--border-opacity:1;border-color:#4a5568;border-color:rgba(74,85,104,var(--border-opacity))}.dark\:text-white{--text-opacity:1;color:#fff;color:rgba(255,255,255,var(--text-opacity))}.dark\:text-gray-400{--text-opacity:1;color:#cbd5e0;color:rgba(203,213,224,var(--text-opacity))}.dark\:text-gray-500{--tw-text-opacity:1;color:#6b7280;color:rgba(107,114,128,var(--tw-text-opacity))}}
        &amp;lt;/style&amp;gt;

        &amp;lt;style&amp;gt;
            body {
                font-family: 'Nunito', sans-serif;
            }
        &amp;lt;/style&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body class="antialiased"&amp;gt;
        &amp;lt;div id="app"&amp;gt;
            &amp;lt;div class="relative flex items-top justify-center min-h-screen bg-gray-100 sm:items-center py-4 sm:pt-0"&amp;gt;
                &amp;lt;hello-world/&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;script src="{{ mix('js/app.js') }}"&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, we have a div with the id app that will be replaced by our Vue app.&lt;/p&gt;

&lt;p&gt;Below we have a script tag that references not the app.js we have in resources/js but within our public/js folder. This file is the end result of our webpack build process.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-7-compile-javascript-assets"&gt;
  &lt;/a&gt;
  Step 7: Compile Javascript Assets
&lt;/h3&gt;

&lt;p&gt;Lastly, we'll run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run watch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run php artisan serve and check &lt;a href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for reading this blog.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>vue</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to Start An Online Fitness Business 
</title>
      <author>Charlotte Jane</author>
      <pubDate>Fri, 19 Nov 2021 13:11:11 +0000</pubDate>
      <link>https://dev.to/charlot/how-to-start-an-online-fitness-business-2jl</link>
      <guid>https://dev.to/charlot/how-to-start-an-online-fitness-business-2jl</guid>
      <description>&lt;p&gt;In 5 Easy Steps, Launch Your &lt;a href="https://flicknexs.com/?utm_source=google&amp;amp;utm_medium=dev&amp;amp;utm_campaign=charlotte&amp;amp;utm_id=ott&amp;amp;utm_term=utm_ott"&gt;Online Fitness Business&lt;/a&gt;&lt;br&gt;
To start an online fitness studio, you'll need to follow these five steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Choose a business model to follow.&lt;/li&gt;
&lt;li&gt;Make a Content Strategy.&lt;/li&gt;
&lt;li&gt;Create your own website.&lt;/li&gt;
&lt;li&gt;Decide on your prices.&lt;/li&gt;
&lt;li&gt;Find out who your target market is.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#1-choose-a-business-model"&gt;
  &lt;/a&gt;
  1. Choose a business model:
&lt;/h2&gt;

&lt;p&gt;There are two sorts of &lt;a href="https://flicknexs.com/?utm_source=google&amp;amp;utm_medium=dev&amp;amp;utm_campaign=charlotte&amp;amp;utm_id=ott&amp;amp;utm_term=utm_ott"&gt;business models for online fitness&lt;/a&gt; studios. These are based on the video on demand (VOD), which is the backbone of your studio:&lt;/p&gt;

&lt;p&gt;1.People pay a one-time cost for your content in transactional (TVOD).&lt;br&gt;
2.People pay a monthly price for access to SVOD (subscription video on demand).&lt;br&gt;
The type of business you run will be determined by the model you adopt. As a result, it's important to know what each of them does.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;The Pay-As-You-Train Model is Transactional&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
People pay a one-time fee to access or own the videos you generate with Transactional Video On Demand (TVOD).&lt;/p&gt;

&lt;p&gt;The transactional business model is ideal if you only want to educate one single skill, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This is a unique class.&lt;/li&gt;
&lt;li&gt;Workout schedule.&lt;/li&gt;
&lt;li&gt;A workshop or a seminar.&lt;/li&gt;
&lt;li&gt;You may also design a "bundle" for your clients that includes everything they need.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's pretend you're a strength-training personal trainer who's come up with a killer 12-week exercise schedule that makes everyone feel like an Olympian.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Everything people need to see outcomes is included in the plan:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Plans for training.&lt;/li&gt;
&lt;li&gt;Plans for nutrition.&lt;/li&gt;
&lt;li&gt;Video workouts&lt;/li&gt;
&lt;li&gt;Obstacles to fitness&lt;/li&gt;
&lt;li&gt;Suggestions for recovery&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You might bundle all of the videos and resources from the training programme, such as downloadable PDFs, into a single package that you offer for a premium ticket price. Customers can access all of the content indefinitely once they purchase it.&lt;/p&gt;

&lt;p&gt;Let's look at the advantages and disadvantages of this business plan in more detail.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PROS:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You have the option of making a high-ticket offer.&lt;/li&gt;
&lt;li&gt;You can market your product for years once it's finished.&lt;/li&gt;
&lt;li&gt;In-person and virtual clients can quickly find out about your online personal training business.&lt;/li&gt;
&lt;li&gt;Creating an affiliate offer for third-party trainers to sell is a simple way to enhance your business through referrals.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;CONS:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To keep the money coming in, you need to continue finding new customers.&lt;/li&gt;
&lt;li&gt;Your earnings aren't consistent or predictable.&lt;/li&gt;
&lt;li&gt;Creating complete online classes can take a long time.&lt;/li&gt;
&lt;li&gt;To make money, you must devote a significant amount of effort to marketing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Membership &lt;a href="https://flicknexs.com/?utm_source=google&amp;amp;utm_medium=dev&amp;amp;utm_campaign=charlotte&amp;amp;utm_id=ott&amp;amp;utm_term=utm_ott"&gt;Business Model&lt;/a&gt; is based on subscriptions.&lt;br&gt;
People who subscribe to subscription video on demand (SVOD) must pay a monthly charge to see your videos. It's similar to having a Netflix subscription for your workout DVDs.&lt;/p&gt;

&lt;p&gt;1.This implies they can watch your movies if they pay their monthly cost.&lt;br&gt;
2.They will lose access if they do not pay their price.&lt;/p&gt;

&lt;p&gt;For fitness experts wishing to develop a comprehensive, client-focused online training business, SVOD is the ideal business strategy.&lt;/p&gt;

&lt;p&gt;It enables you to produce, update, and share movies that will help your clients achieve actual results, no matter where they are in the world.&lt;/p&gt;

&lt;p&gt;You have the option to post...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a variety of workout classes&lt;/li&gt;
&lt;li&gt;a variety of course options&lt;/li&gt;
&lt;li&gt;You may update and renew nutritional advice, recipes, eBooks, challenges, and workshops in real-time to guarantee your clients get the most up-to-date information.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's look at the advantages and disadvantages of this company plan.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PROS:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can make a steady income.&lt;/li&gt;
&lt;li&gt;Your earnings are more consistent.&lt;/li&gt;
&lt;li&gt;Customers stay subscribed for a longer period of time.&lt;/li&gt;
&lt;li&gt;The business model is designed to be scalable.&lt;/li&gt;
&lt;li&gt;This is something you can readily promote to both online and offline clientele.&lt;/li&gt;
&lt;li&gt;Repurposing video content for marketing purposes is simple.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;CONS:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You'll need to devote time to creating new content on a regular basis.&lt;/li&gt;
&lt;li&gt;Short-term income should be traded for long-term income.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-make-a-content-strategy"&gt;
  &lt;/a&gt;
  2. Make a Content Strategy
&lt;/h2&gt;

&lt;p&gt;It's time to choose your content now that you've established your business concept.&lt;/p&gt;

&lt;p&gt;We'll look at how you should format your content and offer it to your online clientele in particular. We'll leave the topic of video making up to you!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I'll go through two aspects of an online fitness studio:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The "broad picture" of what your studio will offer is called macro-level content.&lt;/li&gt;
&lt;li&gt;Micro-Level Content refers to how your content appears on a more personal level.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-create-a-website"&gt;
  &lt;/a&gt;
  3. Create a Website
&lt;/h2&gt;

&lt;p&gt;Your website serves as the storefront for your &lt;a href="https://flicknexs.com/?utm_source=google&amp;amp;utm_medium=dev&amp;amp;utm_campaign=charlotte&amp;amp;utm_id=ott&amp;amp;utm_term=utm_ott"&gt;online fitness&lt;/a&gt; studio. It's where people will go to learn more about you, see your prices, and see if your training style is right for them.&lt;/p&gt;

&lt;p&gt;A well-designed website is vital for an internet business to succeed. You'll also need to pick a platform that supports the type of business you want to start.&lt;/p&gt;

&lt;p&gt;For certain firms, general website builders can be useful, but:&lt;/p&gt;

&lt;p&gt;You'll need an all-in-one platform that specialises in video monetization if you want to start an &lt;a href="https://flicknexs.com/?utm_source=google&amp;amp;utm_medium=dev&amp;amp;utm_campaign=charlotte&amp;amp;utm_id=ott&amp;amp;utm_term=utm_ott"&gt;online fitness studio&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With our "plug and play" website builder, Flicknexs can help you create a great storefront and manage your business from a single, simple dashboard.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our built-in tools can assist you in the following ways:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make your own video landing pages and website.&lt;/li&gt;
&lt;li&gt;You can easily upload and organise your videos.&lt;/li&gt;
&lt;li&gt;Make money from your content the way you want.&lt;/li&gt;
&lt;li&gt;Accept payments from all across the world.&lt;/li&gt;
&lt;li&gt;To reach audiences in real-time, use live streaming.&lt;/li&gt;
&lt;li&gt;Keep an eye on subscription growth and churn.&lt;/li&gt;
&lt;li&gt;Take control of your audience.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You have everything you need to establish, launch, and build your video business if you use the correct video platform. This provides you with great control over how you establish your online studio.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-decide-on-your-pricing"&gt;
  &lt;/a&gt;
  4. Decide on your pricing
&lt;/h2&gt;

&lt;p&gt;Many trainers struggle with getting online pricing right. While you may know how much your time on the gym floor is worth, figuring out how it translates to a virtual experience might be difficult.&lt;/p&gt;

&lt;p&gt;So we did some research into Flicknexs-hosted &lt;a href="https://flicknexs.com/?utm_source=google&amp;amp;utm_medium=dev&amp;amp;utm_campaign=charlotte&amp;amp;utm_id=ott&amp;amp;utm_term=utm_ott"&gt;online fitness&lt;/a&gt; studios to find what the best rate for your website is.&lt;/p&gt;

&lt;p&gt;According to our research, the average &lt;a href="https://flicknexs.com/?utm_source=google&amp;amp;utm_medium=dev&amp;amp;utm_campaign=charlotte&amp;amp;utm_id=ott&amp;amp;utm_term=utm_ott"&gt;online fitness studio&lt;/a&gt; is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Transactional &lt;/li&gt;
&lt;li&gt;Subscription&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, I propose starting at one of these pricing points and then increasing or decreasing based on the reaction from your audience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-make-a-personal-connection-with-your-audience"&gt;
  &lt;/a&gt;
  5. Make a Personal Connection With Your Audience
&lt;/h2&gt;

&lt;p&gt;Your new &lt;a href="https://flicknexs.com/?utm_source=google&amp;amp;utm_medium=dev&amp;amp;utm_campaign=charlotte&amp;amp;utm_id=ott&amp;amp;utm_term=utm_ott"&gt;online fitness&lt;/a&gt; studio's marketing strategy is critical. You must establish relationships with people who will benefit from your training and who will appreciate the information you are delivering.&lt;/p&gt;

&lt;p&gt;The easiest approach to do this, in my opinion, is to create a community.&lt;/p&gt;

&lt;p&gt;In the fitness sector, communities are critical because they connect people together around common fitness goals, training techniques, or even nutritional needs, and they foster a sense of belonging.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-summarise"&gt;
  &lt;/a&gt;
  To Summarise:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://flicknexs.com/?utm_source=google&amp;amp;utm_medium=dev&amp;amp;utm_campaign=charlotte&amp;amp;utm_id=ott&amp;amp;utm_term=utm_ott"&gt;online fitness studios&lt;/a&gt;, which take the shape of video-based training websites, enable you to make money, scale your business, and reach a limitless number of individuals.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In five easy steps, you can start your own online fitness business:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Make a decision on a business model:&lt;/strong&gt;&lt;br&gt;
The type of business you run will be determined by the model you adopt. You have three options: transactional, subscription, or a hybrid approach.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Make a content strategy:&lt;/strong&gt;&lt;br&gt;
It's time to choose your content now that you've established your business concept. Plan your content by looking at the micro and macro aspects of your business.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create your website by following these steps:&lt;/strong&gt;&lt;br&gt;
Your website serves as the storefront for your &lt;a href="https://flicknexs.com/?utm_source=google&amp;amp;utm_medium=dev&amp;amp;utm_campaign=charlotte&amp;amp;utm_id=ott&amp;amp;utm_term=utm_ott"&gt;online fitness studio&lt;/a&gt;. Flicknexs makes it simple to construct a one-of-a-kind website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Decide on your prices:&lt;/strong&gt;&lt;br&gt;
When it comes to selling fitness routines, choosing the right pricing structure is very important. You can sell a high-ticket item or a low-cost monthly membership that grows in value over time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Find and engage with your target market:&lt;/strong&gt;&lt;br&gt;
Marketing is an important aspect of running an &lt;a href="https://flicknexs.com/?utm_source=google&amp;amp;utm_medium=dev&amp;amp;utm_campaign=charlotte&amp;amp;utm_id=ott&amp;amp;utm_term=utm_ott"&gt;online fitness&lt;/a&gt; class. Spread the word about your cause and make contact with the people you wish to help.&lt;/p&gt;

</description>
      <category>fitness</category>
      <category>fitnessbusiness</category>
      <category>onlinefitness</category>
    </item>
    <item>
      <title>Why E-commerce Brands Prefer Shopify to Magento 2 Migration in 2021?</title>
      <author>AgentoSupport</author>
      <pubDate>Fri, 19 Nov 2021 13:06:48 +0000</pubDate>
      <link>https://dev.to/agentosupport/why-e-commerce-brands-prefer-shopify-to-magento-2-migration-in-2021-2jdi</link>
      <guid>https://dev.to/agentosupport/why-e-commerce-brands-prefer-shopify-to-magento-2-migration-in-2021-2jdi</guid>
      <description>&lt;p&gt;One major challenge that every e-commerce brand come across is the selection of the most reliable e-commerce platform to build an online store. It is the most important factor behind success of an online business.&lt;/p&gt;

&lt;p&gt;If you own a Shopify store, and facing issues related to website performance, improve traffic, grow sales and to optimize the e-store speed. The best you can do is to migrate to a powerful CMS like Magento 2.&lt;/p&gt;

&lt;p&gt;This blog gives you clear details why Shopify store owners should perform &lt;a href="https://www.agentosupport.com/magento-2-migration"&gt;Magento 2 migration&lt;/a&gt; and the steps to migrate your e-store to Magento 2.&lt;/p&gt;

&lt;h2&gt;Important Benefits to perform Shopify to Magento 2 Migration&lt;/h2&gt;

&lt;h3&gt;Out-of-the-box Functionality&lt;/h3&gt;

&lt;p&gt;Both Magento and Shopify come with innovative e-commerce features. But Magento consists of multiple features that Shopify lacks:&lt;/p&gt;

&lt;p&gt;-Coupons and discount codes&lt;br&gt;
-Unlimited inventory size&lt;br&gt;
-Multi-lingual support&lt;br&gt;
-Third-party extensions compatibility&lt;br&gt;
-SEO-Friendly &lt;/p&gt;

&lt;p&gt;Developers can easily improve performance by adding several essential extensions from the corresponding stores, Magento is the winner with over 5000+ extensions (free and paid).&lt;/p&gt;

&lt;h3&gt;Visual Customization&lt;/h3&gt;

&lt;p&gt;Shopify implements SaaS model not supporting visual customization of their stores similar to Magento offers. Shopify has limited number of themes like 100, merchants are limited to simple modifications work through theme settings using theme editor tool.&lt;/p&gt;

&lt;p&gt;On another hand, Magento is an open-source platform offering limitless possibility to customize business needs. To enjoy maximum benefits &lt;a href="https://www.agentosupport.com/hire-magento-developer"&gt;hire Magento developer&lt;/a&gt; from a development agency having relevant resources. Moreover, you can choose from hundreds of pre-made themes for your business usage.&lt;/p&gt;

&lt;h3&gt;Third-party Integration and Extension&lt;/h3&gt;

&lt;p&gt;While &lt;a href="https://www.agentosupport.com"&gt;Magento supports&lt;/a&gt; more than 5000 extensions, there are only around 200 extensions available in Shopify. They are complex and offer functionality that brings through workflow to your e-shop.&lt;br&gt;
One important thing, Magento extension is need to be purchased one-time with the full price right away. With Shopify, a fixed small amount is paid on monthly basis. At first, it seems to be economic; but in the long-term, with every extension integrated into e-store, the monthly operating costs will grow.&lt;/p&gt;

&lt;h3&gt;Business Model&lt;/h3&gt;

&lt;p&gt;There are 2 major versions of Magento: Open Source and Commerce. The Open-Source version is completely free and this is loved by users looking to switch from Shopify to Magento. This Commerce edition is great for larger stores with several powerful features in indexing, caching, backup, and inventory management tools.&lt;br&gt;
Once you planned to move from Shopify to Magento 2, it is crucial to find the best way to apply migration smoothly.&lt;/p&gt;

&lt;h3&gt;How to Migrate?&lt;/h3&gt;

&lt;p&gt;Migration process is not challenging but it may appear confusing to the people who lacks technical skills. But it’s not such a tedious and complex process as it is considered. Surely, Magento 2 development relies on the process of migration you prefer. &lt;/p&gt;

&lt;p&gt;If your online store covers multiple entities, it is the best process for Manual migration. Or, you’ll be spending a huge volume of time working monotonously and running into different mistakes like data loss or duplication.&lt;/p&gt;

&lt;p&gt;Another option is to reach out Magento developer who will perform data transfer for you. Although this seems a bit expensive, but you will not face any sort of problems regarding migration work.&lt;/p&gt;

&lt;h4&gt;Wrapping Up:&lt;/h4&gt;

&lt;p&gt;There are several methods present to migrate from Shopify to Magento. But we highly recommend to reach out &lt;a href="https://www.agentosupport.com/magento-ecommerce-development-and-solutions"&gt;Magento eCommerce Development Company&lt;/a&gt; for migration work. This is a great investment as it helps to save a lot of time and money for other business related tasks. Lastly, do not let the migration work delay your business development.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
      <category>discuss</category>
      <category>cms</category>
    </item>
  </channel>
</rss>
