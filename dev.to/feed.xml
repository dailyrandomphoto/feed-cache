<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Latest Javascript Feature you should know </title>
      <author>Kamran Ahmad</author>
      <pubDate>Fri, 24 Dec 2021 18:15:59 +0000</pubDate>
      <link>https://dev.to/officialkamran/latest-javascript-feature-you-should-know-4657</link>
      <guid>https://dev.to/officialkamran/latest-javascript-feature-you-should-know-4657</guid>
      <description>&lt;h2&gt;
  &lt;a href="#numeric-separator"&gt;
  &lt;/a&gt;
  Numeric Separator
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Large Numeric Literals Are Difficult For The Human Eye To Parse Quickly.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Numeric Separators Allow You To Add Underscores Between Digital In Literal Numeric, Which Makes Them More Readable.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let value1 = 250000000;
let value2 = 250_000_000; //same as value1 i.e 250000000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Underscores will be stripped out automatically when the files get parsed.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#nullish-coalescing"&gt;
  &lt;/a&gt;
  Nullish Coalescing
&lt;/h1&gt;

&lt;p&gt;The Nullish Coalescing Operator(??) allow us to check nullish values instead of falsy values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let count1 = 0;
let result1 = count1 ?? 1;
console.log(result1); //output - 0

let count2 = null;
let result2 = count2 ?? 1;
console.log(result2); // output - 1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nullish Coalescing Operator (??) is better choice than the logical OR operator (||) if you want to assign a default value to a variable.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#bigint"&gt;
  &lt;/a&gt;
  BigInt
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The maximum number you can store as an integer in JavaScript is 2^53-1&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;And BigInt allow you to go even beyond that, such that it provides a way to represent whole number larger than 2^53-1&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A BigInt is created by appending n to end of an Integer literal of by calling the function BigInt that creates BigInt form string, number et.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const Bigint = 123456789012345678901234567890123456789n;
const sameBigint = Bigint("123456789012345678901234567890n");
const BigintfronNumber = Bigint(10); //same as 10n
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#optional-chaining"&gt;
  &lt;/a&gt;
  Optional Chaining
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The Optional Chaining Operator allow you to access properties of potentially undefined/null values without throwing an exception.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;it allow you to access nested object property without worrying if the property exist or not.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const user = {
          dog: {
          name: "chee"
         }
       };

console.log(user.monkey?.name); //undefined 
console.log(user.dog? .name); // chee

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#promiseany"&gt;
  &lt;/a&gt;
  Promise.any()
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Promise.any() takes an iterable of promise objects.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;it returns a single promise that resolves as soon as any of the promises in the iterable fulfill. with the value of the fulfilled promise.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const promise1 = /*some*/;
const promise2 = /*some*/;
const promise3 = /*some*/;

const promises = [promise1, promise2, promise3];

promise.any(promises).then((value)=&amp;gt;console.log(value));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>The Collab Lab TCL-34 Recap</title>
      <author>Alejandro M. Coca</author>
      <pubDate>Fri, 24 Dec 2021 17:58:02 +0000</pubDate>
      <link>https://dev.to/the-collab-lab/the-collab-lab-tcl-34-recap-29mp</link>
      <guid>https://dev.to/the-collab-lab/the-collab-lab-tcl-34-recap-29mp</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BXyfhQe3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9fhglp5oxp93l0zgl2mc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BXyfhQe3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9fhglp5oxp93l0zgl2mc.png" alt="TCL-34 amazing team" width="880" height="493"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://the-collab-lab.codes/"&gt;The Collab Lab (TCL)&lt;/a&gt; is a non-profit organization that provides an 8-week program for early-career developers supported by volunteer mentors. It‚Äôs a great space to practice collaboration, communication skills as it was a real work environment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#goal-the-project"&gt;
  &lt;/a&gt;
  Goal the project
&lt;/h2&gt;

&lt;p&gt;The goal of this project is to collaborate with your Collab Lab team to &lt;strong&gt;create a ‚Äúsmart‚Äù shopping list app&lt;/strong&gt; that learns your buying habits and helps you remember what you‚Äôre likely to need to buy on your next trip to the store.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tech stack:&lt;/strong&gt; React &amp;amp; React Hooks, Firebase, Git, GitHub, and Firebase Hosting&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-amazing-talented-team"&gt;
  &lt;/a&gt;
  The amazing, talented team
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.linkedin.com/in/isabella-soares-lima/"&gt;Isabella Soares&lt;/a&gt;: adaptability to new, different environments and good communication skills.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.linkedin.com/in/mailliw-mogollon/"&gt;Mailliw Mogollon&lt;/a&gt;: a great initiative to help teammates, and always looking for new knowledge.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.linkedin.com/in/susana-rd/"&gt;Susana Ruiz&lt;/a&gt;: curiosity about best practices, and working in a team.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.linkedin.com/in/yanurd"&gt;Yancarlo Urdaneta&lt;/a&gt;: happy to face new challenges.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;üíØ This team is an example of &lt;strong&gt;teamwork, dedication, hard work&lt;/strong&gt;, and &lt;strong&gt;a huge commitment&lt;/strong&gt; to your goals üåü.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;p&gt;Something super important to mention is that the project experience is &lt;strong&gt;fully responsive&lt;/strong&gt; (desktop &amp;amp; mobile version). They took care of every detail! üíö&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-addjoin-a-shopping-list"&gt;
  &lt;/a&gt;
  1. Add/join a shopping list
&lt;/h3&gt;

&lt;p&gt;They added a way to create new shopping lists that can be used to add products to buy. Also, they worked on a section where a user might write down &lt;strong&gt;a token shared&lt;/strong&gt; (for instance it should already be registered in the database and add new products to the user list).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aNTYkXag--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5w4dpqvqq6nita8ribcw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aNTYkXag--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5w4dpqvqq6nita8ribcw.png" alt="Home page" width="880" height="516"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-the-shopping-list-view"&gt;
  &lt;/a&gt;
  2. The Shopping list view
&lt;/h3&gt;

&lt;p&gt;This is a page where users can take a look at &lt;strong&gt;the items that they want to buy&lt;/strong&gt; and/or the items they bought already. This section includes filtering items by name and "checking" the items you have bought, so the algorithm can make &lt;strong&gt;estimations&lt;/strong&gt; based on your previous purchases.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T7G6vMwE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rphlqybzgqx98bbn6cgj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T7G6vMwE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rphlqybzgqx98bbn6cgj.png" alt="List page" width="880" height="464"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-add-a-product-to-the-shopping-list"&gt;
  &lt;/a&gt;
  3. Add a product to the shopping list
&lt;/h3&gt;

&lt;p&gt;The team created &lt;strong&gt;an accessible form (a11y)&lt;/strong&gt; to let you add products to your shopping list, and allows you to pick when you are planning to buy the product (&lt;em&gt;soon, kind of soon, or not soon&lt;/em&gt;) so the algorithm can &lt;strong&gt;estimate recommendations&lt;/strong&gt; for your future purchases!.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iN9_mpoN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5nmc1phpctkzugl01dv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iN9_mpoN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5nmc1phpctkzugl01dv.png" alt="Add item page" width="880" height="465"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-delete-a-product-from-the-shopping-list"&gt;
  &lt;/a&gt;
  4. Delete a product from the shopping list
&lt;/h3&gt;

&lt;p&gt;To make your life easier, the team created a feature to delete products from the shopping list so you don‚Äôt need to have information that you don‚Äôt need anymore. They focused on &lt;strong&gt;accessibility&lt;/strong&gt; to have a more inclusive experience.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D9o3SJNI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7fe357fncqfchfdns21x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D9o3SJNI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7fe357fncqfchfdns21x.png" alt="Delete page" width="880" height="519"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You want to see their &lt;strong&gt;incredible work&lt;/strong&gt;‚ú®. Visit their üöÄ &lt;a href="https://github.com/the-collab-lab/tcl-34-smart-shopping-list"&gt;&lt;strong&gt;GitHub repository&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tcl34-workflow"&gt;
  &lt;/a&gt;
  TCL-34 workflow
&lt;/h2&gt;

&lt;p&gt;One of the most important parts to mention is how they built this amazing app and what they needed to work together as a team. They were a &lt;strong&gt;supportive and collaborative team&lt;/strong&gt; üéâ.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Teamwork, pair programming&lt;/li&gt;
&lt;li&gt;Sync/Async communication&lt;/li&gt;
&lt;li&gt;Project management&lt;/li&gt;
&lt;li&gt;Create Pull Requests, code reviewing&lt;/li&gt;
&lt;li&gt;Design wireframes, and user interfaces.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to know more about them or the process, you can reach out to their TCL-34 mentors:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.linkedin.com/in/lizeth-b-230ab2112"&gt;Lizeth Ba√±ol&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.linkedin.com/in/jdandrade"&gt;Juan Andrade&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Danieljara23"&gt;Daniel Jaramillo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.linkedin.com/in/alejandromcocarojas/"&gt;Alejandro Coca&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;‚ú® The TCL-34 team has done an amazing job by creating this product in such a short amount of time and adding all the care, detail, dedication, support, and incredible teamwork that can be seen as the result of their work. üéâüéâ&lt;/p&gt;

&lt;p&gt;They did an amazing job during these weeks and you won‚Äôt regret having them on your team or company! üèÜüòÑ&lt;/p&gt;

</description>
      <category>collablab</category>
      <category>earlycareerdevelopers</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>Explore Exprees.js </title>
      <author>Iftakher Hossen</author>
      <pubDate>Fri, 24 Dec 2021 17:55:55 +0000</pubDate>
      <link>https://dev.to/iftakher_hossen/explore-expreesjs-4mjo</link>
      <guid>https://dev.to/iftakher_hossen/explore-expreesjs-4mjo</guid>
      <description>&lt;p&gt;Today we will learn about the Node.Js web application framework Express.Js.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-expressjs"&gt;
  &lt;/a&gt;
  What is Express.js?
&lt;/h3&gt;

&lt;p&gt;Express.js is a free, open-source, simple, tiniest web application framework of Node.js. It is used for backend design &amp;amp; development.  Express.js requires only JavaScript that‚Äôs why it‚Äôs easier to build single-page, multiple-page, hybrid web applications &amp;amp; API without any effort. Express.js supports MVC architecture.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-we-should-use-expressjs"&gt;
  &lt;/a&gt;
  Why we should use Express.js?
&lt;/h3&gt;

&lt;p&gt;JavaScript has Node.js for backend development. Node.js has many frameworks to make easier backend development. Such as Express.js, Koa.js, Meteor.js, Nest.js, Socket.io, Total.js, etc. So, if you are a JavaScript developer then it‚Äôs easier for you to use Express.js for backend development. Express.js offers simplicity, flexibility, efficiency, minimalism, and scalability that‚Äôs why it‚Äôs more popular.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h3&gt;

&lt;p&gt;Express.js has many features. Let‚Äôs learn about them -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Middleware - Middleware is a function that is used to get access request and response objects. &lt;/li&gt;
&lt;li&gt;Faster server-side development - Express.js provides many readymade functions from Node.js it‚Äôs made easier to develop.&lt;/li&gt;
&lt;li&gt;Routing - Express.js provides an admiringly advanced routing mechanism.&lt;/li&gt;
&lt;li&gt;Templating - Template engines allow you to build dynamic content in web applications.&lt;/li&gt;
&lt;li&gt;Debugging - Express.js has a debugging mechanism that can find bugs easily. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#advantages"&gt;
  &lt;/a&gt;
  Advantages
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Express.js is fast &amp;amp; easier to learn.&lt;/li&gt;
&lt;li&gt;It‚Äôs easier to configure &amp;amp; customize.&lt;/li&gt;
&lt;li&gt;Huge community support.&lt;/li&gt;
&lt;li&gt;Supported by Google V8 Engine.&lt;/li&gt;
&lt;li&gt;Easy to connect with databases such as MongoDB, MySQL, etc.&lt;/li&gt;
&lt;li&gt;Easy to integrate with different templates.&lt;/li&gt;
&lt;li&gt;Allows you to define routes based on HTTP methods &amp;amp; URLs.&lt;/li&gt;
&lt;li&gt;Easy to serve static files and resources.&lt;/li&gt;
&lt;li&gt;Flexible middleware module.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disadvantages"&gt;
  &lt;/a&gt;
  Disadvantages
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
There are problems with the callback or event-driven nature but the last update of Node.js brings async/await that prevents this problem.&lt;/li&gt;
&lt;li&gt;Client request problem with middleware system.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-to-install-express"&gt;
  &lt;/a&gt;
  How to Install Express
&lt;/h3&gt;

&lt;p&gt;Install with npm - &lt;strong&gt;&lt;code&gt;npm install express -g&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-start"&gt;
  &lt;/a&gt;
  How to Start
&lt;/h3&gt;

&lt;p&gt;First, create a directory named &lt;strong&gt;simpleExpress&lt;/strong&gt;. Change to it, and run &lt;strong&gt;&lt;code&gt;npm init&lt;/code&gt;&lt;/strong&gt;. Then install express as a dependency. In the directory create a file named index.js and write the following code. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kBzPs1Hs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eyfykux7z6umkaegp1sc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kBzPs1Hs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eyfykux7z6umkaegp1sc.png" alt="Express Example Code" width="880" height="619"&gt;&lt;/a&gt;&lt;br&gt;Hello World Example with Express.js
&lt;/p&gt;

&lt;p&gt;Run the app with the following command - &lt;strong&gt;&lt;code&gt;$ node index.js&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;
Then open the browser and visit &lt;strong&gt;‚Äúlocalhost:5000‚Äù&lt;/strong&gt; to see the output.&lt;/p&gt;

&lt;p&gt;Visit &lt;a href="https://expressjs.com/"&gt;Express.js&lt;/a&gt; official site to read documentations and know more in details.&lt;/p&gt;

&lt;p&gt;Thanks for reading this tutorial!&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>What's new in Apache JMeter 5.4.3?</title>
      <author>NaveenKumar Namachivayam ‚ö°</author>
      <pubDate>Fri, 24 Dec 2021 17:50:56 +0000</pubDate>
      <link>https://dev.to/qainsights/whats-new-in-apache-jmeter-543-54lm</link>
      <guid>https://dev.to/qainsights/whats-new-in-apache-jmeter-543-54lm</guid>
      <description>&lt;p&gt;The Apache JMeter team has released its next minor version of JMeter 5.4.3 for the Log4j security vulnerability CVE-2021-45105. In my last few articles, I have posted about &lt;a href="https://qainsights.com/log4j-vulnerability-important-note-to-performance-engineers/"&gt;Log4j Vulnerability ‚Äì Important Note to Performance Engineers&lt;/a&gt;, &lt;a href="https://qainsights.com/whats-new-in-apache-jmeter-5-4-2/"&gt;What‚Äôs new in Apache JMeter 5.4.2?&lt;/a&gt;, and &lt;a href="https://qainsights.com/what-to-do-if-you-cannot-upgrade-to-jmeter-5-4-2-for-log4j-vulnerability/"&gt;What to do if you cannot upgrade to JMeter 5.4.2 for Log4j Vulnerability?&lt;/a&gt;. Let us see what's new in Apache JMeter 5.4.3.&lt;/p&gt;

&lt;h2&gt;About CVE-2021-45105&lt;/h2&gt;

&lt;p&gt;Apache Log4j2 versions 2.0-alpha1 through 2.16.0 (excluding 2.12.3) did not protect from uncontrolled recursion from self-referential lookups. This allows an attacker with control over Thread Context Map data to cause a denial of service when a crafted string is interpreted.&lt;/p&gt;

&lt;h2&gt;Apache JMeter 5.4.3&lt;/h2&gt;

&lt;p&gt;As this minor patch addresses CVE-2021-45105, it doesn't have any new and noteworthy section. There are no other bug fixes, enhancements, samplers, etc. &lt;/p&gt;

&lt;p&gt;JMeter 5.4.3 has bumped up versions of log4j from 2.16.0 to 2.17.0.&lt;/p&gt;

&lt;p&gt;To download the latest version of JMeter, head to https://jmeter.apache.org/download_jmeter.cgi&lt;/p&gt;

&lt;p&gt;Click any one of the apache-jmeter-5.4.3 flavor to download.&lt;/p&gt;

&lt;p&gt;After download the file, verify the integrity using the sha512 checksum. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/12/image-36.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eNDHOo9---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/12/image-36.png" alt="What's new in Apache JMeter 5.4.3?" width="543" height="295"&gt;&lt;/a&gt;What's new in Apache JMeter 5.4.3?&lt;/p&gt;

&lt;h2&gt;JMeter Release process&lt;/h2&gt;

&lt;p&gt;There are multiple steps involved in releasing the newer version. Since this is a security fix, the votes are solicited for 24 hrs and closed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/12/image-37.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QVfedfVW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/12/image-37.png" alt="JMeter 5.4.3 votes" width="461" height="454"&gt;&lt;/a&gt;JMeter 5.4.3 votes&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;It is recommended to update your JMeter to 5.4.3. Suppose, if you are not able to upgrade, there are workarounds mentioned in &lt;a href="https://qainsights.com/what-to-do-if-you-cannot-upgrade-to-jmeter-5-4-2-for-log4j-vulnerability/" rel="noreferrer noopener"&gt;this article&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>testing</category>
      <category>performance</category>
      <category>webperf</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Short Note on CRUD Operations of MongoDB‚Ä¶</title>
      <author>Tonmoy Roy</author>
      <pubDate>Fri, 24 Dec 2021 17:15:45 +0000</pubDate>
      <link>https://dev.to/tonmoyrx/short-note-on-crud-operations-of-mongodb-3lj1</link>
      <guid>https://dev.to/tonmoyrx/short-note-on-crud-operations-of-mongodb-3lj1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#mongodb-crud-operations"&gt;
  &lt;/a&gt;
  MongoDB CRUD Operations
&lt;/h2&gt;

&lt;p&gt;CRUD operations create, read, update, and delete documents in MongoDB.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Create Operations&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Create or insert operations add new documents to a collection in the database. If the collection does not currently exist in the database, then insert operations will create the collection.&lt;/p&gt;

&lt;p&gt;MongoDB provides the following methods to insert documents into a collection:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;db.collection.insertOne() &lt;/li&gt;
&lt;li&gt;db.collection.insertMany() 
Here, insert operations target a single collection.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Read Operations&lt;/strong&gt;&lt;/em&gt;&lt;br&gt;
Read operations retrieve documents from a collection in the database.&lt;/p&gt;

&lt;p&gt;MongoDB provides the following methods to read documents from a collection:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;db.collection.find()
We can specify query filters or any criteria that identify the documents to return.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Update Operations&lt;/strong&gt;&lt;/em&gt;&lt;br&gt;
Update operations modify existing documents in a collection of the database. &lt;/p&gt;

&lt;p&gt;MongoDB provides the following methods to update documents of a collection:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;db.collection.updateOne() &lt;/li&gt;
&lt;li&gt;db.collection.updateMany() &lt;/li&gt;
&lt;li&gt;db.collection.replaceOne()
Here, update operations target a single collection.
We can also specify any criteria, or filters, that identify the documents to update.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Delete Operations&lt;/strong&gt;&lt;/em&gt;&lt;br&gt;
Delete operations remove documents from a collection in the database. &lt;/p&gt;

&lt;p&gt;MongoDB provides the following methods to delete documents of a collection:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;db.collection.deleteOne() &lt;/li&gt;
&lt;li&gt;db.collection.deleteMany() 
Here, delete operations target a single collection.
We can specify any criteria, or filters, that identify the documents to remove.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>beginners</category>
      <category>mongodb</category>
      <category>javascript</category>
    </item>
    <item>
      <title>highsea : color range generator for tailwindcss</title>
      <author>Nostro</author>
      <pubDate>Fri, 24 Dec 2021 17:10:08 +0000</pubDate>
      <link>https://dev.to/nostro/highsea-color-range-generator-for-tailwindcss-4kcb</link>
      <guid>https://dev.to/nostro/highsea-color-range-generator-for-tailwindcss-4kcb</guid>
      <description>&lt;p&gt;If you like using tailwindcss, every now and then you find yourself in the position of wanting to use a specific shade, but no default color in the tailwindcss range does fit the bill, it's too greenish or to reddish or too whatnot - it just doesn't work.&lt;/p&gt;

&lt;p&gt;From there, either you build your own range manually, or find some some code somewhere that generate them.&lt;/p&gt;

&lt;p&gt;I didn't find anything easy enough for my liking, so I built it.&lt;/p&gt;

&lt;p&gt;Here comes &lt;a href="https://highsea.nostrorom.com"&gt;highsea&lt;/a&gt;, it's very barebones for now in terms of features, but it nails the heart of the matter: generate a 50-900 range for any hue, while still fitting with the existing range should you want to combine custom and default on the same project.&lt;/p&gt;

&lt;p&gt;More features will be added later on; in the meantime enjoy ! &lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>webdev</category>
      <category>svelte</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Cheat Sheets for Web Developers</title>
      <author>Alexandru Bereghici</author>
      <pubDate>Fri, 24 Dec 2021 17:06:22 +0000</pubDate>
      <link>https://dev.to/abereghici/cheat-sheets-for-web-developers-57en</link>
      <guid>https://dev.to/abereghici/cheat-sheets-for-web-developers-57en</guid>
      <description>&lt;p&gt;The front-end development evolves with incredible speed. Now it's a challenge to remember all the syntax, methods, or commands of a programming language, framework, or library. Here is where cheat sheets come in. They are great, intuitive resources that help you quickly find what you need.&lt;/p&gt;

&lt;p&gt;In this post, I want to share some of the most useful cheat sheets or references I've found it, and I use it daily.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#accessibility"&gt;
  &lt;/a&gt;
  Accessibility
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://learn-the-web.algonquindesign.ca/topics/accessibility-cheat-sheet/"&gt;https://learn-the-web.algonquindesign.ca/topics/accessibility-cheat-sheet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://lab.abhinayrathore.com/aria-cheatsheet/"&gt;https://lab.abhinayrathore.com/aria-cheatsheet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.w3.org/TR/wai-aria-practices/"&gt;https://www.w3.org/TR/wai-aria-practices&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://digital.com/tools/html-cheatsheet/"&gt;https://digital.com/tools/html-cheatsheet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://htmlreference.io/"&gt;https://htmlreference.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://quickref.me/html"&gt;https://quickref.me/html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.w3.org/html5/html-author/"&gt;https://dev.w3.org/html5/html-author&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://cssreference.io/"&gt;https://cssreference.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://quickref.me/css"&gt;https://quickref.me/css&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devdocs.io/css/"&gt;https://devdocs.io/css&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.30secondsofcode.org/css/p/1"&gt;CSS Snippets&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://grid.malven.co/"&gt;Grid - A simple visual cheatsheet for CSS Grid Layout&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://flexbox.malven.co/"&gt;Flex - A simple visual cheatsheet for flexbox&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  Javascript
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.30secondsofcode.org/"&gt;JavaScript Snippets&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://javascript.info/"&gt;https://javascript.info&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.javascripttutorial.net/es-next/"&gt;https://www.javascripttutorial.net/es-next&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference"&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#typescript"&gt;
  &lt;/a&gt;
  Typescript
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://rmolinamir.github.io/typescript-cheatsheet/"&gt;https://rmolinamir.github.io/typescript-cheatsheet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/sindresorhus/type-fest"&gt;https://github.com/sindresorhus/type-fest&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.freecodecamp.org/news/advanced-typescript-types-cheat-sheet-with-examples/"&gt;https://www.freecodecamp.org/news/advanced-typescript-types-cheat-sheet-with-examples&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.sitepen.com/blog/typescript-cheat-sheet"&gt;https://www.sitepen.com/blog/typescript-cheat-sheet&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#git"&gt;
  &lt;/a&gt;
  Git
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://gitexplorer.com/"&gt;Git Command Explorer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.30secondsofcode.org/git/p/1"&gt;Git Snippets&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#design-patterns"&gt;
  &lt;/a&gt;
  Design Patterns
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.patterns.dev/posts/"&gt;https://www.patterns.dev/posts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://refactoring.guru/design-patterns"&gt;https://refactoring.guru/design-patterns&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>cheatsheet</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
    <item>
      <title>Typewriter Effect with CSS and JS </title>
      <author>Walter Nascimento</author>
      <pubDate>Fri, 24 Dec 2021 17:03:47 +0000</pubDate>
      <link>https://dev.to/walternascimentobarroso/typewriter-effect-with-css-and-js-eob</link>
      <guid>https://dev.to/walternascimentobarroso/typewriter-effect-with-css-and-js-eob</guid>
      <description>&lt;p&gt;Using JavaScript and CSS let's create a typewriter effect&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h3&gt;

&lt;p&gt;First let's create the interface, we'll do something simple, using just HTML.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"elementEl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Walter Nascimento Barroso&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's just add an h1 with an id elementEl, so it's easier to identify in both css and javascript&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#elementEl&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'|'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;blink&lt;/span&gt; &lt;span class="m"&gt;0.7s&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="nb"&gt;blink&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In css we take elementEl and add a slash after our h1 and finally we add the blink effect so the added slash will be blinking &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#js"&gt;
  &lt;/a&gt;
  JS
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;typeWriter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;textArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;textArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;letter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;letter&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;95&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;typeWriter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;typeWriter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elementEl&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here in our javascript we just have a function called typeWriter, which receives our elementEl.&lt;/p&gt;

&lt;p&gt;Inside our function we have a constant that divides the text of our element letter by letter, then we clear the element content and loop through our array of letters and for each letter we add we wait for the time of 95 multiplied by the index and so we have a letter at a time added&lt;/p&gt;

&lt;p&gt;Finally, we call setInterval again to call our typeWrite function again.&lt;/p&gt;

&lt;p&gt;ready simple like that. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;See below for the complete working project.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/WalterNascimento/embed/NWdebJP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;if you can't see it &lt;a href="https://codepen.io/WalterNascimento/pen/NWdebJP"&gt;click here&lt;/a&gt; and see the final result&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#youtube"&gt;
  &lt;/a&gt;
  Youtube
&lt;/h2&gt;

&lt;p&gt;If you prefer to watch it, see the development on youtube.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/lBefm1GtsZA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h2&gt;

&lt;p&gt;If you have any questions, complaints or tips, you can leave them here in the comments. I will be happy to answer!&lt;/p&gt;

&lt;p&gt;üòäüòä See you later! üòäüòä&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#support-me"&gt;
  &lt;/a&gt;
  Support Me
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCXm0xRtDRrdnvkW24WmkBqA"&gt;Youtube - WalterNascimentoBarroso&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/walternascimentobarroso"&gt;Github - WalterNascimentoBarroso&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codepen.io"&gt;Codepen - WalterNascimentoBarroso&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>MongoDB CRUD Operations</title>
      <author>Hossen Mahmud</author>
      <pubDate>Fri, 24 Dec 2021 16:48:06 +0000</pubDate>
      <link>https://dev.to/hossenmahmud/mongodb-crud-operations-40kg</link>
      <guid>https://dev.to/hossenmahmud/mongodb-crud-operations-40kg</guid>
      <description>&lt;p&gt;CRUD stands for Create, Read, Update and Delete. The capacity to create, read, update and delete items in a web application is important for the development of a website and making it interactive. For example: if we are making a blog page and someone wants to post blogs, without CRUD operations it would be a real problem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create"&gt;
  &lt;/a&gt;
  Create
&lt;/h2&gt;

&lt;p&gt;Create or insert operations add new documents to a collection. If the collection does not currently exist, insert operations will create the collection.To create data, the HTTP Post method is used, it is used to create new data for the database.&lt;/p&gt;

&lt;p&gt;MongoDB provides the following methods to insert documents into a collection:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;db.collection.insertOne() &lt;/li&gt;
&lt;li&gt;db.collection.insertMany() &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Insert a Single Document:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b8zR_8bI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ihfxk7ik28sst89764f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b8zR_8bI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ihfxk7ik28sst89764f.png" alt="Image description" width="880" height="262"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Example:  Inserts a new document into the inventory collection.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tT2-uFLv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pzns0vhp123disq0iddl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tT2-uFLv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pzns0vhp123disq0iddl.png" alt="Image description" width="880" height="100"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Insert Multiple Documents:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--laO3y0Dy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rzru9od5kl0lhoehkr0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--laO3y0Dy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rzru9od5kl0lhoehkr0.png" alt="Image description" width="880" height="151"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#read"&gt;
  &lt;/a&gt;
  Read
&lt;/h2&gt;

&lt;p&gt;Read operations retrieve documents from a collection. Query a collection for documents. The read allows reading from the database. It would never change the data. To read a resource HTTP Get method is used. MongoDB provides the following methods to read documents from a collection:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;db.collection.find()&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can specify query filters or criteria that identify the documents to return.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l9DqDvpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3fmxbxaxzcxmlvzar5wy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l9DqDvpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3fmxbxaxzcxmlvzar5wy.png" alt="Image description" width="880" height="132"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#update"&gt;
  &lt;/a&gt;
  Update
&lt;/h2&gt;

&lt;p&gt;Update operations modify existing documents in a collection. If we store the price of stocks and after a few days it has gone up, we would want to change the previous price to the current price. It means we would update the price from the previous one. The PUT method is used for updating data from the databas. MongoDB provides the following methods to update documents of a collection.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;db.collection.updateOne() &lt;/li&gt;
&lt;li&gt;db.collection.updateMany() &lt;/li&gt;
&lt;li&gt;db.collection.replaceOne() &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In MongoDB, update operations target a single collection. All write operations in MongoDB are atomic on the level of a single document.&lt;br&gt;
We can specify criteria, or filters, that identify the documents to update. These filters use the same syntax as read operations.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HThcsk4L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4a2mp09e91eq3n7w41w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HThcsk4L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4a2mp09e91eq3n7w41w.png" alt="Image description" width="880" height="165"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#delete"&gt;
  &lt;/a&gt;
  Delete
&lt;/h2&gt;

&lt;p&gt;Delete operations remove documents from a collection. For example, we stored your favorite dishes on the database. We want to remove pizza from the list,then we‚Äôll use the delete operation. For that HTTP Delete method will be used. MongoDB provides the following methods to delete documents of a collection:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;db.collection.deleteOne()&lt;/li&gt;
&lt;li&gt;db.collection.deleteMany() &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can specify criteria, or filters, that identify the documents to remove. These filters use the same syntax as read operations.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pdtSm8gR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/74tpr44nyj02xbx38hc6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pdtSm8gR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/74tpr44nyj02xbx38hc6.png" alt="Image description" width="880" height="135"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>mongodb</category>
    </item>
    <item>
      <title>What is Local Storage?</title>
      <author>Ansub Khan</author>
      <pubDate>Fri, 24 Dec 2021 16:14:58 +0000</pubDate>
      <link>https://dev.to/ansub/what-is-local-storage-1im9</link>
      <guid>https://dev.to/ansub/what-is-local-storage-1im9</guid>
      <description>&lt;p&gt;localStorage is a way of saving the key-value pair in the web browser and the best part about it is that there is no expiration date meaning that data will still be there in the browser even if you reload the page.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-does-localstorage-work"&gt;
  &lt;/a&gt;
  How does localStorage work?
&lt;/h3&gt;

&lt;p&gt;to storage the localStorage in your web application, you can use five methods:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;setItem() : adds key value to localStorage&lt;/li&gt;
&lt;li&gt;getItem() : retrieve the items you entered in localStorage&lt;/li&gt;
&lt;li&gt;clear(): to clear the local storage&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#where-is-localstorage-stored"&gt;
  &lt;/a&gt;
  Where is localStorage stored?
&lt;/h3&gt;

&lt;p&gt;it depends upon the browsers that how and where they are storing it, for example, Firefox stores localstorage in¬†&lt;code&gt;webappsstore.sqlite&lt;/code&gt;¬†file in the¬†&lt;em&gt;profile&lt;/em&gt;¬†folder.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-windowlocalstorage"&gt;
  &lt;/a&gt;
  What is window.localStorage?
&lt;/h3&gt;

&lt;p&gt;localStorage is available via the windows.localStorage property which is a part of the Window interface in Javascript that represents the window containing the DOM Document. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setitem"&gt;
  &lt;/a&gt;
  setItem()
&lt;/h3&gt;

&lt;p&gt;it is a method to store the values in localStorage object&lt;/p&gt;

&lt;p&gt;it takes two parameters: key and a value&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;window.localStorage.setItem('name',&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;'Ansub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Khan')&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;over here you can see that ‚Äòname‚Äô is basically a key that stores the value ‚ÄòAnsub Khan‚Äô, now the thing is that localStorage only stores String but what if we have to store data of different data types like an array? &lt;/p&gt;

&lt;p&gt;for that we use a method called JSON.stringify() before passing it to setItem().&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;person&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; 
    &lt;/span&gt;&lt;span class="err"&gt;name:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Ansub Khan"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; 
    &lt;/span&gt;&lt;span class="err"&gt;age:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="err"&gt;window.localStorage.setItem('user',&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;JSON.stringify(person));&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#getitem"&gt;
  &lt;/a&gt;
  getItem()
&lt;/h3&gt;

&lt;p&gt;it is used to access the data that you have stored in the localStorage using setItem() method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// this is going to give us&lt;/span&gt;

&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;{"name":"Ansub Khan","age":21}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;now to use this value as an object you need to convert it back to an object,  if you remember localStorage stores data in String format, that‚Äôs why we used JSON.stringify(), now to convert it back to object we are going to use &lt;strong&gt;JSON.parse()&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#clear"&gt;
  &lt;/a&gt;
  clear()
&lt;/h3&gt;

&lt;p&gt;it is used to delete the data that we saved in local storage, you can see the localStorage in Chrome, open inspect element, and then click on the application, there you are going to find the local storage as seen in the image below&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DX1LZ2tH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h186ojh36ainepxee4qt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DX1LZ2tH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h186ojh36ainepxee4qt.png" alt="local-storage" width="880" height="638"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;on using this method&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;it will get empty like it was before.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-localstorage%C2%A0has-some-limitations-tho"&gt;
  &lt;/a&gt;
  ** localStorage¬†has some limitations tho:**
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Do not store sensitive user information in¬†&lt;code&gt;localStorage&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;It is not a substitute for a server-based database as information is only stored on the browser&lt;/li&gt;
&lt;li&gt;localStorage¬†is limited to 5MB across all major browsers&lt;/li&gt;
&lt;li&gt;localStorage¬†is quite insecure as it has no form of data protection and can be accessed by any code on your web page&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Git branching simplified</title>
      <author>Kumar Kalyan </author>
      <pubDate>Fri, 24 Dec 2021 16:13:45 +0000</pubDate>
      <link>https://dev.to/kumarkalyan/git-branching-simplified-4d22</link>
      <guid>https://dev.to/kumarkalyan/git-branching-simplified-4d22</guid>
      <description>&lt;p&gt;Hi everyone, hope you guys are doing well, today in this article I will be explaining the branching concept in git. If you love this article share with your friends and collogues.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-branching"&gt;
  &lt;/a&gt;
  Why branching
&lt;/h2&gt;

&lt;p&gt;Branching helps you to work isolated in a team, Let's understand this thing with an example &lt;br&gt;
Imagine a team of 4 members a,b,c and d respectively are working on a particular project. Now a is given a task to fix a bug, b and c is given a task to implement a new feature and d is the team lead. Now a will create a branch named bugfix and b and c will work on different branches and after the work is done d will review all the code in different branches and in the and at last merge everyone's code to the master branch. Now a question may arouse that, why are we using branches here?  Suppose a has not fixed the bug properly mean while b and c have made the implementation properly so it become easier for the team lead to review everyone code and merge it to the master one (the code in the master branch is used for the production)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-a-branch-amp-what-happens-then"&gt;
  &lt;/a&gt;
  How to create a branch &amp;amp; what happens then
&lt;/h2&gt;

&lt;p&gt;I have a repository named github tutorial now let‚Äôs  see what happens when we create a branch use &lt;code&gt;git branch &amp;lt;branch name &amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;See now we are on the main branch having 3 files in it &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jKPMqJCI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rpr3w7wuagm8cpujcinz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jKPMqJCI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rpr3w7wuagm8cpujcinz.png" alt="the main branch" width="880" height="461"&gt;&lt;/a&gt;&lt;br&gt;
and we only have a single branch in our repo &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sHG3UFCg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3cjnfdpsgubogamzyc8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sHG3UFCg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3cjnfdpsgubogamzyc8.png" alt="github image " width="880" height="422"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now lets create abranch name &lt;code&gt;addfeature&lt;/code&gt;&lt;br&gt;
So we will use &lt;code&gt;git branch addfeature&lt;/code&gt; followed by &lt;code&gt;git checkout addfeature&lt;/code&gt; shifting  to our  new branch  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4fKjKalY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gt0o99qgf9ayjemu2bg4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4fKjKalY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gt0o99qgf9ayjemu2bg4.png" alt="branch created" width="880" height="462"&gt;&lt;/a&gt;&lt;br&gt;
Ok now we are on our feature branch now let‚Äôs add a new file to it &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bzpYeeUW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9j8djv7tp825rkx0n95i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bzpYeeUW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9j8djv7tp825rkx0n95i.png" alt="addednewfile" width="880" height="474"&gt;&lt;/a&gt;&lt;br&gt;
 So now we have added a new file, now let‚Äôs commit and push it &lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wILBWGub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6f1eo187dmz2v49ego6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wILBWGub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6f1eo187dmz2v49ego6.png" alt="added commit" width="880" height="469"&gt;&lt;/a&gt;&lt;br&gt;
 Now use &lt;code&gt;git push --set-upstream origin addfeature&lt;/code&gt; to set the remote branch to &lt;code&gt;addfeature&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2FoUJkM7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kiuuv8ppcl4dstv4amt3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2FoUJkM7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kiuuv8ppcl4dstv4amt3.png" alt="push" width="880" height="429"&gt;&lt;/a&gt;&lt;br&gt;
see we have added a file to our add feature branch and now we are getting an option for &lt;code&gt;compare and pull&lt;/code&gt; i.e merging the code &lt;br&gt;
you can see that our main branch does not have the &lt;code&gt;newfile.txt&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k7vDsgHm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4bd4u072pgplnuvqc3lm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k7vDsgHm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4bd4u072pgplnuvqc3lm.png" alt="main" width="880" height="423"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;now let's compare and make a pull request and then merge our code to the master branch&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fEL-y8A8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wamgq24odbgbbkmdo3ng.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fEL-y8A8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wamgq24odbgbbkmdo3ng.png" alt="pull request " width="880" height="428"&gt;&lt;/a&gt;&lt;br&gt;
 now lets merge the pull request &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--miaXdcrn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ypw4opmqq9bmxr0dj2e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--miaXdcrn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ypw4opmqq9bmxr0dj2e.png" alt="merge pull" width="880" height="432"&gt;&lt;/a&gt;&lt;br&gt;
now if you see the main branch, it have the new file.txt&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_HT5p4sI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3j67o0gkopumhj3r9fmj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_HT5p4sI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3j67o0gkopumhj3r9fmj.png" alt="after pull" width="880" height="427"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deleting-a-branch"&gt;
  &lt;/a&gt;
  deleting a branch
&lt;/h2&gt;

&lt;p&gt;Now we have merged our code to our master branch but now I feel that we don't need this &lt;code&gt;addfeature&lt;/code&gt; branch so let's delete it and see what happens&lt;br&gt;
use &lt;code&gt;git branch -d &amp;lt;branch name &amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DXJhuRJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f38fqabu8bolx5fkp9xv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DXJhuRJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f38fqabu8bolx5fkp9xv.png" alt="delete branch locally" width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;this command will delete our branch from our local git repository, now to delete this branch from GitHub use &lt;code&gt;git push &amp;lt;remote&amp;gt; --delete &amp;lt;branch&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0QOkpdq7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8792tis83hkq0jyxzcaw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0QOkpdq7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8792tis83hkq0jyxzcaw.png" alt="remote " width="880" height="462"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pQ6skVgy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/os8f61ws5o76ll8ii71w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pQ6skVgy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/os8f61ws5o76ll8ii71w.png" alt="remote github" width="880" height="410"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and if you want to delete the newfile.txt i.e. what you have, merged from the branch use &lt;code&gt;git revert &amp;lt;commitid&amp;gt;&lt;/code&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4fDQrCwQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dm9tscargmvx6t3klw0b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4fDQrCwQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dm9tscargmvx6t3klw0b.png" alt="commit id" width="880" height="426"&gt;&lt;/a&gt;&lt;br&gt;
so my commit id was &lt;code&gt;b7d4b23&lt;/code&gt; so I will use &lt;code&gt;git revert b7d4b23&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BZ3UnPrc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3gf1hhb5jxmri742nqob.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BZ3UnPrc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3gf1hhb5jxmri742nqob.png" alt="revertd commit" width="880" height="465"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n9pWj1Gi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88b6rcg8nttqxk9zz3wg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n9pWj1Gi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88b6rcg8nttqxk9zz3wg.png" alt="reverted commit" width="880" height="463"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s7Zuxu0z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azwpf4cwlxqjdmxj6m9m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s7Zuxu0z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azwpf4cwlxqjdmxj6m9m.png" alt="commit done" width="880" height="425"&gt;&lt;/a&gt;&lt;br&gt;
 see now we don't have any the new file.txt in our GitHub repo.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  conclusion
&lt;/h2&gt;

&lt;p&gt;So this was all about the branching concepts in git, feel free to comment out if you have any queries, hit a ‚ù§Ô∏è if you love this article . stay tuned for next, Happy Coding :)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect"&gt;
  &lt;/a&gt;
  Connect
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://linktr.ee/kumarkalyan"&gt;&lt;br&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wgrai2sU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.jsdelivr.net/npm/simple-icons%40v3/icons/twitter.svg" width="24" height="24"&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>You Don't Need To Learn ReactJS Now</title>
      <author>Elijah Trillionz</author>
      <pubDate>Fri, 24 Dec 2021 16:07:46 +0000</pubDate>
      <link>https://dev.to/elijahtrillionz/you-dont-need-to-learn-reactjs-now-2an</link>
      <guid>https://dev.to/elijahtrillionz/you-dont-need-to-learn-reactjs-now-2an</guid>
      <description>&lt;p&gt;Now, this isn't another article that tries to stop you from learning and using React and other related libraries and frameworks like VueJS. Rather it is an article that aims to help you understand what React is, when you need to learn it, and what you need to learn it.&lt;/p&gt;

&lt;p&gt;So this article will help you learn and use React at the right time. I will also provide some useful free courses/crash courses on it. Let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-react"&gt;
  &lt;/a&gt;
  What is React?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//reactjs.org"&gt;React&lt;/a&gt; is a popular JavaScript library that is used to build user interfaces and single-page applications.&lt;/p&gt;

&lt;p&gt;With React a collection of prewritten code snippets can be used and reused to perform common JavaScript functions.&lt;/p&gt;

&lt;p&gt;That is, ReactJS allows us to create reusable UI components. These components are what make up our website.&lt;/p&gt;

&lt;p&gt;An example of a reusable UI component is the tweet section in Twitter. See what I mean in the image below.&lt;/p&gt;

&lt;p&gt;Twitter simply created a component for this section and used it for all tweets in the app. Twitter uses React for its web app.&lt;/p&gt;

&lt;p&gt;But you may ask if React is for building single-page then how the hell does Twitter have several pages?&lt;/p&gt;

&lt;p&gt;Well, there are maintained supporting packages and libraries that make building complex applications with multiple pages like Twitter with React possible.&lt;/p&gt;

&lt;p&gt;While some people still use supporting packages, others have ported to using React frameworks like &lt;a href="https://nextjs.org/"&gt;Next&lt;/a&gt; and &lt;a href="https://remix.run/"&gt;Remix&lt;/a&gt; for building simple and complex applications.&lt;/p&gt;

&lt;p&gt;Another framework to learn on top React you may say. But trust me they are pretty easy to learn. But we won't talk more about them because it is beyond the scope of this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-role-does-react-play-in-web-development"&gt;
  &lt;/a&gt;
  What role does React play in web development?
&lt;/h2&gt;

&lt;p&gt;React plays a very vital role in creating interactive web applications.&lt;/p&gt;

&lt;p&gt;If you are an aspiring front-end developer or full-stack web developer who wants to work for a company, or simply create web apps as a freelancer or a startup, then you need React.&lt;/p&gt;

&lt;p&gt;Web applications are different from websites. You don't need React to make a website (static website).&lt;/p&gt;

&lt;p&gt;Web apps are dynamic websites that look and feel like desktop or mobile applications. On these websites, you can register an account, make posts, do things that you'd usually do in an application.&lt;/p&gt;

&lt;p&gt;Without React making a dynamic website will not just be tedious for the developer but also difficult to use. Because for each page transition the browser will have to reload. But it isn't so with React.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-do-i-learn-react"&gt;
  &lt;/a&gt;
  When do I learn React?
&lt;/h2&gt;

&lt;p&gt;ReactJS as you know it is a JavaScript library, and as many libraries and frameworks, they require a proper understanding of the language itself.&lt;/p&gt;

&lt;p&gt;It's no use trying to learn a tool that makes using another tool easier when you have no (or low) clue of how the primary tool works.&lt;/p&gt;

&lt;p&gt;ReactJS and other JavaScript libraries and frameworks all make use of JavaScript in it (a lot). So it is expedient for you to know vanilla JavaScript to a great extent before learning any JavaScript library/framework.&lt;/p&gt;

&lt;p&gt;Understand this, React is not a special thing to learn. It's not like a mini-language that you have to learn to build cool web apps.&lt;/p&gt;

&lt;p&gt;Learning React to me is not a matter of learning a new syntax or something, it's a matter of understanding how React has decided to work with JavaScript. And so you're like "Ok React, this is how you like it, I will play by your rule".&lt;/p&gt;

&lt;p&gt;So that means React uses JavaScript's syntax in all ramifications, and a little bit of HTML (JSX). That is why when you know JavaScript enough, you wouldn't find it difficult moving to other libraries and frameworks.&lt;/p&gt;

&lt;p&gt;So these libraries and frameworks are not replacing the JavaScript syntax, you're not going to find&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;// statement(s)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;// statement(s)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;replacing JavaScript's &lt;code&gt;if and else&lt;/code&gt; in a library. For example in React, we would popularly use&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;initial&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have never worked with destructuring arrays in JavaScript, you'd think this is some kind of React's syntax; you may think "here we have the &lt;code&gt;state&lt;/code&gt; and &lt;code&gt;setState&lt;/code&gt; in an array together and assigned to the &lt;code&gt;useState&lt;/code&gt; function, ok this is React". You'd have no clue what this is.&lt;/p&gt;

&lt;p&gt;This may sound funny if you are familiar with array destructuring, but some developers are in this situation. And trust me if this is you, it's not a good place to be. But luckily there is a solution - learn enough JavaScript.&lt;/p&gt;

&lt;p&gt;So to what extent should you learn JavaScript before learning React?&lt;/p&gt;

&lt;p&gt;I think you should learn everything your course/book outlines (I will outline some things). Here is a way to learn JavaScript in such a situation - forget about React and other libraries/frameworks.&lt;/p&gt;

&lt;p&gt;Don't learn JavaScript because you wanna learn React - don't have such an attitude of learning. Learn JavaScript because you want to be a web developer who makes cool web apps. Because the truth is React may not always be here.&lt;/p&gt;

&lt;p&gt;React may be gone in 5 years or even less. You never can tell.&lt;/p&gt;

&lt;p&gt;So when you're done with your JavaScript course, that's still not the right time to jump into React. Instead try to master the JavaScript syntax you've learned with exercises, projects, and even websites (lots of them).&lt;/p&gt;

&lt;p&gt;To do this, you can google out projects for beginners, Brad Traversy has a great repository of &lt;a href="https://github.com/bradtraversy/vanillawebprojects"&gt;20 vanilla web JavaScript projects&lt;/a&gt; - try building all of them on your own.&lt;/p&gt;

&lt;p&gt;When all this is done, I believe you're 100% ready to learn React. Now am not sure which JavaScript course you took and what you've learned, but to learn React you need to know these topics (explicitly including the basics)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Data Types - string, number, booleans, arrays, objects, undefined, null.&lt;/li&gt;
&lt;li&gt;Arithmetic operators and arithmetic operations, logical operators, ternary operator, expressions, variables (const and let), scopes&lt;/li&gt;
&lt;li&gt;Conditional statements - if and else, switch and case&lt;/li&gt;
&lt;li&gt;Loops - for, for in, for of, while, do/while&lt;/li&gt;
&lt;li&gt;Functions - arrow functions, closures, callbacks&lt;/li&gt;
&lt;li&gt;Classes and other ES6 features&lt;/li&gt;
&lt;li&gt;DOM&lt;/li&gt;
&lt;li&gt;JSON&lt;/li&gt;
&lt;li&gt;The global object&lt;/li&gt;
&lt;li&gt;Asynchronous JavaScript - settimeout, setinterval&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Basically everything. I'd recommend using the &lt;a href="https://www.w3schools.com/js/default.asp"&gt;W3schools JavaScript course outline&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-do-i-learn-react"&gt;
  &lt;/a&gt;
  Where do I learn React?
&lt;/h2&gt;

&lt;p&gt;This question will also answer "How do I learn React?". As I said before, React is not a special (or hard) thing to learn. This is the way I learn frameworks/libraries, and I recommend you try it too.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Follow along with a tutorial&lt;/li&gt;
&lt;li&gt;Play around with the docs&lt;/li&gt;
&lt;li&gt;Build more projects&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#follow-along-with-a-tutorial"&gt;
  &lt;/a&gt;
  Follow along with a tutorial
&lt;/h3&gt;

&lt;p&gt;This is basically coding along with a React tutorial. You can find a React crash course on YouTube for free. You don't have to pay to learn React at all.&lt;/p&gt;

&lt;p&gt;I'd recommend a crash course where there is a little bit of explanation on how React works, and then a project. I recommend this &lt;a href="https://youtu.be/w7ejDZ8SWv8"&gt;React crash course for 2021&lt;/a&gt; by Traversy Media.&lt;/p&gt;

&lt;p&gt;The crash course (this step) will help introduce you to React and how it works. It gives you a short overview of what you'd be working with&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#play-around-with-the-docs"&gt;
  &lt;/a&gt;
  Play around with the docs
&lt;/h3&gt;

&lt;p&gt;React has a very good &lt;a href="https://reactjs.org/docs/getting-started.html"&gt;documentation&lt;/a&gt; for its library. The documentation gives you more insight into the library, shows you what more you can do with it.&lt;/p&gt;

&lt;p&gt;React's documentation is designed to take you from the basics to the advanced React step by step. Playing around the docs simply means studying the docs and trying out some of the examples used.&lt;/p&gt;

&lt;p&gt;You can study React's docs like the way you study a course (in college or something). The point is, React's documentation is straight to the point, so you studying line by line or chapter by chapter is not a waste of time.&lt;/p&gt;

&lt;p&gt;Studying the docs shouldn't take more than a week for an average person.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#build-more-projects"&gt;
  &lt;/a&gt;
  Build more projects
&lt;/h3&gt;

&lt;p&gt;If you'd notice I said "more projects" rather than "a project". Now, this is because if you follow the first step you'd already built your first project in React, now you just need to build more.&lt;/p&gt;

&lt;p&gt;After building more projects, I often recommend checking out some more tutorials on basic projects - you can search for more specific projects and find a tutorial on them.&lt;/p&gt;

&lt;p&gt;This will always introduce you to a newer concept and perspective. But try not to end up doing too much tutorial (1 or 2 from different authors is fine), so you don't end up in "tutorial hell".&lt;/p&gt;

&lt;p&gt;These steps will help you cover the basics and the more you build projects, see from a different perspective, the more you will become efficient in it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-do-you-need-to-use-react"&gt;
  &lt;/a&gt;
  When do you need to use React
&lt;/h2&gt;

&lt;p&gt;I have already said this before, but I'll just re-iterate.&lt;/p&gt;

&lt;p&gt;React is not always needed. You should only use React when you are working on dynamic websites or as some developers may say "complex websites".&lt;/p&gt;

&lt;p&gt;You can always use vanilla JavaScript for small projects, and static websites.&lt;/p&gt;

&lt;p&gt;For example, if you're to build a business website for a client. The kind of website where you hard-code everything, where visitors come to see about the business like the contact info, what the business is about. For example a law firm. Such websites don't require React. No matter the pages you're to create, it would be easier for you with vanilla JavaScript.&lt;/p&gt;

&lt;p&gt;But if you're trying to build the next Twitter, DEV community, personal blog (which is always updated) then you'd need the likes of React to easily build them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;React is a cool tool for web development, and as cool as it is, it's very easy to learn. Learning it at the right time puts you at a higher advantage. To step up your web development career with React you can learn NextJS or Remix easily. You can follow the same steps I mentioned here for learning React to learn one of them. They are a lot easier to learn than React itself.&lt;/p&gt;

&lt;p&gt;Thanks for reading. You can leave a comment below to let me know what you think about this article. If you like this article, please like and share to spread love. And don't forget to please give me a shout-out and follow on Twitter &lt;a href="https://twitter.com/elijahtrillionz"&gt;@elijahtrillionz&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
