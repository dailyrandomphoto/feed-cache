<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>React.JS in a Nutshell</title>
      <author>Rithik Samanthula</author>
      <pubDate>Thu, 22 Apr 2021 09:15:26 +0000</pubDate>
      <link>https://dev.to/code2rithik/react-js-in-a-nutshell-4k65</link>
      <guid>https://dev.to/code2rithik/react-js-in-a-nutshell-4k65</guid>
      <description>&lt;p&gt;React, A JavaScript Library for Building Beautiful User Interfaces.&lt;/p&gt;

&lt;p&gt;It was developed by Facebook and was released in the year of 2013. &lt;/p&gt;

&lt;p&gt;ReactJS has been one of the most influential libraries of recent times.&lt;/p&gt;

&lt;p&gt;We use it to build components that represent logical and reusable parts of the UI.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lZaz5-In--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vr3tfiyb9k6fvkcnqumh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lZaz5-In--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vr3tfiyb9k6fvkcnqumh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The beauty of React is the simplicity of creating a component.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GAX6U-yI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8k5ym5830gor7l0nns6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GAX6U-yI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8k5ym5830gor7l0nns6.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use JavaScript Functions with HTML Code inside it to render the components. This is known as JSX. It compiles HTML and JavaScript together.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1h4L8iSp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x18tib8olixx2suc1oh8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1h4L8iSp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x18tib8olixx2suc1oh8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As an added bonus, you can easily jump into React Native and start building mobile apps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EfK4-CHF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bu58ucqyvt6zsik2od8o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EfK4-CHF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bu58ucqyvt6zsik2od8o.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's no surprise that this UI Library is one of the in-demand skills for many developers today.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3QrCoJ9B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7pxtveqi70on8c2w7g7i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3QrCoJ9B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7pxtveqi70on8c2w7g7i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks For Reading this Blog. If you enjoyed it, smash the like button and share it with your friends.&lt;/p&gt;

&lt;p&gt;Remember...&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#keep-coding-yall"&gt;
  &lt;/a&gt;
  Keep Coding Y'All üë®üèª‚Äçüíª
&lt;/h1&gt;

</description>
      <category>react</category>
      <category>explainlikeimfive</category>
      <category>javascript</category>
    </item>
    <item>
      <title>6 Ways To Make Money With Your Code</title>
      <author>Krushil Koshti</author>
      <pubDate>Thu, 22 Apr 2021 09:09:19 +0000</pubDate>
      <link>https://dev.to/koshtikrushil/6-ways-to-make-money-with-your-code-591b</link>
      <guid>https://dev.to/koshtikrushil/6-ways-to-make-money-with-your-code-591b</guid>
      <description>&lt;p&gt;Many of us know what ‚ÄúCoding‚Äù is and maybe some of you‚Äôve built really cool projects and have many years of practice, however, not everybody knows how to really make money from your code. I tried to find the best ways how to do it, some of them I used myself and some of them not, but actually, everybody can highlight something from this top.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Freelancing&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Freelancing is one of the most popular ways of doing money, if you know something well enough (Coding, Photoshoping, or Editing) then you can easily present your services. It is directly proportional to how much effort you put into this. There are many platforms to start accepting orders from other people, for instance: Upwork, Fiverr and etc.&lt;/p&gt;

&lt;p&gt;Read More :: &lt;a href="https://cmsinstallation.blogspot.com/2021/04/6-ways-to-make-money-with-your-code.html"&gt;https://cmsinstallation.blogspot.com/2021/04/6-ways-to-make-money-with-your-code.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>design</category>
      <category>php</category>
      <category>programming</category>
    </item>
    <item>
      <title>üåçüìç Building an Interactive Dot Density Map in JS</title>
      <author>andreykh1985</author>
      <pubDate>Thu, 22 Apr 2021 09:04:47 +0000</pubDate>
      <link>https://dev.to/andreykh1985/building-an-interactive-dot-density-map-in-js-1jn</link>
      <guid>https://dev.to/andreykh1985/building-an-interactive-dot-density-map-in-js-1jn</guid>
      <description>&lt;p&gt;Dot density maps may seem to be difficult to build, especially for those taking their very first steps in interactive data visualization development. But the truth is, they are not.&lt;/p&gt;

&lt;p&gt;Shachee Swadia, a data designer and storyteller, made a compelling tutorial showing how to create a beautiful interactive JavaScript-based dot map in four steps.&lt;/p&gt;

&lt;p&gt;To illustrate the process, in the article, she is visualizing data about all shipping ports across the world, first making a basic map in just a few lines of code and then improving it in several more.&lt;/p&gt;

&lt;p&gt;Check out the &lt;a href="https://www.anychart.com/blog/2021/04/20/js-dot-density-map/"&gt;JS dot map tutorial&lt;/a&gt; üî•&lt;/p&gt;

&lt;p&gt;üö¢‚öìÔ∏èüåê&lt;/p&gt;

</description>
      <category>datascience</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>The unconventional Developer Advocate?</title>
      <author>Vanessa Measom</author>
      <pubDate>Thu, 22 Apr 2021 08:58:29 +0000</pubDate>
      <link>https://dev.to/measomvanessa/the-unconventional-developer-advocate-21gi</link>
      <guid>https://dev.to/measomvanessa/the-unconventional-developer-advocate-21gi</guid>
      <description>&lt;p&gt;I enjoyed reading Wassim Chegham's article &lt;a href="https://dev.to/wassimchegham/the-subtle-art-of-being-a-developer-advocate-gdg"&gt;"The Subtle Art of Being A Developer Advocate"&lt;/a&gt; and it got me thinking of my role as a Developer Advocate.&lt;/p&gt;

&lt;p&gt;Why the title "The unconventional Developer Advocate"? Well for me, I'm not actually a developer and Wassim mentioned that &lt;em&gt;"... Developer Advocates are, before anything else, developers themselves and speak the same language as other developers."&lt;/em&gt;. So where do I stand in the Developer Advocacy world?&lt;/p&gt;

&lt;p&gt;Wassim states in his article &lt;em&gt;""Advocacy" is an old concept that comes from the Medieval Latin word "advocare" which means "to add a voice". The term "advocate" comes from Old French word "avocat" which means "a lawyer". So, an Advocate literarily means someone who "pleads a case or a cause", who "argues that something needs to be changed or improved"."&lt;/em&gt; and despite possibly being at a disadvantage of not being a developer, I feel that I can at least be an advocate for the developers in our own community.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who do I work for?&lt;/strong&gt;&lt;br&gt;
I've been working at &lt;a href="https://www.slashdata.co/"&gt;SlashData&lt;/a&gt;, (formerly known as VisionMobile), for 13 years. SlashData help top 100 technology firms understand software developer audiences and measure the ROI of their developer strategies I joined when the company was relatively small, and in a startup environment, over the years I have taken many roles from marketing to finance and HR ops, finally finding the place that fits best with me, working in the developer facing part of the company - &lt;a href="https://developereconomics.com/"&gt;Developer Economics&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What's my role at Developer Economics&lt;/strong&gt;&lt;br&gt;
My day to day tasks differs depending on the time of the year, you see, we run two developer surveys per year (they typically attract over 20,000+ developers) and there are a few parts of the survey process that I'm heavily involved in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developer feedback&lt;/strong&gt;&lt;br&gt;
This is by far the most important part of my role. During surveys we receive &lt;a href="https://developereconomics.com/blog/what-did-developers-have-to-say-about-our-q2-2020-survey"&gt;thousands of comments&lt;/a&gt; from participants with suggestions on how we can improve, tools we should include, translation feedback, prizes we should offer and more. Along with others in our team, we review every single piece of feedback and reply to all personally. We also reach out to community members outside the survey to check how we can improve our community offerings.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developer Committee&lt;/strong&gt;&lt;br&gt;
We have a lovely bunch of developers who are part of our Developer Committee. They are members of our community and help us to review our prizes, and content test our surveys before they go live to the wider audience. My job is to ensure their input is relayed to the analysts and developers at SlashData who build our developer surveys.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developer Newsletter&lt;/strong&gt;&lt;br&gt;
For the past four years I've run our biweekly &lt;a href="https://content.developereconomics.com/developer-economics-newsletter-signup-form"&gt;developer newsletter&lt;/a&gt;. As I mentioned above, I'm not a developer, but over the years I've come to understand the news and resources developers want to see. I've recently started to include wellbeing tips, especially with the last year taking it's toll on people's wellbeing. We recently ran a feedback poll about the content, people really responded well to it. We also polled our community and in one of our questions, we asked what they like the best, among the open-ended answers there were quite a few responses with just "Vanessa" ü§©, because I sign all the emails they receive from us and deal with day to day queries.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developer Interviews&lt;/strong&gt;&lt;br&gt;
Not for recruitment, we have over 30,000 members in our community, and over 1k have been with the community for over 5 years, so I run interviews to get to know them on a personal level, to understand what issues they experience, their goals, what tools they use etc. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developer prizes&lt;/strong&gt;&lt;br&gt;
We love to include prizes in our surveys that are going to make developers lives better. I'm responsible for choosing the prizes that will be included in the survey, from laptops, phones, license, vouchers, courses and swag. Not only do I choose the prizes, I also run the prize draws during and after the surveys have closed, contact the winners, order and ship their prizes and deal with many communications to ensure those who we can't get a physical prize to, can get a cash alternative - sadly for some countries there's many hoops to jump through to ensure the devs get their prizes. Developers from 155 countries take our surveys, and I advocate for everyone to get equally valuable prizes, no matter where in the world they might be.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Survey translations&lt;/strong&gt;&lt;br&gt;
Our surveys are available in English plus 8 additional languages (Chinese Simplified, Chinese Traditional, Spanish, Portuguese, Vietnamese, Russian, Japanese, Korean). I don't personally translate the surveys, but I do work closely with our translation partner to ensure our surveys are translated into the native languages so we can reach a &lt;a href="https://www.slashdata.co/blog/developer-research-101-right-methodology-reliable-survey-data?"&gt;diverse&lt;/a&gt; audience of developers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What else do I do?&lt;/strong&gt;&lt;br&gt;
There's a lot of customer service involved in the role, responding to developer queries throughout the year, we don't have a product that we sell, but I deal with prize queries following our prize draws.&lt;/p&gt;

&lt;p&gt;I work with our Community Lead &lt;a href="https://twitter.com/MiljanaMitic6"&gt;Miljana&lt;/a&gt; to ensure we grow our community, look for partners who we can work with, gifts we can offer to our newsletter subscribers, manage our CRM, add blog posts and other content to our website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who am I as a person?&lt;/strong&gt;&lt;br&gt;
I'm a mum of two, based in the UK, I'm actually quite an introvert so this is quite scary putting my head above the sand writing this! In one of my recent side quests I trained as a Health Kinesiologist (this side of me is where I love to help with developers wellbeing), next step is Reiki. At this stage of my life I'm usually found running after the kids at the park, sometimes I go cycling, love Minecrafting, I meditate when I can remember / have time. I want to learn to play the Piano.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Final thoughts&lt;/strong&gt;&lt;br&gt;
I'm obviously not a developer but I feel I make up for it with my primary role, which is giving a voice to developers in our community, I celebrate the individuals, champion their projects and try to empower them by finding news and resources to make them a better developer (and look out for their wellbeing!).&lt;/p&gt;

&lt;p&gt;If you're one of the Developer Economics community members, say hi üëã in the comments, or you can connect with me on Twitter at &lt;a href="https://twitter.com/MeasomVanessa"&gt;@MeasomVanessa&lt;/a&gt;. If you're a professional or enthusiast in developer relations, check out &lt;a href="https://www.devrelx.com/"&gt;DevRelx&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>devrel</category>
      <category>career</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Solution: Brick Wall</title>
      <author>seanpgallivan</author>
      <pubDate>Thu, 22 Apr 2021 08:56:20 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-brick-wall-4jld</link>
      <guid>https://dev.to/seanpgallivan/solution-brick-wall-4jld</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/brick-wall/discuss/1170889"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-554-medium-brick-wall"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/brick-wall/"&gt;Leetcode Problem #554 (&lt;em&gt;Medium&lt;/em&gt;): Brick Wall&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There is a brick wall in front of you. The wall is rectangular and has several rows of bricks. The bricks have the same height but different width. You want to draw a vertical line from the &lt;strong&gt;top&lt;/strong&gt; to the &lt;strong&gt;bottom&lt;/strong&gt; and cross the &lt;strong&gt;least&lt;/strong&gt; bricks.&lt;/p&gt;

&lt;p&gt;The brick wall is represented by a list of rows. Each row is a list of integers representing the width of each brick in this row from left to right.&lt;/p&gt;

&lt;p&gt;If your line go through the edge of a brick, then the brick is not considered as crossed. You need to find out how to draw the line to cross the least bricks and return the number of crossed bricks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You cannot draw a line just along one of the two vertical edges of the wall, in which case the line will obviously cross no bricks.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;[[1,2,2,1], [3,1,2], [1,3,2], [2,4], [3,1,2], [1,3,1,1]]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual:&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AzNOQZQc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wj94p4p4op6o0za3pmhp.png" alt="Example Visual"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;The width sum of bricks in different rows are the same and won't exceed &lt;code&gt;INT_MAX&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The number of bricks in each row is in range &lt;code&gt;[1,10,000]&lt;/code&gt;. The height of wall is in range &lt;code&gt;[1,10,000]&lt;/code&gt;. Total number of bricks of the wall won't exceed &lt;code&gt;20,000&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;If the goal here is to find where a line will cross the fewest bricks, then we could also say that the goal is to find where the most brick edges line up. We can consider the edges to occur at an index representing the current running total of the previous elements of a given row of the wall. For example, if the row is defined as &lt;strong&gt;[1,2,2,1]&lt;/strong&gt;, then the inside edges occur at &lt;strong&gt;[1,1+2,1+2+2]&lt;/strong&gt;, or &lt;strong&gt;[1,3,5]&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If we now know how to find the edges, then we're left with finding out which index has the highest frequency of edges, which naturally calls for a &lt;strong&gt;frequency map.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So we can iterate through each &lt;strong&gt;row&lt;/strong&gt; in the &lt;strong&gt;wall&lt;/strong&gt;, keep a running total of the current row (&lt;strong&gt;rowSum&lt;/strong&gt;), and then update the frequency of each edge's index in our frequency map (&lt;strong&gt;freq&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;Once we're done filling &lt;strong&gt;freq&lt;/strong&gt;, we just need to iterate through it to find the highest value (&lt;strong&gt;best&lt;/strong&gt;), which represents the number of edges aligned on a single index. Our actual answer, however, is the number of bricks, not edges, so we should &lt;strong&gt;return&lt;/strong&gt; the total number of rows minus &lt;strong&gt;best&lt;/strong&gt;.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;For Javascript, it's more performant to iterate through the finished &lt;strong&gt;freq&lt;/strong&gt; looking for the &lt;strong&gt;best&lt;/strong&gt; result&lt;/p&gt;

&lt;p&gt;In Python it's easier to run &lt;strong&gt;max()&lt;/strong&gt; directly on &lt;strong&gt;freq&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;For Java and C++ it's faster to keep track of &lt;strong&gt;best&lt;/strong&gt; as we add values to &lt;strong&gt;freq&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;For Java, it's also weirdly more performant to extract the &lt;strong&gt;row&lt;/strong&gt; processing to a helper function.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;leastBricks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;freq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;rowSum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rowSum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rowSum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;rowSum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;best&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;best&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;leastBricks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;freq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;rowSum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
                &lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rowSum&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                &lt;span class="n"&gt;rowSum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;freq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;leastBricks&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
            &lt;span class="n"&gt;processRow&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;processRow&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rowSum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getOrDefault&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rowSum&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rowSum&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;rowSum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; 
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;leastBricks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;unordered_map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rowSum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rowSum&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;best&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rowSum&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
                &lt;span class="n"&gt;rowSum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Make an Instagram Bot Using Python</title>
      <author>lary mak</author>
      <pubDate>Thu, 22 Apr 2021 08:30:06 +0000</pubDate>
      <link>https://dev.to/larymak/make-an-instagram-bot-using-python-4a0a</link>
      <guid>https://dev.to/larymak/make-an-instagram-bot-using-python-4a0a</guid>
      <description>&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Dru-c8LrH0s"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cGwjStb1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/marcomontalbano/image/upload/v1619079848/video_to_markdown/images/youtube--Dru-c8LrH0s-c05b58ac6eb4c4700831b2b3070cd403.jpg" alt="Instagram Bot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Source Code: &lt;a href="https://github.com/larymak/Python-project-Scripts/tree/main/InstagramBot"&gt;GitHub&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;Connect With me at &lt;a href="https://twitter.com/larymak1"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.instagram.com/nextgencoders/"&gt;Insta&lt;/a&gt; | &lt;a href="https://www.youtube.com/channel/UCrT1ARRZfLOuf6nc_97eXEg"&gt;YouTube&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/hillary-nyakundi-3a64b11ab/"&gt;LinkedIn&lt;/a&gt;  | &lt;a href="https://github.com/larymak"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>beginners</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>Material Tailwind ‚Äì New Framework for Web Developers</title>
      <author>Sajad Ahmad Nawabi</author>
      <pubDate>Thu, 22 Apr 2021 08:15:09 +0000</pubDate>
      <link>https://dev.to/sajadevo/material-tailwind-new-framework-for-web-developers-1pjd</link>
      <guid>https://dev.to/sajadevo/material-tailwind-new-framework-for-web-developers-1pjd</guid>
      <description>&lt;p&gt;When talking about the user interface, the most important thing is its appearance. It is the interaction point with the user‚Äôs attention. However, building a beautiful and effective appearance is not easy because it needs spending time and a lot of skills.&lt;/p&gt;

&lt;p&gt;In this case, the good part is that there are some workarounds, like frameworks and libraries (e.g. &lt;a href="https://tailwindcss.com"&gt;Tailwind CSS&lt;/a&gt;), which facilitate the process of building user interfaces (but not that much like you‚Äôre thinking about).&lt;/p&gt;

&lt;p&gt;OK, are you looking for a simple, easy, and quick way to build a better and beautiful user interface? If the answer is YES then you should take a look over &lt;a href="https://material-tailwind.com"&gt;Material Tailwind&lt;/a&gt;. Read this article to find out why.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-material-tailwind"&gt;
  &lt;/a&gt;
  What is Material Tailwind?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://material-tailwind.com"&gt;&lt;strong&gt;Material Tailwind&lt;/strong&gt;&lt;/a&gt; is a framework for building user interfaces, an open-source project by &lt;a href="https://creative-tim.com"&gt;Creative Tim&lt;/a&gt;. It is using &lt;a href="https://tailwindcss.com"&gt;Tailwind CSS&lt;/a&gt; ‚Äì a utility-first CSS framework, and &lt;a href="https://material.io"&gt;Material Design 2&lt;/a&gt; guidelines ‚Äì a modern design system developed by Google.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HIKigIxF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/material-tailwind-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HIKigIxF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/material-tailwind-logo.png" alt="Material Tailwind"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first version of &lt;a href="https://material-tailwind.com"&gt;Material Tailwind&lt;/a&gt; has been released based on &lt;a href="https://reactjs.org"&gt;ReactJS&lt;/a&gt;, the most popular JavaScript library for building user interfaces.&lt;/p&gt;

&lt;p&gt;So before we deep dive into Material Tailwind‚Äôs details, let‚Äôs take a look at &lt;a href="https://tailwindcss.com"&gt;Tailwind CSS&lt;/a&gt;, &lt;a href="https://material.io"&gt;Material Design 2&lt;/a&gt;, and &lt;a href="https://reactjs.org"&gt;ReactJS&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-tailwind-css"&gt;
  &lt;/a&gt;
  What is Tailwind CSS?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://tailwindcss.com"&gt;Tailwind CSS&lt;/a&gt; is a utility-first CSS framework packed with classes that can be composed to build any design directly into your markup.&lt;/p&gt;

&lt;p&gt;Compared to other CSS frameworks like &lt;a href="https://getbootstrap.com"&gt;Bootstrap&lt;/a&gt;, it doesn‚Äôt come with predefined components; instead, Tailwind CSS provides you a set of CSS helper classes. Using these classes, you can create custom designs and user interfaces with ease.&lt;/p&gt;

&lt;p&gt;For more information about Tailwind CSS, you can check the Tailwind CSS website: &lt;a href="https://tailwindcss.com"&gt;https://tailwindcss.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-material-design-2"&gt;
  &lt;/a&gt;
  What is Material Design 2?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://material.io"&gt;Material Design 2&lt;/a&gt; is the most popular, modern, and comprehensive design system developed by Google that helps you build high-quality digital experiences.&lt;/p&gt;

&lt;p&gt;The design system itself is a comprehensive set of useful guides and helpful tools that developers or designers can use for building modern, trendy and user-friendly user interfaces that adhere to material style.&lt;/p&gt;

&lt;p&gt;For more information about Material Design 2, you can check the Material Design 2 website: &lt;a href="https://material.io/"&gt;https://material.io/&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-reactjs"&gt;
  &lt;/a&gt;
  What is ReactJS?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://reactjs.org"&gt;ReactJS&lt;/a&gt; is the most popular front-end JavaScript library for building fast and interactive user interfaces. It is an open-source, component-based, front-end library responsible only for the application‚Äôs view layer in Model View Controller (MVC) architecture.&lt;/p&gt;

&lt;p&gt;For more information about ReactJS, you can check the ReactJS website: &lt;a href="https://reactjs.org/"&gt;https://reactjs.org/&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-material-tailwind"&gt;
  &lt;/a&gt;
  Why Material Tailwind?
&lt;/h2&gt;

&lt;p&gt;Therefore, as you read above, &lt;a href="https://material-tailwind.com"&gt;Material Tailwind&lt;/a&gt; has been built using the most popular technologies and trends around the world.&lt;/p&gt;

&lt;p&gt;As I said before, building a user interface is not easy, even if you‚Äôre using Tailwind CSS. It comes up with different helper classes, and you need to play around with thousands of helper classes to build a simple user interface that makes your code cluttered. Also, add the fact that you need to build everything from scratch, which takes a lot of time. ‚òπÔ∏è&lt;/p&gt;

&lt;p&gt;By using Material Tailwind you can build a user interface as quickly and easily as possible because you don‚Äôt need to build everything from scratch or play around with Tailwind CSS helper classes. Material Tailwind provides you all the important and necessary components for building a user interface in the format of &lt;a href="https://reactjs.org"&gt;ReactJS&lt;/a&gt; components with the space of &lt;a href="https://material.io"&gt;Material Design 2&lt;/a&gt; and &lt;a href="https://tailwindcss.com"&gt;Tailwind CSS&lt;/a&gt; helper classes üòç&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-can-use-material-tailwind"&gt;
  &lt;/a&gt;
  Who can use Material Tailwind?
&lt;/h2&gt;

&lt;p&gt;Material Tailwind is a free and open-source project and everyone can use it, you only need to have a basic knowledge of ReactJS.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#material-tailwind-components"&gt;
  &lt;/a&gt;
  Material Tailwind Components
&lt;/h1&gt;

&lt;p&gt;As I said before, Material Tailwind contains all the necessary and important components for building a user interface.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Alerts&lt;/li&gt;
&lt;li&gt;Buttons&lt;/li&gt;
&lt;li&gt;Cards&lt;/li&gt;
&lt;li&gt;Dropdowns and Dropups&lt;/li&gt;
&lt;li&gt;Images&lt;/li&gt;
&lt;li&gt;Inputs&lt;/li&gt;
&lt;li&gt;Labels&lt;/li&gt;
&lt;li&gt;Menus&lt;/li&gt;
&lt;li&gt;Modals&lt;/li&gt;
&lt;li&gt;Navbars&lt;/li&gt;
&lt;li&gt;Paginations&lt;/li&gt;
&lt;li&gt;Popovers&lt;/li&gt;
&lt;li&gt;Progress bars&lt;/li&gt;
&lt;li&gt;Tabs&lt;/li&gt;
&lt;li&gt;Tooltips&lt;/li&gt;
&lt;li&gt;Typography&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R_o1xebb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/material-tailwind-alerts-1024x584.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R_o1xebb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/material-tailwind-alerts-1024x584.png" alt="components"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fgpXAWp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/material-tailwind-buttons-1024x496.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fgpXAWp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/material-tailwind-buttons-1024x496.png" alt="buttons"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can check here the components: &lt;a href="https://material-tailwind.com/components"&gt;https://material-tailwind.com/components&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, this awesome framework comes with 3 fully coded sample pages. You can start working instantly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--syxH8LUZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2020/04/Screen-Shot-2021-04-12-at-15.31.04-1024x586.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--syxH8LUZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2020/04/Screen-Shot-2021-04-12-at-15.31.04-1024x586.png" alt="templates"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x3LSP2hL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2020/04/profil-page-1024x582.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x3LSP2hL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2020/04/profil-page-1024x582.png" alt="templates"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But it‚Äôs not the end of the story and we will expand and add more components to Material Tailwind in the near future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#material-tailwind-is-opensource"&gt;
  &lt;/a&gt;
  Material Tailwind is open-source
&lt;/h2&gt;

&lt;p&gt;Material Tailwind is an open-source project, and everyone can contribute to making Material Tailwind better. You can contribute to solve different issues or expand its components.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Before contributing to Material Tailwind, please read the contributing guideline: &lt;a href="https://github.com/creativetimofficial/material-tailwind/blob/main/CONTRIBUTING.md"&gt;https://github.com/creativetimofficial/material-tailwind/blob/main/CONTRIBUTING.md&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-the-near-future"&gt;
  &lt;/a&gt;
  In the near future
&lt;/h2&gt;

&lt;p&gt;As I said before, the first version of Material Tailwind is only available for ReactJS, but soon, you will see the other versions for &lt;a href="https://vuejs.org"&gt;Vue.js&lt;/a&gt;, &lt;a href="https://angularjs.org"&gt;Angular.js&lt;/a&gt;, &lt;a href="https://svelte.dev"&gt;Svelte&lt;/a&gt;, and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript"&gt;Vanilla Javascript&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>opensource</category>
      <category>designtool</category>
      <category>webapp</category>
    </item>
    <item>
      <title>New VSCode extension that takes automation to the next level</title>
      <author>Elio Struyf</author>
      <pubDate>Thu, 22 Apr 2021 08:14:32 +0000</pubDate>
      <link>https://dev.to/estruyf/new-vscode-extension-that-take-automation-to-the-next-level-3mcd</link>
      <guid>https://dev.to/estruyf/new-vscode-extension-that-take-automation-to-the-next-level-3mcd</guid>
      <description>&lt;p&gt;Recently I switched from using Alfred over to &lt;a href="https://raycast.com/"&gt;Raycast&lt;/a&gt;. What convinced me of Raycast is the simplicity the tool provides, plus the ability to simply create your custom commands/scripts.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Info&lt;/strong&gt;: I already wrote about it: &lt;a href="https://dev.to/estruyf/devhack-using-raycast-to-speed-up-my-productivity-1h4k"&gt;Using Raycast to speed up my productivity&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The more I use Raycast, the more I want to automate. A script I created was to start up my daily development tasks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open my VSCode editor with the right project loaded&lt;/li&gt;
&lt;li&gt;Open my terminal to the right folder&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;Microsoft Edge&lt;/code&gt; to the Azure Portal&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;Google Chrome&lt;/code&gt; with my application URL&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These tasks typically do not take a lot of time, but automating this by one command is so easy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#taking-it-to-the-next-level"&gt;
  &lt;/a&gt;
  Taking it to the next level
&lt;/h2&gt;

&lt;p&gt;To take it to the next level, I wanted to start my commands in VSCode as well. For my project I use two terminals:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open &lt;code&gt;ngrok&lt;/code&gt; as my application needs to be accessible remotely.&lt;/li&gt;
&lt;li&gt;Start the local development server (Next.js in my case).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Unfortunately, you can only trigger certain actions in VSCode by shortcuts. That is why I thought to create a new VSCode &lt;code&gt;Remote Control&lt;/code&gt; extension which allows you to send commands from anywhere on your device to the running VSCode instance. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Info&lt;/strong&gt;: Check out the extension here: &lt;a href="https://marketplace.visualstudio.com/items?itemName=eliostruyf.vscode-remote-control"&gt;VSCode Remote Control&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The extension spins up a &lt;code&gt;WebSocket&lt;/code&gt; server. By default, it will start it on port: &lt;code&gt;3710&lt;/code&gt;, but is configurable from the settings.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#show-me-what-it-can-do"&gt;
  &lt;/a&gt;
  Show me what it can do
&lt;/h2&gt;

&lt;p&gt;To speed up my process, I wanted to open two terminal instances in VSCode and run my commands in each of them.&lt;/p&gt;

&lt;p&gt;In my Raycast script, all I had to do is add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"{ &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;command&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;workbench.action.terminal.newWithCwd&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; }"&lt;/span&gt; | websocat ws://localhost:3710
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"{ &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;command&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;workbench.action.terminal.sendSequence&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;args&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: { &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;npm run ngrok&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; } }"&lt;/span&gt; | websocat ws://localhost:3710
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"{ &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;command&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;workbench.action.terminal.split&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; }"&lt;/span&gt; | websocat ws://localhost:3710
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"{ &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;command&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;workbench.action.terminal.focusAtIndex2&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; }"&lt;/span&gt; | websocat ws://localhost:3710
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"{ &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;command&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;workbench.action.terminal.sendSequence&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;args&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: { &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;cd solutions/msteams/webapp &amp;amp;&amp;amp; npm run dev&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; } }"&lt;/span&gt; | websocat ws://localhost:3710
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: this is not only created for Raycast. Once installed, you can run commands from anywhere on your device.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here the result of this script:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ImWOc5Y7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kh8wmqiqqyic2fdkpjy8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ImWOc5Y7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kh8wmqiqqyic2fdkpjy8.gif" alt="The result of the script"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check out the VSCode extension here: &lt;a href="https://marketplace.visualstudio.com/items?itemName=eliostruyf.vscode-remote-control"&gt;VSCode Remote Control&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>vscode</category>
      <category>bash</category>
      <category>tooling</category>
    </item>
    <item>
      <title>10 Useful Tips To Successful Technical Writing </title>
      <author>DrPrime01</author>
      <pubDate>Thu, 22 Apr 2021 07:59:57 +0000</pubDate>
      <link>https://dev.to/drprime01/10-useful-tips-to-successful-technical-writing-4d65</link>
      <guid>https://dev.to/drprime01/10-useful-tips-to-successful-technical-writing-4d65</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Besides being a good developer, your prowess in coding is well exhibited in your ability to relate and make easy technologies and frameworks you come across in your path as a programmer, in technical articles. Not only that, but you are also able to teach newbies and improve experts alike, and most importantly, yourself, the difficulties in a language and how you were able to overcome them using certain technologies and frameworks.&lt;br&gt;
In this article, I take you on a 10-runged ladder on how you can become a successful technical writer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#headlines-that-scream-read-on"&gt;
  &lt;/a&gt;
  Headlines that scream, "Read On!"
&lt;/h2&gt;

&lt;p&gt;No matter how interesting or educative the content of your article might be, if you've got a poor headline, no reader will be prompted to see what is within.&lt;br&gt;
The headline can be likened to the wrapper of a Christmas present, the beauty of the wrapper will create an impression of beautiful content in the receiver's mind, even before checking, but an ugly wrapper on the other side will create an ugly content impression.&lt;br&gt;
As a technical writer, you have to be choosy in your choice of headline for your article. Headlines that will convince and urge the readers to read the content. &lt;br&gt;
The headline should be given to the article after the content has been completed, because, the content will determine and must correspond to the headline given.&lt;br&gt;
Your headline should not give an appetizing pizza impression and upon consumption give a whack taste, that is, you should not give your article a headline that does not provide what it is stating in the content of the article, this will only make readers filter off any newly produced article.&lt;br&gt;
Your headlines should speak, "Continue Reading!"&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learn-and-stick-to-a-particular-technology-or-framework"&gt;
  &lt;/a&gt;
  Learn and stick to a Particular Technology or Framework
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nEtqhBZ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bpzf4r2myf6raw4fsrn2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nEtqhBZ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bpzf4r2myf6raw4fsrn2.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Be it a frontend, backend, Artificial Intelligence, Machine Learning, or any software developer, the credit of getting used to a particular technology or framework cannot be understated, most especially in technical writing. The audience you're writing for is to be taken as newbies or intermediates to any software you're writing on and explaining a language or technology you're not consistent with will make you look like a confused fellow.&lt;br&gt;
It is more dangerous on the part of a newbie because they tend to practice any new skill they learn, and your inconsistency in explanation will turn out to make them bad at what they're doing, even to the point of giving up on a language, or at worse, programming.&lt;br&gt;
Moreover, writing about a technology you're very familiar with and used to, will after trials, make readers come back to the article, to express profound gratitude, and even turn on the notification bell, expecting your next article, because they knew what they gained from the previous one and look forward to what they'll be getting in the latest release.&lt;br&gt;
So you see why it is important for you to write, based on your experience of a familiar language or technology.&lt;br&gt;
Just as it could be very helpful, when well done, it could also be dangerous if you're not fit for it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#know-the-tricks-shortcuts-and-easy-method-of-getting-problems-solved"&gt;
  &lt;/a&gt;
  Know the Tricks, Shortcuts, and Easy Method of Getting Problems Solved
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QfimEr3e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dwmyrcba6v3lrwolmnfw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QfimEr3e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dwmyrcba6v3lrwolmnfw.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
The audience expects to get a better and easier way to do something they have been struggling with for a long time. Introducing shortcuts and tricks can also make the readers realize that the time spent, wasted on writing long lines of code can be much reduced in writing a short line of code and still arriving at the same result.&lt;br&gt;
Shortcuts, tricks, better ways should if not all, take the better part of your article because that Is what the readers want to see.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keep-it-clear-simple-and-concise"&gt;
  &lt;/a&gt;
  Keep It Clear, Simple, and Concise
&lt;/h2&gt;

&lt;p&gt;You won't expect yourself to spend much time digesting a long and strenuous explanation when it can be expressed in simple terms, keeping the points intact. Just as it is uneasy for you to do this, imagine the uneasiness you could be making the readers pass through if you're guilty of this.&lt;br&gt;
Writing long explanations can easily bore readers and make them skip to the next article. Only you haven't got an article on that topic! &lt;br&gt;
Also, be sure to arrange your content in order of increasing urgency. From the introduction to the least important, linking up sequentially to the most important, and finally ending it with a conclusion; a short recap of what is expected of the readers to have learned.&lt;/p&gt;

&lt;p&gt;Keep it simple, clear, and concise, these matter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#be-unambiguous-in-your-language-use"&gt;
  &lt;/a&gt;
  Be Unambiguous in Your Language Use
&lt;/h2&gt;

&lt;p&gt;Imagine yourself reading a book, and having a dictionary opened before you at the same time to look up strange words and terms, it is demeaning! If there are simple words that could be used, use them. You are not writing to show your erudition in English, instead, your proficiency in code is what is needed.&lt;br&gt;
There are lots of tools that could be of help, breaking down long vocabularies and retaining its meaning, for example, Grammarly. It has a free version that can be installed and used. It also corrects grammatical errors.&lt;br&gt;
Moreover, it is advisable to stick to a particular person and tense to avoid getting both yourself and the reader confused.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#clearly-define-used-abbreviation-if-possible-avoid-it"&gt;
  &lt;/a&gt;
  Clearly Define Used Abbreviation, If Possible, Avoid it
&lt;/h2&gt;

&lt;p&gt;In writing technical articles, it is very important to minimize your use of abbreviations. And whenever it is used, its meaning must be clearly stated close to it, and in reusing it, the full meaning must not be far from it, that is, the abbreviation and full meaning cannot be at the beginning of a page and be reused alone at the lower end of the page. The full meaning may be easily forgotten if not properly stated causing the reader to scroll up and down to remember.&lt;br&gt;
To be on the safer side, it's better to do completely without it and use only the full meaning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stay-clear-from-plagiarism"&gt;
  &lt;/a&gt;
  Stay Clear From Plagiarism!
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DQ_qHTrI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5zrodl9mfcil0uuxgux.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DQ_qHTrI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5zrodl9mfcil0uuxgux.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
plagiarism is the act of reusing someone else's work and not citing properly the owner of the work or at all. This act has been known to bring down a lot of writers, once a writer has been discovered to be using someone else's work and not giving proper recognition to the real author, the writer and his work will lose esteem and that spells waterloo for the writer. One can also be fined for this if it's a copyrighted work.&lt;br&gt;
Paraphrasing, which is the lifting and copying of another author's work, that is, restating and rearranging another author's work to make it look as if you wrote it, is also another aspect to be avoided as it has the same pitfall as plagiarism for any writer caught in the act.&lt;br&gt;
As a technical writer, you are to avoid plagiarism and paraphrasing, whenever you quote another's work, cite the owner properly and where it was taken from. There are tools to use to avoid these traps which most writers tend to fall into, like Plagiarism Checker, an app that checks for copied works. Do well to use it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#move-on-to-another-technology-or-framework-loop-over-become-better"&gt;
  &lt;/a&gt;
  Move On To Another Technology Or Framework, Loop Over, Become Better
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P4fByCma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e0rfads5wxnh6urg09ov.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4fByCma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e0rfads5wxnh6urg09ov.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
After you've become ground in a language or technology, you should move on to a new one, learn its basics, tricks, shortcuts, because it is what the readers expect from you, and easy methods. They always look up to a new trick each time they read your article and sooner or later your article will become a bore if it only offers a particular technology all the time. This won't be cool. &lt;br&gt;
Moreover, doing this prompts readers to explore other languages and frameworks.&lt;br&gt;
Although it is painstaking, going through another technology and learning its basics to make things simple for readers, but, trust me, it pays off. You advance your game in tech and readers get more knowledge from you. So get moving and step up your game.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#be-open-to-criticism-smears-and-correction"&gt;
  &lt;/a&gt;
  Be Open To Criticism, Smears, and Correction
&lt;/h2&gt;

&lt;p&gt;No matter how good your article might be, you are bound to get criticized by readers, some who may be better at it than you or others who are just in the habit of criticism.  In the critiques, you learn a better way of doing it, some of which you don't know or might have skipped are revealed and you get better at it by taking to corrections. &lt;br&gt;
Never get down because of critique and stop what you are doing, instead, learn from it, buckle down to it and become better.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#liven-your-articles"&gt;
  &lt;/a&gt;
  Liven Your Articles
&lt;/h2&gt;

&lt;p&gt;Reading whole long lines of text may soon become tiresome to readers and make them scroll down instead of perusing or at worse leave your article for another. Liven your articles with pictures and GIFs that relate to the subject matter. Pictures and GIFs serve as a soothing panacea to readers and a short break to calm them while reading for better comprehension. &lt;br&gt;
Do not make your article a bore to readers, liven it. Moreover, don't get tempted to plaster the whole page with pictures and GIFs, they make the article look childish.&lt;br&gt;
Liven your articles, be moderate.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;In this article, you've learned how to impart the knowledge of tech to others via writing great technical articles in ten simple steps. A good follow-up of these steps will in no time help you ascend the apex of technical writing and probably, depending on your dexterity, land you a job.&lt;br&gt;
&lt;strong&gt;Stay tuned&lt;/strong&gt; for more articles from me.&lt;br&gt;
Follow up on my Twitter account &lt;a href="https://twitter.com/theDocWhoCodes?s=09"&gt;Dr Prime&lt;/a&gt; for more updates.&lt;br&gt;
Don't forget to like, air your thoughts, and share with friends who need to see this.&lt;br&gt;
&lt;strong&gt;Thanks For Reading!!!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>programming</category>
      <category>javascript</category>
      <category>python</category>
    </item>
    <item>
      <title>But first, learn the basics</title>
      <author>Malte Riechmann</author>
      <pubDate>Thu, 22 Apr 2021 07:42:50 +0000</pubDate>
      <link>https://dev.to/visuellverstehen/but-first-learn-the-basics-1113</link>
      <guid>https://dev.to/visuellverstehen/but-first-learn-the-basics-1113</guid>
      <description>&lt;h1&gt;
  &lt;a href="#there-is-too-much-to-learn"&gt;
  &lt;/a&gt;
  There is too much to learn
&lt;/h1&gt;

&lt;p&gt;The World Wide Web always was a messy place. A lot of people from all over the world are simultaneously contributing to it. That is, why it gets messier every day. It is, in all its entirety, kind of the biggest software project on the planet. And we all know, how easy it is to mess up big software projects.&lt;/p&gt;

&lt;p&gt;Over the last 30 years, a lot of technology was created. There are so many programming languages, tools, frameworks, and libraries out there, it is hard to keep track. And it gets more day by day.&lt;/p&gt;

&lt;p&gt;Every now and then a new shiny thing‚Ñ¢ arises. People will talk about it and will recommend it to you. If you are a beginner in web development, please do not listen to them. You should not invest time in the new shiny thing‚Ñ¢. Instead, you should learn the basics. Because the basics will outlive the new shiny thing‚Ñ¢.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-not-to-learn-first"&gt;
  &lt;/a&gt;
  What not to learn first
&lt;/h1&gt;

&lt;p&gt;Gatsby, Hugo, or Jekyll will someday help you build static websites, but first, learn the basics.&lt;/p&gt;

&lt;p&gt;Block-Element-Modifier (BEM), Sass, or Tailwind CSS will someday help you organize your CSS, but first, learn the basics.&lt;/p&gt;

&lt;p&gt;React, Vue.js, or Angular will someday help you build awesome user interfaces, but first, learn the basics&lt;/p&gt;

&lt;p&gt;MySQL, PostgreSQL, or MongoDB will someday help you store data in a database, but first, learn the basics.&lt;/p&gt;

&lt;p&gt;Ruby on Rails, Laravel, Django, or another Model-View-Controller (MVC) framework will someday help you build feature-rich backends, but first, learn the basics.&lt;/p&gt;

&lt;p&gt;Docker, Docker Compose, or Kubernetes will someday help you build and host websites, but first, learn the basics.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-to-learn-first"&gt;
  &lt;/a&gt;
  What to learn first
&lt;/h1&gt;

&lt;p&gt;Start with the basics. I recommend building a ton of websites just with basic technology. Maybe ten websites are enough to learn the basics, maybe you will need 50. It does not really matter, you just have to get started and keep going.&lt;/p&gt;

&lt;p&gt;There will be a day, where you understand enough about &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP"&gt;HTTP&lt;/a&gt;, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/URL"&gt;URL&lt;/a&gt;, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML"&gt;HTML&lt;/a&gt;, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS"&gt;CSS&lt;/a&gt;, and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript"&gt;JavaScript&lt;/a&gt;. Then and only then you can carefully start adding more technology to the stack.&lt;/p&gt;

&lt;p&gt;If you want to learn the basics, I can recommend following the developer roadmaps at &lt;a href="https://roadmap.sh/roadmaps"&gt;roadmaps.sh&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>career</category>
    </item>
    <item>
      <title>How To Write A Good README File</title>
      <author>Boyan Iliev</author>
      <pubDate>Thu, 22 Apr 2021 07:20:31 +0000</pubDate>
      <link>https://dev.to/boiliev/how-to-write-a-good-readme-file-2c0d</link>
      <guid>https://dev.to/boiliev/how-to-write-a-good-readme-file-2c0d</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;If you're familiar with GitHub, then you know what a README file is. But if you don't know what it is, you can think of it as the introduction to your repository. It's very helpful that while looking at someone's repo you can just scroll down to their README file and have a look at what their project is all about. &lt;/p&gt;

&lt;p&gt;It's crucial that your project gets introduced properly because if it isn't, the chances of someone pressing on the repo are low. That's why having a good README file shouldn't be overlooked and you should spend a good amount of your time on it. &lt;/p&gt;

&lt;p&gt;In this post, I am going to share some tips with you about how you can improve your README file, and hopefully, it can help you with your repos.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#choose-an-easy-name-for-your-project"&gt;
  &lt;/a&gt;
  Choose an easy name for your project
&lt;/h1&gt;

&lt;p&gt;Before we dive into the README.md file let's quickly mention the name of the project itself.&lt;/p&gt;

&lt;p&gt;When people search for different projects, the last thing they will want to see is: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;"cool-javascript-game-about-colors-and-rgb-colors-and-even-more-colors"&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;Now I know that this example is a little over-exaggerated, but you get the point. No one is going to press on a repo with such a long name. It's best if you try to have a simple and short name for your project that gets right to the point. &lt;/p&gt;

&lt;p&gt;So for the example, above we could just use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;"javascript-color-game"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;A name like this has a higher chance of getting clicked on and taken a look at. So make sure that your repos name is simple and straight to the point.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#give-a-descriptive-summary-of-your-project"&gt;
  &lt;/a&gt;
  Give a descriptive summary of your project
&lt;/h1&gt;

&lt;p&gt;Now that we have the repo name cleared out, let's focus on the README.md file!&lt;/p&gt;

&lt;p&gt;When someone visits your repo they can scroll down and read the README file. It should have a description of what your project is. But you wouldn't want it to be too short. And neither should it be too long. Now if it's a very big project then by all means you should give a proper explanation of what it is and what it does. But in most cases, it should be a well-written and structured text. There are five steps that I would recommend you follow while writing your README file.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step #1
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Write a quick introduction to what the project is about&lt;/strong&gt;. For example, if you made a to-do list using JavaScript, write about that. But don't get into too much depth.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step #2
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Write what your code uses&lt;/strong&gt;. For example HTML, CSS and JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step #3
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Write a few more details about the project&lt;/strong&gt;. Write things that would make you take interest in the project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-4"&gt;
  &lt;/a&gt;
  Step #4
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Write something about yourself&lt;/strong&gt;. You could say where you work, what your goals are, or share some of your previous projects. It's okay to share what you have created or what you are trying to accomplish &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-5"&gt;
  &lt;/a&gt;
  Step #5
&lt;/h2&gt;

&lt;p&gt;And finally, &lt;strong&gt;use images&lt;/strong&gt;. Show the reader what exactly the project is. Just by reading about it isn't going to get their full interest. But by seeing an image of it, they will be more likely to get more into it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;And these are some tips about writing a good README file. It's very important that you get comfortable writing these things. It could help you change the level of interaction your GitHub repo gets.&lt;/p&gt;

&lt;p&gt;I hope that this post has helped you in improving your README files and I hope to see some great repos with great README files out on GitHub soon.&lt;/p&gt;

</description>
      <category>github</category>
      <category>readme</category>
    </item>
    <item>
      <title>Build a Discord Bot in 6 Minutes With Node.js and Autocode</title>
      <author>Jacob Lee</author>
      <pubDate>Thu, 22 Apr 2021 06:58:29 +0000</pubDate>
      <link>https://dev.to/hacubu/build-a-discord-bot-in-6-minutes-with-node-js-and-autocode-4n2d</link>
      <guid>https://dev.to/hacubu/build-a-discord-bot-in-6-minutes-with-node-js-and-autocode-4n2d</guid>
      <description>&lt;p&gt;In this article, I'll show you how to set up a fully customizable &lt;a href="https://discord.com"&gt;Discord&lt;/a&gt; bot that you can have running in your guild in 6 minutes (or less!). I'll also give you some helpful tips you can use to further customize your bot after getting the basic example working.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--67W8qcJg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/591tnsqh3a2dqf7t958j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--67W8qcJg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/591tnsqh3a2dqf7t958j.png" alt="Your bot responding with a message when it is mentioned"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We'll be using &lt;a href="https://autocode.com"&gt;Autocode&lt;/a&gt; to do the heavy lifting around authenticating to the Discord API, handling incoming events, and hosting our bot's Node.js code ‚Äî all for free. We've got an online editor as well, so the only other thing you'll need to get started is a Discord account!&lt;/p&gt;

&lt;p&gt;Let's dive in!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#quickstart"&gt;
  &lt;/a&gt;
  Quickstart
&lt;/h1&gt;

&lt;p&gt;Start by going to to the &lt;a href="https://autocode.com/app/discord/basic-discord-example/"&gt;Discord starter app page&lt;/a&gt; on Autocode. The bot's source code is completely open, so if you're curious, feel free to take a look!&lt;/p&gt;

&lt;p&gt;When you're ready, press the green &lt;strong&gt;Install Free&lt;/strong&gt; button. If you haven't already, create an Autocode account, then select a name for your project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fsFEEaNu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kimi2z4ph1nozvci4xcd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fsFEEaNu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kimi2z4ph1nozvci4xcd.png" alt="Name your Discord project"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the next screen, you'll be prompted to link a Discord account:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fVtVeyTS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7gfdhujv57zyrlp337nz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fVtVeyTS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7gfdhujv57zyrlp337nz.png" alt="Link a Discord account"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Press &lt;strong&gt;Link&lt;/strong&gt;, then &lt;strong&gt;Link New Resource&lt;/strong&gt; in the modal that appears and follow the instructions to link a Discord app. This involves creating an app from &lt;a href="https://discord.com/developers/applications"&gt;Discord's developer portal&lt;/a&gt; and installing it into your guild, then pasting the app's authentication credentials into Autocode when prompted. &lt;/p&gt;

&lt;p&gt;Finally, press &lt;strong&gt;Install App&lt;/strong&gt;. And that's it! If your guild has a &lt;code&gt;#general&lt;/code&gt; channel, you'll see a welcome message confirming installation. Mention your bot in a message by typing &lt;code&gt;@BotName&lt;/code&gt; and your bot will respond!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-does-it-work"&gt;
  &lt;/a&gt;
  How Does It Work?
&lt;/h1&gt;

&lt;p&gt;Autocode listens for events from Discord using the bot credentials you supplied earlier. When it receives an event, Autocode triggers the appropriate endpoints in projects with the same bot linked.&lt;/p&gt;

&lt;p&gt;In this specific case, Autocode triggers the &lt;code&gt;functions/events/discord/bot_mention.js&lt;/code&gt; endpoint of the app you just installed. This endpoint contains a call to the messages.create method of the &lt;a href="https://autocode.com/lib/discord/channels/#messages-create"&gt;discord.channels API&lt;/a&gt; from Autocode's standard library, which sends the message. Here's what that code looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// authenticates you with the API standard library&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lib&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lib&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)({&lt;/span&gt;&lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;STDLIB_SECRET_TOKEN&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * An HTTP endpoint that acts as a webhook for Discord message.create event
 * @param {object} event
 * @returns {any} result
 */&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;messageResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;lib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;discord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;channels&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@0.0.2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;channel_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;channel_id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="s2"&gt;`Hey &amp;lt;@!&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;author&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;! I'm a bot powered by Autocode.`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;`You mentioned me in a message, so here I am!`&lt;/span&gt;
    &lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;embed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Guild Information&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rich&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0x00AA00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Green color&lt;/span&gt;
      &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You could add some information here for guild members to view!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Message Formatting&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Check out this link for more details on formatting message embeds:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://discord.com/developers/docs/resources/channel#embed-object-embed-structure&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
        &lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Setting up Slash Commands&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Check out the README for this bot on Autocode for help setting up slash commands:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://autocode.com/app/discord/basic-discord-example/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
        &lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}]&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;tts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;messageResponse&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#slash-commands"&gt;
  &lt;/a&gt;
  Slash Commands
&lt;/h1&gt;

&lt;p&gt;The other endpoint in the app, &lt;code&gt;functions/events/discord/command.js&lt;/code&gt;, sends a message containing the number of users and bots currently in the guild when slash command called &lt;code&gt;/member-count&lt;/code&gt; is triggered:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LZChenmH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkgjbijecdj062kdk9d3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LZChenmH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkgjbijecdj062kdk9d3.png" alt="Successful member count message"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, before this will work, we need to register the slash command with Discord. Discord doesn't currently have a built-in UI for this, but we can make the necessary API requests from Autocode's documentation pages to set it up. &lt;/p&gt;

&lt;p&gt;Navigate to the &lt;a href="https://autocode.com/lib/discord/commands/#create"&gt;create method of the discord.commands API page&lt;/a&gt; and fill out the parameters as shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GtbRkfjt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6kgt093w9iyo806b81k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GtbRkfjt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6kgt093w9iyo806b81k.png" alt="Creating a Discord slash command via API request"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fill out the &lt;code&gt;guild_id&lt;/code&gt; parameter with your guild's id (see the &lt;strong&gt;Tips&lt;/strong&gt; section later in the article if you need help finding it). Then, press &lt;strong&gt;Authenticate and Link Accounts&lt;/strong&gt; and choose the Discord bot you linked earlier. Finally, press &lt;code&gt;Run&lt;/code&gt;. Congratulations! You've created a slash command in your guild. Try it out in your guild by typing &lt;code&gt;/member-count&lt;/code&gt;. If you've done everything correctly, you should see...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vJAefb4K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/om6eohz56ayg19gskmjn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vJAefb4K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/om6eohz56ayg19gskmjn.png" alt="Privileged intents required"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whoops. There's one more thing we need to do!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-privileged-intents"&gt;
  &lt;/a&gt;
  Setting Up Privileged Intents
&lt;/h2&gt;

&lt;p&gt;If you look at the code for the &lt;code&gt;functions/events/discord/command.js&lt;/code&gt; endpoint, you'll notice that it calls the members.list method of the &lt;a href="https://autocode.com/lib/discord/guilds/#members-list"&gt;discord.guilds API&lt;/a&gt;. Discord treats this API as privileged, so to use it, you must manually grant access to your bot.&lt;/p&gt;

&lt;p&gt;Go back to the &lt;a href="https://discord.com/developers/applications"&gt;Discord developer portal&lt;/a&gt; and open your bot settings. Open the &lt;strong&gt;Bot&lt;/strong&gt; pane, and scroll down until you see the &lt;strong&gt;Privileged Gateway Intent&lt;/strong&gt; settings:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HWXCCqI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vtzy5smvp86kczlb8pum.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HWXCCqI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vtzy5smvp86kczlb8pum.png" alt="Privileged intent settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enable the toggle labeled &lt;strong&gt;Server Members Intent&lt;/strong&gt;, then go back to your Discord server and run the command again. You should then see a proper message:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LZChenmH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkgjbijecdj062kdk9d3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LZChenmH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkgjbijecdj062kdk9d3.png" alt="Successful member count message"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You've now fully set up the starter app! You can modify it's code to your heart's content, as well as add new endpoints for other Discord events, by reopening your project in Autocode.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#additional-tips"&gt;
  &lt;/a&gt;
  Additional Tips
&lt;/h1&gt;

&lt;p&gt;As you continue to build, here are some additional tips you might find useful:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finding-your-guild-id"&gt;
  &lt;/a&gt;
  Finding Your Guild Id
&lt;/h2&gt;

&lt;p&gt;One way you can find your guild id (as well as ids for channels, users, and roles) is to enable &lt;strong&gt;Developer Mode&lt;/strong&gt;. Open your &lt;strong&gt;User Settings&lt;/strong&gt; by clicking the gear in the bottom left corner of your client, then click the &lt;strong&gt;Advanced&lt;/strong&gt; menu item in the left sidebar and turn on the &lt;strong&gt;Developer Mode&lt;/strong&gt; toggle:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--43BlgtBX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rfukisooj42jrbjgvij4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--43BlgtBX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rfukisooj42jrbjgvij4.png" alt="Enabling developer mode"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once enabled, exit your settings and right click the icon of the guild containing your bot in the left sidebar. The menu that appears will contain a new &lt;code&gt;Copy ID&lt;/code&gt; item:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sTnyrOK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9hn18d4prvswekq0w30.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sTnyrOK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9hn18d4prvswekq0w30.png" alt="The copy id item"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select it, and the guild id will be copied to your clipboard. Right clicking users, channels, and roles will have a similar &lt;code&gt;Copy ID&lt;/code&gt; option.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#formatting-messages"&gt;
  &lt;/a&gt;
  Formatting Messages
&lt;/h2&gt;

&lt;p&gt;Posting simple messages to Discord is easy with the &lt;a href="https://autocode.com/lib/discord/channels/#messages-create"&gt;discord.channels API&lt;/a&gt;, and Discord even supports markdown for easy formatting. However, as messages get more complex, here are a few tips to keep in mind:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mentioning a user or a bot in your message requires you to surround their id with brackets in a specific way. Here's an example: &lt;code&gt;This message is tagging a user: &amp;lt;@!000000000000&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Discord will automatically unfurl links in your messages, which you can use to your advantage to easily create useful notifications.&lt;/li&gt;
&lt;li&gt;Adding rich embeds to your message can really help it stand out in your channel. You can use the messages in the sample app endpoints as a starting point for what's possible, and check out the full list of embed object fields in &lt;a href="https://discord.com/developers/docs/resources/channel#embed-object"&gt;Discord's docs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;One gotcha with embeds is the &lt;code&gt;color&lt;/code&gt; parameter ‚Äî it takes a number, not a string. A convenient way to represent RGB colors as a number for this parameter is to use hexadecimal (&lt;code&gt;0x00AA00&lt;/code&gt; with no quotes for green instead of &lt;code&gt;'#00AA00'&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;tts&lt;/code&gt; stands for "text to speech" ‚Äî setting it to true will make Discord read your message aloud to anyone with the right settings, so be careful when testing it in a guild with others!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://discord.com/developers/docs/reference#message-formatting"&gt;Formatting Discord messages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discord.com/developers/docs/resources/channel#embed-object"&gt;Discord message embed structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discord.com/developers/docs/interactions/slash-commands"&gt;Discord slash commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discord.com/developers/applications"&gt;Discord developer portal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://autocode.com/lib/discord/commands/"&gt;Autocode discord/commands API page for creating slash commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://support.discord.com/hc/en-us/articles/206346498-Where-can-I-find-my-User-Server-Message-ID-"&gt;How to find your Discord guild id&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank You!
&lt;/h1&gt;

&lt;p&gt;If you have any questions, feedback, or if you just want to chat, join Autocode Discord! We've got a growing community who would be happy to help. You can get an invite under &lt;strong&gt;Docs &amp;gt; Join Discord&lt;/strong&gt; in the topbar on autocode.com. &lt;/p&gt;

&lt;p&gt;You can also reach out to me directly on Twitter &lt;a href="https://twitter.com/hacubu"&gt;@Hacubu&lt;/a&gt;. And for more Autocode updates, follow us on Twitter &lt;a href="https://twitter.com/AutocodeHQ"&gt;@AutocodeHQ&lt;/a&gt;. Until next time!&lt;/p&gt;

</description>
      <category>discord</category>
      <category>node</category>
      <category>api</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
