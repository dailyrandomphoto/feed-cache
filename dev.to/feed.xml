<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>My first month as a Developer</title>
      <author>Vardana Bhanot</author>
      <pubDate>Sun, 11 Apr 2021 20:15:46 +0000</pubDate>
      <link>https://dev.to/vardanabhanot/my-first-month-as-a-developer-4805</link>
      <guid>https://dev.to/vardanabhanot/my-first-month-as-a-developer-4805</guid>
      <description>&lt;p&gt;So a little about me, I joined a company as a software developer a month back and it's my first job, in which I am  mostly working on PHP and JavaScript specifically jQuery.&lt;/p&gt;

&lt;p&gt;So most of the things I am gonna mention here are the once I learnt after writting a lot of jQuery speghetti. &lt;/p&gt;

&lt;p&gt;So as I started working on a new feature I was given a new file, so I was just trying to make things work in the front-end and ended up thinking that I will structure these things after I make up things work. So after the things were done and I had to add something new and after adding the new thing everything broke.&lt;br&gt;
And then I realised how difficult it was to read the code I had written.&lt;br&gt;
I was having difficult time reading my own code.&lt;br&gt;
So here I am gonna tell you things I learnt after getting I that situation.&lt;/p&gt;

&lt;p&gt;And all the code example are in &lt;strong&gt;&lt;em&gt;PHP&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#1divide-the-code-into-functions"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1.Divide the code into functions:&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;A single function should just do a single thing&lt;/em&gt;, and structure your code from the start, as it will make it easy for you to debug the code as well as for someone who might have to make changes to your code in future.&lt;br&gt;
Making your function do just one thing makes it more readable and modular so you can reuse it anywhere you want.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#2try-not-to-nest-ifelse-much-and-return-early"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2.Try not to nest if-else much and return early&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Nesting if else too much make it difficult to read &lt;br&gt;
for example.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bad Practice&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function is_winters($month){
   if(!empty($month)){
      if(is_string($month)){
         if($month == 'january'){
             return true;
         }
         else if($month == 'december'){
             return true;
         }
         else if($month == 'november'){
             return true;
         }
      }else{
            return false;
      }
   }else{
      return false;
   }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Good Practice&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function is_winters($month){
    if(empty($month)){
       return false;
    }
    $winter_months = ['november', 'december', 'january'];
return in_array(strtolower($month), $winter_months, true);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#3avoid-using-for-loops"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3.Avoid using for loops&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Here I am talking about the basic for loops like &lt;br&gt;
&lt;code&gt;for($i=0; $i&amp;lt; $num; $i++){}&lt;/code&gt;&lt;br&gt;
using foreach loops make the code more readable and reduces the need to map the variable in mind in for loops.&lt;br&gt;
for example we have an array of &lt;code&gt;$userProfiles=[...somedata];&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;using old school for loop&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for($i=0; $i&amp;lt;count($userProfiles); $i++){
    print_r($userProfiles[$i]['user_name'];
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;using foreach(or any other equivalent form in your language)&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;foreach($userProfiles as $userProfile){
    print_r($userProfile['user_name']);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;you might agree or disagree with me but this helped me, and you surely sometimes need the old school for loop or even while loops but it depends on what you are dealing with.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4dont-make-unneeded-long-descriptive-variable-name"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4.Don't make unneeded long descriptive variable name&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;I did this a lot trying to make good descriptive variable names but I ended up making them long.&lt;br&gt;
like &lt;code&gt;$user_profile_color;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bad Practice&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class UserProfile{
    $user_profile_color;
    $user_profile_picture;
    $user_profile_settings;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Good Practice&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class UserProfile{
    $profile_color;
    $profile_picture;
    $settings;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#5think-before-you-write"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.Think before you write&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Just jumping on to write is not a wise thing to do, it's good to sit back for a while and think about how to do things, how to structure the function, which conditional to use , which loop to use, these small decisions help a lot.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h4&gt;

&lt;p&gt;These where the few things that I learnt and helped me write more readable code. Its not that I have mastered the art of writing clean code but if I look a month back I am surely better at writing programs which are more readable.&lt;br&gt;
I knew most of these points before I ended up writing the code still I ended up writing messy code, but after I had faced how a messy code can make your life a hell, I am trying my best to keep things clean.&lt;/p&gt;

&lt;p&gt;I would love to know if you have suggestions on how to write better code.&lt;/p&gt;

&lt;p&gt;I hope you have an amazing day.&lt;/p&gt;

</description>
      <category>php</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How Neural Networks work: activation functions</title>
      <author>Madeline</author>
      <pubDate>Sun, 11 Apr 2021 19:40:40 +0000</pubDate>
      <link>https://dev.to/madeline_pc/how-neural-networks-work-activation-functions-2nd7</link>
      <guid>https://dev.to/madeline_pc/how-neural-networks-work-activation-functions-2nd7</guid>
      <description>&lt;p&gt;In my post &lt;a href="https://madelinecaples.hashnode.dev/deep-learning-when-and-why-is-it-useful"&gt;Deep learning: when and why is it useful?&lt;/a&gt;, I discussed why a neural network uses non-linear functions. In this article we will see an example of &lt;em&gt;how&lt;/em&gt; to use those non-linear functions in a neural network. We'll be considering classification problems for the sake of simplicity. We'll also look at a few different kinds of non-linear functions, and see the different effects they have on the network. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-actually-is-an-activation-function"&gt;
  &lt;/a&gt;
  What actually &lt;em&gt;is&lt;/em&gt; an activation function?
&lt;/h2&gt;

&lt;p&gt;A neural network can have any number of layers. Each layer has a linear function followed by a non-linear function, called an &lt;strong&gt;activation function.&lt;/strong&gt; The activation function takes the output from the linear function and transforms it somehow. That activation becomes the input features for the next layer in the neural network. &lt;/p&gt;

&lt;p&gt;Here's a 3 layer neural network to help us visualize the process: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j98M30cd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168960678/XMnZZXGfs.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j98M30cd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168960678/XMnZZXGfs.jpeg" alt="20210411_151200.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We have features (x1, x2, x3, x4, x5) that go into the first hidden layer&lt;/li&gt;
&lt;li&gt;this layer calculates the linear functions (y=wx+b) on each input and then puts the result from that calculation through the activation function ReLU(max(0, x)&lt;/li&gt;
&lt;li&gt;the activations output from layer 1 becomes the inputs for layer 2 and the same calculations happen here&lt;/li&gt;
&lt;li&gt;the activations output from layer 2 become the input for layer 3 and then layer 3 does the same linear function-activation function combo&lt;/li&gt;
&lt;li&gt;the last set of activations from layer 3 go through a final activation layer, that will be different depending on what your model is trying to predict: if you have only two classes (a binary classifier), then you can use a &lt;strong&gt;sigmoid&lt;/strong&gt; function, but if you have more than two classes you will want to use &lt;strong&gt;softmax&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;those final activations are your predicted labels&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#why-would-we-want-to-do-that"&gt;
  &lt;/a&gt;
  Why would we want to do that?
&lt;/h3&gt;

&lt;p&gt;Linear models are great, but sometimes non-linear relationships exist and we want to know what they are. Consider the example below. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cQMZTyNk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168740763/hJu2pIeI3.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cQMZTyNk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168740763/hJu2pIeI3.jpeg" alt="20210409_145007.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We want to predict the boundary line between the blue and pink dots (fascinating, I know!).  &lt;/p&gt;

&lt;p&gt;This is what a linear function, such as logistic regression, can uncover: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UHzuLG1D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168750925/-dNmQHb5b.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UHzuLG1D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168750925/-dNmQHb5b.jpeg" alt="20210409_145210.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is what a non linear neural network can uncover, which gives us a better visualization of the boundaries between blue and pink dots: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xd8Q-fzn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168797808/HzCF2vJaZ.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xd8Q-fzn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168797808/HzCF2vJaZ.jpeg" alt="20210409_145518.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Furthermore, the more hidden layers we add to our network, the more complex relationships we can potentially find in the data—each layer is learning about some feature in the data. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#okay-but-how"&gt;
  &lt;/a&gt;
  Okay, but how?
&lt;/h3&gt;

&lt;p&gt;I find it helpful to think of activation functions in two categories (I don't know if this is an "official" distinction, it's just the way I think about them)—activations on hidden units and activations for the final output. The activations for the hidden units exist to make training easier for the neural network, and allow it to uncover non-linear relationships in the data. The activations for the final output layer are there to give us an answer to whatever question we are asking the neural network.&lt;/p&gt;

&lt;p&gt;For example, let's imagine we're training a binary classifier that distinguishes between pictures of cats and mice. We might use the &lt;strong&gt;ReLU activation function&lt;/strong&gt; on our &lt;em&gt;hidden&lt;/em&gt; units, but for our &lt;em&gt;final&lt;/em&gt; output layer we need to know the answer to our question: is this picture of a cat or a mouse? So we will want an activation function that outputs 0 or 1. &lt;/p&gt;

&lt;p&gt;Let's take a look at what each different activation function is actually doing. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-few-popular-activation-functions"&gt;
  &lt;/a&gt;
  A few popular activation functions:
&lt;/h3&gt;

&lt;p&gt;x here stands for the output from the linear function that is being fed into the activation function  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mAHoxVWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618169062564/Q3JxGG6to.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mAHoxVWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618169062564/Q3JxGG6to.jpeg" alt="20210411_151748.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Sigmoid&lt;/strong&gt; converts outputs to be between 0 and 1 &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HCjM_pqN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168116473/2QMkQxm1k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HCjM_pqN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168116473/2QMkQxm1k.png" alt="sigmoid.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Tanh:&lt;/strong&gt;  converts numbers to range from -1 to 1—you can picture it as a shifted version of sigmoid. It has the effect of centering the data so that the mean is closer to 0, which improves learning for the following layer.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ByybrVuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168142479/4U7DZhFDf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ByybrVuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168142479/4U7DZhFDf.png" alt="tanh.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ReLU (rectified linear unit):  max(0, x)&lt;/strong&gt; if the number is negative the function gives back 0, and if the number is positive it just gives back the number with no changes—ReLU tends to run faster than tanh in computations, so it is generally used as the default activation function for hidden units in deep learning&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Leaky ReLU:  max(0.001x, x)&lt;/strong&gt;—if the number x is negative, it gets multiplied by 0.01, but if the number x is positive, it stays the same x &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#final-layer-activation-functions"&gt;
  &lt;/a&gt;
  Final layer activation functions:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Sigmoid&lt;/strong&gt; is used to turn the activations into something interpretable for predicting the class in &lt;strong&gt;binary classification,&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;since we want to get an output of either 0 or 1, a further step to is added: &lt;/li&gt;
&lt;li&gt;decide which class your predictions belong to according to a certain threshold (often if the number is less than 0.5 the output is 0, and if the number is 0.5 or higher the output is 1)&lt;/li&gt;
&lt;li&gt;(Yes, sigmoid is on both lists—that's because it is more useful in deep learning in producing outputs, but it's helpful to know about for understanding Tanh and ReLU).&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Softmax&lt;/strong&gt; is used when you need more than one final output, such as in a classifier for more than one category/class. Suppose you want to know if a certain image depicts a cat, dog, alligator, onion, or none of the above. The &lt;strong&gt;motivation:&lt;/strong&gt; it provides outputs that are probabilities&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dqSN7sHC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168170744/vaGO3TGvh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dqSN7sHC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618168170744/vaGO3TGvh.png" alt="softmax.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If that formula looks gross to you, come back next week—I plan to break it down step by step until if seems painfully simple&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>deeplearning</category>
      <category>machinelearning</category>
      <category>datascience</category>
      <category>neuralnetworks</category>
    </item>
    <item>
      <title>A Basic Setup for Web Developer</title>
      <author>CodeOzz</author>
      <pubDate>Sun, 11 Apr 2021 19:37:27 +0000</pubDate>
      <link>https://dev.to/codeozz/a-basic-setup-for-web-developer-5hg7</link>
      <guid>https://dev.to/codeozz/a-basic-setup-for-web-developer-5hg7</guid>
      <description>&lt;p&gt;Hey ! A few time ago I started a new Dev environment in a new computer so I needed to re-install all stuff linked to my dev stuff !&lt;/p&gt;

&lt;p&gt;I took this opportunity to create a list of thing to install in order to have a basic and good dev environment from scratch !&lt;/p&gt;

&lt;p&gt;(Check at the end of this article a link with every command linux in order to create this env with more stuff)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basics"&gt;
  &lt;/a&gt;
  🔧 Basics
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#curl"&gt;
  &lt;/a&gt;
  Curl
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://curl.se/"&gt;https://curl.se/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;curl is used in command lines or scripts to transfer data ! Very useful tools for every developer !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vim"&gt;
  &lt;/a&gt;
  Vim
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.vim.org/"&gt;https://www.vim.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A powerful Text editor when you need to edit or check a file fastly !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#zsh-amp-ohmyzsh"&gt;
  &lt;/a&gt;
  Zsh &amp;amp; oh-my-zsh
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://ohmyz.sh/"&gt;https://ohmyz.sh/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the best terminal ever to my mind ! for using oh-my-zsh you will need to install zsh.&lt;/p&gt;

&lt;p&gt;oh-my-zsh will improve a lot of thing and with this you will be able to use a lot of shortcut about git &amp;amp; shell command !&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(link to shortcut &lt;a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Cheatsheet"&gt;https://github.com/ohmyzsh/ohmyzsh/wiki/Cheatsheet&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dev-tools"&gt;
  &lt;/a&gt;
  💻 Dev tools
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#git"&gt;
  &lt;/a&gt;
  Git
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://git-scm.com/"&gt;https://git-scm.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Git is a free and open source distributed version control system, if you don't it, close this tab (no keep open but open a new tab :p) and learn git !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#node"&gt;
  &lt;/a&gt;
  Node
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://nodejs.org/en/"&gt;https://nodejs.org/en/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For every javascript developper you will need to use NodeJs in a lot of project ! It's use for creating a server in JS !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#npm-amp-nvm"&gt;
  &lt;/a&gt;
  Npm &amp;amp; Nvm
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/"&gt;https://www.npmjs.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What is the most heavy thing in the world ? Node module folder of course ! npm will help developper to add a lot of external module very easy !&lt;/p&gt;

&lt;p&gt;Nvm is used to handle npm versioning !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#docker"&gt;
  &lt;/a&gt;
  Docker
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.docker.com/"&gt;https://www.docker.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Docker is very very usefull for every developper in the world ! If you don't know what is this, you should learn how and why it's a &lt;strong&gt;famous&lt;/strong&gt; tools !&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dev-software"&gt;
  &lt;/a&gt;
  📀 Dev Software
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#google-chrome-or-any-other-browser"&gt;
  &lt;/a&gt;
  Google Chrome or any other browser
&lt;/h3&gt;

&lt;p&gt;For me I used Google chrome but you are free of using any browser !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#postman"&gt;
  &lt;/a&gt;
  Postman
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.postman.com/"&gt;https://www.postman.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I &lt;strong&gt;LOVE&lt;/strong&gt; this software, you can so easly make http(s) call for API, create custom API Library, test your api, import any call from curl to Postman call.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vs-code-or-any-other-ide"&gt;
  &lt;/a&gt;
  VS Code or any other IDE
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://code.visualstudio.com/"&gt;https://code.visualstudio.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I used it for every JS project and I love it ! I used a lot of extension (an incoming article from my VS Code setup and shortcut incoming !)&lt;/p&gt;

&lt;p&gt;So from now you are ready to start to learn basic web !&lt;/p&gt;

&lt;p&gt;I let my GitHub repository about my own setup on linux with &lt;strong&gt;every line&lt;/strong&gt; to put in your terminal in order to install and setup all thing.&lt;/p&gt;

&lt;p&gt;You will find a lot of tools that I have not mentioned in this article since I want to keep the very very basic !&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Code-Oz/setup-linux-dev"&gt;https://github.com/Code-Oz/setup-linux-dev&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>git</category>
      <category>node</category>
    </item>
    <item>
      <title>Wordpress blog in a Rails app subfolder 🙈</title>
      <author>lee</author>
      <pubDate>Sun, 11 Apr 2021 19:07:12 +0000</pubDate>
      <link>https://dev.to/leewynne/wordpress-blog-in-a-rails-app-subfolder-40db</link>
      <guid>https://dev.to/leewynne/wordpress-blog-in-a-rails-app-subfolder-40db</guid>
      <description>&lt;p&gt;Hello peeps 👋🏼 &lt;/p&gt;

&lt;p&gt;As anyone in the Dev community successfully added a Wordpress blog to a subfolder in a rails app?&lt;/p&gt;

&lt;p&gt;myapp.com (rails)&lt;br&gt;
myapp.com/blog (wordpress)&lt;/p&gt;

&lt;p&gt;I have done a few rounds of googling but haven’t yielded any confident results.&lt;/p&gt;

&lt;p&gt;I am thinking that page rules within Cloudflare might be the answer but apparently Wordpress likes to be at the root domain or subdomain.&lt;/p&gt;

&lt;p&gt;I know I could use Rails as the blog but I can’t be 🍑’sed atm as I can just use the huge Wordpress plugin systems for stuff I need quickly.&lt;/p&gt;

&lt;p&gt;Thanks 😊 and in return I can do portraits of anyone that can shed clear informations on said subject.&lt;/p&gt;

</description>
      <category>rails</category>
      <category>wordpress</category>
    </item>
    <item>
      <title>Programming with best YouTube Channels</title>
      <author>Suprabha</author>
      <pubDate>Sun, 11 Apr 2021 19:06:43 +0000</pubDate>
      <link>https://dev.to/suprabhasupi/programming-with-best-youtube-channels-420k</link>
      <guid>https://dev.to/suprabhasupi/programming-with-best-youtube-channels-420k</guid>
      <description>&lt;p&gt;If you are searching for best tutorials on youtube, I am sharing all the programming channels which I have used to grow my skills set as a programmer. Sharing all the youtube channels which is there in my list 😍&lt;/p&gt;

&lt;p&gt;&lt;b&gt;1. &lt;a href="https://www.youtube.com/channel/UCLNgu_OupwoeESgtab33CCw"&gt;Coding Garden&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Coding Garden is an open, interactive and engaging community where any coder, from beginner to veteran, can learn and grow together.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--55NVw_UD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/9ebrkCO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--55NVw_UD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/9ebrkCO.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;2. &lt;a href="https://www.youtube.com/channel/UCW5YeuERMmlnqo4oq8vwUpg"&gt; The net Ninza &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Teaching is more than just about passing information, it's about the connect too.&lt;/p&gt;

&lt;p&gt;Over 1000 free programming tutorials about:- Modern JavaScript (beginner to advanced)- Node.js- React- Vue.js- Firebase and many more programming languages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hXM2Hosl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/eWXV2Bo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hXM2Hosl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/eWXV2Bo.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;3. &lt;a href="https://www.youtube.com/channel/UClb90NQQcskPUGDIXsQEz5Q"&gt; Dev Ed &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Learn web development, web design, 3d modelling, tools like figma and more without getting bored!The goes of this channel is to get you to become as creative.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oHUfjGen--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/hN84QMV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oHUfjGen--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/hN84QMV.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;4. &lt;a href="https://www.youtube.com/channel/UCWv7vMbMWH4-V0ZXdmDpPBA/playlists"&gt; Programming with Mosh &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;He gives you lots of tutorial on web tech and languages that are quickly gaining their ground in the development world.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--puLLTkl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/x9peyJ0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--puLLTkl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/x9peyJ0.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;5. &lt;a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ/playlists"&gt; Free Code Camp &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Freecodecamp is an open-source community as it provides many best tutorials from different instructors for Python, CSS, React, Data Science, JavaScript and etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WqZONHLT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/aBng1fV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WqZONHLT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/aBng1fV.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;6. &lt;a href="https://www.youtube.com/channel/UCvjgXvBlbQiydffZU7m1_aw"&gt; The Coding Train &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;The Coding Train is on its way with creative coding video tutorials on subjects ranging from the basics of programming languages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q2lTirw9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/VStTY1s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q2lTirw9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/VStTY1s.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;7. &lt;a href="https://www.youtube.com/channel/UCO1cgjhGzsSYb1rsB4bFe4Q"&gt; Fun Fun Function &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Mattias Petter Johansson, mpj for short. He has talked about Javascript features and its use cases with some great example.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bKXgAfpG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/WprfXtX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bKXgAfpG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/WprfXtX.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;8. &lt;a href="https://www.youtube.com/channel/UCfzlCWGWYyIQ0aLC5w48gBQ"&gt; sentdex &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Python Programming tutorials, going further than just the basics. Learn about machine learning, finance, data analysis, robotics, web development, game development, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JvU6PJct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Qk4U9TE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JvU6PJct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Qk4U9TE.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;9. &lt;a href="https://www.youtube.com/channel/UC29ju8bIPH5as8OGnQzwJyA/playlists"&gt; Traversy Media &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Traversy Media features the best online web development and programming tutorials for all of the latest web technologies including Node.js, Angular 2, React, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AalvEKpw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/JBr8Tyx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AalvEKpw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/JBr8Tyx.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
        🌟 &lt;a href="https://twitter.com/suprabhasupi"&gt; Twitter&lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;
        👩🏻‍💻 &lt;a href="https://www.suprabha.me/"&gt; suprabha.me&lt;/a&gt;
      &lt;/td&gt;
&lt;td&gt;
        🌟 &lt;a href="https://www.instagram.com/suprabhasupi/"&gt; Instagram&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Setting up a CI-CD Pipeline Using Azure DevOps</title>
      <author>Elegberun Olugbenga</author>
      <pubDate>Sun, 11 Apr 2021 18:52:04 +0000</pubDate>
      <link>https://dev.to/gbengelebs/setting-up-a-ci-cd-pipeline-using-azure-devops-4gb</link>
      <guid>https://dev.to/gbengelebs/setting-up-a-ci-cd-pipeline-using-azure-devops-4gb</guid>
      <description>&lt;p&gt;Continuous Integration is the process of merging all code changes into a central repository. Continuous Deployment on the other hand is the practice of automatically deploying code changes that have passed predefined checks to a specified environment. It uses a set of automated tools to run tests that ensure the codebase is stable and deployable. This approach helps deliver faster and efficient deployments.&lt;/p&gt;

&lt;p&gt;An azure pipeline is a fantastic tool for setting up CICD pipelines; in this article, I am going to be walking through how to set up a CI-CD pipeline using Azure DevOps Pipelines. This is a follow-up to my previous article on &lt;a href="https://dev.to/gbengelebs/deploying-an-asp-net-webapi-and-mysql-database-container-to-azure-kubernetes-service-3ca"&gt;Deploying An Asp.Net WebApi and MySql DataBase Container to Azure Kubernetes Service&lt;/a&gt;. I will be referring to some information discussed in that article. If you are already familiar with Azure Kubernetes deployments you can continue.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequsites"&gt;
  &lt;/a&gt;
  Prerequsites
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;VSCODE. Download &lt;a href="https://azure.microsoft.com/en-us/services/devops/pipelines/"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Azure DevOps &lt;a href="https://azure.microsoft.com/en-us/services/devops/pipelines/"&gt;Login&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;An Azure account. You can create it for free &lt;a href="https://portal.azure.com/free"&gt;here&lt;/a&gt;. 
&lt;em&gt;Ps you get 200dollars free Azure credits and 12month's pay as you go.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Docker &lt;a href="https://docs.docker.com/get-docker/"&gt;docker&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;VSCODE &lt;a href="https://code.visualstudio.com/download"&gt;vscode&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In my previous article, I discussed how to deploy a.NetCore web API and MySQL DB to azure Kubernetes service. I will be going one step further by automating the deployment process using an azure pipeline. The tool checks for changes in the git repository and automates the build and deployment process. I could also add a series of checks within the pipelines like approvals and tests. But for this article,I will just be setting up a basic build and deploy CI-CD pipeline.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Wc7E8yi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/or4tcgop7thnru2mz5e6.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Wc7E8yi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/or4tcgop7thnru2mz5e6.jpeg" alt="Azure Pipeline"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Download the source code from GitHub&lt;/strong&gt; &lt;a href="https://github.com/GbengaElebsDev/AksTutorial.git"&gt;here&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;2. Create a repository for the project and push your code to GitHub&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;3. If you followed the previous article revert the manual steps we did in the previous article by deleting the services and pod deployments and the images we pushed to Azure container registry.&lt;/strong&gt;. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Deleting Container Images
To delete a container image login to Azure portal- &amp;gt; container registry -&amp;gt; repositories click on the three ellipses.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RGUkRoDk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4jfb23omg3daq7kb1ohk.png" alt="Deleting Images"&gt;
&lt;/li&gt;
&lt;li&gt;Deleting Kubernetes Services and Pods
Run this command to get your current Kubernetes context
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl config get-contexts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Ensure you are in your azure Kubernetes context&lt;br&gt;
Delete all the resources in that context&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl delete daemonsets,replicasets,services,deployments,pods,rc,pv,pvc --all
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Check if it has been deleted&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl get pods

No resources found in the default namespace.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;4. The deployment YAML files are in a folder called manifest&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This is to ensure that the pipeline can refer to all the deployments in one folder.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;5. Login to Azure Pipelines&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://azure.microsoft.com/en-us/services/devops/pipelines/"&gt;Azure Pipelines&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go to pipelines -&amp;gt; Create Pipeline
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vS1xIUMQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b5n4o5ofzli3ggudlpt8.png" alt="Azure Pipelines"&gt;
&lt;/li&gt;
&lt;li&gt;Connect to your GitHub and Authenticate&lt;/li&gt;
&lt;li&gt;Select your GitHub Project&lt;/li&gt;
&lt;li&gt;Select Deploy to Azure Kubernetes Service&lt;/li&gt;
&lt;li&gt;Login to your azure portal from the app&lt;/li&gt;
&lt;li&gt;Fill in your details like container registry and image name
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0e7kaqh7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aievc8253o2oza72zzp7.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;A YAML file will be automatically generated.&lt;/li&gt;
&lt;li&gt;Edit the contents of the YAML file with this gist
&lt;strong&gt;Remember to replace the environment variables with your own details and credentials&lt;/strong&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#reviewing-the-yaml-file"&gt;
  &lt;/a&gt;
  Reviewing the YAML file
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;trigger&lt;/strong&gt;: This command tells the pipeline to listen to changes pushed to the main branch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;variables&lt;/strong&gt;: To store reusable entries things like the &lt;strong&gt;containerRegistry&lt;/strong&gt; and secrets that you want to reuse in multiple places in the pipeline.&lt;br&gt;
I define a &lt;strong&gt;mysqltag&lt;/strong&gt; to specify the MySQL version I want to be created.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#build-stage"&gt;
  &lt;/a&gt;
  Build Stage
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Stages&lt;/strong&gt;: are the major divisions in a pipeline: "build this app", "run these tests", and "deploy to pre-production" are good examples of stages. In our case, we have only "build" and "deploy".&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Job&lt;/strong&gt;: A deployment job is a collection of steps that are run sequentially against the environment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;pool&lt;/strong&gt;- is the server that your azure pipeline would be carrying out the operation. By default Azure assigns an agent for each pipeline. But you can create yours. In my case I created an agent called "ubuntu-latest".&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;steps&lt;/strong&gt;- The build stage has a task of &lt;strong&gt;Docker@2&lt;/strong&gt; which will perform 2 tasks (Build &amp;amp; Push).&lt;br&gt;
This will build the service and then push it to my Azure container registry using the environment variables as defined. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We add two builds and deploy steps because we have two images we will like to build. The SQL and the API image&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;stages have jobs-&amp;gt; each job has a step -&amp;gt; each step has a task assigned to it&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;publish&lt;/strong&gt;. This command tells the pipeline to find the manifest folder, create an artifact in the pipeline called manifest using the resources in the folder.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#deploy-stage"&gt;
  &lt;/a&gt;
  Deploy Stage
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;depends on&lt;/strong&gt; -It depends on the build stage. This means the build stage has to be completed before this can run.&lt;br&gt;
&lt;strong&gt;strategy&lt;/strong&gt; - How you want to deploy. &lt;strong&gt;Run once&lt;/strong&gt; means all the steps run sequentially. &lt;/p&gt;

&lt;p&gt;In the task section, there is a task: &lt;strong&gt;KubernetesManifest@0&lt;/strong&gt;&lt;br&gt;
Kubernetes manifest task command tells the pipeline:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To download the files from the manifest artifact
&lt;/li&gt;
&lt;li&gt;Apply the manifest artifact to the Kubernetes cluster&lt;/li&gt;
&lt;li&gt;Deploy the artifact to the Kubernetes cluster&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As with the build section, we define two deployment tasks because we have two images.&lt;/p&gt;

&lt;p&gt;Hit save and run and commit directly to the master branch. This will store your YAML file in your GitHub repo and it can be modified as needed.&lt;/p&gt;

&lt;p&gt;You should see this stage stating that the build has begun&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1QhC0CxB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/os6hrnbw2vg305lfl7z3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1QhC0CxB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/os6hrnbw2vg305lfl7z3.png" alt="BuildStage"&gt;&lt;/a&gt;&lt;br&gt;
-------------------------ERROR---------------------------&lt;br&gt;
&lt;strong&gt;This agent request is not running because you have reached the maximum number of requests that can run for parallelism type 'Microsoft-hosted Private'. Current position in queue: 1&lt;/strong&gt;&lt;br&gt;
-------------------------ERROR---------------------------&lt;br&gt;
You will probably run into this error and the root cause of the issue is that the pipeline Microsoft-hosted agent for public and private projects in new organizations on Azure DevOps has been restricted in the latest update. The summary of this is that Microsoft has temporarily restricted agents from running your jobs.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#to-resolve-this-for-a-private-project"&gt;
  &lt;/a&gt;
  To resolve this for a private project
&lt;/h3&gt;

&lt;p&gt;Private Project:&lt;/p&gt;

&lt;p&gt;You could send an email to &lt;a href="mailto:azpipelines-freetier@microsoft.com"&gt;azpipelines-freetier@microsoft.com&lt;/a&gt; in order to get your free tier.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your name&lt;/li&gt;
&lt;li&gt;Name of the Azure DevOps organization&lt;/li&gt;
&lt;li&gt;Private Project:&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#to-resolve-this-for-a-public-project"&gt;
  &lt;/a&gt;
  To resolve this for a public project
&lt;/h3&gt;

&lt;p&gt;You could send an email to &lt;a href="mailto:azpipelines-ossgrant@microsoft.com"&gt;azpipelines-ossgrant@microsoft.com&lt;/a&gt; in order to get your free tier.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your name&lt;/li&gt;
&lt;li&gt;Azure DevOps organization for which you are requesting the free grant&lt;/li&gt;
&lt;li&gt;Links to the repositories that you plan to build&lt;/li&gt;
&lt;li&gt;Brief description of your project.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are impatient like moi. Watch this&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/psa8xfJ0-zI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Self Hosted private Agent on Linux (Ubuntu) for Azure Pipelines on how to create your own self-hosted agents and link them to run your pipelines.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After you create the agent. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add it to the project&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Y5-4rPH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sp4b6vdkcth945ntdzr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Y5-4rPH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sp4b6vdkcth945ntdzr.png" alt="Create Agent"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Copy the name and edit this section with your pool name so that agent runs it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z0uTuzHQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e85rbnvqasofcazfmp4o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z0uTuzHQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e85rbnvqasofcazfmp4o.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install docker on your self hosted agent using this the first step in this &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-18-04"&gt;How To Install and Use Docker on Ubuntu 18.04&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cd into your agent and restart the agent.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see all our Build processes are running similar to what we did before. But right now everything is running automatically in the Pipeline. Once there is a push to the main branch the pipeline triggers a build and it is deployed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1QhC0CxB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/os6hrnbw2vg305lfl7z3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1QhC0CxB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/os6hrnbw2vg305lfl7z3.png" alt="BuildStage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QTFnwFrC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3aukzi4ei2c6uu3bsxlm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QTFnwFrC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3aukzi4ei2c6uu3bsxlm.png" alt="Deploy Stage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The build and deploy stages have been completed.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LnS2JNK_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rzfrfvavoyp6g91en28q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LnS2JNK_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rzfrfvavoyp6g91en28q.png" alt="build and Deploy Completed"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Go to pipelines -&amp;gt; Runs -&amp;gt; View Environment -&amp;gt; Resources -&amp;gt;Services&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--APZc1vSJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvzrv33jg73nn8lljanp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--APZc1vSJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvzrv33jg73nn8lljanp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kDyKizg9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ashxx9m4dvkk20oxmgsq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kDyKizg9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ashxx9m4dvkk20oxmgsq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Navigate through the deployment and explore the resources created.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select the Test-API service External IP&lt;br&gt;
Copy the external IP and navigate to the URL**&lt;br&gt;
(&lt;a href="http://external-ip:8080/swagger/index.html"&gt;http://external-ip:8080/swagger/index.html&lt;/a&gt;)&lt;br&gt;
Mine is (&lt;a href="http://20.62.158.83:8080/swagger/index.html"&gt;http://20.62.158.83:8080/swagger/index.html&lt;/a&gt;). Test the API deployment using the swagger page as shown. Our containerized API is now running inside the Azure Kubernetes service and exposed to the internet via the Load Balancer Service. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yZJsN8eN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujvq49qqnzfzvhtzo7cc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yZJsN8eN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujvq49qqnzfzvhtzo7cc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We have successfully set up an azure pipeline to build and deploy our containerized application to both Azure Container Registry and Azure Kubernetes Service.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#add-the-azure-pipeline-built-successfully-badge-to-the-git-repo"&gt;
  &lt;/a&gt;
  Add The Azure Pipeline built successfully badge to the git repo
&lt;/h2&gt;

&lt;p&gt;-In your Azure DevOps. Select the pipeline -&amp;gt; Runs -&amp;gt; Click on the 3 Elipses&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ttCwtZKm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zlpltf373qbuud584q1w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ttCwtZKm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zlpltf373qbuud584q1w.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Select Status Badge -&amp;gt; Copy the Sample markdown.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cfroXjEI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zb4w9qgpixupa0a9stwg.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Create a README.md file in your GitHub repo and paste the markdown there.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dVGj3Aob--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvw3g42jfolueopviav1.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>azureapril</category>
      <category>kubernetes</category>
      <category>docker</category>
      <category>devops</category>
    </item>
    <item>
      <title>We're going to 💕transcribe💕 and post each 'Privilege in Tech'🎙️ episode</title>
      <author>Alejandra Quetzalli 🐾</author>
      <pubDate>Sun, 11 Apr 2021 18:26:01 +0000</pubDate>
      <link>https://dev.to/privilegeintech/we-re-going-to-transcribe-and-post-each-privilege-in-tech-episode-3e8h</link>
      <guid>https://dev.to/privilegeintech/we-re-going-to-transcribe-and-post-each-privilege-in-tech-episode-3e8h</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p27PFqh5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/puunkrwtqbo7k0jmdkya.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p27PFqh5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/puunkrwtqbo7k0jmdkya.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;✨Announcement✨ &lt;/p&gt;

&lt;p&gt;We've created an organization on the DEV.to platform so that we can 💕transcribe💕 and post each episode! &lt;/p&gt;

&lt;p&gt;Alejandra created the #TechPrivilege podcast🎙 under her @sheCodesNow organization in an effort to help the most vulnerable in tech not feel erased. We'll discuss tech media stories and how to support diverse teammates with less privilege. &lt;/p&gt;

&lt;p&gt;Our co-hosts &lt;a class="comment-mentioned-user" href="https://dev.to/alejandra_quetzalli"&gt;@alejandra_quetzalli&lt;/a&gt;
, Maggie, &lt;a class="comment-mentioned-user" href="https://dev.to/devpato"&gt;@devpato&lt;/a&gt;
, and Lisa Chuang are excited to talk tech privilege.&lt;/p&gt;

&lt;p&gt;We're also excited to let you know that we recently became a 🟣Twitter Spaces host, and we'll continue to host safe rooms for people to talk about what it feels like to be less privileged in tech. &lt;/p&gt;

&lt;p&gt;p.s. Give us a holler if you'd like to be a guest on the podcast!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Why start using TailwindCss in 2021</title>
      <author>Leonardo Tononi</author>
      <pubDate>Sun, 11 Apr 2021 18:00:13 +0000</pubDate>
      <link>https://dev.to/easaaa/why-start-using-tailwindcss-in-2021-e5n</link>
      <guid>https://dev.to/easaaa/why-start-using-tailwindcss-in-2021-e5n</guid>
      <description>&lt;p&gt;Hi, this is Leonardo.&lt;/p&gt;

&lt;p&gt;I'm a simple human that tries to improve day by day, step by step. If it’s your first time here you can read who I am in this blog post &lt;a href="https://www.leonardotononi.com/blog/nice-to-meet-you"&gt;“Who am I”&lt;/a&gt;, &lt;strong&gt;otherwise skip this part.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;From their website we understand that TailwindCss is a utility first css framework. It allows us to write our style directly in the html. “Yes OK” you will say “but I have a thousand of questions!” Don’t worry, in the article I will try to answer everything you should evaluate to see if it is a right fit for your needs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-it-is-and-what-are-the-advantages"&gt;
  &lt;/a&gt;
  What it is and what are the advantages?
&lt;/h2&gt;

&lt;p&gt;Let’s get straight to the point. Why bother learning this new way of writing CSS? Well I’d start by saying it’s fucking fast! What do I mean by fast? Imagine no longer having to create separate files for component markups and its styles. Imagine no longer having to think of names for “Wrapper” or “WrapperOfWrapperOfWrapper”. Not having to continually import or export css variables. Imagine you can do it all in one line.&lt;/p&gt;

&lt;p&gt;Imagine being able to copy and paste entire structures of components already created by someone else, where you can apply your personal style in the blink of an eye. Imagine being able to focus primarily on creating the logic of your application.&lt;br&gt;
That is Tailwind.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-is-it-better-than-others"&gt;
  &lt;/a&gt;
  Why is it better than others?
&lt;/h2&gt;

&lt;p&gt;I have never really tried other css frameworks in the same way I tried Tailwind. But what I can tell you is that while others have a more defined and less easily customizable style, with tailwind everything remains in our hands, but at the same time it allows you to have a good level of predefined style guidelines.&lt;br&gt;
So if you are like me, you don’t have a strong knowledge of design, you can still create beautiful applications or web pages without compromise the unicity of your style.&lt;/p&gt;

&lt;p&gt;A site created with tailwind is difficult to detect at first sight, on the contrary the sites created with other frameworks have a more marked and recognizable imprint.&lt;/p&gt;

&lt;p&gt;I want to show you some example of what triggered my curiosity. &lt;br&gt;
Below an example of an easily integrated dark mode:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// tailwind.config.js
module.exports = {
  darkMode: ‘medium’,
  // …
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div className=“bg-white dark:bg-gray-800”&amp;gt;
  // .....
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Not to mention the media query, which can be integrated with a simple "md: text-white" to say "@media (min-width: 768px) {…}".&lt;br&gt;
In my humble opinion this is really cool and everything is so easily customizable.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Also, most Tailwind projects ship less than 10KB of CSS to the client.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#why-not-just-use-css"&gt;
  &lt;/a&gt;
  Why not just use CSS?
&lt;/h2&gt;

&lt;p&gt;Because Tailwind requires a minimal learning curve and  the documentation it’s really well done. Over time, it will make the creation of projects much easier and faster, without having to leave behind the flexibility of pure css.&lt;/p&gt;

&lt;p&gt;Furthermore, once you have decided to create a project with tailwind, it will always be possible to apply other types of css, like styled components.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recap"&gt;
  &lt;/a&gt;
  Recap
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Speed  up the creation and the design of any project&lt;/li&gt;
&lt;li&gt;Allows you to raise the bar of your style&lt;/li&gt;
&lt;li&gt;You can say goodbye to having to create fancy names for your components or Css variables = Easy &lt;/li&gt;
&lt;li&gt;Highly customizable&lt;/li&gt;
&lt;li&gt;Dev friendly, covers the real needs that a developer may have in 2021&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#extra-some-useful-free-resources"&gt;
  &lt;/a&gt;
  EXTRA: some useful FREE resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tailwindcomponents.com/"&gt;Tailwind CSS Components. Examples and templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailblocks.cc/"&gt;Tailblocks — Ready-to-use Tailwind CSS blocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://merakiui.com/"&gt;Meraki UI Tailwindcss Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tailwind-kit.com/"&gt;Tailwind UI KIT – 250 components and templates for React, VueJS and Angular.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>codenewbie</category>
      <category>tailwindcss</category>
      <category>webdev</category>
      <category>css</category>
    </item>
    <item>
      <title>A Really Simple Intro to Changing Styling Using React State</title>
      <author>Laura Todd</author>
      <pubDate>Sun, 11 Apr 2021 17:41:13 +0000</pubDate>
      <link>https://dev.to/lauratoddcodes/a-really-simple-intro-to-changing-styling-using-react-state-f9k</link>
      <guid>https://dev.to/lauratoddcodes/a-really-simple-intro-to-changing-styling-using-react-state-f9k</guid>
      <description>&lt;p&gt;When using React, one of the easiest ways to make style changes to an element on an event is by using state.&lt;/p&gt;

&lt;p&gt;In this example, we'll be looking at how we can change the corners of a button from pointed to rounded on click. I know this isn't something you're likely to be doing on a regular basis but it's a nice easy task, just to get to know the concepts.&lt;/p&gt;

&lt;p&gt;From this -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MDOJHfmk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rvc12mx0b6vi2a8a6fv9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MDOJHfmk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rvc12mx0b6vi2a8a6fv9.jpg" alt="Button with pointed corners"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To this - &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uSnb0Dyr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dyn09p0r34udbyyxjlg6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uSnb0Dyr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dyn09p0r34udbyyxjlg6.jpg" alt="Button with rounded corners"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You'll need to be using a Class Component rather than a Functional Component to do this.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here's our starting .js file, with a simple button and some text.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bxPpsis0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/js9wlp6sci169nfwat2n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bxPpsis0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/js9wlp6sci169nfwat2n.png" alt="Code snippet of starting code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And our starting CSS with some simple styling.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_mT6d3im--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vvvgjr7meyvqaypwcc0a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_mT6d3im--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vvvgjr7meyvqaypwcc0a.png" alt="Code snippet of starting CSS code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So how do we get it working so that the corners will be rounded when you click the button?&lt;/p&gt;

&lt;p&gt;First, in our .js file, we'll need to add a new state. You can call this whatever you like but I've called it 'pointedCorners' in this example. Currently, the corners of the button are pointed so we can set the state of 'pointedCorners' to true.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UYRtqyHO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ztvi9tf2chs4hi7gb2zp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UYRtqyHO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ztvi9tf2chs4hi7gb2zp.png" alt="code snippet of constructor"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, below the constructor, we need to add a new method which will handle the click and toggle the state of 'pointedCorners' between true and false depending on what the current state is.&lt;/p&gt;

&lt;p&gt;We'll call our method 'handleClick' for obvious reasons. This checks for the current state of 'pointedCorners' and changes the state to be the opposite.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9qC0MNYh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jz3jwzxkc670dez87sw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9qC0MNYh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jz3jwzxkc670dez87sw.png" alt="adding handleClick function"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Be sure to bind your method in the constructor like so -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p_050iIb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eln7e3z3i7ilkr8hv9em.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p_050iIb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eln7e3z3i7ilkr8hv9em.png" alt="Binding the method"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Binding ensures that 'this' is defined when you call the function.&lt;/p&gt;

&lt;p&gt;We now need to link our method to the button so that the method runs when the button is clicked. Do this by adding {this.handleClick} to the onClick value in your button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aHHKX-mD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5n3vklcp9qstjg9ub3if.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aHHKX-mD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5n3vklcp9qstjg9ub3if.png" alt="Add onclick event listener to button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, we'll jump over to our CSS file. We need to add two classes which can be applied to the button depending on whether the 'pointedCorners' state is true or false. In this case, we'll add one which sets the corners to be rounded and one that sets the corners to be pointed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--268w9Sxd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d5m1r75d7cli9x0hza8l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--268w9Sxd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d5m1r75d7cli9x0hza8l.png" alt="Add new styling for classes"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then we'll jump back over to the .js file. Within the render method, we need to add a new variable. We'll call ours 'toggleBtnClass'. The variable uses a ternary operator to check the current state of 'pointedCorners' and if it's true, the class is set to 'roundedButton', if it's false, the class is set to 'pointedButton'.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c-3nowVl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fcd0qsxa88v1du4vv1mh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c-3nowVl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fcd0qsxa88v1du4vv1mh.png" alt="use ternary operator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, we need to set the className of the button to the 'toggleBtnClass' variable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uw53eqtI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6mza23souss3msb3t8to.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uw53eqtI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6mza23souss3msb3t8to.png" alt="set new class name"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You should then have a button that changes when clicked.&lt;/p&gt;

&lt;p&gt; &lt;br&gt;
 &lt;/p&gt;

&lt;p&gt;You can find the GitHub repo for this exercise here - &lt;a href="https://github.com/LauraToddCode/Changing-Styling-Using-React-State"&gt;https://github.com/LauraToddCode/Changing-Styling-Using-React-State&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>state</category>
      <category>hooks</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Animate an object on-scroll</title>
      <author>Manten Devillé</author>
      <pubDate>Sun, 11 Apr 2021 17:40:27 +0000</pubDate>
      <link>https://dev.to/vicible2/animate-an-object-on-scroll-acl</link>
      <guid>https://dev.to/vicible2/animate-an-object-on-scroll-acl</guid>
      <description>&lt;p&gt;For a recent project I wanted to include an image that rotated when you scrolled up or down. After doing some research I found there are multiple ways to do this: Using only css, using javascript, using libraries and so on.&lt;/p&gt;

&lt;p&gt;This short tutorial will focus on the easy and short way to add in an animated scroller. If you're building a small website or project and want to include one: &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#this-is-the-place-to-be"&gt;
  &lt;/a&gt;
  This is the place to be!
&lt;/h4&gt;

&lt;p&gt;(For large-scale projects, I recommend checking out additional tutorials for more optimized solutions).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-your-object"&gt;
  &lt;/a&gt;
  Setting up your object
&lt;/h2&gt;

&lt;p&gt;We want to set up our object. This can be a general image: from an icon to a vector shaped object. I recommend using a vector shaped image as they are highly editable (if you so desire), or otherwise a PNG for transparancy support.&lt;/p&gt;

&lt;p&gt;We'll contain our object inside of a div for ease of use and clarity and place it within our html code. (Usually at the top)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"scrollContainer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"../../../public/img/scrollObject.svg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"scrollObject"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"scrollObject"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can include as many objects as we want but to keep it simple we'll work with this one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#positioning"&gt;
  &lt;/a&gt;
  Positioning
&lt;/h2&gt;

&lt;p&gt;Now where do we want to position our object? This is usually defined by the goal of our object. What do we want it to achieve:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A small subtle icon at the bottom right&lt;/li&gt;
&lt;li&gt;A scrolling position indicator&lt;/li&gt;
&lt;li&gt;A fancy animation&lt;/li&gt;
&lt;li&gt;A big indicator to catch our visitors' eye&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As we want to just add a small, fun animation while scrolling. It makes sense to put it at the bottom right of our page.&lt;br&gt;
In our css we write some of the following styling:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#scrollObject&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;7vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.1s&lt;/span&gt; &lt;span class="n"&gt;ease-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The main thing we want to do is keep our object in the same place when scrolling so we add position: fixed;&lt;br&gt;
Some other attributes we use are right, top, bottom etc. We Use these to position our object and give it some space/margins next to the edge. You can play with these as much as you like untill you reach your desired position for your project.&lt;/p&gt;

&lt;p&gt;We use viewport units (Viewport height &amp;amp; Viewport width) to keep our object responsive. Something you always want to keep in mind.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#animation"&gt;
  &lt;/a&gt;
  Animation
&lt;/h2&gt;

&lt;p&gt;Finally we want to animate our object. Some pretty, simple animations can be achieved through css, but we want our object to move based on our scrolling actions. For this we will include a very short and simple block of Javascript code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;scrollObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scrollObject&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scroll&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;   
&lt;span class="nx"&gt;scrollObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rotate(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pageYOffset&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;deg)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can include this in your linked JS files, or if you're building something small, include it in a script tag at the bottom of your html page.&lt;/p&gt;

&lt;p&gt;Look at the result to check out the animation, and If you wish to slow it down (or speed it up), you can include it inside of a simple mathematical expression. You can include this inside of the rotate function, or make a seperate variable for it if you wish to reuse this speed for more objects, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;scrollSpeed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pageYOffset&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;scrollObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scrollObject&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scroll&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;scrollObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rotate(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;scrollSpeed&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;deg)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also use the window.pageYOffset data as a means to adjust or define other animations (eg. changeing the animation or image shown based on the window position). You can call this data with a simple console.log(windows.pageYOffset); if you want use it to get started.&lt;/p&gt;

&lt;p&gt;There we go, we have a simple animated image when scrolling!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9Y2N4Exr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1i5h0ybc1eqyqr5d5uyh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Y2N4Exr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1i5h0ybc1eqyqr5d5uyh.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Bonus: mobile&lt;/strong&gt;&lt;br&gt;
For responsiveness I decided to change the position of my scrolling icon and made it replace the image in my navigation to still show off this neat animation!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nf"&gt;#scrollObject&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.2s&lt;/span&gt; &lt;span class="n"&gt;ease-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-4vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Just use a simple media-query to reposition, resize,... et voila!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You might have noticed I've added a transition timing and ease &amp;gt;option, this is to make the image appear and dissapear smoothly &amp;gt;when going from desktop to mobile sized screens.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This results in the following:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MtE-0wd8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7j1ciw6ql7vtg8fsr7o6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MtE-0wd8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7j1ciw6ql7vtg8fsr7o6.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you're working in a vue project, as I was: try to include this either as a seperate component. Or code it into your App.vue, as you will want it to be on top of every view available.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>beginners</category>
      <category>css</category>
      <category>javascript</category>
      <category>animation</category>
    </item>
    <item>
      <title>Weekly Digest 14/2021</title>
      <author>Marco Biedermann</author>
      <pubDate>Sun, 11 Apr 2021 17:38:24 +0000</pubDate>
      <link>https://dev.to/worldindev/weekly-digest-14-2021-2j6d</link>
      <guid>https://dev.to/worldindev/weekly-digest-14-2021-2j6d</guid>
      <description>&lt;p&gt;Welcome to my Weekly Digest #14 🌱&lt;/p&gt;

&lt;p&gt;This weekly digest contains a lot of interesting and inspiring articles, videos, tweets, podcasts, and designs I consumed during this week.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Remember → You can receive these articles directly in your inbox via our &lt;a href="https://worldindev.ck.page"&gt;newsletter&lt;/a&gt;&lt;/em&gt; ✉️ &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#interesting-articles-to-read"&gt;
  &lt;/a&gt;
  Interesting articles to read
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#toplevel-await-is-available-in-nodejs-modules"&gt;
  &lt;/a&gt;
  Top-level await is available in Node.js modules
&lt;/h3&gt;

&lt;p&gt;Node.js' top-level is available in ES modules. Find out about three ways to enable it and untangle your code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.stefanjudis.com/today-i-learned/top-level-await-is-available-in-node-js-modules/"&gt;Top-level await is available in Node.js modules&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#from-express-to-fastify-in-nodejs"&gt;
  &lt;/a&gt;
  From Express to Fastify in Node.js
&lt;/h3&gt;

&lt;p&gt;It has been almost two years since Express has been updated, and a lot of new great tools came around since then. I recently tried Fastify for the first time, and it took me no longer than a few minutes to decide to make a switch. Let me share with you a few main reasons.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pawelgrzybek.com/from-express-to-fastify-in-node-js/"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sass-guidelines-improvements"&gt;
  &lt;/a&gt;
  Sass Guidelines improvements
&lt;/h3&gt;

&lt;p&gt;Kitty Giraudel recently came back to Sass Guidelines. Not to update the content, but to work on the site itself. It turns out they learned a lot in the last few years and found many improvements worth doing. They thought it would be interesting to discuss them in this post. Here are the different topics we’ll go through.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://kittygiraudel.com/2021/04/06/sass-guidelines-improvements/"&gt;Sass Guidelines improvements&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dark-mode-in-5-minutes-with-inverted-lightness-variables"&gt;
  &lt;/a&gt;
  Dark mode in 5 minutes, with inverted lightness variables
&lt;/h3&gt;

&lt;p&gt;By now, you probably know that you can use custom properties for individual color components, to avoid repeating the same color coordinates multiple times throughout your theme. You may even know that you can use the same variable for multiple components, e.g. HSL hue and lightness&lt;/p&gt;

&lt;p&gt;&lt;a href="https://lea.verou.me/2021/03/inverted-lightness-variables/"&gt;Dark mode in 5 minutes, with inverted lightness variables&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#top-react-toast-libraries-compared"&gt;
  &lt;/a&gt;
  Top React toast libraries compared
&lt;/h3&gt;

&lt;p&gt;The top React toast libraries for when it's more trouble than it's worth to create your own custom toast components.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.logrocket.com/top-react-toast-libraries-compared/"&gt;Top React toast libraries compared - LogRocket Blog&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#some-great-videos-i-watched-this-week"&gt;
  &lt;/a&gt;
  Some great videos I watched this week
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#fix-your-mistakes-dont-commit-them-precommit-git-hook-checks-with-husky-and-lint-staged"&gt;
  &lt;/a&gt;
  Fix Your Mistakes, Don't Commit Them! Pre-Commit Git Hook Checks with Husky and Lint Staged.
&lt;/h3&gt;

&lt;p&gt;It's time to stop committing broken tests, ugly code, type errors and lint errors to your git repository. With Husky, we can hook into git's pre-commit hook to only allow code into our git repository that passes all of those above checks. Using lint-staged we can make it more efficient to focus our energy on the changed files.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/oWty0Nw1ydk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/leighchalliday"&gt;Leigh Halliday&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-quick-tips-about-typescript"&gt;
  &lt;/a&gt;
  5 Quick Tips about TypeScript
&lt;/h3&gt;

&lt;p&gt;In this lesson we look at 5 simple ways TypeScript can describe your JavaScript code. &lt;br&gt;
The examples are taken from &lt;a href="https://www.youtube.com/redirect?event=video_description&amp;amp;redir_token=QUFFLUhqa0l2c0g2S3JMR1daajEyTmt6V2x6azhwVXlLd3xBQ3Jtc0trWk1OV3BVY29lOUxJX3NZb2ZLdlJqUFhJNlpVenkzYlctc3QtU1VFVEdGMTg4MFBSWGpmUzJkZ2lsRDNhYTF5Q2RHN0tObHNodFBsV1FLdnVMZi1rcW1QRTF1d3dLOGo5QjNYRFROanVTQzRpQlZ3TQ&amp;amp;q=https%3A%2F%2Ftypescript-exercises.github.io%2F"&gt;https://typescript-exercises.github.io/&lt;/a&gt; and you can use this website to play around with the code yourself&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/R1bpmjFiknw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/basarat"&gt;Basarat Ali&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#responsible-javascript"&gt;
  &lt;/a&gt;
  Responsible JavaScript
&lt;/h3&gt;

&lt;p&gt;While the performance of JavaScript engines in browsers have seen continued improvement, the amount of JavaScript we serve increases unabated. We need to use JavaScript more responsibly, which means we must rely on native browser features where prudent, use HTML and CSS when appropriate, and know when too much JavaScript is just that: Too much.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/5Dn3N3exIns"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/malchata"&gt;Jeremy Wagner&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-css-pro-tips-code-this-not-that"&gt;
  &lt;/a&gt;
  10 CSS Pro Tips - Code this, NOT that!
&lt;/h3&gt;

&lt;p&gt;Top 10 CSS Pro Tips to make your life as a web developer more productive. Some of the best programmers say CSS is too hard… but you might be surprised at how modern techniques can dramatically improve your code.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Qhaz36TZG5Y"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/fireship_dev"&gt;Fireship&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#chrome-90-whats-new-in-devtools"&gt;
  &lt;/a&gt;
  Chrome 90 - What’s New in DevTools
&lt;/h3&gt;

&lt;p&gt;Debugging support for CSS Flexbox, performance heads-up display on page, issues tab updates and more.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/kOodTLAjPsE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/ChromiumDev"&gt;Google Chrome Developers&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#useful-github-repositories"&gt;
  &lt;/a&gt;
  Useful GitHub repositories
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#forgit"&gt;
  &lt;/a&gt;
  forgit
&lt;/h3&gt;

&lt;p&gt;💤 A utility tool powered by fzf for using git interactively.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/wfxr"&gt;
        wfxr
      &lt;/a&gt; / &lt;a href="https://github.com/wfxr/forgit"&gt;
        forgit
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      💤 A utility tool powered by fzf for using git interactively.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
💤 forgit&lt;/h1&gt;
&lt;p&gt;
    &lt;em&gt;Utility tool for using git interactively. Powered by &lt;a href="https://github.com/junegunn/fzf"&gt;junegunn/fzf&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;

&lt;p&gt;
    &lt;a href="https://github.com/wfxr/forgit/actions"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e02OjBMf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/wfxr/forgit/workflows/ci/badge.svg"&gt;
    &lt;/a&gt;
    &lt;a href="https://wfxr.mit-license.org/2017" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/28044ecf31ba56f2684bd081fb809249487c05239a228658182c516040b1088f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d627269676874677265656e2e737667"&gt;
    &lt;/a&gt;
    &lt;a href="https://img.shields.io/badge/Shell-Bash%20%7C%20Zsh%20%7C%20Fish-blue" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/af76e1af0ee3fe4127791ec435df3d3249d958bb730e6f048f64c240bfccc3d8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5368656c6c2d426173682532302537432532305a7368253230253743253230466973682d626c7565"&gt;
    &lt;/a&gt;
    &lt;a href="https://github.com/unixorn/awesome-zsh-plugins"&gt;
        &lt;img src="https://camo.githubusercontent.com/60ca6b241ab9063d003d454745a139657e38f7541c0971ae02dd4ceac52dbeb0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f417765736f6d652d7a73682d2d706c7567696e732d6430376364303f6c6f676f3d646174613a696d6167652f706e673b6261736536342c6956424f5277304b47676f414141414e535568455567414141426741414141594341594141414467647a333441414142566b6c4551565249532b335676577056555244463864394352414a6170424166775743742b46454a746849555563456d324e674959694f7873724377554c43776b746a594b5367594c665146314a6a434e766f4d4e68595243774f4f374841695677303535796f42697a764e336e426d7266382b4d37505a736332526266593341665257654e4d535664556c48457a533174366f717674346e2b544237386c2f414b7071487264774c636e64586e6455315758637735306b3130633150774656316661336351567a535234504d642f4971616f4c65496a324e31655466472f663167465674514d4c4f492b7a5356364e597a34434f59466e6549474c53645a5356627677434d64784d736e62767a456667527a4353797a6a58414f38786c4863784d712f6d49396f442b41476c687167786a4439334f564f443954557549436458642b2b2f56654156657765634b4b76324e506c66634855414d31714b3946546e426d51764a6a6b644466577a7a453751504f6b41665a694563653245437a68564a4a50485741664775547746706f333635704f304e596a6d45467235456173345350654a666c6c3272716233385a372f796161442b30654e4d336b50656a74383652457653583641616d6764586b676f784c784141414141456c46546b5375516d4343"&gt;
    &lt;/a&gt;
    &lt;a href="https://github.com/pre-commit/pre-commit"&gt;
        &lt;img src="https://camo.githubusercontent.com/aca250e5eab7c4ba30771c05b360513abb591643c5f2f2f6997c8fb9bc98197f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7072652d2d636f6d6d69742d656e61626c65642d627269676874677265656e3f6c6f676f3d7072652d636f6d6d6974266c6f676f436f6c6f723d7768697465" alt="pre-commit"&gt;
    &lt;/a&gt;
    &lt;a href="https://github.com/wfxr/forgit/graphs/contributors"&gt;
        &lt;img src="https://camo.githubusercontent.com/35ba23bfc506627d15b6c984537b848a8e7765d29007f7371359a58d87406fe5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f776678722f666f72676974" alt="Contributors"&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;This tool is designed to help you use git more efficiently
It's &lt;strong&gt;lightweight&lt;/strong&gt; and &lt;strong&gt;easy to use&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;
📥 Installation&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Make sure you have &lt;a href="https://github.com/junegunn/fzf"&gt;&lt;code&gt;fzf&lt;/code&gt;&lt;/a&gt; installed.&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; for zplug&lt;/span&gt;
zplug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;wfxr/forgit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; for zgen&lt;/span&gt;
zgen load &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;wfxr/forgit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; for antigen&lt;/span&gt;
antigen bundle &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;wfxr/forgit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; for fisher&lt;/span&gt;
fisher install wfxr/forgit

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; for omf&lt;/span&gt;
omf install https://github.com/wfxr/forgit

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; for zinit&lt;/span&gt;
zinit load wfxr/forgit

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; manually&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Clone the repository and source it in your shell's rc file.&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;You can run the following command to try &lt;code&gt;forgit&lt;/code&gt; without installing:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; for bash / zsh&lt;/span&gt;
&lt;span class="pl-c1"&gt;source&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;(&lt;/span&gt;curl -sSL git.io/forgit&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; for fish&lt;/span&gt;
&lt;span class="pl-c1"&gt;source&lt;/span&gt; (curl -sSL git.io/forgit-fish &lt;span class="pl-k"&gt;|&lt;/span&gt; psub)&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
📝 Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Interactive &lt;code&gt;git add&lt;/code&gt; selector&lt;/strong&gt; (&lt;code&gt;ga&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/wfxr/i/master/forgit-ga.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qTWxeLoJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/wfxr/i/master/forgit-ga.png" alt="screenshot"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Interactive &lt;code&gt;git log&lt;/code&gt; viewer&lt;/strong&gt; (&lt;code&gt;glo&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/wfxr/i/master/forgit-glo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RPVQV9D4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/wfxr/i/master/forgit-glo.png" alt="screenshot"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The log graph can be disabled by option &lt;code&gt;FORGIT_LOG_GRAPH_ENABLE&lt;/code&gt; (see&lt;/em&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/wfxr/forgit"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#vite"&gt;
  &lt;/a&gt;
  Vite
&lt;/h3&gt;

&lt;p&gt;Vite is a new breed of frontend build tool that significantly improves the frontend development experience.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/vitejs"&gt;
        vitejs
      &lt;/a&gt; / &lt;a href="https://github.com/vitejs/vite"&gt;
        vite
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Next generation frontend tooling. It's fast!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://vitejs.dev" rel="nofollow"&gt;
    &lt;img width="180" src="https://camo.githubusercontent.com/61e102d7c605ff91efedb9d7e47c1c4a07cef59d3e1da202fd74f4772122ca4e/68747470733a2f2f766974656a732e6465762f6c6f676f2e737667" alt="Vite logo"&gt;
  &lt;/a&gt;
&lt;/p&gt;



&lt;p&gt;
  &lt;a href="https://npmjs.com/package/vite" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/620ed908950942f67375bd9d2ef1a18656e433ec78027a92543763eaec2d62b4/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f766974652e737667" alt="npm package"&gt;&lt;/a&gt;
  &lt;a href="https://nodejs.org/en/about/releases/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8dd65f9ad41e533b3754e1b39c41fd04c42e91426360f79d5b231f285a586b8c/68747470733a2f2f696d672e736869656c64732e696f2f6e6f64652f762f766974652e737667" alt="node compatility"&gt;&lt;/a&gt;
  &lt;a href="https://app.circleci.com/pipelines/github/vitejs/vite?branch=main" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f931adf00b229b122152e157055b451c16530a549141d0025aa12b65daf0702d/68747470733a2f2f636972636c6563692e636f6d2f67682f766974656a732f766974652f747265652f6d61696e2e7376673f7374796c653d736869656c64" alt="unix build status"&gt;&lt;/a&gt;
  &lt;a href="https://ci.appveyor.com/project/yyx990803/vite/branch/main" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/09ae08170656b45650c215a160845d652e683347e28cd84e36549915465a1d41/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3071346a383036326f6c62637337316c2f6272616e63682f6d61696e3f7376673d74727565" alt="windows build status"&gt;&lt;/a&gt;
  &lt;a href="https://chat.vitejs.dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a8c43e4c8608a7bac7caeb32738831b95d601cd3fcb1d0a114f1519982f84ee0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d646973636f72642d626c75653f7374796c653d666c6174266c6f676f3d646973636f7264" alt="discord chat"&gt;&lt;/a&gt;
&lt;/p&gt;



&lt;h1&gt;
Vite ⚡
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Next Generation Frontend Tooling&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
💡 Instant Server Start&lt;/li&gt;
&lt;li&gt;
⚡️ Lightning Fast HMR&lt;/li&gt;
&lt;li&gt;
🛠️ Rich Features&lt;/li&gt;
&lt;li&gt;
📦 Optimized Build&lt;/li&gt;
&lt;li&gt;
🔩 Universal Plugin Interface&lt;/li&gt;
&lt;li&gt;
🔑 Fully Typed APIs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vite (French word for "fast", pronounced &lt;code&gt;/vit/&lt;/code&gt;) is a new breed of frontend build tool that significantly improves the frontend development experience. It consists of two major parts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A dev server that serves your source files over &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules" rel="nofollow"&gt;native ES modules&lt;/a&gt;, with &lt;a href="https://vitejs.dev/guide/features.html" rel="nofollow"&gt;rich built-in features&lt;/a&gt; and astonishingly fast &lt;a href="https://vitejs.dev/guide/features.html#hot-module-replacement" rel="nofollow"&gt;Hot Module Replacement (HMR)&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;a href="https://vitejs.dev/guide/build.html" rel="nofollow"&gt;build command&lt;/a&gt; that bundles your code with &lt;a href="https://rollupjs.org" rel="nofollow"&gt;Rollup&lt;/a&gt;, pre-configured to output highly optimized static assets for production.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition, Vite is highly extensible via its &lt;a href="https://vitejs.dev/guide/api-plugin.html" rel="nofollow"&gt;Plugin API&lt;/a&gt; and &lt;a href="https://vitejs.dev/guide/api-javascript.html" rel="nofollow"&gt;JavaScript API&lt;/a&gt; with full typing support.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://vitejs.dev" rel="nofollow"&gt;Read the Docs to Learn More&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
Migrating from 1.x&lt;/h2&gt;
&lt;p&gt;Check out the &lt;a href="https://vitejs.dev/guide/migration.html" rel="nofollow"&gt;Migration Guide&lt;/a&gt; if you are upgrading from 1.x.&lt;/p&gt;
&lt;h2&gt;
Packages&lt;/h2&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Package&lt;/th&gt;
&lt;th&gt;Version (click for changelogs)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/vitejs/vite/main/packages/vite"&gt;vite&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/vitejs/vite/main/packages/vite/CHANGELOG.md"&gt;&lt;img src="https://camo.githubusercontent.com/e0a52849119d4d9a47f30620733b24a40621afbc4e42972563015f560f86a697/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f766974652e7376673f6c6162656c3d253230" alt="vite version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/vitejs/vite/main/packages/plugin-vue"&gt;@vitejs/plugin-vue&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/vitejs/vite/main/packages/plugin-vue/CHANGELOG.md"&gt;&lt;img src="https://camo.githubusercontent.com/7be75632aa97456b0ff83e69c61a41f5164ec40176aade7ed5576a1687305efd/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40766974656a732f706c7567696e2d7675652e7376673f6c6162656c3d253230" alt="plugin-vue version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/vitejs/vite/main/packages/plugin-vue-jsx"&gt;@vitejs/plugin-vue-jsx&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/vitejs/vite/main/packages/plugin-vue-jsx/CHANGELOG.md"&gt;&lt;img src="https://camo.githubusercontent.com/47dee0ca34643052f28c488a34a3a1a5325745657a83974a579328488ea0906f/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40766974656a732f706c7567696e2d7675652d6a73782e7376673f6c6162656c3d253230" alt="plugin-vue-jsx version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/vitejs/vite/main/packages/plugin-react-refresh"&gt;@vitejs/plugin-react-refresh&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/vitejs/vite/main/packages/plugin-react-refresh/CHANGELOG.md"&gt;&lt;img src="https://camo.githubusercontent.com/00452b76efdb4c9768790c329fdcafaca150177c70a31602c737b7766bd83398/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40766974656a732f706c7567696e2d72656163742d726566726573682e7376673f6c6162656c3d253230" alt="plugin-react-refresh version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/vitejs/vite/main/packages/plugin-legacy"&gt;@vitejs/plugin-legacy&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/vitejs/vite"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#photopea"&gt;
  &lt;/a&gt;
  Photopea
&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://photopea.com/"&gt;Photopea.com&lt;/a&gt; is a free online tool for editing raster and vector graphics with support for PSD, AI, and Sketch files.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/photopea"&gt;
        photopea
      &lt;/a&gt; / &lt;a href="https://github.com/photopea/photopea"&gt;
        photopea
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Photopea is online image editor
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/79121360/112741096-3d56bd00-8f37-11eb-982d-1866764e642c.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rlZRTJe9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/79121360/112741096-3d56bd00-8f37-11eb-982d-1866764e642c.png" alt="photopea-logo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/photopea/photopea/master///www.Photopea.com" rel="nofollow"&gt;Photopea.com&lt;/a&gt; is a free online tool for editing raster and vector graphics with support for &lt;strong&gt;PSD, AI, and Sketch&lt;/strong&gt; files.&lt;/p&gt;
&lt;p&gt;Since Photopea is not fully open-source, this repository serves as a place for bug reports, feature requests, and general discussion.&lt;/p&gt;

&lt;h3&gt;
Supported Formats&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Complex: PSD, AI, XCF, Sketch, XD, FIG, PXD, CDR, SVG, EPS, PDF, PDN, WMF, EMF.&lt;/li&gt;
&lt;li&gt;Raster: PNG (APNG), JPG, GIF, WebP, ICO, BMP, PPM/PGM/PBM, TIFF, DDS, IFF, TGA.&lt;/li&gt;
&lt;li&gt;Raw: DNG, NEF, CR2, ARW, GPR, 3FR, FFF.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
Where You Can Find Us&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
✉️ &lt;a href="https://raw.githubusercontent.com/photopea/photopea/master/mailto:support@photopea.com"&gt;support@photopea.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
👍 &lt;a href="https://facebook.com/photopea" rel="nofollow"&gt;facebook.com/photopea&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
🐦 &lt;a href="https://twitter.com/photopeacom" rel="nofollow"&gt;twitter.com/photopeacom&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
📙 &lt;a href="https://www.reddit.com/r/photopea" rel="nofollow"&gt;reddit.com/r/photopea&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
🎉 &lt;a href="https://www.photopea.com" rel="nofollow"&gt;photopea.com&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Other&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.photopea.com/api" rel="nofollow"&gt;API&lt;/a&gt;, &lt;a href="https://blog.photopea.com" rel="nofollow"&gt;Blog&lt;/a&gt;, &lt;a href="https://www.photopea.com/learn" rel="nofollow"&gt;Learn&lt;/a&gt;, &lt;a href="https://www.photopea.com/translate" rel="nofollow"&gt;Translations&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/photopea/photopea"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#you-dont-need-gui"&gt;
  &lt;/a&gt;
  You Don't Need GUI
&lt;/h3&gt;

&lt;p&gt;Graphical user interfaces are super friendly to computer users. They were introduced in reaction to the perceived steep learning curve of command-line interfaces (CLIs).&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/you-dont-need"&gt;
        you-dont-need
      &lt;/a&gt; / &lt;a href="https://github.com/you-dont-need/You-Dont-Need-GUI"&gt;
        You-Dont-Need-GUI
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Stop relying on GUI; CLI **ROCKS**
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
You Don't Need GUI&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://spectrum.chat/you-dont-need/GUI" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3aaae7abc6655c1485b607bd83b732aec0d7316f84511c9c7471c4641d4679f2/68747470733a2f2f77697468737065637472756d2e6769746875622e696f2f62616467652f62616467652e737667" alt="Join the community on Spectrum"&gt;&lt;/a&gt;&lt;/p&gt;

It's for noobs :)

&lt;br&gt;
&lt;p&gt;Graphical user interfaces are super friendly to computer users. They were introduced in reaction to the perceived steep learning curve of command-line interfaces (CLIs).&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-GUI/master/readme.md/./Xerox_Star_8010_workstations.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P50r9NgD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-GUI/master/readme.md/./Xerox_Star_8010_workstations.jpg" alt="Xerox Star 8010 workstations"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;However, they often require more resources, are less powerful and hard to automate via scripting.&lt;/p&gt;
&lt;p&gt;As a computer expert, we want to be more efficient and do our jobs better. We know that command words may not be easily discoverable or mnemonic, so we try to list some common tasks that you might be tempted to do in GUI.&lt;/p&gt;
&lt;h2&gt;
Quick links&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-GUI/master/readme.md/#copy-a-file"&gt;copy a file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-GUI/master/readme.md/#duplicate-a-file"&gt;duplicate a file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-GUI/master/readme.md/#copy-a-directory"&gt;copy a directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-GUI/master/readme.md/#duplicate-a-directory"&gt;duplicate a directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-GUI/master/readme.md/#move-a-file"&gt;move a file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-GUI/master/readme.md/#rename-a-file"&gt;rename a file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-GUI/master/readme.md/#move-a-directory"&gt;move a directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-GUI/master/readme.md/#rename-a-directory"&gt;rename a directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-GUI/master/readme.md/#merge-directories"&gt;merge directories&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-GUI/master/readme.md/#create-a-new-file"&gt;create a new file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-GUI/master/readme.md/#create-a-new-directory"&gt;create a new directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-GUI/master/readme.md/#show-filedirectory-size"&gt;show file/directory size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-GUI/master/readme.md/#show-filedirectory-info"&gt;show file/directory info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-GUI/master/readme.md/#open-a-file-with-the-default-program"&gt;open a file with the default program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-GUI/master/readme.md/#zip-a-directory"&gt;zip a directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-GUI/master/readme.md/#unzip-a-directory"&gt;unzip a directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/you-dont-need/You-Dont-Need-GUI/master/readme.md/#peek-files-in-a-zip-file"&gt;peek files in a&lt;/a&gt;…&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/you-dont-need/You-Dont-Need-GUI"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dribbble-shots"&gt;
  &lt;/a&gt;
  dribbble shots
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#campus-meetup-app"&gt;
  &lt;/a&gt;
  Campus - Meetup App
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lnf1Z6TY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/1390816/screenshots/15456943/media/c75d0711256222e2d4c13c895052f1a6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lnf1Z6TY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/1390816/screenshots/15456943/media/c75d0711256222e2d4c13c895052f1a6.jpg" alt="https://cdn.dribbble.com/users/1390816/screenshots/15456943/media/c75d0711256222e2d4c13c895052f1a6.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15456943-Campus-Meetup-App"&gt;Jabel&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dompet-wallet-app-design"&gt;
  &lt;/a&gt;
  Dompet - Wallet app design
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b9u8-dc1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/4328335/screenshots/15456630/media/235128fb0489a375569911aa2423448a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b9u8-dc1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/4328335/screenshots/15456630/media/235128fb0489a375569911aa2423448a.png" alt="https://cdn.dribbble.com/users/4328335/screenshots/15456630/media/235128fb0489a375569911aa2423448a.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15456630-Dompet-Wallet-app-design"&gt;voxy St&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#job-finder-app"&gt;
  &lt;/a&gt;
  Job Finder App
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HAMCqm6p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/2576266/screenshots/15453226/media/83afa19c2f42864287d0901fd16f682d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HAMCqm6p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/2576266/screenshots/15453226/media/83afa19c2f42864287d0901fd16f682d.png" alt="https://cdn.dribbble.com/users/2576266/screenshots/15453226/media/83afa19c2f42864287d0901fd16f682d.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15453226-Job-Finder-App"&gt;Musmuliady Jahi&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ven"&gt;
  &lt;/a&gt;
  Ven.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UX92SQzO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/5324199/screenshots/15453649/media/9101ff21a8abe87effc5689033364ba2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UX92SQzO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/5324199/screenshots/15453649/media/9101ff21a8abe87effc5689033364ba2.png" alt="https://cdn.dribbble.com/users/5324199/screenshots/15453649/media/9101ff21a8abe87effc5689033364ba2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15453649-Ven"&gt;Bernice Johnson&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tweets"&gt;
  &lt;/a&gt;
  Tweets
&lt;/h2&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jKeEGueR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EyR-FlCXEAII7Li.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--7ysqd7YN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1368964189645991941/n-FpxWlP_normal.jpg" alt="Pratham profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Pratham
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/prathkum"&gt;@prathkum&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Are you planning to learn React? If yes, these 35 tweets can make the process easier for you👇🏻 &lt;br&gt;&lt;br&gt;Long Thread🧵 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      09:31 AM - 06 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1379366024991158273" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1379366024991158273" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1379366024991158273" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wdo1VfXJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1379783212843548678/pu/img/zzW8J9e_vW52N-oT.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--JkYP1OI0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1055142255722344448/xhqy_EUP_normal.jpg" alt="StackBlitz profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        StackBlitz
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @stackblitz
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      🤯 Browsers are awesome!:&lt;br&gt;&lt;br&gt;With `MediaDevices.getDisplayMedia()` you can capture the contents of a chosen app, a browser tab, or a full screen: 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:14 PM - 07 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1379784531117490183" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1379784531117490183" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1379784531117490183" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e2YAqxK8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EyYtb2YUcAIe_8O.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--dbOhEoP4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1381063807041118209/lIWGz33d_normal.jpg" alt="Addy Osmani profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Addy Osmani
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/addyosmani"&gt;@addyosmani&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Sneak Preview: JPEG XL decoding working in Chrome - 65% smaller than a JPEG at comparable quality.&lt;br&gt;&lt;br&gt;JXL aims to offer better image quality at low sizes, progressive decoding, lossless JPEG recompression and more: &lt;a href="https://t.co/sErChStUHZ"&gt;goo.gle/jxl-cl&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:59 PM - 07 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1379841205098311681" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1379841205098311681" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1379841205098311681" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W9IP6RBN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1379890452812341254/pu/img/rhEOhUBn6zgMuRdB.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--F26Oc0ef--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1677873294/image_normal.jpg" alt="Nat Friedman profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Nat Friedman
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @natfriedman
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Ever want to sort your repos by number of stars? Now you can, on both user and organization profiles. 🤩 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      20:16 PM - 07 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1379890898369044483" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1379890898369044483" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1379890898369044483" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TC3OJYuk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1380185290396946433/pu/img/zuJ7A57zI2smquFJ.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--q8RhR5zq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1352914223370670081/NMwbQrgI_normal.jpg" alt="Dan 👨🏻‍💻 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Dan 👨🏻‍💻
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @web_dev_dan
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Couldn’t resist having a bit of fun with CSS media queries 😂 &lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/CodeNewbie"&gt;#CodeNewbie&lt;/a&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/CSS"&gt;#CSS&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:46 PM - 08 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1380185344163807233" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1380185344163807233" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1380185344163807233" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;





&lt;h2&gt;
  &lt;a href="#picked-pens"&gt;
  &lt;/a&gt;
  Picked Pens
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#smash-to-submit-button"&gt;
  &lt;/a&gt;
  Smash to submit button
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/aaroniker/embed/NWqyego?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/aaroniker_me"&gt;Aaron Iker&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cool-text"&gt;
  &lt;/a&gt;
  Cool Text
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/cbanlawi/embed/MWbemYP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by Christine Banlawi&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#podcasts-worth-listening"&gt;
  &lt;/a&gt;
  Podcasts worth listening
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#hasty-treat-vscode-extensions-and-tips"&gt;
  &lt;/a&gt;
  Hasty Treat - VSCode Extensions and Tips
&lt;/h3&gt;

&lt;p&gt;In this Hasty Treat, Scott and Wes talk about their favorite VSCode extensions, tips, and workflows!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/6xTUX9FkU4eZlpXBba22yH"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cursors-and-pointers"&gt;
  &lt;/a&gt;
  Cursors and Pointers
&lt;/h3&gt;

&lt;p&gt;What do mouse pointers, potatoes, and your fingers have in common? They can all interact with a screen! With CSS we can define how active our web boxes are, which areas are interactive, and what style the cursor should be. Maybe that means your mouse arrow becomes an animated magic wand, or maybe not.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/0A6JQDnxwTG9wRaSz2rCEU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#frontend-monorepo"&gt;
  &lt;/a&gt;
  Front-End Monorepo
&lt;/h3&gt;

&lt;p&gt;We talked about our transition to a monorepo back in episode 305. This move has all sorts of advantages for us, like the simplicity of having a single repo to pull and be up to date with and linting/formatting code in a consistent way across the entire code base of CodePen.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/2Gvty2iJUEoxOvIxNz3Mes"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;Thank you for reading, talk to you next week, and stay safe! 👋&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Subscribe to our &lt;a href="https://worldindev.ck.page"&gt;newsletter&lt;/a&gt; to receive our weekly recap directly on your email!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Or join us on &lt;a href="https://discord.gg/aWS2YKk6"&gt;Discord&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>css</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How React relit my programming passion</title>
      <author>Michał Hawełka</author>
      <pubDate>Sun, 11 Apr 2021 17:32:54 +0000</pubDate>
      <link>https://dev.to/hawelkam/how-react-relit-my-programming-passion-2nej</link>
      <guid>https://dev.to/hawelkam/how-react-relit-my-programming-passion-2nej</guid>
      <description>&lt;p&gt;My IT career went from full-on backend C++ developer to full-on frontend enthusiast in a matter of few years. I searched for my IT ‘Holy Grail’ for quite some time, but it looks like I finally found it. Disclaimer: this article is totally subjective and emotion-based, but I’ll try not to bend the facts ;)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-it-all-came-to-be"&gt;
  &lt;/a&gt;
  How it all came to be
&lt;/h1&gt;

&lt;p&gt;Let’s start with a bit of my background (if you want to skip that part — just go straight to React part).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KNzWS0HS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ys89lx8mv21xery47knm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KNzWS0HS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ys89lx8mv21xery47knm.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I started my IT career in 2013 with a C++ student internship. It was the only programming language I knew at the time (it was used in my university courses). To be honest — I approached the field with rather cynical mindset — I liked to program, but it wasn’t my favorite thing in the world. My main motivation was to earn lots of money (you know how IT is sold by universities). But after few years of C++ programming I felt that’s not the thing I want to do in my life. I started looking for other fields/technologies and my focus turned to more “frontend” and “client-oriented” approach. That’s why in the following years I had an “adventure” with being a Product Owner and then switched to not-as-backend-as-C++ Java. I was working with it for a few years, but with every working day I got more tired of it. 2-3 years ago I can say that my programming passion died out.&lt;/p&gt;

&lt;p&gt;2 years ago I moved to a new company, where my responsibilities wouldn’t be only in backend, but also in frontend. I started learning AngularJS and Angular — definitely liked it more than writing backend code, but still some parts of those made me uncomfortable. That’s when I looked React’s way. And that was a bullseye!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---sASoUs6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xe5a0thk2wh51t3wxs0g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---sASoUs6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xe5a0thk2wh51t3wxs0g.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#react-is-the-way"&gt;
  &lt;/a&gt;
  React is the way
&lt;/h1&gt;

&lt;p&gt;I was interested in learning React for quite some time. Given that it powers a lot of apps I use on a daily basis, the idea to try to use it by myself arose. Unfortunately with my tendency to procrastination this idea was always just out of reach. The turning point was (oh, irony) the pandemic. Lots of websites started to offer their courses for a reduced price or even free. And that’s how I got to Udacity and their React Nanodegree. I decided to challenge myself and complete whole program in a free month. Spoiler alert — the challenge worked!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NTayFB_Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dede9jrzz1q56npt59td.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NTayFB_Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dede9jrzz1q56npt59td.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Udacity’s React Nanodegree consists of 3 main subjects — React Fundamentals, React with Redux and React Native. All of those were new to me, but now I can say I’m able to use those (of course with documentation’s help) rather freely. Also during the nanodegree I had to complete 3 projects, but two of those gave me a lot — the second project taught me a lot about React Redux and the third one about React Native.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#react-redux-project-polls-app"&gt;
  &lt;/a&gt;
  React Redux project — Polls App
&lt;/h1&gt;

&lt;p&gt;What I liked most in the React Redux project is that the course gave the user only the ‘backend’ API, the rest had to be written by the user. I started with drawing all of the views for the app, then determining which data will need to be stored in the redux store and which directly in component’s state. Then I prepared some mock components and routes just to have a general idea of the app (it wasn’t doing anything then). This is where redux came into play. I wrote actions and reducers as was taught in the course. When the app started to actually do something I got in some kind of trance. I lost track of time while writing code, I thought about the project even when I wasn’t working on it. That was the first time I felt it since… ever.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TZCKhDyC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jmhauif96e403913cglj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TZCKhDyC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jmhauif96e403913cglj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The app was just a simple polls app where user entered two options and then rest of the users could vote on option 1 or 2. And even though it was that simple — I was 100% invested in it. Now that I passed the nanodegree and the project was accepted — I still want to extend this app. I think about major refactor, because I’m aware that the code is not really ‘nice’. It was written fast (because of the challenge I gave myself), but I want it to become ‘proper’.&lt;/p&gt;

&lt;p&gt;Here you can see the code I wrote (every comment is appreciated, I want to learn from experienced frontend professionals): &lt;a href="https://github.com/hawelkam/polls-app"&gt;https://github.com/hawelkam/polls-app&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#react-native-project-mobile-flashcards"&gt;
  &lt;/a&gt;
  React Native project — Mobile Flashcards
&lt;/h1&gt;

&lt;p&gt;Third and final project in the nanodegree was React Native app called ‘Mobile Flashcards’. It was the first mobile app that I fully created by myself. I tried Swift and Flutter before, but those felt a little bit to ‘backendy’ for me. Native approach suits me really well. I just use the ideas that I learned during web app development and used them here. The process was similar — I started with drawing views, preparing redux store data scheme and building a skeleton of the app. With experiences from the previous project this went much faster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wJpirDHA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/93o171x15lf9tvv7mbr9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wJpirDHA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/93o171x15lf9tvv7mbr9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But as the content from nanodegree isn’t necessarily up to date (React Native course uses code with lots of deprecated stuff) I had to dive deep into docs. And that was a great learning experience. I learned about Navigators, styling and Notifications — something that was shown in the course, but unfortunately in deprecated versions. The app saves data to AsyncStorage, lets user create the cards deck, add new questions to it and quiz him/herself. Right now it’s a very simple app, but, just like with react redux project, I’m going to extend the functionalities. Work more on the UX/UI of the app. Maybe integrate it with some NoSQL database. I have lots of ideas how to make this app better. And again — it’s something I haven’t felt since…ever.&lt;br&gt;
Here you can see the code I wrote (every comment is appreciated, I want to learn from experienced frontend professionals): &lt;a href="https://github.com/hawelkam/mobile-flashcards"&gt;https://github.com/hawelkam/mobile-flashcards&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-i-like-in-react"&gt;
  &lt;/a&gt;
  What I like in React
&lt;/h1&gt;

&lt;p&gt;Am I the first one to say ‘JSX’?&lt;br&gt;
I really like how the code written in JSX looks. It can get a little bit messy, but if you follow React’s philosophy of making everything a component— the JSX code looks clean. You know where to look for specific code even on the first glimpse of App.js. That’s something I really like in React.&lt;br&gt;
Other thing I like is modularity. In plain HTML I needed to copy/paste a lot of the code to get same results, in Angular it’s better, but still a little bit too complicated for my taste, but in React you just create a functional component and use it everywhere you want. That is great especially when you attach styling to this component from the start — then you don’t need to repeat yourself not only with the code, but also with styles.&lt;br&gt;
Third and final ‘big’ thing I like about React is its simplicity. Getting up to speed with is is extremely easy, especially if you have worked with any other JS framework before. It’s from the ‘easy to learn, hard to master’ category and that’s great. It allows me to learn constantly when writing something new. I always come across a technique I never used before and adapting them is a piece of cake. Of course to be the React master I’d need hundreds of hours of coding experience, but I’m optimistic I’ll get there one day!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What’s next
&lt;/h1&gt;

&lt;p&gt;I think learning React is the catalyst for my full switch to frontend developer. After finishing the course I wrote one more app — this time based on the Ionic framework and after that — I started working on my portfolio website (fully created with React and react-bootstrap). I see a lot of things I want to dive deeper into like React Hooks, Styled Components, Webpack etc. and that will lead my way forward. In the meantime I moved to another company where I was hired as a full-stack developer, but after discussing my priorities with my manager I got assigned to the project where I work as a frontend developer with Angular. So i'm one step closer to my final goal ;)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-last-cycle-begins-"&gt;
  &lt;/a&gt;
  The last cycle begins (?)
&lt;/h1&gt;

&lt;p&gt;The experiences I’ve already had with React showed me that this is the thing I want to do. Not just for work, but also in my spare time. I have a lot of fun coding and I guess that is one of the main reasons we should do it (others being more ‘material’ ;)). From time to time I apply to some frontend positions (with React) to check if I’m ready for this kind of work now or not. If not — then I’ll be wiser about what to learn — and that is a great learning experience as well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#final-note"&gt;
  &lt;/a&gt;
  Final note
&lt;/h3&gt;

&lt;p&gt;This post was published some time ago on my Medium account, but I updated it a bit and thought this would be a great 'starter' article for my blog here, I hopy you won't mind :)&lt;/p&gt;

</description>
      <category>frontend</category>
      <category>react</category>
      <category>career</category>
      <category>devjournal</category>
    </item>
  </channel>
</rss>
