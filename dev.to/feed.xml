<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Creating buttons with custom loading animations in Angular - Simple and Easy!</title>
      <author>Adithya Sreyaj</author>
      <pubDate>Wed, 07 Apr 2021 16:35:37 +0000</pubDate>
      <link>https://dev.to/adisreyaj/creating-buttons-with-custom-loading-animations-in-angular-simple-and-easy-1geh</link>
      <guid>https://dev.to/adisreyaj/creating-buttons-with-custom-loading-animations-in-angular-simple-and-easy-1geh</guid>
      <description>&lt;p&gt;I have previously written about  &lt;a href="https://blog.sreyaj.dev/consistent-buttons-using-directives-in-angular"&gt;How to create consistent buttons for your Angular&lt;/a&gt; projects using the power of Directives. We saw why it is necessary to maintain consistency in our applications and how it impacts the UX of the whole app.&lt;/p&gt;

&lt;p&gt;Today we are going to see how we can create buttons that support loading states wherein the user will be able to visually see that something is happening in the background just by looking at the button.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#loading-states"&gt;
  &lt;/a&gt;
  Loading states
&lt;/h2&gt;

&lt;p&gt;We see a lot of loading indicators on the internet, it's a way to tell the user to wait as something is being done in the background. But there are many websites that have implemented full page loaders, which makes the app unusable.&lt;/p&gt;

&lt;p&gt;There are subtle ways to show loaders that give users the idea, but without being intrusive.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#buttons-with-loading-states"&gt;
  &lt;/a&gt;
  Buttons with loading states
&lt;/h2&gt;

&lt;p&gt;Without much effort, we can implement buttons that can show a loading icon with a beautiful but subtle animation.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mIR0-slu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h7hjyjrsxz7vgdglsjv9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mIR0-slu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h7hjyjrsxz7vgdglsjv9.gif" alt="Loading Buttons"&gt;&lt;/a&gt;&lt;br&gt;
We are going to create a button component, which has a default loading icon. But we can provide custom loading icons easily using the power of content projection. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-the-button-component"&gt;
  &lt;/a&gt;
  Creating the button component
&lt;/h2&gt;

&lt;p&gt;I would normally create a separate library in the project called UI where I put all these common components. But for the sake of this tutorial, I will be lazy and just create a basic component.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#1-create-the-button-module"&gt;
  &lt;/a&gt;
  1. Create the Button Module
&lt;/h3&gt;

&lt;p&gt;We are going to create a module where our button component will be declared and then exported.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;CommonModule&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@angular/common&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NgModule&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AdiButtonComponent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./button.component&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AdiButtonLoaderIconDirective&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./button.directive&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;NgModule&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;declarations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;AdiButtonComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;AdiButtonLoaderIconDirective&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;imports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;CommonModule&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;AdiButtonComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;AdiButtonLoaderIconDirective&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;AdiButtonsModule&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-the-button-component"&gt;
  &lt;/a&gt;
  2. The Button Component
&lt;/h3&gt;

&lt;p&gt;Here we are using a component instead of manipulating the button with a directive as we need access to the template.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ContentChild&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;HostBinding&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Input&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AdiButtonLoaderIconDirective&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./button.directive&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button[adiButton]&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`
    &amp;lt;div class="label"&amp;gt;&amp;lt;ng-content&amp;gt;&amp;lt;/ng-content&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div class="loader"&amp;gt;
      &amp;lt;ng-container
        *ngTemplateOutlet="icon?.tpl || defaultLoader"&amp;gt;
      &amp;lt;/ng-container&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;ng-template #defaultLoader&amp;gt;
       &amp;lt;!-- Animated SVG --&amp;gt;
    &amp;lt;/ng-template&amp;gt;
  `&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;styleUrls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./button.component.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;AdiButtonComponent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;HostBinding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;class.loading&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;HostBinding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;attr.aria-disabled&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;HostBinding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;class&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="nx"&gt;variant&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;primary&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;secondary&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;outline&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;primary&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;ContentChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;AdiButtonLoaderIconDirective&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;AdiButtonLoaderIconDirective&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll break down the code after the customer loader directive is added.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-adding-the-custom-loader-directive"&gt;
  &lt;/a&gt;
  3. Adding the Custom Loader Directive
&lt;/h3&gt;

&lt;p&gt;This directive is basically used as a selector and doesn't have any other purpose. It just exposes the &lt;code&gt;ElementRef&lt;/code&gt; of the element where it is applied on.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Directive&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;TemplateRef&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Directive&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ng-template[adiButtonLoader]&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;AdiButtonLoaderIconDirective&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;tpl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;TemplateRef&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll use the directive to later provide custom loaders to be shown in the button without having to make changes to the button component itself.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-breakdown"&gt;
  &lt;/a&gt;
  Code Breakdown
&lt;/h2&gt;

&lt;p&gt;In the component the first thing that you you can see is that we have used something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"label"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;ng-content&amp;gt;&amp;lt;/ng-content&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a concept called content projection. So the content that is provided between the opening and close of the element &lt;code&gt;button[adiButton]&lt;/code&gt; will be displayed here.&lt;br&gt;
This is how we use the component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;adiButton&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   Update
&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The content here is &lt;code&gt;Update&lt;/code&gt; and the resulting HTML will be :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"label"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Update&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So this is how we give the label for the button. Nothing fancy here.&lt;/p&gt;

&lt;p&gt;Next up, we have exposed to properties of the component&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;loading&lt;/code&gt; - whether loading icon should be shown or not&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;variant&lt;/code&gt; - button variants like primary, secondary button&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Another thing that can be noticed is that we have couple of &lt;a href="https://angular.io/api/core/HostBinding"&gt;HostBinding&lt;/a&gt; used:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;HostBinding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;class.loading&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;HostBinding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;attr.aria-disabled&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;HostBinding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;class&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;variant&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;primary&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;secondary&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;outline&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;primary&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here what happens is that when &lt;code&gt;loading&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a class called &lt;code&gt;loading&lt;/code&gt; will be added to the button.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;aria-disabled&lt;/code&gt; will be set to true.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;variant&lt;/code&gt; will just add the class to the button's class list.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rySGw5iu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ojioz7f7e5r67n8m6z7s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rySGw5iu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ojioz7f7e5r67n8m6z7s.png" alt="Button Class Changes"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#custom-loaders"&gt;
  &lt;/a&gt;
  Custom Loaders
&lt;/h2&gt;

&lt;p&gt;We have created a directive for this very purpose. Let's see how we can provide different loaders without changing anything in the button component itself.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;  &lt;span class="na"&gt;adiButton&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   Save User
   &lt;span class="nt"&gt;&amp;lt;ng-template&lt;/span&gt; &lt;span class="na"&gt;adiButtonLoader&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Saving... &lt;span class="nt"&gt;&amp;lt;/ng-template&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the case of the second button, I've replaced the spinner with a text and see how easy it is to do that.  Similary you can provide other components or animated svgs inside the &lt;code&gt;ng-template&lt;/code&gt; for substituting the default loader:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;  &lt;span class="na"&gt;adiButton&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   Save User
   &lt;span class="nt"&gt;&amp;lt;ng-template&lt;/span&gt; &lt;span class="na"&gt;adiButtonLoader&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;adi-search-loader&amp;gt;&amp;lt;/adi-search-loader&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/ng-template&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here the component &lt;code&gt;adi-search-loader&lt;/code&gt; is exposing a simple SVG image.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#customer-loaders-the-details"&gt;
  &lt;/a&gt;
  Customer Loaders - The details
&lt;/h3&gt;

&lt;p&gt;This piece of code here, which we wrote in the &lt;code&gt;button.component.ts&lt;/code&gt; is what is interesting.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt; &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"loader"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;ng-container&lt;/span&gt;
        &lt;span class="na"&gt;*ngTemplateOutlet=&lt;/span&gt;&lt;span class="s"&gt;"icon?.tpl || defaultLoader"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/ng-container&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;ng-template&lt;/span&gt; &lt;span class="na"&gt;#defaultLoader&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="c"&gt;&amp;lt;!-- Animated SVG --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ng-template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See that we have defined a &lt;code&gt;defaultLoader&lt;/code&gt; template that contains our animated SVG image. &lt;/p&gt;

&lt;p&gt;The loader is a container that contains a  &lt;a href="https://angular.io/api/common/NgTemplateOutlet#description"&gt;template outlet&lt;/a&gt;, the value we pass to it is the &lt;code&gt;icon?.tpl&lt;/code&gt; which the &lt;code&gt;TemplateRef&lt;/code&gt; that is exposed by our &lt;code&gt;directive&lt;/code&gt;. If the user provides a custom &lt;code&gt;ng-template&lt;/code&gt; with &lt;code&gt;adiButtonLoader&lt;/code&gt; directive, the value of &lt;br&gt;
&lt;code&gt;icon?.tpl&lt;/code&gt; will be used and the provided content will be projected there and otherwise, it will fall back to our default loading icon.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#adding-the-styles"&gt;
  &lt;/a&gt;
  Adding the Styles
&lt;/h2&gt;

&lt;p&gt;The styles for different states and the animation for the state change are all handled by CSS. We don't need to add more code to do the work which can be done using CSS.&lt;br&gt;
&lt;code&gt;:host&lt;/code&gt; selector is used here because in our case the host is the &lt;code&gt;&amp;lt;button&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt; element and we are styling it directly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:host&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--primary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;229&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;76%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;66%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="py"&gt;--primary-dark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;229&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;76%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;62%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="py"&gt;--primary-disabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;229&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;56%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;80%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="py"&gt;--secondary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;88%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="py"&gt;--secondary-dark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;82%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="py"&gt;--secondary-disabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;90%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;14px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"Poppins"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;transform&lt;/span&gt; &lt;span class="m"&gt;0.2s&lt;/span&gt; &lt;span class="n"&gt;cubic-bezier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.67&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.79&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1.03&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.loader&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;place-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;transform&lt;/span&gt; &lt;span class="m"&gt;0.2s&lt;/span&gt; &lt;span class="n"&gt;ease-in-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Primary Button Variant Styles */&lt;/span&gt;
&lt;span class="nd"&gt;:host&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;.primary&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nd"&gt;:host&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;.primary&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-dark&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nd"&gt;:host&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;.primary&lt;/span&gt;&lt;span class="nd"&gt;:not&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;.loading&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-dark&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inset&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;1.5px&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;229deg&lt;/span&gt; &lt;span class="m"&gt;76%&lt;/span&gt; &lt;span class="m"&gt;66%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nd"&gt;:host&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;.primary.loading&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;pointer-events&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* &amp;lt;-- Disables button click */&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-disabled&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Loading Styles */&lt;/span&gt;
&lt;span class="nd"&gt;:host&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;.loading&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nc"&gt;.loader&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nd"&gt;:host&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;.loading&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nc"&gt;.label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-10px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Styles for other variants are included in the CodeSandbox version. Also, you can see that I've added few extra styles for focus and hover states as I don't want to be that developer who doesn't give a damn about accessibility!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h2&gt;

&lt;p&gt;Feel free to ping me on Twitter If you would like to connect. Stay Safe ❤️&lt;/p&gt;

&lt;p&gt;Do add your thoughts in the comments section.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Monorepo Support Is Now Generally Available on Semaphore</title>
      <author>Marko Anastasov</author>
      <pubDate>Wed, 07 Apr 2021 16:18:47 +0000</pubDate>
      <link>https://dev.to/semaphore/monorepo-support-is-now-generally-available-on-semaphore-2bm8</link>
      <guid>https://dev.to/semaphore/monorepo-support-is-now-generally-available-on-semaphore-2bm8</guid>
      <description>&lt;p&gt;Our mission at &lt;a href="https://semaphoreci.com"&gt;Semaphore&lt;/a&gt; is to empower engineers to ship great products by providing them with a state-of-the-art &lt;a href="https://semaphoreci.com/cicd"&gt;CI/CD experience&lt;/a&gt;. We’re excited to announce that Semaphore now provides out-of-the-box support for monorepo projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-monorepo"&gt;
  &lt;/a&gt;
  What is monorepo? 🚝
&lt;/h2&gt;

&lt;p&gt;A &lt;a href="https://semaphoreci.com/blog/what-is-monorepo"&gt;monorepo&lt;/a&gt; is a version-controlled code repository that holds many projects. While these may be related, they are often logically independent and run by different teams.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ILU0kA6N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zt9fk2vxahyzfwcygsb7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ILU0kA6N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zt9fk2vxahyzfwcygsb7.png" alt="A monorepo CI/CD pipeline"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/tomfern" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JR1tFTsJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--W0t6jNWy--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/246163/d3e35cfd-7503-407d-a461-cccb8657c26f.jpg" alt="tomfern image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/semaphore/what-is-monorepo-and-should-you-use-it-5454" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;What is monorepo? (and should you use it)&lt;/h2&gt;
      &lt;h3&gt;Tomas Fernandez ・ Mar 31 ・ 12 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works? 🤔
&lt;/h2&gt;

&lt;p&gt;The key building block of monorepo CI/CD pipelines on Semaphore is the &lt;a href="https://docs.semaphoreci.com/reference/conditions-reference/#change_in"&gt;&lt;code&gt;change_in&lt;/code&gt; function&lt;/a&gt; which detects if a file or set of files have changed in a particular Git commit range.&lt;/p&gt;

&lt;p&gt;You can use the change_in function to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Run custom workflows for changes on specific files&lt;/strong&gt;. Use &lt;code&gt;change_in&lt;/code&gt; in combination with glob patterns to define jobs that will run only when certain files change.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Skip unnecessary checks&lt;/strong&gt;. No need to run that whole test suite when you change &lt;code&gt;README.md&lt;/code&gt;. Save some CI time by using exclude option to define files and folders you want to ignore.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Continuously deploy the right things&lt;/strong&gt;. Combine &lt;code&gt;change_in&lt;/code&gt; with &lt;a href="https://docs.semaphoreci.com/reference/pipeline-yaml-reference/#auto_promote"&gt;automatic promotions&lt;/a&gt; to deploy what has changed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZXFu4ujN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/08x3gbob4r71twd273p0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZXFu4ujN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/08x3gbob4r71twd273p0.png" alt="Monorepo CI/CD workflow in action"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what"&gt;
  &lt;/a&gt;
  So what? 😜
&lt;/h2&gt;

&lt;p&gt;Skipping parts of your code which were not affected by a change can lead to a dramatically faster feedback loop.&lt;/p&gt;

&lt;p&gt;For example, the front-end engineering team at BlueLabs was able to &lt;a href="https://semaphoreci.com/customers/bluelabs"&gt;reduce their build time from 17mins to 4mins&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NjXEIBVY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/el8mdsl61q40muke5mjs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NjXEIBVY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/el8mdsl61q40muke5mjs.png" alt="BlueLabs monorepo ci/cd workflow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-i-use-this"&gt;
  &lt;/a&gt;
  How can I use this? 😄
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://semaphoreci.com"&gt;Semaphore&lt;/a&gt; is free for personal, hobby and open source projects, so giving this a spin is pretty easy.&lt;/p&gt;

&lt;p&gt;You can fork a &lt;a href="https://github.com/semaphoreci-demos/semaphore-demo-monorepo"&gt;pre-made monorepo demo project&lt;/a&gt; and run it yourself.&lt;/p&gt;

&lt;p&gt;Or you can just add your own project and play with it.&lt;/p&gt;

&lt;p&gt;Happy building!&lt;/p&gt;




&lt;p&gt;&lt;em&gt;A more PR-ish version of this announcement was originally published on the &lt;a href="https://semaphoreci.com/blog/monorepo-support-available"&gt;Semaphore blog&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

</description>
      <category>news</category>
      <category>devops</category>
      <category>monorepo</category>
      <category>cicd</category>
    </item>
    <item>
      <title>Angular PWA, install and configure</title>
      <author>ng-conf</author>
      <pubDate>Wed, 07 Apr 2021 16:05:10 +0000</pubDate>
      <link>https://dev.to/ngconf/angular-pwa-install-and-configure-2471</link>
      <guid>https://dev.to/ngconf/angular-pwa-install-and-configure-2471</guid>
      <description>&lt;p&gt;Pankaj Parkar | ng-conf | Oct 2020 &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y-LorjHG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hv9nztf38twb5a49rna9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y-LorjHG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hv9nztf38twb5a49rna9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PWA&lt;/strong&gt; stands for Progressive Web Apps. Most web sites could benefit from using PWA. It not only helps to improve the page load time but also provides access to native features. Several &lt;a href="https://developers.google.com/web/showcase"&gt;case studies&lt;/a&gt; found out that PWA impacted the overall user engagement and those businesses see higher conversion rates.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-pwa" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is a PWA?&lt;/strong&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Websites that took all the right vitamins&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A Progressive Web Application (PWA) is a type of application software delivered through the web, built using HTML, CSS, and JavaScript. It is intended to work on any platform that uses a standards-compliant browser.&lt;/p&gt;

&lt;p&gt;Internally, a PWA uses service worker browser API to provide access to some native features. Also, it gives you an app-like feel. Cache storage is a really great feature that helps drastically improve page load time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-started-with-a-pwa" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Getting Started with a PWA&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Follow the steps below to create a PWA in Angular.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create an Angular application&lt;/li&gt;
&lt;li&gt;Add @angular/pwa package&lt;/li&gt;
&lt;li&gt;Understand the files added/modified by @angular/pwa package&lt;/li&gt;
&lt;li&gt;Run the application locally&lt;/li&gt;
&lt;li&gt;Deploy a PWA to production&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We’re going to visit each and every step in detail.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-create-an-angular-application" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Create an Angular application&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;We start by creating a brand new angular application. Of course, we will be using the Angular CLI.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ng new angular-pwa
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command will create a scaffold angular application inside the &lt;code&gt;angular-pwa&lt;/code&gt; folder. Let us navigate to the &lt;code&gt;angular-pwa&lt;/code&gt; folder and open VSCode.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd angular-pwa &amp;amp;&amp;amp; code .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8TQmGGGu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1000/1%2AwcPHSclbhtMhWzb7x9Uz1A.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8TQmGGGu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1000/1%2AwcPHSclbhtMhWzb7x9Uz1A.png" alt="Open VSCode on angular-pwa folder"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-add-raw-angularpwa-endraw-package" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. Add &lt;code&gt;@angular/pwa&lt;/code&gt; package&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Now we’re ready to add the &lt;code&gt;@angular/pwa&lt;/code&gt; package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ng add @angular/pwa
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command triggers schematics which add and modify several files.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kyZQGLxO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2A0xxiUJoSBC47VcQRiGguXA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kyZQGLxO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2A0xxiUJoSBC47VcQRiGguXA.png" alt="Console output after running ng add @angular/pwa"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-understand-the-files-addedmodified-by-angularpwa-package" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. Understand the files added/modified by @angular/pwa package&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;It adds different png files for different splash images for various resolutions icon-128x128.png, icon-144x144.png, icon-152x152.png, icon-192x192.png, icon-384x384.png, icon-512x512.png. Additionally, it adds &lt;code&gt;ngsw-config.json&lt;/code&gt; and &lt;code&gt;manifest.webmanifest&lt;/code&gt; for configuration purposes. Also, it modifies &lt;code&gt;angular.json&lt;/code&gt;, &lt;code&gt;package.json&lt;/code&gt;, &lt;code&gt;index.html&lt;/code&gt; and &lt;code&gt;app.module.ts&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Changes in index.html and package.json are pretty straight forward. Let’s take a quick look at the files changes by CLI.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ngsw-config.json&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It’s a configuration file in JSON format. Mainly this file is responsible for the generation of &lt;code&gt;ngsw-worker.js&lt;/code&gt;(serviceworker.js). You don’t have to write code for that. Just set a certain configuration and you’re done. Ultimately this &lt;code&gt;ngsw-worker.js&lt;/code&gt; helps to caches resources/assets with a specific caching strategy. As explained before, under the hood it uses service worker API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5YEvVzp---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AKXfjsT82yG6OKY2dET7N7A.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5YEvVzp---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AKXfjsT82yG6OKY2dET7N7A.png" alt="ngsw-config.json code window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Configurable properties in &lt;code&gt;ngsw-config.json&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;index&lt;/code&gt; — This specifies the entry point HTML path.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;assetGroups&lt;/code&gt; — Here you can the specifies assets or resources that need to be cached and specify the caching strategy, whether it should be network first, cache first, or a combination of both.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;manifest.webmanifest&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Primarily, it consists of how the PWA application will look when it opens up. Here you can set options like splash screen icon, background color, display, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3ngTGcta--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/567/1%2Ahx-8cdtBBQHPYJWKr_ajXA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3ngTGcta--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/567/1%2Ahx-8cdtBBQHPYJWKr_ajXA.png" alt="manifest.webmanifest code window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;angular.json&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Added &lt;code&gt;src/manifest.webmanifest&lt;/code&gt; file under assets, so that it will be served with the site. That links &lt;code&gt;ngswConfigPath&lt;/code&gt; and &lt;code&gt;serviceWorker&lt;/code&gt; enabling the production configuration in &lt;code&gt;build&lt;/code&gt; schematics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AnYwP-BP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/619/1%2AduKoxUGl_TfG0pc_RsJnuQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AnYwP-BP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/619/1%2AduKoxUGl_TfG0pc_RsJnuQ.png" alt='angular.json code window. Line 29 reading ""src/manifest.webmanifest"", line 64 reading ""serviceWorker": true," and line 65 reading ""ngswConfigPath": "ngsw-config.json"" have been highlighted with a red box.'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#angularjson" class="anchor"&gt;
  &lt;/a&gt;
  angular.json
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#appmodulets" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;app.module.ts&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;“app.module.ts is used to import the &lt;code&gt;ServiceWorkerModule&lt;/code&gt; for registering &lt;code&gt;ngsw-config.js&lt;/code&gt; (only for production mode).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bmcxTIzr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AfakLtLvMwxTjhWLkFu6D2A.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bmcxTIzr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AfakLtLvMwxTjhWLkFu6D2A.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-run-the-application-locally" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4. Run the application locally.&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;A PWA only runs on &lt;code&gt;https&lt;/code&gt; and &lt;code&gt;localhost&lt;/code&gt; environment. The Angular CLI is limited because the service worker doesn’t work with the ng serve command. You have to create a build and host it separately, perhaps using &lt;code&gt;http-server&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uZ55gQ_X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AC_SNn7jX4gFu8gXR4J0cFA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uZ55gQ_X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AC_SNn7jX4gFu8gXR4J0cFA.png" alt='screenshot of the Angular Docs reading "Serving with http-server Because ng serve does not work with service workers, you must use a separate HTTP server to test your project locally. You can use any HTTP server. The example below uses the http-server package from npm. To reduce the possibility of conflicts and avoid serving stale content, test on a dedicated port and disable caching."'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#reference-from-angular-docs" class="anchor"&gt;
  &lt;/a&gt;
  Reference from &lt;a href="https://angular.io/guide/service-worker-getting-started#serving-with-http-server"&gt;Angular Docs&lt;/a&gt;
&lt;/h6&gt;

&lt;p&gt;To see a PWA in action, follow the below steps.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Run &lt;code&gt;ng build --prod&lt;/code&gt; command. It will create files under &lt;code&gt;dist/angular-pwa&lt;/code&gt; folder.&lt;/li&gt;
&lt;li&gt;Navigate to that folder using &lt;code&gt;cd dist/angular-pwa&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;http-server&lt;/code&gt; command (&lt;code&gt;npm i -g http-server&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Open&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We can create a script to shorten this process. Open a terminal and run &lt;code&gt;npm run start-pwa&lt;/code&gt; command. That’s it!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"start-pwa": "ng build --prod &amp;amp;&amp;amp; http-server -p 8080 -c-1 dist/angular-pwa"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Awesome, you can see that a PWA is running on &lt;code&gt;http://localhost:8080&lt;/code&gt;. Now open the developer console and navigate to Application &amp;gt; Service Workers. You can see there is a service worker file &lt;code&gt;ngsw-worker.js&lt;/code&gt; installed for &lt;code&gt;http://localhost:8080&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LI7H24j2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1000/1%2AYKkSXgmfJiLwhq0MnTLZVw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LI7H24j2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1000/1%2AYKkSXgmfJiLwhq0MnTLZVw.png" alt="screenshot of a browser window running localhost8080. There's a blue banner at the top of the screen with a red Angular logo on the left hand side. Next to it reads the wor d &amp;quot;Welcome&amp;quot;. In the middle of the page, bellow the blue header, is a red circle with a white spaceship. A blue notification banner is popping out of the red circle and reads &amp;quot;angular-pwa app is running!&amp;quot;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#verifying-a-pwa-installation" class="anchor"&gt;
  &lt;/a&gt;
  Verifying a PWA installation
&lt;/h6&gt;

&lt;p&gt;The next time that you reload the browser, all the assets should be loaded from the service worker offline cache.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--riPTYPB---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1000/1%2AXqTP_dt2wcQaZEo3qtrhXg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--riPTYPB---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1000/1%2AXqTP_dt2wcQaZEo3qtrhXg.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#reload-browser-window-network-result" class="anchor"&gt;
  &lt;/a&gt;
  Reload browser window network result
&lt;/h6&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g-t96mV4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/500/1%2AJpqO65WM_PVuVZiJTuzuhg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g-t96mV4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/500/1%2AJpqO65WM_PVuVZiJTuzuhg.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That’s great! It means that for the first time we are loading all resources, but afterwards all resources will come from cache storage.&lt;br&gt;
Inside the developer console navigate to “Application &amp;gt; Cache &amp;gt; Cache Storage”. It shows a list of cached resources.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JMnPA6v6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/500/1%2AI36m8KoH3DBCMdeZ0m_oiA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JMnPA6v6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/500/1%2AI36m8KoH3DBCMdeZ0m_oiA.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cache &lt;em&gt;Storage API&lt;/em&gt; helps to keep the application accessible in offline mode. Let’s make application offline from Developer Console “Network &amp;gt; Offline (checkbox)”&lt;/p&gt;

&lt;p&gt;Reload the page and check what content is loaded so far.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hJoFSbwz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1000/1%2A0HQmGFxiHhrw0XAkZPECdA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hJoFSbwz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1000/1%2A0HQmGFxiHhrw0XAkZPECdA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#5-deploy-a-pwa-to-production" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. Deploy a PWA to production&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Deploying a PWA application to the cloud does not involve any special process. You have to create a prod build using &lt;code&gt;ng build --prod&lt;/code&gt; and then deploy that distribution on the cloud.&lt;/p&gt;

&lt;p&gt;Many cloud providers exist, but we’re going to deploy this application to Github using &lt;code&gt;gh-pages&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"predeploy": "ng build --prod --base-href=/angular-pwa/",
"deploy": "npx gh-pages -d dist/angular-pwa"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then run &lt;code&gt;npm run deploy&lt;/code&gt;. And then your application will be deployed to &lt;a href="https://username.github.io/repository-name/page"&gt;https://username.github.io/repository-name/page&lt;/a&gt;. In my case, it deployed to &lt;a href="https://pankajparkar.github.io/angular-pwa/"&gt;https://pankajparkar.github.io/angular-pwa/&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note: gh-pages command throws an error, install gh-pages &lt;code&gt;npm i -D gh-pages&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;I hope you have understood how you can install and configure PWA in an Angular application. You can find the code &lt;a href="https://github.com/pankajparkar/angular-pwa"&gt;here on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you like this article press 👏 clap button 50 times or as many times you want. Feel free to ask a question if you have any. Thanks a lot for reading!&lt;/p&gt;




&lt;p&gt;Soon, I will release part II of this article which covers CI and CD with Azure&lt;br&gt;
Pipeline. Stay tuned!&lt;/p&gt;

&lt;p&gt;For more Angular goodness, be sure to check out the latest episode of &lt;a href="https://www.spreaker.com/show/angular-show"&gt;The Angular Show podcast&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ngconf-the-musical-is-coming" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;ng-conf: The Musical is coming&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;ng-conf: The Musical is a two-day conference from the ng-conf folks coming on April 22nd &amp;amp; 23rd, 2021. Check it out at &lt;a href="https://www.2021.ng-conf.org/"&gt;ng-conf.org&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#thanks-to-erik-slack" class="anchor"&gt;
  &lt;/a&gt;
  Thanks to Erik Slack.
&lt;/h6&gt;

</description>
      <category>angular</category>
      <category>pwa</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Day 99 Of 100DaysOfCode:Centering and scaling in a pipeline</title>
      <author>Durga Pokharel</author>
      <pubDate>Wed, 07 Apr 2021 15:51:18 +0000</pubDate>
      <link>https://dev.to/iamdurga/day-99-of-100daysofcode-centering-and-scaling-in-a-pipeline-51g1</link>
      <guid>https://dev.to/iamdurga/day-99-of-100daysofcode-centering-and-scaling-in-a-pipeline-51g1</guid>
      <description>&lt;p&gt;This is my 99th day of #100daysofcode and #python learning journey.  Approximately I am in terminal point. Now I feel I am champion. Talking about today's progress I keep learning from DataCamp. I also did some exercises there. Did some codes on the random topic.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#centering-and-scaling-in-a-pipeline" class="anchor"&gt;
  &lt;/a&gt;
  Centering and Scaling In a Pipeline
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Import the necessary modules
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.preprocessing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;StandardScaler&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.pipeline&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;

&lt;span class="c1"&gt;# Setup the pipeline steps: steps
&lt;/span&gt;&lt;span class="n"&gt;steps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s"&gt;'scaler'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;StandardScaler&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'knn'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;KNeighborsClassifier&lt;/span&gt;&lt;span class="p"&gt;())]&lt;/span&gt;

&lt;span class="c1"&gt;# Create the pipeline: pipeline
&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;steps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Create train and test sets
&lt;/span&gt;&lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;X_test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random_state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Fit the pipeline to the training set: knn_scaled
&lt;/span&gt;&lt;span class="n"&gt;knn_scaled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Instantiate and fit a k-NN classifier to the unscaled data
&lt;/span&gt;&lt;span class="n"&gt;knn_unscaled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KNeighborsClassifier&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Compute and print metrics
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Accuracy with Scaling: {}'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;knn_scaled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_test&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Accuracy without Scaling: {}'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;knn_unscaled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_test&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output of above code is,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;Accuracy&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Scaling&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7700680272108843&lt;/span&gt;
&lt;span class="n"&gt;Accuracy&lt;/span&gt; &lt;span class="n"&gt;without&lt;/span&gt; &lt;span class="n"&gt;Scaling&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6979591836734694&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;blockquote class="twitter-tweet"&gt;
&lt;br&gt;
&lt;p&gt;Day 99 Of &lt;a href="https://twitter.com/hashtag/100daysofcode?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#100daysofcode&lt;/a&gt; and &lt;a href="https://twitter.com/hashtag/python?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#python&lt;/a&gt; &lt;br&gt;Centering and scaling in a pipeline from DataCamp&lt;br&gt; One more day to reach in a terminal point. Finally I am going to complete 100daysofcode.&lt;a href="https://twitter.com/hashtag/100DaysOfCode?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/WomenWhoCode?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#WomenWhoCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/DEVCommunity?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#DEVCommunity&lt;/a&gt; &lt;a href="https://t.co/crjxj5Fzuy"&gt;pic.twitter.com/crjxj5Fzuy&lt;/a&gt;&lt;/p&gt;— Durga Pokharel (@durgacodes) &lt;a href="https://twitter.com/durgacodes/status/1379821079087116288?ref_src=twsrc%5Etfw"&gt;April 7, 2021&lt;/a&gt;&lt;br&gt;
&lt;/blockquote&gt; 

</description>
      <category>shecoded</category>
      <category>womenintech</category>
      <category>100daysofcode</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Getting to know Flutter: Hero animations</title>
      <author>TheOtherDev/s</author>
      <pubDate>Wed, 07 Apr 2021 15:26:48 +0000</pubDate>
      <link>https://dev.to/theotherdevs/getting-to-know-flutter-hero-animations-mbh</link>
      <guid>https://dev.to/theotherdevs/getting-to-know-flutter-hero-animations-mbh</guid>
      <description>&lt;p&gt;Do you want to know how to make beautiful animations where the same image or text is animated alongside push/pop animations? This tutorial is for you.&lt;/p&gt;

&lt;p&gt;As you already know in Flutter everything is a widget so guess what you should use to do those animations? A widget of course and in particular the &lt;a href="https://flutter.dev/docs/development/ui/animations/hero-animations"&gt;Hero widget&lt;/a&gt;. It will take care of moving and stretching the widgets from the position and size of the first screen to the position and size of the second one. It will make the widget "fly" from one screen to the other (yes that's why it's called Hero).&lt;/p&gt;

&lt;p&gt;Here's an example of what you can build using the Hero widget:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IG0j8a3r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ycvnqj6e8ithy5cfovy8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IG0j8a3r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ycvnqj6e8ithy5cfovy8.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hero animations are one of the easiest animation to build in Flutter, you just have to wrap the 2 widgets on the different screens with an Hero widget and give them the same tag.&lt;/p&gt;

&lt;p&gt;Here's a code example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Screen 1&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Hero&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;tag:&lt;/span&gt; &lt;span class="s"&gt;'batman_image'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;asset&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;'assets/images/batman.png'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="nl"&gt;fit:&lt;/span&gt; &lt;span class="n"&gt;BoxFit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cover&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="c1"&gt;// Screen 2&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Hero&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;tag:&lt;/span&gt; &lt;span class="s"&gt;'batman_image'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;asset&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'assets/batman.png'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Hero Widget has several parameters that you can use if you want to play with the animations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-raw-flightshuttlebuilder-endraw-parameter" class="anchor"&gt;
  &lt;/a&gt;
  The &lt;code&gt;flightShuttleBuilder&lt;/code&gt; parameter
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;flightShuttleBuilder&lt;/code&gt; parameters lets you provide another widget during the transition. The code below will show a red container during the transition that animates the opacity but you can provide a different widget of your choice.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;Hero&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;tag:&lt;/span&gt; &lt;span class="s"&gt;'batman_image'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;flightShuttleBuilder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;flightContext&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;Animation&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;animation&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;HeroFlightDirection&lt;/span&gt; &lt;span class="n"&gt;flightDirection&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;fromHeroContext&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;toHeroContext&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;AnimatedBuilder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;animation:&lt;/span&gt; &lt;span class="n"&gt;animation&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;builder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;child&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Container&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="nl"&gt;color:&lt;/span&gt; &lt;span class="n"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;red&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;withOpacity&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;animation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="o"&gt;},&lt;/span&gt;
      &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;asset&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'assets/batman.png'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-raw-placeholderbuilder-endraw-parameter" class="anchor"&gt;
  &lt;/a&gt;
  The &lt;code&gt;placeholderBuilder&lt;/code&gt; parameter
&lt;/h2&gt;

&lt;p&gt;You can provide a Widget as a placeholder using the &lt;code&gt;placeholderBuilder&lt;/code&gt;parameter, this will show the widget in the final position of the widget during the transition, for example the following code that returns just a red Container as a placeholder will produce the result that you see in the video. The red container is placed in the space that will be occupied by the image widget, during the transition.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;Hero&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;tag:&lt;/span&gt; &lt;span class="s"&gt;'batman_image'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;placeholderBuilder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="n"&gt;Size&lt;/span&gt; &lt;span class="n"&gt;heroSize&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;child&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Container&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;width:&lt;/span&gt; &lt;span class="n"&gt;heroSize&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;height:&lt;/span&gt; &lt;span class="n"&gt;heroSize&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;color:&lt;/span&gt; &lt;span class="n"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;red&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="o"&gt;},&lt;/span&gt;
      &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;asset&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'assets/batman.png'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--72chOhcm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88kcbnjcj46roookzszk.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--72chOhcm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88kcbnjcj46roookzszk.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-raw-createrecttween-endraw-parameter" class="anchor"&gt;
  &lt;/a&gt;
  The &lt;code&gt;createRectTween&lt;/code&gt; parameter
&lt;/h2&gt;

&lt;p&gt;You could also change the position and size of the widgets during the transition using the &lt;code&gt;createRectTween&lt;/code&gt; parameter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;Hero&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;tag:&lt;/span&gt; &lt;span class="s"&gt;'batman_image'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;createRectTween:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Create and return your custom rect&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;MaterialRectArcTween&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;begin:&lt;/span&gt; &lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;end:&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="o"&gt;},&lt;/span&gt;
      &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;asset&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'assets/batman.png'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to dig deeper into what's behind Hero check out the official documentation &lt;a href="https://flutter.dev/docs/development/ui/animations/hero-animations"&gt;https://flutter.dev/docs/development/ui/animations/hero-animations&lt;/a&gt;&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>dart</category>
      <category>tutorial</category>
      <category>mobile</category>
    </item>
    <item>
      <title>Setup Javascript Dev on ChromeOS</title>
      <author>Tim Apple</author>
      <pubDate>Wed, 07 Apr 2021 15:23:53 +0000</pubDate>
      <link>https://dev.to/vetswhocode/setup-javascript-dev-on-chromeos-15bn</link>
      <guid>https://dev.to/vetswhocode/setup-javascript-dev-on-chromeos-15bn</guid>
      <description>&lt;p&gt;I recently bought myself a Pixelbook Go so I could play with ChromeOS and I was pleasantly surprised at how great it actually was. This made me want to do some development on it. The set up was pretty easy and I thought I would share it here. &lt;/p&gt;

&lt;p&gt;The Chromebook is an actual Linux machine running Gentoo, but we still have to install a Linux VM to get access to Linux. Luckily they make this ridiculously simple on ChromeOS. &lt;/p&gt;

&lt;p&gt;Go to your settings and look for &lt;strong&gt;Developers&lt;/strong&gt; and you will see the toggle to install Linux.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F8_lKfR---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2lshnn8xym1fz9e5mj1x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F8_lKfR---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2lshnn8xym1fz9e5mj1x.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It doesn't get much easier than that. You just wait a minute or two and let it do it's thing. &lt;/p&gt;

&lt;p&gt;Next we can install &lt;a href="https://code.visualstudio.com"&gt;Visual Studio Code from this link&lt;/a&gt;. Just click on the link to download the .deb file as seen below. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--baQXwfj1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ovvb08k0z7t8z70hftq0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--baQXwfj1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ovvb08k0z7t8z70hftq0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you have it downloaded it should show in your Downloads in the file manager. You just then double click it and it will install. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3d6bV9wM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6vjx6xvf0lqz90xt1g69.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3d6bV9wM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6vjx6xvf0lqz90xt1g69.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mt0TBiHi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0v8d1yn2cuk48gg3nne.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mt0TBiHi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0v8d1yn2cuk48gg3nne.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will be able to find VSCode in your Chrome Menu or through desktop search. You can run it and pin it to the taskbar if you wish. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F8fr1Kek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0sh663h2zknncifl7v12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F8fr1Kek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0sh663h2zknncifl7v12.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this point you can install your favorite extensions and be productive. But let's customize a bit and get Node.js installed and running. &lt;/p&gt;

&lt;p&gt;Your Terminal app should be easily accessible in the ChromeOS menu. You can see it circled below. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a6ZTytT_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/arzubmh3ws6wmrg99g7s.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a6ZTytT_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/arzubmh3ws6wmrg99g7s.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once we open the terminal we will be doing some text file editing so we will need to install an editor, I prefer nano. &lt;/p&gt;

&lt;p&gt;$ &lt;code&gt;sudo apt install nano&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Next we will install the .zsh shell. I do this because it makes it easier to manage node with plugins. &lt;/p&gt;

&lt;p&gt;$ &lt;code&gt;sudo apt install zsh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let's install a couple tools to make sure you have them also. &lt;/p&gt;

&lt;p&gt;$ &lt;code&gt;sudo apt install wget git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now we install &lt;a href="https://ohmyz.sh/"&gt;Oh-My-Zsh&lt;/a&gt;&lt;br&gt;
$ &lt;code&gt;wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;$ &lt;code&gt;cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;$ &lt;code&gt;source ~/.zshrc&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We'll add the plugin 'zsh-autosuggestions' this is very handy by using past commands to help you auto fill future ones. The command for install is..&lt;/p&gt;

&lt;p&gt;$ &lt;code&gt;git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And zsh-nvm will help us keep a current node install and even change versions if needed. &lt;/p&gt;

&lt;p&gt;$ &lt;code&gt;git clone https://github.com/lukechilds/zsh-nvm ~/.oh-my-zsh/custom/plugins/zsh-nvm&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once you have done all of the above commands we will edit our .zshrc. First make sure your in your /home directory by typing &lt;code&gt;cd&lt;/code&gt; and pressing enter. Next run &lt;code&gt;nano .zshrc&lt;/code&gt;.&lt;br&gt;
we want to add the plugins we installed earlier. This is a little further down the config. Just enter them as I have in the picture below. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rl4tnYG4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/h98ke8uhgn64s2tror5a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rl4tnYG4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/h98ke8uhgn64s2tror5a.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once this is done you will press &lt;code&gt;ctrl + o&lt;/code&gt; to write the file and &lt;code&gt;ctrl + X&lt;/code&gt; to close nano. &lt;/p&gt;

&lt;p&gt;Now type &lt;code&gt;source .zshrc&lt;/code&gt; to load your plugins and theme. &lt;/p&gt;

&lt;p&gt;And now we install the LTS version of node simply by typing &lt;code&gt;nvm install --lts&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now you can create a directory in you Linux environment using the terminal or your file manager. Then just right click it to open in Visual Studio Code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5t2j9qOu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x95flkr3x5f380jk9oh8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5t2j9qOu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x95flkr3x5f380jk9oh8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You should be more than on your way now. If there are any details I may have missed let me know and I'll edit this document. I hope it helps. ChromeOS is very nice and light with battery power lasting ages. Great for when your out and about. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5JRDt19m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ejcebk97ohcgng35vo8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5JRDt19m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ejcebk97ohcgng35vo8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>chromeos</category>
      <category>linux</category>
    </item>
    <item>
      <title>On #GumroadDay, my books are "pay what you want", minimum $1</title>
      <author>javinpaul</author>
      <pubDate>Wed, 07 Apr 2021 15:17:27 +0000</pubDate>
      <link>https://dev.to/javinpaul/on-gumroadday-my-books-are-pay-what-you-want-minimum-1-59m5</link>
      <guid>https://dev.to/javinpaul/on-gumroadday-my-books-are-pay-what-you-want-minimum-1-59m5</guid>
      <description>&lt;p&gt;Hello devs, just wanted to write a short post about Gumroad Day and an excllent opportunity to buy my books for just 1$ (minimum).  For #GumroadDay, both my books, &lt;strong&gt;&lt;a href="https://gumroad.com/l/QqjGH"&gt;Grokking the Java Interview&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href="https://gumroad.com/l/hrUXKY"&gt;Grokking the Spring Boot Interview&lt;/a&gt;&lt;/strong&gt; are 'Pay What You Want, $1 minimum. Today only.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;- Grokking the Java Interview, $19.9 (normal price)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;- Grokking the Spring Bot Interview, $19.9 (normal price)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;More than 580+ Java developers have bought so far. Go see what they look like!&lt;/p&gt;

&lt;p&gt;Here is the link - &lt;strong&gt;&lt;a href="https://gumroad.com/javinpaul/"&gt;https://gumroad.com/javinpaul/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;More than 150+ people have already bought my books in few hours and given only a few hours are left before #GumroadDay is over, I suggest all of my blog readers, fans, and followers to use this opportunity.&lt;/p&gt;

&lt;p&gt;Gumroad Day is a special day organized by Gumroad where Creators will keep all the earning, all the fees like transaction fee, Paypal fee will be paid by Gumroad. Many creators are offering their courses for huge discounts so that more people can benefit from their work.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gumroad.com/l/hrUXKY"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gj70avFF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-1CEPeJjeoFk/YG23Acoh_-I/AAAAAAAAm_M/VesCLN2ZucUr69_2f9r5ZwqUpaxKBkyLQCLcBGAsYHQ/w640-h328/100%252Bsales%252Bon%252BGumroad%252BDay.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-does-grokking-the-java-interview-cover" class="anchor"&gt;
  &lt;/a&gt;
  What does Grokking the Java Interview cover?
&lt;/h3&gt;

&lt;p&gt;This is my first book in 10 years of blogging and it contains all the essential core Java topics you need to prepare to crack a Java developer interview. This is a 150+ pages book that contains frequently asked Java interview questions and their answers.&lt;/p&gt;

&lt;p&gt;Here is the list of core Java topics covered in this book:&lt;/p&gt;

&lt;p&gt;1. Object-Oriented Programming&lt;/p&gt;

&lt;p&gt;2. Java Fundamentals&lt;/p&gt;

&lt;p&gt;3. Java Collections&lt;/p&gt;

&lt;p&gt;4. Java Multithreading&lt;/p&gt;

&lt;p&gt;5. Garbage Collection&lt;/p&gt;

&lt;p&gt;6. JDBC&lt;/p&gt;

&lt;p&gt;7. Generics&lt;/p&gt;

&lt;p&gt;8. Design PAtterns&lt;/p&gt;

&lt;p&gt;9. Telephonic Interview Questions &lt;/p&gt;

&lt;p&gt;You can use this book to prepare for the Java interview in a guided and structured way. Java is vast and it's tough to crack Java interviews without proper preparation and this book helps you there. Whether you are a beginner looking for your first job or an experienced Java developer looking for your next job this book and questions will help you.&lt;/p&gt;

&lt;p&gt;Here is the link to learn more about the book - &lt;strong&gt;&lt;a href="https://gumroad.com/l/QqjGH"&gt;Grokking the Java Interview&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gumroad.com/l/QqjGH"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PIZsRX2z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-4r1BKDnO5dw/YG24fGKW1tI/AAAAAAAAm_U/f6hcE0oZ5fsFIVWpwBwsA4RqydHBiANawCLcBGAsYHQ/w376-h532/Cover4.jpg" alt="Gumroad day sale Grokking the Java interview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-does-grokking-the-spring-boot-interview-cover" class="anchor"&gt;
  &lt;/a&gt;
  What does Grokking the Spring Boot Interview cover?
&lt;/h3&gt;

&lt;p&gt;This is my second book to help Java developers in their interview preparation and this book covers Spring Framework, the most important skill for Java developers. When I released my first book, a lot of my readers and followers message me that to write a similar book but on the Spring framework. Since Spring is also vast like Java, it took me 5 months to write this book but I am very happy that it turns out to be a great resource for anyone preparing for Java + Spring boo interview as well for Spring certification.&lt;/p&gt;

&lt;p&gt;This is a 250+ pages book that contains frequently asked Spring, Spring Boot, and Spring Security interview questions and their answers.&lt;/p&gt;

&lt;p&gt;Here is the list of Spring Framework topics covered in this book:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Container, Dependency, and IOC&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;2. Spring Bean Lifecycle&lt;/p&gt;

&lt;p&gt;3. Aspect-Oriented Programming (AOP)&lt;/p&gt;

&lt;p&gt;4. Spring MVC&lt;/p&gt;

&lt;p&gt;5. Spring Boot Intro&lt;/p&gt;

&lt;p&gt;6. Spring Boot Auto Configuration&lt;/p&gt;

&lt;p&gt;7. Spring Boot Starter Dependency&lt;/p&gt;

&lt;p&gt;8. Spring Boot Actuator&lt;/p&gt;

&lt;p&gt;9. Spring Boot CLI&lt;/p&gt;

&lt;p&gt;10. Spring Boot Testing&lt;/p&gt;

&lt;p&gt;11. Spring Cloud Questions&lt;/p&gt;

&lt;p&gt;12. Spring Data JPA&lt;/p&gt;

&lt;p&gt;13. Spring Security&lt;/p&gt;

&lt;p&gt;You can use this book to prepare for the Spring Boot interview in a guided and structured way. Just like Java, Spring Framework is also vast and it's tough to crack Spring Boot interviews without proper preparation and this book helps you there.&lt;/p&gt;

&lt;p&gt;Whether you are a beginner looking for your first job or an experienced Java developer looking for your next job this book and questions will help you.&lt;/p&gt;

&lt;p&gt;Here is the link to learn more about the book - &lt;strong&gt;&lt;a href="https://gumroad.com/l/hrUXKY"&gt;Grokking the Spring Boot Interview&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gumroad.com/l/hrUXKY"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K9l3246e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-SUCq4J1lR5s/YG25uRFGFNI/AAAAAAAAm_c/OJnxMGSk1TQhTy-EEOwUhUlcJad2t6d9ACLcBGAsYHQ/w323-h485/Grokking%252BSpring%252BBoot%252BInterview%252BCover.jpg" alt="Gumroad day sale Grokking the Spring Boot  interview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all guys, this post means to be short because Gumroad day is just for one day and the prices will revert back to normal tomorrow. If you are preparing for Java and Spring Boot interviews then this is your best chance to grab your copy of my books. &lt;/p&gt;

&lt;p&gt;Here is the link - &lt;strong&gt;&lt;a href="https://gumroad.com/javinpaul/"&gt;https://gumroad.com/javinpaul/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>books</category>
      <category>programming</category>
      <category>springframework</category>
    </item>
    <item>
      <title>B2B Marketplace Development: Best Practices </title>
      <author>Codica</author>
      <pubDate>Wed, 07 Apr 2021 14:59:32 +0000</pubDate>
      <link>https://dev.to/codicacom/b2b-marketplace-development-best-practices-3h0g</link>
      <guid>https://dev.to/codicacom/b2b-marketplace-development-best-practices-3h0g</guid>
      <description>&lt;p&gt;The article was initially published on &lt;a href="https://www.codica.com/blog/how-to-create-b2b-marketplace/"&gt;Codica Blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Forrester predicts that US B2B (business-to-business) e-commerce transactions will reach $1.8 trillion by 2023. So it seems that now is a good time to create a B2B marketplace. &lt;/p&gt;

&lt;p&gt;Thinking about where to start? This guide covering the key stages of B2B marketplace development will be a good help.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-definition-of-a-b2b-marketplace" class="anchor"&gt;
  &lt;/a&gt;
  The definition of a B2B marketplace
&lt;/h1&gt;

&lt;p&gt;In simple terms, a B2B marketplace is a website where sellers and service providers offer their products to other companies.&lt;/p&gt;

&lt;p&gt;Such platforms are famous for the specific payment options that differ from payment gateways on B2C e-commerce websites. They include bank transfers, paper checks, and wire transfers&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#classification-of-b2b-marketplaces" class="anchor"&gt;
  &lt;/a&gt;
  Classification of B2B marketplaces
&lt;/h2&gt;

&lt;p&gt;Speaking about business-to-business e-commerce websites, we cannot but mention their main types. They are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Vertical B2B marketplaces&lt;/strong&gt; - focus on a specific niche or target audience;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Horizontal B2B platforms&lt;/strong&gt; - offer a wide range of products to all kinds of companies;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Product-based B2B multi-vendor marketplaces&lt;/strong&gt; - sell physical goods. The examples are Global Source and Alibaba.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Service-based business-to-business websites&lt;/strong&gt; - provide different services from content creating to event management. The most well-known marketplaces are TopTal and Upwork.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Related reading: &lt;a href="https://www.codica.com/blog/how-to-build-multi-vendor-marketplace-website-like-amazon/"&gt;How to Build a Multi-Vendor Marketplace Like Amazon&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-build-a-b2b-marketplace-in-5-smart-steps" class="anchor"&gt;
  &lt;/a&gt;
  How to build a B2B marketplace in 5 smart steps
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#1-identify-your-prospective-buyers" class="anchor"&gt;
  &lt;/a&gt;
  1. Identify your prospective buyers
&lt;/h2&gt;

&lt;p&gt;For B2B clients, the customer journey is long and complicated. A lot of people are engaged in decision-making. You should consider the needs, opinions, and job functions of all of them.&lt;/p&gt;

&lt;p&gt;Besides, B2B companies are concerned about the welfare of their business. It means that they will make a purchase only if there is a strong need for your solution. Hence, your task is to find the best possible way to address their pain points with your product.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-come-up-with-an-uncanny-value-proposition" class="anchor"&gt;
  &lt;/a&gt;
  2. Come up with an uncanny value proposition
&lt;/h2&gt;

&lt;p&gt;With a compelling, catching value proposition, you increase your chances to stand out from the competitors.&lt;/p&gt;

&lt;p&gt;Wonder what qualities make a well-executed value proposition? Basically, it should be clear, specific, and unique.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-take-care-of-the-ux" class="anchor"&gt;
  &lt;/a&gt;
  3. Take care of the UX
&lt;/h2&gt;

&lt;p&gt;Below you can see several UX design principles you should adhere to when designing a B2B marketplace: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Avoid vibrant colors. Replace them with subtle shades. This way, you will make your B2B e-commerce website more professional.&lt;/li&gt;
&lt;li&gt;Allow users to check whether the product is available and move to a quick checkout.&lt;/li&gt;
&lt;li&gt;Do not forget to set automatic recurring purchases. Thus, your clients will be able to save their precious time.&lt;/li&gt;
&lt;li&gt;Make sure that the sign-up process is plain and simple.&lt;/li&gt;
&lt;li&gt;Upload demos, whitepapers, and social proofs to ensure trust in your B2B marketplace.&lt;/li&gt;
&lt;li&gt;Create well-defined categories for all your products so that the customers could find them easily.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The product categories on Grainger, a B2B website offering industrial supplies, look the following way:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tq5_SPJX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pd1aooonfuzxqqov6jmz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tq5_SPJX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pd1aooonfuzxqqov6jmz.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-choose-the-functionality-wisely" class="anchor"&gt;
  &lt;/a&gt;
  4. Choose the functionality wisely
&lt;/h2&gt;

&lt;p&gt;As for the basic functionality of your B2B marketplace, the following features should be implemented in the first place:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The sign up page; &lt;/li&gt;
&lt;li&gt;Company/ customer profile;&lt;/li&gt;
&lt;li&gt;Product catalog;&lt;/li&gt;
&lt;li&gt;Advanced search and filters;&lt;/li&gt;
&lt;li&gt;A convenient reordering and replenishing system;&lt;/li&gt;
&lt;li&gt;Reviews and rating;&lt;/li&gt;
&lt;li&gt;he product comparison page;&lt;/li&gt;
&lt;li&gt;Analytical dashboard;&lt;/li&gt;
&lt;li&gt;Multiple payment options;&lt;/li&gt;
&lt;li&gt;Various shipping and delivery methods.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-find-the-most-suitable-development-approach" class="anchor"&gt;
  &lt;/a&gt;
  5. Find the most suitable development approach
&lt;/h2&gt;

&lt;p&gt;There are two development approaches you should consider. These are ready-made products and custom software development. &lt;/p&gt;

&lt;p&gt;Let’s discuss both of these options briefly so that you could make the right decision for your business:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Out-of-the-box solutions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The main advantages of off-the-shelf products include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Affordable price;&lt;/li&gt;
&lt;li&gt;Out-of-the-box solutions are ready to install;&lt;/li&gt;
&lt;li&gt;Regular updates;&lt;/li&gt;
&lt;li&gt;Customer support included in the price.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, remember that you may lack some important functionality or get extra features you will not need.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Custom software development&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let’s take a quick look at the core benefits of the bespoke software:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can make sure that all your specific business needs and requirements are covered;&lt;/li&gt;
&lt;li&gt;All your sensitive data will be secured;&lt;/li&gt;
&lt;li&gt;All hidden risks will be taken into account;&lt;/li&gt;
&lt;li&gt;You will not have to pay for unnecessary functionality;&lt;/li&gt;
&lt;li&gt;New functionality can be added easily.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;B2B marketplaces are on the rise now. Statista expects global B2B sales to reach $1.2 trillion by 2021. Given that, more and more entrepreneurs invest in building business-to-business e-commerce platforms.&lt;/p&gt;

&lt;p&gt;However, the B2B marketplace domain is more complicated if we compare it with customer-oriented e-commerce platforms. Here you need to understand your target audience and the specifics of the customer journey to succeed.&lt;/p&gt;

&lt;p&gt;If you are looking for a reliable software partner to help you launch a business-to-business e-commerce platform, feel free to contact us. We will eagerly deliver a scalable and fast-loading B2B marketplace for you on time and budget.&lt;/p&gt;

&lt;p&gt;For more information about building a business-to-business marketplace, check our full article: &lt;a href="https://www.codica.com/blog/how-to-create-b2b-marketplace/"&gt;Online B2B Marketplace Development: Step-by-Step Guide&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>b2b</category>
      <category>marketplace</category>
    </item>
    <item>
      <title>How to make a multi tenant website</title>
      <author>Manda Putra</author>
      <pubDate>Wed, 07 Apr 2021 14:54:27 +0000</pubDate>
      <link>https://dev.to/mandaputtra/how-to-make-a-multi-tenant-website-12ng</link>
      <guid>https://dev.to/mandaputtra/how-to-make-a-multi-tenant-website-12ng</guid>
      <description>&lt;p&gt;Today I'll tell how do I make wildcard subdomains and how do I handle the data between multiple user account. I thought it was hard, but turns out it is not (or maybe it is easy because I doing it wrong? I don't know).&lt;/p&gt;

&lt;p&gt;Every time I search about how to make a multi tenant website, there are 0 articles on how to build them. I always wonder how do they do their architecture etc.&lt;/p&gt;

&lt;p&gt;The key to this type of website architecture are just wildcard subdomain and reading the host on your code. As simple as that.&lt;/p&gt;

&lt;p&gt;The website requirement are :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It's blog platform&lt;/li&gt;
&lt;li&gt;Every user will have their own subdomain (zeke.bloggy.net, eren.bloggy.net, etc)&lt;/li&gt;
&lt;li&gt;Every subdomain had their own data&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So there are some steps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#buy-a-domain-and-vps" class="anchor"&gt;
  &lt;/a&gt;
  Buy a Domain and VPS
&lt;/h2&gt;

&lt;p&gt;First you must own a domain name and VPS (Virtual Private Server). I do think that this could be done in with serverless too, I just didn't tried that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#point-your-domain-to-the-vps" class="anchor"&gt;
  &lt;/a&gt;
  Point your domain to the VPS
&lt;/h2&gt;

&lt;p&gt;On your domain registrar DNS Management There are 4 record that you should add. You also need your VPS IP address to point to.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;| domain     | record type | value                              | host                               | ttl   |
|------------|-------------|------------------------------------|------------------------------------|-------|
| bloggy.com | A Record    | 192.0.0.1                          | bloggy.com                         | 14400 |
| bloggy.com | CNAME       | bloggy.com                         | www                                | 14400 |
| bloggy.com | A Record    | 192.0.0.1                          | *                                  | 14400 |
| bloggy.com | TXT Record  | radom-value-provided-by-lestecrypt | radom-value-provided-by-lestecrypt | 14400 |
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The IP address there are your VPS IP address the domain are your domain (till the end of this article we'll use bloggy.com)&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;TXT Record&lt;/strong&gt; will be given by LetsEncrypt when we need &lt;em&gt;https&lt;/em&gt;, I'll on the next step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup-nginx-to-point-to-your-domain" class="anchor"&gt;
  &lt;/a&gt;
  Setup nginx to point to your domain
&lt;/h2&gt;

&lt;p&gt;Install Nginx.&lt;/p&gt;

&lt;p&gt;Apache, Nginx, or other web server thingy have their own syntax of configuration I used Nginx here. Use your own preferences&lt;/p&gt;

&lt;p&gt;The configuration I use for &lt;code&gt;bloggy.com&lt;/code&gt; are the same as article &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-18-04"&gt;here&lt;/a&gt; try to follow that article guide (I want to keep this posts as short as possible)&lt;/p&gt;

&lt;p&gt;The difference is when I want to register  the wildcard subdomain. The certbot command I used are different.&lt;/p&gt;

&lt;p&gt;It is not :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo certbot --nginx -d bloggy.com -d www.bloggy.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;but this :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo certbot --server https://acme-v02.api.letsencrypt.org/directory -d *.example.com --manual --preferred-challenges dns-01 certonly
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On this part you'll need to make the &lt;strong&gt;TXT Record&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;I don't know why the &lt;code&gt;-d *.example.com&lt;/code&gt; won't work, seems like it is a domain registrar problem. I obtain this trick from &lt;a href="https://medium.com/@utkarsh_verma/how-to-obtain-a-wildcard-ssl-certificate-from-lets-encrypt-and-setup-nginx-to-use-wildcard-cfb050c8b33f"&gt;this article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For now, you will have a working wildcard subdomain and domain. Whether you visit &lt;code&gt;bloggy.com&lt;/code&gt;, &lt;code&gt;zeke.bloggy.com&lt;/code&gt;, &lt;code&gt;eren.bloggy.com&lt;/code&gt; you will see Nginx welcome page (If you use nginx)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#handle-the-subdomain-on-your-code" class="anchor"&gt;
  &lt;/a&gt;
  Handle the subdomain on your code
&lt;/h2&gt;

&lt;p&gt;I use node.js (Express.js) for this, different app may have different syntax. But the rule are simple, read the hostname to get the account name and fetch the data;&lt;/p&gt;

&lt;p&gt;The app had 2 routes &lt;code&gt;home&lt;/code&gt; and &lt;code&gt;blog&lt;/code&gt; Here the simplest code possible&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dataBlog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;account&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;zeke&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;blog&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;so zeke thing&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;account&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;eren&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;blog&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;so eren thing 2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;// Home route list all blog and account&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dataBlog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;// Blog route only list the blog based on host account name&lt;/span&gt;
&lt;span class="c1"&gt;// You will see that we dont use params here, we use hostname&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/blog&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt; &lt;span class="c1"&gt;// or 'x-forwarded-host'&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;accountName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// get the account name on domain.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;accountName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;accountData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dataBlog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;accountName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;accountData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Not Found&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;  
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Example app listening at http://localhost:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#proxy-your-web-app-with-nginx" class="anchor"&gt;
  &lt;/a&gt;
  Proxy your web app with nginx
&lt;/h2&gt;

&lt;p&gt;Node.js aren't like PHP it has its own web servers, but to contact with real world it needs proxy. So we just proxy it to our nginx.&lt;/p&gt;

&lt;p&gt;On &lt;code&gt;bloggy.com&lt;/code&gt; nginx configuration&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# so the home route will be on bloggy.com&lt;/span&gt;
proxy_pass http://localhost:3000&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On the wildcard &lt;code&gt;*.bloggy.com&lt;/code&gt; nginx configuration&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# so the blog route will point to *.bloggy.com&lt;/span&gt;
proxy_pass http://localhost:3000/blog&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it! Every time you visit &lt;code&gt;bloggy.com/blog&lt;/code&gt; it will respond 'not found' but if you visit &lt;code&gt;zeke.bloggy.com&lt;/code&gt; it will fetch the data for 'zeke'.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing" class="anchor"&gt;
  &lt;/a&gt;
  Closing
&lt;/h2&gt;

&lt;p&gt;I hope this will help you to make your multi tenant website. Have a great day. I welcome every feedback you had! :D&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>server</category>
    </item>
    <item>
      <title>Build a 'Green' Browser Extension</title>
      <author>Jen Looper</author>
      <pubDate>Wed, 07 Apr 2021 14:49:23 +0000</pubDate>
      <link>https://dev.to/azure/build-a-green-browser-extension-33in</link>
      <guid>https://dev.to/azure/build-a-green-browser-extension-33in</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Credits&lt;/strong&gt;: This browser extension was inspired by Adebola Adeniran who built a very useful &lt;a href="https://github.com/onedebos/covtension"&gt;extension&lt;/a&gt; for Chrome and Edge to track COVID country by country via API calls. He wrote an excellent &lt;a href="https://blog.adebola.dev/how-to-build-a-chrome-extension-that-makes-api-calls/"&gt;article&lt;/a&gt; about it. Thanks also to Asim Hussain who told me about these APIs as well. And thanks to the &lt;a href="https://energylollipop.com/"&gt;Energy Lollipop extension&lt;/a&gt; for California emissions for their 'dot' color extension marker idea.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you've never built a browser extension, it's surprisingly fun and addictive. Have little repetitive tasks that could be helped by having something right at your fingertips, pinned to your browser bar? How about a little dot that can tell you, at a glance, whether your geographic region is undergoing a moment of heavy C02 usage on the electric grid? Would it help you make a decision on whether or not to run your clothes dryer? &lt;/p&gt;

&lt;p&gt;According to Asim Hussain's &lt;a href="https://docs.microsoft.com/en-us/learn/modules/sustainable-software-engineering-overview/?WT.mc_id=academic-23300-jelooper"&gt;8 Principles of Sustainable Software Development&lt;/a&gt;, one of the goals of a 'Green Developer' is to help users make decisions that can have a meaningful impact on carbon impact. In addition, a Green Developer should be mindful of the carbon impact of their software itself. A carbon extension, hosted locally and only making ad-hoc API calls might be a particularly sustainable idea.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Beware! Not all browser extensions are 'green' by default. Some seem to consume a lot of resources.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2eZu9ggd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b5zlv788o8irkf5vnvy8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2eZu9ggd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b5zlv788o8irkf5vnvy8.png" alt="A heavy browser extension"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's build a small 'green' browser extension! We will be inspired by Adebola's extension to call &lt;a href="https://www.tmrow.com/"&gt;tmrow&lt;/a&gt;'s &lt;a href="https://api.electricitymap.org/"&gt;electricityMap API&lt;/a&gt; to track regional electricity usage, so that you can have a reminder right in your browser about how heavy your region's electricity usage is so that you can make educated judgement calls on your activities based on this information.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Curious about the potential environmental impact of your decisions? Take &lt;a href="https://www.nytimes.com/interactive/2020/08/30/climate/climate-footprint-quiz.html"&gt;this quiz&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I've created some sample code to get you up and running quickly:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/jlooper/carbon-trigger-extension/tree/start &amp;amp;&amp;amp; cd carbon-trigger-extension
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Be sure to checkout the &lt;code&gt;start&lt;/code&gt; branch (the main branch is the full code, in case you just want to take a look)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Navigate to the root and install the required packages&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Explore the files:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;dist/manifest.json (defaults are set here)&lt;/li&gt;
&lt;li&gt;src/index.js (your JS code goes here)&lt;/li&gt;
&lt;li&gt;dist/index.html (frontend HTML markup here)&lt;/li&gt;
&lt;li&gt;dist/background.js (JS that runs in the background)&lt;/li&gt;
&lt;li&gt;dist/index.js (built JS)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#get-an-api-key" class="anchor"&gt;
  &lt;/a&gt;
  Get an API Key
&lt;/h2&gt;

&lt;p&gt;You'll need an API key for CO2 Signal's API. Get one &lt;a href="https://www.co2signal.com/"&gt;via email&lt;/a&gt;; enter your email in the box on this page and it will be sent to you. Also grab the code for your region corresponding to the &lt;a href="https://www.electricitymap.org/map"&gt;Electricity Map&lt;/a&gt;. In Boston, USA, for example, I use 'US-NEISO'.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#develop-your-extension-follow-the-forest-trail" class="anchor"&gt;
  &lt;/a&gt;
  Develop your Extension: Follow the Forest Trail
&lt;/h2&gt;

&lt;p&gt;I've added 🌱 little leaf emoji 🌱 in the areas where you need to complete the code following the steps below. It's a nice way to tweak an almost-finished codebase and learn about the process.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If anything is in localStorage, pick it up&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Add a check to the init() function to see if any API key or Region has been set in localStorage&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/index.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;storedApiKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;apiKey&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;storedRegion&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;regionName&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Manage local storage inputs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the setUpUser method, set the user-entered API key and Region&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/index.js&lt;/span&gt;

&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;apiKey&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;regionName&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;regionName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Make an initial call&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Once user inputs are set up in setUpUser, make an API call to get the region's carbon intensity&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/index.js&lt;/span&gt;

&lt;span class="nx"&gt;displayCarbonUsage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;regionName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Display usage and carbon source&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Make the API call to get your region's usage, and display it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/index.js&lt;/span&gt;

&lt;span class="nx"&gt;usage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
        &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;carbonIntensity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; grams (grams C02 emitted per kilowatt hour)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;fossilfuel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
            &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fossilFuelPercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;% (percentage of fossil fuels used to generate electricity)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Set icon to be a green color&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Set the icon to a default; it will change when the API is called. This function uses the chrome runtime's built-in management methods&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/index.js&lt;/span&gt;

&lt;span class="nx"&gt;chrome&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;runtime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendMessage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;updateIcon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Calculate icon color based on carbon intensity&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Calculate the appropriate color of the icon, which changes based on an active API call&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/index.js&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;CO2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;carbonIntensity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;calculateColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;CO2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Send message to update icon&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In calculateColor(), update the icon, again calling the chrome.runtime to invoke a background process&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/index.js&lt;/span&gt;

&lt;span class="nx"&gt;chrome&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;runtime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendMessage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;updateIcon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;closestColor&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Update icon itself&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Build your extension so that you refresh your &lt;code&gt;dist&lt;/code&gt; folder (&lt;code&gt;npm run build&lt;/code&gt;) in your app's root. In the listener for 'updateIcon', create a browser action to redraw the icon using the Canvas HTML API&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// dist/background.js&lt;/span&gt;

&lt;span class="nx"&gt;chrome&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;browserAction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setIcon&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;imageData&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;drawIcon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Do one more build, and you're ready to install!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-the-extension-in-your-browser" class="anchor"&gt;
  &lt;/a&gt;
  Install the Extension in your Browser
&lt;/h2&gt;

&lt;p&gt;Install the extension in your browser from the code built in the &lt;code&gt;dist&lt;/code&gt; folder. This extension has been tested on Edge, Firefox and Chrome. The installation is basically the same for all these browsers, but here's how you install a test extension on Edge:&lt;/p&gt;

&lt;p&gt;Use the 'three dot' menu on the top right corner of the browser to find the Extensions panel. From there, select 'Load Unpacked' to load a new extension. Open the 'dist' folder at the prompt and the extension will load. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kWLM-8WM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nff3yx4863hyu2dv0b0i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kWLM-8WM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nff3yx4863hyu2dv0b0i.png" alt="Install on Edge"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Input your API key and region in the form and check your region's carbon intensity. Congratulations, now you know whether to run an errand or run the dryer! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yt9mJ7Dy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ef3rpzpeflrhwcb6lr5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yt9mJ7Dy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ef3rpzpeflrhwcb6lr5.png" alt="final extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remember: the greenest web asset is the slimmest one, the one with the least overhead and the one that is only called ad hoc. You just built a slim, green extension!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;GitHub repo: &lt;a href="https://github.com/jlooper/carbon-trigger-extension"&gt;https://github.com/jlooper/carbon-trigger-extension&lt;/a&gt;&lt;br&gt;
Localized Slides and video: &lt;a href="https://github.com/microsoft/ignitelearnzone/blob/main/session-resources/green-tech.md"&gt;https://github.com/microsoft/ignitelearnzone/blob/main/session-resources/green-tech.md&lt;/a&gt; &lt;br&gt;
I gave a talk on this topic at &lt;a href="https://www.youtube.com/watch?v=D-spTjqAswA&amp;amp;ab_channel=MicrosoftDeveloper"&gt;the GreenConf&lt;/a&gt; starting at 2:25:27 (check out the other talks too!).&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>tutorial</category>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>browserextension</category>
    </item>
    <item>
      <title>Basic Understanding of Decimal Floating-Point Number</title>
      <author>Zhi Song</author>
      <pubDate>Wed, 07 Apr 2021 14:37:47 +0000</pubDate>
      <link>https://dev.to/hibriansun/basic-understanding-of-decimal-floating-point-number-18lb</link>
      <guid>https://dev.to/hibriansun/basic-understanding-of-decimal-floating-point-number-18lb</guid>
      <description>&lt;p&gt;Owing to time constraints, the English version of the article is writing now.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://translate.google.com/translate?sl=auto&amp;amp;tl=en&amp;amp;js=y&amp;amp;u=https%3a%2f%2fgithub.com%2fhibriansun%2fGSoCSwiftDraft%2fblob%2fmain%2fBasic%20Understanding%20of%20Decimal%20Floating-Point%20Number.md"&gt;Click here&lt;/a&gt; to translate the page into English version for the critical situation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p2pkFtbI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.loli.net/2021/03/30/AQ5petHZW9FUrC4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p2pkFtbI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.loli.net/2021/03/30/AQ5petHZW9FUrC4.png" alt="Basic Understanding of Decimal Floating-Point Number.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%E5%87%A0%E4%B8%AA%E5%B8%B8%E9%87%8F%E5%AE%9A%E4%B9%89" class="anchor"&gt;
  &lt;/a&gt;
  几个常量定义
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;b&lt;/code&gt;，基数[base]，为2或10&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;p&lt;/code&gt;，精度[precision]&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;emax&lt;/code&gt;，指数的最大可能值&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;emin&lt;/code&gt;，指数的最小可能值，对于所有类型，&lt;code&gt;emin = 1- emax&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#%E6%AF%8F%E7%A7%8D%E6%B5%AE%E7%82%B9%E6%95%B0%E5%80%BC%E8%A1%A8%E7%A4%BA%E6%A0%BC%E5%BC%8F" class="anchor"&gt;
  &lt;/a&gt;
  每种浮点数值表示格式
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;每一种浮点format都由&lt;strong&gt;基数，编码位数&lt;/strong&gt;(i.e binary*&lt;em&gt;64&lt;/em&gt;*)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于每一种浮点format，其数据域需要这样被表示&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;带符号的0和不带符号的0的floating number的形式为&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;$$&lt;br&gt;
  (−1)^s×b^e×m&lt;br&gt;
  $$&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;S: is 0 or 1

&lt;ol&gt;
&lt;li&gt;e: emin &amp;lt;= e &amp;lt;= emax&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;m is a number represented by a digit string of the form d0・d1 d2...dp-1 where di is an integer digit 0&amp;lt;= di &amp;lt;=b(therefor 0 &amp;lt;= m &amp;lt;=b) 

&lt;ol&gt;
&lt;li&gt;Two infinities, +∞ and −∞.&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;Two NaNs(两个非数字，Not a numbers), qNaN (quiet) and sNaN (signaling)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%B5%AE%E7%82%B9%E6%A0%BC%E5%BC%8F-binary-floating-number" class="anchor"&gt;
  &lt;/a&gt;
  二进制浮点格式 Binary Floating Number
&lt;/h3&gt;

&lt;p&gt;二进制浮点格式的小数是我们熟知的小数表示方式，也是IEEE754-1985中小数表示的标准。&lt;/p&gt;

&lt;p&gt;一个二进制浮点数将会被表示成这种形式：&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--38EWIZRF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.loli.net/2021/03/25/5OPgZ67IXvTDjrU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--38EWIZRF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.loli.net/2021/03/25/5OPgZ67IXvTDjrU.png" alt="Screen Shot 2021-03-25 at 20.17.30.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;S: 符号位   1-bit&lt;/li&gt;
&lt;li&gt;E: 指数位   w-bit      E = e + bias&lt;/li&gt;
&lt;li&gt;T: 尾数       t-bit        t = p - 1, T = d1d2⋯dp−1   [di: s2进制]&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;binary16&lt;/th&gt;
&lt;th&gt;binary32&lt;/th&gt;
&lt;th&gt;binary64&lt;/th&gt;
&lt;th&gt;binary128&lt;/th&gt;
&lt;th&gt;binary{k}&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;k&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;128&lt;/td&gt;
&lt;td&gt;k, 32\&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;p&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;53&lt;/td&gt;
&lt;td&gt;113&lt;/td&gt;
&lt;td&gt;k-round(4log2 k)+13&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;emax&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;127&lt;/td&gt;
&lt;td&gt;1023&lt;/td&gt;
&lt;td&gt;16383&lt;/td&gt;
&lt;td&gt;2^{k-p-1}-1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bias(辅助偏移值/置偏值)&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;127&lt;/td&gt;
&lt;td&gt;1023&lt;/td&gt;
&lt;td&gt;16383&lt;/td&gt;
&lt;td&gt;emax&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sign bit&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;round(4log2 k)−13&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;t&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;52&lt;/td&gt;
&lt;td&gt;112&lt;/td&gt;
&lt;td&gt;k-w-1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#1-%E8%A7%84%E6%A0%BC%E5%8C%96%E6%B5%AE%E7%82%B9%E6%95%B0-normalized-number" class="anchor"&gt;
  &lt;/a&gt;
  1). 规格化浮点数 (normalized number)
&lt;/h4&gt;

&lt;p&gt;E为8位的无符号整数，表示范围为0～255，E-bias表示范围为-127 ～ 128&lt;/p&gt;

&lt;p&gt;但格式化浮点数要求 E0 ~ Ew-1 &lt;strong&gt;不全为0&lt;/strong&gt;(E为0, E-bias为-127)或&lt;strong&gt;不全为1&lt;/strong&gt;(E为255, E-bias为128)的情况，此时浮点数公式为：(-1)&lt;sup&gt;S&lt;/sup&gt; × 2&lt;sup&gt;E-bias&lt;/sup&gt; × m。&lt;/p&gt;

&lt;p&gt;E-bias: (-127, 128)&lt;/p&gt;

&lt;p&gt;T要求表示为&lt;strong&gt;大于等于1小于等于2&lt;/strong&gt;的科学计数法表示的小数&lt;/p&gt;

&lt;p&gt;S, E, T在相应块表示成二进制数&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;m = 1 + 2&lt;sup&gt;-t&lt;/sup&gt; T = 1 + ∑(i: 1 ~ t) 2&lt;sup&gt;-i&lt;/sup&gt;di&lt;/strong&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Example:&lt;/p&gt;

&lt;p&gt;float(binary32): 9.0&lt;/p&gt;

&lt;p&gt;-&amp;gt; 转成二进制：1001.0&lt;/p&gt;

&lt;p&gt;-&amp;gt; 使用上述公式表示：-1&lt;sup&gt;0&lt;/sup&gt; * 2&lt;sup&gt;(3+127)&lt;/sup&gt; * 1.001  -&amp;gt;  -1&lt;sup&gt;0&lt;/sup&gt; * 2&lt;sup&gt;(130)&lt;/sup&gt; * 1.001 (bias: 127)&lt;/p&gt;

&lt;p&gt;-&amp;gt; 分区模型：&lt;/p&gt;

&lt;p&gt;S(+)      E(130)           T(1)&lt;/p&gt;

&lt;p&gt;0          10000010     00000000000000000000001&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Tip.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;为什么会有&lt;code&gt;bias&lt;/code&gt;(kind of offset)存在？(Why does bisa exist?)&lt;/p&gt;

&lt;p&gt;对于E（指数）E是一个无符号整数所以E的取值范围为（0~ 255），但是在计数中指数是可以为负的，且出于范围对称考量，所以规定在存入E时，在它原本的值上加上中间数（127），在使用时减去中间数（127），这样E的真正取值范围就成了（-127~128）。&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-%E9%9D%9E%E8%A7%84%E6%A0%BC%E5%8C%96%E6%B5%AE%E7%82%B9%E6%95%B0-subnormalized-number" class="anchor"&gt;
  &lt;/a&gt;
  2). &lt;a href="https://stackoverflow.com/questions/8341395/what-is-a-subnormal-floating-point-number"&gt;非规格化浮点数 (subnormalized number) &lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;E0 ~ Ew-1为0(E为0, E-bias的exponent规定为-126[不是-127，出于无法表示的异常])的情况，此时leading bit从1变为0。&lt;/p&gt;

&lt;p&gt;因为 0&amp;lt;= T&amp;lt; 2&lt;sup&gt;t&lt;/sup&gt;, 1&amp;lt;= m &amp;lt; 2，规格化浮点数无法表示 0 ，因此规定：当一个数字的绝对值小于 b&lt;sup&gt;emin&lt;/sup&gt;时转为非规格化表示，浮点数的值由公式：(−1)&lt;sup&gt;S&lt;/sup&gt;×2&lt;sup&gt;emin−t&lt;/sup&gt;T = (-1)&lt;sup&gt;S&lt;/sup&gt;2&lt;sup&gt;emin&lt;/sup&gt;∑(i=1 ~ t) 2&lt;sup&gt;-i&lt;/sup&gt;di&lt;/p&gt;

&lt;p&gt;得到，此时0的表示是除了符号位之外的其他位全为0.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-%E7%89%B9%E6%AE%8A%E5%80%BC-special-values" class="anchor"&gt;
  &lt;/a&gt;
  3.） 特殊值 (Special Values)
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;+∞&lt;/code&gt;：S -- 0   E -- Ei = 1  T = 0&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-∞&lt;/code&gt;:   S -- 1   E -- Ei = 1  T = 0&lt;/p&gt;

&lt;p&gt;NaN：E上每一位都为1，除去上面两个特殊值，都是NaN &lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/NaN#Quiet_NaN"&gt;quiet NaN 和 signaling NaN&lt;/a&gt;区别在于significand段的标记(flag)位&lt;/p&gt;

&lt;p&gt;quiet NaN不会引发任何额外的异常（ FPU 不会产生硬件异常），它们会在大多数操作中被使用。例外情况是，不能简单地将NaN原封不动地传递给输出，例如在格式转换或某些比较操作中。&lt;/p&gt;

&lt;p&gt;与此相反的则是signaling NaN&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%E5%8D%81%E8%BF%9B%E5%88%B6%E6%A0%BC%E5%BC%8F-decimal-floatingpoint-format-number" class="anchor"&gt;
  &lt;/a&gt;
  十进制格式 Decimal Floating-Point Format Number
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#take-a-brief-look" class="anchor"&gt;
  &lt;/a&gt;
  Take a brief look
&lt;/h4&gt;

&lt;p&gt;Decimal Floating-Point format number has two encoding method, one called DPD(Densely Packed Decimal), and the other called BIS(a.k.a BID Binary Integer Decimal).&lt;/p&gt;

&lt;p&gt;十进制浮点格式数有两种编码方法，一种称为DPD(密集打包十进制为基数的小数)，另一种称为BIS(又名 BID 二进制整数表示的十进制为基数的小数)。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zPvB-4a3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.loli.net/2021/03/29/21H4dNkZb9FqeV5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zPvB-4a3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.loli.net/2021/03/29/21H4dNkZb9FqeV5.png" alt="Screen Shot 2021-03-29 at 20.04.12.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#organization" class="anchor"&gt;
  &lt;/a&gt;
  Organization
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bjv-pe_o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.loli.net/2021/03/30/NpI4OVozBYEr6nP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bjv-pe_o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.loli.net/2021/03/30/NpI4OVozBYEr6nP.png" alt="Screen Shot 2021-03-30 at 16.23.14.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;S: 符号位   1-bit&lt;/li&gt;
&lt;li&gt;Comb: 组合部分&lt;/li&gt;
&lt;li&gt;E: 指数位   w-bit      E = e + bias&lt;/li&gt;
&lt;li&gt;T: 尾数       t-bit        t = p - 1, T = d1d2⋯dp−1   [di: 2进制]&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;decimal32&lt;/th&gt;
&lt;th&gt;decimal64&lt;/th&gt;
&lt;th&gt;decimal128&lt;/th&gt;
&lt;th&gt;decimal{k}&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;k&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;128&lt;/td&gt;
&lt;td&gt;k, 32\&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;p&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;9k/32-2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;emax&lt;/td&gt;
&lt;td&gt;96&lt;/td&gt;
&lt;td&gt;384&lt;/td&gt;
&lt;td&gt;6144&lt;/td&gt;
&lt;td&gt;3*2^(k/16+3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bias&lt;/td&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;td&gt;398&lt;/td&gt;
&lt;td&gt;6167&lt;/td&gt;
&lt;td&gt;&lt;a href="#%E6%8C%87%E6%95%B0%E9%83%A8%E5%88%86%E8%A7%A3%E6%9E%90"&gt;emax+p-2&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sign bit&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;k/16+4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;t&lt;/td&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;110&lt;/td&gt;
&lt;td&gt;15*k/16-10&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#difference-between-bid-amp-dpd" class="anchor"&gt;
  &lt;/a&gt;
  Difference between BID &amp;amp; DPD
&lt;/h4&gt;

&lt;p&gt;BID编码与另一种DPD编码每一个部分都是最终编码成二进制进行存储，区别是在significand这段，BID编码是直接取科学计数法的有效数字部分将其转化二进制进行存储，DPD编码使用一个映射表，每3位10进制数字对应10位2进制数字，进行存储。&lt;/p&gt;

&lt;p&gt;对于十进制编码的方式，某些硬件上直接支持十进制处理，例如&lt;a href="https://en.wikipedia.org/wiki/Decimal_floating_point#Implementations"&gt;IBM的POWER系列&lt;/a&gt;，这时直接使用该标准对数字进行存储计算等处理，否则需要使用DPD编码转化二进制进行存储。&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#comb%E9%83%A8%E5%88%86%E8%A7%A3%E6%9E%90" class="anchor"&gt;
  &lt;/a&gt;
  Comb部分解析
&lt;/h4&gt;

&lt;p&gt;针对两种情况：In both cases, the most significant 4 bits of the significand (which actually only have 10 possible values[0~9十个数字]) are combined with the most significant 2 bits of the exponent (3 possible values) to use 30 of the 32 possible values of a 5-bit field. The remaining combinations encode infinities and NaNs.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Combination field&lt;/th&gt;
&lt;th&gt;Exponent Msbits&lt;/th&gt;
&lt;th&gt;Significand Msbits&lt;/th&gt;
&lt;th&gt;Other&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;00mmm&lt;/td&gt;
&lt;td&gt;00&lt;/td&gt;
&lt;td&gt;0mmm&lt;/td&gt;
&lt;td&gt;—&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;01mmm&lt;/td&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;0mmm&lt;/td&gt;
&lt;td&gt;—&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10mmm&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;0mmm&lt;/td&gt;
&lt;td&gt;—&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1100m&lt;/td&gt;
&lt;td&gt;00&lt;/td&gt;
&lt;td&gt;100m&lt;/td&gt;
&lt;td&gt;—&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1101m&lt;/td&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;100m&lt;/td&gt;
&lt;td&gt;—&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1110m&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;100m&lt;/td&gt;
&lt;td&gt;—&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11110&lt;/td&gt;
&lt;td&gt;—&lt;/td&gt;
&lt;td&gt;—&lt;/td&gt;
&lt;td&gt;±Infinity&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11111&lt;/td&gt;
&lt;td&gt;—&lt;/td&gt;
&lt;td&gt;—&lt;/td&gt;
&lt;td&gt;NaN. Sign bit ignored. First bit of exponent continuation field determines if NaN is signaling.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;对于Significand Msbits 的 0 100在实际的significand表示中是不被表示的，这部分在结合部分(Comb)可以得出&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#dpd%E5%8D%81%E8%BF%9B%E5%88%B6%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F" class="anchor"&gt;
  &lt;/a&gt;
  DPD(十进制编码格式)
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fqKLZebx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.loli.net/2021/03/29/zlY3NkcSWo5yjas.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fqKLZebx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.loli.net/2021/03/29/zlY3NkcSWo5yjas.png" alt="Screen Shot 2021-03-29 at 20.40.26.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;对于Decimal64，Comb部分由5位构成，&lt;strong&gt;这五位分别来自于指数(E)和尾数(T)部分&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;G0G1 G2G3G4
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;G0G1是指数部分的最高两位&lt;/p&gt;

&lt;p&gt;G2G3G4是尾数的最高有效位&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;11 G2G3 G4
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;G2G3 : 指数部分最高两位&lt;/p&gt;

&lt;p&gt;G4: 8(10) + G4 (2)组成位数的最高有效数字&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1111 G4
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;表示特殊值，无穷大或NaN&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#bisaka-bid-binary-integer-decimal-%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F" class="anchor"&gt;
  &lt;/a&gt;
  BIS(a.k.a. BID: Binary Integer Decimal 二进制编码格式)
&lt;/h5&gt;

&lt;p&gt;在二进制编码方案中，上图的comb和exponent部分才是真正的组合部分(RComb)，exponent 的具体位置由组合部分的前两个字节决定。&lt;/p&gt;

&lt;p&gt;对这种数字内存模型每个位编号，b0 b1...bk-1&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9tf_NBis--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.loli.net/2021/03/30/79ESOq5KtYdkuwL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9tf_NBis--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.loli.net/2021/03/30/79ESOq5KtYdkuwL.png" alt="Screen Shot 2021-03-30 at 09.23.18.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;当b1b2 (2)   !=   11(2)，b1b2和其后的 w 位组成指数部分，剩下为尾数部分。&lt;/li&gt;
&lt;li&gt;当b1b2 (2)   ==   11(2)，b3b4 (2)   !=   11(2)，b3b4 和其后的 w 位组成指数部分，剩下为尾数部分。&lt;/li&gt;
&lt;li&gt;∞，NaN与十进制编码一致&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#%E6%8C%87%E6%95%B0%E9%83%A8%E5%88%86%E8%A7%A3%E6%9E%90" class="anchor"&gt;
  &lt;/a&gt;
  指数部分解析
&lt;/h4&gt;

&lt;p&gt;指数部分由组合部分的两个比特和剩余的 w 个比特组成，由于组合部分的两个比特不可能为 11 ，组合部分中的指数部分共 3 种取值(00, 01, 10)。因此指数的所有可能取值总计有 3 * 2&lt;sup&gt;w&lt;/sup&gt; 种。&lt;/p&gt;

&lt;p&gt;十进浮点数的指数部分也和二进浮点数的指数部分一样，是由二进制表示的 E 减去一个置偏值 bias 。为什么置偏值不是恰好是 3 * 2&lt;sup&gt;w-1&lt;/sup&gt; ，这是因为此处的指数直接和 T 相乘，和二进浮点数乘以规格化(Normalizated)的 T 不同，这里没有规格化浮点数，因此置偏值比 3 * 2&lt;sup&gt;w-1&lt;/sup&gt; 多出来的部分就相当于规格化后多乘的值，这也是那个 bias = emax+p-2 中 p-2 的由来。&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#%E5%B0%BE%E6%95%B0%E9%83%A8%E5%88%86%E8%A7%A3%E6%9E%90" class="anchor"&gt;
  &lt;/a&gt;
  尾数部分解析
&lt;/h4&gt;

&lt;p&gt;尾数部分的最高位在组合部分中，剩余部分在最后的 t (Decimal64就是50) 个比特中。&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#bid%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F" class="anchor"&gt;
  &lt;/a&gt;
  BID(二进制编码格式)
&lt;/h5&gt;

&lt;p&gt;如果采用二进制编码方式， t直接按照二进制解析存入。&lt;/p&gt;

&lt;p&gt;拿Decimal64举例子，significand区域有50二进制位的存储空间，数字有10(significand中最高位0～9) * 2&lt;sup&gt;50&lt;/sup&gt; - 1种可能，但是数据大于10&lt;sup&gt;16&lt;/sup&gt;-1是非法的，标准将其当作是0&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#dpd" class="anchor"&gt;
  &lt;/a&gt;
  DPD
&lt;/h5&gt;

&lt;p&gt;使用此表表示数更能节省存储空间&lt;/p&gt;

&lt;p&gt;如果采用十进制编码方式，将 t 拆成十个十个一组，每组解码出 3 个十进制整数，和组合部分的一个数字拼接成一个十进制的数字，因此十进制编码方式的最大值为 (10&lt;sup&gt;3t/10+1&lt;/sup&gt;-1) * 10&lt;sup&gt;emax-p+1&lt;/sup&gt; 。&lt;/p&gt;

&lt;p&gt;具体如何将一组三个十进制数字(0~999)对应成一组10个二进制数字需要通过查询下表得知。&lt;/p&gt;

&lt;p&gt;&lt;u&gt;CHART FROM WIKIPEDIA&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VIi-bUef--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.loli.net/2021/03/30/K5uHE6tcX7eqrmz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VIi-bUef--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.loli.net/2021/03/30/K5uHE6tcX7eqrmz.png" alt="Screen Shot 2021-03-30 at 16.35.54.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;左侧是经过DPD编码过的值，右侧是初始的三位十进制数字&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I.E. 我们来解释一下第三行&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;两侧绿色的abc，紫色的ghi，蓝色的f是同样的二进制数字，不过相对位置可能不同而已。&lt;/p&gt;

&lt;p&gt;左侧的DPD编码后的二进制数字序列&lt;code&gt;abcghf 1 0 1 i&lt;/code&gt;对应编码三位前十进制数，这三位十进制数表示成二进制分别为&lt;code&gt;0abc&lt;/code&gt; &lt;code&gt;100f&lt;/code&gt; &lt;code&gt;0ghi&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;如何使用公式来表达？&lt;/p&gt;

&lt;p&gt;&lt;code&gt;0abc&lt;/code&gt;(2) * &lt;strong&gt;100&lt;/strong&gt;(10) + &lt;code&gt;100f&lt;/code&gt;(2) * &lt;strong&gt;10&lt;/strong&gt;(10) + &lt;code&gt;0ghi&lt;/code&gt;(2) * &lt;strong&gt;1&lt;/strong&gt;(10)&lt;/p&gt;

&lt;p&gt;即&lt;/p&gt;

&lt;p&gt;[0b9b8b7](2) * &lt;strong&gt;100&lt;/strong&gt;(10) + [100b4](2) * &lt;strong&gt;10&lt;/strong&gt;(10) + [0b6b5b0](2) * &lt;strong&gt;1&lt;/strong&gt;(10)&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#%E7%89%B9%E6%AE%8A%E5%80%BC-special-value" class="anchor"&gt;
  &lt;/a&gt;
  特殊值 (Special Value)
&lt;/h4&gt;

&lt;p&gt;和二进浮点数类似，当组合部分前 4 个比特均为 1 的时候该浮点数表示一个特殊值。其中，第 5 个比特为 0 则表示为无穷大，第 5 个比特为 1 则表示 NaN 。和二进浮点数类似的，第 5 个比特之后的一个比特如果为 0 则为 quiet NaN ，否则为 signaling NaN 。&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#%E5%8D%81%E8%BF%9B%E6%B5%AE%E7%82%B9%E6%95%B0%E7%9A%84%E5%80%BCvalue-of-decimal-floatingpoint-number" class="anchor"&gt;
  &lt;/a&gt;
  十进浮点数的值(Value of Decimal Floating-Point Number)
&lt;/h4&gt;

&lt;p&gt;(-1)&lt;sup&gt;S&lt;/sup&gt; * T * 10&lt;sup&gt;E - bias&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;其中的T和E的值都是由组合部分和各自延续部分(尾数)共同计算得出来的。&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#reference" class="anchor"&gt;
  &lt;/a&gt;
  Reference
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Decimal64_floating-point_format"&gt;decimal64 floating-point format - Wikipedia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Decimal_floating_point#Implementations"&gt;Decimal floating point - Wikipedia&lt;/a&gt;&lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>swift</category>
      <category>cpp</category>
    </item>
    <item>
      <title>Your manager can’t read your mind.</title>
      <author>Romina Suarez</author>
      <pubDate>Wed, 07 Apr 2021 14:18:06 +0000</pubDate>
      <link>https://dev.to/rowasc/your-manager-can-t-read-your-mind-1h6b</link>
      <guid>https://dev.to/rowasc/your-manager-can-t-read-your-mind-1h6b</guid>
      <description>&lt;p&gt;As a developer, something that always frustrated me was the fact that my managers didn’t seem to realize the disruption they caused. I would be working on a ticket, and someone would switch me to something else on short notice.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Here we go again. Stash my work. Create new branch. Understand what has to be done. Do it all over again once this one is done. Get asked why the ticket I had to drop isn’t finished yet. Well, because you gave me a different task, that’s why!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So when I started managing people, I’d tell them to let me know if there was any problem, and to raise their concerns early if something wasn’t going to be finished on time.&lt;/p&gt;

&lt;p&gt;Time after time, I would be disappointed to hear that someone was delayed on a critical task because they were assigned a second task and dropped the first one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why didn’t you tell me?&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Oh, I thought you knew!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ah. The mythical mind reading manager. If you never lead a team, you probably assume information always gets to your manager first, including information about how you will proceed if given an ambiguous instruction like “hey, please fix this ticket” without any other specifications on when it is due, what the priority is, and if you should drop your tasks or not to attend to it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You may think they know that when they tell you that, you will drop everything and do it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately, very often, they don’t. This is especially true of newbie managers. Maybe because they assume there is enough trust that you would simply push back if you had a problem. Maybe because a PM or other member of the team sent you a ticket and told you to work on it without your manager being made aware. Maybe because they think you will work on it as soon as possible and nothing bad will happen.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;They should know better. We should know better. But sometimes, we don’t.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I could write a blog for managers (and I might) about being specific when it comes to assigning work and what our expectations are… but I decided to write it for engineers because nobody ever tells us what we can do to make up for mistakes our managers make, or how to push them to improve, or even how we as developers can be better at asking the right questions to help us be more productive and less overwhelmed all the time.&lt;/p&gt;

&lt;p&gt;So. &lt;strong&gt;The next time you get a ticket assigned that would interfere with your work in progress, go ahead and ask&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“Should I stop working on #this and get started on #newThing right away, or should I finish #this first?”&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;“If I drop #this, we may not make it to #that deadline, since I have to context switch 3x to work on #newThing and it takes some effort, is that okay with you?” …&lt;/p&gt;

&lt;p&gt;…or any other question that helps you figure out the best path forward.&lt;/p&gt;

&lt;p&gt;It may feel weird, but communicating your constraints is a good thing. Your manager may not have realized the problem that a new task would cause. Thanks to you, they may find a problem they had missed before around workflows, or they will learn how to plan better.&lt;/p&gt;

&lt;p&gt;They may tell you that YES, you need to drop your task. Or they may reconsider and reprioritize. But at least you will know, and they wont be able to ask you “why isn’t this other task done” 1 hour after they told you to context switch 😉&lt;/p&gt;

&lt;p&gt;They may even learn a thing or two about remote communications. As you do this, you may want to bring it up on a 1:1, and explain how you managed to stop context switching, or why context switching is problematic if it happens too often. I would expect any engineering manager to know this, but if they have forgotten how bad it can get… at least this will remind them to be careful when they assign work.&lt;/p&gt;

&lt;p&gt;On your end, by asking this questions you will know for sure when your task is urgent enough to drop everything and when it is only urgent because someone higher up the chain wants it ASAP. This is important, because it lets you make better decisions, too.&lt;/p&gt;

&lt;p&gt;Being the person who knows how to dig up important signal even in casual communications is a skill that will be incredibly useful as you progress in your career. You will understand how work flows from X to Y a lot better, and you will learn how to ask better, more insightful questions that help your team make better choices and be more productive.&lt;/p&gt;

&lt;p&gt;Let me know if you have had this problem, and how you approached it. I’d love to hear from you.&lt;/p&gt;




&lt;p&gt;This post is part of my series for remote software developers. You can check it out and subscribe here &lt;a href="https://rowasc.com/engineers-working-remotely/"&gt;https://rowasc.com/engineers-working-remotely/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>engineering</category>
      <category>remote</category>
      <category>communication</category>
    </item>
  </channel>
</rss>
