<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Understanding `this` in JavaScript</title>
      <author>Karson Kalt</author>
      <pubDate>Fri, 29 Oct 2021 22:01:49 +0000</pubDate>
      <link>https://dev.to/karsonkalt/understanding-this-in-javascript-oe2</link>
      <guid>https://dev.to/karsonkalt/understanding-this-in-javascript-oe2</guid>
      <description>&lt;p&gt;If you're coming to JavaScript from an Object-Oriented language like Ruby or Python, the concept of &lt;code&gt;this&lt;/code&gt; in JavaScript might give you a little bit of trouble. It turns out, &lt;code&gt;this&lt;/code&gt; in JavaScript is a little more complex than we might think assuming it to work similar to &lt;code&gt;self&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let's take a step back and think about &lt;code&gt;self&lt;/code&gt; in an OO language. We know &lt;code&gt;self&lt;/code&gt; will always to the current instance of a class, and that when defining a class method, &lt;code&gt;this&lt;/code&gt; refers to the class itself.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-different-in-javascript"&gt;
  &lt;/a&gt;
  What's different in JavaScript?
&lt;/h2&gt;

&lt;p&gt;Let's first back up and define what type of language JavaScript is. Yes, we can create "objects" in JavaScript, but it is only through &lt;a href="https://www.educative.io/blog/understanding-and-using-prototypal-inheritance-in-javascript#:~:text=Simply%20put%2C%20prototypical%20inheritance%20refers,inherit%20properties%20from%20a%20prototype"&gt;prototypal inheritance&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In an &lt;strong&gt;object method&lt;/strong&gt; in JavaScript, &lt;code&gt;this&lt;/code&gt; refers to the object invoking the function, not the instance of an object.&lt;/p&gt;

&lt;p&gt;Let's try the following code in the console:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;whatIsThis&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;whatIsThis&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;// =&amp;gt; Window {window: Window, self: Window, document: document, name: '0.980485403589378', location: Location, …}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The return value is the global object, in the console, this is the &lt;code&gt;Window&lt;/code&gt; object. Simply put, what object is invoking our function &lt;code&gt;whatIsThis&lt;/code&gt;, it is the global object, where all of our other code lives.&lt;/p&gt;

&lt;p&gt;Let's try dig a little deeper and start building an object with some functionality. Here, we create a &lt;code&gt;person&lt;/code&gt; object and give it a function to return the full name.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Karson&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kalt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2948&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;fullName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fullName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;// =&amp;gt; 'Karson Kalt'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The method &lt;code&gt;.fullName()&lt;/code&gt;, is called by the &lt;code&gt;person&lt;/code&gt; object, so in this case, &lt;code&gt;this&lt;/code&gt; refers to the object &lt;code&gt;person&lt;/code&gt;. So far so good right? Well, let's keep exploring, this time invoking a callback function.&lt;/p&gt;

&lt;p&gt;In the following example, we have a &lt;code&gt;person&lt;/code&gt; object who has an attribute of &lt;code&gt;pets&lt;/code&gt;. What if we want to create a method that prints to the console the name of the person and the name of the pet?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Karson&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kalt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jazz the Dog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Maniac the Cat&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Seymour the Turtle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2948&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;allPets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; has a pet named &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;pet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;allPets&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;// The console prints the following:&lt;/span&gt;
&lt;span class="c1"&gt;// undefined has a pet named Jazz the Dog&lt;/span&gt;
&lt;span class="c1"&gt;// undefined has a pet named Maniac the Cat&lt;/span&gt;
&lt;span class="c1"&gt;// undefined has a pet named Seymour the Turtle&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So why are we able to iterate through each &lt;code&gt;pet&lt;/code&gt;, but the &lt;code&gt;firstName&lt;/code&gt; attribute becomes undefined. Let's think about a core principle of JavaScript -- hoisting. This is a core part of JavaScript, any of our function declarations are first stored in memory before any code is run. This allows us to use a function before the actual line it appears on, but the function now lives globally. Therefore, the global object is the one executing &lt;code&gt;function(pet)&lt;/code&gt;, and does not have an attribute defined for &lt;code&gt;firstName&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So, in reality &lt;code&gt;function(pet)&lt;/code&gt; is not a method of our &lt;code&gt;person&lt;/code&gt; object, the only method assigned to &lt;code&gt;person&lt;/code&gt; is &lt;code&gt;allPets&lt;/code&gt;.\&lt;/p&gt;

&lt;p&gt;A quick and easy way to fix this issue, is to tell the &lt;code&gt;.forEach&lt;/code&gt; method what &lt;code&gt;this&lt;/code&gt; is referring to, by passing it an optional second argument that defines what &lt;code&gt;this&lt;/code&gt; is inside the iterator. Within the scope of &lt;code&gt;this.pets&lt;/code&gt;, &lt;code&gt;this&lt;/code&gt; refers to the object itself, so we can pass &lt;code&gt;.forEach&lt;/code&gt; an argument of &lt;code&gt;this&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Karson&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kalt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jazz the Dog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Maniac the Cat&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Seymour the Turtle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2948&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;allPets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; has a pet named &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;pet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;allPets&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;// The console prints the following:&lt;/span&gt;
&lt;span class="c1"&gt;// Karson has a pet named Jazz the Dog&lt;/span&gt;
&lt;span class="c1"&gt;// Karson has a pet named Maniac the Cat&lt;/span&gt;
&lt;span class="c1"&gt;// Karson has a pet named Seymour the Turtle&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since ES6, we quickly create functions that bind &lt;code&gt;this&lt;/code&gt; where they are declared, by using an arrow function instead:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Karson&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kalt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jazz the Dog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Maniac the Cat&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Seymour the Turtle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2948&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;allPets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pet&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; has a pet named &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;pet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;allPets&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;// The console prints the following:&lt;/span&gt;
&lt;span class="c1"&gt;// Karson has a pet named Jazz the Dog&lt;/span&gt;
&lt;span class="c1"&gt;// Karson has a pet named Maniac the Cat&lt;/span&gt;
&lt;span class="c1"&gt;// Karson has a pet named Seymour the Turtle&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>firstyearincode</category>
    </item>
    <item>
      <title>🚂 Model Railroad Scale Calculator Function 🚇</title>
      <author>Adam Crockett</author>
      <pubDate>Fri, 29 Oct 2021 21:57:03 +0000</pubDate>
      <link>https://dev.to/adam_cyclones/model-railroad-scale-calculator-function-33e2</link>
      <guid>https://dev.to/adam_cyclones/model-railroad-scale-calculator-function-33e2</guid>
      <description>&lt;p&gt;As I am at home a lot, Just for fun, I am starting to look at modelling a railroad / railway, cool but I don't do very often maths, so I used some code to write a function to help me out.&lt;/p&gt;

&lt;p&gt;I have been wracking my brain about a function helps me translate real world measurements into a Guage such as &lt;em&gt;HO&lt;/em&gt; or &lt;em&gt;OO&lt;/em&gt; - this gauge correlates with a scale for example &lt;em&gt;OO&lt;/em&gt; 1:76&lt;/p&gt;

&lt;p&gt;You might find it useful 🤷‍♂️&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/mode-railway-railroad-gauge-calculator-function-k8is5"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Code your own vue: methods and events</title>
      <author>Gil Rudolf Härdi</author>
      <pubDate>Fri, 29 Oct 2021 21:11:29 +0000</pubDate>
      <link>https://dev.to/ghaerdi/code-your-own-vue-methods-and-events-1dn9</link>
      <guid>https://dev.to/ghaerdi/code-your-own-vue-methods-and-events-1dn9</guid>
      <description>&lt;p&gt;Hi everyone, It's been a while since the last chapter of 'Code your own vue', in the last post we saw how to do our own lifecycle hooks, today we going to see how to code methods and events.&lt;br&gt;
If you followed atleast the first chapter you can use methods and events in this way&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;{{ msg }}&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;"hi()"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Click me&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;vm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;el&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// toggle vm.msg between 'Hello' and "World"&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;vm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;vm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;World&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But today we going to programm this in the vue way:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;{{ msg }}&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;v-on:click=&lt;/span&gt;&lt;span class="s"&gt;"hi"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Click me&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;vm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;el&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;hi&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;World&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#implementing-methods"&gt;
  &lt;/a&gt;
  Implementing methods
&lt;/h3&gt;

&lt;p&gt;First we can define a function that will read the methods and mix all those methods with our vue instance. Like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;walkMethods&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;vue&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then call the function in the constructor before the created lifecycle hook.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;methods&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Before Create&lt;/span&gt;
    &lt;span class="nx"&gt;walkMethods&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// Create&lt;/span&gt;

    &lt;span class="c1"&gt;// Mount&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now you should be able to call &lt;code&gt;this.[method]&lt;/code&gt; in the &lt;code&gt;vm&lt;/code&gt; or &lt;code&gt;vm.[method]&lt;/code&gt; outside of vue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implementing-events"&gt;
  &lt;/a&gt;
  Implementing events
&lt;/h3&gt;

&lt;p&gt;Implementing events is more dificult. Javascript Dom cannot get attributes with specials characters like &lt;code&gt;@click&lt;/code&gt; or &lt;code&gt;v-on:click&lt;/code&gt;. So we need to handle that, for that I decided read the &lt;code&gt;innerHTML&lt;/code&gt; and add &lt;code&gt;vue-event&lt;/code&gt; as attribute when a &lt;code&gt;@[event]&lt;/code&gt; or &lt;code&gt;v-on:[event]&lt;/code&gt; is found in a element. Other thing to consider is editing the &lt;code&gt;innerHTML&lt;/code&gt;, if we add a event and edit the &lt;code&gt;innerHTML&lt;/code&gt; the element will lose all events, for this reason we need to edit the &lt;code&gt;innerHTML&lt;/code&gt; before adding any event.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// regex to get v-on:[event]="[method]" and @[event]="[method]"&lt;/span&gt;
  &lt;span class="na"&gt;vueOn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;@|v-on:&lt;/span&gt;&lt;span class="se"&gt;)\w&lt;/span&gt;&lt;span class="sr"&gt;+="&lt;/span&gt;&lt;span class="se"&gt;([&lt;/span&gt;&lt;span class="sr"&gt;0-z.?&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;)\(?\)?&lt;/span&gt;&lt;span class="sr"&gt;"/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// add "vue-event" as attribute next to the maching regex.vueOn.&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addAttributes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;RegExp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vueOn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;g&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`vue-event &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that we need a function that read all element with the &lt;code&gt;vue-event&lt;/code&gt; attribute, add the event listener and remove all those attributes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addEvents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;[vue-event]&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// extract name attr and method of v-on:[event]=[method]&lt;/span&gt;
    &lt;span class="c1"&gt;// or @[event]=[method]&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;method&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="c1"&gt;// get event from v-on:[event] or @[event]&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/@/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;vue&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

    &lt;span class="nx"&gt;clearElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue-event&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;`v-on:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`@&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;clearElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And finally, we need to use those functions on our render function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;mostach&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\{\{((?:&lt;/span&gt;&lt;span class="sr"&gt;.|&lt;/span&gt;&lt;span class="se"&gt;\r?\n)&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;?)\}\}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;renderVue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;originalTemplate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;addAttributes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cloneNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;vue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nx"&gt;vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;originalTemplate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;RegExp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mostach&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;g&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;addEvents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Example of the rendering:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- Original --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;v-on:click=&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;I'm a button&lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- After addAttributes --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;v-on:click=&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt; &lt;span class="na"&gt;vue-event&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;I'm a button&lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- After rendering --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;I'm a button&lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;And we are finally done, adding methods to vue is really easy but code the vue events can be a headache.&lt;/p&gt;

&lt;p&gt;You can see more about code your own vue &lt;a href="https://dev.to/ghaerdi/code-your-own-vue-50mg"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>vue</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to get a user’s LinkedIn account, Twitter username, and more from a single line of code</title>
      <author>Abel Lifaefi Mbula</author>
      <pubDate>Fri, 29 Oct 2021 20:35:32 +0000</pubDate>
      <link>https://dev.to/bam92/how-to-get-a-users-linkedin-account-twitter-username-and-more-from-a-single-line-of-code-5bgl</link>
      <guid>https://dev.to/bam92/how-to-get-a-users-linkedin-account-twitter-username-and-more-from-a-single-line-of-code-5bgl</guid>
      <description>&lt;p&gt;Users' data is the gold for your business. But, how do you know more about your users when you only have or collect a piece of information like phone numbers or emails?&lt;/p&gt;

&lt;p&gt;We are living in a digital age where people are more connected than ever before and almost everyone is on social media like Twitter or LinkedIn. One way to know more about your users is to go on the social media they are. But, this will only help if you have a tiny number of users because you have to &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Try whether they are on Twitter or LinkedIn or another social media&lt;/li&gt;
&lt;li&gt;Manually go on the user social media account to have information&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is not productive for your business, and you shouldn’t even try it. There need to be something better to help you. Like gold, the quality of data is also important. &lt;/p&gt;

&lt;p&gt;Looking around, we could not find a suitable solution that could help us enough, just like you. So, we developed one, and we call it Kelvin Data. Kelvin Data can be used by developers through an API (GraphQL or RESTful) or by anyone through a web portal. &lt;/p&gt;

&lt;p&gt;Your business is so important to us, so we have designed Kelvin Data with that in mind. We focus on structuring and organizing data from around the web to make it accessible and easy-to-use so that you have a ready to use data set while still continuing running your business.&lt;/p&gt;

&lt;p&gt;Let’s take a deep dive here to see how to use Kelvin Data to better know your users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#kelvin-data-101"&gt;
  &lt;/a&gt;
  Kelvin Data 101
&lt;/h2&gt;

&lt;p&gt;No matter what your site or app does, knowing more about your users gives you more opportunities. Let’s see some of them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can easily fight fraud&lt;/li&gt;
&lt;li&gt;Send email based on their location&lt;/li&gt;
&lt;li&gt;Increase your sale power&lt;/li&gt;
&lt;li&gt;And more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks to Kelvin Data, you can achieve your goal with easy, no matter what it is. Here is how it works.&lt;/p&gt;

&lt;p&gt;First, you need an API key for authentication with us. You can find one here. Now that you have a valid key, you can make a call to our API by providing us with at least one piece of information you have for your user, like email or phone number.&lt;/p&gt;

&lt;p&gt;Let’s consider an example. Your user email is &lt;a href="mailto:jared@ycombinator.com"&gt;jared@ycombinator.com&lt;/a&gt;. The API endpoint you’ll call looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://api.kelvindata.com/rest/v1/search-v2?email=jared@ycombinator.com&amp;amp;apiKey=your-apikey-here"&gt;https://api.kelvindata.com/rest/v1/search-v2?email=jared@ycombinator.com&amp;amp;apiKey=your-apikey-here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And this is the result you’ll have (I’m using the web portal &lt;a href="https://www.kelvindata.com/search"&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9-Jjc-cJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qt93xdispro88chuhhql.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9-Jjc-cJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qt93xdispro88chuhhql.PNG" alt="Kelvin search" width="880" height="626"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Kelvin Data is a powerful and simple platform whose mission is to structure and organize data from around the web to make it accessible and easy-to-use. We offer flexible &lt;a href="https://www.kelvindata.com/pricing"&gt;pricing plans&lt;/a&gt; to meet your business needs. &lt;a href="https://www.kelvindata.com/sign-in"&gt;Sign up&lt;/a&gt; to get started, or &lt;a href="//mailto:Hello@KelvinData.com"&gt;contact us&lt;/a&gt; to learn more.&lt;/p&gt;

</description>
      <category>api</category>
    </item>
    <item>
      <title>Git push pitfalls to watch out for</title>
      <author>Jethro Larson</author>
      <pubDate>Fri, 29 Oct 2021 20:18:13 +0000</pubDate>
      <link>https://dev.to/jethrolarson/git-push-pitfalls-to-watch-out-for-1im4</link>
      <guid>https://dev.to/jethrolarson/git-push-pitfalls-to-watch-out-for-1im4</guid>
      <description>&lt;p&gt;Git is powerful but its relatively terse and obtuse api can make it hard to be sure what commands are really doing. Here are a couple pitfalls I've found over the years with &lt;code&gt;git push&lt;/code&gt; that it's good to be aware of.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pushing-the-wrong-thing"&gt;
  &lt;/a&gt;
  Pushing the wrong thing
&lt;/h1&gt;

&lt;p&gt;You're probably familiar with &lt;code&gt;git push&lt;/code&gt; but do you know all the assumptions that calling it without arguments is making?&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git push&lt;/code&gt; is sugar for &lt;code&gt;git push [default remote] HEAD:[HEAD's upstream branch]&lt;/code&gt;. So if your local branch's upstream is set to say 'master' you could accidentally overwrite master.&lt;/p&gt;

&lt;p&gt;You can adjust the default behavior for &lt;code&gt;git push&lt;/code&gt; by setting the &lt;a href="https://git-scm.com/docs/git-config#Documentation/git-config.txt-pushdefault"&gt;&lt;code&gt;push.default&lt;/code&gt;&lt;/a&gt; git config&lt;/p&gt;

&lt;p&gt;Another trap is &lt;code&gt;git push origin branch_name&lt;/code&gt;. It expands to &lt;code&gt;git push origin branch_name:branch_name&lt;/code&gt; so if you're not on branch_name and you expect to push your current branch to remote branch_name you may be surprised (ask me how I know!). &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#deleting-a-remote-branch-on-accident"&gt;
  &lt;/a&gt;
  Deleting a remote branch on accident
&lt;/h1&gt;

&lt;p&gt;Here's a typo that can burn you hard&lt;/p&gt;

&lt;p&gt;DON'T RUN THIS: `git push origin :branch_name'&lt;/p&gt;

&lt;p&gt;You may assume that this means push your current branch up as "branch_name" but noooo, it actually will replace the remote branch with nothing, deleting the branch.&lt;/p&gt;

</description>
      <category>git</category>
      <category>programming</category>
    </item>
    <item>
      <title>Type | Treat 2021 - Day 5</title>
      <author>Orta</author>
      <pubDate>Fri, 29 Oct 2021 19:59:59 +0000</pubDate>
      <link>https://dev.to/typescript/type-treat-2021-day-5-1mlo</link>
      <guid>https://dev.to/typescript/type-treat-2021-day-5-1mlo</guid>
      <description>&lt;h2&gt;
  &lt;a href="#type-treat-challenge-5"&gt;
  &lt;/a&gt;
  Type | Treat Challenge 5
&lt;/h2&gt;

&lt;p&gt;Welcome to the fifth, and last, &lt;code&gt;Type | Treat&lt;/code&gt; challenge! These challenges are a series of blog posts which have 2 code challenges in, one for beginners and one for intermediate TypeScript programmers. We're on day five, which means going over the answers from &lt;a href="https://devblogs.microsoft.com/typescript/type-treat-2021-day-4/"&gt;yesterday&lt;/a&gt; and have 2 new challenges.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterdays-solution"&gt;
  &lt;/a&gt;
  Yesterday's Solution
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#beginnerlearner-challenge"&gt;
  &lt;/a&gt;
  Beginner/Learner Challenge
&lt;/h3&gt;

&lt;p&gt;This challenge aimed to be generics 101, first introducing the concept of making your function pass a type from the function to the argument:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="gd"&gt;-  function getBowl(items: any) {
&lt;/span&gt;&lt;span class="gi"&gt;+  function getBowl&amp;lt;T&amp;gt;(items: T) {
&lt;/span&gt;      return { items }
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;any&lt;/code&gt; acted as hint clue about where to look, and this example is almost the first code sample on the &lt;a href="https://www.typescriptlang.org/docs/handbook/2/generics.html"&gt;Generics chapter&lt;/a&gt; in the Handbook, so it felt like a good intro.&lt;/p&gt;

&lt;p&gt;The second part involved understanding &lt;a href="https://www.typescriptlang.org/docs/handbook/2/generics.html#generic-constraints"&gt;generic constraints&lt;/a&gt;, these are essential tools in helping you define the baselines for types which can be used in your function. In this case we didn't provide the word "constraints" but opted for a more cryptic clue by setting up the function most of the way, then saying you only needed two words:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="gd"&gt;-  function fillBowl&amp;lt;T&amp;gt;(candy: T) {
&lt;/span&gt;&lt;span class="gi"&gt;+  function fillBowl&amp;lt;T extends string&amp;gt;(candy: T) {
&lt;/span&gt;      return { candy }
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By saying that &lt;code&gt;T&lt;/code&gt; extended &lt;code&gt;string&lt;/code&gt; then the string literals are correctly passed through the function - which removes all the compiler errors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.typescriptlang.org/play?#code/PTAEE0HsFcHIDcCmoDmkAuoCeMBOBnRAGwDNQAjaAOwGMALUSM8yAdyP0bJoEMqATLABoK0TOjrIW7Tj1zIAUCFAAraPkwAiFIiqJcASxqaKbDgDoIMULyqgADmNB8sEg1RSh3oCYgC2Inz8qIiYLm4eSmDkPDQA1oxOTD6SfpYKCiTUNOgGkHY66ABCZgA8ACoAfAAUBuj++ABcoOUAlKAA3gqgPaDy6NC4dh1e9X6cAL4KUwo0+Ro2kqxYALIGAB4l7KAAvCHFZtUjc0SQBM0A2pry-Joi2vK6d6Ca5ETQiJoAuiIauDyscj6QyIJovfCQPyfUATVpRXo9AB6AH4MnMqAtbPwDIh+ABBez2IigrZEXb7UlHHxYeygy6acp8FB0aDvZ6aFY8ADnAGPQPxIM4-Gd2eUmCREMgCUTQd8YXDlAjQCiMspynQDJxNc5QPg6DwoSIgbx1MgDPxEDwiEQsCltawYERgv9NcgeDZIfYDMTcM5cLgzo00UEcfjCcT8KTzHUGuZ0DTEBcAAxfVVgADCfGw1giCWS7tYPFt6EFxPEkgccgNoX0XFAAANCqT66A4pL7ClkPHaaB4cl6zHxi2JAHoMzO6AsrRcvlURl5wv4QBleyQb36ThA06sZyySu4TDJXygRDreoYvJ2I8azing0yxcL5RL3LWnXkOqTwa+X0kM4pSBCEYOwiDkHRdRoR4MUfeF00gSAiBEH8zUwTVF2UKA4CQVAMGzQZCFIURaAYZJpA4OssWEURyykMxZHkXtlDUBZtF0fQjBMMj8EsTDUH+cgdQlHcSD4GhbXIf4BFxUBGnQPxmi45wBHhEhvTJY9FNYOoGF8AxfUo8wMinHJL0nNTSQqE8z10fhOD+dwUBqSjmjaTpul6fpBmGGwgltKYZnRBY-DkSMzHJVTrUpTRgoITQ4UCzB8CoIw2wIUlwvMw5NCSlKNzi2Z5kSuI6nQCN0r2CKiCi-BivQUrZTheEAElxC8zgYHLHgwknRAd2K2y-WQL14mLOgYGZIR4SCYCbVAQsqHEQVCmArsEzrHyBFtEgAz8E9YgYMjDIKjFMBQAwkAAeTEJdkviDdyWqP5mmy27UvwOLdkqToYWOhYzsu67avqzg9ke9BcGemqSojD6di+kYpgS1BzsQK70E5NKQoep6Xhi972jh76ZjVG9QChPhOBwaA5rU0A9GkksrPPYJj3rSrmx8SB4X1ARiUrfB8AcnV8FpGgDFUmhdXBoWiBjf51LoUdx18eFj2MmcqB46wtLffJZvplnBR4fgWYdOazgGxnVYrdXTMZ4K2ztTgHVwOIjv+1HrtejdHu9tKzHMSi4Q9tGlyBiNHvDkkA6DhQQ7EDHIxC6o8ajWOMiAA"&gt;Our answer&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#intermediateadvanced-challenge"&gt;
  &lt;/a&gt;
  Intermediate/Advanced Challenge
&lt;/h3&gt;

&lt;p&gt;The intermediate challenge also invovled generic constraints, so if you had just finished the beginner's then you were in a good place to figure this challenge. The key is to make a&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="gd"&gt;- const check = (data: Competitor[]) =&amp;gt; {
&lt;/span&gt;&lt;span class="gi"&gt;+ const check = &amp;lt;Type extends Competitor&amp;gt; (data: Type[]) =&amp;gt; {
&lt;/span&gt;      return data.map(competitor =&amp;gt; {
          if (competitor.weight &amp;gt; 2121.5) throw new Error("Stop the show, world record hit!")
          return { ...competitor, judge: (...args: unknown[]) =&amp;gt; { } }
      })
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is testing a few different things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Writing generics with an arrow function&lt;/li&gt;
&lt;li&gt;Using an &lt;code&gt;extends&lt;/code&gt; constraint for the interface subtypes&lt;/li&gt;
&lt;li&gt;Re-using the type parameter inside the array&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We left a tricky problem with this challenge, but explicitly didn't call it out. The function &lt;code&gt;judge:  (...args: unknown[])&lt;/code&gt; is a types gap. There is no validating that the judge function actually works like expected. There are two approaches for handling this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="gd"&gt;- return { ...competitor, judge: (...args: unknown[]) =&amp;gt; { } }
&lt;/span&gt;&lt;span class="gi"&gt;+ return { ...competitor, judge: (...args: Array&amp;lt;T[keyof T]&amp;gt;) =&amp;gt; { } }
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This version &lt;a href="https://twitter.com/faridz974/status/1454107977267417089"&gt;from @faridz974&lt;/a&gt; would ensure that the right values were used in the function (e.g. you couldn't accidentally put in an object to something which could only accept &lt;code&gt;string&lt;/code&gt; and &lt;code&gt;number&lt;/code&gt;s) but it ignored the order. An accurate, but whole-heartedly not recommended for production version which does take order into account comes from converting an &lt;a href="https://github.com/Microsoft/TypeScript/issues/13298#issuecomment-707369176"&gt;interface to a tuple on GitHub&lt;/a&gt; which is a bit too long to print in here, but here's a &lt;a href="https://www.typescriptlang.org/play?#code/PTAEE0HsFcHICcCmoCWA7UBjAFgQ3gObKQBmo80aa6BoADtALZ0DW65uALjVpM4t26Q0AZwA0oAJ4xQeAG6IAUCFC5QJRAHdQnSOUqq0AEykxYC0ACtoIzqAKQ7nbMhEoAXskx86AlEIxNSHg2NAIAOkVFdE5EeBJcTGQAYR8-XXhQAG9FUDzQYAAqQtAASQwAGwAjEVBC4Fz8zUQUAmxOAC5QNCYquIBuRQBfKJi4hKTQAGUPRFT+QRRhUEQAD1jjWvnfQWDs0BHotFj4xOQAEURveC4UBW30pYw1jaMttN3MnPydF0ZELq2eA0YZRFQAFWwKFq3jQCngnFquAw+Cq-hu8EkoEgVUsV04AFosZxJL5UMc9GpONA6BVEOFQMowO1OHQRB0QAR-NhoFVwt5GMAALIoTDwSAiUicYDg0mIKZilB0aXQkTQRAiYAARgAzAAmACcAA4AMSq9UC-7HAkAdgADDadQA2A1am1OsFgKDQUCMVrtVQiFigTTYLFGSAanSWSwkOQobqOchXPhWkw2HjOaHk+jiozQTABAD8ntAkOQ4ugbXs0Ls2ecXF+yAA+sEjHFm9iyM5kNTachs2gkwRoPhkbFECYqliqo5sEzQAApXByXAK4HKwwmZw2VQVSWgadluXrpWdKIkskANVwFXV4JpdIAPAB5CTglbrRCbUAsRDSMgX1AABeX9-1IUAXwAPhA0AAApGjyBCfh+ZCUPQj8Xm-N5DEkRD0IIot4M6MsAEoQJg8F8IIlCujQRB4Wo-JyKwn90A0TIAFUmPQoi4M4z9XiRNA8Jomi+OgLpOPI4CYORUSxPQuiGLiHiUJYr8fzguQunYuJQCvGS5JEtTxIM0yCOUxjFLyKzVJ+DShPg5sunkozyQ40AAHU1KIgBtcJApvO9EAfftXwkABRVZMDvdsn3BCQvKgqCJBfPzos4G5CyfLyJD-ADIKggBdYq1K6PyytIwYolhWwsBcTBg1Ap9kkE7D3gWfxgiguCjC4XAumSSr3O+fIkGpeAMH6zhcHCRhcDoOCBR2brMlk7I1JQMhlo+Nbwmaf07BgvUtVO8IAFZyOccVtHo7RIvgcV4DggAiKZdDoJtQBEbBIE0CQgngCoTCQa4TChTgAEJXtItSJugKb9kC-k9oyCRrCMIgujglH8AIdkDNve9H0QVqoNGg4DnwoY4cOOq7DcTwHk+WpQL8rIQxaNoSNOg0DgkTnDp5rozrtAX9mF9pRZ1d0JaF7npdAPUdQOMqGdAdtrlue40eCNnQA5pt-i6V7GEgeMNVewHFZIp1VaGQXjYBUBXroYIstwfxra5o6ugAFn9tXS3LH7Zl4LqAhDYIWFqAgkC4WrhHqpm5jRp5YJwK4WDg1OWbWkQ4ZUfIAD0Szz9PhHCEhgkixJsF2yO9g2sa8hW9JgnCTGiEb1aMgO226bhhdQ614Ida8SuMGhNBYDsOhcBENwwm+y9EAJLOmt+GA2iT0Q7DHm5uF1yOM9Azec8Pif84yQuF1LktFCv4+09Pqua-gOucF7jv1pg1uI5907t3RAP9PgDyOhIdu4Cez-AkHaIeiggA"&gt;working implementation in the playground&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.typescriptlang.org/play?&amp;amp;q=2#code/PTAEE0HsFcHICcCmoCWA7UBjAFgQ3gObKQBmo80aa6BoADtALZ0DW65uALjVpM4t26Q0AZwA0oAJ4xQeAG6IAUCFC5QJRAHdQnSOUqq0AEykxYC0ACtoIzqAKQ7nbMhEoAXskx86AlEIxNSHg2NAIAOkVFdE5EeBJcTGQAYR8-XXhQAG9FUDzQYAAqQtAASQwAGwAjEVBC4Fz8zUQUAmxOAC5QNCYquIBuRQBfKJi4hKTQAGUPRFT+QRRhUEQAD1jjWvnfQWDs0BHotFj4xOQAEURveC4UBW30pYw1jaMttN3MnPydF0ZELq2eA0YZRFRQaCZbxGZBBEK1AhILigTQuDDSaAouLENAVSSyXDGCo8bwLfxPETKMC4KowJwuUBuTygUiqehMVjsKrQOyoxDomS2fCxEy6AlEry4ESIWrElhKFTOZAw663Zaknbk4S1AC0pkxJBgxl+yOcyIxoCMKCMaFgdnkyCpv2QNJQxM4+LFiSSIlqIj4xDISpW6xu6hQiAqb3URpMy2DTsuqu49w+WrQAEJQMlCfqQ69naAAAY4K4sIvqSiYAKgPoVSCaJ1ipCMSAWYMat1xFbweB7OsNgD8oCi3lEdlLmBYoAAvKAADwAFUkvnz-OjD0+AD5QAAKIxcXBdZe+ADaAF0AJSznfffJITiQjAHzi4cKMXB0Xca9J7Ge3xofjyFAyG-NMMnCZpWnaUAdwAJgARkQ8IAFZr2cPttDQLRQAAUV7YJdwAIimXQ6ELERsAbCQ4SjcgrmCExsH8DMiMvQCgIfJ99nCXif0+CRrCMIgul3XjwnwAgRC6SgWDQBs0Ava9-32IYDg4oZ2MOMdbEZWZN38YJajnU8sixaDOlARCAE4DgkMyoLaSykIABjs-ZHPaLoEIAZgAdgANnchyWicro4J8g5z0UHS7BVYJblTMkMmM0BTOdf4uiI1s5AjEQiJo0KvNAALIqGeyMoBUAiLoYJOBufwCvMsLQAAFlaqKwTARcGSZLxwKeFFghYBEkU4UdtTsPqDJrOdJxYXdpvAoz2JUfIAD1B0UJbkqecJDXgXDEmwMDkr-ACfn4wz4HCISiFOzUIM8zgtPYp0euVBibhTfrduWFARFtOw6ClNwwkLD1fB1ebfhgNoJvHS0vsSuYBuWOaXCnfdkZ+maVqdDatsUeLvruVG-rQfbgiOnAHt-TIVLvPIrogu7EDpz5IKKzgJBZ4JwiVf5XsUIA"&gt;Our answer&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-challenge"&gt;
  &lt;/a&gt;
  The Challenge
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#beginnerlearner-challenge"&gt;
  &lt;/a&gt;
  Beginner/Learner Challenge
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.typescriptlang.org/play?#gist/927ccc66ae3022dc64c4f650109b937a-17"&gt;Update yopur website's color scheme for Halloween and tidy the codebase up a bit&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#intermediateadvanced-challenge"&gt;
  &lt;/a&gt;
  Intermediate/Advanced Challenge
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.typescriptlang.org/play?#gist/927ccc66ae3022dc64c4f650109b937a-18"&gt;Handle a book stores halloween discount event&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-share-your-solution"&gt;
  &lt;/a&gt;
  How To Share Your Solution
&lt;/h2&gt;

&lt;p&gt;Once you feel you have completed the challenge, you will need to select the &lt;strong&gt;Share&lt;/strong&gt; button in the playground. This will automatically copy a playground URL to your clipboard.&lt;/p&gt;

&lt;p&gt;Then either:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Go to Twitter, and create a tweet about the challenge, add the link to your code and mention the &lt;a href="https://twitter.com/typescript"&gt;@TypeScript&lt;/a&gt; Twitter account with the hashtag &lt;a href="https://twitter.com/search?q=%23TypeOrTreat"&gt;#TypeOrTreat&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Leave us a comment with your feedback on the &lt;a href="https://dev.to/typescript"&gt;dev.to&lt;/a&gt; post, or in this post.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#best-resources-for-additional-help"&gt;
  &lt;/a&gt;
  Best Resources for Additional Help
&lt;/h3&gt;

&lt;p&gt;If you need additional help you can utilize the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/intro.html"&gt;The New TypeScript Handbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://discord.com/invite/typescript"&gt;TypeScript Community Discord&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;The comments on each &lt;a href="https://dev.to/typescript"&gt;Dev.to&lt;/a&gt; post!&lt;/li&gt;
&lt;li&gt;Our previous &lt;a href="https://www.typescriptlang.org/play/#gist/303ebff59a6fc37f88c86e86dbdeb0e8-0"&gt;&lt;code&gt;Type | Treat&lt;/code&gt; 2020 challenges&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy Typing :)&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>challenge</category>
    </item>
    <item>
      <title>Last night I dreamt that somebody merged my PR...</title>
      <author>Jay Clark</author>
      <pubDate>Fri, 29 Oct 2021 19:55:55 +0000</pubDate>
      <link>https://dev.to/jayeclark/last-night-i-dreamt-that-somebody-merged-my-pr-41am</link>
      <guid>https://dev.to/jayeclark/last-night-i-dreamt-that-somebody-merged-my-pr-41am</guid>
      <description>&lt;p&gt;I created my first open source pull request (PR) on October 11. When I saw the automated tests transition one-by-one from &lt;em&gt;processing&lt;/em&gt; to &lt;em&gt;passed&lt;/em&gt;, I was already hooked. The notification came through a few hours later that my PR had been approved and merged, and it was official: I wanted to contribute to more projects, learn new languages, and master every new-to-me developer productivity tool under the sun.  &lt;/p&gt;

&lt;p&gt;A classmate had recently completed a '100 Days of Code' challenge. I'd considered doing something similar, but hadn't come up with a good focus. After that first PR merge, I found my focus: create 100 non-trivial pull requests in 100 days.  &lt;/p&gt;

&lt;p&gt;(Why specify 'non-trivial'? It's surprisingly easy to automate PRs that correct common typos or formatting errors without ever even cloning the repository. I was determined that each PR in &lt;em&gt;my&lt;/em&gt; challenge would require me to build and use a local development environment.)  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I'm almost 20 days into my challenge.&lt;/strong&gt; I've created 30 pull requests in 29 repositories, and 26 of them have been approved and merged. (3 are awaiting review and 1 was rejected.) The projects I've contributed to range from personal portfolios and practice projects, to large open-source apps and chrome extensions used by millions of people.  &lt;/p&gt;

&lt;p&gt;Here are some things I've learned:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#100-prs-in-100-days-is-a-breakneck-pace"&gt;
  &lt;/a&gt;
  100 PRs in 100 days is a breakneck pace
&lt;/h2&gt;

&lt;p&gt;It limits contributions to relatively easy tasks, like hunting down a small UI bug or adjusting CSS breakpoints to make a layout more responsive. Harder tasks like refactoring take a few days. I'm OK with my contributions being relatively minor in this challenge, because I'm going for breadth at this stage instead of depth.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#everything-breaks-all-the-time"&gt;
  &lt;/a&gt;
  Everything breaks, all the time
&lt;/h2&gt;

&lt;p&gt;If a project has contributing guidelines that outline how to set up your local development environment, follow them TO THE LETTER. You never know when completing steps in an order that &lt;em&gt;shouldn't&lt;/em&gt; break the setup process in theory will, in practice, break the setup process. Guides about setting environment variables should be read &lt;em&gt;very&lt;/em&gt; closely.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contributors-are-flaky"&gt;
  &lt;/a&gt;
  Contributors are flaky
&lt;/h2&gt;

&lt;p&gt;I've seen so many issues that have been claimed and then abandoned. The issue owner will check in with the assignee and get no response, then eventually un-assign it. A few days later someone new will come along asking to be assigned, and the same process will start again. Best practice is to write a note to set expectations on timeline and blockers. If solving the issue will involve multiple commits, it might also be a good idea to create a draft pull request after the first commit so that its public knowledge that progress is being made.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reviewers-are-flaky-too"&gt;
  &lt;/a&gt;
  Reviewers are flaky too
&lt;/h2&gt;

&lt;p&gt;It took 8 days for my simple formatting changes in O3DE to be reviewed. I'm &lt;em&gt;still&lt;/em&gt; waiting (15 days and counting) for an answer &amp;amp; assignment on a Public Labs project. I've learned to not be too upset with radio silence - I just move on and appreciate the experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#every-community-is-different"&gt;
  &lt;/a&gt;
  Every community is different
&lt;/h2&gt;

&lt;p&gt;Some projects have no contributing guidelines but expect you to know &amp;amp; follow a strict community code. Others have delightfully extensive guides to help onboard new contributors. Repositories sometimes have strict PR templates that must be followed to the letter; almost all projects require commits to be signed off on (thankfully there is a setting in VSCode that makes that automatic.) Becoming familiar with &amp;amp; following multiple of these divergent community rules each week is a bigger challenge than I'd anticipated.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contributing-is-incredibly-rewarding"&gt;
  &lt;/a&gt;
  Contributing is incredibly rewarding
&lt;/h2&gt;

&lt;p&gt;In just a few weeks, I've had the opportunity to practice so many parts of what the onboarding process will entail at a new job - setting up the environment, learning the codebase, working with new people, finding issues &amp;amp; tickets that are challenging enough to teach you something new, but not so challenging that you'll delay others taking too long to complete them. I am grateful every day that I've found a way to practice these skills. If I can contribute 100 PRs in 100 days, I can certainly get fully up to speed on 1 project in the same time frame.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h1&gt;

&lt;p&gt;Creating 100 pull requests in 100 days as a SWE-in-training is &lt;strong&gt;far&lt;/strong&gt; tougher than I expected. I'm not certain the format is ideal, either - the time spent in any one repository feels so fleeting. I thought many times about altering the challenge, but ultimately the only change I made was allowing myself two PRs against the same repository (if the issues were significantly different or exceptionally complex for my skill level.)&lt;/p&gt;

&lt;p&gt;The thing is, a challenge is &lt;em&gt;supposed&lt;/em&gt; to be difficult. If it's easy, it's not a challenge. And I'm still in the early stages, feeling just as overwhelmed as I was in the first couple weeks of learning JavaScript, R, or C. The beauty of a challenge like this is that it turns something that seems difficult and insurmountable into a regular routine.&lt;/p&gt;

&lt;p&gt;I can't wait to see where it takes me.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>todayilearned</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>20 Machine Learning Questions and Answer To Destroy Your Interview/</title>
      <author>Avi Arora</author>
      <pubDate>Fri, 29 Oct 2021 19:42:57 +0000</pubDate>
      <link>https://dev.to/aarora4/20-machine-learning-questions-and-answer-to-destroy-your-interview-1e3g</link>
      <guid>https://dev.to/aarora4/20-machine-learning-questions-and-answer-to-destroy-your-interview-1e3g</guid>
      <description>&lt;h2&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;In this article you will find essential machine learning interview questions that are geared towards beginners preparing for job or internship interviews. The questions in this article are general and cover a large breadth of information.&lt;/p&gt;

&lt;p&gt;If you are looking for more specific and niche questions geared towards Intermediate and Advanced readers, I recommend you check out some of my other &lt;strong&gt;topic specific machine learning question lists&lt;/strong&gt; below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://analyticsarora.com/11-unique-machine-learning-interview-questions-on-primary-component-analysis/"&gt;Primary Component Analysis&lt;/a&gt;&lt;br&gt;&lt;a href="https://analyticsarora.com/8-unique-machine-learning-interview-questions-on-backpropagation/"&gt;Backpropagation&lt;/a&gt;&lt;br&gt;&lt;a href="https://analyticsarora.com/8-unique-machine-learning-interview-questions-about-random-forests/"&gt;Random Forest&lt;/a&gt;&lt;br&gt;&lt;a href="https://analyticsarora.com/quickly-master-gradient-boosted-decision-trees-ml-interview-qa/"&gt;Gradient Boosted Decision Trees&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Without further ado, let's get into the quiz! You can take the interactive quiz here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://analyticsarora.com/20-machine-learning-questions-and-answer-to-destroy-your-interview/"&gt;https://analyticsarora.com/20-machine-learning-questions-and-answer-to-destroy-your-interview/&lt;/a&gt;&lt;/p&gt;




</description>
      <category>machinelearning</category>
      <category>beginners</category>
      <category>quiz</category>
      <category>datascience</category>
    </item>
    <item>
      <title>Docker and Kubernetes Made Relatable - III</title>
      <author>Sampriti Mitra</author>
      <pubDate>Fri, 29 Oct 2021 19:15:16 +0000</pubDate>
      <link>https://dev.to/sampritimitra/docker-and-kubernetes-made-relatable-iii-2gf7</link>
      <guid>https://dev.to/sampritimitra/docker-and-kubernetes-made-relatable-iii-2gf7</guid>
      <description>&lt;p&gt;Hi everyone!&lt;br&gt;
Welcome to the third part of this series, where we try to relate with kubernetes as a part of dev life.&lt;/p&gt;

&lt;p&gt;In the previous articles, we have discussed about containers &amp;amp; images and how to run containers on docker. We discussed about the need for Kubernetes. In this article, we will take a closer look at K8s and why it is so essential.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-do-we-guide-all-developers-to-work-in-sync-to-provide-the-final-product"&gt;
  &lt;/a&gt;
  How Do We Guide All Developers To Work in Sync To Provide the Final Product?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#kubernetes-the-engineering-manager"&gt;
  &lt;/a&gt;
  Kubernetes: The engineering manager
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Kubernetes is an open source container management and deployment platform. It orchestrates virtual machine clusters and schedules containers to operate on those virtual machines depending on their available computational resources and the container’s resource needs. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;They can be related with managers, who plan and coordinate developers to deliver projects and make sure they have all the resources required to do so.&lt;/p&gt;

&lt;p&gt;We can use K8s to deploy our services, roll out new releases without downtime, and scale (or descale) those services. It is portable, extensible, self-healing, and highly available.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-are-pods"&gt;
  &lt;/a&gt;
  What are pods?
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;A Kubernetes pod is a group of one or more containers, tied together for the purposes of administration and networking.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In our workspace analogy, pods can be a pair of senior and junior dev, working together on their related tasks. It can also be a dev who is ramped up on the system and is comfortable with working on the tasks alone.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#nodes-and-clusters-workstation-that-provides-resources-to-the-devs"&gt;
  &lt;/a&gt;
  Nodes and Clusters: Workstation that provides resources to the devs
&lt;/h3&gt;

&lt;p&gt;Consider the example of the employee workspace above. Every employee would require resources like a monitor, chair, desk, etc., to function properly. Every employee needs to be assigned these resources by the manager.&lt;br&gt;
A node can be thought of as the workstation that provides these resources and kubernetes, the manager that assigns these stations to the employees.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In Kubernetes, a Node is a worker computer that can be either virtual or physical. A Node can have many pods, and Kubernetes handles pod scheduling among the cluster’s Nodes automatically. Node is the smallest unit for computing. To establish a cluster, nodes share their resources.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#getting-started-with-kubectl-and-minikube"&gt;
  &lt;/a&gt;
  Getting Started With Kubectl and Minikube
&lt;/h2&gt;

&lt;p&gt;Kubectl is Kubernetes’ CLI used to interact with Kubernetes API to create and manage clusters. To install kubectl, run the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install kubectl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#what-is-minikube"&gt;
  &lt;/a&gt;
  What is Minikube?
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Minikube is a tool that lets you try out Kubernetes locally. It is a single node K8s cluster on your local machine for purpose of development or trying out K8s. The Minikube tool includes a set of built-in add-ons that can be enabled, disabled and opened in the local Kubernetes environment.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For installing minikube and starting it on MacOS, run the following commands:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install minikube
minikube start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#deploying-your-service-to-kubernetes"&gt;
  &lt;/a&gt;
  Deploying Your Service to Kubernetes
&lt;/h3&gt;

&lt;p&gt;First, push your local docker image that you built into minikube cache by using the following command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;minikube cache add myapp:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#deployment-the-team-goals-and-structure-defined-at-the-start-of-the-year"&gt;
  &lt;/a&gt;
  Deployment: The team goals and structure defined at the start of the year
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;A deployment provides declarative updates for Pods and ReplicaSets.&lt;br&gt;
In a Deployment, we define a desired state, and the Deployment Controller gradually converts the current state to the desired state. Deployments may be used to build new ReplicaSets or to delete current Deployments and replace them with new Deployments.&lt;br&gt;
Take a look at the deployment file below:&lt;/p&gt;
&lt;/blockquote&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;The above deployment file is like a declarative template for pods and replicasets. The above deployment named myapp in &lt;code&gt;{metadata.name}&lt;/code&gt;, creates a replicaset to bring up two pods of myapp. Now the &lt;code&gt;{spec.containers.image}&lt;/code&gt; gives the image to be pulled to run the container in the pod given by &lt;code&gt;{template.metadata.labels}&lt;/code&gt; &lt;code&gt;app:myapp&lt;/code&gt;. The deployment knows which pods to manage by the &lt;code&gt;{spec.selector.matchlabels}&lt;/code&gt; &lt;code&gt;app:myapp&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-replicasets"&gt;
  &lt;/a&gt;
  What are ReplicaSets?
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;The goal of a ReplicaSet is to keep a consistent set of replica Pods operating at all times. As a result, it’s frequently used to ensure the availability of a certain number of identical Pods.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#common-deployment-strategies"&gt;
  &lt;/a&gt;
  Common deployment strategies
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Recreate: all existing pods are terminated and new pods are then generated&lt;/li&gt;
&lt;li&gt;Rolling: pods are created in a rolling fashion, ramped up slowly until all new pods are running&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#creating-a-k8s-deployment"&gt;
  &lt;/a&gt;
  Creating a K8s deployment
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl apply -f deployment.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#checking-the-minikube-cluster-for-running-pods"&gt;
  &lt;/a&gt;
  Checking the minikube cluster for running pods
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl get pods
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now try going into the pod and checking whether the app is running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl exec -it &amp;lt;pod-name&amp;gt; sh
apk update
apk add curl
curl localhost:10000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#checking-the-selfhealing-capacity-of-kubernetes"&gt;
  &lt;/a&gt;
  Checking the self-healing capacity of Kubernetes
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl delete pod &amp;lt;pod-name&amp;gt;
kubectl get pods
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We should be able to see two pods still running. Since we deleted a pod, the replicaset controller detected it and spun up another one to keep up the desired state of two pods.&lt;/p&gt;

&lt;p&gt;Thanks for reading on till the end of this article. In the next post, we will discuss about Kubernetes Services.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>devs</category>
      <category>kubernetes</category>
      <category>docker</category>
    </item>
    <item>
      <title>TMA - Too Many Acronyms (webdev edition)</title>
      <author>Eugene Kopich</author>
      <pubDate>Fri, 29 Oct 2021 19:14:18 +0000</pubDate>
      <link>https://dev.to/web2033/tma-too-many-acronyms-webdev-edition-1la5</link>
      <guid>https://dev.to/web2033/tma-too-many-acronyms-webdev-edition-1la5</guid>
      <description>&lt;p&gt;Web developers love three-letter acronyms. Here's some:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;API - Application Programming Interface&lt;/li&gt;
&lt;li&gt;AWS - Amazon Web Services&lt;/li&gt;
&lt;li&gt;BEM - Block, Element, Modifier&lt;/li&gt;
&lt;li&gt;CDN - Content Delivery Network&lt;/li&gt;
&lt;li&gt;CLI - Command Line Interface&lt;/li&gt;
&lt;li&gt;CLS - Cumulative Layout Shift&lt;/li&gt;
&lt;li&gt;CMS - Content Management System&lt;/li&gt;
&lt;li&gt;CSR - Client-side Rendering&lt;/li&gt;
&lt;li&gt;CSS - Cascading Style Sheets&lt;/li&gt;
&lt;li&gt;DDD - Domain Driven Design&lt;/li&gt;
&lt;li&gt;DNS - Domain Name System&lt;/li&gt;
&lt;li&gt;DOM - Document Object Model&lt;/li&gt;
&lt;li&gt;DRY - Don’t Repeat Yourself&lt;/li&gt;
&lt;li&gt;ESM - ECMAScript modules&lt;/li&gt;
&lt;li&gt;FID - First Input Delay&lt;/li&gt;
&lt;li&gt;GCP - Google Cloud Platform&lt;/li&gt;
&lt;li&gt;GPL - General Public Licence&lt;/li&gt;
&lt;li&gt;GUI - Graphical User Interface&lt;/li&gt;
&lt;li&gt;HMR - Hot Module Replacement&lt;/li&gt;
&lt;li&gt;IDE - Integrated Development Environment&lt;/li&gt;
&lt;li&gt;ISR - Incremental Static Regeneration&lt;/li&gt;
&lt;li&gt;JSX - JavaScript XML&lt;/li&gt;
&lt;li&gt;LCP - Largest Contentful Paint&lt;/li&gt;
&lt;li&gt;LTS - Long Term Support&lt;/li&gt;
&lt;li&gt;MDN - Mozilla Developer Network&lt;/li&gt;
&lt;li&gt;MPA - Multi Page Application&lt;/li&gt;
&lt;li&gt;MVC - Model-View-Controller&lt;/li&gt;
&lt;li&gt;MVP - Minimum Viable Product&lt;/li&gt;
&lt;li&gt;NPM - Node Package Manager&lt;/li&gt;
&lt;li&gt;OOP - Object-Oriented Programming&lt;/li&gt;
&lt;li&gt;OSS - Open-Source Software&lt;/li&gt;
&lt;li&gt;PWA - Progressive Web Apps&lt;/li&gt;
&lt;li&gt;SDK - Software Development Kit&lt;/li&gt;
&lt;li&gt;SEO - Search Engine Optimization&lt;/li&gt;
&lt;li&gt;SFC - Single File Component&lt;/li&gt;
&lt;li&gt;SPA - Single Page Application&lt;/li&gt;
&lt;li&gt;SQL - Structured Query Language&lt;/li&gt;
&lt;li&gt;SSG - Static Site Generation&lt;/li&gt;
&lt;li&gt;SSL - Secure Socket Layer&lt;/li&gt;
&lt;li&gt;SSR - Server-Side Rendering&lt;/li&gt;
&lt;li&gt;SVG - Scalable Vector Graphics&lt;/li&gt;
&lt;li&gt;SWC - Speedy web compiler&lt;/li&gt;
&lt;li&gt;SWR - stale-while-revalidate&lt;/li&gt;
&lt;li&gt;TDD - Test Driven Development&lt;/li&gt;
&lt;li&gt;TTI - Time to Interactive&lt;/li&gt;
&lt;li&gt;UMD - Universal Module Definition&lt;/li&gt;
&lt;li&gt;URL - Uniform Resource Locator&lt;/li&gt;
&lt;li&gt;VCS - Version Control System&lt;/li&gt;
&lt;li&gt;XML - Extensible Markup Language&lt;/li&gt;
&lt;li&gt;XSS - Cross Site Scripting&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>developer</category>
      <category>learning</category>
    </item>
    <item>
      <title>Multi-Tenancy with Nodejs and mongoDb </title>
      <author>Code Salley</author>
      <pubDate>Fri, 29 Oct 2021 19:04:55 +0000</pubDate>
      <link>https://dev.to/codesalley/multi-tenancy-with-nodejs-and-mongodb-3gn1</link>
      <guid>https://dev.to/codesalley/multi-tenancy-with-nodejs-and-mongodb-3gn1</guid>
      <description>&lt;p&gt;The main concept of multi-tenancy is privacy and data segregation, With MongoDB architecture ( Database and collections ). It’s easy to allocate collection for tenants database &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XpnY1MAB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvbl5wkcok8k6en3dmzo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XpnY1MAB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvbl5wkcok8k6en3dmzo.png" alt="Erb diagram" width="880" height="469"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You should have a simple npm application setup and install &lt;code&gt;mongoose&lt;/code&gt; by running;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Implement a logic to handle MongoDB database connection and switching. In this scenario I will use two different approaches, switching between database's using &lt;code&gt;useDb&lt;/code&gt; and &lt;code&gt;disconnect&lt;/code&gt; and &lt;code&gt;reconnect&lt;/code&gt; ( this is useful for test cases only )&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Connect and disconnect approach&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// mongoose import &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// a function that takes database name and database url as import and return a mongoose connection&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;connectDb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbName&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;databaseName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;

  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`mongodb connected to &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;connectDb&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;with the above usage, all we need is the database name and database URL, We check the database name to see if it's already open, if open we just return mongoose object else we close all open connections and reconnect to the database using the URL we passed in. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;useDb(recommended) approach&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// mongoose import &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// a function that takes database name and database url as import and return a mongoose connection&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;connectDb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbName&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;databaseName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;

  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useDb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
                           &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`mongodb connected to &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useDb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;connectDb&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A very simple approach, with &lt;code&gt;useDb&lt;/code&gt; all we need is an open connection or create a new connection then return a new instance of MongoDB by passing the database name to the &lt;code&gt;useDb&lt;/code&gt; function from an open MongoDB connection. In other cases you might have separate models(schema) for tenants, Here is an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// connect to mongodb&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
                           &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;// connect to prefer database&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useDb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;databaseName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// use model(schema) preferred&lt;/span&gt;
&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;modelName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Keep tenants locked up!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/__salley"&gt;twitter: code salley&lt;/a&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>mongodb</category>
      <category>multitenancy</category>
    </item>
    <item>
      <title>Connecting to MySQL database in java</title>
      <author>DALLINGTON ASINGWIRE</author>
      <pubDate>Fri, 29 Oct 2021 18:58:28 +0000</pubDate>
      <link>https://dev.to/dallington256/connecting-to-mysql-database-in-java-3lej</link>
      <guid>https://dev.to/dallington256/connecting-to-mysql-database-in-java-3lej</guid>
      <description>&lt;p&gt;In this post, we're going to see Java Database Connectivity (&lt;b&gt;JDBC&lt;/b&gt;) with MySQL. Connecting to database to have CRUD operations like &lt;b&gt;INSERT&lt;/b&gt;, &lt;b&gt;SELECT&lt;/b&gt;, &lt;b&gt;UPDATE&lt;/b&gt; and &lt;b&gt;DELETE&lt;/b&gt; is the "center of gravity" of almost every backend technology.&lt;br&gt;
To connect java application with the MySQL database, mysqlconnector.jar file is required to be loaded. You can download this file from here; &lt;a href="https://dev.mysql.com/downloads/windows/installer/8.0.html"&gt;Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To load the jar file, you can do this by setting the classpath permanently. To do this,  go to environment variable then click on new tab. In variable name write &lt;b&gt;classpath&lt;/b&gt; and in variable value paste the path to the mysqlconnector.jar file by appending mysqlconnector.jar as &lt;b&gt;C:\yourfolder\mysql-connector-java-8.0.25&lt;/b&gt;;&lt;br&gt;
Then create a new project in your java text editor say Eclipse, Netbeans.&lt;/p&gt;

&lt;p&gt;Next, load mysqlconnector.jar file in your project by right clicking on it. I'm using &lt;b&gt;Eclipse&lt;/b&gt; as my text editor, do the following to load the jar file in your project.&lt;br&gt;
&lt;b&gt;1.&lt;/b&gt;Right-click on your project.&lt;br&gt;
&lt;b&gt;2.&lt;/b&gt;Select Build Path.&lt;br&gt;
&lt;b&gt;3.&lt;/b&gt;Click on Configure Build Path.&lt;br&gt;
&lt;b&gt;4.&lt;/b&gt;Click on Libraries, select Add External JARs.&lt;br&gt;
&lt;b&gt;5.&lt;/b&gt;Select the jar file from the required folder.&lt;br&gt;
&lt;b&gt;6.&lt;/b&gt;Click and Apply and Ok.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;NOTE:&lt;/b&gt; For whatever text editor you are using, You should be able to load that file.&lt;br&gt;
Next after loading the jar file in your project, create a java class say &lt;b&gt;Users&lt;/b&gt; to illustrate how to connect java to MySql database using com.mysql.jdbc.Driver driver class.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Code Example&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.sql.*&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;  
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Users&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt; 

&lt;span class="nc"&gt;Class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;forName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"com.mysql.cj.jdbc.Driver"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Class.forName("com.mysql.jdbc.Driver"); // this has been deprecated&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;connectionString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"jdbc:mysql://localhost:3306/db_name"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;db_username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"yourdatabase_username"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;db_password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"yourdatabase_password"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nc"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;con&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;DriverManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getConnection&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connectionString&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                                           &lt;span class="n"&gt;db_username&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                                           &lt;span class="n"&gt;db_password&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  

            &lt;span class="nc"&gt;Statement&lt;/span&gt; &lt;span class="n"&gt;stmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;createStatement&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;  
            &lt;span class="nc"&gt;ResultSet&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;stmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;executeQuery&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"select * from users"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
            &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getInt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;firstName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"first_name"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;lastName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"last_name"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

            &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;telephone_no&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tel_no"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"address"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;


            &lt;span class="nc"&gt;Date&lt;/span&gt; &lt;span class="n"&gt;dateCreated&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getDate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"created_at"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;isActive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getBoolean&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"isActive"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;user_role&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getInt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"user_role"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

            &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s, %s, %s,
                             %s, %s, %s, %s, %s, %s\n"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; 
                             &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;firstName&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lastName&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dateCreated&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                             &lt;span class="n"&gt;isActive&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_role&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                             &lt;span class="n"&gt;telephone_no&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
          &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;close&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;  
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt; 
     &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
   &lt;span class="o"&gt;}&lt;/span&gt;  
&lt;span class="o"&gt;}&lt;/span&gt;  
  &lt;span class="o"&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;Code Explanation:&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;b&gt;Class.forName()&lt;/b&gt; is the method loads the driver class for the mysql database (com.mysql.jdbc.Driver).&lt;/li&gt;
&lt;li&gt;Next, we establish a database connection using &lt;b&gt;getConnection()&lt;/b&gt; method on DriverManager class which takes in the url for the database host, database username and password.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;con.createStatement()&lt;/b&gt; is used to create a statement instance on the database connection object (con). Statement is used for accessing database. Statement interface cannot accept parameters and is useful when you are making static SQL statements at runtime like SELECT.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;executeQuery()&lt;/b&gt; method on the statement object(stmt) returns result set by fetching data from database by selecting data from users table.&lt;/li&gt;
&lt;li&gt;In the next line, we use &lt;b&gt;while loop&lt;/b&gt; and &lt;b&gt;rs.next&lt;/b&gt; to iterate through the rows of data from users table in database and then capture cell data using getString(), getInt(), getDate() and getBoolean() to capture string, integer, date and boolean column data from the schema which are later printed on the screen using System.out.println().&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;b&gt;UPDATE QUERY CODE SNIPPET&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;Class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;forName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"com.mysql.cj.jdbc.Driver"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;connectionString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"jdbc:mysql://localhost:3306/db_name"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;db_username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"yourdatabase_username"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;db_password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"yourdatabase_password"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nc"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;con&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;DriverManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getConnection&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connectionString&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                                           &lt;span class="n"&gt;db_username&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                                           &lt;span class="n"&gt;db_password&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
 &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"UPDATE users SET first_name= ?,
                 last_name=? where id = ?"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="nc"&gt;PreparedStatement&lt;/span&gt; &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;prepareStatement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Dallington"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setInt&lt;/span&gt;   &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;executeUpdate&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
      &lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;close&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;NOTE:&lt;/b&gt; We use PreparedStatement interface not Statement when executing sql updates in java. PreparedStatement is suitable when you want to use SQL statements many times and it accepts input parameters at runtime which is not the same case with Statement interface.&lt;br&gt;
&lt;b&gt;DELETE QUERY CODE SNIPPET&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;Class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;forName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"com.mysql.cj.jdbc.Driver"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;connectionString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"jdbc:mysql://localhost:3306/db_name"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;db_username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"yourdatabase_username"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;db_password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"yourdatabase_password"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nc"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;con&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;DriverManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getConnection&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connectionString&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                                           &lt;span class="n"&gt;db_username&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                                           &lt;span class="n"&gt;db_password&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"DELETE FROM users where id = ?"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="nc"&gt;PreparedStatement&lt;/span&gt; &lt;span class="n"&gt;preparedStmt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
      &lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;prepareStatement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setInt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;execute&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
      &lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;close&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because we pass parameters (e.g id in our code example) during the delete query at runtime, that's why we use PreparedStatement interface.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;INSERT QUERY CODE SNIPPET&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;Class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;forName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"com.mysql.cj.jdbc.Driver"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;connectionString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"jdbc:mysql://localhost:3306/db_name"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;db_username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"yourdatabase_username"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;db_password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"yourdatabase_password"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nc"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;con&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;DriverManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getConnection&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connectionString&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                                           &lt;span class="n"&gt;db_username&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                                           &lt;span class="n"&gt;db_password&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;" insert into users (first_name, last_name, 
         username, telephone_no, age, address, isActive)"&lt;/span&gt;
        &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" values (?, ?, ?, ?, ?, ?, ?)"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

      &lt;span class="nc"&gt;PreparedStatement&lt;/span&gt; &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;prepareStatement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Dallington"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Asingwire"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Dalton"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"25670000000"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setInt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Kampala"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;   
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBoolean&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;execute&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
      &lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;close&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;Conclusion:&lt;/b&gt; That's how you can have CRUD operations in java using driver class; &lt;b&gt;com.mysql.jdbc.Driver&lt;/b&gt;. Hope you can use this as the building block for more interesting projects in java. Thank you for taking time to read through this post, see you in the next one!&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
