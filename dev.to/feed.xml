<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>A short list of some helpful VS Code keyboard short cuts.</title>
      <author>Ben Perry</author>
      <pubDate>Mon, 10 Jan 2022 22:38:31 +0000</pubDate>
      <link>https://dev.to/bbperry/a-short-list-of-some-helpful-vs-code-keyboard-short-cuts-1ij5</link>
      <guid>https://dev.to/bbperry/a-short-list-of-some-helpful-vs-code-keyboard-short-cuts-1ij5</guid>
      <description>&lt;p&gt;I decided to write a quick post about helpful Visual Studio Code keyboard shortcuts. I learned some of these shortly after starting my journey into programming. Some of them I learned while doing some research for this blog post, which was my hope to motivate myself to learn more shortcuts. It's great how a little key binding can really boost your productivity and fun while coding. Many of these will be familiar, but they are techniques I wish I had known on day one!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#show-command-palette"&gt;
  &lt;/a&gt;
  Show Command Palette
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Mac&lt;/strong&gt;: &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;⌘&lt;/code&gt; + &lt;code&gt;P&lt;/code&gt; or &lt;code&gt;F1&lt;/code&gt;&lt;br&gt;
  &lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;P&lt;/code&gt; or &lt;code&gt;F1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This command provides quick access to the Command Palette. Here you will have a list of all the default commands available and also for any extensions you have added. Try it out and stop reading here unless you want to see my favorites!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#toggle-line-comment"&gt;
  &lt;/a&gt;
  Toggle line comment
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Mac&lt;/strong&gt;: &lt;code&gt;⌘&lt;/code&gt; + &lt;code&gt;/&lt;/code&gt;&lt;br&gt;
  &lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;/&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;One of the first commands I learned that will automatically comment out (or uncomment) lines of code based on which file type you are editing. Select all lines you want comments toggled. It will also comment the line the cursor is on without selection.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-selection-to-next-find-match"&gt;
  &lt;/a&gt;
  Add selection to next Find match
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Mac&lt;/strong&gt;: &lt;code&gt;⌘&lt;/code&gt; + &lt;code&gt;D&lt;/code&gt; &lt;br&gt;
  &lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;D&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I find myself using this one a lot! Select a feature that you want to find duplicates of. Each time the command is entered it will continue to add selection and cursor to the next match. Very useful for editing repeating code like variables all at once!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#select-all-occurrences-of-current-selection"&gt;
  &lt;/a&gt;
  Select all occurrences of current selection
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Mac&lt;/strong&gt;: &lt;code&gt;⌘&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;L&lt;/code&gt;&lt;br&gt;
  &lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;L&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Similar to above except it selects all matching occurrences all at once instead of one by one.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#toggle-sidebar-visibility"&gt;
  &lt;/a&gt;
  Toggle Sidebar visibility
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Mac&lt;/strong&gt;: &lt;code&gt;⌘&lt;/code&gt; + &lt;code&gt;B&lt;/code&gt;&lt;br&gt;
  &lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;B&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Quick command if you want to hide your sidebar display and have a larger view of your editing area.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#zen-mode"&gt;
  &lt;/a&gt;
  Zen Mode
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Mac&lt;/strong&gt;: &lt;code&gt;⌘&lt;/code&gt; + &lt;code&gt;K&lt;/code&gt; then &lt;code&gt;Z&lt;/code&gt;&lt;br&gt;
  &lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;K&lt;/code&gt; then &lt;code&gt;Z&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Remove distractions and only display your code in full screen. hitting &lt;code&gt;esc&lt;/code&gt; + &lt;code&gt;esc&lt;/code&gt; exits.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quick-open-go-to-file"&gt;
  &lt;/a&gt;
  Quick Open, Go to File…
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Mac&lt;/strong&gt;: &lt;code&gt;⌘&lt;/code&gt; + &lt;code&gt;P&lt;/code&gt;&lt;br&gt;
  &lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;P&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Instead of searching through your file explorer this command opens up a search bar to quickly find the file your want to navigate to without having to use your mouse.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#navigate-editor-group-history"&gt;
  &lt;/a&gt;
  Navigate editor group history
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;code&gt;control&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;tab&lt;/code&gt;&lt;br&gt;
  &lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;ctrl&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;tab&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Quickly navigate through files that you have tabs open for.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#access-keyboard-shortcuts"&gt;
  &lt;/a&gt;
  Access Keyboard Shortcuts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Mac&lt;/strong&gt;: ⌘K ⌘S&lt;br&gt;
  &lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;K&lt;/code&gt; then &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;S&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Here you can see and search all the keyboard shortcuts, and also change or add new bindings.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wrap-with-abbreviation"&gt;
  &lt;/a&gt;
  Wrap with Abbreviation
&lt;/h3&gt;

&lt;p&gt;Unbound by default&lt;/p&gt;

&lt;p&gt;This one is not bound by default but it seems like it could come in handy! In keyboard short cuts search &lt;code&gt;Emmet :Wrap with Abbreviation&lt;/code&gt;. I bound it to &lt;code&gt;⌥&lt;/code&gt; + &lt;code&gt;w&lt;/code&gt;. This will select the code block your cursor is on and you can wrap an HTML tag around the block, for example. Pretty neat!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#format-file-with-prettier-extension"&gt;
  &lt;/a&gt;
  Format File with Prettier extension
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Mac&lt;/strong&gt;: &lt;code&gt;option&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;F&lt;/code&gt;&lt;br&gt;
  &lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;Alt&lt;/code&gt; + &lt;code&gt;F&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I find using the Prettier extension very useful for formatting JavaScript and making it easier to read (pretty, if you will). As a beginner its nice to focus on writing code that works without having to worry as much about formatting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-additional-cursor"&gt;
  &lt;/a&gt;
  Add additional cursor
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Mac&lt;/strong&gt;: &lt;code&gt;option&lt;/code&gt; + &lt;code&gt;mouse click&lt;/code&gt;&lt;br&gt;
  &lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;Alt&lt;/code&gt; + &lt;code&gt;mouse click&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Adds as many additional cursors as you like to edit multiple lines at once!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pdfs-for-vscode-keyboard-shortcuts"&gt;
  &lt;/a&gt;
  PDFs for VSCode keyboard shortcuts
&lt;/h3&gt;

&lt;p&gt;This was just a short list of keyboard shortcuts that I have found handy. Here's are some links to some easy to read documents with more. Try some out, you might find a new favorite!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://code.visualstudio.com/shortcuts/keyboard-shortcuts-macos.pdf"&gt;MacOS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://code.visualstudio.com/shortcuts/keyboard-shortcuts-windows.pdf"&gt;Windows&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Using GitHub Actions</title>
      <author>Simon Foster</author>
      <pubDate>Mon, 10 Jan 2022 21:59:44 +0000</pubDate>
      <link>https://dev.to/funkysi1701/using-github-actions-3jo1</link>
      <guid>https://dev.to/funkysi1701/using-github-actions-3jo1</guid>
      <description>&lt;p&gt;I've been running my website on Azure Static Web Apps for a while and it is pretty cool.&lt;/p&gt;

&lt;p&gt;When you create a Static Web App on Azure you get asked for the github repo of your source code and even the branch to use.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HRYYH7n3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/off7ur2tgsla4smkrhhi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HRYYH7n3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/off7ur2tgsla4smkrhhi.png" alt="GitHub Repo for my Static Web App" width="734" height="340"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you have selected this, you get asked for the type of code to deploy, mine is Blazor Web Assembly but you can use Angular, React or Vue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S7YIBvRJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ruhzjeujgl1yjxx5lng8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S7YIBvRJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ruhzjeujgl1yjxx5lng8.png" alt="GitHub Actions workflow creation" width="730" height="321"&gt;&lt;/a&gt;&lt;br&gt;
You now have three variables to fill in the location in your code of the Website, the location of your Azure Functions and the output location usually wwwroot. Once you have set these three you can preview the GitHub Actions file that will be created and added to your repository.&lt;/p&gt;

&lt;p&gt;I get something like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - feature/tempbranch
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - feature/tempbranch

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' &amp;amp;&amp;amp; github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_&amp;lt;GENERATED_HOSTNAME&amp;gt; }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "Client" # App source code path
          api_location: "Api" # Api source code path - optional
          output_location: "wwwroot" # Built app content directory - optional
          ###### End of Repository/Build Configurations ######

  close_pull_request_job:
    if: github.event_name == 'pull_request' &amp;amp;&amp;amp; github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_&amp;lt;GENERATED_HOSTNAME&amp;gt; }}
          action: "close"

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This github action will run when you create a Pull Request to the branch mentioned in the file, or if you push code into the branch. This code get added into the .github/workflows/ folder and is the location that all github action workflows live. &lt;/p&gt;

&lt;p&gt;I haven't done much with github actions, however I have used Azure DevOps quite a bit. Over on the Azure DevOps side I have created a pipeline that deploys to a Dev environment, then a Test environment and finally a production environment.&lt;/p&gt;

&lt;p&gt;Lets have a look at the workflow that I ended up with and with can break down how it all works. Note I am new to Github actions so if there is a better way of doing this do let me know.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name: Azure Static Web Apps

on:
  push:
    branches:
      - main
      - develop
      - feature/*

jobs:
  dev:
    runs-on: ubuntu-latest
    environment: 
      name: Dev
    name: Dev
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ORANGE_POND_09B18B903  }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "Blog" # App source code path
          api_location: "Blog.Func" # Api source code path - optional
          output_location: "wwwroot" # Built app content directory - optional
          ###### End of Repository/Build Configurations ######
  test:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: 
      name: Test
    name: Test
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_WITTY_DUNE_0A1A77903  }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "Blog" # App source code path
          api_location: "Blog.Func" # Api source code path - optional
          output_location: "wwwroot" # Built app content directory - optional
          ###### End of Repository/Build Configurations ######
  prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: 
      name: Prod
    name: Prod
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_BRAVE_ROCK_0AAC63D03 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "Blog" # App source code path
          api_location: "Blog.Func" # Api source code path - optional
          output_location: "wwwroot" # Built app content directory - optional
          ###### End of Repository/Build Configurations ######     
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first thing I did was create three Azure Static Web Apps, I am using the free tier so while this is trippling my costs it is all still free! Doing this created three github action workflow files, I deleted two and edited the third, but before I deleted them I made a note of the AZURE_STATIC_WEB_APPS_API_TOKEN. If you look in your settings -&amp;gt; secrets for your repo you will see secrets have been created, this is the secure token that github uses to update your static web app.&lt;/p&gt;

&lt;p&gt;While we are in settings we might as well look at environments. I created a Prod, Test and Dev environment that I was going to use in my github actions.&lt;/p&gt;

&lt;p&gt;Environments can have various rules setup on them. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Required reviewers - this is like an approver, a user specified here must aprove for the workflow to be deployed&lt;/li&gt;
&lt;li&gt;Wait time - I didn't use this, but it looks like a certain amount of time can be set to pause the deployment. (I assume to do some kind of manual check)&lt;/li&gt;
&lt;li&gt;Deployment Branch - specify what branch are allowed to be deployed to what environments. I specified develop, main and feature branches could be deployed to the Dev environment, develop and main could go on Test and main could go on Prod &lt;/li&gt;
&lt;li&gt;Environment secrets - I didn't use this as my secrets were already created, however it looks like your secrets can be associated with a specific environment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that we have the static web apps setup and the environments lets look at the github action file.&lt;/p&gt;

&lt;p&gt;First of all I removed the PR stuff and just concentrated on pushes. I wanted my workflow to be.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Push to feature branch&lt;/li&gt;
&lt;li&gt;Deploys to Dev env&lt;/li&gt;
&lt;li&gt;PR feature branch to develop&lt;/li&gt;
&lt;li&gt;Once merged code gets pushed into develop&lt;/li&gt;
&lt;li&gt;Deploys to Test env&lt;/li&gt;
&lt;li&gt;PR develop to main&lt;/li&gt;
&lt;li&gt;Once merged code gets pushed into main&lt;/li&gt;
&lt;li&gt;Deploys to Prod env (after approval)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The approval on deploying to production I think is probably overkill, but I still have it setup like that for now.&lt;/p&gt;

&lt;p&gt;My gh action has three jobs defined as dev: test: and prod: they are all the same except they have the azure_static_web_apps_api_token that is correct for their environment. &lt;/p&gt;

&lt;p&gt;They also each have a environment defined eg&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;environment:
  name: Prod
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly Test and Prod have an if test setup, if the test is false the job won't run. Importantly it won't fail it just won't run.&lt;/p&gt;

&lt;p&gt;For Prod this needs to only run on main branch so we have&lt;/p&gt;

&lt;p&gt;if: github.ref == 'refs/heads/main'&lt;/p&gt;

&lt;p&gt;For Test this needs to only run on develop so&lt;/p&gt;

&lt;p&gt;if: github.ref == 'refs/heads/develop'&lt;/p&gt;

&lt;p&gt;I could have a test for develop to only run on feature/* but I have allowed it to run everytime.&lt;/p&gt;

&lt;p&gt;There is loads more you can do with github actions, but hopefully this gives you a taste of some of the things you can do. I currently have a mix of Azure DevOps and github actions so I will be working on getting github actions to do more.&lt;/p&gt;

</description>
      <category>github</category>
      <category>devopspipeline</category>
    </item>
    <item>
      <title>VoIP vs Non - Advantages and disadvantages</title>
      <author>R Coder</author>
      <pubDate>Mon, 10 Jan 2022 21:52:22 +0000</pubDate>
      <link>https://dev.to/rcoderdotcom/voip-vs-non-advantages-and-disadvantages-4ilp</link>
      <guid>https://dev.to/rcoderdotcom/voip-vs-non-advantages-and-disadvantages-4ilp</guid>
      <description>&lt;p&gt;You've probably heard of the term Voice over Internet Protocol (VoIP) systems, and how they differ from traditional landlines.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vMBtVNcR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m49st8rxr1rgm1dl0h4f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vMBtVNcR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m49st8rxr1rgm1dl0h4f.png" alt="voip" width="880" height="512"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But if you're unsure, &lt;strong&gt;VoIP systems basically refer to technologies that allow voice and video communication via internet connection.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;But here is where it gets complicated, it turns out that there are VoIP and Non VoIP phone numbers, I will try to explain this as best as possible as it is a bit confusing at the beginning.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;VoIP and Non VoIP belong to one category:&lt;/strong&gt; &lt;a href="https://www.majorphones.com/virtual-numbers-what-are-they/"&gt;Virtual Numbers&lt;/a&gt;, and they both have the same technology have in common.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But first of all. What are virtual phone numbers?&lt;/strong&gt; They are those that allow people to communicate through the internet, and using this valuable tool you can communicate with any number in the world and still be as cheap as calling from a conventional phone number (this is one of the main advantages of virtual phone numbers). Another advantage is that they are not tied to any physical location (sometimes they are), this means that they protect your privacy very well, however Non VoIP numbers have a greater advantage over VoIP.&lt;/p&gt;

&lt;p&gt;Now, Non VoIP phone numbers belong to the group of VoIP numbers but are not limited to any geographical location, and are not tied to any equipment, which means, calls can be made through computers, phones, tablets and everything you can think of.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But how do they work?&lt;/strong&gt; In the same way as &lt;a href="https://www.nextiva.com/blog/voip-number.html#:~:text=A%20VoIP%20number%2C%20also%20known,number%20accessible%20to%20the%20public."&gt;VoIP phone numbers&lt;/a&gt;, however if you receive a call or text message, any device that is linked to that phone number will ring and the recipient can use any of the devices to answer the message/call. This is a big plus.&lt;/p&gt;

&lt;p&gt;One of the clearest benefits is that we can affiliate our entire technical support team to multiple devices and they can all receive the information and respond to it in a much more efficient manner.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;However, VoIP numbers have a disadvantage here: 1 VoIP number = 1 purpose.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How are they configured?&lt;/strong&gt;&lt;br&gt;
Well, actually the configuration is very similar to VoIP numbers (Using SIP). In the case of companies like &lt;a href="https://www.twilio.com/"&gt;Twillio&lt;/a&gt;, you simply buy the phone number and use the language of your choice to connect their API to your development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What Is SIP?&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://en.wikipedia.org/wiki/Session_Initiation_Protocol"&gt;The Session Initiation Protocol (SIP)&lt;/a&gt; is one underlying technology that makes VoIP possible. This is a text-based protocol similar to HTML. It's the most commonly used standard for setting up and controlling phone calls in most VoIP systems. You'll run across references to SIP in almost anything you do with these kinds of phone systems, especially when you're selecting any handset hardware you want to use.&lt;/p&gt;

&lt;p&gt;What makes SIP so popular is not only that it's deep and flexible, but also because it was purpose-built to engage in multimedia (meaning not just audio but also video and even text) communications over TCP/IP networks. For VoIP and Non-VoIP calls, SIP can set up calls using a number of IP-related protocols, including the Stream Control Transmission Protocol (SCTP), the Transmission Control Protocol (TCP), and the User Datagram Protocol (UDP), among others.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But it's not all pretty. There is a big problem with Non VoIP numbers.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The main one is that many people take advantage of this type of technology to perform Spam and this is really a problem because spam filters can identify and erroneously block incoming calls from companies that use non fixed VoIP phone numbers.&lt;/p&gt;

&lt;p&gt;Another problem to consider is the following: Since Non-VoIP numbers are not tied to a physical location then in case of an emergency of any kind, these agencies will not be able to track your location.&lt;/p&gt;

&lt;p&gt;However, depending on the project you are developing this can be a strong point, since if you use a proxy or &lt;a href="https://brightdata.com/blog/guest-post/residential-proxies-web-scraping#:~:text=24%2DOct%2D2019,also%20concealing%20your%20IP%20address."&gt;residential vpn&lt;/a&gt; then you will have almost absolute anonymity. Of course it also depends on other factors such as DNS, or the &lt;a href="https://en.wikipedia.org/wiki/WebRTC"&gt;WEBRTC protocol.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Ta9qtgJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/55ogffmyufs466gwg2n7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Ta9qtgJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/55ogffmyufs466gwg2n7.png" alt="webrtc" width="322" height="157"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another point against is that most of the Non-VoIP phone number providers do not have API to automate their services, compared to companies like Twillio, &lt;a href="https://www.vonage.com/"&gt;Vonage&lt;/a&gt;, &lt;a href="https://www.nextiva.com/"&gt;Nextiva&lt;/a&gt; among others.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But the Achilles heel of VoIP and &lt;a href="https://www.majorphones.com/"&gt;Non VoIP&lt;/a&gt; technologies in developing countries is the Internet.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lUDijCCV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0g898xo39rcgwcmjdgjy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lUDijCCV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0g898xo39rcgwcmjdgjy.jpg" alt="internet" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Most VoIP solutions will require stable and consistent internet connectivity at all your office locations. At the very least, your business phone system must have access to a business-class internet link, so discuss these needs with your company's internet service provider (ISP). This should be a dedicated link through a dedicated router if you expect your phone calls to sound as if they were coming from a business and not someone's home Skype connection. At a minimum, it's important to have a router that can create virtual LANs (VLANs) and also has the ability to encrypt your voice traffic. These days, you need end-to-end VoIP security for any call.&lt;/p&gt;

&lt;p&gt;For larger systems, and for systems where security is critical for things like being compliant to vertical regulatory needs, your current internet connection might not be adequate. The internet doesn't do quality of service &lt;a href="https://en.wikipedia.org/wiki/Quality_of_service"&gt;(QoS)&lt;/a&gt;, and bandwidth can be unpredictable. Network congestion can ruin a conference call, and activities such as DNS hijacking can put your business and data at risk.&lt;/p&gt;

&lt;p&gt;Well, in general you have an idea of the advantages and disadvantages of Non VoIP vs VoIP numbers&lt;/p&gt;

&lt;p&gt;See you in a future Post! Possibly about R Studio vs Matlab!&lt;/p&gt;

</description>
      <category>voip</category>
      <category>sip</category>
      <category>nonvoip</category>
      <category>virtualnumber</category>
    </item>
    <item>
      <title>What machine learning can learn from Ruby on Rails</title>
      <author>Isabella Tromba</author>
      <pubDate>Mon, 10 Jan 2022 21:47:52 +0000</pubDate>
      <link>https://dev.to/tangram/what-machine-learning-can-learn-from-ruby-on-rails-4epg</link>
      <guid>https://dev.to/tangram/what-machine-learning-can-learn-from-ruby-on-rails-4epg</guid>
      <description>&lt;p&gt;I wrote my first end-to-end functioning web application using Ruby on Rails in &lt;a href="https://stellar.mit.edu/S/course/6/sp13/6.170/index.html"&gt;a class at MIT (6.170)&lt;/a&gt; in 2013. There were things that Rails automatically handled for me that I didn’t even realize were hard to do. Running &lt;code&gt;rails new&lt;/code&gt; just set up a completely functioning application. I never had to consider all of the components I would need to string together. Database migrations, routing, run and deploy scripts, tests, handling static assets, and more worked out of the box and the documentation clearly described how to build every part of my application. In fact, I assumed that writing web applications should always be this easy because I had never tried to write one from scratch. I was the beginner benefiting from my own ignorance that DHH talks about in &lt;a href="https://rubyonrails.org/doctrine/"&gt;The Rails Doctrine&lt;/a&gt;!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;But beyond the productivity gains for experts, conventions also lower the barriers of entry for beginners. There are so many conventions in Rails that a beginner doesn’t even need to know about, but can just benefit from in ignorance. It’s possible to create great applications without knowing why everything is the way it is.&lt;/p&gt;

&lt;p&gt;That’s not possible if your framework is merely a thick textbook and your new application a blank piece of paper. It takes immense effort to even figure out where and how to start. Half the battle of getting going is finding a thread to pull.&lt;/p&gt;

&lt;p&gt;- DHH, The Rails Doctrine&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A couple of years later, as a machine learning engineer at Slack, getting machine learning into production felt a lot more like "the framework as a thick textbook" and my application as "a blank piece of paper" that DHH talks about in the Rails Doctrine.&lt;/p&gt;

&lt;p&gt;To make things even worse, try googling “how to learn machine learning”. The steps involved start looking like the curriculum required to obtain a PhD in Statistics, Math, and Computer Science.&lt;/p&gt;

&lt;p&gt;The problems don’t end once you have successfully trained a model. You still have to figure out how to get your model into production. The code you wrote in your jupyter notebook needs to be translated into code that can be deployed. An entirely new job called “Machine Learning Engineer” was created just to solve this problem.&lt;/p&gt;

&lt;p&gt;In the Rails Doctrine, there is a section on “Value Integrated Systems”. DHH says that Rails is “A whole system that addresses an entire problem.”&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Rails can be used in many contexts, but its first love is the making of integrated systems: Majestic monoliths! A whole system that addresses an entire problem. This means Rails is concerned with everything from the front-end JavaScript needed to make live updates to how the database is migrated from one version to another in production.&lt;/p&gt;

&lt;p&gt;That’s a very broad scope, as we’ve discussed, but no broader than to be realistic to understand for a single person. Rails specifically seeks to equip generalist individuals to make these full systems. Its purpose is not to segregate specialists into small niches and then require whole teams of such in order to build anything of enduring value.&lt;/p&gt;

&lt;p&gt;- DHH, The Rails Doctrine&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One sentence in that section really stuck out to me: "Its [Rails'] purpose is not to segregate specialists into small niches and then require whole teams of such in order to build anything of enduring value". Today, this is exactly what companies are doing to get machine learning into production. They are required to assemble a team of specialists including Data Scientists, Machine Learning Engineers, Backend Engineers and Ops teams.&lt;/p&gt;

&lt;p&gt;It would be great if we had something like Ruby on Rails for machine learning: a single system that provides the tools you need to go from data to a deployed machine learning model.  Just as DHH says "rails specifically seeks to equip generalist individuals to make these full system", we need tools to equip generalist programmers, like front-end javascript engineers or back-end ruby programmers, to build full machine learning systems.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introducing-tangram"&gt;
  &lt;/a&gt;
  Introducing Tangram
&lt;/h2&gt;

&lt;p&gt;Tangram is an all-in-one automated machine learning framework that makes it easy to add machine learning to your applications. Predictions happens directly in your existing applications so there are no network requests and there is no need to set up a separate service to serve your models.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;tangram train&lt;/code&gt; to train a model from a CSV file on the command line.&lt;/li&gt;
&lt;li&gt;Make predictions with bindings for &lt;a href="https://rubygems.org/gems/tangram"&gt;Ruby&lt;/a&gt;, &lt;a href="https://pypi.org/project/tangram"&gt;Python&lt;/a&gt;, &lt;a href="https://pkg.go.dev/github.com/tangramdotdev/tangram-go"&gt;Golang&lt;/a&gt;, &lt;a href="https://hex.pm/packages/tangram"&gt;Elixir&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/@tangramdotdev/tangram"&gt;Javascript&lt;/a&gt;, &lt;a href="https://packagist.org/packages/tangram/tangram"&gt;PHP&lt;/a&gt;, or &lt;a href="https://lib.rs/tangram"&gt;Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;tangram app&lt;/code&gt; to start a web application where you can learn more about your models and monitor them in production.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can check out the &lt;a href="https://rubygems.org/gems/tangram"&gt;Tangram Ruby Gem&lt;/a&gt;. We built it using Ruby FFI and the source is available on our &lt;a href="https://github.com/tangramdotdev/tangram/tree/main/languages/ruby"&gt;GitHub repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Tangram is a new project and there is a lot of work ahead. We’d love to get your feedback. Check out the project on &lt;a href="https://github.com/tangramdotdev/tangram"&gt;GitHub&lt;/a&gt;, and let us know what you think! If you like what we are working on, &lt;a href="https://github.com/tangramdotdev/tangram"&gt;give us a star&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>ruby</category>
      <category>rails</category>
    </item>
    <item>
      <title>Next.js GraphQL Apollo Server Starter Project
</title>
      <author>Salah Eddine Lalami</author>
      <pubDate>Mon, 10 Jan 2022 21:42:08 +0000</pubDate>
      <link>https://dev.to/lalami/nextjs-graphql-apollo-server-starter-project-3b8j</link>
      <guid>https://dev.to/lalami/nextjs-graphql-apollo-server-starter-project-3b8j</guid>
      <description>&lt;h2&gt;
  &lt;a href="#nextjs-graphql-apollo-server-starter"&gt;
  &lt;/a&gt;
  Next.js Graphql apollo server starter
&lt;/h2&gt;

&lt;p&gt;Next.js Graphql apollo server starter , with merge schema , combine resolvers generate type in fast and simple way&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#github-repo"&gt;
  &lt;/a&gt;
  Github Repo
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/idurar/next-js-graphql-apollo-server-starter"&gt;https://github.com/idurar/next-js-graphql-apollo-server-starter&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install"&gt;
  &lt;/a&gt;
  Install
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn Install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#generate-schema-and-type"&gt;
  &lt;/a&gt;
  Generate schema and Type
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn generate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h3&gt;

&lt;p&gt;First, run the development server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; with your browser to see the result.&lt;/p&gt;

&lt;p&gt;can be accessed on &lt;a href="http://localhost:3000/api/graphql"&gt;http://localhost:3000/api/graphql&lt;/a&gt;. This endpoint can be edited in &lt;code&gt;pages/api/graphql.ts&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Image cover : thanks to &lt;a href="https://unsplash.com/@tateisimikito"&gt;https://unsplash.com/@tateisimikito&lt;/a&gt;&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>graphql</category>
      <category>typescript</category>
      <category>node</category>
    </item>
    <item>
      <title>Animated Education Website with HTML CSS JS</title>
      <author>Sadee</author>
      <pubDate>Mon, 10 Jan 2022 21:32:12 +0000</pubDate>
      <link>https://dev.to/codewithsadee/animated-education-website-with-html-css-js-3d8h</link>
      <guid>https://dev.to/codewithsadee/animated-education-website-with-html-css-js-3d8h</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/1ygRRP-y9pw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;How to make animated education website using html css javascript&lt;/p&gt;

&lt;p&gt;In this video, I will show you how to create (mobile-first responsive) animated education website.&lt;/p&gt;




&lt;p&gt;HI 👋&lt;br&gt;
I'm Sadee (webdev)&lt;br&gt;
In this channel I make videos about Complete Responsive website.&lt;br&gt;
You can checkout my channel 👇&lt;/p&gt;

&lt;p&gt;📺 My Channel : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
🔔 Subscribe : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g?sub_confirmation=1"&gt;subscribe now&lt;/a&gt;&lt;br&gt;
🕐 New Videos Every Week&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#essential-links"&gt;
  &lt;/a&gt;
  🔗 Essential links
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://drive.google.com/file/d/1wMROFZ-ljUVzXdcWPqSC-DFJIr00XPLb/view?usp=sharing"&gt;All Images&lt;/a&gt;&lt;br&gt;
&lt;a href="https://drive.google.com/file/d/1VDUOCQh1cM9_ZyDKZXKakqH9I9sOs84o/view?usp=sharing"&gt;Text&lt;/a&gt;&lt;br&gt;
&lt;a href="https://fonts.google.com/specimen/Roboto"&gt;Font - Roboto&lt;/a&gt;&lt;br&gt;
&lt;a href="https://fonts.google.com/specimen/Jost?query=jost"&gt;Font - Jost&lt;/a&gt;&lt;br&gt;
&lt;a href="https://ionic.io/ionicons"&gt;Ionicon&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.patreon.com/posts/source-code-60993085?utm_medium=clipboard_copy&amp;amp;utm_source=copy_to_clipboard&amp;amp;utm_campaign=postshare"&gt;Source Code&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#timestamps"&gt;
  &lt;/a&gt;
  ⏱️ Timestamps
&lt;/h2&gt;

&lt;p&gt;0:00 - Demo&lt;br&gt;
3:18 - File structure&lt;br&gt;
3:50 - Html initial&lt;br&gt;
4:28 - Css variables &amp;amp; reset&lt;br&gt;
7:21 - Header section&lt;br&gt;
18:31 - Home section&lt;br&gt;
30:34 - Category section&lt;br&gt;
38:14 - About section&lt;br&gt;
44:11 - Course section&lt;br&gt;
58:17 - Event section&lt;br&gt;
1:07:22 - Features section&lt;br&gt;
1:13:32 - Instructor section&lt;br&gt;
1:21:08 - Testimonials section&lt;br&gt;
1:26:25 - Blog section&lt;br&gt;
1:33:29 - Contuct section&lt;br&gt;
1:36:13 - Footer seciotn&lt;br&gt;
1:45:59 - Css Animation&lt;br&gt;
1:52:49 - Javascript&lt;br&gt;
1:53:55 - Media queries &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#like-follow-amp-subscribe-me"&gt;
  &lt;/a&gt;
  💜 Like - Follow &amp;amp; Subscribe Me
&lt;/h2&gt;

&lt;p&gt;Twitter : &lt;a href="https://twitter.com/codewithsadee"&gt;https://twitter.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Github : &lt;a href="https://github.com/codewithsadee"&gt;https://github.com/codewithsadee&lt;/a&gt;&lt;br&gt;
YouTube : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
Buy Me A Coffee : &lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;https://www.buymeacoffee.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Patreon : &lt;a href="https://www.patreon.com/codewithsadee"&gt;https://www.patreon.com/codewithsadee&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qhS87mRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kn6vwn4mulhsx6o69is.png" alt="Buy Me A Coffee" width="225" height="51"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>tutorial</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Melhorando seus testes com Jest</title>
      <author>João Victor</author>
      <pubDate>Mon, 10 Jan 2022 21:26:01 +0000</pubDate>
      <link>https://dev.to/joaovictor6/acelerando-seus-testes-em-jest-com-spyon-37ci</link>
      <guid>https://dev.to/joaovictor6/acelerando-seus-testes-em-jest-com-spyon-37ci</guid>
      <description>&lt;p&gt;Nesse artigo explicarei sobre como tornar nossos testes mais performaticos e sólidos.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introdu%C3%A7%C3%A3o"&gt;
  &lt;/a&gt;
  Introdução
&lt;/h2&gt;

&lt;p&gt;Olá, me chamo João e me encontrei com um grande problema. Estava desenvolvendo um projeto no qual consumia uma API, para ser mais exato, está API era disponibilizada pela &lt;a href="https://rapidapi.com"&gt;rapidApi&lt;/a&gt;. Como sou um mero mortal(e estudante), estava utilizando do plano gratuito. Contudo, esse disponibiliza apenas 500 requests por mês. Sério, consegui estourar esse limite em um dia kkkkk.Seria impossivel desenvolver o app com tantas poucas requisições.&lt;br&gt;
Graças a esse "aperto", pensei em desenvolvelo utilizando de TDD(Test Driven Development), que é basicamente desenvolver guiados por teste. Nesse artigo irei mostrar o porquê. Espero que goste e que acima de tudo, te ajude!😁&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preparando-o-ambiente"&gt;
  &lt;/a&gt;
  Preparando o ambiente
&lt;/h2&gt;

&lt;p&gt;Para recriar o ambiente no qual estava, criarei uma API super simples com &lt;a href="https://expressjs.com/"&gt;Express&lt;/a&gt;, utilizarei do &lt;a href="https://www.npmjs.com/package/axios"&gt;Axios&lt;/a&gt; para fazer as requisições e claro, faremos os testes com o &lt;a href="https://jestjs.io/"&gt;Jest&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#expres-um-pouco-de-arroz-e-feij%C3%A3o"&gt;
  &lt;/a&gt;
  Expres, um pouco de arroz e feijão
&lt;/h3&gt;

&lt;p&gt;A api ficou bem simples. Basicamente criei uma rota que recebe um query e retorna um JSON. Além disso fiz uma função sleep para simular uma latência.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_-_mTe-D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4pstyauyotol3r5xl7cr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_-_mTe-D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4pstyauyotol3r5xl7cr.png" alt="API code" width="880" height="463"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configurando-app-para-consumir-nossa-api"&gt;
  &lt;/a&gt;
  Configurando app para consumir nossa API
&lt;/h3&gt;

&lt;p&gt;Aqui criaremos o projeto, nele utilizaremos além dos jest para testes, usaremos também o babel para termos uma sintaxe um pouco mais agradável.(Deixarei o repositório no final do artigo, não se preocupe!)&lt;br&gt;
A estrutura do projeto ficou assim:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0doWAXQh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eyevu014qlnph7rfpnfo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0doWAXQh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eyevu014qlnph7rfpnfo.png" alt="Project structure" width="262" height="285"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pasta __teste__:&lt;/p&gt;

&lt;p&gt;Evidentemente, será nela onde ficara nossos testes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pasta utils:&lt;/p&gt;

&lt;p&gt;Nela ficara nossa instância no Axios, segue o código:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eXXaJIeI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hfesdvgurejvg4dqu1y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eXXaJIeI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hfesdvgurejvg4dqu1y.png" alt="Axios instance code" width="764" height="558"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#jest-e-tdd"&gt;
  &lt;/a&gt;
  Jest, e TDD
&lt;/h2&gt;

&lt;p&gt;Agora iremos produzir nosso teste para a função. Em TDD primeiro fazemos os testes e só depois a função.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#esqueleto-da-fun%C3%A7%C3%A3o"&gt;
  &lt;/a&gt;
  Esqueleto da função
&lt;/h3&gt;

&lt;p&gt;Basicamente, iremos apenas declarar a função para podermos importa-la nos testes.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KTf0cV7x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5irdab34jbqm6t8164dt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KTf0cV7x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5irdab34jbqm6t8164dt.png" alt="Function base" width="880" height="453"&gt;&lt;/a&gt;&lt;br&gt;
Agora sim partiremos para os testes. Temos de pensar no que a função vai fazer. Nesse caso, ela deve receber um nome, e retornar um objeto tipo: &lt;code&gt;{ message: 'Olá, teste' }&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aumR9rgC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/42jzcczk9gzyjhsi52np.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aumR9rgC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/42jzcczk9gzyjhsi52np.png" alt="Basic test code" width="880" height="475"&gt;&lt;/a&gt;&lt;br&gt;
Esse é basicamente nosso teste. A primeiro momento ele irá falhar(ainda bem). A partir de agora temos que fazê-lo passar.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para isso, implementei nossa função, ela ficou da seguinte forma:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eFRKzFZl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tfpp3bjiafxv63d3wydl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eFRKzFZl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tfpp3bjiafxv63d3wydl.png" alt="Function" width="880" height="440"&gt;&lt;/a&gt;&lt;br&gt;
O teste ainda não vai passar, já que como essa é uma função async e recebemos apenas uma promise.&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VEDUkg2f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f9eu4e6f3f2uzx4dptll.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VEDUkg2f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f9eu4e6f3f2uzx4dptll.png" alt="output test" width="247" height="134"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aprovando-o-teste"&gt;
  &lt;/a&gt;
  Aprovando o teste
&lt;/h3&gt;

&lt;p&gt;Agora, vamos tratar o retorno da função &lt;em&gt;sendHelloWorld&lt;/em&gt; lá nos nossos testes. Isso significa que temos apenas que botar um &lt;em&gt;async&lt;/em&gt; na função e utilizar um &lt;em&gt;await&lt;/em&gt; no retorno da função. Ficou assim:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DXNOS1be--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kt813nzti6aankaxqdx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DXNOS1be--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kt813nzti6aankaxqdx.png" alt="FUnctional test" width="880" height="426"&gt;&lt;/a&gt;&lt;br&gt;
 Pronto, nossa função passou! Porém, existe um pequeno problema. Com o tempo, nossos testes podem acabar crescendo em quantidade, além disso. Estamos dependendo de uma API externa para executarmos o código. Isso tornam eles menos confiáveis, além de que podem ser extremamente voláteis. imagina se a latência fique alta? Não seria mais inteligente interceptarmos a &lt;em&gt;request&lt;/em&gt; que fizemos ao servidor e retornar um valor pré determinado? um &lt;strong&gt;Mock&lt;/strong&gt;? Bom, eu acredito que sim.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#n%C3%A3o-dependa-de-apis-nos-testes"&gt;
  &lt;/a&gt;
  Não dependa de API's nos testes.
&lt;/h3&gt;

&lt;p&gt;Estamos na parte final do nosso artigo. porém, a mais importante. Imagine um cenário no qual temos 10 testes onde cada um deles faz uma request para algum serviço externo ou API. Nossos testes estariam diretamente ligados a algo no qual não temos o minimo controle. Eles poderiam demorar 3s ou até mesmo 20s, tudo dependeria da latência. Para evitarmos tal problema, o Jest tem uma forma bem simples. Podemos reescrever certas funções, olha que interessante!(me pareceu magia quando descobri kkkk).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reescrevendo-m%C3%A9todos"&gt;
  &lt;/a&gt;
  Reescrevendo métodos
&lt;/h3&gt;

&lt;p&gt;Bom, agora que ja entendemos oque fazer, temos que realmente fazer. Olha o quão simples é reescrever uma função no jest:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j4MMSlLm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y3k851f7253l17qhjml6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j4MMSlLm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y3k851f7253l17qhjml6.png" alt="Final test code" width="880" height="501"&gt;&lt;/a&gt;&lt;br&gt;
 Pronto, agora temos um teste totalmente isolado, isso é incrivel!!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclus%C3%B5es"&gt;
  &lt;/a&gt;
  Conclusões
&lt;/h2&gt;

&lt;p&gt;Espero que tenha aprendido um pouco mais sobre TDD e entendido o quanto foi util pra mim essa alternativa. Além disso, irei passar aqui alguns links que me ajudaram a escrever o artigo e descobrir essa solução:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jestjs.io/docs/jest-object#jestfnimplementation"&gt;Jest.fn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=bLdEypr2e-8"&gt;TDD (Test Driven Development) // Dicionário do Programador&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#reposit%C3%B3rio-com-o-exemplo"&gt;
  &lt;/a&gt;
  Repositório com o exemplo
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JoaoVictor6/jest-example"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>tdd</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Quickly build and deploy Nodejs lambda to AWS with Terraform</title>
      <author>Junius Lekgoara</author>
      <pubDate>Mon, 10 Jan 2022 21:24:53 +0000</pubDate>
      <link>https://dev.to/julekgwa/quickly-build-and-deploy-nodejs-lambda-to-aws-with-terraform-5apg</link>
      <guid>https://dev.to/julekgwa/quickly-build-and-deploy-nodejs-lambda-to-aws-with-terraform-5apg</guid>
      <description>&lt;p&gt;To kick us off we want to install create-aws-tf-lambda utilizing your preferred nodejs package manager.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NB&lt;/strong&gt;: before we start make AWS account, save the secret and access key in your environment variables or  configure it using aws cli&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-createawstflambda"&gt;
  &lt;/a&gt;
  Install create-aws-tf-lambda
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;npm i create-aws-tf-lambda -g&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-project"&gt;
  &lt;/a&gt;
  Create project
&lt;/h2&gt;

&lt;p&gt;Make a new a projet/lambda by running the the following command&lt;/p&gt;

&lt;p&gt;&lt;code&gt;create-aws-tf-lambda&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4BssS4KZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rof6h437lmqazdt3unq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4BssS4KZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rof6h437lmqazdt3unq.png" alt="create-aws-tf-lambda" width="880" height="211"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;cd into the orderStatus project and run build&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm run build&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;cd into terraform directory, run terraform init then plan and apply&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;br&gt;
terraform init&lt;br&gt;
terraform plan&lt;br&gt;
terraform apply&lt;br&gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;congratulations you have deployed your lambda to AWS in seconds&lt;/p&gt;

</description>
      <category>node</category>
      <category>lambda</category>
      <category>terraform</category>
      <category>aws</category>
    </item>
    <item>
      <title>21 Tax write offs for freelance web developers in Canada</title>
      <author>Sotariye</author>
      <pubDate>Mon, 10 Jan 2022 20:43:57 +0000</pubDate>
      <link>https://dev.to/sotariye/21-tax-write-offs-for-freelance-web-developers-in-canada-4p17</link>
      <guid>https://dev.to/sotariye/21-tax-write-offs-for-freelance-web-developers-in-canada-4p17</guid>
      <description>&lt;p&gt;You’ve put in hours of your time, done all the hard work — you’ve learned to code! Now you’re ready to reap the rewards and set off on your own as a freelance developer.&lt;/p&gt;

&lt;p&gt;There are major benefits to working freelance. You get to choose your working hours, clients, and your rate of pay. You can work all morning (or all night for that matter) or maybe only part-time. The world is your oyster. &lt;/p&gt;

&lt;p&gt;However, working freelance can make your tax situation a little complicated, to say the least. That’s why I created this list of tax-deductible expenses that you need to track if you want to keep more of the money you make. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gear and Equipment&lt;/strong&gt;&lt;br&gt;
You don’t need to splurge on super-expensive equipment, but the costs can still add up. Good thing your computer, keyboard, mouse, monitors and any other equipment you purchase are all tax-deductible expenses.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Website Expense&lt;/strong&gt;&lt;br&gt;
How you brand yourself as a freelance developer can help you stand out from the crowd and an online portfolio website is a good place to start. Plus, you can write-off your website hosting and domain registration fees. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Software&lt;/strong&gt;&lt;br&gt;
From mock-up tools to project management software, there are a number of tools out there that can help you run your business more efficiently. If you decide to upgrade to the paid versions, you can write-off those monthly subscription fees. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Professional Services&lt;/strong&gt;&lt;br&gt;
Need to bring on a junior developer to support your client’s work? Any fees you pay to other professionals for advice or services related to your business can be written off. &lt;br&gt;
Payment Processing Fee&lt;br&gt;
Getting paid is great, but those pesky processing fees? Not so much. Fortunately, they’re also tax-deductible. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Professional Development&lt;/strong&gt;&lt;br&gt;
Whether you want to learn a new programming language or framework or develop a new skill, it’s important to invest in your professional development. Coding workshops, programming seminars, online courses and certifications, books and magazines that contribute to your education and development are all tax-deductible expenses.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Marketing&lt;/strong&gt;&lt;br&gt;
From business cards to SEO website upgrades, even the best developers need to invest some funds into marketing their services. You can write off these costs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Networking Event&lt;/strong&gt;&lt;br&gt;
Networking can get a bad rap but it’s still one of the best ways to connect with other professionals and meet with potential clients. If there’s a tech conference or meetup you’ve been dying to attend, remember that these expenses are tax-deductible!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#work-from-home"&gt;
  &lt;/a&gt;
  Work from home?
&lt;/h2&gt;

&lt;p&gt;As long as you have a good computer and solid internet connection, you can work from anywhere as a freelance developer—including your own home.&lt;/p&gt;

&lt;p&gt;If you do decide to work from home, there are quite a few deductions that you can take advantage of. Contrary to popular belief, you don’t need to have a full home office to claim these write-offs. Even if you only have space for a dedicated desk, you can claim business-use-of-home deductions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Utilities&lt;/strong&gt;&lt;br&gt;
Heating bills. Hydro bills. Water bills. We all gotta pay them, but if you work from home, you can write off a portion of your utility costs. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Internet&lt;/strong&gt;&lt;br&gt;
It’d be pretty tough to work as a freelance developer without the internet. That’s why you can write off a portion of these fees as well. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rent or Mortgage&lt;/strong&gt;&lt;br&gt;
While you can’t deduct all of your rent or mortgage payment, you can write-off a percentage of these expenses depending on how much of your home is used for your business.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Property Taxes&lt;/strong&gt;&lt;br&gt;
Owning a home in Canada can be very expensive and very rewarding at the same time. Fortunately, if you work from home, you can claim a portion of your property tax bill as a write-off.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Insurance&lt;/strong&gt;&lt;br&gt;
Do you pay for rental or homeowner insurance? You can write off a portion of these costs as home office write-offs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Maintenance&lt;/strong&gt;&lt;br&gt;
Cleaning expenses, home repairs, snow removal... these are all tax-deductible expenses if you work from home. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phone&lt;/strong&gt;&lt;br&gt;
Do you use your phone for work? You can write off a portion of this monthly bill as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Home Office Expense&lt;/strong&gt;&lt;br&gt;
Most web developers sit at their desks for long periods of time, so creating an ergonomic workspace is pretty key. Office fixtures like a desk, office chair, and second desktop monitor are all tax-deductible purchases.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#meeting-with-clients"&gt;
  &lt;/a&gt;
  Meeting with clients?
&lt;/h2&gt;

&lt;p&gt;Imagine this scenario: a potential client is impressed with your website and has enjoyed chatting with you over the phone, and now they want to meet in person. You’re one step closer to winning their business. &lt;/p&gt;

&lt;p&gt;First impressions really count. While you’ll want to make sure you do your research beforehand, you also need to think about where you’ll be meeting them. Depending on your relationship with this client, you may not want to meet this person at your house or a neighbourhood coffee shop. &lt;/p&gt;

&lt;p&gt;Fortunately, there are a number of options you could explore. For instance, you could meet them at a local coworking space, book a meeting room for the day, or take them out for a meal at a nice restaurant. Whichever option you go with, remember that these expenses are also tax-deductible. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Office Rental&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Co-working space memberships, day passes and room booking fees are all expenses that can be written off. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Food and Drink&lt;/strong&gt;&lt;br&gt;
If you discuss work with a coworker, client, or even a friend at a restaurant, it's a write-off!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#travel-for-work"&gt;
  &lt;/a&gt;
  Travel for work?
&lt;/h2&gt;

&lt;p&gt;Think you don’t need to travel for work as a freelance developer? Think again. While developers can do the majority of their work from home or an office space, there will likely be times where you’ll need to meet with a client in person or attend a conference. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Transportation&lt;/strong&gt;&lt;br&gt;
If you drive to meet with a client or coworker, or to attend a conference or out-of-town meet-up—you can claim car-related write-offs. These include expenses like gas, car maintenance, insurance and registration, parking, tolls, and the annual depreciation of your car.&lt;/p&gt;

&lt;p&gt;If you’re travelling out of the city or out of the country, airfare, train tickets and rental car fees can also be written off. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Accommodations&lt;/strong&gt;&lt;br&gt;
When you travel for work, lodging expenses such as hotel rooms or Airbnb bookings are write-offs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Food and Drink&lt;/strong&gt; &lt;br&gt;
When you're travelling for work, all meals are tax-deductible. Even takeout.&lt;/p&gt;




&lt;p&gt;If you enjoyed reading this article, I write about all things business finance in Canada and you can find more more resources here. &lt;br&gt;
&lt;a href="https://www.betterwithbenji.com/"&gt;https://www.betterwithbenji.com/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>beginners</category>
      <category>writing</category>
      <category>productivity</category>
    </item>
    <item>
      <title>WeakMap and WeakSet: Understanding JavaScript weak references</title>
      <author>Matt Angelosanto</author>
      <pubDate>Mon, 10 Jan 2022 20:39:50 +0000</pubDate>
      <link>https://dev.to/logrocket/weakmap-and-weakset-understanding-javascript-weak-references-1lo1</link>
      <guid>https://dev.to/logrocket/weakmap-and-weakset-understanding-javascript-weak-references-1lo1</guid>
      <description>&lt;p&gt;&lt;strong&gt;Written by &lt;a href="https://blog.logrocket.com/author/conermurphy/"&gt;Coner Murphy&lt;/a&gt;&lt;/strong&gt; ✏️&lt;/p&gt;

&lt;p&gt;Weak references are not often used in JavaScript due to how the language is designed. However, in certain circumstances, they can prove vital, such as when developers must store additional data and need to automatically manage the memory usage.&lt;/p&gt;

&lt;p&gt;In this post, we’ll learn about these weak references in JavaScript and how we can use them by utilizing two objects within the language: &lt;code&gt;WeakMap&lt;/code&gt; and &lt;code&gt;WeakSet&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#understanding-strong-references"&gt;
  &lt;/a&gt;
  Understanding strong references
&lt;/h2&gt;

&lt;p&gt;Let’s start by taking a look at what a normal, or strong, reference is in JavaScript. In its simplest definition, a strong reference is a reference that keeps an object in memory. Let’s take a look at this in practice to understand what we are talking about:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;badger&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;dog&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;dog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [{ name: "badger" }]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By creating a variable as an object, we can place the object into an array and remove the reference to the original object from the variable we created by setting its value to &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Although we can’t access the object via the &lt;code&gt;dog&lt;/code&gt; variable anymore because there is a strong reference between the &lt;code&gt;pets&lt;/code&gt; array and the object, the object is kept in memory and can be accessed via &lt;code&gt;pets[0]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In other words, the strong reference prevents removing the object from memory via garbage collection.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#understanding-weak-references"&gt;
  &lt;/a&gt;
  Understanding weak references
&lt;/h2&gt;

&lt;p&gt;Simply put a weak reference is a reference to an object that doesn’t prevent garbage collection if it is the only reference to the object in the memory.&lt;/p&gt;

&lt;p&gt;A normal reference (considered strong), would prevent the garbage collection of an object even if it is the only object referencing it; this isn’t the case for a weak reference.&lt;/p&gt;

&lt;p&gt;Let’s take this theory and put it into practice with the previous example of a strong reference and putting it into the context of a weak reference. Ignore the use of &lt;code&gt;WeakMap&lt;/code&gt; right now; we will explain this in more depth later in the article. For now, let’s see weak reference behavior:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;pets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;WeakMap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;badger&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dog&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;okay&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// WeakMap{ {...} -&amp;gt; "Okay" } &amp;lt;= dog set to the WeakMap&lt;/span&gt;

&lt;span class="nx"&gt;dog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Overwrite the reference to the object&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// WeakMap(0) &amp;lt;= dog has been garbage collected.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By utilizing &lt;code&gt;WeakMap&lt;/code&gt; and the weak references that come with it, we can see the differences between the two types of references in action. While the strong (normal) reference to the original &lt;code&gt;dog&lt;/code&gt; object still exists, the &lt;code&gt;dog&lt;/code&gt; object persists in the &lt;code&gt;WeakMap&lt;/code&gt;, and we can access it with no issues.&lt;/p&gt;

&lt;p&gt;But, when we overwrite the reference to the original &lt;code&gt;dog&lt;/code&gt; object by reassigning the variable to &lt;code&gt;null&lt;/code&gt;, the only reference to the original object in memory is the weak reference coming from the &lt;code&gt;WeakMap&lt;/code&gt; we created.&lt;/p&gt;

&lt;p&gt;Because it’s a weak reference, it won’t prevent garbage collection from occurring. This means when &lt;a href="https://blog.logrocket.com/tag/vanilla-javascript/"&gt;the JavaScript engine&lt;/a&gt; runs a garbage collection process again, the &lt;code&gt;dog&lt;/code&gt; object will be removed from memory and from the &lt;code&gt;WeakMap&lt;/code&gt; we assigned it to.&lt;/p&gt;

&lt;p&gt;The key difference to note is that a strong reference prevents an object from garbage collection while a weak one will not.&lt;/p&gt;

&lt;p&gt;By default, JavaScript uses strong references for all of its references and the only way to use weak references is to use either a &lt;code&gt;WeakMap&lt;/code&gt; or a &lt;code&gt;WeakSet&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-garbage-collection"&gt;
  &lt;/a&gt;
  What is garbage collection?
&lt;/h2&gt;

&lt;p&gt;While garbage collection is a detailed and complicated subject, it is important to understand when discussing references.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.logrocket.com/javascript-garbage-collection-browser-vs-server/"&gt;Garage collection is an automated process controlled by the JavaScript engine&lt;/a&gt;. When a value is reachable, it is guaranteed to be stored in memory and not garbage collected, and there are two ways a value is considered reachable.&lt;/p&gt;

&lt;p&gt;This first is that they are part of the base set of reachable values like global variables, the current executing function and its local variables/parameters, and more internal values.&lt;/p&gt;

&lt;p&gt;The other is reaching any value from the root by reference or a chain of references. For instance, imagine we create an object in a global variable; this is reachable by the global space, thus considered reachable.&lt;/p&gt;

&lt;p&gt;Now, if we create another object and reference it off the global object we created, it is also reachable because it’s referenced via the global object.&lt;/p&gt;

&lt;p&gt;However, if we remove the global object by setting it to &lt;code&gt;null&lt;/code&gt;, suddenly the one we could reach by reference isn’t reachable, so it would be garbage collected.&lt;/p&gt;

&lt;p&gt;This is specifically referencing strong references because they are the default in JavaScript. But, the same does apply to weak references, the only exception being if the only reference to an object is weak, it does not prevent garbage collection, and the object is removed.&lt;/p&gt;

&lt;p&gt;That is a high-level overview of how garbage collection works; essentially, if something isn’t reachable, it is removed from memory so the memory can be used in other locations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-sets-endraw-vs-raw-weaksets-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;Sets&lt;/code&gt; vs. &lt;code&gt;WeakSets&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set"&gt;Per MDN&lt;/a&gt;, “&lt;code&gt;Set&lt;/code&gt; objects are collections of values. You can iterate through the elements of a set in insertion order. A value in the &lt;code&gt;Set&lt;/code&gt; may only occur once; it is unique in the &lt;code&gt;Set&lt;/code&gt;'s collection.”&lt;/p&gt;

&lt;p&gt;Simply put, a &lt;code&gt;Set&lt;/code&gt; is like an array that can only contain unique values but we can still iterate through it like an array using methods like for loops and &lt;code&gt;.forEach&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Similar to a &lt;code&gt;Set&lt;/code&gt;, &lt;code&gt;WeakSet&lt;/code&gt; is a collection of objects that are unique from each other but differs because &lt;code&gt;WeakSet&lt;/code&gt; can only store objects and cannot contain arbitrary values of any type like strings or numbers.&lt;/p&gt;

&lt;p&gt;Ultimately, as the name suggests, &lt;code&gt;WeakSets&lt;/code&gt; are indeed weak, meaning they use weak references.&lt;/p&gt;

&lt;p&gt;It is also worth noting an interesting side effect of using weak references is that &lt;code&gt;WeakSet&lt;/code&gt; is not enumerable. This means there is no way to loop over the items contained within it because there is no list of current objects stored in the collection; they are weakly referenced and may be removed at any point.&lt;/p&gt;

&lt;p&gt;Here is an example of &lt;code&gt;WeakSet&lt;/code&gt; in use and the methods we can call on it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;WeakSet&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fluffy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;badger&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dog&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dog&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;// true&lt;/span&gt;

&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// removes cat from the set&lt;/span&gt;
&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;// false, cat has been removed&lt;/span&gt;
&lt;span class="nx"&gt;pets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dog&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;// true, dog is retained&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#-raw-maps-endraw-vs-raw-weakmap-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;Maps&lt;/code&gt; vs. &lt;code&gt;WeakMap&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map"&gt;According to MDN&lt;/a&gt;, “The &lt;code&gt;Map&lt;/code&gt; object holds key-value pairs and remembers the original insertion order of the keys. Any value (both objects and primitive values) may be used as either a key or a value.”&lt;/p&gt;

&lt;p&gt;This means a &lt;code&gt;Map&lt;/code&gt; is like an object where we can store key-value pairs and access the values contained within the &lt;code&gt;Map&lt;/code&gt; through the key. Unlike &lt;a href="https://blog.logrocket.com/storing-retrieving-javascript-objects-localstorage/"&gt;a standard object in JavaScript&lt;/a&gt;, however, we must use the &lt;code&gt;.get()&lt;/code&gt; method to access the values.&lt;/p&gt;

&lt;p&gt;In comparison to a &lt;code&gt;Map&lt;/code&gt;, a &lt;code&gt;WeakMap&lt;/code&gt; is very much the same but the references it holds are weak references, meaning it won’t prevent garbage collection from removing values it references if they are not strongly referenced elsewhere.&lt;/p&gt;

&lt;p&gt;Also, &lt;code&gt;WeakMap&lt;/code&gt; has the same side effect of not being enumerable due to the weak references.&lt;/p&gt;

&lt;p&gt;Finally, we must use objects as the keys, but the values can be any arbitrary value like a string or number. Here is an example of &lt;code&gt;WeakMaps&lt;/code&gt; used and the methods we can use on it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;wm1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;WeakMap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;wm2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;WeakMap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;wm1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;wm1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;wm2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// You can set the value to be anything including an object or function&lt;/span&gt;
&lt;span class="nx"&gt;wm2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Or, undefined&lt;/span&gt;
&lt;span class="nx"&gt;wm1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;wm2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;wm1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Or, even a WeakMap itself&lt;/span&gt;

&lt;span class="nx"&gt;wm1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 100&lt;/span&gt;

&lt;span class="nx"&gt;wm1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;wm1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;wm1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Before closing out, let’s consider a potential use case for weak references and the two objects we covered in this article.&lt;/p&gt;

&lt;p&gt;If you need to store additional data temporarily and don’t want to worry about cleaning up the memory or how the objects are removed, then using weak references is an absolute lifesaver.&lt;/p&gt;

&lt;p&gt;But, it’s not likely that you will regularly need to use &lt;code&gt;WeakMaps&lt;/code&gt;, &lt;code&gt;WeakSets&lt;/code&gt;, or even weak references regularly in JavaScript.&lt;/p&gt;

&lt;p&gt;They are handy to know for the occasional situation and great to have base knowledge about, but in the majority of situations, use normal (strong) references.&lt;/p&gt;

&lt;p&gt;I hope you found this article on weak references in JavaScript helpful, if you did, &lt;a href="https://twitter.com/MrConerMurphy"&gt;please consider following me over on Twitter&lt;/a&gt;, where I post helpful and actionable tips and content on the JavaScript ecosystem.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#logrocket-debug-javascript-errors-more-easily-by-understanding-the-context"&gt;
  &lt;/a&gt;
  &lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt;: Debug JavaScript errors more easily by understanding the context
&lt;/h2&gt;

&lt;p&gt;Debugging code is always a tedious task. But the more you understand your errors the easier it is to fix them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt; allows you to understand these errors in new and unique ways. Our frontend monitoring solution tracks user engagement with your JavaScript frontends to give you the ability to find out exactly what the user did that led to an error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fD6-0SwF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2020/06/reproduce-javascript-errors.gif" alt="LogRocket Dashboard Free Trial Banner" width="800" height="407"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LogRocket records console logs, page load times, stacktraces, slow network requests/responses with headers + bodies, browser metadata, and custom logs. Understanding the impact of your JavaScript code will never be easier!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;Try it for free&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>DevSecOps and Shift Left Security: A Guide</title>
      <author>Geoff Stevens</author>
      <pubDate>Mon, 10 Jan 2022 20:35:46 +0000</pubDate>
      <link>https://dev.to/softwaredotcom/devsecops-and-shift-left-security-a-guide-3dfh</link>
      <guid>https://dev.to/softwaredotcom/devsecops-and-shift-left-security-a-guide-3dfh</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-devsecops-methodology"&gt;
  &lt;/a&gt;
  What is DevSecOps methodology?
&lt;/h2&gt;

&lt;p&gt;DevSecOps—short for development, security, and operations—adds security-first thinking into every phase of the software development pipeline, helping engineering teams deliver secure software with speed and at scale. &lt;/p&gt;

&lt;p&gt;Previously, development teams performed security testing after the development cycle, meaning they handed work over to separate QA and security teams for final inspection. As software development teams adopted DevOps practices, particularly continuous integration and deployment, security reviews created costly bottlenecks by backloading important work at the final stages of the delivery pipelines. Teams only uncovered issues after features had been built, meaning they were costlier and more difficult to debug and fix. &lt;/p&gt;

&lt;p&gt;DevSecOps integrates security into every stage of the development pipeline, providing teams with tools and resources at each phase to create safe and secure code. As a result, DevSecOps helps teams address security issues earlier and faster without slowing their organization's software delivery. &lt;/p&gt;

&lt;p&gt;By adopting principles of DevSecOps, teams can benefit from: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Faster and more efficient software delivery&lt;/li&gt;
&lt;li&gt;  More secure codebase and proactive security&lt;/li&gt;
&lt;li&gt;  Continuous feedback and faster security vulnerability patching&lt;/li&gt;
&lt;li&gt;  Highly automated, standardized, and predictable security practices &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-does-shiftleft-security-fit-into-devsecops"&gt;
  &lt;/a&gt;
  How does shift-left security fit into DevSecOps?
&lt;/h2&gt;

&lt;p&gt;Before DevSecOps, engineering teams structured their development cycles to be highly sequential, which meant completing all testing and security reviews after the planning, implementation, and integration phases. &lt;/p&gt;

&lt;p&gt;Once changes reach the end of the development cycle, they are often more complex to debug, forcing teams to disentangle several factors all at once, such as performance, integration, and more. As a result, uncovering significant issues late in the cycle requires large amounts of rework for development teams. After receiving a long list of complex defects from testers, developers need to design and apply multiple fixes all at once and across thousands of lines of code. &lt;/p&gt;

&lt;p&gt;Security testing late in the development life cycle creates especially painful bottlenecks throughout the delivery pipeline: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Insufficient resource planning&lt;/strong&gt;. By failing to include testers early in the planning phases, teams may not properly allocate resources later in the development cycle. &lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Less time and more debt&lt;/strong&gt;. Cramming testing at the end of the cycle increases the likelihood of teams skipping testing altogether, increasing technical debt, and deferring problems to later versions. &lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Wasted development time&lt;/strong&gt;. Engineers may continue to work on defective features or changes before receiving any feedback, leading to wasted energy and effort. &lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Complex debugging&lt;/strong&gt;. Systems become more complex later in the development cycle, making testing more challenging and burdensome. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Shifting left means performing testing earlier in the development cycle. In other words, testing is moved to the left on the project timeline. &lt;/p&gt;

&lt;p&gt;Importantly, the goal is not to shift security to the left &lt;em&gt;as a discrete phase&lt;/em&gt;; instead, teams should integrate security into every phase of development—design, implementation, verification, and so on. Many of these improvements can be introduced by automating security tests, particularly as a part of the continuous integration and deployment pipeline. &lt;/p&gt;

&lt;p&gt;According to W. Edwards Deming, an American engineer famous for his key principles on transforming business effectiveness, engineering teams should design more secure products from the moment they start building:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Cease dependence on inspection to achieve quality. Eliminate the need for inspection on a mass basis by building quality into the product in the first place.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#why-shift-left"&gt;
  &lt;/a&gt;
  Why shift left?
&lt;/h3&gt;

&lt;p&gt;The benefits of earlier intervention include faster development speed and improved security throughout the organization's DevOps capabilities. Ultimately, the goal of shift-left security and DevSecOps should be to avoid critical bugs and security defects during the deployment phase, while preserving the fast flow of work.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#greater-transparency"&gt;
  &lt;/a&gt;
  Greater transparency
&lt;/h4&gt;

&lt;p&gt;Implementing security measures throughout the value stream improves visibility into security coverage, including the number of defects discovered and any potential security blind spots. &lt;/p&gt;

&lt;p&gt;The consistent monitoring of threats in the delivery pipeline also introduces a high degree of traceability and auditability, which helps teams iterate and improve their security controls after incidents. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#more-secure-codebase"&gt;
  &lt;/a&gt;
  More secure codebase
&lt;/h4&gt;

&lt;p&gt;Shift-left security increases test coverage by encouraging more security testing during the development phase. Additionally, shift-left security enables distributed security, where more team members involved in the development process are responsible for building secure software. &lt;/p&gt;

&lt;p&gt;Shift-left security also inspires better software design, instead of a culture of patching and hotfixes, by making teams more aware of security requirements. Teams can code with security in mind from the outset of a project, avoiding ad-hoc and clumsy fixes in the later stages of development. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#lower-production-costs"&gt;
  &lt;/a&gt;
  Lower production costs
&lt;/h4&gt;

&lt;p&gt;Shift-left security reduces the cost of development by resolving issues before introducing additional dependencies. According to &lt;a href="https://www.researchgate.net/figure/IBM-System-Science-Institute-Relative-Cost-of-Fixing-Defects_fig1_255965523"&gt;IBM researchers&lt;/a&gt;, fixing defects is 15 times more expensive to fix during the testing phase than during the design phase. Worse, that number jumps to 100 times more expensive when defects are fixed during the maintenance phase. &lt;/p&gt;

&lt;p&gt;Fixing security issues earlier requires less effort and rework than if teams wait until after implementation. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#organizational-learning"&gt;
  &lt;/a&gt;
  Organizational learning
&lt;/h4&gt;

&lt;p&gt;Shift-left security introduces key security practices to development teams and equips them with tools that provide fast feedback on their work. These insights help spread knowledge about security best practices throughout the organization, creating a more security-conscious culture. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#improved-response-time"&gt;
  &lt;/a&gt;
  Improved response time
&lt;/h4&gt;

&lt;p&gt;Better collaboration between development and security means issues can be discovered faster and fixed sooner. When coupled with continuous integration, shift-left security helps teams patch newly identified security vulnerabilities in faster release cycles, decreasing the time threat actors can take advantage of them.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#standardization-and-automation"&gt;
  &lt;/a&gt;
  Standardization and automation
&lt;/h4&gt;

&lt;p&gt;DevSecOps encourages teams to adopt highly repeatable and predictable security workflows. They can apply security controls consistently across environments, including containers, databases, serverless functions, and more. Such standardization prevents security issues from accidentally slipping through security controls due to human error. &lt;/p&gt;

&lt;p&gt;Shift-left security also introduces a high degree of automation into the software development life cycle, shortening feedback loops and eliminating handoffs. Teams can continuously decrease the workload of manual testers by iteratively and incrementally offloading routine testing to automated tooling.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#decreased-time-to-market"&gt;
  &lt;/a&gt;
  Decreased time to market
&lt;/h4&gt;

&lt;p&gt;Overall, shift-left security can increase &lt;a href="https://www.software.com/devops-guides/delivery-velocity-score"&gt;delivery speed&lt;/a&gt;. Optimized security workflows and automation mean less wait time for developers and fewer bottlenecks when shipping new features.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-shift-left-in-devsecops"&gt;
  &lt;/a&gt;
  How to shift left in DevSecOps
&lt;/h2&gt;

&lt;p&gt;Adopting shift-left security is not a linear, binary outcome with a strict timeline; instead, it is a continuous process of security improvements over the long-term. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#define-a-strategy"&gt;
  &lt;/a&gt;
  Define a strategy
&lt;/h3&gt;

&lt;p&gt;Before changing any security workflows, engineering and security teams must first agree on standards and expectations for their shift-left initiatives. It's important they decide what shift-left security looks like at their organization, creating a roadmap of iterative, long-term improvements. &lt;/p&gt;

&lt;p&gt;They can also perform a risk-based analysis to decide where to start implementing testing and tooling, balancing potential risk to the organization's security and resources required to implement new workflows. Incident history and can provide a list of high-priority and high-impact areas for improvement. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#understand-the-flow-of-work-in-your-organization"&gt;
  &lt;/a&gt;
  Understand the flow of work in your organization
&lt;/h3&gt;

&lt;p&gt;Next, teams need to understand the flow of work through the software delivery pipeline. The goal is to provide context to security teams about the tools and environments used by developers. They can then create a unified test strategy outlining the tests, tools, and data required for each new security requirement. &lt;/p&gt;

&lt;p&gt;They can also identify opportunities to improve existing workflows so they are more compatible with shift-left security. For example, teams can adopt &lt;a href="https://www.software.com/devops-guides/trunk-based-development-guide"&gt;trunk-based development&lt;/a&gt; to streamline automated security tests. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implement-security-guardrails"&gt;
  &lt;/a&gt;
  Implement security guardrails
&lt;/h3&gt;

&lt;p&gt;When adding security guardrails, the goal is to make security a seamless part of daily work. Teams can introduce these changes into the development pipeline by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  De-emphasizing acceptance and system level testing, while refocusing on unit testing and integration testing.&lt;/li&gt;
&lt;li&gt;  Reducing toolchain complexity with pre-approved tools.&lt;/li&gt;
&lt;li&gt;  Introducing &lt;a href="https://www.software.com/devops-guides/test-automation-guide"&gt;testing automation&lt;/a&gt;, including security workflows directly into continuous integration pipelines.&lt;/li&gt;
&lt;li&gt;  Hardening continuous integration systems with checklists to ensure teams follow best practices.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#continuously-train-and-improve"&gt;
  &lt;/a&gt;
  Continuously train and improve
&lt;/h3&gt;

&lt;p&gt;Shift-left security requires continuous improvement to respond to the ever-changing needs of development and security teams. As part of the ongoing shift left, security teams can be more involved in the early phases of design, reviewing implementation details to advise on potential testing requirements, architecture considerations, and security considerations. &lt;/p&gt;

&lt;p&gt;Development teams can also be kept up to date on the OWASP Top 10, testing best practices, and other security trends. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shift-left-security-best-practices"&gt;
  &lt;/a&gt;
  Shift left security best practices
&lt;/h2&gt;

&lt;p&gt;Shift-left security needs to be implemented with careful consideration for its impact on the development process. Like all DevOps capabilities, it works best when combined with visibility, monitoring, and continuous improvement. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#optimize-test-environments"&gt;
  &lt;/a&gt;
  Optimize test environments
&lt;/h3&gt;

&lt;p&gt;Security testing should also follow the &lt;a href="https://www.software.com/devops-guides/test-automation-guide"&gt;test pyramid&lt;/a&gt; to provide the most valuable feedback to developers at the right time. It's important to implement smaller, faster tests earlier, such as static code analysis, unit tests, and smoke tests. By starting with these smaller tests, developers avoid the need to create full builds to reveal certain security issues. &lt;/p&gt;

&lt;p&gt;Teams should run more comprehensive test suites—such as API, integration, and cross-browser testing—later in the development pipeline. These test suites should be designed to fail fast, stopping builds early if they uncover catastrophic issues. &lt;/p&gt;

&lt;p&gt;Teams should also consider using short-lived testing environments. Long-running environments can quickly become obsolete or require significant upkeep, while temporary environments avoid maintenance costs and outdated data. For example, containers for smoking tests can be created and destroyed quickly according to predefined configurations. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#monitor-pipeline-performance"&gt;
  &lt;/a&gt;
  Monitor pipeline performance
&lt;/h3&gt;

&lt;p&gt;Shift-left security should be highly automated, with tools and tests added directly to the build process. Teams will need to maintain security tests and plan for their upkeep each development cycle. &lt;/p&gt;

&lt;p&gt;As a result, an important part of shift-left security is consistently monitoring pipeline performance. Teams should highlight slow pipelines and jobs, as well as their success rates. The goal is to fine tune their configuration to eliminate false positives, increase speed, or flag outdated tests. They can also identify recurring security weaknesses that require additional tooling earlier in the development cycle. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security-teams-involved-in-design"&gt;
  &lt;/a&gt;
  Security teams involved in design
&lt;/h3&gt;

&lt;p&gt;Requesting feedback from security teams during the design phase helps teams flag potential issues and highlight areas of focus during implementation. Security teams can help teams prevent complex security issues before developers have a chance to build them into the codebase.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#increase-preapproved-tools"&gt;
  &lt;/a&gt;
  Increase pre-approved tools
&lt;/h3&gt;

&lt;p&gt;Standardization and pre-approval for dependencies, packages, toolchains, libraries encourages their use and avoids rework. Overall, it decreases the surface area for security issues by eliminating vulnerable toolchains before they're added into the codebase. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#develop-a-culture-of-visibility"&gt;
  &lt;/a&gt;
  Develop a culture of visibility
&lt;/h3&gt;

&lt;p&gt;Above all, teams should improve visibility into their organization's shift-left security practices. They should make it easy for all team members to understand their organization's security posture, including its strengths and areas for improvements. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#measuring-shift-left-security"&gt;
  &lt;/a&gt;
  Measuring shift left security
&lt;/h2&gt;

&lt;p&gt;To measure the effectiveness of shift-left security, teams should improve visibility into: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Security review time&lt;/strong&gt;. The goal should be to decrease the time required for security reviews so they do not slow the development process. &lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Percentage of security requirements integrated into automated testing&lt;/strong&gt;. Teams should increase the coverage of security requirements performed as part of test automation, which provide faster feedback to developers. &lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Percentage of development tools in use that have been pre-approved&lt;/strong&gt;. Teams should increase their approval coverage until most or all tools used by development teams have been pre-approved by security teams. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#shift-left-security-tools"&gt;
  &lt;/a&gt;
  Shift left security tools
&lt;/h2&gt;

&lt;p&gt;Organizations can implement several different types of tools to help developers shift security to the left. The four main security testing methods include: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Static Application System Testing (SAST) involves scanning source code for vulnerabilities. It's typically fast and cheap because it does not require code to compile or run. &lt;/li&gt;
&lt;li&gt;  Dynamic Application Security Testing (DAST) involves black-boxing testing, exposing an application to common attacks. &lt;/li&gt;
&lt;li&gt;  Interactive Application Security Testing (IAST), a hybrid of SAST and DAST, analyzes running applications and watches behaviors initiated by both manual and automated tests. &lt;/li&gt;
&lt;li&gt;  Runtime Application Self Protection (RASP) integrates with an application to prevent attacks during runtime, blocking or preventing execution based on traffic and user behavior. Two popular tools include OpenRASP and Sqreen. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Teams can also implement security practices to further secure the software supply chain: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Secrets detection: Teams can use tools to scan code for secrets, like API keys, encryption keys, and credentials, to prevent accidental exposure. &lt;/li&gt;
&lt;li&gt;  Dependency scanning: Tools like WhiteSource and FOSSA scan dependencies and open source projects for security issues or identify outdated packages. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#start-small-start-today"&gt;
  &lt;/a&gt;
  Start small, start today
&lt;/h2&gt;

&lt;p&gt;As teams work in increasingly complex development environments—relying on more dependencies, tools, and open source technology—security is more important than ever. With widespread security scares, such as &lt;a href="https://www.zdnet.com/article/log4j-flaw-hunt-shows-how-complicated-the-software-supply-chain-really-is/"&gt;Log4j&lt;/a&gt; and SolarWinds, creating a resilient and security-focused organization can be a daunting task. In 2021 alone, the US-CERT Vulnerability database recorded more than 18,000 vulnerabilities, &lt;a href="https://www.securitymagazine.com/articles/96668-2021-breaks-the-record-for-security-vulnerabilities"&gt;breaking previous records&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;In spite of these challenges, DevSecOps and shift-left security testing offers teams a way to confidently and consistently write more secure code and build safer software. With small, continuous improvements, any engineering team can inspire a culture that prioritizes better security.&lt;/p&gt;

</description>
      <category>security</category>
      <category>devops</category>
    </item>
    <item>
      <title>MongoDB Atlas Hackathon</title>
      <author>zaahmed-nisum-com</author>
      <pubDate>Mon, 10 Jan 2022 20:31:59 +0000</pubDate>
      <link>https://dev.to/zaahmednisumcom/mongodb-atlas-hackathon-1jlb</link>
      <guid>https://dev.to/zaahmednisumcom/mongodb-atlas-hackathon-1jlb</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;I have create a simple full-text search for products, A user can search a product with right any text on input field and hit search than MongoDB Atlas search do the job for me. User can search on basis of different fields and get the desire recordes.&lt;br&gt;
I also create a simple schedule trigger to get the daily order report which will get all the orders on daily basis and create a single entity for single day and add it in a dailyorderreport schema.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;I have choose E-Commerce Creation &amp;amp; Action Star for my project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;

&lt;p&gt;Fronend Repo&lt;code&gt;{% github https://github.com/zaahmed-nisum-com/nisum-vuejs-streamingweb %}&lt;/code&gt;&lt;br&gt;
Backend Repo&lt;code&gt;{% github https://github.com/zaahmed-nisum-com/nodeJS-workshop-nisum/tree/master %}&lt;/code&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;Did't use any&lt;/p&gt;

&lt;p&gt;[Note:] # Screenshots/demo videos&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fd2Cb1SC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ff8yrn2vsdg66aeb53ku.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fd2Cb1SC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ff8yrn2vsdg66aeb53ku.gif" alt="full text search" width="600" height="315"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8_w5om74--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wtrgmbmyqbms12rmc8k6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8_w5om74--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wtrgmbmyqbms12rmc8k6.gif" alt="Trigger for daily order " width="500" height="263"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;App pages urls&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#full-text-search-page"&gt;
  &lt;/a&gt;
  full text search page
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://watchnowweb.herokuapp.com/search"&gt;https://watchnowweb.herokuapp.com/search&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#today-order-trigger-event"&gt;
  &lt;/a&gt;
  today order trigger event
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://watchnowweb.herokuapp.com/orders/todayorders"&gt;https://watchnowweb.herokuapp.com/orders/todayorders&lt;/a&gt;&lt;/p&gt;

</description>
      <category>atlashackathon</category>
      <category>mongodb</category>
    </item>
  </channel>
</rss>
