<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Best Blogging Sites in 2021</title>
      <author>Ashish Yadav</author>
      <pubDate>Thu, 13 May 2021 06:43:03 +0000</pubDate>
      <link>https://dev.to/expoashish/best-blogging-sites-in-2021-5cep</link>
      <guid>https://dev.to/expoashish/best-blogging-sites-in-2021-5cep</guid>
      <description>&lt;p&gt;Are you planning to start writing blogs but not sure which blogging site to use? Here i have listed best blogging sites you can use to start your own blog today:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-wordpressorg"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;1. WordPress.org&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#2-mediumcom"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;2. Medium.com&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#3-bloggercom"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;3. Blogger.com&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#4-wordpresscom"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;4. WordPress.com&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#5-wixcom"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;5. Wix.com&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#6-weeblycom"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;6. Weebly.com&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#7-tumblrcom"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;7. Tumblr.com&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#8-ghostorg"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;8. Ghost.org&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#9-squarespacecom"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;9. Squarespace.com&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#10-devto"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;10. Dev.to&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#and-subscribe-to-our-youtube-channel-bestcodecreator"&gt;
  &lt;/a&gt;
  ðŸŽ¥ðŸ’¡ðŸ”¥AND Subscribe to Our YouTube Channel &lt;a href="https://www.youtube.com/bestcodecreator"&gt;bestcodecreator&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#and-support-our-blogging-site-myblogs"&gt;
  &lt;/a&gt;
  ðŸŽ¥ðŸ’¡ðŸ”¥AND Support Our Blogging site &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;myblogs&lt;/a&gt;
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Thank you for reading this blogðŸ”¥ðŸ”¥.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>techtalks</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How many applications did it take for you to find your first dev job?</title>
      <author>Madza</author>
      <pubDate>Thu, 13 May 2021 06:36:16 +0000</pubDate>
      <link>https://dev.to/madza/how-many-applications-did-it-take-for-you-to-find-your-first-dev-job-3gak</link>
      <guid>https://dev.to/madza/how-many-applications-did-it-take-for-you-to-find-your-first-dev-job-3gak</guid>
      <description>&lt;p&gt;I've heard of hundreds of applications with no success, as well as cases with no applications at all thanks to internships or contacts in the field.&lt;/p&gt;

&lt;p&gt;Thought this could be motivational for beginners, so could you recall how many applications did it take for you to find your first developer job?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>career</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Do you use Docker?</title>
      <author>Madza</author>
      <pubDate>Thu, 13 May 2021 06:20:55 +0000</pubDate>
      <link>https://dev.to/madza/do-you-use-docker-2cb3</link>
      <guid>https://dev.to/madza/do-you-use-docker-2cb3</guid>
      <description>&lt;p&gt;Docker is a platform for building apps based on containers â€” small and lightweight execution environments that make shared use of the operating system kernel but otherwise run in isolation from one another.&lt;/p&gt;

&lt;p&gt;Do you use Docker in your projects?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>docker</category>
      <category>productivity</category>
    </item>
    <item>
      <title>5 Qualities That Make You A Hireable Senior Engineer</title>
      <author>Daine Mawer</author>
      <pubDate>Thu, 13 May 2021 05:58:22 +0000</pubDate>
      <link>https://dev.to/dainemawer/5-qualities-that-make-you-a-hireable-senior-engineer-3j7j</link>
      <guid>https://dev.to/dainemawer/5-qualities-that-make-you-a-hireable-senior-engineer-3j7j</guid>
      <description>&lt;p&gt;As we grow in such a fast-paced industry like technology, we often lose sight of what it takes to get hired. That statement is both true and false. Some of us find ourselves spending long tenures of time at specific companies while the rest of us jump ship rather frequently in order to find greener pastures.&lt;/p&gt;

&lt;p&gt;Through countless hours of learning, failing, and succeeding we eventually reach a point where we are autonomous enough to proactively solve our own challenges. Be that engineering features, tackling a backlog of bugs successfully, or aiding more junior members of the team. These are some of the key points that differentiate less experienced engineers from those who are more experienced.&lt;/p&gt;

&lt;p&gt;However, what does it really boil down to when we label an engineer as "senior"? What should companies be looking for when they advertise the position? And, what qualities should you display in order to grab the attention of recruiters and/or HR departments?&lt;/p&gt;

&lt;p&gt;Here are 5 qualities of senior engineers that I look for and more importantly, rely on:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-arrive-at-a-problem-with-a-solution"&gt;
  &lt;/a&gt;
  1. Arrive at a problem, with a solution.
&lt;/h3&gt;

&lt;p&gt;One of the biggest red flags I see amongst teammates is when an engineer does not come to the party with solutions to a problem. Regardless of whether the solution is correct or the best possible solution for that problem. It's the mindset of providing a solution when faced with a problem that becomes an outstanding quality in a teammate.&lt;/p&gt;

&lt;p&gt;Coming up with your own solutions means that you've given thought to the challenge, in a constructive and pro-active manner. Rather than admitting defeat straight away and declaring "I don't know".&lt;/p&gt;

&lt;p&gt;I can almost guarantee you that the majority of your peers probably have either come across the situation you face or know someone who does, so they're not stressed about the fact that you didn't arrive at the expected outcome, you just showed a willingness to and that's what counts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-you-acknowledge-your-imposter-syndrome"&gt;
  &lt;/a&gt;
  2. You acknowledge your imposter syndrome.
&lt;/h3&gt;

&lt;p&gt;Everyone has imposter syndrome, everyone. It just occurs at relative degrees. When someone new to web development faces a difficult learning curve they think to themselves: "I will never understand this". It's the same thought and gravity as that of a more experienced engineer thinking: "I have no idea how to write this function in the most performant way possible" or "I have no idea how to ensure that this code runs asynchronously". &lt;/p&gt;

&lt;p&gt;In my opinion, the voice inside your head that tells you you can't do something needs to be countered by a voice outside your head that tells you, you can. That voice can be from a mentor or member of a community that you respect. The most important part of dealing with imposter syndrome is acknowledging the fact that you and I both have it and it's okay because it helps push us to do things we don't think we can do.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-you-dive-into-the-unknown"&gt;
  &lt;/a&gt;
  3. You dive into the unknown.
&lt;/h3&gt;

&lt;p&gt;Perhaps one of the most daring parts of being a senior or lead in a tech company is taking ownership and responsibility for code features that you have very little experience with.&lt;/p&gt;

&lt;p&gt;It can be a real struggle, and there will be times when you feel completely hopeless and paralyzed with confusion. There is always light at the end of the tunnel and there will always be someone who has either been through the same thing or knows how to implement what you're working on. &lt;/p&gt;

&lt;p&gt;It's important to carry on leading in a situation like this.&lt;/p&gt;

&lt;p&gt;Saying: "I don't know how to do this...", followed by: "I'm going to time-box it to 2 hours and see where I land up" or "We should bring in person x to help provide clarity" ensures transparency when it comes to dealing with the situation. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-you-dont-know-everything-and-admit-it"&gt;
  &lt;/a&gt;
  4. You don't know everything and admit it.
&lt;/h3&gt;

&lt;p&gt;I haven't spoken much about technical skill here as that can be learnt with repetition and motivation. If you dedicate yourself to learning a new concept or language you will eventually overcome the learning curve and beat it.&lt;/p&gt;

&lt;p&gt;Far too often, companies "go fishing" and look to hire engineers that appear to know almost every computer language available today. No one actually wants to hire that "unicorn". &lt;/p&gt;

&lt;p&gt;Good leaders hire those that can apply their knowledge and skills to challenges. You don't have to know everything about Webpack or Node, or React. Working knowledge is important, and you cannot do your job without it, but every discipline will present a challenge you have no idea how to solve and if you can admit that you are far closer to overcoming it. &lt;/p&gt;

&lt;p&gt;Furthermore, if you never admit that you don't know how to do something, it burns resources, time and patience. 3 things that are very precious.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-you-give-out-and-can-take-criticism"&gt;
  &lt;/a&gt;
  5. You give out and can take criticism.
&lt;/h3&gt;

&lt;p&gt;One of the quickest ways to grow is being able to consume criticism. Be that good or bad. When people identify your shortcomings in a way that allows you to grow and not feel like you've failed, it presents you with an opportunity to better yourself alongside your peers. Sometimes it's really hard to hear, but if you can take it in your stride you will see tremendous amounts of respect headed your way. &lt;/p&gt;

&lt;p&gt;That being said, the way you give out criticism is also really important. No one likes to feel criticised, and the way you handle constructive criticism in code reviews or retrospectives with peers and junior members of the team really shows your worth as a contributing member and leader. &lt;/p&gt;

&lt;p&gt;Today, for just a moment, grab a coffee and think about these 5 points in your career journey. If you place focus on them you will undoubtedly see that your position in a team starts to mould and change, for the better.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>career</category>
      <category>productivity</category>
      <category>motivation</category>
    </item>
    <item>
      <title>49 Days of Ruby: Day 47 -- Testing Frameworks: RSpec</title>
      <author>Ben Greenberg</author>
      <pubDate>Thu, 13 May 2021 05:47:41 +0000</pubDate>
      <link>https://dev.to/bengreenberg/49-days-of-ruby-day-47-testing-frameworks-rspec-4kl3</link>
      <guid>https://dev.to/bengreenberg/49-days-of-ruby-day-47-testing-frameworks-rspec-4kl3</guid>
      <description>&lt;p&gt;&lt;strong&gt;Welcome to day 47 of the 49 Days of Ruby! ðŸŽ‰&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yesterday, we explored the testing library Minitest as we looked at testing implementations in Ruby for the first time.&lt;/p&gt;

&lt;p&gt;Today, we are going to explore RSpec as another testing framework option. RSpec has a lot of "bells and whistles", which can be overwhelming, and you may not need all of them all the time. However, when you do need one of those bells or whistles, you will appreciate the benefits of it being packaged together.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/rspec/rspec"&gt;RSpec&lt;/a&gt; defines itself as:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Behavior driven development for Ruby&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Essentially, RSpec when done within a context of TDD (Test Driven Development), trains the developer to think about the kind of results they want their code to accomplish. It is done using maximally human readable language.&lt;/p&gt;

&lt;p&gt;For example, this is what a test in RSpec might look like, taken from the &lt;a href="https://rspec.info/"&gt;RSpec website&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;RSpec&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;describe&lt;/span&gt; &lt;span class="no"&gt;Bowling&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"#score"&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="s2"&gt;"with no strikes or spares"&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s2"&gt;"sums the pin count for each roll"&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;bowling&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Bowling&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
      &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;times&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;bowling&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bowling&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;score&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Do you notice how verbose that example is? There are keywords like &lt;code&gt;describe&lt;/code&gt;, &lt;code&gt;context&lt;/code&gt;, and &lt;code&gt;it&lt;/code&gt;. All those statements help form a clear human sentence when the test is run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;bin/rspec 

Bowling#score
  with no strikes or spares
    sums the pin count &lt;span class="k"&gt;for &lt;/span&gt;each roll 

Finished &lt;span class="k"&gt;in &lt;/span&gt;0.00137 seconds &lt;span class="o"&gt;(&lt;/span&gt;files took 0.13421 seconds to load&lt;span class="o"&gt;)&lt;/span&gt;
1 example, 0 failures
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You do not need to have the &lt;code&gt;context&lt;/code&gt; block, but it helps add another layer of comprehensibility to a test when running it. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rspec-basics"&gt;
  &lt;/a&gt;
  RSpec Basics
&lt;/h2&gt;

&lt;p&gt;Let's cover a little bit of the basic functionality of RSpec. I encourage you to spend some time today familiarizing yourself more with it and see what kind of tests you can build!&lt;/p&gt;

&lt;p&gt;Imagine we had some code in a file called &lt;code&gt;my_code.rb&lt;/code&gt; and we wanted to test it.&lt;/p&gt;

&lt;p&gt;First, we would &lt;code&gt;require&lt;/code&gt; that file in our test file. The convention is to name the test file the same name as the code file and append &lt;code&gt;_spec&lt;/code&gt; to it: &lt;code&gt;my_code_spec.rb&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# my_code_spec.rb&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"my_code"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's continue our imagined example and say we had a class called &lt;code&gt;Coffee&lt;/code&gt; inside our &lt;code&gt;my_code&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# my_code_spec.rb&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"my_code"&lt;/span&gt;

&lt;span class="no"&gt;RSpec&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;describe&lt;/span&gt; &lt;span class="no"&gt;Coffee&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, now extending it, we also have a class method called &lt;code&gt;#name&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# my_code_spec.rb&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"my_code"&lt;/span&gt;

&lt;span class="no"&gt;RSpec&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;describe&lt;/span&gt; &lt;span class="no"&gt;Coffee&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="s2"&gt;"when asked for a coffee name"&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s2"&gt;"returns the correct name"&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;Coffee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Espresso"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That is a pretty straightforward test. We want to confirm that when the &lt;code&gt;#name&lt;/code&gt; method is invoked that it outputs the string &lt;code&gt;Espresso&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;What if our &lt;code&gt;Coffee&lt;/code&gt; class was a bit more complex and had a lot of parameters to initialize with? Would we have to make a new instance for each test? The &lt;code&gt;subject&lt;/code&gt; convention can help make that less repetitive. Perhaps the &lt;code&gt;#name&lt;/code&gt; method is actually an instance method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# my_code_spec.rb&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"my_code"&lt;/span&gt;

&lt;span class="no"&gt;RSpec&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;describe&lt;/span&gt; &lt;span class="no"&gt;Coffee&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:subject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="no"&gt;Coffee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="ss"&gt;something: &lt;/span&gt;&lt;span class="s2"&gt;"its value"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="ss"&gt;something_else: &lt;/span&gt;&lt;span class="s2"&gt;"its value"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="ss"&gt;another_thing: &lt;/span&gt;&lt;span class="mi"&gt;123456&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="ss"&gt;yet_another_thing: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="ss"&gt;coffee_type: &lt;/span&gt;&lt;span class="s2"&gt;"Espresso"&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;describe&lt;/span&gt; &lt;span class="s2"&gt;"#name"&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s2"&gt;"returns the correct coffee name"&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Espresso"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can continue to reuse that &lt;code&gt;subject&lt;/code&gt; variable, which holds an instance of &lt;code&gt;Coffee&lt;/code&gt; for all of our relevant tests. It can save us a lot of repetitive typing!&lt;/p&gt;

&lt;p&gt;For the rest of the day continue exploring RSpec. Try to write some tests that define your future code's expectations, and then write the code to help those tests pass.&lt;/p&gt;

&lt;p&gt;See you tomorrow!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Come back tomorrow for the next installment of 49 Days of Ruby! You can join the conversation on Twitter with the hashtag &lt;a href="https://twitter.com/hashtag/49daysofruby"&gt;#49daysofruby&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>ruby</category>
    </item>
    <item>
      <title>CoreUI - Open-Source Products</title>
      <author>Sm0ke</author>
      <pubDate>Thu, 13 May 2021 05:15:54 +0000</pubDate>
      <link>https://dev.to/sm0ke/coreui-open-source-products-31p1</link>
      <guid>https://dev.to/sm0ke/coreui-open-source-products-31p1</guid>
      <description>&lt;p&gt;Hello Coders, &lt;/p&gt;

&lt;p&gt;This article presents all free projects crafted by the &lt;a href="https://www.admin-dashboards.com/coreui-open-source-products/"&gt;CoreUI&lt;/a&gt; agency and released under permissive licenses in the open-source ecosystem. Products can be downloaded directly from Github without a registration lock and used for hobby and commercial products.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;(Free) &lt;a href="https://coreui.io/bootstrap"&gt;CoreUI - Bootstrap&lt;/a&gt; version&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://appseed.us/admin-dashboards/flask-dashboard-coreui"&gt;CoreUI - Flask&lt;/a&gt; provided with database, authentication&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://appseed.us/admin-dashboards/django-dashboard-coreui"&gt;CoreUI - Django&lt;/a&gt; simple starter &lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://coreui.io/react"&gt;CoreUI - React&lt;/a&gt; Dashboard&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://coreui.io/vue/"&gt;CoreUI - Vue&lt;/a&gt; Template&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://coreui.io/angular"&gt;CoreUI - Angular&lt;/a&gt; Template&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://coreui.io/laravel"&gt;CoreUI - Laravel&lt;/a&gt; Starter&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://icons.coreui.io"&gt;CoreUI - Free Icons&lt;/a&gt; (1500+ set)&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MqC-Za83--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjcermavpr8jbp0l3ldt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MqC-Za83--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjcermavpr8jbp0l3ldt.png" alt="CoreUI - Open-source Dashboard Template crafted in many tech flavors."&gt;&lt;/a&gt;  &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#coreui-bootstrap"&gt;
  &lt;/a&gt;
  CoreUI Bootstrap
&lt;/h2&gt;

&lt;p&gt;CoreUI is an Open Source Bootstrap Admin Template. But CoreUI is not just another Admin Template. It goes way beyond hitherto admin templates thanks to transparent code and file structure. And if that's not enough, letâ€™s just add that CoreUI consists bunch of unique features and over 1000 high-quality icons.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://coreui.io/bootstrap/"&gt;CoreUI&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://coreui.io/demo/free/3.4.0/"&gt;CoreUI&lt;/a&gt; - LIVE demo&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/coreui/coreui-free-bootstrap-admin-template"&gt;CoreUI&lt;/a&gt; - source code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qZag1gor--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ekin3lc0j3voeged22vb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qZag1gor--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ekin3lc0j3voeged22vb.png" alt="CoreUI Bootstrap."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#coreui-flask"&gt;
  &lt;/a&gt;
  &lt;a href="https://appseed.us/admin-dashboards/flask-dashboard-coreui"&gt;CoreUI Flask&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;CoreUI Dashboard design coded in Flask Framework with SQLite database, ORM and authentication. The product comes with free support via Github (issues tracker) and &lt;a href="https://discord.gg/fZC6hup"&gt;Discord&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/admin-dashboards/flask-dashboard-coreui"&gt;CoreUI Flask&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://flask-coreui.appseed-srv1.com/"&gt;CoreUI Flask&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nLSAF9aS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/axnx3r9vg8s7tiudipvd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nLSAF9aS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/axnx3r9vg8s7tiudipvd.png" alt="CoreUI Flask."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#coreui-django"&gt;
  &lt;/a&gt;
  &lt;a href="https://appseed.us/admin-dashboards/django-dashboard-coreui"&gt;CoreUI Django&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;CoreUI design coded in Django Framework with SQLite database, ORM, and authentication. The product is released on Github under the MIT license and is actively supported via &lt;a href="https://discord.gg/fZC6hup"&gt;Discord&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/admin-dashboards/django-dashboard-coreui"&gt;CoreUI Django&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://django-coreui.appseed-srv1.com/"&gt;CoreUI Django&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fM6G2Xj9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxovb4fmf4o3fizip6vn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fM6G2Xj9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxovb4fmf4o3fizip6vn.png" alt="CoreUI Django."&gt;&lt;/a&gt;   &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#coreui-react"&gt;
  &lt;/a&gt;
  CoreUI React
&lt;/h2&gt;

&lt;p&gt;CoreUI is meant to be the UX game changer. Pure &amp;amp; transparent code is devoid of redundant components, so the app is light enough to offer the ultimate user experience. This means mobile devices also, where the navigation is just as easy and intuitive as on a desktop or laptop.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://coreui.io/react/"&gt;CoreUI React&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://coreui.io/react/demo/free/3.1.1/#/dashboard"&gt;CoreUI React&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/coreui/coreui-free-react-admin-template"&gt;CoreUI React&lt;/a&gt; - source code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XIInd21E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fjuqi340g6lrr32yx90v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XIInd21E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fjuqi340g6lrr32yx90v.png" alt="CoreUI React."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#coreui-vuejs"&gt;
  &lt;/a&gt;
  CoreUI Vuejs
&lt;/h2&gt;

&lt;p&gt;The Vuejs version of CoreUI comes with the same pixel-perfect layout and permissive license. The product can be downloaded and used directly from Github.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://coreui.io/vue/"&gt;CoreUI VueJS&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://coreui.io/vue/demo/free/3.1.1/#/dashboard"&gt;CoreUI VueJS&lt;/a&gt; - LIVE demo&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/coreui/coreui-free-vue-admin-template"&gt;CoreUI VueJS&lt;/a&gt; - source code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nlsf1VkM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwmmsugf9kx338036qd7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nlsf1VkM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwmmsugf9kx338036qd7.png" alt="CoreUI Vuejs."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#coreui-angular"&gt;
  &lt;/a&gt;
  CoreUI Angular
&lt;/h2&gt;

&lt;p&gt;Save thousands of development hours by using ready-made, reusable, and commonly used widgets and UI components. Moreover, CoreUI Angular Admin Template is delivered with a ready-to-use environment, so you don't have to waste time configuring the project. All build scripts and tools are ready to use out of the box. With CoreUI Template you can start a new project in a minute!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://coreui.io/angular"&gt;CoreUI Angular&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://coreui.io/angular/demo/free/2.11.1/#/dashboard"&gt;CoreUI Angular&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/coreui/coreui-free-angular-admin-template"&gt;CoreUI Angular&lt;/a&gt; - source code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A_aKSViR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ifye9kgh3k0lmcldrv8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A_aKSViR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ifye9kgh3k0lmcldrv8.png" alt="CoreUI Angular."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#coreui-laravel"&gt;
  &lt;/a&gt;
  CoreUI Laravel
&lt;/h2&gt;

&lt;p&gt;CoreUI Laravel Admin Panel is 100% compatible with Bootstrap, so if you are familiar with Bootstrap but you demand something more than it provides, then CoreUI Laravel Admin Panel is an answer. On the other hand, if youâ€™re happy to stay with Bootstrap, our admin template goes in hand.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://coreui.io/laravel/"&gt;CoreUI Laravel&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://coreui.io/demo/free/3.4.0/"&gt;CoreUI Laravel&lt;/a&gt; - LIVE demo&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/coreui/coreui-free-laravel-admin-template"&gt;CoreUI Laravel&lt;/a&gt; - source code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z4QzrEQ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rww0pow8myyf7qtq6h4s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z4QzrEQ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rww0pow8myyf7qtq6h4s.png" alt="CoreUI Laravel."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#coreui-icons"&gt;
  &lt;/a&gt;
  CoreUI Icons
&lt;/h2&gt;

&lt;p&gt;CoreUI Icons is an open-source icon set with more than 1500 icons in multiple formats SVG, PNG, and Webfonts. CoreUI Icons are beautifully crafted symbols for common actions and items. You can use them in your digital products for web or mobile app.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://icons.coreui.io"&gt;CoreUI Icons&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/coreui/coreui-icons"&gt;CoreUI Icons&lt;/a&gt; - source code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fBWIll99--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uv3bisa8kheh2uijpzfg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fBWIll99--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uv3bisa8kheh2uijpzfg.png" alt="CoreUI Icons."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Free &lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt; - a curated list published on Dev.to&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/admin-dashboards/open-source"&gt;Open-source Admin Dashboards&lt;/a&gt; - provided by AppSeed&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>react</category>
      <category>vue</category>
      <category>coreui</category>
    </item>
    <item>
      <title>HTML : contenteditable</title>
      <author>Rajesh Kumar Yadav</author>
      <pubDate>Thu, 13 May 2021 05:11:31 +0000</pubDate>
      <link>https://dev.to/rajeshkumaryadavdotcom/html-contenteditable-1dje</link>
      <guid>https://dev.to/rajeshkumaryadavdotcom/html-contenteditable-1dje</guid>
      <description>&lt;p&gt;You can set the HTML5 &lt;code&gt;contenteditable&lt;/code&gt; attribute with the value true (i.e. &lt;code&gt;contentEditable="true"&lt;/code&gt;) to make an element editable in HTML, such as &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p contenteditable&amp;gt;This is an editable paragraph.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Upon clicking on the paragraph, the content of it can be edited similar to an input text field. When the &lt;code&gt;contenteditable&lt;/code&gt; attribute is not set on an element, the element will inherit it from its parent. So all child text of a content editable element will also be editable, but you can turn it off for specific text, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p contenteditable&amp;gt;
 This is an editable paragraph.
 &amp;lt;span contenteditable="false"&amp;gt;But not this.&amp;lt;/span&amp;gt;
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note that an uneditable text element inside an editable element will still have a text cursor as inherited from its&lt;br&gt;
parent as well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset="utf-8"&amp;gt;
&amp;lt;title&amp;gt;HTML5 Editable Elements&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;h1 contentEditable="true"&amp;gt;Your Name&amp;lt;/h1&amp;gt;
    &amp;lt;div contentEditable="true"&amp;gt;You Favorite Movie&amp;lt;/div&amp;gt;
    &amp;lt;p contentEditable="true"&amp;gt;Your Comment&amp;lt;/p&amp;gt;
    &amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;Note:&amp;lt;/strong&amp;gt; Click on the elements and type some text.&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/rkycom"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With all that being said, I highly recommend you keep learning!&lt;/p&gt;

&lt;p&gt;Thank you for reading this article. Please feel free to connect with me on &lt;a href="https://www.linkedin.com/in/www-rajeshkumaryadav-com/"&gt;LinkedIn&lt;/a&gt; and &lt;a href="https://twitter.com/rky_com"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>html</category>
      <category>programming</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Visual NodeJS Programming UsingÂ Node-RED</title>
      <author>ðŸ’» JOHN JARDIN | Integration Architect</author>
      <pubDate>Thu, 13 May 2021 04:40:53 +0000</pubDate>
      <link>https://dev.to/johnjardincodes/visual-nodejs-programming-using-node-red-56n6</link>
      <guid>https://dev.to/johnjardincodes/visual-nodejs-programming-using-node-red-56n6</guid>
      <description>&lt;p&gt;In this article I'm going to introduce you to a &lt;a href="http://nodejs.org"&gt;NodeJS&lt;/a&gt; module that allows you to create and deploy server-side processes by using a visual, drag n drop style interface in your Web Browser. The module I'm referring to is called &lt;a href="http://nodered.org"&gt;Node-RED&lt;/a&gt;: A flow-based programming tool that allows you to design processes (aka Flows) by wiring together &lt;a href="https://microservices.io"&gt;microservices&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#watch-the-video-on-youtube"&gt;
  &lt;/a&gt;
  Watch The Video on YouTube
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ZXzdzJ9ZYKQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Created in 2013, Node-RED was initially intended for visually wiring together the &lt;a href="https://en.wikipedia.org/wiki/Internet_of_things"&gt;Internet of Things&lt;/a&gt;, but as it matured, it evolved into something way more powerful, enough to be deployed as middleware within enterprise production environments. The power behind Node-RED is how it hides boilerplate code from the design interface, allowing you to quickly build and deploy processes and integrations.&lt;/p&gt;

&lt;p&gt;To demonstrate this, I'm going to compare a simple Node App with a Node-RED Flow, which will show you the time saving to be had and why you should be excited to learn this tech:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#simple-nodejs-express%C2%A0app"&gt;
  &lt;/a&gt;
  Simple NodeJS ExpressÂ App
&lt;/h1&gt;

&lt;p&gt;The code below is for a simple &lt;a href="https://expressjs.com"&gt;Express&lt;/a&gt; application that outputs &lt;strong&gt;Hello World&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#serverjs"&gt;
  &lt;/a&gt;
  server.js
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const Express = require('express')
const App = Express()
const HTTP = require('http')
const Cron = require('node-cron')
const Functions = require('./functions')

// Create Route
App.get('/api/greet', (req, res) =&amp;gt; {
   const result = Functions.greet()
   res.send(result)
})

// Start Server
const port = 6025
HTTP.createServer(App).listen(port, () =&amp;gt; {
   console.log('NodeJS App Listening on: ', port)

   // Schedule CRON Job
   Cron.schedule('*/5 * * * * *', () =&amp;gt; {
      Functions.greet()
   })
})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#functionsjs"&gt;
  &lt;/a&gt;
  functions.js
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const greet = () =&amp;gt; {
   const result = 'Hello World'
   console.log(result)
   return result
}
exports.greet = greet
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In &lt;strong&gt;server.js&lt;/strong&gt;, we've got some logic for our Express server, a scheduled process, as well as an endpoint called &lt;strong&gt;/api/greet&lt;/strong&gt;. We then have a &lt;strong&gt;functions.js&lt;/strong&gt; file that exports a &lt;strong&gt;greet()&lt;/strong&gt; function, which returns the text &lt;strong&gt;Hello World&lt;/strong&gt;. The CRON job in &lt;strong&gt;server.js&lt;/strong&gt; runs every 5 seconds, triggering the &lt;strong&gt;greet()&lt;/strong&gt; function on every run. This function is also triggered by the &lt;strong&gt;/api/greet&lt;/strong&gt; endpoint.&lt;/p&gt;

&lt;p&gt;So the point of this exercise is that we're going to trigger the &lt;strong&gt;greet()&lt;/strong&gt; function using 3 events:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Manually via Terminal&lt;/li&gt;
&lt;li&gt;Via a Web API&lt;/li&gt;
&lt;li&gt;Via a schedule&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#packagejson"&gt;
  &lt;/a&gt;
  package.json
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
   "name": "node-red-intro-nodejs-app",
   "version": "0.0.1",
   "description": "Node-RED Intro - NodeJS App",
   "main": "server.js",
   "scripts": {
      "manual": "node -e \"require('./functions').greet()\"",
      "endpoint": "curl http://localhost:6025/api/greet"
   },
   "engines": {
      "node": "12.18.4"
   },
   "author": "Agilit-e",
   "license": "MIT",
   "dependencies": {
      "express": "4.17.1",
      "node-cron": "3.0.0"
   }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;We trigger the function manually by requiring the &lt;strong&gt;functions.js&lt;/strong&gt; in terminal or command prompt, and executing the &lt;strong&gt;greet()&lt;/strong&gt; function. You can see I've added this as a manual script in &lt;strong&gt;package.json&lt;/strong&gt;, which I will trigger by running &lt;code&gt;npm run manual&lt;/code&gt;. This will write &lt;strong&gt;Hello World&lt;/strong&gt; as a response to the console.&lt;/li&gt;
&lt;li&gt;For our next test we start the NodeJS server and trigger the &lt;strong&gt;greet()&lt;/strong&gt; function via an HTTP request. Our endpoint will be &lt;code&gt;http://127.0.01:6025/api/greet&lt;/code&gt;. Because it's a simple &lt;strong&gt;GET&lt;/strong&gt; request, we can just use &lt;strong&gt;curl&lt;/strong&gt; command in Terminal or alternatively open the URL in a browser window. For ease of execution, I have this also as a script in &lt;strong&gt;package.json&lt;/strong&gt;, which I will trigger using &lt;code&gt;npm run endpoint&lt;/code&gt;. You can see &lt;strong&gt;Hello World&lt;/strong&gt; is returned as a response.&lt;/li&gt;
&lt;li&gt;Finally, we can also see that in the background, the scheduled &lt;strong&gt;CRON&lt;/strong&gt; job is printing the response to the console every 5 seconds.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, excluding the time that was taken to set up the base of this project, i.e. the &lt;strong&gt;package.json&lt;/strong&gt;, dependencies and HTTP serverâ€¦creating the HTTP endpoint, the &lt;strong&gt;greet()&lt;/strong&gt; function and the CRON job will take you a couple of minutes if you know what you're doing. For fun, let's see how fast we can achieve this in Node-RED:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; For the Node-RED demo, &lt;a href="https://youtu.be/ZXzdzJ9ZYKQ?t=162"&gt;click here&lt;/a&gt; to watch my video on YouTube or alternatively watch the embedded video above (Fast Forward to minute &lt;a href="https://youtu.be/ZXzdzJ9ZYKQ?t=162"&gt;2:42&lt;/a&gt;). Because we're still at the beginning stages of my &lt;a href="https://www.youtube.com/playlist?list=PLISqeoHsXJYBriF8VE_CrDvNGURq2c2m6"&gt;Node-RED Series&lt;/a&gt; and this is more an introduction article, it will be tough to explain what I'm doing in Node-RED in writing. Apologies for any inconvenience caused.&lt;/p&gt;

&lt;p&gt;Assuming you've watched the the video demo, I trust you enjoyed the fun comparison of native NodeJS and Node-RED. What can take minutes in NodeJS can be achieved in a fraction of the time using Node-RED. Scale that up to a much bigger project and you're going to see a massive time saving.&lt;/p&gt;

&lt;p&gt;Now this is the first article of my &lt;a href="https://www.youtube.com/playlist?list=PLISqeoHsXJYBriF8VE_CrDvNGURq2c2m6"&gt;Up and Running with Node-RED&lt;/a&gt; series, with many more to come that will focus on all areas of Node-RED, from basic to advanced functionality, to real world scenarios. If you're not yet &lt;a href="https://www.youtube.com/bleedingcode"&gt;subscribed&lt;/a&gt; or &lt;a href="https://dev.to/johnjardincodes"&gt;following&lt;/a&gt; me, now would be a great time to do so, so that you're notified when new content is released.&lt;/p&gt;

&lt;p&gt;I want to close off by providing you with a reference to resources that will help you learn more about Node-RED:&lt;/p&gt;

&lt;p&gt;Your first stop will be Node-RED's websiteâ€Š-â€Š&lt;a href="https://nodered.org"&gt;nodered.org&lt;/a&gt;. This site will give you a lot of insight into what Node-RED is, how it works, and provides proper end to end documentation on how to achieve almost anything you want with it. You can find almost anything you need regarding Node-RED, including links to online communities and forums which can be found at the bottom of the home page.&lt;/p&gt;

&lt;p&gt;Finally, I highly recommend you subscribe to the &lt;a href="https://www.youtube.com/channel/UCQaB8NXBEPod7Ab8PPCLLAA"&gt;Node-RED channel&lt;/a&gt; on YouTube, managed by the creators of Node-RED. It includes a number of tutorials as well as live webinars and streams.&lt;/p&gt;

&lt;p&gt;That's it for now. Thanks so much for reading/watching and stayed tuned for much more to come.&lt;br&gt;
CheersÂ :)&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>What are Employers Looking for in Candidates for Fully Remote Jobs?</title>
      <author>vicky209</author>
      <pubDate>Thu, 13 May 2021 04:36:58 +0000</pubDate>
      <link>https://dev.to/vicky209/what-are-employers-looking-for-in-candidates-for-fully-remote-jobs-aa7</link>
      <guid>https://dev.to/vicky209/what-are-employers-looking-for-in-candidates-for-fully-remote-jobs-aa7</guid>
      <description>&lt;p&gt;More and more companies are seeing the benefits of &lt;a href="https://quire.io/blog/p/work-from-home-tips.html"&gt;remote workers&lt;/a&gt; far outweigh any potential drawbacks. And, in part, thatâ€™s why so many jobs are now becoming fully remote.&lt;/p&gt;

&lt;p&gt;Itâ€™s often cheaper both for the employer and the employee if the employee works from home. But not everyone has what it takes to be able to work fully remotely.&lt;/p&gt;

&lt;p&gt;Employers are looking for candidates who are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;effective and efficient communicators &lt;/li&gt;
&lt;li&gt;have good &lt;a href="https://quire.io/blog/p/5-tips-to-improve-time-management-skills.html"&gt;time management&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;independent and trustworthy&lt;/li&gt;
&lt;li&gt;tech savvy&lt;/li&gt;
&lt;li&gt;work well independently for long stretches of time&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Candidates looking for remote jobs who have these traits are most likely to get hired.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-traits-employers-are-looking-for-in-candidates-for-remote-work"&gt;
  &lt;/a&gt;
  5 traits employers are looking for in candidates for remote work
&lt;/h2&gt;

&lt;p&gt;[Remote working culture])(&lt;a href="https://quire.io/blog/p/productivity-tips-during-lockdown.html"&gt;https://quire.io/blog/p/productivity-tips-during-lockdown.html&lt;/a&gt;) has entered a new phase.&lt;/p&gt;

&lt;p&gt;That phase being there is a large remote work force worldwide. And even when the COVID-19 pandemic is over, many companies and organizations are saying they will probably never go 100% back to how it was.&lt;/p&gt;

&lt;p&gt;So how can you land yourself a remote job? There are 5 traits that employers are looking for. Ideally, you want to have all five to be a standout candidate.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-effective-communicator"&gt;
  &lt;/a&gt;
  1. Effective communicator
&lt;/h3&gt;

&lt;p&gt;You have to be an effective and efficient communicator. Because working remotely means staying in &lt;a href="https://quire.io/blog/p/transparency-in-communication.markdown.html"&gt;constant communication&lt;/a&gt; with your team. Which is done through email, video calling, and messaging.&lt;/p&gt;

&lt;p&gt;With the written word being the primary form of communication, itâ€™s vital that you can clearly and succinctly convey ideas in writing.&lt;/p&gt;

&lt;p&gt;Also: itâ€™s very easy to sound curt/rude in writing, so if you can show tact and subtly in your writing this will go a long way to helping your job prospects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-good-with-time-management"&gt;
  &lt;/a&gt;
  2. Good with time management
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://quire.io/blog/p/time-mangement-skills.html"&gt;Time management&lt;/a&gt; is a very broad term that can cover motivation, proactiveness, and organizational skills.&lt;/p&gt;

&lt;p&gt;So, how good are you at staying focused for long stretches of time? Are you able prioritize your tasks and follow-up team members and managers when necessary?&lt;/p&gt;

&lt;p&gt;If you said yes to these, then youâ€™re likely a good fit for remote work.&lt;/p&gt;

&lt;p&gt;After all, these traits are important even if youâ€™re working in an office. But working remotely, they become vital. And if you can demonstrate that you have these traits, you significantly increase your chances of gaining a remote job.&lt;/p&gt;

&lt;p&gt;The other part of time management is working under pressure. Because sometimes deadlines can be brutal. And if youâ€™re not able to work remotely, and under pressure, you may find that remote work is not right for you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-trustworthy-and-independent"&gt;
  &lt;/a&gt;
  3. Trustworthy and independent
&lt;/h3&gt;

&lt;p&gt;These ties into the above point.&lt;/p&gt;

&lt;p&gt;Independent employees have to be &lt;a href="https://quire.io/blog/p/task-management-software-helps-productivity.html"&gt;self-motivated and proactive&lt;/a&gt;. Because, unlike an office environment, most of your work day will be spent unsupervised.&lt;/p&gt;

&lt;p&gt;Youâ€™ve got to be able to show that you can be productive from your home office (even if your home office is your bedroom or lounge room), and that your employer(s) has made the right decision in allowing your to do remote work.&lt;/p&gt;

&lt;p&gt;Trust is one of the biggest reasons many employers wereâ€”and some still areâ€”reluctant to let their employees work from home. And this is partly for another reason: control.&lt;/p&gt;

&lt;p&gt;When employees are in the office itâ€™s easy to see what they are doing. Itâ€™s easy to see who showed up on time and who is late. Whoâ€™s slacking off and whoâ€™s got their nose to the grindstone.&lt;/p&gt;

&lt;p&gt;With remote work, all you can see is the communication (messaging and emails) and the results. Depending on the size and structure of the company, remote working doesnâ€™t provide the same level of observation on an employeeâ€™s day-to-day doings.&lt;/p&gt;

&lt;p&gt;Which bothers some employers. Your trustworthiness and independence are huge factors in determining if youâ€™re a viable candidate for a fully remote job.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-good-with-technologytech-savvy"&gt;
  &lt;/a&gt;
  4. Good with technology/tech savvy
&lt;/h3&gt;

&lt;p&gt;Effective remote working relies on the latest tools and technology to run smoothly. This is why itâ€™s necessary that you are good with technology, a faster learner, and/or are quick to adapt.&lt;/p&gt;

&lt;p&gt;This isnâ€™t to say you have to own the latest gearâ€”the most recent Apple Mac or PC, the latest model. &lt;/p&gt;

&lt;p&gt;There are some good software tools out there to help track tasks, communication, and KPIs. As well as provide enhanced video conferencing experiences.&lt;/p&gt;

&lt;p&gt;Software tools like project management software have really come into their own in the last few years.&lt;/p&gt;

&lt;p&gt;When the pandemic hit, more and more companies realized the importance and value of a project management software tool that could help organize projects, tasks, and employees.&lt;/p&gt;

&lt;p&gt;With projects being broken down into tasks, and then those tasks being organized by priorityâ€”and by team memberâ€”it does make ensuring everyoneâ€™s one the same page a straightforward process.&lt;/p&gt;

&lt;p&gt;Thereâ€™s also the communication aspect. Many &lt;a href="https://quire.io/compare/best-project-management-software-reviews-comparisons"&gt;project management software tools&lt;/a&gt; (like &lt;a href="https://quire.io"&gt;Quire&lt;/a&gt;) have messaging options in the platform. Which allows team members to leave real-time comments on tasks as well as communicate via the message app.&lt;/p&gt;

&lt;p&gt;Familiarity with project management software tools can be a big bonus when applying for fully remote work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-can-work-long-periods-in-solitude"&gt;
  &lt;/a&gt;
  5. Can work long periods in solitude
&lt;/h3&gt;

&lt;p&gt;Make no mistake. This is a very solitary job. You will beâ€”physicallyâ€”on your own.&lt;/p&gt;

&lt;p&gt;And this trait ties back into what weâ€™ve already discussed in points 2 and 3 (time management and independence). If you have no problem sitting at your desk for long periods doing your work, then you will have little problem with a fully remote job.&lt;/p&gt;

&lt;p&gt;But if the idea of sitting alone workingâ€”with only email and messaging for companyâ€”then a fully remote job may not be the best fit for you.&lt;/p&gt;

&lt;p&gt;However, if you have no problem sitting at your computer in a comfortable environment working for 8 hours a day then this will definitely help your candidacy for remote work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-traits-employers-are-looking-for-in-candidates-for-fully-remote-jobs"&gt;
  &lt;/a&gt;
  The traits employers are looking for in candidates for fully remote jobs
&lt;/h2&gt;

&lt;p&gt;The new remote work culture is here to stay. And if you want to succeed and thrive in this culture you need to be able to show employers that you are the ideal candidate for a fully remote job.&lt;/p&gt;

&lt;p&gt;Employers are looking for motivated, independent, reliable, and trustworthy candidates. And if you fit this description, and you can demonstrate it to prospective employers, you have a far greater chance than most of landing a remote job.&lt;/p&gt;

</description>
      <category>productivity</category>
    </item>
    <item>
      <title>Five reasons to use Full Stack React Node js for your next project!
</title>
      <author>Alexis Gilbert</author>
      <pubDate>Thu, 13 May 2021 04:35:44 +0000</pubDate>
      <link>https://dev.to/alexisdevs/five-reasons-to-use-full-stack-react-node-js-for-your-next-project-4nma</link>
      <guid>https://dev.to/alexisdevs/five-reasons-to-use-full-stack-react-node-js-for-your-next-project-4nma</guid>
      <description>&lt;p&gt;React js and Node js is considered one of the exceptional technologies of javascript.&lt;/p&gt;

&lt;p&gt;The main objective of ReactJS is to provide rapidness, scalability and flexibility to the large size of applications as a robust frontend technology.&lt;/p&gt;

&lt;p&gt;Whereas, Nodejs possess a single-threaded nature which allows it to cater to real-time and push-based web applications,&lt;/p&gt;

&lt;p&gt;This undoubtedly puts this technology into a strong candidate list for backend technologies.&lt;/p&gt;

&lt;p&gt;When these two robust technologies come together in the picture, strong backend and frontend Imagine, how extensive and top-notch web application can be made!&lt;/p&gt;

&lt;p&gt;Still not convinced? Okay, I am going to give you the top five reasons why you should get these front end and backend technologies or a &lt;strong&gt;Full stack React Node js Developer&lt;/strong&gt; for your project who can give you prominent results by optimizing these amazing two technologies!&lt;/p&gt;

&lt;p&gt;So letâ€™s get started!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RbTjM47u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pz8r0inan7ib4ijg1049.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RbTjM47u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pz8r0inan7ib4ijg1049.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#profound-maintenance-for-the-dynamic-web-applications"&gt;
  &lt;/a&gt;
  Profound Maintenance for the dynamic web applications
&lt;/h1&gt;

&lt;p&gt;When your web applications fall under Real-time Applications, which have to maintain the real-time data and information Reactjs and Nodejs is the pioneer in such requirements.&lt;/p&gt;

&lt;p&gt;It works exceptionally well with such applications due to their nature and primary functionality.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#handles-high-server-load"&gt;
  &lt;/a&gt;
  Handles High Server load
&lt;/h1&gt;

&lt;p&gt;Yes, itâ€™s true, often it happens where servers make requests several times in a short span of a period and sometimes if your backend is not strong enough you lost the ability to handle the server load efficiently.&lt;/p&gt;

&lt;p&gt;However, this doesnâ€™t happen with noadJS as it is built that way to cater to server request rapidly no matter how much it is, balancing the server load with perfect balance!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#full-stack-react-node-js-developer-is-the-best-with-a-single-page-application"&gt;
  &lt;/a&gt;
  full stack react node js developer is the best with a single page application
&lt;/h1&gt;

&lt;p&gt;Single-page applications can be made with the smoothest UI/UX features and utmost user-friendliness with ReactJS with just minimum resources and efforts &lt;/p&gt;

&lt;p&gt;Whilst, the backend must be strong enough to handle the database most efficiently, in which NodeJS wins the race quite effortlessly.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#build-mern-stack-applications"&gt;
  &lt;/a&gt;
  Build MERN stack applications
&lt;/h1&gt;

&lt;p&gt;Everyone, working in the industry of web applications is aware of this extensive framework, MERN. &lt;/p&gt;

&lt;p&gt;Combination of MongoDB, ExpressJS, ReactJS and finally NodeJS as a cherry on the top of the cake.&lt;/p&gt;

&lt;p&gt;This combination nevertheless, one of the robust framework which ideally works best for the sites like E-commerce, banking sector or the healthcare web application.&lt;/p&gt;

&lt;p&gt;My point is it works the best even better when the web application is having a larger size and complex in nature.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#building-json-for-the-apis"&gt;
  &lt;/a&gt;
  Building JSON for the APIs
&lt;/h1&gt;

&lt;p&gt;For Javascript object notion the JSON file is widely known for. It facilitates the procedure of transferring the data between your server and web application.&lt;/p&gt;

&lt;p&gt;I donâ€™t think I need to state the importance of APIs in the process of the development process here.&lt;/p&gt;

&lt;p&gt;As a developer, you must take particular data or input from the user and provide output as a result of that input.&lt;/p&gt;

&lt;p&gt;Now nodeJS works as creating a reusable code that can also be accessed by the ReactJS. This process ultimately reduces your efforts and gives you optimum results.&lt;/p&gt;

&lt;p&gt;To sum up all things, I believe that now I may have convinced you of this amazing combination of These two robust technologies that can bring some exceptional results to your business project out there.&lt;/p&gt;

&lt;p&gt;I suggest you shall get the assistance of an expert on this matter, as they are highly skilled &lt;a href="https://www.bacancytechnology.com/node-js-development"&gt;&lt;strong&gt;Node.js developer&lt;/strong&gt;&lt;/a&gt; who knows the functionalities of both the technologies and can work very well with both, Otherwise, the technologies are capable of handling your project with utmost functionalities!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>devops</category>
    </item>
    <item>
      <title>Straight Insertion Sort Using C</title>
      <author>skptricks</author>
      <pubDate>Thu, 13 May 2021 04:20:20 +0000</pubDate>
      <link>https://dev.to/skptricks_93/straight-insertion-sort-using-c-1110</link>
      <guid>https://dev.to/skptricks_93/straight-insertion-sort-using-c-1110</guid>
      <description>&lt;p&gt;Insertion sort is a simple sorting algorithm that builds the final sorted array (or list) one item at a time.&lt;/p&gt;

&lt;p&gt;Straight Insertion Sort using C&lt;/p&gt;

&lt;p&gt;Letâ€™s say we have an array a, so at each i-th pass, a[i] is successively compared with a[i-1], a[i-2], etc. until an element smaller than a[i] is found or the beginning of the array is reached. Elements that are found to be greater than a[i], are moved right by one position each to make room for a[i].&lt;/p&gt;

&lt;p&gt;The time complexity of this algorithm is O(n^2).&lt;/p&gt;

&lt;p&gt;The complete source code is given below&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.skptricks.com/2021/05/straight-insertion-sort-using-c.html"&gt; Read More...&lt;/a&gt;&lt;/p&gt;

</description>
      <category>c</category>
      <category>programming</category>
      <category>coding</category>
      <category>career</category>
    </item>
    <item>
      <title>Journey to the real world by cloning DEV.to backend server(part 3)</title>
      <author>Harsh Mangalam</author>
      <pubDate>Thu, 13 May 2021 04:15:33 +0000</pubDate>
      <link>https://dev.to/harshmangalam/journey-to-the-real-world-by-cloning-dev-to-backend-server-part-3-2bl9</link>
      <guid>https://dev.to/harshmangalam/journey-to-the-real-world-by-cloning-dev-to-backend-server-part-3-2bl9</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;In the last series we have installed the required minimum dependencies to setup our project as we will move further in this project we will install our required dependencies according to requirement.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Apollo server use schema first approach to write graphql query which create not much problem in smaller project but when your project grows and required better type for your schema then you should go through &lt;code&gt;nexus schema&lt;/code&gt; which is code first approach to write graphql schema.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In this project we will use apollo server schema first approach for simplicity and we will explore the Query , Mutation and Subscription to design our application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At first we will setup prisma with javascript and postgresql.&lt;br&gt;
If you want to setup prisma for typescript or any other database you can explore &lt;a href="https://www.prisma.io/docs/getting-started/setup-prisma/start-from-scratch-typescript-postgres"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;we have already install prisma as a dev dependencies in our previous series. You can setup postgresql on ubuntu using &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-install-postgresql-on-ubuntu-20-04-quickstart"&gt;this&lt;/a&gt; blog post on digital ocean&lt;/p&gt;

&lt;p&gt;open the terminal at the root of your project devblog_server and generate prisma project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx prisma init

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will initialize a brand new prisma project containing a folder &lt;code&gt;prisma&lt;/code&gt; which contain &lt;code&gt;schema.prisma&lt;/code&gt; file &lt;code&gt;schema.prisma&lt;/code&gt; is a only one source of truth for our database model . If we want to create any table in and connect to any type of database whole configuration and model creation can be done in this file.&lt;/p&gt;

&lt;p&gt;You will notice &lt;code&gt;prisma init&lt;/code&gt; also create a &lt;code&gt;.env&lt;/code&gt; file . &lt;code&gt;.env&lt;/code&gt; file is a configuration file which is useful in case of storing any secrets that your application required. We can install it manually using &lt;code&gt;pnpm add dotenv&lt;/code&gt; if you are working on nodejs.But prisma automatically install it in our dependencies so we have not required to install it here.&lt;/p&gt;

&lt;p&gt;open &lt;code&gt;.env&lt;/code&gt; file you will see there is one field which prisma create for you to connect to database. Here we will using postgresql so it will seem like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;DATABASE_URL="postgresql://postgres:harsh12345@localhost:5432/devblog"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;DATABASE_URL is field that can used as a environment variable in our nodejs file to get data stored in it&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;postgres:harsh12345&lt;/code&gt; contain postgresql username and password  &lt;code&gt;username:password&lt;/code&gt; it use UNIX like authentication flow which contain role for different user.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;@localhost:5432&lt;/code&gt; is a host and port on which postgresql server is up and running.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;devblog&lt;/code&gt; is our database name which  prisma will automatically create for us when we will apply our first migration&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;do not push &lt;code&gt;.env&lt;/code&gt; file to github always add &lt;code&gt;.env&lt;/code&gt; in you &lt;code&gt;.gitignore&lt;/code&gt; file because it contain all of your secrets and connection url when we will deploy this project we will see how we will use heroku postgres url for now we will use local postgres server on machine.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lets create some folder structure for our project. Every one have their own way to create project structure . I also follow my own way to configure it. I have created it like this it can scale and easily add new features in future&lt;/p&gt;

&lt;p&gt;At first create &lt;code&gt;src/&lt;/code&gt; directory in your root level . for us our root level is &lt;code&gt;devblog_server&lt;/code&gt; . &lt;br&gt;
Then create &lt;code&gt;server.js&lt;/code&gt; file where we will configure our server&lt;/p&gt;

&lt;p&gt;&lt;code&gt;server.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const { ApolloServer ,gql} = require("apollo-server-express");
const context = require("./context");
const http = require("http");
const express = require("express");
const { PORT } = require("./config");

const typeDefs  = gql`
type Query {
   hello : String!
}

`
const resolvers = {
 Query :{
     hello(){
   return "welcome the real world"
    }
 }

async function startApolloServer() {
  const app = express();

  const server = new ApolloServer({
    typeDefs,
    resolvers,
    context,
    tracing: true, // tracing trace our request and response time and much more.
  });
  await server.start();


  server.applyMiddleware({ app });

// testing for REST endpoints through express server

  app.use((req, res, next) =&amp;gt; {
    return res.status(200).json({
      success: true,
      message: "Express server up &amp;amp; running",
    });
  });

  const httpServer = http.createServer(app);

  server.installSubscriptionHandlers(httpServer);

  await new Promise((resolve) =&amp;gt; httpServer.listen(PORT, resolve));
  console.log(`ðŸš€ Express Server ready at http://localhost:${PORT}`);
  console.log(
    `ðŸš€ Graphql Server ready at http://localhost:${PORT}${server.graphqlPath}`
  );
  console.log(
    `ðŸš€ Subscriptions ready at ws://localhost:${PORT}${server.subscriptionsPath}`
  );
}

startApolloServer();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above we have imported and instanceated Apollo server , express server and native nodejs  http server to handle all of our subscriptions , mutation and query.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tracing&lt;/code&gt; is work like and even better than morgan . In &lt;code&gt;REST&lt;/code&gt; world we use &lt;code&gt;morgan&lt;/code&gt; to log our req and res time tracing do the same job in graphql playground . we will see graphql playground in our next series when we start our first server.&lt;/p&gt;

&lt;p&gt;create &lt;code&gt;context.js and config.js in src/ folder&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;context.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
const prisma = require("./prisma");

module.exports = ({ req, res }) =&amp;gt; {


  return {
    prisma,
  };
};


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;here we imported prisma and pass to context of apollo server so that prisma can available in all of our resolvers. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Be careful do not create new instance of PrismaClient in your every resolvers because it will impact your application performance . you can read about performance optimization in prisma docs &lt;a href="https://www.prisma.io/docs/guides/performance-and-optimization/connection-management"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;config.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;exports.PORT = process.env.PORT

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;.env&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
PORT=4000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;we knew that when we will deploy our backend on heroku their PORT randomly assigned hence there PORT will automatically configured using heroku environment variable&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In our next series we start our server on localhost and apply our first migration by creating user and post model.&lt;/p&gt;

</description>
      <category>node</category>
      <category>apollo</category>
      <category>express</category>
      <category>prisma</category>
    </item>
  </channel>
</rss>
