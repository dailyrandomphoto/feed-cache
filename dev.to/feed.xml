<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>peviitor.ro - arhitectura</title>
      <author>Boga Sebastian Nicolae</author>
      <pubDate>Wed, 29 Dec 2021 17:18:50 +0000</pubDate>
      <link>https://dev.to/sebiboga/peviitorro-arhitectura-5dnf</link>
      <guid>https://dev.to/sebiboga/peviitorro-arhitectura-5dnf</guid>
      <description>&lt;p&gt;Arhitectura motorului de cautare &lt;code&gt;peviitor.ro&lt;/code&gt; este simpla.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_ZZvDAfz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvgo1f424jah15opgml7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_ZZvDAfz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvgo1f424jah15opgml7.png" alt="arhitectura aplicatiei" width="825" height="740"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#websiteul-companiei"&gt;
  &lt;/a&gt;
  Website-ul companiei
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;Sursa de date&lt;/code&gt; este sectiunea cariere a website-ului companiei. De aici ne aducem locurile de munca disponibile.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#scraper"&gt;
  &lt;/a&gt;
  Scraper
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;Fiecare website va avea un scraper&lt;/code&gt;. Rolul scraperului este de a prelua informatia de pe website-ul companiei si de a prelucra informatia astfel incat sa respecte standardul acceptat de API. Tot scraperul se ocupa de a trimite datele spre indexul motorului de cautare.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ui"&gt;
  &lt;/a&gt;
  UI
&lt;/h4&gt;

&lt;p&gt;UI se refera la interfata utilizator. In fiecare versiune incercam sa aducem functionalitati noi. Incercam sa facem aceasta interfata &lt;code&gt;cat mai simpla&lt;/code&gt; nu doar din perspectiva "Usability" ci si din perspectiva scrierii codului.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#api"&gt;
  &lt;/a&gt;
  API
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;Interfata aplicatiei programabila&lt;/code&gt; este expusa pentru ca partea de interfata utilizator sa extraga datele si a le prezenta spre utilizator.&lt;br&gt;
Totodata API-ul este responsabil si de acceptarea sau nu a informatiilor furnizate de catre scraper.&lt;br&gt;
Cu fiecare versiune incercam sa aducem imbunatatiri pe partea de securitate de aceea, API-ul va fi organizat pe versiuni.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#index"&gt;
  &lt;/a&gt;
  Index
&lt;/h4&gt;

&lt;p&gt;Am spus de la inceput index si nu baza de date pentru ca informatiile sunt foarte volatile. Sursa de date este practic website-ul companiei si nu ne propunem sa duplicam datele insa e necesar sa aducem anumite informatii in index pentru ca &lt;code&gt;pe index cautarea se face impecabil de repede&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Cam atat am dorit sa dezvaluim despre arhitectura acestui motor de cautare. Ramane sa detaliem fiecare sectiune odata cu promovarea fiecarei versiuni. Tehnologiile implicate pe fiecare sectiune vor fi explicate in articolele despre &lt;code&gt;versiuni&lt;/code&gt;.&lt;/p&gt;

</description>
      <category>searchengine</category>
      <category>peviitor</category>
      <category>job</category>
      <category>locuridemunca</category>
    </item>
    <item>
      <title>How to Handle App Lifecycle in the Flutter App?</title>
      <author>Pankaj Das</author>
      <pubDate>Wed, 29 Dec 2021 16:54:43 +0000</pubDate>
      <link>https://dev.to/pankajdas0909/how-to-handle-app-lifecycle-in-the-flutter-app-5bii</link>
      <guid>https://dev.to/pankajdas0909/how-to-handle-app-lifecycle-in-the-flutter-app-5bii</guid>
      <description>&lt;p&gt;The most confusing idea transitioning from Android and/or iOS is to understand how Flutter manages its lifecycle. For this, first, you need to know about what is &lt;a href="https://flutteragency.com/what-is-flutter-application-lifecycle/"&gt;Flutter Application Lifecycle&lt;/a&gt;. So now, let us begin with how to handle the App Lifecycle in the Flutter app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-handle-app-lifecycle-in-the-flutter-app"&gt;
  &lt;/a&gt;
  How to handle App Lifecycle in the flutter App?
&lt;/h2&gt;

&lt;p&gt;The state in which it is described is called enum class &lt;a href="https://docs-flutter-io.firebaseapp.com/flutter/dart-ui/AppLifecycleState-class.html"&gt;AppLifecycleState&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The method called when the system puts the app in the background or returns the app to the foreground is called &lt;a href="https://api.flutter.dev/flutter/widgets/WidgetsBindingObserver/didChangeAppLifecycleState.html"&gt;didChangeAppLifecycleState&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;you can use this as an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class AppLifecycleReactor extends StatefulWidget
{
  @override
  _AppLifecycleReactorState createState() =&amp;gt; _AppLifecycleReactorState();
}

class _AppLifecycleReactorState extends State with WidgetsBindingObserver {

  @override
  void initState(){
    super.initState();
    WidgetsBinding.instance!.addObserver(this);
  }

  @override
  void dispose(){
    super.dispose();
    WidgetsBinding.instance!.removeObserver(this);
  }

  @override
  void didChangeAppLifecycleState(AppLifecycleState state) {
    super.didChangeAppLifecycleState(state);
    print("App Lifecycle State : $state");
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold();
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h2&gt;

&lt;p&gt;In this article, we learned about How to handle App Lifecycle in the flutter App.&lt;/p&gt;

&lt;p&gt;Also, check the article for &lt;a href="https://flutteragency.com/how-to-check-whether-application-is-in-foreground-or-not-in-flutter/"&gt;checking whether the application is in the foreground or not&lt;/a&gt;…&lt;/p&gt;

&lt;p&gt;Thanks for being with us on a Flutter Journey !!!&lt;/p&gt;

&lt;p&gt;Keep Fluttering!!! Keep Learning!!!&lt;/p&gt;

&lt;p&gt;Let us know about your doubts in the comment section.&lt;/p&gt;

&lt;p&gt;Flutter Agency is a popular &lt;a href="https://flutteragency.com/"&gt;Flutter development company&lt;/a&gt; dedicated to Flutter information, news, updates. The portal is full of cool resources from Flutter like Widget Guide, Flutter Projects, templates, themes and etc.&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>app</category>
      <category>development</category>
    </item>
    <item>
      <title>Linear Search Simple Implementation in Java</title>
      <author>Pratik</author>
      <pubDate>Wed, 29 Dec 2021 16:46:58 +0000</pubDate>
      <link>https://dev.to/pratikdhame/linear-search-simple-implementation-4j32</link>
      <guid>https://dev.to/pratikdhame/linear-search-simple-implementation-4j32</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GEx96wFT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/798fa31gewmfqkjkph49.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GEx96wFT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/798fa31gewmfqkjkph49.png" alt="Image description" width="880" height="537"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>Some DevOps Terms definitions</title>
      <author>Maxime Guilbert</author>
      <pubDate>Wed, 29 Dec 2021 16:25:34 +0000</pubDate>
      <link>https://dev.to/adaendra/some-devops-terms-definitions-1h8o</link>
      <guid>https://dev.to/adaendra/some-devops-terms-definitions-1h8o</guid>
      <description>&lt;p&gt;In this post, I will list some of the terms used in the DevOps world which must be known &lt;em&gt;(and have a better understanding about all the DevOps posts/books/videos... that you can read/see)&lt;/em&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#automation"&gt;
  &lt;/a&gt;
  Automation
&lt;/h3&gt;

&lt;p&gt;DevOps automation is the addition of technology that performs tasks with reduced human assistance to processes that facilitate feedback loops between operations and development teams so that iterative updates can be deployed faster to applications in production.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From RedHat - &lt;a href="https://www.redhat.com/en/topics/automation/what-is-devops-automation"&gt;Full Definition&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#breaking-change"&gt;
  &lt;/a&gt;
  Breaking change
&lt;/h3&gt;

&lt;p&gt;An application/library has a breaking change when your consumers must do a change in their calls to continue to use a feature.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;&lt;br&gt;
Changing a route from "/actors" to "/actor/list".&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#container"&gt;
  &lt;/a&gt;
  Container
&lt;/h3&gt;

&lt;p&gt;It is a standardized unit that includes everything needed to run the software, including code and dependencies. Containers enable an application to run in a fast and reliable manner when it’s moved from one computing environment to another.&lt;/p&gt;

&lt;p&gt;Docker, ContainerD and LXC are tools which create containers.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#cd-continuous-deployment"&gt;
  &lt;/a&gt;
  CD - Continuous Deployment
&lt;/h3&gt;

&lt;p&gt;Continuous Deployment (CD) is a software release process that uses automated testing to validate if changes to a codebase are correct and stable for immediate autonomous deployment to a production environment.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From Atlassian - &lt;a href="https://www.atlassian.com/continuous-delivery/continuous-deployment"&gt;Full Definition&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#ci-continuous-integration"&gt;
  &lt;/a&gt;
  CI - Continuous Integration
&lt;/h3&gt;

&lt;p&gt;Continuous integration (CI) is the practice of automating the integration of code changes from multiple contributors into a single software project. It’s a primary DevOps best practice, allowing developers to frequently merge code changes into a central repository where builds and tests then run. Automated tools are used to assert the new code’s correctness before integration.&lt;/p&gt;

&lt;p&gt;A source code version control system is the crux of the CI process. The version control system is also supplemented with other checks like automated code quality tests, syntax style review tools, and more.  &lt;/p&gt;

&lt;p&gt;&lt;em&gt;From Atlassian - &lt;a href="https://www.atlassian.com/continuous-delivery/continuous-integration"&gt;Full Definition&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#devops"&gt;
  &lt;/a&gt;
  DevOps
&lt;/h3&gt;

&lt;p&gt;A fusion of the words “development” and “operations,” describing a design philosophy where development and operations teams collaborate on software development and deployment. The goal of this new process is to increase software production agility while achieving business goals.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#devsecops"&gt;
  &lt;/a&gt;
  DevSecOps
&lt;/h3&gt;

&lt;p&gt;The process of bringing security into DevOps methodology and giving it a significant role.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#docker"&gt;
  &lt;/a&gt;
  Docker
&lt;/h3&gt;

&lt;p&gt;Docker is a set of platform as a service (PaaS) products that use OS-level virtualization to deliver software in packages called containers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From Wikipedia - &lt;a href="https://en.wikipedia.org/wiki/Docker_(software)"&gt;Full page&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#iac-infrastructure-as-code"&gt;
  &lt;/a&gt;
  IaC - Infrastructure as Code
&lt;/h3&gt;

&lt;p&gt;Infrastructure as Code (IaC) is the management of infrastructure (networks, virtual machines, load balancers, and connection topology) in a descriptive model, using the same versioning as DevOps team uses for source code. Like the principle that the same source code generates the same binary, an IaC model generates the same environment every time it is applied. IaC is a key DevOps practice and is used in conjunction with continuous delivery.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From Microsoft - &lt;a href="https://docs.microsoft.com/en-us/devops/deliver/what-is-infrastructure-as-code"&gt;Full definition&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#kubernetes"&gt;
  &lt;/a&gt;
  Kubernetes
&lt;/h3&gt;

&lt;p&gt;Kubernetes, also known as K8s, is an open-source system for automating deployment, scaling, and management of containerized applications.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From Kubernetes - &lt;a href="https://kubernetes.io/"&gt;Website&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#monitoring"&gt;
  &lt;/a&gt;
  Monitoring
&lt;/h3&gt;

&lt;p&gt;DevOps monitoring entails overseeing the entire development process from planning, development, integration and testing, deployment, and operations. It involves a complete and real-time view of the status of applications, services, and infrastructure in the production environment. Features such as real-time streaming, historical replay, and visualizations are critical components of application and service monitoring.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From Atlassian - &lt;a href="https://www.atlassian.com/devops/devops-tools/devops-monitoring"&gt;Full Post about DevOps Monitoring&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#pipeline"&gt;
  &lt;/a&gt;
  Pipeline
&lt;/h3&gt;

&lt;p&gt;A pipeline is a set of automated processes and tools to collaborate to an objective &lt;em&gt;(building a project, deploying application to an environment, create/update some infrastructure...)&lt;/em&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#regression-testing"&gt;
  &lt;/a&gt;
  Regression testing
&lt;/h3&gt;

&lt;p&gt;The testing of a software application to confirm that any recent changes made to an application haven’t adversely affected any features that were already in place.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#sla-service-level-agreement"&gt;
  &lt;/a&gt;
  SLA - Service Level Agreement
&lt;/h3&gt;

&lt;p&gt;An SLA (service level agreement) is an agreement between provider and client about measurable metrics like uptime, responsiveness, and responsibilities. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;From Atlassian - &lt;a href="https://www.atlassian.com/incident-management/kpis/sla-vs-slo-vs-sli"&gt;SLA vs SLO vs SLI&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#sli"&gt;
  &lt;/a&gt;
  SLI
&lt;/h3&gt;

&lt;p&gt;An SLI (service level indicator) measures compliance with an SLO (service level objective).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From Atlassian - &lt;a href="https://www.atlassian.com/incident-management/kpis/sla-vs-slo-vs-sli"&gt;SLA vs SLO vs SLI&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#slo"&gt;
  &lt;/a&gt;
  SLO
&lt;/h3&gt;

&lt;p&gt;An SLO (service level objective) is an agreement within an SLA about a specific metric like uptime or response time.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From Atlassian - &lt;a href="https://www.atlassian.com/incident-management/kpis/sla-vs-slo-vs-sli"&gt;SLA vs SLO vs SLI&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#test-automation"&gt;
  &lt;/a&gt;
  Test automation
&lt;/h3&gt;

&lt;p&gt;Using specialized software to control the execution of tests and compare actual outcomes against predicted outcomes.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From SimpleLearn - &lt;a href="https://www.simplilearn.com/top-devops-terms-you-should-know-article"&gt;Full post&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#uptime"&gt;
  &lt;/a&gt;
  Uptime
&lt;/h3&gt;

&lt;p&gt;Time during the application is available and works correctly.&lt;/p&gt;




&lt;p&gt;I've surely missed other important terms, so don't hesitate to ask for them in the comments.&lt;/p&gt;

&lt;p&gt;I hope it will help you! 🍺&lt;/p&gt;

</description>
      <category>devops</category>
    </item>
    <item>
      <title>Quantum Computing with Javascript using Q.js</title>
      <author>Saji Wang</author>
      <pubDate>Wed, 29 Dec 2021 15:58:28 +0000</pubDate>
      <link>https://dev.to/codesphere/quantum-computing-with-javascript-using-qjs-31k0</link>
      <guid>https://dev.to/codesphere/quantum-computing-with-javascript-using-qjs-31k0</guid>
      <description>&lt;p&gt;While Quantum Computing may feel like a new buzzword, it’s been around for quite a long time. What started as a theoretical idea in the 1980s is slowly becoming a reality. &lt;/p&gt;

&lt;p&gt;In this tutorial, we’ll be talking about how Quantum computing works and how you can use Javascript to simulate a simple Quantum circuit that you can play around with.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#what-is-quantum-computing"&gt;
  &lt;/a&gt;
  What is Quantum Computing?
&lt;/h3&gt;

&lt;p&gt;Quantum computing is a form of computation that harnesses the power and potential of Quantum Mechanics. Unlike classical computing that works with transistors and bit values 0 and 1, quantum computing uses the properties exhibited by subatomic particles to perform computations and solve problems too complex for classical computers.&lt;/p&gt;

&lt;p&gt;It utilizes what’s known as qubits, which can have values 0, 1, or both 0 and 1 at the same time. This property of having two values at the same time is a feature of superposition and is only possible within quantum states and not classical ones.&lt;/p&gt;

&lt;p&gt;Devices that perform quantum computations are known as quantum computers. These are specially designed and maintained to be able to harness the various properties of quantum states. It is seen that quantum computers are gaining tremendous attention and are considered to be the future of computing. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#applications-of-quantum-computing"&gt;
  &lt;/a&gt;
  Applications of Quantum Computing
&lt;/h3&gt;

&lt;p&gt;Any problem that can be solved by a classical computer can be solved by a quantum computer. More importantly, some potential applications that become possible or exponentially more efficient with Qubits include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cryptography&lt;/li&gt;
&lt;li&gt;Quantum Chemistry &amp;amp; computer-aided drug design&lt;/li&gt;
&lt;li&gt;Simulating quantum systems&lt;/li&gt;
&lt;li&gt;Machine learning&lt;/li&gt;
&lt;li&gt;Computational biology&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since applications in quantum need specialized hardware, we use classical computers to simulate quantum computer behavior with the help of languages like python, JavaScript, etc. Here, we have a short example to create bell state circuits in JavaScript and further simulate the quantum behavior.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#what-well-be-making"&gt;
  &lt;/a&gt;
  What we’ll be making
&lt;/h3&gt;

&lt;p&gt;By using a library called &lt;a href="https://quantumjavascript.app/"&gt;Q.js&lt;/a&gt; we can run basic quantum computing circuits inside the Javascript console and add the results to the HTML page. Q.js is an open-source JavaScript library that helps in creating and simulating various quantum circuits.&lt;/p&gt;

&lt;p&gt;Here we are going to have a look at how to use the Q.js library to create a Bell state circuit and simulate it. The Bell state is a special and important quantum circuit involving two qubits. It creates entangled pairs of qubits which have various uses. This circuit is designed using a Hadamard gate(H) and a Controlled-Not gate(CX).&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#demo-circuit"&gt;
  &lt;/a&gt;
  Demo Circuit
&lt;/h3&gt;

&lt;p&gt;First, download the build folder from the Q.js library repo in GitHub. It has the basic structure to begin building your first quantum circuit using Q.js. It also has a &lt;code&gt;build.sh&lt;/code&gt; file but we will not be using it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/stewdio/q.js/tree/master/build"&gt;https://github.com/stewdio/q.js/tree/master/build&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, Create a new JavaScript file in the same folder. You can manipulate the DOM elements and create the circuit from the JavaScript console in your browser itself but we are going to use the file to keep it for future reference.&lt;/p&gt;

&lt;p&gt;In our Javascript file, we can then create the circuit object in text format as mentioned in the code. We can also append this circuit to the webpage’s body using the &lt;code&gt;toDom()&lt;/code&gt; method.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;You should see something like this on your webpage&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tIUiEDBz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mzw0vno2afi80j7i5vp2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tIUiEDBz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mzw0vno2afi80j7i5vp2.png" alt="Image description" width="367" height="315"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The result of simulating any quantum circuit is the probability of getting a particular combination as the output. You can simulate the above circuit using the &lt;code&gt;report$()&lt;/code&gt; method (It returns the results as a string). &lt;/p&gt;

&lt;p&gt;If you display this on your webpage using the traditional JavaScript way you will get something like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nyh9jWvb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lt7gtmhrezx0k378ojdx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nyh9jWvb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lt7gtmhrezx0k378ojdx.png" alt="Image description" width="880" height="34"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To display the results on your webpage in a cleaner way you can use the &lt;code&gt;split()&lt;/code&gt; method (split at newline) and save the probability for each two-qubit combination as an array element. &lt;/p&gt;

&lt;p&gt;Because of how &lt;code&gt;.report$()&lt;/code&gt; works the first and last element of the array will be empty strings. The rest of the elements can be displayed on the webpage by adding them to a div and appending it to the body.&lt;/p&gt;

&lt;p&gt;Your final result will look something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cNQ2z_QS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvb70s3h6mrvvjlkotxk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cNQ2z_QS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvb70s3h6mrvvjlkotxk.png" alt="Image description" width="436" height="172"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;There you go! You’ve made your first Quantum Circuit with Javascript. Play around with it and observe how the results change. You can also create your own circuit from scratch by taking help from the API documentation on the Q.js website.&lt;/p&gt;

&lt;p&gt;There’s no question that quantum computing is going to forever change the cloud. When that day comes, you want a cloud provider that you can trust to stay at the forefront of computing without making life harder for you. &lt;a href="https://link.codesphere.com/HG"&gt;Codesphere&lt;/a&gt; is the first cloud provider that lets you work directly in the cloud environment through an IDE and terminal. Check us out!&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>quantum</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Write Better Python Code</title>
      <author>Dharaneeswaran R</author>
      <pubDate>Wed, 29 Dec 2021 15:38:11 +0000</pubDate>
      <link>https://dev.to/dharaneeswaranr/write-better-python-code-51j0</link>
      <guid>https://dev.to/dharaneeswaranr/write-better-python-code-51j0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;This article has the collection python coding practices that I have learned over last few months for writing more idiomatic python code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-multiple-assignment"&gt;
  &lt;/a&gt;
  1. Multiple Assignment
&lt;/h2&gt;

&lt;p&gt;Initialise same value for different variables.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Instead of this
&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="c1"&gt;# Use this
&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-variable-unpacking"&gt;
  &lt;/a&gt;
  2. Variable Unpacking
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# x = 1, y = 2
&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# x = 1, y = [2, 3, 4, 5]
&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# x = 1, y = [2, 3, 4], z = 5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-swapping-variables"&gt;
  &lt;/a&gt;
  3. Swapping Variables
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Instead of this
&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;

&lt;span class="c1"&gt;# Use this
&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-name-casing"&gt;
  &lt;/a&gt;
  4. Name Casing
&lt;/h2&gt;

&lt;p&gt;In python &lt;code&gt;snake_case&lt;/code&gt; is preferred over &lt;code&gt;camelCase&lt;/code&gt; for variables and functions names.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Instead of this
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;isEven&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="c1"&gt;# Use this
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_even&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-conditional-expressions"&gt;
  &lt;/a&gt;
  5. Conditional Expressions
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Instead of this
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_even&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Even"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Odd"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Use this
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_even&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Even"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Odd"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Or this
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_even&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Even"&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s"&gt;"Odd"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#6-string-formatting"&gt;
  &lt;/a&gt;
  6. String Formatting
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Dumbledore"&lt;/span&gt;
&lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Socks"&lt;/span&gt;

&lt;span class="c1"&gt;# Instead of this
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s likes %s."&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# Or this
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{} likes {}"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# Use this
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; likes &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#7-comparison-operator"&gt;
  &lt;/a&gt;
  7. Comparison Operator
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Instead of this
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"x is a 3 digit number"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Use this
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"x is a 3 digit number"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#8-iterating-over-a-list-or-tuple"&gt;
  &lt;/a&gt;
  8. Iterating over a list or tuple
&lt;/h2&gt;

&lt;p&gt;We don't need to use indices to access list elements. Instead we can do this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;collection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Instead of this
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# Use this
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Both of these yields the same output
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#9-using-enumerate"&gt;
  &lt;/a&gt;
  9. Using enumerate()
&lt;/h2&gt;

&lt;p&gt;When you need both indices and values, we can use &lt;code&gt;enumerate()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Harry'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Ron'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Hermione'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Ginny'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Neville'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#10-using-set-for-searching"&gt;
  &lt;/a&gt;
  10. Using Set for searching
&lt;/h2&gt;

&lt;p&gt;Searching in a set is faster(O(1)) compared to list(O(n)).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Instead of this 
&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'e'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'i'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'o'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'u'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_vowel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;char&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;char&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Vowel"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Use this
&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'e'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'i'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'o'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'u'&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_vowel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;char&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;char&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Vowel"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#11-list-comprehension"&gt;
  &lt;/a&gt;
  11. List comprehension
&lt;/h2&gt;

&lt;p&gt;Consider the following program to multiply the elements of the list into 2 if they are even.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="c1"&gt;# Instead of this
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Use this
&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#12-iterating-dictionary"&gt;
  &lt;/a&gt;
  12. Iterating Dictionary
&lt;/h2&gt;

&lt;p&gt;Using &lt;code&gt;dict.items()&lt;/code&gt; to iterate through a dictionary.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;roll_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="mi"&gt;315&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Dharan"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;705&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Priya"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Instead of this
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;roll_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;roll_name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# Do this
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;roll_name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#sources"&gt;
  &lt;/a&gt;
  Sources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.packtpub.com/write-python-code-or-pythonic-code/"&gt;Do you write Python Code or Pythonic Code?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://realpython.com/python-f-strings/"&gt;Python 3's f-Strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arielortiz.info/s201911/pycon2019/docs/design_patterns.html"&gt;Design Patterns in Python for the Untrained Eye&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python-guide.org/writing/style/"&gt;The Hitchhiker's Guide to Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>python</category>
      <category>productivity</category>
      <category>codequality</category>
      <category>programming</category>
    </item>
    <item>
      <title>JavaScript Scoping</title>
      <author>Dylan Oh</author>
      <pubDate>Wed, 29 Dec 2021 15:25:24 +0000</pubDate>
      <link>https://dev.to/ohdylan/javascript-scoping-3adl</link>
      <guid>https://dev.to/ohdylan/javascript-scoping-3adl</guid>
      <description>&lt;p&gt;According to MDN's definition, "scope" in JavaScript is the current context of execution. What does that actually mean? Scope defines the variables and values that are within your current accessibility, and it can also be referred to the environment of variables. Let's jump right into an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;phrase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;phrase&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; Dylan&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;phrase&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have a function called hello(), and we define a variable called "phrase" WITHIN the function. If we are trying to access the variable "phrase" from the outside of function, we are going to get this error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Uncaught ReferenceError: phrase is not defined
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is easy to understand right? From the global scope perspective, we do not know what is a "phrase". &lt;/p&gt;

&lt;p&gt;However, if we define a global variable, and try to use it inside the function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Dylan&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;phrase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;phrase&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will get:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="nx"&gt;Dylan&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From here we know that, scopes follow hierarchy, where children layer can access the variables of parent, but not the other way round.&lt;/p&gt;

&lt;p&gt;In our last article (&lt;a href="https://dev.to/ohdylan/javascript-single-threaded-but-non-blocking-198e"&gt;JavaScript, Single Threaded but Non-Blocking&lt;/a&gt;), we mentioned that JavaScript engine has call stack of function execution contexts. A global variable environment is also introduced when global execution context is created. If we define a global variable now, this variable will be added under the global object (window object for browser).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t-yrOxRC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i2nfns5cwlvgsa58zdic.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t-yrOxRC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i2nfns5cwlvgsa58zdic.png" alt="Image description" width="480" height="234"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Each execution context will have a local variable environment, which is known as local scope. If we try to access a variable in our current execution context, it will start looking for this variable within the local scope. If the variable is not found, it will go up to the parent scope to look for it. This is known as the scope chain. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;func1&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;func2&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;func1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, the code is trying to look for the variable &lt;em&gt;a&lt;/em&gt;, since it is used in func2. After it has failed to find it within func2 scope, it will go up to func1 and found it (a = 20). Therefore, the results of console log is 20.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Scope chain of execution contexts&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eN62kn__--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c6yonsn7wamla0oj36la.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eN62kn__--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c6yonsn7wamla0oj36la.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What if we change our code to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;func1&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;func2&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;func2&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;func1&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is printing out 10 this time. Why is it so? We have to bring in another term called lexical scope, which is the scope that we determine where the function is defined, not called. In the first example, the func2 was defined within func1 and therefore, it will reach out to func1 to look for the variable that is not within its current scope. However in the second example, the func 2 was defined within the global scope (which is same level as func1), therefore it will look up to global scope for the missing variable. &lt;/p&gt;

&lt;p&gt;Hope this gives you a brief idea on how the JavaScript scoping works. In our future articles, I shall also bring in concepts like hoisting, closure, block scope and etc to give you a clearer picture (should have done in this article but was too busy, pardon me).&lt;/p&gt;

&lt;p&gt;Do follow me for more future articles on web design, programming and self-improvement 😊&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>11 Html Tags You Must Know</title>
      <author>Codeflix</author>
      <pubDate>Wed, 29 Dec 2021 15:24:33 +0000</pubDate>
      <link>https://dev.to/codeflix/11-html-tags-you-must-know-58gc</link>
      <guid>https://dev.to/codeflix/11-html-tags-you-must-know-58gc</guid>
      <description>&lt;p&gt;Hello, Readers, sorry I was busy in some work so it got late. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Let's Get Started
&lt;/h2&gt;

&lt;p&gt;HTML attributes allow you to perform a lot more complex tasks directly on your HTML files. Here are some of the most useful ones to know!&lt;/p&gt;

&lt;p&gt;HTML is the building block of the web. Knowing some less-known, but useful parts of this markup language can make your life a lot easier. HTML attributes provide several features that can help you to get the most out of HTML. It defines additional characteristics or properties of an HTML element.&lt;/p&gt;

&lt;p&gt;In this article, you'll learn about 11 HTML attributes that you probably haven’t heard of yet.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-multiple"&gt;
  &lt;/a&gt;
  1. Multiple
&lt;/h2&gt;

&lt;p&gt;This attribute allows users to enter multiple values. You can use the multiple attribute with  tags and  tags. This boolean attribute is valid only for email or file input types.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#using-multiple-attribute-with-tag"&gt;
  &lt;/a&gt;
  Using multiple Attribute With  Tag
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;label for="language"&amp;gt;Select languages:&amp;lt;/label&amp;gt;
&amp;lt;select name="language" id="language" multiple&amp;gt;
&amp;lt;option value="C++"&amp;gt;C++&amp;lt;/option&amp;gt;
&amp;lt;option value="Python"&amp;gt;Python&amp;lt;/option&amp;gt;
&amp;lt;option value="JavaScript"&amp;gt;JavaScript&amp;lt;/option&amp;gt;
&amp;lt;option value="Java"&amp;gt;Java&amp;lt;/option&amp;gt;
&amp;lt;/select&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#using-multiple-attribute-for-file-input"&gt;
  &lt;/a&gt;
  Using multiple Attribute for File Input
&lt;/h4&gt;

&lt;p&gt;By using the multiple attribute for file input, you can select multiple files (by holding the Shift or Ctrl keys).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="file" multiple&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#using-multiple-attribute-for-email-input"&gt;
  &lt;/a&gt;
  Using multiple Attribute for Email Input
&lt;/h4&gt;

&lt;p&gt;By using the multiple attribute for email input, you can enter a list of comma-separated email addresses. All the white spaces will be removed from each address in the list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="email" multiple&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2contenteditable"&gt;
  &lt;/a&gt;
  2.Contenteditable
&lt;/h2&gt;

&lt;p&gt;You can make the HTML content editable on a web page using the contenteditable attribute. This is a global attribute, i.e, it's common to all HTML elements.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p contenteditable="true"&amp;gt;
Lorem ipsum dolor sit amet, consectetur adipisicing elit,
sed do eiusmod tempor incididunt ut labore et dolore magna
aliqua. Ut enim ad minim veniam, quis nostrud exercitation
ullamco laboris nisi ut aliquip ex ea commodo consequat.
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3spellcheck"&gt;
  &lt;/a&gt;
  3.Spellcheck
&lt;/h2&gt;

&lt;p&gt;The spellcheck attribute specifies whether the element may be checked for spelling errors or not. You can spellcheck text in the  elements, text in the editable elements, or text in the input elements(except passwords).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p contenteditable="true" spellcheck="true"&amp;gt;
Lorem ipsum dolor sit amet, consectetur adipisicing elit,
sed do eiusmod tempor incididunt ut labore et dolore magna
aliqua. Ut enim ad minim veniam, quis nostrud exercitation
ullamco laboris nisi ut aliquip ex ea commodo consequat.
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4dowmload"&gt;
  &lt;/a&gt;
  4.Dowmload
&lt;/h2&gt;

&lt;p&gt;You can download a resource using the download attribute. The download attribute tells the browser to download the specified URL instead of navigating to it. You can use the download attribute with &lt;a&gt; tag and  tag.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note: The download attribute only works with same-origin URLs. It follows the rules of the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy"&gt;same-origin&lt;/a&gt; policy.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;a href="xyz.png" download="myImage"&amp;gt;Download&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5accept"&gt;
  &lt;/a&gt;
  5.Accept
&lt;/h2&gt;

&lt;p&gt;The accept attribute of the  tag specifies the type of files a user can upload. You can specify a comma-separated list of one or more file types as its value.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#accepting-an-audio-file"&gt;
  &lt;/a&gt;
  Accepting an Audio File
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="file" id="audioFile" accept="audio/*"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#accepting-a-video-file"&gt;
  &lt;/a&gt;
  Accepting a video file
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="file" id="videoFile" accept="video/*"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#accepting-an-image-file"&gt;
  &lt;/a&gt;
  Accepting an Image File
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
&amp;lt;input type="file" id="imageFile" accept="image/*"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#accepting-a-microsoft-word-file"&gt;
  &lt;/a&gt;
  Accepting a Microsoft Word File
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="file" id="docpicker"
accept=".doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document"&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#accepting-png-or-jpeg-files"&gt;
  &lt;/a&gt;
  Accepting PNG or JPEG Files
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="file" id="imageFile" accept=".png, .jpg, .jpeg"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#accepting-a-pdf-file"&gt;
  &lt;/a&gt;
  Accepting a PDF File
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="file" id="pdfFile" accept&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#6-translate"&gt;
  &lt;/a&gt;
  6. translate
&lt;/h2&gt;

&lt;p&gt;The translate attribute tells the browser that the element should be translated or not when the page is localized. It can have 2 values: "yes" or "no".&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p translate="no"&amp;gt;
Lorem ipsum dolor sit amet, consectetur adipisicing elit,
sed do eiusmod tempor incididunt ut labore et dolore magna
aliqua. Ut enim ad minim veniam, quis nostrud exercitation
ullamco laboris nisi ut aliquip ex ea commodo consequat.
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#7-poster"&gt;
  &lt;/a&gt;
  7. poster
&lt;/h2&gt;

&lt;p&gt;The poster attribute is used to show an image while the video is downloading or until the user plays the video.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you don't specify anything, nothing is displayed until the first frame is available. When the first frame is available, it's shown as the poster frame.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;video controls
src="http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4"
poster="posterImage.png"&amp;gt;
&amp;lt;/video&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#8-inputmode"&gt;
  &lt;/a&gt;
  8. inputmode
&lt;/h2&gt;

&lt;p&gt;The inputmode attribute indicates the browser which keyboard to display when a user has selected any input or textarea element. This attribute accepts various values:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#none"&gt;
  &lt;/a&gt;
  None
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="text" inputmode="none" /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#numeric"&gt;
  &lt;/a&gt;
  Numeric
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="text" inputmode="numeric" /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#tel"&gt;
  &lt;/a&gt;
  Tel
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="text" inputmode="tel" /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#decimal"&gt;
  &lt;/a&gt;
  Decimal
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="text" inputmode="decimal" /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#email"&gt;
  &lt;/a&gt;
  Email
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="text" inputmode="email" /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#url"&gt;
  &lt;/a&gt;
  URL
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="text" inputmode="url" /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#search"&gt;
  &lt;/a&gt;
  Search
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="text" inputmode="search&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#9-pattern"&gt;
  &lt;/a&gt;
  9. pattern
&lt;/h2&gt;

&lt;p&gt;The pattern attribute of the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element allows you to specify a regular expression for which the element's value will be validated against. You can use the pattern attribute with several input types like text, date, search, URL, tel, email, and password.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;form&amp;gt;
&amp;lt;input name="username" id="username" pattern="[A-Za-z0-9]+"&amp;gt; 
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#10-autocomplete"&gt;
  &lt;/a&gt;
  10. autocomplete
&lt;/h2&gt;

&lt;p&gt;The autocomplete attribute specifies whether the browser should automatically complete the input based on user inputs or not. You can use the autocomplete attribute with several input types like text, search, URL, tel, email, password, date pickers, range, and color. You can use this attribute with the  elements or &lt;/p&gt; elements.&lt;br&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;form&amp;gt;
&amp;lt;input name="username" id="username" pattern="[A-Za-z0-9]+"&amp;gt; 
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;h2&gt;
  &lt;a href="#11-autofocus"&gt;
  &lt;/a&gt;
  11. autofocus
&lt;/h2&gt;

&lt;p&gt;The autofocus attribute is a boolean attribute indicating that an element should be focused on page load. You can use this attribute with , , , , or  elements.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#using-autofocus-attribute-with-input-element"&gt;
  &lt;/a&gt;
  Using autofocus Attribute With input Element
&lt;/h4&gt;



&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="text" autofocus&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h4&gt;
  &lt;a href="#using-autofocus-attribute-with-select-element"&gt;
  &lt;/a&gt;
  Using autofocus Attribute With select Element
&lt;/h4&gt;



&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;select name="languages" id="languages"&amp;gt;
&amp;lt;option value="C++"&amp;gt;
C++
&amp;lt;/option&amp;gt;
&amp;lt;option value="Python"&amp;gt;
Python
&amp;lt;/option&amp;gt;
&amp;lt;option value="JavaScript"&amp;gt;
JavaScript
&amp;lt;/option&amp;gt;
&amp;lt;option value="Java"&amp;gt;
Java
&amp;lt;/option&amp;gt;
&amp;lt;/select&amp;gt;
Using autofocus Attribute With textarea Element
&amp;lt;textarea autofocus&amp;gt;
Lorem ipsum dolor sit amet, consectetur adipisicing elit,
sed do eiusmod tempor incididunt ut labore et dolore magna
aliqua. Ut enim ad minim veniam, quis nostrud exercitation
ullamco laboris nisi ut aliquip ex ea commodo consequat.
&amp;lt;/textarea&amp;gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;h1&gt;
  &lt;a href="#the-end"&gt;
  &lt;/a&gt;
  THE END
&lt;/h1&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>From zero to one. How to Deploy your MongoDB, Node, Strapi, NextJS app to Microsoft Azure.</title>
      <author>liliya-dev</author>
      <pubDate>Wed, 29 Dec 2021 15:18:26 +0000</pubDate>
      <link>https://dev.to/halolab/from-zero-to-one-how-to-deploy-your-mongodb-node-strapi-nextjs-app-to-microsoft-azure-4c7g</link>
      <guid>https://dev.to/halolab/from-zero-to-one-how-to-deploy-your-mongodb-node-strapi-nextjs-app-to-microsoft-azure-4c7g</guid>
      <description>&lt;h2&gt;
  &lt;a href="#part-1-introduction-and-creating-all-required-for-migration-resources"&gt;
  &lt;/a&gt;
  Part 1. Introduction and creating all required for migration resources.
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hi to everyone! This article will be helpful if you have little or no knowledge of cloud technologies.&lt;/p&gt;

&lt;p&gt;There are three main cloud providers: Google Cloud, AWS and Azure. Let’s imagine that your task is to move the application to Azure.&lt;/p&gt;

&lt;p&gt;Before continuing, note that the best way to familiarize with basic Azure cloud features, to gain a foundational knowledge of cloud services, and the way those services are provided with Microsoft Azure is to learn and pass &lt;strong&gt;&lt;em&gt;Exam AZ-900: Microsoft Azure Fundamentals&lt;/em&gt;&lt;/strong&gt;. The exam is for candidates who are just beginning to work with cloud-based solutions and services or are new to Azure. Azure Fundamentals can be used to prepare for other Azure role-based or specialty certifications, but it is not a prerequisite for any of them. All Microsoft Azure learning has two options: online, which is always free, and instructor-led, which is paid. Passing the exam and getting the certification is always paid. The price depends on the country. One more tip: learn it before migration because learning during the process is a bad idea. There is much to say about passing Microsoft exams, but I suggest we move on to the next step and explore the project structure. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Project structure and reasons for migration to Azure&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So, let’s do a deep dive into the project structure before moving on.&lt;/p&gt;

&lt;p&gt;Front-end: NEXT.js app, hosted on Vercel.&lt;br&gt;
Back end: Strapi CMS + custom node scripts, hosted on Heroku&lt;br&gt;
DB: Mongo db hosted on Mongo Atlas&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The common problems with current providers include:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;  No simple ways to spread application to multiply regions and elastically scale the capacity based on demand.&lt;/li&gt;
&lt;li&gt;  No static inbound and outbound IP addresses (only via proxy), which I needed to secure back-end and DB connections.&lt;/li&gt;
&lt;li&gt;  No obvious ways to give separate accesses to resources, based on roles.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;First steps to start to work with Azure, regardless wich computing services you choose to host applications&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Firstly go to &lt;a href="https://azure.microsoft.com/"&gt;Microsoft Azure Portal&lt;/a&gt; and create the account. After you complete the registration, you will have a single tenant ID associated with your account, which will not change unless you ask Microsoft to delete your account. &lt;strong&gt;&lt;em&gt;Tenant&lt;/em&gt;&lt;/strong&gt; is associated with a single identity (person, company, or organization) and can own one or several &lt;strong&gt;&lt;em&gt;subscriptions&lt;/em&gt;&lt;/strong&gt;. At this step you will only have one subscription. An Azure subscription is a logical container used to provision resources in Azure. It holds the details of all your resources like virtual machines (VMs), databases, and more. When you create an Azure resource like a VM, you identify the subscription it belongs to. A subscription is linked to a payment setup and each subscription will result in a separate bill and can use different payment methods. Resources from one subscription are isolated from resources in other subscriptions.&lt;/p&gt;

&lt;p&gt;During the registration in Azure you may choose to get 200$ dollars on balance of the default subscription that you can spend on Azure services. It is a very useful option for beginners in cloud technologies to test different options.&lt;/p&gt;

&lt;p&gt;Now you are signed in, have a tenant and one subscription inside it. The next step is to decide which Azure services to use for your apps hosting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Choose the appropriate Azure services&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Azure offers three main cloud computing platform services: SaaS (Software as a Service), IaaS (Infrastructure as a Service), PaaS (Platform as a Service). The main differences and maintaining levels are displayed on the diagram below: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lK9FLSCt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhcnvgel49ek6t0rrfhx.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lK9FLSCt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhcnvgel49ek6t0rrfhx.jpeg" alt="Image description" width="625" height="348"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you don’t want to be responsible for the operating system, data, runtime and middleware, but still need to manage and configure the application, the PaaS cloud computing service is a good choice. &lt;/p&gt;

&lt;p&gt;So, PaaS — it is where Azure provider hosts the hardware and software on its own infrastructure and delivers this platform to the user as an integrated solution, solution stack, or service through an internet connection, while the developer is allowed to develop, run, and manage his own apps without having to build and maintain the infrastructure or platform usually associated with the process. &lt;/p&gt;

&lt;p&gt;When we have decided which cloud computing service to use, let's proceed to the next step.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Creating required resources&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The next step is to create the App Service Plan and the Resource Group.&lt;/p&gt;

&lt;p&gt;An &lt;strong&gt;&lt;em&gt;App Service Plan&lt;/em&gt;&lt;/strong&gt;, in two words, at a very high level is just the container in which your web applications run. It is used to determine the resources available to your application (or applications) and their boundary. Comparing this to an on premises environment, the app service environment is one server or servers on which your application is deployed. The app service plan defines what configuration of hardware your app runs on and how many servers you have. You can deploy multiple web applications inside the same App Service Plan. You do not need a separate web app plan for each web app.&lt;/p&gt;

&lt;p&gt;When you create an App Service plan in a certain region (for example, Western Europe), a set of compute resources is created for that plan in that region. Whatever apps you put into this App Service plan run on these compute resources as defined by your App Service plan.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;&lt;em&gt;resource group&lt;/em&gt;&lt;/strong&gt; is a logical container into which Azure resources like web apps, databases, and storage accounts are deployed and managed. The Resource Group can include all the resources for the solution, or only those resources that you want to manage as a group. You decide how to allocate resources to resource groups based on what makes the most sense for your organization. Generally, add resources that share the same lifecycle to the same resource group so you can easily deploy, update, and delete them as a group.&lt;/p&gt;

&lt;p&gt;Steps to create App Service Plan with Resource Group simultaneously:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Type App Service Plan in the search bar, select it from the dropdown and click &lt;em&gt;+Create new.&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yoxXV-B_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nxwoizxozmxxqhzstntf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yoxXV-B_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nxwoizxozmxxqhzstntf.jpg" alt="Image description" width="880" height="413"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now you need to configure it. As you don’t have the Resource Group yet, press create new, enter its name, and it will be created with the App Service Plan and placed inside it. Some other tips: &lt;/li&gt;
&lt;li&gt;Enter the App Service Plan name that will clearly describe group of resources inside it (for example, name of the project or of the group of projects)
select the region (the better option is to choose the closest region to your customers' location because it will affect the latency)&lt;/li&gt;
&lt;li&gt;Select operating system to run your apps, in this case Linux was selected &lt;/li&gt;
&lt;li&gt;Select the pricing tier. You can choose from dev/test or production plans. But in case you want to configure automatic deployment from GitHub, choose the P1V2 or higher pricing tier. The application plans less than P1V2 have a list of limitations. The next features are not available:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;a) &lt;em&gt;Auto-scale feature&lt;/em&gt;. Autoscale is a built-in feature of Cloud Services, Mobile Services, Virtual Machine Scale Sets, and Websites that helps applications perform their best when demand changes.&lt;br&gt;
b)   &lt;em&gt;Daily backups.&lt;/em&gt; Here, probably, nothing to explain.&lt;br&gt;
c)   &lt;em&gt;Traffic manager&lt;/em&gt; improves performance and availability by routing traffic between multiple instances of your app.&lt;br&gt;
d)   &lt;em&gt;Staging slots&lt;/em&gt;. Useful for testing and deployments before swapping them into production.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you want to create a high volume of resources in the future, use tags. Azure tags are name-value pairs that are used to organize resources in Azure Portal. You can apply tags for individual resources or tag the resource group that they are part of.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e7USz2Ez--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5stgnl1wrkeey82rmaru.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e7USz2Ez--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5stgnl1wrkeey82rmaru.jpg" alt="Image description" width="880" height="770"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Press Review and create. It can take up to 10 minutes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;App Service Plan and the Resource Group are ready to place resources inside. That’s why we can proceed to the next steps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Creating instances for applications&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As PaaS was selected, we should search among its services. The appropriate service is App Service. It enables you to build and host web apps, mobile back ends, and RESTful APIs in the programming language of your choice without managing infrastructure. It offers auto-scaling and high availability, supports both Windows and Linux, and enables automated deployments from GitHub, Azure DevOps, or any Git repo.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;To create the App Service find this category in the search bar and press +Create. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will be redirected to this service configuration page. You need to select from the dropdown the subscription on the resource group, where it needs to be located. Put the name of the application (for example my-project-back-end-development).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the Publish tab select Code option if you are going to just put the code of your project instead of the ready Docker container. It will make Azure create the Docker container for you itself and run your application inside it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select Node from the dropdown of runtime stack. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The application region and operating system will be chosen automatically, according to your App Service Plan settings. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Press next and in the Monitoring section I fully recommend you to switch on Application Insights. It allows you to automatically monitor your application. It will automatically detect performance anomalies and includes powerful analytics tools to diagnose issues and to understand how users actually use your app. It's designed to help you continuously improve performance and usability. It works for apps on various platforms, including .NET, Node.js, Java, and Python hosted on-premises, hybrid, or any public cloud. It integrates with your DevOps process and has connection points to various development tools. All other settings, at this moment, let's keep by default. Click create and review, check if all settings are correct, and confirm. It can take up to 5-10 minutes.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--76NSz2oa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca7ddcye3khplbificzr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--76NSz2oa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca7ddcye3khplbificzr.jpg" alt="Image description" width="880" height="921"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The instance for hosting the back-end is ready, and you can reproduce previous steps to create a separate App Service instance for the front-end application. Once it is ready we go to the next part.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Creating instances for database&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As mentioned, MongoDB is used in the project. Azure has an opportunity to place MongoDB using the Azure Cosmos DB's API for MongoDB. It has some limitations. With the full list of supported operators and limitations or exceptions you can familiarize by the &lt;a href="https://docs.microsoft.com/en-us/azure/cosmos-db/mongodb/feature-support-40"&gt;link&lt;/a&gt;; To create DB go to Azure Cosmos DB Resource and click on Create Azure Cosmos DB account. On the next screen select Azure Cosmos DB API for MongoDB. &lt;/p&gt;

&lt;p&gt;The instance for hosting the back-end is ready, and you As on previous steps, select subscription and resource group, enter the database name. Select the location closest to the rest of your resources and customers to decrease the requests time. Select the Mongo version.&lt;/p&gt;

&lt;p&gt;Choosing the capacity mode of the instance is an important step to save your money. You need to know the differences between these two options. Provisioned has throughput at a constant rate, regardless of whether operations are being performed on our Cosmos DB account. Serverless Mode — we only use throughput when operations are performed on our Cosmos DB resources. Each of these options has pros and cons and if you want to know more, follow the &lt;a href="https://docs.microsoft.com/en-us/azure/cosmos-db/throughput-serverless"&gt;link&lt;/a&gt;. But in two words, serverless — pay only when using, provisioned — reserve capacity for the instance and pay for it all the time. I need to highlight that it is cheaper to use the serverless mode for non-highly loaded projects. Press the create button and wait until it is ready.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hZcFl02G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r9eomsscm3dyzhowqjt4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hZcFl02G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r9eomsscm3dyzhowqjt4.jpg" alt="Image description" width="880" height="583"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let’s check what we have at the moment. You can find all the created instances in your resource group on Azure Portal. Each of the application instances are already available with the Microsoft example page by the url, which you can find in the app essentials section. Cosmos db account is ready for moving your database into it.&lt;/p&gt;

&lt;p&gt;Now all resources are ready to deploy your applications and database. The next part of the article is going to be about the migration processes and how to connect all instances. Make sure you read both parts of the article and then proceed to work because we will talk about database migration in the next steps.&lt;/p&gt;

</description>
      <category>azure</category>
      <category>mongodb</category>
      <category>strapi</category>
      <category>nextjs</category>
    </item>
    <item>
      <title>Listen to the Season 7 Finale of DevDiscuss!</title>
      <author>dev.to staff</author>
      <pubDate>Wed, 29 Dec 2021 15:17:32 +0000</pubDate>
      <link>https://dev.to/devteam/listen-to-the-season-7-finale-of-devdiscuss-461d</link>
      <guid>https://dev.to/devteam/listen-to-the-season-7-finale-of-devdiscuss-461d</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-season-finale-of-devdiscuss-is-here-already-in-s7e8-were-talking-about-the-everimportant-topic-of-cybersecurity-what-needs-to-happen-to-advance-the-field-and-how-you-can-dive-in"&gt;
  &lt;/a&gt;
  The season finale of DevDiscuss is here already! In S7E8, we're talking about the ever-important topic of cybersecurity, what needs to happen to advance the field, and how you can dive in.
&lt;/h2&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devdiscuss/s7-e8-how-cybersecurity-needs-to-evolve-and-how-to-get-into-it"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S7:E8 - How Cybersecurity Needs To Evolve and How To Get Into It&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devdiscuss"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevDiscuss
      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s7-e8-how-cybersecurity-needs-to-evolve-and-how-to-get-into-it" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s7-e8-how-cybersecurity-needs-to-evolve-and-how-to-get-into-it" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s7-e8-how-cybersecurity-needs-to-evolve-and-how-to-get-into-it" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s7-e8-how-cybersecurity-needs-to-evolve-and-how-to-get-into-it" alt="DevDiscuss" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZtvK04RF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j-SdIkjZ--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/235/08786d8b-7ef4-4c00-bc40-f4b3cbca5834.jpg"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-s7-e8-how-cybersecurity-needs-to-evolve-and-how-to-get-into-it"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/devdiscuss/s7-e8-how-cybersecurity-needs-to-evolve-and-how-to-get-into-it"&gt;
      &lt;img id="episode-profile-image" alt="S7:E8 - How Cybersecurity Needs To Evolve and How To Get Into It" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--zTELFWpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--otY2jCJh--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/235/08786d8b-7ef4-4c00-bc40-f4b3cbca5834.jpg"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;×&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Quick refresher — DevDiscuss is the first original podcast from DEV all about the burning topics that impact all our lives as developers.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#host"&gt;
  &lt;/a&gt;
  Host:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a class="mentioned-user" href="https://dev.to/ben"&gt;@ben&lt;/a&gt;&lt;/strong&gt; — Creator of DEV &amp;amp; Co-Founder of Forem&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#guest"&gt;
  &lt;/a&gt;
  Guest:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="http://twitter.com/@AlyssaM_InfoSec"&gt;Alyssa Miller&lt;/a&gt;&lt;/strong&gt; — Business Information Security Officer @ S&amp;amp;P Global Ratings&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let us know your thoughts on this show in the comments below — or on Twitter (&lt;a href="https://twitter.com/thepracticaldev"&gt;@thepracticaldev&lt;/a&gt; ).&lt;/p&gt;




&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devdiscuss"&gt;follow DevDiscuss&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; — or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links"&gt;
  &lt;/a&gt;
  Quick Listening Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s7-e8-how-cybersecurity-needs-to-evolve-and-how-to-get-into-it/id1513053883?i=1000546403855"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/episode/6kGkqWaUVF4sMRJoMMiVKc"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cHM6Ly9mZWVkcy5kZXZwb2RzLmRldi9kZXZkaXNjdXNzX3BvZGNhc3QueG1s/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZkaXNjdXNzLzU3?sa=X&amp;amp;ved=0CAQQkfYCahcKEwi4zaTepYn1AhUAAAAAHQAAAAAQCg"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devdiscuss/s7e8-how-cybersecurity-needs-3rEFg5sv4eC/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevDiscuss-p1324596/?topicId=168717622"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devdiscuss_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devpods.dev/podcasts/devdiscuss/episodes/241"&gt;DEV Pods Site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;em&gt;Acknowledgements&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt; for producing &amp;amp; mixing the show&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Our season seven sponsors: &lt;a href="https://www.microsoft.com/en-us/dev-community/Event/Register?eventId=DevDiscussPodcast_o7nllI4cp4Vg&amp;amp;ocid=aid3038582"&gt;Microsoft&lt;/a&gt;, &lt;a href="https://developer.newrelic.com/"&gt;New Relic&lt;/a&gt;, &amp;amp; &lt;a href="https://dev.toource=devdiscuss&amp;amp;utm_medium=syndication&amp;amp;utm_campaign=october21"&gt;Vultr&lt;/a&gt;!&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#thanks-for-tuning-in-for-season-7-of-devdiscuss-we-cant-wait-to-bring-you-all-new-episodes-in-the-new-year"&gt;
  &lt;/a&gt;
  Thanks for tuning in for season 7 of DevDiscuss. We can't wait to bring you all new episodes in the new year!
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/l4Ep8xAM0H5aSDixi/giphy-downsized-large.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/l4Ep8xAM0H5aSDixi/giphy-downsized-large.gif" alt="Speakers" width="384" height="288"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>podcast</category>
    </item>
    <item>
      <title>Welcome Thread - v157</title>
      <author>dev.to staff</author>
      <pubDate>Wed, 29 Dec 2021 15:06:10 +0000</pubDate>
      <link>https://dev.to/thepracticaldev/welcome-thread-v157-o3g</link>
      <guid>https://dev.to/thepracticaldev/welcome-thread-v157-o3g</guid>
      <description>&lt;p&gt;&lt;a href="https://i.giphy.com/media/l0FF56cexcW2JAXCJj/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/l0FF56cexcW2JAXCJj/giphy.gif" alt="Fluffy white dog saying hi" width="480" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#welcome-to-dev"&gt;
  &lt;/a&gt;
  Welcome to DEV!
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Leave a comment below to introduce yourself! You can talk about what brought you here, what you're learning, or just a fun fact about yourself.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reply to someone's comment, either with a question or just a hello. 👋 &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Great to have you in the community!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>welcome</category>
    </item>
    <item>
      <title>Find bottlenecks in Node.js apps with Clinic Flame</title>
      <author>Michele Pangrazzi</author>
      <pubDate>Wed, 29 Dec 2021 15:05:50 +0000</pubDate>
      <link>https://dev.to/mpangrazzi/find-bottlenecks-in-nodejs-apps-with-clinic-flame-3i0h</link>
      <guid>https://dev.to/mpangrazzi/find-bottlenecks-in-nodejs-apps-with-clinic-flame-3i0h</guid>
      <description>&lt;p&gt;In 2018 I had the chance to attend a workshop hosted by some great devs from NearForm along a JS conference. &lt;/p&gt;

&lt;p&gt;They showed how to find bottlenecks on Node.js applications using &lt;a href="https://www.brendangregg.com/flamegraphs.html"&gt;Flamegraphs&lt;/a&gt; using a very nice profiler they built called &lt;a href="https://clinicjs.org/"&gt;Clinic JS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Too bad, I lost the notes about that workshop, but I remembered the tool name. So I've downloaded it and used it successfully to find an actual bottleneck while working on a side project of mine.&lt;/p&gt;

&lt;p&gt;Here's briefly how it works through a super simple example.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example-app-a-slow-rest-api-service-or-similar"&gt;
  &lt;/a&gt;
  Example app: a slow REST API service (or similar)
&lt;/h2&gt;

&lt;p&gt;Let's fire up a very basic HTTP service using the plain node &lt;code&gt;http&lt;/code&gt; module, which basically is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;simulating a slow query returning a random number (&lt;code&gt;dbQuery&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;computing with the result it computes the Fibonacci series (&lt;code&gt;fib&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;returning the Fibonacci value in plain text
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dbQuery&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./util&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hostname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;127.0.0.1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;baseUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`http://&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createServer&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;statusCode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text/plain&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="nx"&gt;dbQuery&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;\n`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Server running at &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;baseUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;util.js&lt;/code&gt; module looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;random&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sleep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dbQuery&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// ugh!&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fib&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;dbQuery&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fib&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;dbQuery&lt;/code&gt; function is (intentionally) calling &lt;code&gt;sleep&lt;/code&gt; before generating a random value to simulate slow I/O. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;fib&lt;/code&gt; is a (potentially) CPU-heavy task which will block the main Node.js main event loop, especially with big &lt;code&gt;n&lt;/code&gt; values.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#basic-performance-testing-using-raw-curl-endraw-and-raw-time-endraw-"&gt;
  &lt;/a&gt;
  Basic performance testing using &lt;code&gt;curl&lt;/code&gt; and &lt;code&gt;time&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;If you simply fire up the service using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;node index.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and then do something like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;time &lt;/span&gt;curl &lt;span class="s1"&gt;'http://localhost:3000'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;to test the response time, you'll find out that it's quite slow (average is around &lt;strong&gt;3-5s&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;One can easily &lt;em&gt;guess&lt;/em&gt; that both &lt;code&gt;dbQuery&lt;/code&gt; and &lt;code&gt;fib&lt;/code&gt; functions may be the cause of the slowness, and then confirm wisely using logging. &lt;/p&gt;

&lt;p&gt;Anyway, let's try to see how Clinic flame could help us.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-clinic-flame"&gt;
  &lt;/a&gt;
  Using Clinic Flame
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://clinicjs.org/flame/"&gt;Clinic Flame&lt;/a&gt; is one of the Clinic tools which is very handy in this case.&lt;/p&gt;

&lt;p&gt;So let's run the web service through it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;clinic flame &lt;span class="nt"&gt;--&lt;/span&gt; node index.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can do the same HTTP calls we did above using &lt;code&gt;curl&lt;/code&gt;, one or two times:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl &lt;span class="s1"&gt;'http://localhost:3000'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When done, simply hit &lt;code&gt;ctrl+c&lt;/code&gt; and Clinic Flame will automatically generate a report and show it to you on a browser page.&lt;/p&gt;

&lt;p&gt;Let's look at the report:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_gvEBah--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v3yp5w3yloecjufh2of1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_gvEBah--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v3yp5w3yloecjufh2of1.png" alt="report" width="880" height="691"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first thing I did was to uncheck &lt;code&gt;Depedencies&lt;/code&gt;, &lt;code&gt;WebAssembly&lt;/code&gt;, &lt;code&gt;Node JS&lt;/code&gt; and &lt;code&gt;V8&lt;/code&gt; checkboxes from the bottom bar since I mainly want to see only how my module code is being called.&lt;/p&gt;

&lt;p&gt;About the report, we have to look if there are &lt;strong&gt;wide bars with a bright colour&lt;/strong&gt;. It basically means that the function is "hot": &lt;strong&gt;lot of time&lt;/strong&gt; has being spent at the top of the stack while calling a specific function.&lt;/p&gt;

&lt;p&gt;Here's one:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y2PpTFUa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfx2x73enpv4sqef7ecd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y2PpTFUa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfx2x73enpv4sqef7ecd.png" alt="dbQuery" width="295" height="84"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and it's related to the &lt;code&gt;dbQuery().then(fib).then( // ...&lt;/code&gt; code block.&lt;/p&gt;

&lt;p&gt;Note also that we have lots of calls to &lt;code&gt;fib&lt;/code&gt; (which is ok for a recursive function) but with darker bar colours:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IFqf11I4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yo8s80w2qqq9gs00rnbr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IFqf11I4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yo8s80w2qqq9gs00rnbr.png" alt="fib" width="202" height="517"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This means that &lt;code&gt;dbQuery&lt;/code&gt; took more time at the top of the stack than &lt;code&gt;fib&lt;/code&gt; function. Probably we &lt;code&gt;sleep&lt;/code&gt; more than the time needed to compute &lt;code&gt;fib&lt;/code&gt; with the random value.&lt;/p&gt;

&lt;p&gt;What if it happens the opposite (i.e. less or no sleep time for &lt;code&gt;dbQuery&lt;/code&gt; and a larger &lt;code&gt;n&lt;/code&gt; for &lt;code&gt;fib&lt;/code&gt;)?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l26Z5nFu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sl8y3awy6cazd7pptbtl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l26Z5nFu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sl8y3awy6cazd7pptbtl.png" alt="2nd report" width="880" height="685"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This time basically all the bars are related to the &lt;code&gt;fib&lt;/code&gt; function and they're super wide: it means that &lt;strong&gt;all the recursive calls to &lt;code&gt;fib&lt;/code&gt; took a lot of time&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Note also that if you check &lt;code&gt;Node JS&lt;/code&gt; or &lt;code&gt;V8&lt;/code&gt; bars, they're super thin in comparison with &lt;code&gt;fib&lt;/code&gt; ones. This means than internal Node.js routines took a very short time compared to &lt;code&gt;fib&lt;/code&gt; calls.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-it-could-be-useful"&gt;
  &lt;/a&gt;
  Why it could be useful?
&lt;/h2&gt;

&lt;p&gt;If you have trouble to understanding bottlenecks in your Node.js-based web service, especially if the "blocking" issue comes from one of your &lt;code&gt;node_modules&lt;/code&gt; deps, where putting random &lt;code&gt;console.log&lt;/code&gt; calls to debug is both not easy and time consuming.&lt;/p&gt;

&lt;p&gt;Moreover, if your blocking issue is appearing only on heavy load, you can easily test it using the very nice &lt;code&gt;--autocannon&lt;/code&gt; CLI param (see it with &lt;code&gt;clinic flame --help&lt;/code&gt;) where you can specificy &lt;a href="https://github.com/mcollina/autocannon"&gt;autocannon&lt;/a&gt; options to generate some HTTP load on your web service.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>tutorial</category>
      <category>debug</category>
    </item>
  </channel>
</rss>
