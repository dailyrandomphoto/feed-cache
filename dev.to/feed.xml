<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>React NodeJS Purity - Open-source Full-Stack Seed Project</title>
      <author>Sm0ke</author>
      <pubDate>Tue, 26 Oct 2021 14:39:47 +0000</pubDate>
      <link>https://dev.to/sm0ke/react-nodejs-purity-open-source-full-stack-seed-project-3l92</link>
      <guid>https://dev.to/sm0ke/react-nodejs-purity-open-source-full-stack-seed-project-3l92</guid>
      <description>&lt;p&gt;Hello Coders! &lt;/p&gt;

&lt;p&gt;This article presents an &lt;code&gt;open-source&lt;/code&gt; full-stack project crafted on top of a pixel-perfect Chakra UI design using &lt;a href="https://appseed.us/product/node-js-react-purity-dashboard"&gt;React and Node JS&lt;/a&gt;. &lt;strong&gt;Purity Dashboard&lt;/strong&gt; can be downloaded from Github under the MIT license and used for unlimited hobby &amp;amp; commercial projects.  The product is built in two-tier pattern where the &lt;strong&gt;React&lt;/strong&gt; UI is decoupled from the backend and &lt;code&gt;communicates securely using JWT tokens&lt;/code&gt; managed by the &lt;strong&gt;Node JS Backend&lt;/strong&gt;. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://appseed.us/product/node-js-react-purity-dashboard"&gt;React Purity Dashboard&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://node-js-react-purity-dashboard.appseed-srv1.com/#/auth/signin"&gt;React Purity Dashboard&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zERSCZu3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3mak7lhyrgbbpu4hmpf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zERSCZu3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3mak7lhyrgbbpu4hmpf.gif" alt="React Node JS - Purity Dashboard, open-source project."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#product-features"&gt;
  &lt;/a&gt;
  ✨ Product Features
&lt;/h2&gt;

&lt;p&gt;This full-stack ready seed product comes with a few useful features out-of-the-box that might help beginners, and not only, to code and deliver faster a new end-product using modern technologies.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Modern UI - &lt;strong&gt;Purity Dashboard&lt;/strong&gt;, crafted by Creative-Tim&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;JWT Authentication Flow&lt;/code&gt; - Login, Logout, Register methods&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Production-ready API Server&lt;/code&gt; - Node JS/Express&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Docker support&lt;/code&gt; for backend and the frontend&lt;/li&gt;
&lt;li&gt;Free support via Github (issues tracker) and &lt;a href="https://discord.gg/fZC6hup"&gt;Discord&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Purity UI Dashboard&lt;/strong&gt; is built with over 70 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining. All components can take variations in color, that you can easily modify using Chakra's style props.&lt;/p&gt;

&lt;p&gt;Designed for those who like modern UI elements and beautiful websites, Purity UI Dashboard is ready to help you create stunning apps and dashboards. This Free Chakra UI Dashboard is coming with prebuilt design blocks, so the development process is seamless, switching from our pages to the real website is very easy to be done.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Purity React Dashboard - User Profile&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--drXReiTC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zirbsy7s3jovo26fawra.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--drXReiTC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zirbsy7s3jovo26fawra.png" alt="React Node JS Purity - Profile Page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Purity React Dashboard - Billing Page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--StxasSaT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tib5tfi6yjv977dte5mn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--StxasSaT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tib5tfi6yjv977dte5mn.png" alt="React Node JS Purity - Billing Page"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-use-the-product"&gt;
  &lt;/a&gt;
  ✨ How to use the product
&lt;/h2&gt;

&lt;p&gt;This open-source product is a complete full-stack seed product that covers all layers from the UI to the database using a two-tier architecture:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React Frontend (Purity Template)&lt;/li&gt;
&lt;li&gt;JWT Authentication: users can register, Sign IN, and logout&lt;/li&gt;
&lt;li&gt;Node JS Backend:  responsible with persistence&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to use the product, we need to build both parts: the &lt;code&gt;API backend&lt;/code&gt; and the &lt;code&gt;React Frontend&lt;/code&gt;. Both parts are already configured to work and communicate using compatible settings. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#start-the-backend-server"&gt;
  &lt;/a&gt;
  Start the Backend Server
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Clone the &lt;a href="https://github.com/app-generator/api-server-nodejs"&gt;Node JS Backend&lt;/a&gt; from Github&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/api-server-nodejs.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;api-server-nodejs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Install dependencies via NPM or Yarn&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm i
// OR
&lt;span class="nv"&gt;$ &lt;/span&gt;yarn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step #3&lt;/strong&gt; - Run the SQLite migration via TypeORM&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ yarn typeorm migration:run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step #4&lt;/strong&gt; - Start the API server (development mode)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm dev
// OR
&lt;span class="nv"&gt;$ &lt;/span&gt;yarn dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step #5&lt;/strong&gt; - Production Build (files generated in &lt;code&gt;build&lt;/code&gt; directory)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm build
// OR
&lt;span class="nv"&gt;$ &lt;/span&gt;yarn build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step #6&lt;/strong&gt; - Start the API server for production (files served from &lt;code&gt;build/index.js&lt;/code&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm start
// OR
&lt;span class="nv"&gt;$ &lt;/span&gt;yarn start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point we should be able to test the API server using POSTMAN or any other command line tool like &lt;code&gt;curl&lt;/code&gt; to create and authenticate new users by sending requests with bellow signatures: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Register&lt;/strong&gt; - &lt;code&gt;api/users/register&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;POST api/users/register
Content-Type: application/json

{
    "username":"test",
    "password":"pass", 
    "email":"test@appseed.us"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Login&lt;/strong&gt; - &lt;code&gt;api/users/login&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;POST /api/users/login
Content-Type: application/json

{
    "password":"pass", 
    "email":"test@appseed.us"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#start-the-react-ui"&gt;
  &lt;/a&gt;
  Start the React UI
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Clone &lt;a href="https://github.com/app-generator/react-purity-ui-dashboard"&gt;Purity React&lt;/a&gt; (from Github)&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/react-purity-ui-dashboard.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;react-purity-ui-dashboard
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Install dependencies via NPM or yarn&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm i
// OR
&lt;span class="nv"&gt;$ &lt;/span&gt;yarn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #3&lt;/strong&gt; - Start in development mode&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm run start 
// OR
&lt;span class="nv"&gt;$ &lt;/span&gt;yarn start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;Configure the backend server&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The product comes with a usable JWT Authentication flow that provides only the basic requests: login/logout/register. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;API Server URL&lt;/strong&gt; - &lt;code&gt;src/config/constant.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="na"&gt;API_SERVER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost:5000/api/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;  &lt;span class="c1"&gt;// &amp;lt;-- The magic line&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the React UI is up &amp;amp; running, we should see the login page: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Nuly-7r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cf7lisv0m1zqba0yx7d6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Nuly-7r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cf7lisv0m1zqba0yx7d6.png" alt="React Node Purity Dashboard - Login Page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for Reading! For more resources, feel free to access: &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;👉 More &lt;a href="https://appseed.us/apps/react"&gt;React Apps&lt;/a&gt; - index provided by AppSeed&lt;/li&gt;
&lt;li&gt;👉 Free &lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt; - a popular article published on Dev &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>fullstack</category>
      <category>opensource</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How I shifted to Notion for my blog</title>
      <author>Abhiraj Bhowmick</author>
      <pubDate>Tue, 26 Oct 2021 14:39:00 +0000</pubDate>
      <link>https://dev.to/abhirajb/how-i-shifted-to-notion-for-my-blog-4lpa</link>
      <guid>https://dev.to/abhirajb/how-i-shifted-to-notion-for-my-blog-4lpa</guid>
      <description>&lt;p&gt;For the last few days, some of my blog posts have blown up and have been loved by the community, all thanks to you guys, and so I have been thinking of creating an independent site for my blogs.&lt;/p&gt;

&lt;p&gt;Just to be clear, I use &lt;a href="https://dev.to/abhirajb"&gt;Dev.to&lt;/a&gt; primarily then repost them to &lt;a href="https://abhirajb.hashnode.dev"&gt;Hashnode&lt;/a&gt; and &lt;a href="https://tealfeed.com/rainboestrykr"&gt;Tealfeed&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let's face it, developing sites and maintaining them is hard. I tried &lt;a href="https://stackbit.com"&gt;Stackbit&lt;/a&gt;, &lt;a href="https://www.netlifycms.org/"&gt;Netlify CMS&lt;/a&gt; and even &lt;a href="https://jamstackthemes.dev"&gt;Jamstack&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;None of these seemed to match my taste and meet my requirements.&lt;/p&gt;

&lt;p&gt;Then I recalled my post a week ago.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/abhirajb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7f8bAbFa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3oC9sq3B--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/685929/5c0c6258-ee72-42ae-b8df-6a2eee3f6988.png" alt="abhirajb"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/abhirajb/no-code-development-for-dummies-291o" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;No-code development for dummies&lt;/h2&gt;
      &lt;h3&gt;Abhiraj Bhowmick ・ Oct 15 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#nocode&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Notion came to my rescue.&lt;/p&gt;

&lt;p&gt;Now all I had to do was find the right content management system, per se, to host and manage my posts.&lt;/p&gt;

&lt;p&gt;Finally, I came across &lt;a href="https://mdx.one"&gt;MDX.one&lt;/a&gt;, an amazing tool to use Notion for blog.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--MbEsfp3V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1277492092676145152/kmEJVcrt_normal.jpg" alt="Bhanu Teja P profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Bhanu Teja P
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/pbteja1998"&gt;@pbteja1998&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Finally launching &lt;a href="&amp;lt;a%20href="&gt;MDX.one&lt;/a&gt;'&amp;gt;MDX.one 🚀🚀&lt;br&gt;&lt;br&gt;Create your own notion-based blog with &lt;a href="&amp;lt;a%20href="&gt;MDX.one&lt;/a&gt;'&amp;gt;MDX.one.&lt;br&gt;&lt;br&gt;Just sent the email to all the 250 people that are on the waitlist🤞&lt;br&gt;&lt;br&gt;Going to sleep now. I am a little exhausted. Hope that nothing breaks while I am away 😬
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      10:16 AM - 21 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1406918837283344385" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1406918837283344385" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1406918837283344385" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xTJCxg4h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xi1t8orp7hm8d3z338k2.png" alt="landing"&gt;

&lt;p&gt;Now this is an awesome no-code tool for Notion&lt;br&gt;
It has a pre-built template that you duplicate and then use to your wish.&lt;/p&gt;

&lt;p&gt;The template is basically Notion's database template but supercharged. &lt;/p&gt;

&lt;p&gt;There you can upload new blogs and change their settings.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1JFZY5J5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/0VSt05V/Abhiraj-s-Tech-B.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1JFZY5J5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/0VSt05V/Abhiraj-s-Tech-B.png" alt="Blog-dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The general settings of your blog is available on the general settings page. It is the place where you change the basic things such as making a Call-to-action button and uploading a logo. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IgRMF8NN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/SyzvbxP/Settings.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IgRMF8NN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/SyzvbxP/Settings.png" alt="settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Considering the fact that this is the most easy-to-use tool for its category which already has a few competitors in the market right now, I would recommend this to anyone willing to create a blog without coding a bit. &lt;br&gt;
The pricing of mdx.one is also quite flexible.&lt;br&gt;
All the basic features needed to run a blog are free of cost. When you feel like upscaling, it will provide you premium features at low cost.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G0QGHM2u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f8jv1pzd3z1tywtyb0jw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G0QGHM2u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f8jv1pzd3z1tywtyb0jw.png" alt="pricing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Henceforth, from today, I am shifting my blog to &lt;a href="https://abhiraj.mdx.one"&gt;abhiraj.mdx.one&lt;/a&gt; and I will use Dev.to and others for specific articles and reposting. Hope to see you there. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_5JmqxaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w3ht7yp5axmhr5cnw47y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_5JmqxaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w3ht7yp5axmhr5cnw47y.png" alt="my blog"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Thanks for reading.&lt;br&gt;
Until next time,&lt;br&gt;
&lt;a href="https://abhiraj.glitch.me"&gt;Abhiraj&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Saving Time as a Freelancer</title>
      <author>Saji Wang</author>
      <pubDate>Tue, 26 Oct 2021 14:26:54 +0000</pubDate>
      <link>https://dev.to/codesphere/saving-time-as-a-freelancer-2711</link>
      <guid>https://dev.to/codesphere/saving-time-as-a-freelancer-2711</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;I was sick of working 9–5 so I quit my job and went freelance, now I work 24/7 - Unknown freelance dev, 2021&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Freelancing in tech can be both rewarding and highly demanding. You're hired to deliver and you need to come up with the goods to earn your paycheck. Your work needs to be high quality and on time if you want to keep getting hired. &lt;/p&gt;

&lt;p&gt;But when you're just one person, delivering a consistently high standard can be a challenge, especially when you're using the wrong tools. So today we want to tell you how we're trying to help…we've built an all in one online code editor, GitOps manager and Cloud provider.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wh5Ip-ys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5b7xagn2qhvcpgcyr87w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wh5Ip-ys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5b7xagn2qhvcpgcyr87w.png" alt="webpages"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#how-does-that-help-me-as-a-freelancer"&gt;
  &lt;/a&gt;
  How does that help me as a freelancer?
&lt;/h3&gt;

&lt;p&gt;Time is a resource to us all, but freelancers know this pain more than most. With multiple clients asking for last-minute changes or updates of projects, anything that can save you time is an invaluable weapon in your arsenal. &lt;/p&gt;

&lt;p&gt;Codesphere puts your entire development pipeline in one place, so you don't need to sign up and into multiple tools for each stage of the development process. It comes with automatic CI/CD and managed infrastructure with no config required, so you can spend more time coding and building your projects. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#keep-your-projects-live-and-make-changes-on-the%C2%A0fly"&gt;
  &lt;/a&gt;
  Keep your projects live and make changes on the fly
&lt;/h3&gt;

&lt;p&gt;The product you deliver to your client very likely needs to be live all the time. If it goes down, you can expect some angry phone calls, and no excuse you give will be good enough; You are expected to provide consistent and reliable service. Deploying and hosting on Codesphere is all taken care of, so you don't have to worry about it.&lt;/p&gt;

&lt;p&gt;Your project is live, but what if you need to make changes? You have to bring it offline, make the change, push the master, rebuild the image and then redeploy. But what if you could make changes to the live app? Codesphere lives in your browser and deploys, tests, and scales as you type.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dg4430tD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oc2slt5bftyebts2u9sk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dg4430tD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oc2slt5bftyebts2u9sk.png" alt="key"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#it-works-on-my-machine"&gt;
  &lt;/a&gt;
  It works on my machine
&lt;/h3&gt;

&lt;p&gt;Like debugging, handing over the project to your client also needs to be seamless, and it needs to work every time. Coding to the cloud guarantees what you coded is what your client sees when it's time to present it. No environmental constraints to deal with and no unexpected deployment surprises, it always works on their machine… &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#whats-your%C2%A0take"&gt;
  &lt;/a&gt;
  What's your take?
&lt;/h3&gt;

&lt;p&gt;We know we're tooting our own horn here, but we want you to know what Codesphere actually is. We're still trying to find the people we can best help, so give us your feedback, tell us what you want to see in a product like ours. What problems are you facing that we can help solve?&lt;/p&gt;

&lt;p&gt;Don't believe us? &lt;a href="https://link.codesphere.com/EW"&gt;Try us out&lt;/a&gt; and help us build a better product - we're still trying to solve the DevOps problem…and maybe you don't even have a DevOps problem. Then again, no one had a problem with horses until the car came along.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>cloud</category>
      <category>devops</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Ruby on Rails will be dead soon! </title>
      <author>poudyal_rabin</author>
      <pubDate>Tue, 26 Oct 2021 14:22:41 +0000</pubDate>
      <link>https://dev.to/poudyal_rabin/ruby-on-rails-will-be-dead-soon-pab</link>
      <guid>https://dev.to/poudyal_rabin/ruby-on-rails-will-be-dead-soon-pab</guid>
      <description>&lt;p&gt;Yes! I was also surprised and a little bit agitated when I saw similar headlines on tech blogs and magazines few years back. I thought maybe that's right, I don't see much people learning Ruby On Rails these days neither I see much job posts for Rails developer position. Maybe I should learn django? Or maybe I should learn nodejs(express)? If you are also on your early stage of career, these questions must be itching your bones too. And especially, if Rails is the first framework you are working on, you must have been dealing with few more issues too. &lt;/p&gt;

&lt;p&gt;For example, people say that Ruby/Rails ecosystem is not really the future because it does not have Machine Learning Capabilities and it is too slow. Some also say that Rails is not that scalable giving the example of Twitter. I also think to some degree that they are right. But should you be worried about it and start learning something else?&lt;/p&gt;

&lt;p&gt;Actually you don't need to. If you are learning Rails then you must have shaped your future into being a web developer. So why should you even worry about Machine Learning when you are learning web development? You are worrying then, you are on the wrong path. If you really want to learn both then you can still learn it side by side. What really works according to my experience is that, Rails has the convention over configuration ideology that gives you the bird's eye overview of overall web development ecosystem which you can transfer to any another framework of choice.&lt;/p&gt;

&lt;p&gt;A lot of technologies evolve over time but Rails has been there for a while now as a mature framework which has answers to most of the problems faced by web developers. So if you are learning/coding on Rails, then you don't need to worry now. These technologies that have been around for more than decade will take time to die. &lt;/p&gt;

&lt;p&gt;Don't forget to share your thoughts too.&lt;br&gt;
Happy Coding!&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Create a simple calculator using HTML, CSS and Javascript</title>
      <author>Adam Nagy</author>
      <pubDate>Tue, 26 Oct 2021 14:18:20 +0000</pubDate>
      <link>https://dev.to/javascriptacademy/create-a-simple-calculator-using-html-css-and-javascript-4o7k</link>
      <guid>https://dev.to/javascriptacademy/create-a-simple-calculator-using-html-css-and-javascript-4o7k</guid>
      <description>&lt;p&gt;In this tutorial we will create a fully working calculator using only HTML, CSS and vanilla Javascript. You'll learn about event handling, and DOM manipulations throughout the project. In my opinion this is a really good beginner project for those who want to become web developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#video-tutorial"&gt;
  &lt;/a&gt;
  Video Tutorial
&lt;/h2&gt;

&lt;p&gt;If you would watch a detailed &lt;strong&gt;step-by-step&lt;/strong&gt; video instead you can check out the video I made covering this project &lt;a href="https://www.youtube.com/c/JavaScriptAcademyOfficial"&gt;on my Youtube Channel&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/QS6Y0ezhyCs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h2&gt;

&lt;p&gt;The html will be pretty simple for this project. We'll start out with a standard HTML5 boilerplate. At the bottom of our body I included the &lt;code&gt;index.js&lt;/code&gt; script that we will create later. This needs to be at the bottom, because this way, when our javascript runs, the html elements required for the calculator will be in the DOM.&lt;br&gt;
In the body we have a &lt;code&gt;section&lt;/code&gt; and inside that a div with a &lt;code&gt;container&lt;/code&gt; class. We will use these wrappers to position our calculator on the page. Inside our container we have an empty div with the id of &lt;code&gt;display&lt;/code&gt;, and this will be the display of our calculator. It is empty, because we will modify its content from Javascript. Then we have a div with the class of &lt;code&gt;buttons&lt;/code&gt; which will represent the keypad of the calculator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"display"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"buttons"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"index.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;buttons&lt;/code&gt; container will hold all of the buttons. Each button will be a div with a class of &lt;code&gt;button&lt;/code&gt;. This will make the styling easy, and also will help us to gather the user input. Here we have a div for every button that we want on our keypad. You can notice that we have a weird looking label between the buttons: &lt;code&gt;&amp;amp;larr;&lt;/code&gt;. This is a HTML entity and it renders a back arrow (←), and we'll use this as a backspace. Also please not that for the equal sign button we have a separate id &lt;code&gt;equal&lt;/code&gt;. We will use this Id to distinguish this special button, and evaluate the expression provided to the calculator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt; &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"buttons"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;C&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;/&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;*&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;larr;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;7&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;8&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;9&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;-&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;4&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;5&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;6&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;+&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;1&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;2&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;3&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;.&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;0&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;)&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"equal"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;=&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this is all of the HTML markup that we need for this project, let's jump into CSS.&lt;/p&gt;

&lt;p&gt;Don't forget to link the CSS styleshead in the head of the HTML file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h2&gt;

&lt;p&gt;Let's create a &lt;code&gt;style.css&lt;/code&gt; file.&lt;br&gt;
We set a width for the container and center it using margin (also give it a decent top margin of 10vh), and apply a little box shadow.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10vh&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;43px&lt;/span&gt; &lt;span class="m"&gt;17px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;153&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;153&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;153&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the display we set a fixed height, and to center the text vertically we need to set the line-height to the exact same amount. The text should be right align, because this is how most calculator displays work. Also set the font-size and give a decent amount paddings.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#display&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To position the buttons we use CSS grid. By setting 4 x 1fr in-&lt;code&gt;grid-template-coloumns&lt;/code&gt; we'll have 4 equally sized buttons in each row. We only set bottom and left borders, so we won't get double borders. We'll set the other two sides in the next CSS rule.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.buttons&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#999&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt;&lt;span class="m"&gt;#999&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Apply the missing two sides of the borders for every button:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.buttons&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#999&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt;&lt;span class="m"&gt;#999&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the button we'll set borders, font-size and 100px of line height to center it vertically, and set &lt;code&gt;text-align: center&lt;/code&gt; to center the button labels horizontally. To have a better user experience set cursor to pointer, so the user will know that this is a clickable element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#999&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We want the equal button to stand out so, we'll set a blue background color and white text to it. Also to have a nice hover effect we'll set a darker background color and white text color on hover. To make the transition smoot set: &lt;code&gt;transition: 0.5s ease-in-out;&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#equal&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;85&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;85&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.button&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#323330&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5s&lt;/span&gt; &lt;span class="n"&gt;ease-in-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  Javascript
&lt;/h2&gt;

&lt;p&gt;This will be the heart of our application. Let's create the &lt;code&gt;index.js&lt;/code&gt; file. The first thing we need to do is to save a reference to our display dom element. We can easily do that because it has an id of &lt;code&gt;display&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;display&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we have to get references for the buttons. We'll store the button references in an array. To gather the buttons we can select them by &lt;code&gt;document.getElementsByClassName('button')&lt;/code&gt;, but this function gives back a NodeCollection instead of an array so we have to convert it to an array using &lt;code&gt;Array.from()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;buttons&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next and last step we have to make is to add event listener to the buttons and build the functionalities. To add event listeners for the buttons, we'll map through the buttons array and add a click event listener for each. (An advanced solution would be to only add event listener to the &lt;code&gt;buttons&lt;/code&gt; container and use event bubbling but this is a more beginner-friendly solution.)&lt;/p&gt;

&lt;p&gt;To determine what should we do, we'll use &lt;code&gt;e.target.innerText&lt;/code&gt;, which will simply give back the label of the button that was clicked.&lt;/p&gt;

&lt;p&gt;In the first case, when the user hits the "C" button we'd like to clear the display. To do that we can access our display reference and set the &lt;code&gt;innerText&lt;/code&gt; to an empty string. Don't forget to add &lt;code&gt;break;&lt;/code&gt; at the end, because it is needed to prevent the execution of the code defined in other &lt;code&gt;case&lt;/code&gt; blocks.&lt;/p&gt;

&lt;p&gt;For the equal button we'll use javascript built in &lt;code&gt;eval&lt;/code&gt; function. We need to provide the display's content to eval and it will evaluate and return the result, so we should set the result of the eval call to the display's innerText. We need to wrap this into a try catch block to handle errors. Erros can happen when we have syntactically wrong math expressions, for example &lt;code&gt;//(9(&lt;/code&gt;, ine these cases we'll set the display's innerText to display 'Error'.&lt;/p&gt;

&lt;p&gt;⚠️ You should not use eval in user facing applications, because it can be abused and external code can be run with it. &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval#never_use_eval!"&gt;More details&lt;/a&gt; If you want to replace eval I suggest using &lt;a href="https://mathjs.org/"&gt;Math.js lib.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If the user hits the back arrow we need to remove the last character from the display's innerText. To do that we'll use the String.slice() method, but we only want to do that if the display has any value.&lt;/p&gt;

&lt;p&gt;In the default case, so whenever the user don't hit these special symbols we just want to append the clicked button's innerText to the display's innerText. We can use the &lt;code&gt;+=&lt;/code&gt; operator to do that.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;buttons&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;C&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;←&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                   &lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The whole project is &lt;a href="https://github.com/javascriptacademy-stash/calculator"&gt;available on GitHub&lt;/a&gt;&lt;br&gt;
And that's it you have a working calculator.&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-you-can-learn-more-from-me"&gt;
  &lt;/a&gt;
  Where you can learn more from me?
&lt;/h2&gt;

&lt;p&gt;I create education content covering web-development on several platforms, feel free to 👀 check them out.&lt;/p&gt;

&lt;p&gt;I also create a newsletter where I share the week's or 2 week's educational content that I created. No bull💩 just educational content.&lt;/p&gt;

&lt;p&gt;🔗 Links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;💬 Join our &lt;a href="https://discord.gg/GuxmcEgAjB"&gt;community on Discord&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;📧 Newsletter &lt;a href="https://www.getrevue.co/profile/dev_adamnagy"&gt;Subscribe here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;🎥 YouTube &lt;a href="https://www.youtube.com/channel/UCicOwFWkuMX0ddFaKCc_E5Q"&gt;Javascript Academy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;🐦 Twitter: &lt;a href="https://twitter.com/dev_adamnagy"&gt;@dev_adamnagy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;📷 Instagram &lt;a href="https://www.instagram.com/javascriptacademy/"&gt;@javascriptacademy&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>tutorial</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How I created my Complete Portfolio Website in less than 2 hours 🤯</title>
      <author>Ram Maheshwari 💚</author>
      <pubDate>Tue, 26 Oct 2021 14:09:11 +0000</pubDate>
      <link>https://dev.to/rammcodes/how-i-created-my-complete-portfolio-website-in-less-than-2-hours-4k7a</link>
      <guid>https://dev.to/rammcodes/how-i-created-my-complete-portfolio-website-in-less-than-2-hours-4k7a</guid>
      <description>&lt;p&gt;Few days before, I created an OpenSource Project called &lt;strong&gt;&lt;a href="https://github.com/rammcodes/dopefolio"&gt;Dopefolio&lt;/a&gt;&lt;/strong&gt; and wrote an Article about it &lt;strong&gt;&lt;a href="https://dev.to/rammcodes/i-created-an-opensource-portfolio-template-for-developers-1ij9/"&gt;here&lt;/a&gt;&lt;/strong&gt; explaining the project. 🚀 &lt;/p&gt;

&lt;p&gt;I decided to use &lt;strong&gt;Dopefolio&lt;/strong&gt; to build my own Portfolio Website 🥳 as &lt;strong&gt;&lt;a href="https://github.com/rammcodes/dopefolio"&gt;Dopefolio&lt;/a&gt;&lt;/strong&gt; is an OpenSource Portfolio Website Template for Developers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fun Fact&lt;/strong&gt;: I was able to build my Entire Portfolio Website in Less than 2 hours 🤯 and in this &lt;strong&gt;Article&lt;/strong&gt;, I'm going to explain how I was able to build my &lt;strong&gt;&lt;a href="https://rammaheshwari.com"&gt;Portfolio Website&lt;/a&gt;&lt;/strong&gt; so quickly 🤘&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xAR8bU1z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/XZMvdV2/Untitled-design-3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xAR8bU1z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/XZMvdV2/Untitled-design-3.jpg" alt="Ram Maheshwari Portfolio Site Preview"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;First, let's see what are the minimum requirements that we will need to build the portfolio site and it's not much 😉&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#all-we-need-is"&gt;
  &lt;/a&gt;
  All we need is ⬇️
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Basic Knowledge of HTML&lt;/li&gt;
&lt;li&gt;Basic Knowledge of GIT&lt;/li&gt;
&lt;li&gt;NodeJs Installed locally&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and that's it, that's all you need in order for you to build a professional portfolio website as soon as possible ✌️&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#i-followed-these-3-steps-to-build-my-portfolio-site-in-less-than-2-hours"&gt;
  &lt;/a&gt;
  I followed these 3 steps to build my &lt;strong&gt;&lt;a href="https://rammaheshwari.com"&gt;Portfolio Site&lt;/a&gt;&lt;/strong&gt; in less than 2 hours
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Cloned the &lt;strong&gt;&lt;a href="https://github.com/rammcodes/dopefolio"&gt;Dopefolio&lt;/a&gt;&lt;/strong&gt; Repository&lt;/li&gt;
&lt;li&gt;Updated the Text, Theme Color, and Images inside the &lt;strong&gt;html&lt;/strong&gt; files based on my information.&lt;/li&gt;
&lt;li&gt;Hosted the website online on Netlify ( Optional )&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Everything regarding the setup and modifying the Dopefolio repo is already explained in the README.md file of Repository&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1:
&lt;/h3&gt;

&lt;p&gt;For step 1, all we need is to have some basic understanding of GIT so we can clone the Repository, and then we can remove the git origin to a new origin in our own Github account.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wkmnkSeh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/9ZsL9F8/Fire-Shot-Capture-086-rammcodes-Dopefolio-Dopefolio-Portfolio-Template-for-Developers-github-com.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wkmnkSeh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/9ZsL9F8/Fire-Shot-Capture-086-rammcodes-Dopefolio-Dopefolio-Portfolio-Template-for-Developers-github-com.png" alt="Dopefolio Github Repo"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2:
&lt;/h3&gt;

&lt;p&gt;For step 2, we need some basic understanding of HTML so we can change the text and images inside the HTML files. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I have used mockups for my project images instead of just using regular images. If you like to use mockups as well, then you can generate them for free on websites like &lt;strong&gt;&lt;a href="https://mediamodifier.com/"&gt;Media Modifier&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href="https://smartmockups.com/"&gt;Smart Mockups&lt;/a&gt;&lt;/strong&gt;, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--biRPW1Ms--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/pQMWnFp/Copy-of-Add-a-subheading.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--biRPW1Ms--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/pQMWnFp/Copy-of-Add-a-subheading.jpg" alt="With and Without Mockup"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#step-3-optional-"&gt;
  &lt;/a&gt;
  Step 3 ( Optional )
&lt;/h3&gt;

&lt;p&gt;If you like to host your site online so other people can use it then you can do it very quickly using &lt;strong&gt;&lt;a href="https://netlify.com"&gt;Netlify&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Netlify makes it very easier to &lt;strong&gt;host&lt;/strong&gt; the website online and it's also &lt;strong&gt;free&lt;/strong&gt; to host website on Netlify.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;README.md&lt;/strong&gt; file of the &lt;strong&gt;Dopefolio&lt;/strong&gt; repo already provides the instruction for hosting the site on &lt;strong&gt;Netlify&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D1UWUSVm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.sanity.io/images/ti7si9cx/production/656e951d31f3dc0f061a57466d01def70a81a6af-1500x1000.gif%3Fw%3D1382" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D1UWUSVm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.sanity.io/images/ti7si9cx/production/656e951d31f3dc0f061a57466d01def70a81a6af-1500x1000.gif%3Fw%3D1382" alt="Netlify"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#so-after-following-all-the-steps-i-ended-up-building-my-own-portfolio-website"&gt;
  &lt;/a&gt;
  So, after following all the steps, I ended up building my own &lt;strong&gt;&lt;a href="https://rammaheshwari.com"&gt;Portfolio Website&lt;/a&gt;&lt;/strong&gt; 🥳
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NeLOqUPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.ibb.co/wNQdX3P/Untitled-design-2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NeLOqUPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.ibb.co/wNQdX3P/Untitled-design-2.gif" alt="Netlify"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feel free to check the website &lt;strong&gt;&lt;a href="https://rammaheshwari.com"&gt;here&lt;/a&gt;&lt;/strong&gt; and share your feedback on it 😸&lt;/p&gt;

&lt;p&gt;I hope you find this post to be helpful and thanks for reading it 😇&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ps"&gt;
  &lt;/a&gt;
  P.S. ✌️
&lt;/h2&gt;

&lt;p&gt;If you are looking to hire a developer at your company then feel free to contact me on my &lt;strong&gt;&lt;a href="https://rammaheshwari.com"&gt;Website&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href="https://linkedin.com/in/rammcodes"&gt;Linkedin Profile&lt;/a&gt;&lt;/strong&gt; as I'm also open to Job Opportunities 😇&lt;/p&gt;




&lt;p&gt;Please &lt;strong&gt;React&lt;/strong&gt; with ❤️ + 🦄 + 🔖 , As it takes time to create such content so it will be very helpful if you show some love to this post.&lt;/p&gt;

&lt;p&gt;Share your feedback by &lt;strong&gt;Commenting&lt;/strong&gt; below 💬&lt;/p&gt;

&lt;p&gt;Drop me a &lt;strong&gt;Follow&lt;/strong&gt; for more &lt;strong&gt;Awesome&lt;/strong&gt; content related to &lt;strong&gt;Web Development&lt;/strong&gt; and &lt;strong&gt;Programming&lt;/strong&gt; 🙌&lt;/p&gt;

&lt;p&gt;Feel free to &lt;strong&gt;Connect&lt;/strong&gt; or &lt;strong&gt;Follow&lt;/strong&gt; me on my &lt;strong&gt;&lt;a href="https://linkedin.com/in/rammcodes"&gt;Linkedin Profile&lt;/a&gt;&lt;/strong&gt; 🙌&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-your-support"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Thank you for your support&lt;/strong&gt; ❤️
&lt;/h3&gt;

</description>
      <category>career</category>
      <category>css</category>
      <category>javascript</category>
      <category>portfolio</category>
    </item>
    <item>
      <title>Are you an awesome developer???</title>
      <author>rubalk</author>
      <pubDate>Tue, 26 Oct 2021 13:47:37 +0000</pubDate>
      <link>https://dev.to/rubalk/are-you-an-awesome-developer-4f1m</link>
      <guid>https://dev.to/rubalk/are-you-an-awesome-developer-4f1m</guid>
      <description>&lt;p&gt;According to Evans Data Corporation Data's Global Developer Population and Demographic Study, there are 26.9 million software developers worldwide, each working on different platforms and programming languages. Every other developer has a different way of writing their code, but one thing that connects us all is our &lt;strong&gt;Witty and Sagacious Brains.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this article, we will go through the some of the daily interactive areas of a developer and situations that a developer must have encountered at least once in their entire professional journey.&lt;br&gt;
So, go through each of the questions below and try evaluating yourself against them. The answer to each of the questions are binary, either &lt;em&gt;yes or no&lt;/em&gt;, &lt;em&gt;true or false&lt;/em&gt;, &lt;em&gt;0 or 1&lt;/em&gt; or whatever you say :)&lt;br&gt;
Follow your instincts, whatever comes first in your mind while reading the questions is the answer to the question.&lt;/p&gt;

&lt;p&gt;At the end of the article, you will have an answer to how awesome of a developer you are.&lt;/p&gt;

&lt;p&gt;Be honest to yourself and don't rush for the results....&lt;/p&gt;

&lt;p&gt;Here you go!!!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Can you solve each of the following basic logical problems without searching online and taking help?&lt;br&gt;
a. Evaluate if the given number is a Palindrome Number or not.&lt;br&gt;
b. Evaluate if a number is Prime numbers or not.&lt;br&gt;
c. List numbers in Fibonacci series in a given range.&lt;br&gt;
d. Print a pattern with * in the form of a triangle.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There is Project A that you worked on previously and now you are working on a new one Project B. A feature is supposed to be developed in Project B which is exactly similar to a feature in Project A. You know the exact solution for the feature but the solution you derived was not an ideal solution. It had few drawbacks and loopholes, and you are aware of them, but it works like charm and chances of getting user getting into those issues is very rare. Will you change the design and derive a better solution?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Have you tried deriving your own logic for the following generic problems?&lt;br&gt;
a. Palindrome String&lt;br&gt;
b. Counting occurrence of a particular character in a given string&lt;br&gt;
c. Removing duplicates from array&lt;br&gt;
d. Sorting an array&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Every developer must have solved some of the problem statements several times for different purposes in their entire journey. This may be for different project or while learning a new language or just for the sake of practice. For example, calculating the largest number in an array. So, do you derive a different logic every time, a more optimized and newer solution?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You don't get agitated when you get a bug in production ready feature?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;While reading any problem statement do you tend to derive the solution in your mind? As you are moving ahead and reading the problem statement the solution is being constructed in your mind and at the end when you are finish reading you have a ready solution in your mind on which you can start working immediately. Did this ever happen to you?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do you try to minimize the iterations in your loops by breaking them conditionally? Does saving a single iteration in the loop makes you satisfied and happy?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That's all folks!!!&lt;/p&gt;

&lt;p&gt;I know, the questions were not very complicated, but they must have opened abundant windows of questions for you.&lt;/p&gt;

&lt;p&gt;So, here are the results...&lt;/p&gt;

&lt;p&gt;If your answer to each of the question is a &lt;strong&gt;truthy&lt;/strong&gt;&lt;em&gt;(yes, true, 1)&lt;/em&gt; - &lt;br&gt;
Congratulations!!! You are an Awesome Developer!!! Keep up the good work!!! Inspire and guide others to be as awesome as you are.&lt;/p&gt;

&lt;p&gt;If all your answers don't result in truthy then don't get disheartened. There is still a long way to go. Try identifying the opportunities to grow and whenever you find yourself in any of the situations mentioned above, always go for a truthy :)&lt;/p&gt;

&lt;p&gt;Honestly, there is no scale to measure an awesome developer, it totally depends on how wisely you take decisions while developing. The situations mentioned above are some of the common situations we face on daily basis. There is just a thin line of choosing a healthy and optimized solution over a workaround solution. You already know the answers to each of the question, but still, we don't abide by that. Choosing an ideal solution will always move you one step closer to be an awesome developer and in no time, you will be an &lt;br&gt;
&lt;strong&gt;AWESOME DEVELOPER&lt;/strong&gt;&lt;br&gt;
or the better I say &lt;br&gt;
&lt;strong&gt;LEGEND&lt;/strong&gt;  &lt;em&gt;wait for it&lt;/em&gt;  &lt;strong&gt;DARY DEVELOPER&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Do share in the comment section below if you are an Awesome Developer.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>career</category>
      <category>performance</category>
    </item>
    <item>
      <title>Divtober Day 26: Spice</title>
      <author>Alvaro Montoro</author>
      <pubDate>Tue, 26 Oct 2021 13:16:21 +0000</pubDate>
      <link>https://dev.to/alvaromontoro/divtober-day-26-spice-h4d</link>
      <guid>https://dev.to/alvaromontoro/divtober-day-26-spice-h4d</guid>
      <description>&lt;p&gt;The word of the day in divtober is "Spice." So I drew a bottle of spices using CSS and a single HTML element:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/alvaromontoro/embed/wvqJNGZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;It was interesting trying to make it look more realistic (although it seems that the browser struggles a little 😳). I learned a bunch about shadows by tinkering with them (e.g. not all shadows are black or white, multiple shadows from multiple directions make it look nicer... they may be basics for people with experience, but that was &lt;em&gt;new-ish&lt;/em&gt; to me.)&lt;/p&gt;

&lt;p&gt;And here's a video of how the drawing was done:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/1SCCwqehAYA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>divtober</category>
      <category>css</category>
      <category>art</category>
    </item>
    <item>
      <title>Proposed Infrastructure Setup on AWS for a Microservices Architecture (2)</title>
      <author>Nicolas El Khoury</author>
      <pubDate>Tue, 26 Oct 2021 12:52:02 +0000</pubDate>
      <link>https://dev.to/aws-builders/proposed-infrastructure-setup-on-aws-for-a-microservices-architecture-2-35g3</link>
      <guid>https://dev.to/aws-builders/proposed-infrastructure-setup-on-aws-for-a-microservices-architecture-2-35g3</guid>
      <description>&lt;h1&gt;
  &lt;a href="#chapter-2-overview-of-the-infrastructure-and-components"&gt;
  &lt;/a&gt;
  Chapter 2: Overview of the Infrastructure and Components.
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/aws-builders/proposed-infrastructure-setup-on-aws-for-a-microservices-architecture-1-503o"&gt;Chapter 1&lt;/a&gt; of this series explained the advantages and disadvantages of a Microservices architecture, in addition to the design considerations required to implement an infrastructure that is robust and adequate enough to host such types of architectures.&lt;/p&gt;

&lt;p&gt;This chapter provides an overview of the proposed infrastructure, and explains the different components used, along with the advantages it provides.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WINObCkb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bfhrywcqagk4qtjyx3vd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WINObCkb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bfhrywcqagk4qtjyx3vd.png" alt="Proposed AWS Infrastructure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Virtual Private cluster (VPC)&lt;/strong&gt;: is a private network, within the public cloud, that is logically isolated (hidden) from other virtual networks. Each VPC may contain one or more subnets (Logical divisions of the VPC) attached to it. There exists two types of subnets: public subnets, in which resources are exposed to the internet, and private subnets, which are completely isolated from the internet.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Amazon Application load Balancer (ALB)&lt;/strong&gt;: An Application load balancer serves as a point of contact for clients. The load balancer evaluates, based on a set of predefined rules, each request that it receives, and redirects it to the appropriate target group. Moreover, the load balancer balances the load among the targets registered with a target group. A load balancer canbe interet-facing (Can be accessed from the internet), or internal (cannot be accessed from the internet). AWS provides three types of load balancers: 1) Application Load Balancer, Network Load Balancer, and Classic Load Balancer.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Amazon Cloudwatch&lt;/strong&gt;: AWS’ monitoring tool for all the resources and applications on AWS. Collects and displays different metrics of resources deployed on AWS (e.g.. CPU Utilization, Memory Consumption, Dis Read/Write, Throughput, 5XX, 4XX, 3XX, 2XX, etc). CloudWatch alarms can be set on metrics in order to generate notifications (e.g., Send an alarm email), or trigger actions automatically (e.g., Autoscaling). Consider the following alarm: When the CPU Utilization of instance A averages higher than 65% for three minutes (Metric Threshold) Send an email to a set of recipients (Notification) and create a new replica of instance A (Scaling Action).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Amazon S3&lt;/strong&gt;: An AWS storage service to store and retrieve objects.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Amazon Cloudfront&lt;/strong&gt;: A Content Delivery Network (CDN) service that enhances the performance of content delivery (e.g., data, video, images, etc) to the end user through a network of edge locations. AWS Cloudfront can be attached to an Amazon S3 bucket, or any server that hosts data, caches the objects stored on these servers, and serves them to the users upon requests.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Lambda Functions&lt;/strong&gt;: A type of serverless compute functions, which allows users to upload their code without having to manage servers. AWS handles all the provisioning of underlying machines. Lambda functions are triggered by events configured, namely, An object put on S3, an object sent to the SQS, periodically, etc.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The diagram above depicts an infrastructure, in which multiple resources are deployed. Aside from S3, Cloudfront, and Cloudwatch, all the resources are created and deployed inside the VPC. More importantly, all of these resources are inside private subnets, as can be seen later in this article. Resources spawned in private subnets only possess private IPs, and therefore cannot be accessed directly from outside the VPC. Such a setup maximizes the security. In fact, a database launched in a public subnet, and protected by a password, no matter how strong it is, is at a high risk of being breached directly (Simple brute force attack). However, a database launched in the private subnet is practically nonexistent for anyone outside the VPC. Even if not secured with a password, the database is only accessible to users inside the private network.&lt;br&gt;
The communication between the application components, such as microservices and databases passes through a load balancer. In more details, each microservice, database, or any other component is attached as a target group to a load balancer. The components that are given access to from the internet are attached to an internet-facing load balancer, whereas the backend system components are attached to an internal load balancer. This approach maximizes the availability, load balancing, and security of the system. To better explain the aforementioned, consider the following example:&lt;/p&gt;

&lt;p&gt;Assume an application composed from a front-end microservice, an api gateway microservice, a backend-end microservice, and a database. Typically, the frontend, and api gateway services should be accessed from the internet. Therefore, they should be attached as two target groups to the public facing load balancer. On the other hand, the backend service, and the database must never be accessed from the outside world, thus attached to the internal load balancer. Consider a user accessing the application, and requesting a list of all the products available, below is the flow of requests that will traverse the network:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Request from the user to the internet-facing load balancer.&lt;/li&gt;
&lt;li&gt;The load balancer routes the request to the frontend application to load the page in the user’s browser.&lt;/li&gt;
&lt;li&gt;The front-end application returns a response to the load balancer with the page to be loaded.&lt;/li&gt;
&lt;li&gt;The load balancer returns the response back to the user.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now that the page is loaded on the user’s device, another request should be made by the page asking to fetch the available products.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Request from the user to the internet-facing load balancer.&lt;/li&gt;
&lt;li&gt;The load balancer routes the request to the api gateway.&lt;/li&gt;
&lt;li&gt;The api gateway routes the request, through the internal load balancer, to the backend service that is supposed to fetch the products from the database.&lt;/li&gt;
&lt;li&gt;The backend service queries, through the internal load balancer, the products from the database.&lt;/li&gt;
&lt;li&gt;The response returns back to the user following the same route taken by the request.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If the page loaded contains files available in an S3 bucket, that is synced with AWS Cloudfront, the following steps are performed:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Request from the user to the Cloudfront service requesting a file.&lt;/li&gt;
&lt;li&gt;Cloudfront checks if it possesses the file in one of the edge locations. If found, the file is directly served back to the user.&lt;/li&gt;
&lt;li&gt;If missing, Cloudfront fetches the file from S3, returns it back to the user, and caches it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Attaching the services as target groups to the load balancers provide multiple advantages (Which will be explored in details in the following chapter), namely security, through only allowing requests that match certain criteria pass, and load balancing, by balancing the requests through all the replicas registered of the same service.&lt;/p&gt;

&lt;p&gt;In summary, this article described a brief overview of the infrastructure proposed, how it operates, and the advantages it provides. The next chapter will describe in details how microservices should be deployed in a secure, available, and scalable fashion, in addition to setting autoscaling policies and alarms.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>microservices</category>
      <category>devops</category>
      <category>docker</category>
    </item>
    <item>
      <title>Why is HTTP a Stateless Protocol?</title>
      <author>Srajan Gupta</author>
      <pubDate>Tue, 26 Oct 2021 12:44:39 +0000</pubDate>
      <link>https://dev.to/srajangupta__/why-is-http-a-stateless-protocol-2g7i</link>
      <guid>https://dev.to/srajangupta__/why-is-http-a-stateless-protocol-2g7i</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/gxTJPeY26rs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;"HTTP Protocol is Stateless."&lt;br&gt;
This video tutorial will help you understand, what the above statement means.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>node</category>
      <category>python</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Easy Steps to Build SAAS Application</title>
      <author>Metricoid Technology Solutions</author>
      <pubDate>Tue, 26 Oct 2021 12:33:48 +0000</pubDate>
      <link>https://dev.to/metricoid_technology/easy-steps-to-build-saas-application-3pij</link>
      <guid>https://dev.to/metricoid_technology/easy-steps-to-build-saas-application-3pij</guid>
      <description>&lt;p&gt;&lt;strong&gt;Analyze the market, your clients, and your competitors.&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://metricoidtech.com/saas-aplication-development/"&gt;SaaS app development&lt;/a&gt; is increasingly reliant on next-generation technology, such as &lt;a href="https://metricoidtech.com/ai-ml-development/"&gt;artificial intelligence (AI)&lt;/a&gt;, &lt;a href="https://metricoidtech.com/ai-ml-development/"&gt;machine learning (ML)&lt;/a&gt;, and immersive technologies. Begin your product discovery process by conducting in-depth research of current technological trends. Learn about the trends in your target market sector if you want to construct a &lt;a href="https://metricoidtech.com/saas-aplication-development/"&gt;vertical SaaS application&lt;/a&gt;. The analysis of competitors is an important aspect of the brainstorming process.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Choose a monetization strategy for your app.&lt;/strong&gt;&lt;br&gt;
Before you dive into the app development process, it's vital that you figure out how you'll monetize your &lt;a href="https://metricoidtech.com/saas-aplication-development/"&gt;SaaS&lt;/a&gt; app. Your app design and functionality will ultimately be dictated by your revenue model, so plan it thoroughly before you begin developing your app. Knowing your target audience can help you figure out how much money they can spend on your app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prepare ahead of time for security and dependability.&lt;/strong&gt;&lt;br&gt;
As appealing as utilizing SaaS for business may appear, the software as a service approach comes with security and dependability concerns. The key distinction between &lt;a href="https://metricoidtech.com/saas-aplication-development/"&gt;SaaS&lt;/a&gt; and traditional apps is that &lt;a href="https://metricoidtech.com/saas-aplication-development/"&gt;SaaS&lt;/a&gt; apps are hosted in the cloud, thus you'll need to find a reputable cloud provider.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Make provisions for third-party integration.&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://metricoidtech.com/saas-aplication-development/"&gt;SaaS&lt;/a&gt; software, especially when used in a commercial setting, should collaborate with other enterprise tools and apps. It should, at the very least, have open application programming interfaces (APIs) so that third-party developers may readily access the software code and design it to work with other apps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Choose a stack of technologies.&lt;/strong&gt;&lt;br&gt;
Most &lt;a href="https://metricoidtech.com/saas-aplication-development/"&gt;SaaS applications&lt;/a&gt; employ HTML and CSS for the frontend, as well as Javascript frameworks like Vue.js, React, and Angular.&lt;br&gt;
Software developers generally employ Ruby, Python, JavaScript, PHP, and the related frameworks for the server-side of SaaS applications.&lt;br&gt;
SaaS developers typically employ databases like MySQL, MongoDB, or PostgreSQL for backend storage.&lt;br&gt;
Finally, when it comes to SaaS application servers, Nginx is frequently the best option.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create a minimum viable product (MVP).&lt;/strong&gt;&lt;br&gt;
The goal of an &lt;a href="https://metricoidtech.com/mvp-development-company/"&gt;MVP&lt;/a&gt; is to serve as a proof-of-concept for your product and to provide users and stakeholders a "taste" of it. &lt;a href="https://metricoidtech.com/mvp-development-company/"&gt;MVPs&lt;/a&gt; are also constructed on a low budget, allowing you to assess how well your product is received in the market without incurring significant costs. Furthermore, during this stage of the product development lifecycle, you can modify your development approach or technology stack.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Begin the development process.&lt;/strong&gt;&lt;br&gt;
For continuous development, testing, and a quick time-to-value, use one of the Agile techniques. It's also a good idea to start a marketing campaign ahead of time to establish a community of dedicated users who are looking forward to the release.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Production and maintenance are both important.&lt;/strong&gt;&lt;br&gt;
When you develop a &lt;a href="https://metricoidtech.com/saas-aplication-development/"&gt;SaaS application&lt;/a&gt;, you agree to maintain and upgrade it on a regular basis. Your app's users should have seamless access to all application updates as well as Continuous technical help.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>NodeJS + Express part 2: Route parameters</title>
      <author>Eric The Coder</author>
      <pubDate>Tue, 26 Oct 2021 12:25:57 +0000</pubDate>
      <link>https://dev.to/ericchapman/nodejs-express-part-2-route-parameters-ea3</link>
      <guid>https://dev.to/ericchapman/nodejs-express-part-2-route-parameters-ea3</guid>
      <description>&lt;p&gt;Here is a series of articles that will allow you to create backend applications with NodeJS + Express.&lt;/p&gt;

&lt;p&gt;This series is the continuation of my series on the basics of NodeJS. If you don't have basic knowledge of NodeJS read this series first: &lt;a href="https://dev.to/ericchapman/create-a-backend-in-javascript-introduction-to-node%20-js-215a"&gt;Introduction to NodeJS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Node.js is today a must, so it is essential for a developer to master it.&lt;/p&gt;

&lt;p&gt;So I will publish a new article about every two days and little by little you will learn everything there is to know about Node.js + Espress&lt;/p&gt;

&lt;p&gt;To not miss anything follow me on twitter: &lt;a href="https://twitter.com/EricTheCoder_"&gt;https://twitter.com/EricTheCoder_&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#json-data-from-a-data-file"&gt;
  &lt;/a&gt;
  JSON data from a data file
&lt;/h3&gt;

&lt;p&gt;In a real world application, the data will not be send directly in the res.json(). The data will be read from some kind of database. &lt;/p&gt;

&lt;p&gt;For the following exemples, we will create a text JSON database to help mimic a real world scenario&lt;/p&gt;

&lt;p&gt;Create a file name data.js and copy/paste this code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPhone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPad&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;650&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iWatch&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;750&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Change the app.get() to send the products data&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./data.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;server is listening on port 5000&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/products&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code will return all the products content.&lt;/p&gt;

&lt;p&gt;Sometime it could be handy to only return part of the products. For exemple some fields can be confidential.&lt;/p&gt;

&lt;p&gt;Here a exemple returning everything except the price&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/products&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;partial_products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;partial_products&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#route-parameters"&gt;
  &lt;/a&gt;
  Route parameters
&lt;/h3&gt;

&lt;p&gt;What if you want to load only product with id 1. The convention want to route to be something like: api/products/1&lt;/p&gt;

&lt;p&gt;Espress have a easy way to manage that kind of request&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/products/:productID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note the :productID in the route url. The :productID is a wildcard to put the content following the 'api/products/' ex: api/products/1  &lt;/p&gt;

&lt;p&gt;The productID can be retrieve from your request with the req.params.productID&lt;/p&gt;

&lt;p&gt;What append if the request contain a id not in the data. ex: 'api/products/1080' ? Nothing will be display. &lt;/p&gt;

&lt;p&gt;By convention in that situation we send a 404 Not Found status&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/products/:productID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Product not found&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#query-string"&gt;
  &lt;/a&gt;
  Query String
&lt;/h3&gt;

&lt;p&gt;It is usual for an API to allow user sending search request. For exemple if a user want all the product that the name contain the word phone he can send this request&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;GET&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;phone&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Like everything else, Express have an easy way to grab the data from the query string. We can use the "req.query" to retrieve the query string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/query&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products_result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;products_result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;No products matched your search&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;products_result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;const name = req.query.name.toLowerCase() retrieved the query string named "name" from the URL and convert it to lower case.&lt;/p&gt;

&lt;p&gt;Then we only have to filter our products list on that value to get the products_results&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That's all for today, follow me on twitter: &lt;a href="https://twitter.com/EricTheCoder_"&gt;https://twitter.com/EricTheCoder_&lt;/a&gt; to be notified of the publication of the next article (within two days).&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>express</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
