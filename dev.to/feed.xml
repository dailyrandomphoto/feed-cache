<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Five common causes for flaky tests and what you can do about them</title>
      <author>Spriha B. Tucker</author>
      <pubDate>Mon, 08 Nov 2021 22:20:24 +0000</pubDate>
      <link>https://dev.to/sprihatucker/five-common-causes-for-flaky-tests-and-what-you-can-do-about-them-2ej7</link>
      <guid>https://dev.to/sprihatucker/five-common-causes-for-flaky-tests-and-what-you-can-do-about-them-2ej7</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hm2P5MgX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4r245jnm7ttuiwn5hf4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hm2P5MgX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4r245jnm7ttuiwn5hf4.png" alt="FlakyBot Test History showing flaky test runs" width="880" height="349"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-are-flaky-tests-and-why-do-they-happen"&gt;
  &lt;/a&gt;
  What are flaky tests and why do they happen?
&lt;/h1&gt;

&lt;p&gt;Flaky tests are non-deterministic tests in your test suite. They may be intermittently passing or failing, making test results unreliable.&lt;/p&gt;

&lt;p&gt;Why are flaky tests bad?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Developer productivity goes down as test results become inaccurate and trust in the test-suite decreases.&lt;/li&gt;
&lt;li&gt;Multiple, unrelated commits cause similar errors, making maintenance difficult.&lt;/li&gt;
&lt;li&gt;Legitimate issues may get ignored due to a high number of false positives.&lt;/li&gt;
&lt;li&gt;Repetitive work is required to determine if bugs exist at all.&lt;/li&gt;
&lt;li&gt;Diagnostics time increases as errors can be in the test or code.&lt;/li&gt;
&lt;li&gt;User dissatisfaction due to bugs ending up in production.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's look at five common causes for flaky tests showing up in your build pipeline and what you can do about them.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-shared-state-resources-between-tests"&gt;
  &lt;/a&gt;
  1. Shared state resources between tests
&lt;/h1&gt;

&lt;p&gt;One of the common reasons why tests do not find bugs is concurrency. They occur because developers may have made incorrect assumptions about the ordering of operations between threads. One test thread might be assuming a state for shared resources like data or memory.&lt;/p&gt;

&lt;p&gt;For example, test 2 might assume test 1 passes and use test 1’s output as an input for itself. Or test 2 might assume that test 1 leaves a data variable in state x, but test 1 may not always do that – causing test 2 to fail. Tests can also be flaky if they do not correctly acquire and release shared resources between them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-can-you-do-about-it"&gt;
  &lt;/a&gt;
  What can you do about it?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use synchronization blocks between tests.&lt;/li&gt;
&lt;li&gt;Change the test to accept a wider range of behaviors.&lt;/li&gt;
&lt;li&gt;Remove dependencies between tests.&lt;/li&gt;
&lt;li&gt;Explicitly set static variables to their default value.&lt;/li&gt;
&lt;li&gt;Use resource pools - your tests can acquire and return resources to the pool.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#2-unreliable-3rd-party-apis"&gt;
  &lt;/a&gt;
  2. Unreliable 3rd party APIs
&lt;/h1&gt;

&lt;p&gt;Decreased control of your test environment increases the chances of test unpredictability. Flaky tests can occur when your test suite is dependent on unreliable third-party APIs or functionality maintained by another team. These tests may intermittently fail due to third-party system errors, unreliable network connections, or third-party contract changes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-can-you-do-about-it"&gt;
  &lt;/a&gt;
  What can you do about it?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use test stubs or test doubles to replace the third-party dependency. Your regular tests can talk to the double instead of the external source.&lt;/li&gt;
&lt;li&gt;Test doubles will not detect API contract changes. You will need to develop a separate suite of integration contract tests for this.&lt;/li&gt;
&lt;li&gt;Contract tests can be run separately and need not break the build the same as other tests. They can be run less frequently and be actioned independently of other bugs.&lt;/li&gt;
&lt;li&gt;Communicate with the third-party provider to discuss the impact of changes made by them on your system.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#3-infrastructure-issues"&gt;
  &lt;/a&gt;
  3. Infrastructure issues
&lt;/h1&gt;

&lt;p&gt;Test infrastructure failure is one of the common causes for flaky tests. These include network outages, database issues, Continuous Integration Node Failure, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-can-you-do-about-it"&gt;
  &lt;/a&gt;
  What can you do about it?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;These issues are typically easier to spot than others. Your debugging process can check these first before attempting to find other causes.&lt;/li&gt;
&lt;li&gt;Write fewer end-to-end tests and more unit tests.&lt;/li&gt;
&lt;li&gt;Run tests on real devices instead of emulators or simulators.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#4-flaky-ui-tests"&gt;
  &lt;/a&gt;
  4. Flaky UI tests
&lt;/h1&gt;

&lt;p&gt;UI tests are used to test visual logic, browser compatibility, animation, etc. Since they start at the browser level, they can be very flaky due to a variety of reasons – from missing HTML elements, cookie changes, etc. to actual system issues. If you visualize your test suite as a pyramid, UI tests are at the top. They should only occupy a small portion of your test portfolio because they are brittle, expensive to maintain, and time-consuming to run.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-can-you-do-about-it"&gt;
  &lt;/a&gt;
  What can you do about it?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Don’t use UI tests to test back-end logic.&lt;/li&gt;
&lt;li&gt;Capture the network layer using Chrome DevTools Protocol(CDP). CDP allows for tools to inspect, debug, and profile Chromium, Chrome, and other Blink-based browsers&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#5-badly-written-tests"&gt;
  &lt;/a&gt;
  5. Badly written tests
&lt;/h1&gt;

&lt;p&gt;Not following good test writing practices can result in a large number of flaky tests in your pipeline. Some common mistakes include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Not adopting a testing framework even as code complexity and team size increases.&lt;/li&gt;
&lt;li&gt;Caching data. Over time, cached data may become stale affecting test results.&lt;/li&gt;
&lt;li&gt;Using random number generators without accounting for the full range of possibilities.&lt;/li&gt;
&lt;li&gt;Using floating-point operations without paying attention to underflows and overflows.&lt;/li&gt;
&lt;li&gt;Making assumptions about the order of elements in an unordered collection.&lt;/li&gt;
&lt;li&gt;Using sleep statements to make your test wait for a state change. Sleep statements are imprecise and one of the biggest causes of flaky tests. It is better to replace them with the waitFor() function.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-can-you-do-about-it"&gt;
  &lt;/a&gt;
  What can you do about it?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Treat automation testing like any other software development effort. Make testing a shared responsibility between developers and analysts.&lt;/li&gt;
&lt;li&gt;Use tools to monitor test flakiness. If the flakiness is too high, the tool can quarantine the test, (removing it from the critical path) and help resolve issues faster.&lt;/li&gt;
&lt;li&gt;Start all tests in a known state.&lt;/li&gt;
&lt;li&gt;Avoid hardcoding test data.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#is-there-a-way-to-eliminate-flaky-tests-completely"&gt;
  &lt;/a&gt;
  Is there a way to eliminate flaky tests completely?
&lt;/h1&gt;

&lt;p&gt;The unfortunate answer is, no, there is no silver bullet that entirely eliminates flakiness. Even &lt;a href="https://testing.googleblog.com/2016/05/flaky-tests-at-google-and-how-we.html"&gt;high-performing teams like Google&lt;/a&gt; have reported at least some flakiness in 16% of their test suite.&lt;/p&gt;

&lt;p&gt;The best way to deal with the issue is by monitoring test-health and having both short-term and long-term mitigation strategies in place. If flaky tests are a severe problem for your team, or if this is a general topic of interest, email us at &lt;a href="mailto:founders@flakybot.com"&gt;founders@flakybot.com&lt;/a&gt; to get an invite to our private beta group for &lt;a href="https://www.flakybot.com"&gt;Flaky Bot&lt;/a&gt;, a tool to help manage flaky test infrastructure better.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>testing</category>
      <category>devops</category>
    </item>
    <item>
      <title>3 reasons to use 'var' in JavaScript</title>
      <author>Paul Thompson</author>
      <pubDate>Mon, 08 Nov 2021 22:19:53 +0000</pubDate>
      <link>https://dev.to/paritho/3-reasons-to-use-var-in-javascript-1hoe</link>
      <guid>https://dev.to/paritho/3-reasons-to-use-var-in-javascript-1hoe</guid>
      <description>&lt;p&gt;The &lt;code&gt;var&lt;/code&gt; keyword was JavaScript's first way to declare a variable. It fits, right? Var, variable, it's in the name. But like the Joker, &lt;code&gt;var&lt;/code&gt; is more than pretty face -- it has some baggage. As a beginning programmer, or a seasoned one dipping your toe into the seedy underbelly of JavaScript development, you maybe be wondering when you should use &lt;code&gt;var&lt;/code&gt; to declare your JavaScript objects and functions.&lt;/p&gt;

&lt;p&gt;Never fear. I have 3 reasons for you to use &lt;code&gt;var&lt;/code&gt; in your next JavaScript project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-love-tradition-and-spurn-anything-new"&gt;
  &lt;/a&gt;
  You love tradition and spurn anything new
&lt;/h2&gt;

&lt;p&gt;Var maybe the oldest keyword to declare a variable, but it is by far the only one. It's younger cousins, &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; exploded onto the scene with &lt;a href="https://en.wikipedia.org/wiki/ECMAScript#6th_Edition_%E2%80%93_ECMAScript_2015"&gt;ES6&lt;/a&gt; (over 6 years ago as of this writing!). But if sticking to old norms fraught with perils is your thing, keep using &lt;code&gt;var&lt;/code&gt; and leave these upstart keywords to listen to their terrible pop music and complain about their parents.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-prefer-mutability-even-when-you-dont"&gt;
  &lt;/a&gt;
  You prefer mutability, even when you don't
&lt;/h2&gt;

&lt;p&gt;Var has the troubling distinction of creating a variable of any type, which can then be changed to a variable of any type later. That's right, the number you declared on line 4 just became a string on line 17 and a boolean on line 109. This type flexibility is a key feature of JavaScript, but it can be avoided. But if you too like to live dangerously, keep using var.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-like-leaky-scopes"&gt;
  &lt;/a&gt;
  You like leaky scopes
&lt;/h2&gt;

&lt;p&gt;Prior to ES6, JavaScript variables were always defined at the function scope. In a lot of cases, this meant variables were &lt;em&gt;global&lt;/em&gt;. JavaScript didn't enforce block-level scopes such as inside a &lt;code&gt;for&lt;/code&gt; loop or &lt;code&gt;if&lt;/code&gt; block. So a variable declared with &lt;code&gt;var&lt;/code&gt; would be &lt;em&gt;hoisted&lt;/em&gt; to the top of its function scope. In other words, the variable declaration moved to the top of the current lexical environment with a value of &lt;code&gt;undefined&lt;/code&gt;. A common issue arising from hoisting is that such variables are accessible outside the block scope, where the developer may not expect them to be. &lt;/p&gt;

&lt;p&gt;A subtler and more difficult to detect bug can happen here as well, &lt;a href="https://eloquentjavascript.net/1st_edition/chapter3.html#p468c043e14dd0d54"&gt;variable shadowing&lt;/a&gt;. Rarely this may be desired. If that is you, &lt;code&gt;var&lt;/code&gt; is your hero.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#there-must-be-a-better-way"&gt;
  &lt;/a&gt;
  There must be a better way
&lt;/h2&gt;

&lt;p&gt;If you made it this far, you're probably seconds away from pounding out a fierce comment about how I'm wrong about &lt;code&gt;var&lt;/code&gt;. The truth is, no one should be using &lt;code&gt;var&lt;/code&gt; in any JavaScript code except for a history lesson. Even then, it should come with a footnote that says something like, "please don't ever do this."&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; have been available in &lt;a href="https://caniuse.com/?search=let"&gt;every major browser for the last 6 years&lt;/a&gt;. This is really, really ancient in frontend years. &lt;code&gt;var&lt;/code&gt; isn't just the parent misunderstanding their teen, it's the great grandparent everyone loves but no one invites to the &lt;em&gt;fun&lt;/em&gt; parties.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Let&lt;/code&gt; retains JavaScript's flexible type system while enabling block-scoping. &lt;code&gt;Const&lt;/code&gt; creates a -- you guessed it -- constant variable in block-scope. &lt;code&gt;Const&lt;/code&gt; creates a that cannot be reassigned, but similar to most other languages, &lt;code&gt;const&lt;/code&gt; objects can have their properties mutated. These two alternatives to &lt;code&gt;var&lt;/code&gt; should cover every use case you have. Even if you are in the tough spot of needing to support truly archaic browsers, don't use &lt;code&gt;var&lt;/code&gt;. Use a tool such as &lt;a href="https://babeljs.io/"&gt;Babel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So please, please, do not use &lt;code&gt;var&lt;/code&gt;.  &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Quick way to collapse/expand all files at once on a pull request on GitHub</title>
      <author>Dzhavat Ushev</author>
      <pubDate>Mon, 08 Nov 2021 22:11:17 +0000</pubDate>
      <link>https://dev.to/this-is-learning/quick-way-to-collapseexpand-all-files-at-once-on-a-pull-request-on-github-4pcp</link>
      <guid>https://dev.to/this-is-learning/quick-way-to-collapseexpand-all-files-at-once-on-a-pull-request-on-github-4pcp</guid>
      <description>&lt;p&gt;When I review pull requests on GitHub I usually start by collapsing all files and then expand them one at a time in order to focus on a single thing.&lt;/p&gt;

&lt;p&gt;This can be slightly annoying because GitHub by default shows all files in an expanded state and one needs to go through every single file header and click on the chevron icon to collapse all of them. Depending on the PR size this might take some time.&lt;/p&gt;

&lt;p&gt;Luckily, there’s a quicker way. I recently found this neat shortcut/trick that can collapse/expand all files at once. It’s &lt;code&gt;Alt + click&lt;/code&gt; on any chevron icon in the file’s header. Here’s a video:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7FW7xRAb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/tweet_video_thumb/FBbddYgXoAEfdea.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--54EgR7Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1159369600053780480/MWhI9fwI_normal.jpg" alt="Dzhavat Ushev profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Dzhavat Ushev
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @dzhavatushev
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Recently needed (then discovered) a neat way to collapse all files at once in a pull request (PR) on &lt;a href="https://twitter.com/github"&gt;@github&lt;/a&gt; . It's `Alt + click` on the caret icon in the file header. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:40 PM - 11 Oct 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1447587912133054470" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1447587912133054470" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1447587912133054470" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Now you know it too. Happy PR reviewing 🎉&lt;/p&gt;




&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@baconandbaileys?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Kelly Neil&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/many?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>productivity</category>
    </item>
    <item>
      <title>DOM Selectors in JavaScript</title>
      <author>Christopher Ninman</author>
      <pubDate>Mon, 08 Nov 2021 21:50:26 +0000</pubDate>
      <link>https://dev.to/alternate_robot/dom-selectors-in-javascript-344i</link>
      <guid>https://dev.to/alternate_robot/dom-selectors-in-javascript-344i</guid>
      <description>&lt;p&gt;While creating interactive content with JavaScript, you will often find yourself needing to access various HTML elements in order to make changes to them. We'll go through some of the main ways you can grab elements in the DOM, and how you can make use of what they hold.&lt;/p&gt;

&lt;h1&gt;Different Types of Selectors&lt;/h1&gt;

&lt;h3&gt;ID&lt;/h3&gt;

&lt;p&gt;If you want to manipulate one single element, the easiest and most straight-forward approach is to find that element by &lt;code&gt;id&lt;/code&gt;. Only one HTML element can have a specific &lt;code&gt;id&lt;/code&gt; attribute, and each ID is unique to one element.&lt;/p&gt;

&lt;h3&gt;Class&lt;/h3&gt;

&lt;p&gt;Multiple elements can be grouped together when they are given the same &lt;code&gt;class&lt;/code&gt; name. An example would be if you have multiple buttons that serve the purpose of deleting content, and you want all of those buttons to be manipulated in the same manner.&lt;/p&gt;

&lt;h3&gt;Tag&lt;/h3&gt;

&lt;p&gt;Some common tags in HTML are &lt;code&gt;body&lt;/code&gt;, &lt;code&gt;h1&lt;/code&gt;, &lt;code&gt;p&lt;/code&gt;, &lt;code&gt;div&lt;/code&gt;, &lt;code&gt;span&lt;/code&gt;, and &lt;code&gt;img&lt;/code&gt;, though there are numerous others. Another DOM selector is &lt;code&gt;tagName&lt;/code&gt;, which selects elements based on the type of element they are.&lt;/p&gt;

&lt;h1&gt;Accessing an Element by ID&lt;/h1&gt;

&lt;p&gt;In order to access an element with a specific &lt;code&gt;id&lt;/code&gt;, you have a few options. You can either use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;document.getElementById('element-id')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;document.querySelector('#element-id')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Either option will search the entire document and return the element with a matching &lt;code&gt;id&lt;/code&gt; as an object. If no element with the given &lt;code&gt;id&lt;/code&gt; is found, &lt;code&gt;null&lt;/code&gt; will be returned. If you encounter a &lt;code&gt;TypeError: Cannot read properties of null&lt;/code&gt;, it is likely that no element with that &lt;code&gt;id&lt;/code&gt; was found.&lt;/p&gt;

&lt;p&gt;You can also use these methods to create a variable, and then manipulate the DOM by calling that variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let foundElement = document.getElementById('first-header')
foundElement.style.color = 'blue'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If an element does not exist in the HTML file and is created using JavaScript, you can still give that element an &lt;code&gt;id&lt;/code&gt; using JavaScript with the following syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let createdWithJsElement = document.createElement('p')
createdWithJsElement.id = 'js-element'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;Accessing an Element by ClassName&lt;/h1&gt;

&lt;p&gt;Similar to accessing an element by &lt;code&gt;id&lt;/code&gt;, you have a few choices for selecting elements by &lt;code&gt;class&lt;/code&gt;. You can access elements by &lt;code&gt;class&lt;/code&gt; name with the following methods.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;document.querySelector('.element-class')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will return only the &lt;strong&gt;first&lt;/strong&gt; element that matches the specified &lt;code&gt;class&lt;/code&gt; name.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;document.getElementsByClassName('element-class')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The use of &lt;code&gt;getElementsByClassName&lt;/code&gt; will return a live &lt;code&gt;HTMLCollection&lt;/code&gt; of all the elements matching that &lt;code&gt;class&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;document.querySelectorAll('.element-class')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using the &lt;code&gt;querySelectorAll&lt;/code&gt; method will return a static &lt;code&gt;NodeList&lt;/code&gt; of all the elements matching that class. Distinguishing between a &lt;code&gt;NodeList&lt;/code&gt; and an &lt;code&gt;HTMLCollection&lt;/code&gt; is a whole other topic which you can explore &lt;a href="https://unicorntears.dev/posts/queryselectorall-vs-getelementsbyclassname/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note the use of a &lt;strong&gt;dot&lt;/strong&gt; prior to the &lt;code&gt;class&lt;/code&gt; name, as opposed to the &lt;strong&gt;hash-tag&lt;/strong&gt; prior to doing a query selector on an &lt;code&gt;id&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In order to manipulate every element that is returned from the &lt;code&gt;getElementsByClassName&lt;/code&gt; or &lt;code&gt;querySelectorAll&lt;/code&gt; methods, you'll need to run a &lt;code&gt;for loop&lt;/code&gt; to iterate the array-like object and make the desired changes to each element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let allButtons = document.getElementsByClassName('button')

function testButtons () {
  for (let i = 0; i &amp;lt; allButtons.length; i++) {
    console.log(`I am button ${[i+1]}`);
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can create or change an element's &lt;code&gt;class&lt;/code&gt;, or other &lt;code&gt;attribute&lt;/code&gt;, by accessing that element by its &lt;code&gt;[index]&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;allButtons[5].className = 'delete-button'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;Accessing an Element by TagName&lt;/h1&gt;

&lt;p&gt;Yet another way to select elements in the DOM is to select the elements by their &lt;code&gt;tag&lt;/code&gt; name.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let allParagraphs = document.getElementsByTagName('p')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can get even more specific with your search for specific elements based on &lt;code&gt;tag name&lt;/code&gt;. Suppose you want to change the color of the text in all the paragraphs of a "Skills" section. You can search for elements by &lt;code&gt;tag name&lt;/code&gt; within a specific div.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const mySkills = document.getElementById("skills-div");
const skillParagraphs = mySkills.getElementsByTagName("p");
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Like when the &lt;code&gt;getElementsByClassName&lt;/code&gt; method is called, &lt;code&gt;getElementsByTagName&lt;/code&gt; will return a live HTML collection of elements. This can be iterated over with a &lt;code&gt;for loop&lt;/code&gt; just like the list of elements gathered with the &lt;code&gt;getElementsByClassName&lt;/code&gt; method.&lt;/p&gt;

&lt;h1&gt;Wrapping It Up&lt;/h1&gt;

&lt;p&gt;If you can't precisely locate elements, you'll have difficulty making your JavaScript code come to life. These selectors are just the tip of the iceberg for making your creations dynamic.&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@max_duz?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Max Duzij&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/programming?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>html</category>
    </item>
    <item>
      <title>How to hash a password in Go</title>
      <author>Sam Newby</author>
      <pubDate>Mon, 08 Nov 2021 21:32:23 +0000</pubDate>
      <link>https://dev.to/nwby/how-to-hash-a-password-in-go-4jae</link>
      <guid>https://dev.to/nwby/how-to-hash-a-password-in-go-4jae</guid>
      <description>&lt;p&gt;When you're storing a password in a database the worst thing that you could do as a software developer is store that password in plain text. We have to store and treat sensitive data as what it is, sensitive!&lt;/p&gt;

&lt;p&gt;Luckily, in Go we can do this really easily using the &lt;a href="https://pkg.go.dev/golang.org/x/crypto/bcrypt"&gt;Bcrypt&lt;/a&gt; package. Once, we retrieved the package with &lt;code&gt;go get&lt;/code&gt; we can use it straight away. Hashing a can be done with one function, yes I'll repeat that, one function.&lt;/p&gt;

&lt;p&gt;Let's start by importing the package in the file we want to use it in:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"golang.org/x/crypto/bcrypt"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have our package we can hash our package using the &lt;code&gt;GenerateFromPassword()&lt;/code&gt; function like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;hashed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bcrypt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GenerateFromPassword&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Password&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hashed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In our example we have a hypothetical user struct which has a plain text password assigned to the &lt;code&gt;Password&lt;/code&gt; field, we was to use that to generate our password and then reassign our hashed password back to the struct field.&lt;/p&gt;

&lt;p&gt;So we pass the password as a byte array to the &lt;code&gt;GenerateFromPassword()&lt;/code&gt; function firstly and then pass the cost, which in this example we have set to an arbitrary value of &lt;code&gt;8&lt;/code&gt;. We get back the hashed password as a byte array and a possible error, which for the example we have ignored with the underscore. Finally, we convert the hashed password to a string and reassign it back to the password field on the user struct. Really simple, really nice, and a perfect solution for storing user passwords in a database.&lt;/p&gt;

&lt;p&gt;Thank you for reading! I'll be back with more Go tutorials in the future. &lt;/p&gt;

</description>
      <category>go</category>
      <category>hashing</category>
      <category>bcrypt</category>
    </item>
    <item>
      <title>Steve Jobs Tributary [Dark Mode] CSS Only</title>
      <author>ankitjhamahi07</author>
      <pubDate>Mon, 08 Nov 2021 20:01:46 +0000</pubDate>
      <link>https://dev.to/ankitjhamahi07/steve-jobs-tributary-dark-mode-css-only-1f58</link>
      <guid>https://dev.to/ankitjhamahi07/steve-jobs-tributary-dark-mode-css-only-1f58</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/akj007ind/embed/qBXYjQB?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
    </item>
    <item>
      <title>Build a Chatbot with PHP, MySQL and AJAX in 10 minutes</title>
      <author>Kingsley Ubah</author>
      <pubDate>Mon, 08 Nov 2021 20:01:31 +0000</pubDate>
      <link>https://dev.to/ubahthebuilder/build-a-chatbot-with-php-mysql-and-ajax-in-10-minutes-583j</link>
      <guid>https://dev.to/ubahthebuilder/build-a-chatbot-with-php-mysql-and-ajax-in-10-minutes-583j</guid>
      <description>&lt;p&gt;Have you ever interacted with a chatbot to  carry out some routine activity, such as opening a bank account?&lt;/p&gt;

&lt;p&gt;A chatbot is a software application which can simulate human-like online conversations with a user.  &lt;/p&gt;

&lt;p&gt;In this tutorial, we are going to build a simple chatbot which provides real-time response to some common questions. It also answers with a fallback message when an unaccounted question is asked.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HdFEUhve--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636208651360/dHFaeIJ8P.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HdFEUhve--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636208651360/dHFaeIJ8P.gif" alt="Chatbot application" width="598" height="682"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The code for this project can be obtained from  &lt;a href="https://github.com/KingsleyUbah/quick-chatbot"&gt;GitHub&lt;/a&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;p&gt;To build this, you are required to know a bit of the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to write basic PHP scripts&lt;/li&gt;
&lt;li&gt;How to write basic Javascript (we'll use JS for making AJAX request)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You are also required to install either &lt;a href="https://www.wampserver.com/en/"&gt;WampServer &lt;/a&gt; or  &lt;a href="https://www.apachefriends.org/index.html"&gt;XAMPP&lt;/a&gt;. These distributions come bundled with services like Apache and MySQL. &lt;/p&gt;

&lt;p&gt;If you don't know much about PHP and JavaScript then don't worry, I'll try to explain each code block with lots of comments.&lt;/p&gt;

&lt;p&gt;Without further ado, let's dive in!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-the-bot-page"&gt;
  &lt;/a&gt;
  Create the bot page
&lt;/h3&gt;

&lt;p&gt;First, we create the html markup for the page. Create a &lt;code&gt;bot.php&lt;/code&gt; and create the boilerplate HTML in it.&lt;/p&gt;

&lt;p&gt;You can generate HTML boilerplate with Emmet by typing &lt;code&gt;!&lt;/code&gt; followed by &lt;code&gt;enter&lt;/code&gt;. After creating the boilerplate code, we will go ahead to create the markup for the chat page which goes inside the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tags:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NOTE: You can learn more about emmet shortcut commands from my  &lt;a href="https://ubahthebuilder.tech/list-of-emmet-keyboard-shortcuts-for-quickly-generating-html"&gt;Emmet article&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"bot"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"header"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Online Chatbot App
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"body"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!-- This section will be dynamically inserted from JavaScript --&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"userSection"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"messages user-message"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

          &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"seperator"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"botSection"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"messages bot-reply"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

          &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"seperator"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;                
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"inputArea"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"messages"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"userInput"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Please enter your message here"&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"send"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"Send"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The page is made up of three broad sections: the header, the body and the input area. All are enclosed inside a container which itself is inside of the main bot page.&lt;/p&gt;

&lt;p&gt;The header area holds the heading text for the chat app. &lt;/p&gt;

&lt;p&gt;The body section will hold all the messages from both the user and the bot. These messages will be dynamically generated from the database, and inserted into the page using JavaScript.&lt;/p&gt;

&lt;p&gt;The input area holds the input form which is how user messages will be collected from the front end.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#style-up-the-page"&gt;
  &lt;/a&gt;
  Style up the page
&lt;/h3&gt;

&lt;p&gt;Here goes the styling for the whole page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url('https://fonts.googleapis.com/css2?family=Rubik&amp;amp;display=swap')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c"&gt;/* Center body contents, both horizontally and vertically */&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"Rubik"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Style the outer container. Centralize contents, both horizontally and vertically */&lt;/span&gt;
&lt;span class="nf"&gt;#bot&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;700px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;450px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Make container slightly rounded. Set height and width to 90 percent of .bots' */&lt;/span&gt;
&lt;span class="nf"&gt;#container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;90%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;6px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;90%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#F3F4F6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Style header section */&lt;/span&gt;
&lt;span class="nf"&gt;#header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;6px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#3B82F6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Style body */&lt;/span&gt;
&lt;span class="nf"&gt;#body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;75%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#F3F4F6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow-y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Style container for user messages */&lt;/span&gt;
&lt;span class="nc"&gt;.userSection&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Seperates user message from bot reply */&lt;/span&gt;
&lt;span class="nc"&gt;.seperator&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* General styling for all messages */&lt;/span&gt;
&lt;span class="nc"&gt;.messages&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;7px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Targeted styling for just user messages */&lt;/span&gt;
&lt;span class="nc"&gt;.user-message&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#3B82F6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Targeted styling for just bot messages */&lt;/span&gt;
&lt;span class="nc"&gt;.bot-reply&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#E5E7EB&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Style the input area */&lt;/span&gt;
&lt;span class="nf"&gt;#inputArea&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Style the text input */&lt;/span&gt;
&lt;span class="nf"&gt;#userInput&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;6px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Style send button */&lt;/span&gt;
&lt;span class="nf"&gt;#send&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#3B82F6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;6px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-the-query-script-in-php"&gt;
  &lt;/a&gt;
  Create the query script (in PHP)
&lt;/h3&gt;

&lt;p&gt;In this section, we will create the PHP script responsible for handling AJAX requests,  connecting to the database and retrieving corresponding reply.&lt;/p&gt;

&lt;p&gt;Before proceeding, we can go on and change out HTML file to &lt;code&gt;.php&lt;/code&gt;. So if you named your page &lt;code&gt;bot.html&lt;/code&gt;, you can change it to &lt;code&gt;bot.php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now, please proceed to create a new &lt;code&gt;.php&lt;/code&gt; file, and type the following code into it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="cm"&gt;/* Establishes a connection with database. First argument is the server name, second is the username for database, third is password (blank for me) and final is the database name 
*/&lt;/span&gt;
&lt;span class="nv"&gt;$conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;mysqli_connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"localhost"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"root"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"onlinebot"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// If connection is established succesfully&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$conn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="c1"&gt;// Get users message from request object and escape characters&lt;/span&gt;
    &lt;span class="nv"&gt;$user_messages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;mysqli_real_escape_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'messageValue'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

    &lt;span class="c1"&gt;// create SQL query for retrieving corresponding reply&lt;/span&gt;
    &lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"SELECT * FROM chatbot WHERE messages LIKE '%&lt;/span&gt;&lt;span class="nv"&gt;$user_messages&lt;/span&gt;&lt;span class="s2"&gt;%'"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

     &lt;span class="c1"&gt;// Execute query on connected database using the SQL query&lt;/span&gt;
     &lt;span class="nv"&gt;$makeQuery&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;mysqli_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;mysqli_num_rows&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$makeQuery&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="c1"&gt;// Get result&lt;/span&gt;
        &lt;span class="nv"&gt;$result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;mysqli_fetch_assoc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$makeQuery&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;// Echo only the response column&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'response'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="c1"&gt;// Otherwise, echo this message&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Sorry, I can't understand you."&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;// If connection fails to establish, echo an error message&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Connection failed"&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nf"&gt;mysqli_connect_errno&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From the front-end, we will make POST AJAX queries to this script.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-chatbot-replies-in-mysql-database"&gt;
  &lt;/a&gt;
  Create chatbot replies in MySQL database
&lt;/h3&gt;

&lt;p&gt;The PHP script is ready. Next step is to add messages to the database. With WAMP and XAMPP, you have access to the phpMyAdmin GUI tool, which helps you manage your database in an easy way.&lt;/p&gt;

&lt;p&gt;To open it, use the following link: &lt;a href="http://localhost/phpmyadmin/index.php"&gt;http://localhost/phpmyadmin/index.php&lt;/a&gt;. You will be prompted to input your username, password and database, which by default are "root", blank, and MySQL respectively.&lt;/p&gt;

&lt;p&gt;Once inside, create a new database using whatever name you prefer. Then create a table within the database. &lt;/p&gt;

&lt;p&gt;Proceed to create the following fields in it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;id (auto incrementing): This holds the unique id for each record&lt;/li&gt;
&lt;li&gt;messages: This is the field for user messages&lt;/li&gt;
&lt;li&gt;replies: This is the field for all corresponding replies&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Try to add as many messages as possible (to make it more fun). Your table should look similar to this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ztbosi18--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636383395374/xJeClSVFr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ztbosi18--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636383395374/xJeClSVFr.png" alt="chatbot mysql database" width="732" height="347"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-ajax-request-from-javascript-and-insert-messages"&gt;
  &lt;/a&gt;
  Make AJAX request from JavaScript and insert messages
&lt;/h3&gt;

&lt;p&gt;With all the data present in the database, and the PHP script written, the last step would be to make the AJAX request from our front-end and insert new messages from both the user and bot, all using JavaScript. &lt;/p&gt;

&lt;p&gt;Inside your front-end code (&lt;code&gt;bot.html&lt;/code&gt;), open a script tag and write the following scripts:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text/javascript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

      &lt;span class="c1"&gt;// When send button gets clicked&lt;/span&gt;
      &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#send&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="c1"&gt;// create new request object. get user message&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;xhr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;XMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;userMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#userInput&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;


        &lt;span class="c1"&gt;// create html to hold user message. &lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userHtml&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;div class="userSection"&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;div class="messages user-message"&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;userMessage&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;div class="seperator"&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;


        &lt;span class="c1"&gt;// insert user message into the page&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#body&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;userHtml&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;// open a post request to server script. pass user message as parameter &lt;/span&gt;
        &lt;span class="nx"&gt;xhr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;query.php&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;xhr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setRequestHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Content-type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;application/x-www-form-urlencoded&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;xhr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`messageValue=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;userMessage&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;


        &lt;span class="c1"&gt;// When response is returned, get reply text into HTML and insert in page&lt;/span&gt;
        &lt;span class="nx"&gt;xhr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;botHtml&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;div class="botSection"&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;div class="messages bot-reply"&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;responseText&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;div class="seperator"&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

            &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#body&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;botHtml&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now when the send button is clicked, the users message is first retrieved and inserted into the page. Then an AJAX request is sent to the server script to retrieve the corresponding reply.&lt;/p&gt;

&lt;p&gt;When the server responds, the response text (bot reply) is then inserted into the page.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Tutorials are awesome for learning how to code. Here we built a chatbot with some CSS styling, made front-end AJAX calls with JavaScript, handled queries a with PHP script, and stored all messages in a MySQL database.&lt;/p&gt;

&lt;p&gt;Hopefully, the whole tutorial didn't exceed 10 minutes!&lt;/p&gt;

&lt;p&gt;Let me know your thoughts in the comments.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="http://twitter.com/UbahTheBuilder"&gt;Twitter&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://gum.co/js-50"&gt;JavaScript Ebook&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.buymeacoffee.com/ubahthebuilder"&gt;Buy Me A Coffee&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>php</category>
      <category>sql</category>
    </item>
    <item>
      <title>The 10 best JavaScript IDEs (and code editors) for 2022</title>
      <author>ericaeducative</author>
      <pubDate>Mon, 08 Nov 2021 19:48:32 +0000</pubDate>
      <link>https://dev.to/educative/the-10-best-javascript-ides-and-code-editors-for-2022-5c2j</link>
      <guid>https://dev.to/educative/the-10-best-javascript-ides-and-code-editors-for-2022-5c2j</guid>
      <description>&lt;p&gt;As one of the core languages of the World Wide Web, the internet simply wouldn’t be the same without JavaScript. JavaScript is a high-level programming language used in both front-end and back-end web development. You can use JavaScript to create dynamic web content and applications. If you’re a web developer or work in another capacity related to web development, you’ll gain a competitive edge by learning JavaScript. &lt;/p&gt;

&lt;p&gt;In this article, we’ll share our take on the 10 best JavaScript IDEs and code editors for 2022. While 2021 saw the discontinuation of Adobe's open-source code editor, Brackets, there's still a world of applications available to help JavaScript developers streamline their workflow. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here’s what we’ll cover&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#WhatIsAnIDE"&gt;What are IDEs and code editors?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#JavaScriptIDE"&gt;Things to consider when choosing an IDE or code editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Top10"&gt;The 10 Best JavaScript IDEs and code editors for 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#WebStorm"&gt;WebStorm (IDE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#IntelliJ"&gt;IntelliJ (IDE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Komodo"&gt;Komodo Edit (CE) and Komodo IDE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#AWSCloud9"&gt;AWS Cloud9 (IDE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#NetBeans"&gt;NetBeans (IDE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Eclipse"&gt;Eclipse (IDE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#SublimeText"&gt;Sublime Text (CE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Atom"&gt;Atom (CE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#VSCode"&gt;Visual Studio Code (CE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Notepad"&gt;Notepad++ (CE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#JavaScriptIDEComparisonChart"&gt;Comparison chart: best JavaScript IDEs and code editors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#NextSteps"&gt;What to learn next&lt;/a&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-ides-and-code-editors"&gt;
  &lt;/a&gt;
  What are IDEs and code editors?
&lt;/h2&gt;

&lt;p&gt;Integrated development environments (IDEs) and code editors (CEs) are software applications used to write and edit code. We could technically write code in a plain text editor, but IDEs and CEs offer additional functionalities designed to streamline the coding process. &lt;/p&gt;

&lt;p&gt;IDEs generally come with more functionalities than code editors, but some code editors can be customized to have similar functionalities to that of an IDE. Code editors often come with features such as syntax highlighting, autocompletion, and brace matching. IDEs combine multiple developer tools in a single graphical user interface. At minimum, these tools usually consist of a code editor, a compiler or interpreter, and a debugger. &lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#things-to-consider-when-choosing-an-ide-or-code-editor"&gt;
  &lt;/a&gt;
  Things to consider when choosing an IDE or code editor
&lt;/h2&gt;

&lt;p&gt;Every programmer has an individual preference when it comes to IDEs and code editors. You may try a few applications before finding a good fit. &lt;/p&gt;

&lt;p&gt;Here are some criteria to consider when assessing your options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Cost:&lt;/strong&gt; There are both free and paid applications to choose from. Define your budget and consider the fact that you may try several applications before finding the right fit. If you’re open to paid options, many applications offer a free trial period. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Learning curve:&lt;/strong&gt; It takes time to adapt to a new interface and memorize keyboard shortcuts. While learning curves are unique for each user, some applications are known to have a steeper learning curve for beginners. If you opt for one of these applications, allow yourself the time to adapt and develop an efficient workflow.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Functionality and customizability:&lt;/strong&gt; Applications have varying features, so it helps to know what functionalities you’re looking for. Some popular functionalities are multilingual support, autocompletion, and Git and GitHub integration. If an IDE or code editor doesn’t offer a certain functionality, see if it can be obtained via plugins or extensions. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Speed:&lt;/strong&gt; You’ll want to consider both the application’s reputation for speed, as well as whether your machine or device is powerful enough to host the application. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Machine requirements:&lt;/strong&gt; Your machine’s specs can impact an application’s performance. You’ll experience slowdowns if you overload your device’s processing power and memory with a heavy program. While there are certainly exceptions to this rule, a code editor will generally be a more lightweight application than an IDE.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;OS compatibility:&lt;/strong&gt; Some IDEs and code editors don’t always offer cross-platform functionality. Be mindful of OS compatibility as you review options.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;User support:&lt;/strong&gt; An established software company's application may have more robust user support than a less popular application. If you’re a beginner with a learning curve ahead of you, you may want to look for applications that have customer support and active user communities. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Accessibility&lt;/strong&gt;: Unfortunately, IDEs and code editors leave a lot to be desired when it comes to improving accessibility. While many offer features to support visually impaired programmers, such as screen readers or font adjustments, these tools have shortcomings. For instance, screen readers fail to convey the visual indicators of some of the most helpful features, such as syntax highlighting and refactoring suggestions.

&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-10-best-javascript-ides-and-code-editors"&gt;
  &lt;/a&gt;
  The 10 best JavaScript IDEs and code editors
&lt;/h2&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#webstorm-ide"&gt;
  &lt;/a&gt;
  WebStorm (IDE)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xL4FvsJJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tf3wic2t44n1h9w8dv0w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xL4FvsJJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tf3wic2t44n1h9w8dv0w.png" alt="Image description" width="880" height="528"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WebStorm is an integrated development environment specializing in JavaScript and TypeScript. Many web developers use WebStorm for back-end and front-end development. WebStorm is a product of JetBrains. It supports JavaScript frameworks such as Node.js, Angular.js, and React. Its features include GitHub integration, smart autocompletion, and code refactoring across all project files. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reliable updates and user support&lt;/li&gt;
&lt;li&gt;Customizable with plugins &lt;/li&gt;
&lt;li&gt;Available on Windows, Linux, and macOS &lt;/li&gt;
&lt;li&gt;Free for students and open-source projects&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Can consume device memory&lt;/li&gt;
&lt;li&gt;Occasional slow loading time&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Use case&lt;/strong&gt;: You’re a multilingual web developer looking for an IDE to support complex projects. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Price&lt;/strong&gt;: $12.90 per month for individual users. A free version is available to students and non-commercial open-source projects.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#intellij-idea-ultimate-ide"&gt;
  &lt;/a&gt;
  IntelliJ IDEA Ultimate (IDE)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wDlC-HzO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uksr6o9lkgtmqwvo9ts5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wDlC-HzO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uksr6o9lkgtmqwvo9ts5.png" alt="Image description" width="880" height="615"&gt;&lt;/a&gt;&lt;br&gt;
IntelliJ IDEA Ultimate is a Java-centric IDE that is also popular for JavaScript development. At the time of its first release in 2001, IntelliJ was one of the first Java IDEs to integrate functionalities such as code navigation and code refactoring. Luckily, IntelliJ has more capabilities today, including coding assistance and support for JavaScript frameworks such as Node.js.&lt;/p&gt;

&lt;p&gt;IntelliJ is a JetBrains product. If you choose IntelliJ, give yourself time to adapt, as some users report a steep learning curve. IntelliJ has a free and open-source counterpart, IntelliJ IDEA Community, but it unfortunately doesn’t support JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intuitive user interface&lt;/li&gt;
&lt;li&gt;Accurate autocompletion based on DOM model&lt;/li&gt;
&lt;li&gt;Accessibility features include a screen reader&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Indexing can be slow&lt;/li&gt;
&lt;li&gt;Steeper learning curve&lt;/li&gt;
&lt;li&gt;Expensive &lt;/li&gt;
&lt;li&gt;Free version doesn’t support JavaScript&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Use case&lt;/strong&gt;: You’re a professional who needs a wide set of functionalities for your projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Price&lt;/strong&gt;: $49.90 per month for individual users. &lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#komodo-edit-ce-and-komodo-ide"&gt;
  &lt;/a&gt;
  Komodo Edit (CE) and Komodo IDE
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VhMSAdjX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ue94gnrqwy2sbvpstzp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VhMSAdjX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ue94gnrqwy2sbvpstzp.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Developed by ActiveState, Komodo Edit and Komodo IDE are applications used for dynamic programming languages. Komodo Edit is a free open-source code editor. Its commercial counterpart, Komodo IDE, is an IDE with expanded functionalities. Komodo IDE is now free as part of the ActiveState platform. &lt;/p&gt;

&lt;p&gt;Beginners may find it easier to start with Komodo Edit, as some users report a steep learning curve for Komodo IDE. Komodo Edit offers an inbuilt FTP client, autocompletion, code folding, and smart syntax highlighting. More advanced functionalities, such as debugging and unit testing, are reserved for Komodo IDE. Both can be customized with plugins and macros.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Macros customization&lt;/li&gt;
&lt;li&gt;Komodo IDE functionalities include live preview, Git integration, version control, and remote collaboration&lt;/li&gt;
&lt;li&gt;Regularly maintained and improved&lt;/li&gt;
&lt;li&gt;Cross-platform&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Steeper learning curve for beginners&lt;/li&gt;
&lt;li&gt;Advanced features reserved for Komodo IDE&lt;/li&gt;
&lt;li&gt;Komodo IDE is not supported or maintained by developers for Python&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Use case&lt;/strong&gt;: You want a minimalist coding environment. You’re actively prototyping and showcasing websites.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Price&lt;/strong&gt;: Komodo Edit is free. Komodo IDE is free as part of the open-source ActiveState Platform.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-cloud9-ide"&gt;
  &lt;/a&gt;
  AWS Cloud9 (IDE)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PTFTV57q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o6lp05vyh92vvbg3gwyh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PTFTV57q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o6lp05vyh92vvbg3gwyh.png" alt="Image description" width="880" height="520"&gt;&lt;/a&gt;&lt;br&gt;
AWS Cloud9 is an IDE hosted on the cloud. Anyone with a stable internet connection and AWS account can access the power of this online IDE. This is especially beneficial for those who can’t afford to locally install a heavy IDE on their device. &lt;/p&gt;

&lt;p&gt;AWS Cloud9’s functionalities include real-time language analysis and syntax highlighting. AWS Cloud9 also lets you share and edit code with collaborators in real-time. The IDE can be further customized with plugins. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intuitive user interface&lt;/li&gt;
&lt;li&gt;Real-time collaboration prevents merge conflicts and overwriting&lt;/li&gt;
&lt;li&gt;Functionalities include Kube tooling and integrated shell&lt;/li&gt;
&lt;li&gt;Local installation not needed
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Requires stable Internet access&lt;/li&gt;
&lt;li&gt;Not free &lt;/li&gt;
&lt;li&gt;Requires AWS account&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Use case&lt;/strong&gt;: You need an IDE’s functionalities but can’t afford to install one locally on your machine. You need team collaboration tools. You’re interested in serverless development and want a development environment that is preconfigured to support it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Price&lt;/strong&gt;: AWS Cloud 9 is priced with a pay-for-value billing model.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#netbeans-ide"&gt;
  &lt;/a&gt;
  NetBeans (IDE)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gCQ-dIor--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wow9htsbxhcuvrxpgabs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gCQ-dIor--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wow9htsbxhcuvrxpgabs.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
NetBeans is a free IDE that is well-known to Java programmers. While it's most commonly used for Java, NetBeans supports multiple languages including JavaScript, HTML5, and CSS3. The NetBeans JavaScript editor comes with syntax highlighting and autocompletion, as well as inbuilt jQuery support. NetBeans supports JavaScript frameworks such as Angular, Express, Vue, React, and Mocha.&lt;/p&gt;

&lt;p&gt;Many programmers love NetBeans for its intuitive and customizable interface. It comes out of the box with many functionalities, so you can hit the ground running upon installation. However, NetBeans is known to be demanding on resources. It may not run smoothly if your device has lower specs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Features include a debugger, inbuilt Git support, and code folding&lt;/li&gt;
&lt;li&gt;UI is easy to customize&lt;/li&gt;
&lt;li&gt;Available on Windows, Mac OS, Linux&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Difficult to integrate with other tools&lt;/li&gt;
&lt;li&gt;Minimal add-on features&lt;/li&gt;
&lt;li&gt;Demanding on resources&lt;/li&gt;
&lt;li&gt;Can be slow even for small front-end projects&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Use case&lt;/strong&gt;: You’re a Java or polyglot developer with a device that can handle a heavyweight application. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Price&lt;/strong&gt;: Free.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#eclipse-ide"&gt;
  &lt;/a&gt;
  Eclipse (IDE)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VvISczCq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/16qvywz0ebe0wdka6w0z.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VvISczCq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/16qvywz0ebe0wdka6w0z.jpeg" alt="Image description" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Eclipse is an open-source IDE that was first released in 2004. Its focus is Java development, but it also supports JavaScript and other programming languages. Eclipse has a base workspace and can be customized with plugins to expand functionality. You’ll want to factor in extra setup time because of this. JavaScript development tools, for instance, will need to be installed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Highly customizable &lt;/li&gt;
&lt;li&gt;Large user base and community-built plugins&lt;/li&gt;
&lt;li&gt;Uses Emacs key bindings&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Limited support &lt;/li&gt;
&lt;li&gt;Demanding on resources&lt;/li&gt;
&lt;li&gt;Many consider the UI counterintuitive&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Use case&lt;/strong&gt;: You prefer open-source software and don’t mind taking time to customize it. You enjoy what others may consider an old-school interface.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Price&lt;/strong&gt;: Free.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sublime-text-ce"&gt;
  &lt;/a&gt;
  Sublime Text (CE)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hu5bWGCq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ammtmonvvxs1ifzkd3x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hu5bWGCq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ammtmonvvxs1ifzkd3x.png" alt="Image description" width="880" height="442"&gt;&lt;/a&gt;&lt;br&gt;
Sublime Text is a source code editor for both programming and markup languages. Many developers are drawn to Sublime Text for its speed and versatility. It's a highly customizable code editor with an extensive selection of user-built plugin packages.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fast, lightweight, and customizable&lt;/li&gt;
&lt;li&gt;Features include color coding, multi-selection, customizable hotkeys, and Git integration&lt;/li&gt;
&lt;li&gt;Available on Windows, macOS, and Linux &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lacks intelligent code completion&lt;/li&gt;
&lt;li&gt;Takes time to set up &lt;/li&gt;
&lt;li&gt;Steeper learning curve&lt;/li&gt;
&lt;li&gt;Work environment features are lacking&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Use case&lt;/strong&gt;: &lt;br&gt;
You prioritize application speed and regularly work with large files. You are a freelancer or work for a small business and don't need robust work environment features.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Price&lt;/strong&gt;: $99 per year for individual users.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#atom-ce"&gt;
  &lt;/a&gt;
  Atom (CE)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8eowAezE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v8qacasj4hmjzf8gyrd5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8eowAezE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v8qacasj4hmjzf8gyrd5.png" alt="Image description" width="880" height="573"&gt;&lt;/a&gt;&lt;br&gt;
Atom is GitHub's free and open-source code editor. It comes with default features such as smart code completion and an inbuilt package manager. Known as the “hackable” text editor, it’s highly customizable via plugins. Atom is based on the Electron framework and is well-suited for building cross-platform desktop applications using Chromium and Node.js. &lt;/p&gt;

&lt;p&gt;Atom is celebrated for its simple UI and customizability. On the other hand, many users have experienced bugs, freezing, and crashing. This is a larger application that will likely slow you down if you have a weaker machine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Highly customizable UI and functionality&lt;/li&gt;
&lt;li&gt;Features include GitHub integration, the APM integrated package manager, and multiple panes &lt;/li&gt;
&lt;li&gt;Open-source with a large and supportive community&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Large application size exceeding 100MB&lt;/li&gt;
&lt;li&gt;Long load time, occasional crashes and freezes&lt;/li&gt;
&lt;li&gt;Longer set up if expanding functionality through plugins&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Use case&lt;/strong&gt;: You favor customizability, an intuitive interface, and a strong online community. Your device is not faint of heart and can handle a large application. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Price&lt;/strong&gt;: Free. &lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#visual-studio-code-ce"&gt;
  &lt;/a&gt;
  Visual Studio Code (CE)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Itqi_dae--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ahomxlmx4fbpyr8xwmaj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Itqi_dae--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ahomxlmx4fbpyr8xwmaj.png" alt="Image description" width="880" height="562"&gt;&lt;/a&gt;&lt;br&gt;
Visual Studio Code (VS Code) is a free code editor developed by Microsoft. As a code editor, it lacks inbuilt tooling and testing functionality. However, these functionalities can be installed with plugins and extensions. VS Code boasts a large community and strong technical support.&lt;/p&gt;

&lt;p&gt;VS Code has an IDE counterpart, Visual Studio. Visual Studio is especially revered as an IDE for C, C++, and C Sharp. However, it is not free, and beginner JavaScript developers will likely find it unnecessarily complex. As long as you don’t mind installing plugins to expand VS Code's functionalities, we think VS Code offers plenty enough for JavaScript development. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Support for JavaScript frameworks including React and Node.js&lt;/li&gt;
&lt;li&gt;Features include code folding, git integration, debugging, and IntelliSense (Microsoft's implementation of code completion)&lt;/li&gt;
&lt;li&gt;Screen reader for accessibility&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Steeper learning curve&lt;/li&gt;
&lt;li&gt;Long set up time to install extensions and plugins &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Use case&lt;/strong&gt;: You’re a developer in the corporate world. You want a versatile tool that can handle complex projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Price&lt;/strong&gt;: Free.&lt;br&gt;
 &lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#notepad-ce"&gt;
  &lt;/a&gt;
  Notepad++ (CE)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Djl5zXpt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ynbc1lhpn9j7rp9agf71.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Djl5zXpt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ynbc1lhpn9j7rp9agf71.png" alt="Image description" width="880" height="476"&gt;&lt;/a&gt;&lt;br&gt;
Notepad++ is a free source code editor for Windows users. It is an extremely lightweight application that is ideal for those with limited device specs. It comes out of the box with features such as code folding and syntax highlighting. It also has support for macros and plugins for additional customization.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy to install and use&lt;/li&gt;
&lt;li&gt;Most lightweight application &lt;/li&gt;
&lt;li&gt;Supports plugins and macros customization&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Only available on Windows&lt;/li&gt;
&lt;li&gt;Lacks intelligent code completion and syntax checking&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Use case&lt;/strong&gt;: You are a Windows user who needs a lightweight application for your device. You want to practice basic projects without installing and customizing a complex IDE. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Price&lt;/strong&gt;: Free.&lt;br&gt;
 &lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comparison-chart-best-javascript-ides-and-code-editors"&gt;
  &lt;/a&gt;
  Comparison chart: best JavaScript IDEs and code editors
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gETBtQS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ni0okikc3gezag6li4e2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gETBtQS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ni0okikc3gezag6li4e2.png" alt="comparison chart javascript ides code editors" width="880" height="670"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;a&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-to-learn-next"&gt;
  &lt;/a&gt;
  What to learn next
&lt;/h2&gt;

&lt;p&gt;You’ve found your favorite IDE or code editor. What now? The best way to master your JavaScript skills is to start writing code. &lt;/p&gt;

&lt;p&gt;Check out Educative’s &lt;a href="https://www.educative.io/courses/javascript-in-practice-getting-started"&gt;&lt;strong&gt;JavaScript in Practice: Getting Started course&lt;/strong&gt;&lt;/a&gt;. This comprehensive course covers JavaScript fundamentals every web developer should know. In fact, you don’t need an IDE or code editor to get started. The course includes a cloud-based IDE so you can get hands-on coding practice anywhere.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Happy learning!&lt;/em&gt;&lt;br&gt;
 &lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#continue-learning-about-javascript"&gt;
  &lt;/a&gt;
  Continue learning about JavaScript
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/acing-the-javascript-interview-top-questions-explained"&gt;Acing the JavaScript Interview: top questions explained&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/d3-js-tutorial-bar-chart"&gt;D3.js tutorial: Build your first bar chart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/react-and-typescript"&gt;Getting started with React and TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>productivity</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>We all make mistakes. We're only human</title>
      <author>Ilya Kulgavy</author>
      <pubDate>Mon, 08 Nov 2021 19:28:33 +0000</pubDate>
      <link>https://dev.to/kulgavy/we-all-make-mistakes-were-only-human-2obo</link>
      <guid>https://dev.to/kulgavy/we-all-make-mistakes-were-only-human-2obo</guid>
      <description>&lt;p&gt;Building anything technical is hard.&lt;/p&gt;

&lt;p&gt;Even if you’re just a developer working on your own, there are a ton of moving pieces.&lt;/p&gt;

&lt;p&gt;We're connecting increasingly complex systems, and our end users come in every shape and size imaginable. It's many hands, in many pots.&lt;/p&gt;

&lt;p&gt;With so much complexity and the added pressure of trying to ship early, we make mistakes.&lt;/p&gt;

&lt;p&gt;We misunderstand requirements. Code gets sloppy. We’re off in our vision or miss business requirements. Plans go sideways.&lt;/p&gt;

&lt;p&gt;These mistakes add up. They compound, and they result in buggy, poorly working and at times unsecure products.&lt;/p&gt;

&lt;p&gt;There has to be a better way.&lt;/p&gt;

&lt;p&gt;We have to properly and fully test what we build.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#software-failures-in-the-us-cost-the-economy-usd-208-trillion-in-2021"&gt;
  &lt;/a&gt;
  Software failures in the US cost the economy USD 2.08 trillion in 2021.
&lt;/h4&gt;

&lt;p&gt;Can you afford to contribute to that cost?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#welcome-to-the-world-of-software-testing"&gt;
  &lt;/a&gt;
  Welcome to the world of software testing
&lt;/h3&gt;

&lt;p&gt;Software (or app) testing is how we check whether our finished product matches the expected requirements and ensures that our software is bug-free and performs well.&lt;/p&gt;

&lt;p&gt;Whether you're a solopreneur wanting to introduce more rigorous testing methodologies, or a growing business hiring a QA team, it's clear that development projects of all sizes can benefit from a defined QA process.&lt;/p&gt;

&lt;p&gt;Software testing can also provide an objective, independent view of your software to allow you to appreciate and understand the risks in what you’re looking to build.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-cost-of-poor-testing"&gt;
  &lt;/a&gt;
  The cost of poor testing
&lt;/h3&gt;

&lt;p&gt;Need more convincing on the value of testing?&lt;/p&gt;

&lt;p&gt;To start, software defects can damage a brand's reputation — leading to frustrated and lost customers.&lt;/p&gt;

&lt;p&gt;For startups and products just trying to get off the ground, bugs and incomplete features can mean the difference between a killer launch or the scrap heap.&lt;/p&gt;

&lt;p&gt;Small dev teams have the magical ability to address issues swiftly, but your time is so much better spent building new than fixing old.&lt;/p&gt;

&lt;p&gt;Focus on testing and stay focused on the new.&lt;/p&gt;

&lt;p&gt;Continue reading: &lt;a href="https://testingmonkey.io/blog/importance-of-testing"&gt;https://testingmonkey.io/blog/importance-of-testing&lt;/a&gt;&lt;/p&gt;

</description>
      <category>product</category>
      <category>testing</category>
      <category>programming</category>
      <category>startup</category>
    </item>
    <item>
      <title>Building on AWS Using Github Copilot and AWS CDK</title>
      <author>Pedram Hamidehkhan</author>
      <pubDate>Mon, 08 Nov 2021 19:21:47 +0000</pubDate>
      <link>https://dev.to/pedramha/building-on-aws-using-github-copilot-and-aws-cdk-4ja8</link>
      <guid>https://dev.to/pedramha/building-on-aws-using-github-copilot-and-aws-cdk-4ja8</guid>
      <description>&lt;p&gt;In this post we are going to have a look at Github's Copilot and how we can leverage it spin up some resources using AWS CDK.&lt;br&gt;
Copilot is still in technical preview. But if you already signed up for it and are lucky enough like me to have access to it, you can enable it as a simple VS Code extension.&lt;br&gt;
Of course, I do not expect for the Copilot to be very mature, as it is not publicly released yet, but I believe it seems very promising and arguably it changes the way we think about software development. Just like driving assistance systems, which are not a replacement for a driver, Github Copilot will also not replace developers, but rather empowers them.&lt;br&gt;
There are already many videos on youtube and blog posts explaining basic functions that Copilot automatagically generates. In this post though, we try to see how it can be used in a serverless/aws world.&lt;br&gt;
As you might already know, copilot uses billions of lines of code on Github, to give you suggestion while coding. It actually is even giving me suggestions a I am writing this post. What I am going to do is to perform the same tasks I did in  &lt;a href="https://github.com/pedramha/cdk-crudsample"&gt;this post &lt;/a&gt; using Copilot.&lt;br&gt;
Some of the things I explain here are a bit difficult to grasp in writing form, so I will explain them in a video in a later parts of this post.&lt;/p&gt;

&lt;p&gt;So as always, first thing's first, let's initialize an empty CDK typescript project:&lt;/p&gt;

&lt;p&gt;cdk init --language=typescript.&lt;/p&gt;

&lt;p&gt;Then we go to package.json to declare the dependencies for our project.&lt;br&gt;
Add the following modules the dependencies:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @aws-cdk/aws-ecs @aws-cdk/aws-ecs-patterns @aws-cdk/aws-ecr-assets --save
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;By default, CDK deploys the VPC for you, but if you want control over your VPC, go ahead and import EC2 Module and add the VPC.&lt;br&gt;
Then go to the lib folder and the typescript file for your application stack.&lt;/p&gt;

&lt;p&gt;Add the following import statements to before class declaration:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import cdk = require("@aws-cdk/core");
import apigateway = require("@aws-cdk/aws-apigateway");
import dynamodb = require("@aws-cdk/aws-dynamodb");
import lambda = require("@aws-cdk/aws-lambda");
import { RemovalPolicy } from "@aws-cdk/core";
import { create } from "domain";
import { BillingMode } from "@aws-cdk/aws-dynamodb";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;As I write const dynamodbTable, copilot automatically generates the following part.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;new dynamodb.Table(this, "dynamodbTable", {
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;So it only instantiates the table using the packages I provided. However, as I go to the next line to provide the partition key and other settings for the table, it surprisingly suggested the following code:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;partitionKey: { name: "id", type: dynamodb.AttributeType.STRING },
billingMode: BillingMode.PAY_PER_REQUEST,
removalPolicy: RemovalPolicy.DESTROY,
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Regarding the lambda functions, I start with the get all function. As I mentioned, it is important that you give meaningful names to your functions, because copilot will use those names to generate the code. So I only type const getAllItemsLambda, copilot generates the following for me:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  const getAllItemsLambda = new lambda.Function(this, "getAllItemsLambda", {
    runtime: lambda.Runtime.NODEJS_12_X,
    code: lambda.Code.fromAsset("lambda"),
    handler: "getAllItems.handler",
    environment: {
      TABLE_NAME: dynamodbTable.tableName,
    },
  });
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Very nice so far, regarding the IAM Roles for our lambdas, as I start the name of the db, I get the following suggestions:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  dynamodbTable.grantReadWriteData(createItemsLambda);
  dynamodbTable.grantReadWriteData(getAllItemsLambda);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;This is nice, though, it doesn't respect the principal of least privilege. so I amend the second line to grantReadData.&lt;/p&gt;

&lt;p&gt;Now let's go for the API Gateway. As I start typing api, I get the following suggestion:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const api = = new apigateway.RestApi(this, "restApi", {
    restApiName: "cdkwithcopilot",
  });
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;I also get the following suggestions as I type the name of the resource:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  const root = api.root;
  const getAllItemsApi = new apigateway.LambdaIntegration(getAllItemsLambda);
  root.addMethod("GET", getAllItemsApi);

  const createItemsApi = new apigateway.LambdaIntegration(createItemsLambda);
  root.addMethod("POST", createItemsApi);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;All the resources were suggested as expected, only for the usage plan, copilot wrongly suggested api.UsagePlane instead of api.addUsagePlan . Also, it had a little problem when I added the Api Key.&lt;/p&gt;

&lt;p&gt;Getting to the lambda functions, I was able to generate the following using copilot:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const AWS = require('aws-sdk');
    const db = new AWS.DynamoDB.DocumentClient();
    const TablName = process.env.TABLE_NAME;

    export const handler = async (event: any = {}): Promise&amp;lt;any&amp;gt; =&amp;gt; {
        const params = {
            TableName: TablName
        };
        const result = await db.scan(params).promise();
        return result.Items;
    }    
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Also for the other lambda function, which creates the items:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const AWS = require('aws-sdk');
    const db = new AWS.DynamoDB.DocumentClient();
    const TABLE_NAME = process.env.TABLE_NAME || ''; //added manually

    export const handler = async (event: any = {}): Promise&amp;lt;any&amp;gt; =&amp;gt; {

        const params = {
            TableName: TABLE_NAME
        };
        try{
            const response = await db.scan(params).promise();
            return {status: 'success', data: response.Items};
        }
        catch(dbError){
            return{status: 'error', data: dbError};
        }
    };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Now the moment of truth: CDK synth&lt;br&gt;
And worked as expected. I was truly amazed by how powerful copilot is. I even wrote a few lines of this blog post with it!&lt;br&gt;
Arguably copilot is not a replacement for developers, but an amazing tool which helps us (developers) build better software.&lt;br&gt;
I hope you enjoyed this post.&lt;br&gt;
Thank you very much for reading.&lt;br&gt;
Pedram and Copilot &lt;/p&gt;

</description>
    </item>
    <item>
      <title>MongoDB $weeklyUpdate (November 8, 2021): Latest MongoDB Tutorials, Events, Podcasts, &amp; Streams!</title>
      <author>Adrienne Tacke</author>
      <pubDate>Mon, 08 Nov 2021 19:15:30 +0000</pubDate>
      <link>https://dev.to/mongodb/mongodb-weeklyupdate-november-8-2021-latest-mongodb-tutorials-events-podcasts-streams-5a77</link>
      <guid>https://dev.to/mongodb/mongodb-weeklyupdate-november-8-2021-latest-mongodb-tutorials-events-podcasts-streams-5a77</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hi-everyone"&gt;
  &lt;/a&gt;
  👋 Hi everyone!
&lt;/h2&gt;

&lt;p&gt;Welcome to MongoDB $weeklyUpdate! &lt;/p&gt;

&lt;p&gt;Here, you'll find the latest developer tutorials, upcoming official MongoDB events, and get a heads up on our latest Twitch streams and podcast, curated by &lt;a href="https://twitter.com/AdrienneTacke"&gt;Adrienne Tacke&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#are-you-joining-us-at-local-london"&gt;
  &lt;/a&gt;
  Are you joining us at .local London?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GSJDKGBc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d3cy9zhslanhfa.cloudfront.net/media/3800C044-6298-4575-A05D5C6B7623EE37/460F74C3-D115-4B7B-898900B16EA2A329/webimage-E9AF5178-15A7-4794-B0E3AF0915071856.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GSJDKGBc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d3cy9zhslanhfa.cloudfront.net/media/3800C044-6298-4575-A05D5C6B7623EE37/460F74C3-D115-4B7B-898900B16EA2A329/webimage-E9AF5178-15A7-4794-B0E3AF0915071856.png" alt="MongoDB .local London banner. Shows date of event (Nov 9th, 2021) and a photo of Big Ben" width="800" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A uniquely hybrid experience offering education, exploration, and entertainment curated for those joining live in person at Evolution London, live from home, or on-demand on your own schedule. We'll be at Evolution London and all across the world virtually!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://events.mongodb.com/dotlocallondon"&gt;Register Now&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🌟 Use code MONIQUETACKE75 for an extra 75% off for in-person tickets!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#freshest-tutorials-on-devhub"&gt;
  &lt;/a&gt;
  🎓 Freshest Tutorials on &lt;a href="https://developer.mongodb.com/"&gt;DevHub&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Want to find the latest MongoDB tutorials and articles created for developers, by developers? Look no further than our &lt;a href="https://developer.mongodb.com/"&gt;DevHub&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#making-swiftui-previews-work-for-you"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/how-to/swiftui-previews/"&gt;Making SwiftUI Previews Work For You&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/andrewmorgan"&gt;Andrew Morgan&lt;/a&gt; &lt;br&gt;
Get the most out of iOS Canvas previews to improve your productivity and app quality.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#turning-your-local-game-into-an-online-experience-with-mongodb-realm-sync"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/how-to/realm-using-realm-sync-in-unity/"&gt;Turning Your Local Game into an Online Experience with MongoDB Realm Sync&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com/developer/author/dominic-frei/"&gt;Dominic Frei&lt;/a&gt; &lt;br&gt;
This article shows how to migrate from using a local Realm to MongoDB Realm Sync. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#mongodb-network-compression-a-winwin"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/how-to/mongodb-network-compression"&gt;MongoDB Network Compression: A Win-Win&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com/developer/author/brian-leonard/"&gt;Brian Leonard&lt;/a&gt; &lt;br&gt;
This article provides two tuneable Python scripts, read-from-mongo.py and write-to-mongo.py, that you can use to see the impact of network compression yourself.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#lets-give-your-realmpowered-ionic-web-app-the-native-treatment-on-ios-and-android"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/how-to/ionic-realm-web-app-convert-to-mobile-app/"&gt;Let’s Give Your Realm-Powered Ionic Web App the Native Treatment on iOS and Android!&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com/developer/author/diego-freniche/"&gt;Diego Freniche&lt;/a&gt; &lt;br&gt;
We can convert an existing Ionic React web app that saves data in MongoDB Realm using Apollo GraphQL into an iOS and Android app using a couple of commands. &lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#mongodb-on-twitch-amp-youtube"&gt;
  &lt;/a&gt;
  📺 MongoDB on &lt;a href="https://www.twitch.tv/mongodb"&gt;Twitch&lt;/a&gt; &amp;amp; &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;YouTube&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;We stream tech tutorials, live coding, and talk to members of our community via &lt;a href="https://www.twitch.tv/mongodb"&gt;Twitch&lt;/a&gt; and &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;YouTube&lt;/a&gt;. Sometimes, we even stream twice a week! Be sure to &lt;a href="https://www.twitch.tv/mongodb"&gt;follow us on Twitch&lt;/a&gt; and &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;subscribe to our YouTube channel&lt;/a&gt; to be notified of every stream!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Latest Stream&lt;/em&gt;&lt;br&gt;
&lt;a href="https://www.twitch.tv/videos/1186649413"&gt;https://www.twitch.tv/videos/1186649413&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🍿 &lt;a href="https://www.twitch.tv/mongodb"&gt;Follow us&lt;/a&gt; on Twitch and &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;subscribe to our YouTube channel&lt;/a&gt; so you never miss a stream!&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#%F0%9F%8E%99-last-word-on-the-mongodb-podcast"&gt;
  &lt;/a&gt;
  🎙 Last Word on the &lt;a href="https://mongodb.libsyn.com/"&gt;MongoDB Podcast&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Latest Episode&lt;/em&gt;&lt;br&gt;
&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/7rdCjdzTZesDqukXfTNqHP"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Catch up on past episodes&lt;/em&gt;:&lt;br&gt;
Ep. 84 - &lt;a href="https://open.spotify.com/episode/1skLDE7gH2AMsXIDHvLuiq?si=bUXBXLJrSoadyjPJfk8jTw"&gt;Shrey Batra - Writing Scalable Applications for Big Data with MongoDB&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ep. 83 - &lt;a href="https://open.spotify.com/episode/3RclKR2MycRH4y3qTXdlpd?si=YaH5kDmMS06PQvkoiX0wHA"&gt;Online Archive and Data Lake with Benjamin Flast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ep. 82 - &lt;a href="https://open.spotify.com/episode/4z0EYeJPti4peMvq56MQlV?si=RrF7zgWvQFmL9HSRriOJVg"&gt;Serverless with Chris Shum&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Not listening on Spotify? We got you! We're most likely on your favorite podcast network, including &lt;a href="https://podcasts.apple.com/us/podcast/the-mongodb-podcast/id1500452446"&gt;Apple Podcasts&lt;/a&gt;, &lt;a href="https://player.fm/series/the-mongodb-podcast"&gt;PlayerFM&lt;/a&gt;, &lt;a href="https://podtail.com/en/podcast/the-mongodb-podcast/"&gt;Podtail&lt;/a&gt;, and &lt;a href="https://www.listennotes.com/podcasts/the-mongodb-podcast-mongodb-0g6fUKMDN_y/"&gt;Listen Notes&lt;/a&gt; 😊)&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#mongodb-devrel-around-the-interwebz"&gt;
  &lt;/a&gt;
  🌍 MongoDB DevRel around the Interwebz
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Watch our team do their thang at various conferences, meetups, and podcasts around the world (virtually, for now). Also, find external articles and guest posts from our DevRel team here!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;📅 Upcoming&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Nov 8: &lt;br&gt;
&lt;a href="https://2021.devrel.net/speaker/lauren-schaefer/"&gt;DevRelCon&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/Lauren_Schaefer"&gt;Lauren Schaefer&lt;/a&gt; will be at DevRelCon Conference to give their talk "SEO 101 for DevRel"!&lt;/p&gt;

&lt;p&gt;Nov 10: &lt;a href="https://events.codemotion.com/conferences/online/2021/online-tech-conference-italian-edition-autumn/speakers"&gt;Codemotion&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/Lauren_Schaefer"&gt;Lauren Schaefer&lt;/a&gt; will be at Codemotion Conference to give their talk "How to Raise Your Profile as a Developer (And Why You Should Bother!)"!&lt;/p&gt;

&lt;p&gt;Nov 17: &lt;a href="https://events.pinetool.ai/2275/#sessions/83055?referrer%5Bpathname%5D=%2Fsessions&amp;amp;referrer%5Bsearch%5D=&amp;amp;referrer%5Btitle%5D=Sessions"&gt;Build Stuff Lithuania&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/adriennetacke"&gt;Adrienne Tacke&lt;/a&gt; will be in Vilnius to give her talk "Multi-Cloud Magic: Leveraging Multi-Cloud Clusters in the Real World" at Build Stuff Lithuania!&lt;/p&gt;

&lt;p&gt;💡 These $weeklyUpdates are always posted to the &lt;a href="https://www.mongodb.com/community/forums/"&gt;MongoDB Community Forums&lt;/a&gt; &lt;em&gt;first&lt;/em&gt;! &lt;a href="https://account.mongodb.com/account/register"&gt;Sign up&lt;/a&gt; today to always get first dibs on these $weeklyUpdates and other MongoDB announcements, interact with the MongoDB community, and help others solve MongoDB related issues!&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>database</category>
      <category>mobile</category>
      <category>programming</category>
    </item>
    <item>
      <title>What's new in Micro Focus Professional 2021 R2?</title>
      <author>NaveenKumar Namachivayam ⚡</author>
      <pubDate>Mon, 08 Nov 2021 18:54:38 +0000</pubDate>
      <link>https://dev.to/qainsights/whats-new-in-micro-focus-professional-2021-r2-5943</link>
      <guid>https://dev.to/qainsights/whats-new-in-micro-focus-professional-2021-r2-5943</guid>
      <description>&lt;p&gt;Last week, Micro Focus released its next iteration of LoadRunner products, including LoadRunner Professional, LoadRunner Enterprise, DevWeb standalone, and other products. It has been a while since I worked on LoadRunner in my projects. But constantly I will check what's going on in the product line. In this blog post we will see what's new in Micro Focus Professional 2021 R2?&lt;/p&gt;

&lt;p&gt;When I try to download the community edition of LoadRunner Professional, my user ID didn't work and displayed a message stating that to use the business email ID. This check was not there earlier, though the placeholder displays the business or student email ID, Gmail or Outlook would work. That was my first surprise. &lt;/p&gt;

&lt;p&gt;While trying to attempt to download the community edition, I got an email stating that the trial would be evaluated. Another surprise. Then I posted this on LinkedIn. No one wants this kind of onboarding experience. I will write more about this in a separate post. Let us focus on what's new in this latest release.&lt;/p&gt;

&lt;h2&gt;New Features in VuGen 2021 R2&lt;/h2&gt;

&lt;p&gt;In VuGen 2021 R2, you will get two new functions (technically one) : &lt;code&gt;web_util_set_request_header&lt;/code&gt; and &lt;code&gt;web.utilSetRequestHeader&lt;/code&gt;. This asynchronous function helps to set the request header name and value for the next request.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/11/image.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RvusjYEq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/11/image.png" alt="What's new in Micro Focus Professional 2021 R2?" width="700" height="501"&gt;&lt;/a&gt;What's new in Micro Focus Professional 2021 R2?&lt;/p&gt;

&lt;p&gt;The following protocols got enhancements, feature support and more: Java, Teradici PCoIP, Citrix, and SAP GUI. &lt;/p&gt;

&lt;p&gt;The integration window b/w LoadRunner Enterprise and VuGen now will let you know whether the script is locked by another user or not. &lt;/p&gt;

&lt;p&gt;Bug fixes and enhancements w/ Silk Performer integration. &lt;/p&gt;

&lt;p&gt;LoadRunner Professional now ships with Gatling 3.6.0. &lt;/p&gt;

&lt;p&gt;No love for Windows 11 in this release, which was the most anticipated feature by me. &lt;/p&gt;

&lt;p&gt;The most interesting feature in this release is auto-detecting the local load generators.  If you are planning your test tool infrastructure, please try this feature immediately. &lt;/p&gt;

&lt;p&gt;LGs now support RHEL 8.4 and Ubuntu 20.04. &lt;/p&gt;

&lt;p&gt;If you are in Azure ecosystem, now you can integrate LoadRunner Professional with Azure Monitor.&lt;/p&gt;

&lt;p&gt;Now you can export the graph data to Excel, the default format of the graph data file is now CSV. I remember proposing this feature a while ago. :)&lt;/p&gt;

&lt;h2&gt;TruClient Features&lt;/h2&gt;

&lt;p&gt;TruClient now ships with Chromium 91. The new Client-Side measurement graph has been added for user experience.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/11/image-1.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qgrObtAD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/11/image-1.png" alt="Wait For File Download" width="468" height="206"&gt;&lt;/a&gt;Wait For File Download&lt;/p&gt;

&lt;p&gt;The new step has been added to validate the file download. &lt;/p&gt;

&lt;p&gt;The interactive walkthrough guides are already sunset. Instead, you can see the video format. &lt;/p&gt;

&lt;p&gt;TruClient Browser for TruClient Native Mobile protocol is now manual installation starting from R2 release.&lt;/p&gt;

&lt;p&gt;Apart from the above features, you can see the bug fixes, security patches, platform support which are busines as usual.&lt;/p&gt;

&lt;h2&gt;DevWeb Features&lt;/h2&gt;

&lt;p&gt;DevWeb has a pack of new features and enhancements. Now you can integrate DevWeb w/ LRC using ScaLRD supports on-premise LG.&lt;/p&gt;

&lt;p&gt;Improvements have been made in &lt;strong&gt;Correlations&lt;/strong&gt;. Runtime settings via command line now support additional arguments using &lt;code&gt;userArgs&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For ARM enthusiasts, DevWeb now supports Apple M1 ARM. &lt;/p&gt;

&lt;p&gt;Error reporting has now improved, and other fixes have been shipped in this release.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qain.si/devweb" rel="noopener noreferrer"&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt; Buy my DevWeb Course &lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Are you ready to upgrade to LoadRunner Professional 2021 R2 in your company? &lt;/p&gt;

&lt;p&gt;Please let me know in the comments. &lt;/p&gt;

</description>
      <category>performance</category>
      <category>testing</category>
      <category>webperf</category>
    </item>
  </channel>
</rss>
