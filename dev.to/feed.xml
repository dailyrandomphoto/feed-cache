<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How Does Auth Work in a React App with AWS?</title>
      <author>Brian H. Hough</author>
      <pubDate>Tue, 24 Aug 2021 19:03:24 +0000</pubDate>
      <link>https://dev.to/aws-builders/how-does-auth-work-in-a-react-app-with-aws-1f6m</link>
      <guid>https://dev.to/aws-builders/how-does-auth-work-in-a-react-app-with-aws-1f6m</guid>
      <description>&lt;p&gt;For this &lt;a href="https://www.youtube.com/embed/LoPB-3gnI6I"&gt;Tech Stack in 10&lt;/a&gt;, I'm diving into some best practices for using authentication in your full stack application.&lt;/p&gt;

&lt;p&gt;Today's episode focuses on serverless authentication with AWS, as well as some best practices of what to do and what not to do üë®‚Äçüíªüí≠&lt;/p&gt;

&lt;p&gt;Here‚Äôs a glance at what you‚Äôll learn in this episode:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=LoPB-3gnI6I&amp;amp;t=0s"&gt;00:00&lt;/a&gt; Learnings from coaching 8 people on app development&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=LoPB-3gnI6I&amp;amp;t=71s"&gt;01:11&lt;/a&gt; Authentication in AWS primer&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=LoPB-3gnI6I&amp;amp;t=114s"&gt;01:54&lt;/a&gt; AppSync and GraphQL API overview&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=LoPB-3gnI6I&amp;amp;t=136s"&gt;02:16&lt;/a&gt; DynamoDB and database overview&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=LoPB-3gnI6I&amp;amp;t=180s"&gt;03:00&lt;/a&gt; withAuthenticator best practices&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=LoPB-3gnI6I&amp;amp;t=343s"&gt;05:43&lt;/a&gt; Experimenting with AmplifyAuthenticator + what not to do!&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=LoPB-3gnI6I&amp;amp;t=518s"&gt;08:38&lt;/a&gt; Discussion on multi-user authentication&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=LoPB-3gnI6I&amp;amp;t=627s"&gt;10:27&lt;/a&gt; Finalizing the AWS authentication in our app&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=LoPB-3gnI6I&amp;amp;t=693s"&gt;11:33&lt;/a&gt; Conclusion&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/LoPB-3gnI6I"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-user-authentication-in-an-app-context"&gt;
  &lt;/a&gt;
  üë®‚Äçüíª What Is User Authentication in an App Context?
&lt;/h2&gt;

&lt;p&gt;When you think about developing an authentication system for your software application, you must ensure your system is highly secure and durable, scalable for a growing user base, and able to keep your resources and authorization requirements in place across the application.&lt;/p&gt;

&lt;p&gt;User authentication is a process for confirming, and validating, the identity of a user within a system. It is necessary to create a system for account management for your software's users to ensure they must login with valid credentials before using certain (or all) parts of the product or service on the Internet.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y3l_fPQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1529490738614-4a83c19ed6b2%3Fixid%3DMnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8%26ixlib%3Drb-1.2.1%26auto%3Dformat%26fit%3Dcrop%26w%3D1350%26q%3D80" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y3l_fPQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1529490738614-4a83c19ed6b2%3Fixid%3DMnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8%26ixlib%3Drb-1.2.1%26auto%3Dformat%26fit%3Dcrop%26w%3D1350%26q%3D80" alt="security camera image"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Online services for authentication might require credentials, such as username and password that are used to identify your account within the pool of valid users. Perhaps you'll want to add in 2FA (Two-Factor-Authentication), an additional security mechanism for authentication to verify the users are who they say they are when they log in.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-does-serverless-authentication-work"&gt;
  &lt;/a&gt;
  üë®‚Äçüíª How does Serverless Authentication Work?
&lt;/h2&gt;

&lt;p&gt;Serverless authentication is a type of authentication that doesn't require the need for a physical in-house server to store your data. Instead, all of the actions, permissions, and rules are executed in the cloud and users can interact with the features and functionality without any need for a browser plugin. Authentication happens right within the app and gets users the resources and services they have been designated or signed up for.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#lets-take-a-real-life-example-like-the-below-image"&gt;
  &lt;/a&gt;
  Let's take a real life example like the below image:
&lt;/h3&gt;

&lt;p&gt;Your friend is hosting a birthday celebration and you are invited! üéÇ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OCZnMDH7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1528817466667-942353411fee%3Fixid%3DMnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8%26ixlib%3Drb-1.2.1%26auto%3Dformat%26fit%3Dcrop%26w%3D634%26q%3D80" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OCZnMDH7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1528817466667-942353411fee%3Fixid%3DMnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8%26ixlib%3Drb-1.2.1%26auto%3Dformat%26fit%3Dcrop%26w%3D634%26q%3D80" alt="door with buzzer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First of all, &lt;strong&gt;congrats&lt;/strong&gt; on the invite! Birthday parties are so much fun üéâ&lt;/p&gt;

&lt;p&gt;So you might gather your resources, such as a birthday present and an appetizer (extra points if there's an accompanying sauce or dip), and drive out to your friend's house.&lt;/p&gt;

&lt;p&gt;But...when you arrive, you are greeted by this metallic box with some buttons on it. Most remarkably, the door to enter is locked (there are other people's apartments here as well), so there's no way to just go up to your friend's house without a key. &lt;/p&gt;

&lt;p&gt;Well, were you thinking you could just walk into your friend's house without some sort of verification or authentication? ü§î&lt;/p&gt;

&lt;p&gt;&lt;em&gt;That wouldn't be too safe, right?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This metallic box will require you to perhaps, ~buzz~ your friend's speaker box (you will have to know the URL you intend to go to, such as &lt;a href="https://yourwebsite.com/signin"&gt;https://yourwebsite.com/signin&lt;/a&gt;) and then you will need to provide some sort of verification telling your friend who you are and that you are ready to come in (i.e. your username/password, or any such credentials).&lt;/p&gt;

&lt;p&gt;Your friend will hear your voice and then go, "ah yes, come on up old friend!", meaning the authentication worked (your verification checks out: you are in fact who you say you are), the door will ~buzz~ (you will be authenticated: the door will unlock), and you'll be allowed to enter (you are now an authorized user: you now have access to your services/resources in the house...err...I mean app).&lt;/p&gt;

&lt;p&gt;This is authentication in a nutshell, and hopefully gives a real life example of how this can work in an application. Software is very much the same way, and with a service like AWS Cognito user pools, this managed authentication service will let us do this with software and automation, rather than needing to ~buzz~ people in every time into our app. Could you imagine having to buzz people into your app every time? &lt;/p&gt;

&lt;p&gt;That would be I N S A N E üôà&lt;/p&gt;

&lt;p&gt;Luckily with AWS Cognito, we have a powerhouse of tools to manage our users and these authentication flows!&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-aws-cognito"&gt;
  &lt;/a&gt;
  üë®‚Äçüíª What is AWS Cognito?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XYBJ-vOs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1618044619888-009e412ff12a%3Fixlib%3Drb-1.2.1%26ixid%3DMnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8%26auto%3Dformat%26fit%3Dcrop%26w%3D1351%26q%3D80" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XYBJ-vOs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1618044619888-009e412ff12a%3Fixlib%3Drb-1.2.1%26ixid%3DMnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8%26auto%3Dformat%26fit%3Dcrop%26w%3D1351%26q%3D80" alt="authentication failed photo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/cognito/"&gt;AWS Cognito&lt;/a&gt; is a service that lets app developers and software engineers authenticate users without having to create their own identity system.&lt;/p&gt;

&lt;p&gt;This specific AWS service makes it easy for any developer to get started with authentication because they don't have to build and maintain complex backend code.&lt;/p&gt;

&lt;p&gt;It provides all the tools and infrastructure needed from the start, such as sign-up and sign-in flows, multi-factor authentication options, integration with social identity providers like Facebook and Google, and more.&lt;/p&gt;

&lt;p&gt;One of its major benefits is that it can scale incredibly easily for millions of users as your user base grows and your users needs and requirements scale.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-add-authentication-to-an-app"&gt;
  &lt;/a&gt;
  üë®‚Äçüíª How to Add Authentication to an App
&lt;/h2&gt;

&lt;p&gt;Thanks to an AWS framework called Amplify, we can run the following command to add auth right into our app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// begin the authentication process&lt;/span&gt;
&lt;span class="nx"&gt;amplify&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt;

&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Do&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;want&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;use&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;authentication&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;security&lt;/span&gt; &lt;span class="nx"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="s2"&gt;`Default configuration`&lt;/span&gt;
&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;How&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;want&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;able&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;sign&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="s2"&gt;`Email`&lt;/span&gt;
&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Do&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;want&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;configure&lt;/span&gt; &lt;span class="nx"&gt;advanced&lt;/span&gt; &lt;span class="nx"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;  &lt;span class="s2"&gt;`No, I am done.`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can customize the way users sign in between &lt;code&gt;username&lt;/code&gt; or &lt;code&gt;email&lt;/code&gt; but make sure that whichever you choose is the one you want to use for the life of your Cognito user pool because you cannot change this specific setting once you build the Cognito User Pool.&lt;/p&gt;

&lt;p&gt;When everything checks out and the scripts run to set up these backend resources for us in the cloud, we'll run the following command to push it to our backend environment:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;amplify&lt;/span&gt; &lt;span class="nx"&gt;push&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Alternatively, we can import a Cognito User Pool right into our application in case we have the user pool already set up and just want to import it into our app directly without any configurations.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-our-graphql-api"&gt;
  &lt;/a&gt;
  üë®‚Äçüíª Setting Up our GraphQL API
&lt;/h2&gt;

&lt;p&gt;In the example in my video, I have created a ToDo application that lists a user's ToDos that they have to do.&lt;/p&gt;

&lt;p&gt;When I set up my GraphQL API thanks to the AWS Amplify Framework, I provisioned a DynamoDB table for these ToDo types and put an &lt;code&gt;@auth&lt;/code&gt; parameter on the type. This means that only the authenticated users who create a ToDo will have access to their own ToDos. More simply, I can't see your ToDos and you can't see my ToDos if we are both authenticated users of this ToDo app.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Todo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;allow&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;When a user or set of users upload their ToDos, they will show up in the DynamoDB database &lt;a href="https://www.youtube.com/embed/LoPB-3gnI6I?start=154"&gt;like so&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/embed/LoPB-3gnI6I?start=154" rel="AWS DynamoDB Key Value Pair Database"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E0G4xjfA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/602h7nlklnfaathalxtw.png" alt="DynamoDB image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#adding-auth-to-our-react-javascript-code"&gt;
  &lt;/a&gt;
  üë®‚Äçüíª Adding Auth to our React JavaScript Code
&lt;/h2&gt;

&lt;p&gt;Now that we've set up our resources in the backend and in the cloud, we now want them to be readily accessible for the users that we will expect to use our application.&lt;/p&gt;

&lt;p&gt;For this, we will use the &lt;code&gt;withAuthenticator&lt;/code&gt; HOC (Higher-Order-Component) which will allow us to use this module directly on the &lt;code&gt;export default App&lt;/code&gt; script at the end of our &lt;code&gt;App.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;withAuthenticator&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@aws-amplify/ui-react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;aws_exports&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./aws-exports&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;Amplify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;aws_exports&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fragment&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Code&lt;/span&gt; &lt;span class="nx"&gt;Goes&lt;/span&gt; &lt;span class="nx"&gt;Here&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/React.Fragment&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;withAuthenticator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, when we run our code, you won't be able to access anything inside of &lt;code&gt;App.js&lt;/code&gt; until we (1.) Have an account; and (2.) Are authenticated in the system.&lt;/p&gt;

&lt;p&gt;This will look &lt;a href="https://youtu.be/LoPB-3gnI6I?t=252"&gt;something like this&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/LoPB-3gnI6I?t=252" rel="AWS Amplify withAuthenticator HOC (Higher Order Component)"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Vf_z1zr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fce5t7hebscdnikphmi5.png" alt="DynamoDB image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have a nice packaged-up module that has the "Create Account" and "Sign In" modules all neatly coded for us to use in our application thanks to AWS Cognito and AWS Amplify working together.&lt;/p&gt;

&lt;p&gt;When we log into our account, we are able to see our ToDos! If our login credentials don't check out, we won't be permitted into our app.&lt;/p&gt;

&lt;p&gt;üéâ ~ queue the confetti cannon ~ üéâ&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#some-observations-in-working-with-the-raw-amplifyauthenticator-endraw-module"&gt;
  &lt;/a&gt;
  üë®‚Äçüíª Some Observations In Working with the &lt;code&gt;AmplifyAuthenticator&lt;/code&gt; Module
&lt;/h2&gt;

&lt;p&gt;Something I noticed when experimenting with this module is that you can customize the entire auth flow with, from the stylings of the Sign-In page to the flow of the user verification when they are creating an account. It's definitely worth checking out the documentation on the website to learn more about what you can do with the &lt;code&gt;Auth&lt;/code&gt; module in AWS.&lt;/p&gt;

&lt;p&gt;One of the modules I was experimenting with was the &lt;code&gt;AmplifyAuthenticator&lt;/code&gt; module and using it as a wrapper around the functional component, like below.&lt;/p&gt;

&lt;p&gt;‚ö†Ô∏è As a warning, I noticed that using this module in the direct application caused some data to be cached even when you pressed "Log Out". As in, you would need a hard refresh on the page for you to "actually log out" even if you pressed the log out button when switching between users. This can pose a security risk to your users' data in case they do not automatically refresh the page but press sign-out with this module. I am not sure if this was because of being on the same device and logging into multiple users, but it's worth mentioning as I discovered this, which is why I &lt;a href="https://youtu.be/LoPB-3gnI6I?t=343"&gt;spoke about it here&lt;/a&gt; and showed a live version of the data being cached before a hard refresh was done to the page. This module is fantastic for testing the authentication module and fine-tuning it, but always make sure what you put into production checks out in terms of the expected data and access you intend to have.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;AmplifyAuthenticator&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@aws-amplify/ui-react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;aws_exports&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./aws-exports&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;Amplify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;aws_exports&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AmplifyAuthenticator&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fragment&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Code&lt;/span&gt; &lt;span class="nx"&gt;Goes&lt;/span&gt; &lt;span class="nx"&gt;Here&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/React.Fragment&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/AmplifyAuthenticator&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Based upon this, we'll want to use the &lt;code&gt;withAuthenticator&lt;/code&gt; or a version of a customized Auth flow for our users to be able to use our application securely and correctly.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  üë®‚Äçüíª Wrapping Up
&lt;/h2&gt;

&lt;p&gt;Wow we went through a lot! Tech is one of those fast-paced fields where you will constantly find yourself learning and innovating as you go along. There is never only 1 right answer, and I look forward to hearing your feedback and thoughts on what areas of apps, software, and tech you want to learn more about.&lt;/p&gt;

&lt;p&gt;Check out the full recording below:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/LoPB-3gnI6I"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Let me know if you found this post helpful! And if you haven't yet, make sure to check out these free resources below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Follow my Instagram for more: &lt;a href="https://instagram.com/brianhhough"&gt;@BrianHHough&lt;/a&gt;&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Watch my latest &lt;a href="https://youtube.com/brianhhough"&gt;YouTube video for more&lt;/a&gt;&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Listen to my Podcast on &lt;a href="https://youtube.com/brianhhough"&gt;Apple Podcasts&lt;/a&gt; and &lt;a href="https://youtube.com/brianhhough"&gt;Spotify&lt;/a&gt;&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Join my FREE &lt;a href="https://facebook.com/groups/techstackplaybook"&gt;Tech Stack Playbook Facebook Group&lt;/a&gt;&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's digitize the world together! üöÄ&lt;/p&gt;

&lt;p&gt;-- Brian&lt;/p&gt;




&lt;div class="ltag__user ltag__user__id__259541"&gt;
  
    .ltag__user__id__259541 .follow-action-button {
      background-color: #0015b8 !important;
      color: #fdf9f3 !important;
      border-color: #0015b8 !important;
    }
  
    &lt;a href="/brianhhough" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rY9IPqa7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--2kYQV_P---/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/259541/2f6a1717-f422-4f36-92d2-295d4b0150db.png" alt="brianhhough image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/brianhhough"&gt;Brian H. Hough&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/brianhhough"&gt;Chief Technology Officer and Co-Founder of Airblock Technologies, AWS Community Builder, Host of Tech Stack Playbook, and five-time Global Hackathon Winner üë®‚Äçüíª&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;






</description>
      <category>aws</category>
      <category>serverless</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Accessing Firebase services</title>
      <author>Aswin Barath</author>
      <pubDate>Tue, 24 Aug 2021 18:45:25 +0000</pubDate>
      <link>https://dev.to/aswin2001barath/accessing-firebase-services-4mn9</link>
      <guid>https://dev.to/aswin2001barath/accessing-firebase-services-4mn9</guid>
      <description>&lt;p&gt;Firebase API follows a straightforward approach. &lt;br&gt;
By invoking these methods will get you access to each Firebase service.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a7VZjxeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xbnv108sxdv2nhha8d9o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a7VZjxeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xbnv108sxdv2nhha8d9o.png" alt="Firebase API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax-to-access-firebase-firestore"&gt;
  &lt;/a&gt;
  Syntax to access Firebase Firestore
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;firebase.firestore()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#syntax-to-access-firebase-authentication"&gt;
  &lt;/a&gt;
  Syntax to access Firebase Authentication
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;firebase.auth()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#syntax-to-access-firebase-storage"&gt;
  &lt;/a&gt;
  Syntax to access Firebase Storage
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;firebase.storage()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#firebase-hosting-commands"&gt;
  &lt;/a&gt;
  Firebase hosting commands
&lt;/h3&gt;

&lt;p&gt;Firebase Hosting uses a command-line interface instead of methods on the Firebase object. Run the following commands:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#initialize-a-firebase-project"&gt;
  &lt;/a&gt;
  Initialize a Firebase project
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;firebase init 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#deploy-a-firebase-project"&gt;
  &lt;/a&gt;
  deploy a Firebase project
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;firebase deploy 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Feel free to share if you found this useful üòÉ.&lt;/p&gt;

</description>
      <category>firebase</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>A real-time tech course finder, created using Elasticsearch, Python, React+Redux, Docker, and Kubernetes.</title>
      <author>Dinesh</author>
      <pubDate>Tue, 24 Aug 2021 18:36:58 +0000</pubDate>
      <link>https://dev.to/dineshsonachalam/a-real-time-tech-course-finder-created-using-elasticsearch-python-react-redux-docker-and-kubernetes-34jk</link>
      <guid>https://dev.to/dineshsonachalam/a-real-time-tech-course-finder-created-using-elasticsearch-python-react-redux-docker-and-kubernetes-34jk</guid>
      <description>&lt;p&gt;&lt;strong&gt;Github repo:&lt;/strong&gt; &lt;a href="https://github.com/dineshsonachalam/tech-courses-search-engine"&gt;https://github.com/dineshsonachalam/tech-courses-search-engine&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://search.dineshsonachalam.com/"&gt;Live demo&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://vimeo.com/589852893"&gt;Video demo&lt;/a&gt; &lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#whats-this-project-all-about"&gt;
  &lt;/a&gt;
  What's this project all about?
&lt;/h2&gt;

&lt;p&gt;This project showcases how to build real-time search engines like Google, Coursera, Medium, etc. We focus on the following aspects as part of this project.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#1-understanding-all-significant-components-in-elasticsearch-and-its-auto-completion-feature"&gt;1. Understanding all significant components in ElasticSearch and its Auto completion feature.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-building-an-api-service-that-interacts-with-elasticsearch-to-be-used-by-the-ui"&gt;2. Building an API service that interacts with ElasticSearch to be used by the UI.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3-testing-api-using-pytest"&gt;3. Testing API using Pytest.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4-building-ui-using-react-and-redux"&gt;4. Building UI using React and Redux.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5-testing-ui-using-cypress"&gt;5. Testing UI using Cypress.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#application-architecture"&gt;
  &lt;/a&gt;
  Application Architecture
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RSgF12AY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/12673979/117518002-c0017c00-afbb-11eb-97f3-14c253cad321.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RSgF12AY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/12673979/117518002-c0017c00-afbb-11eb-97f3-14c253cad321.png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NFuOPE4H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/12673979/117521109-ae26d580-afc9-11eb-8dbd-663eeabaf0ff.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NFuOPE4H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/12673979/117521109-ae26d580-afc9-11eb-8dbd-663eeabaf0ff.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1-understanding-all-significant-components-in-elasticsearch-and-its-auto-completion-feature"&gt;
  &lt;/a&gt;
  1. Understanding all significant components in ElasticSearch and it's Auto completion feature.
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;What is ElasticSearch?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Free and Open, Distributed, RESTful Search Engine. You can use Elasticsearch to store, search, and manage data for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Logs&lt;/li&gt;
&lt;li&gt;Metrics&lt;/li&gt;
&lt;li&gt;A search backend&lt;/li&gt;
&lt;li&gt;Application monitoring&lt;/li&gt;
&lt;li&gt;Endpoint security&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How does Elasticsearch work?&lt;/p&gt;

&lt;p&gt;Let's understand some basic components of how it organizes data in ElasticSearch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Logical components&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Documents:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Documents are the low level unit of information that can be indexed in Elasticsearch expressed in JSON, which is the global internet data interchange format. You can think of a document like a row in a relational database, representing a given entity ‚Äî the thing you‚Äôre searching for. In Elasticsearch, a document can be more than just text, it can be any structured data encoded in JSON. That data can be things like numbers, strings, and dates. Each document has a unique ID and a given data type, which describes what kind of entity the document is. For example, a document can represent an encyclopedia article or log entries from a web server.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Indices:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An index is a collection of documents that have similar characteristics. An index is the highest level entity that you can query against in Elasticsearch. You can think of the index as being similar to a database in a relational database schema. Any documents in an index are typically logically related. In the context of an e-commerce website, for example, you can have an index for Customers, one for Products, one for Orders, and so on. An index is identified by a name that is used to refer to the index while performing indexing, search, update, and delete operations against the documents in it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Index templates:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An index template is a way to tell Elasticsearch how to configure an index when it is created. The template is applied automatically whenever a new index is created with the matching pattern.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Backend components&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cluster:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An Elasticsearch cluster is a group of one or more node instances that are connected together. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Node:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A node is a single server that is a part of a cluster. A node stores data and participates in the cluster‚Äôs indexing and search capabilities. An Elasticsearch node can be configured in different ways:&lt;/p&gt;

&lt;p&gt;(i) Master Node ‚Äî Controls the Elasticsearch cluster and is responsible for all cluster-wide operations like creating/deleting an index and adding/removing nodes.&lt;/p&gt;

&lt;p&gt;(ii) Data Node ‚Äî Stores data and executes data-related operations such as search and aggregation.&lt;/p&gt;

&lt;p&gt;(iii) Client Node ‚Äî Forwards cluster requests to the master node and data-related requests to data nodes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Shards:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Elasticsearch provides the ability to subdivide the index into multiple pieces called shards. Each shard is in itself a fully-functional and independent ‚Äúindex‚Äù that can be hosted on any node within a cluster. By distributing the documents in an index across multiple shards, and distributing those shards across multiple nodes, Elasticsearch can ensure redundancy, which both protects against hardware failures and increases query capacity as nodes are added to a cluster.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Replicas: &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Elasticsearch allows you to make one or more copies of your index‚Äôs shards which are called replica shards or just replicas.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to implement Autocompletion ElasticSearch feature?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Start ElasticSearch Docker container
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir -p ES_DATA &amp;amp;&amp;amp; docker run -v $(pwd)/ES_DATA:/usr/share/elasticsearch/data -e "discovery.type=single-node" -e "ES_JAVA_OPTS=-Xms750m -Xmx750m" -p 9200:9200 elasticsearch:7.12.0 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Verify the health status of your cluster.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dineshsonachalam@macbook ~ % curl --location --request GET 'http://elasticsearch:9200/_cat/health'
1629473241 15:27:21 docker-cluster green 1 1 0 0 0 0 0 0 - 100.0%
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Create an index template that contains the following properties topic, title, URL, labels, and upvotes.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl -X PUT "elasticsearch:9200/_index_template/template_1?pretty" -H 'Content-Type: application/json' \
-d'{
    "index_patterns": "cs.stanford",
    "template": {
        "settings": {
            "number_of_shards": 1
        },
        "mappings": {
            "_source": {
                "enabled": true
            },
            "properties": {
                "topic": {
                    "type": "text"
                },
                "title": {
                    "type": "completion"
                },
                "url": {
                    "type": "text"
                },
                "labels": {
                    "type": "text"
                },
                "upvotes": {
                    "type": "integer"
                }
            }
        }
    }
}'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Validate if the index template is available.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dineshsonachalam@macbook ~ % curl --location --request GET 'http://elasticsearch:9200/_index_template/template_1'
{
    "index_templates": [
        {
            "name": "template_1",
            "index_template": {
                "index_patterns": [
                    "cs.stanford"
                ],
                "template": {
                    "settings": {
                        "index": {
                            "number_of_shards": "1"
                        }
                    },
                    "mappings": {
                        "_source": {
                            "enabled": true
                        },
                        "properties": {
                            "upvotes": {
                                "type": "integer"
                            },
                            "topic": {
                                "type": "text"
                            },
                            "title": {
                                "type": "completion"
                            },
                            "url": {
                                "type": "text"
                            },
                            "labels": {
                                "type": "text"
                            }
                        }
                    }
                },
                "composed_of": []
            }
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Create a new index called cs.stanford
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dineshsonachalam@macbook ~ % curl --location --request PUT 'http://elasticsearch:9200/cs.stanford/'
{
    "acknowledged": true,
    "shards_acknowledged": true,
    "index": "cs.stanford"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Validate if the cs.stanford index is available.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dineshsonachalam@macbook ~ % curl --location --request GET 'http://elasticsearch:9200/cs.stanford/'
{
    "cs.stanford": {
        "aliases": {},
        "mappings": {
            "properties": {
                "labels": {
                    "type": "text"
                },
                "title": {
                    "type": "completion",
                    "analyzer": "simple",
                    "preserve_separators": true,
                    "preserve_position_increments": true,
                    "max_input_length": 50
                },
                "topic": {
                    "type": "text"
                },
                "upvotes": {
                    "type": "integer"
                },
                "url": {
                    "type": "text"
                }
            }
        },
        "settings": {
            "index": {
                "routing": {
                    "allocation": {
                        "include": {
                            "_tier_preference": "data_content"
                        }
                    }
                },
                "number_of_shards": "1",
                "provided_name": "cs.stanford",
                "creation_date": "1629526849180",
                "number_of_replicas": "1",
                "uuid": "NrvQ6juOSNmf0GOPO2QADA",
                "version": {
                    "created": "7120099"
                }
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Add documents to cs.stanford index.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd backend &amp;amp;&amp;amp; python -c 'from utils.elasticsearch import Elasticsearch; es = Elasticsearch("cs.stanford"); es.add_documents()' &amp;amp;&amp;amp; cd ..
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Get the total count of the documents in cs.stanford index. We can able to see that the document count is 1350.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dineshsonachalam@macbook tech-courses-search-engine % curl --location --request GET 'http://elasticsearch:9200/cs.stanford/_count'
{
    "count": 1350,
    "_shards": {
        "total": 1,
        "successful": 1,
        "skipped": 0,
        "failed": 0
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Use ElasticSearch suggesters search for autocompletion. The suggest feature suggests similar looking terms based on a provided text by using a suggester.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dineshsonachalam@macbook tech-courses-search-engine % cd backend &amp;amp;&amp;amp; python -c 'from utils.filters import SearchFilters; search = SearchFilters("cs.stanford"); print(search.autocomplete(query="python"))' &amp;amp;&amp;amp; cd ..
[
    {
        "id": 1,
        "value": "Python Data Science Handbook"
    },
    {
        "id": 2,
        "value": "Python Game Programming Tutorial: SpaceWar"
    },
    {
        "id": 3,
        "value": "Python for Beginners - Learn Python Programming La"
    },
    {
        "id": 4,
        "value": "Python for Data Science and Machine Learning Bootc"
    },
    {
        "id": 5,
        "value": "Python for Security Professionals"
    }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#2-building-an-api-service-that-interacts-with-elasticsearch-to-be-used-by-the-ui"&gt;
  &lt;/a&gt;
  2. Building an API service that interacts with ElasticSearch to be used by the UI.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Start the ElasticSearch, Backend and Frontend services
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sh dev-startup.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;API Documentation&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#elasticsearch-autocomplete"&gt;
  &lt;/a&gt;
  ElasticSearch Autocomplete
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight http"&gt;&lt;code&gt;&lt;span class="err"&gt;  GET /autocomplete
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;query&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;
&lt;strong&gt;Required&lt;/strong&gt;. Query string&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Sample response&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dineshsonachalam@macbook ~ % curl --location --request GET 'elasticsearch:8000/autocomplete?query=python'
[
    {
        "id": 1,
        "value": "Python Data Science Handbook"
    },
    {
        "id": 2,
        "value": "Python GUI with Tkinter Playlist"
    },
    {
        "id": 3,
        "value": "Python Game Programming Tutorial: SpaceWar"
    },
    {
        "id": 4,
        "value": "Python PostgreSQL Tutorial Using Psycopg2"
    },
    {
        "id": 5,
        "value": "Python Programming for the Raspberry Pi"
    }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#query-search"&gt;
  &lt;/a&gt;
  Query Search
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight http"&gt;&lt;code&gt;&lt;span class="err"&gt;  POST /string-query-search
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;query&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;
&lt;strong&gt;Required&lt;/strong&gt;. Query string&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Sample response&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dineshsonachalam@macbook ~ % curl --location --request POST 'elasticsearch:8000/string-query-search?query=python'
[
    {
        "id": 1,
        "title": "Google's Python Class",
        "topic": "Python",
        "url": "https://developers.google.com/edu/python/",
        "labels": [
            "Free",
            "Python 2"
        ],
        "upvotes": 213
    },
    {
        "id": 2,
        "title": "Complete Python Bootcamp",
        "topic": "Python",
        "url": "https://click.linksynergy.com/deeplink?id=jU79Zysihs4&amp;amp;mid=39197&amp;amp;murl=https://www.udemy.com/complete-python-bootcamp",
        "labels": [
            "Paid",
            "Video",
            "Beginner",
            "Python 3"
        ],
        "upvotes": 196
    },
    {
        "id": 3,
        "title": "Automate the Boring Stuff with Python",
        "topic": "Python",
        "url": "http://automatetheboringstuff.com/",
        "labels": [
            "Free",
            "Book"
        ],
        "upvotes": 93
    },
    {
        "id": 4,
        "title": "Official Python Tutorial",
        "topic": "Python",
        "url": "https://docs.python.org/3/tutorial/index.html",
        "labels": [
            "Free"
        ],
        "upvotes": 74
    },
    {
        "id": 5,
        "title": "Working with Strings in Python",
        "topic": "Python",
        "url": "https://academy.vertabelo.com/course/python-strings",
        "labels": [
            "Free",
            "Beginner",
            "Python 3"
        ],
        "upvotes": 4
    },
    {
        "id": 6,
        "title": "Learn Python the Hard Way",
        "topic": "Python",
        "url": "https://learnpythonthehardway.org/book/",
        "labels": [
            "Paid",
            "Book",
            "Python 3"
        ],
        "upvotes": 293
    },
    {
        "id": 7,
        "title": "Python for Beginners - Learn Python Programming Language in 2 Hours",
        "topic": "Python",
        "url": "https://www.youtube.com/watch?v=yE9v9rt6ziw",
        "labels": [
            "Free",
            "Video",
            "Beginner",
            "Python 3"
        ],
        "upvotes": 62
    },
    {
        "id": 8,
        "title": "Automate the Boring Stuff with Python",
        "topic": "Python",
        "url": "https://click.linksynergy.com/deeplink?id=jU79Zysihs4&amp;amp;mid=39197&amp;amp;murl=https://www.udemy.com/automate/",
        "labels": [
            "Paid",
            "Video",
            "Beginner"
        ],
        "upvotes": 45
    },
    {
        "id": 9,
        "title": "Introduction to Programming with Python",
        "topic": "Python",
        "url": "https://mva.microsoft.com/en-US/training-courses/introduction-to-programming-with-python-8360",
        "labels": [
            "Free",
            "Video"
        ],
        "upvotes": 41
    },
    {
        "id": 10,
        "title": "A Byte of Python",
        "topic": "Python",
        "url": "http://www.swaroopch.com/notes/python/",
        "labels": [
            "Free"
        ],
        "upvotes": 22
    }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-testing-api-using-pytest"&gt;
  &lt;/a&gt;
  3. Testing API using Pytest
&lt;/h2&gt;

&lt;p&gt;Pytest is a testing framework based on python. It is mainly used to write API based test cases. Here we are going to test our two API's (autocomplete and string-query-search).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Start Pytest:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dineshsonachalam@macbook tech-courses-search-engine % pytest backend
=========================================== test session starts ===========================================
platform darwin -- Python 3.9.5, pytest-6.2.4, py-1.10.0, pluggy-0.13.1
rootdir: /Users/dineshsonachalam/Desktop/tech-courses-search-engine
plugins: cov-2.12.1, metadata-1.11.0
collected 2 items                                                                                         

backend/tests/test_api.py ..                                                                        [100%]

============================================ 2 passed in 0.35s ============================================
dineshsonachalam@macbook tech-courses-search-engine % 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-building-ui-using-react-and-redux"&gt;
  &lt;/a&gt;
  4. Building UI using React and Redux.
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;What is React?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A declarative, efficient, and flexible JavaScript library for building user interfaces.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is Redux?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Redux is a JS library for managing client data in applications. Redux allow your state to be available in one place. It is used to manage data in your application.&lt;/p&gt;

&lt;p&gt;Things to care about when using redux:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Identify the state.&lt;/li&gt;
&lt;li&gt;Write good reducers.&lt;/li&gt;
&lt;li&gt;Let's redux state handle the rest.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Building Parts of redux:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Action -&amp;gt; Action have a type field that tells what kind of action to perform and all other fields contain information or data.&lt;/li&gt;
&lt;li&gt;Reducer -&amp;gt; They are functions that take the (current state and action) and return the new state and tell the store how to do.&lt;/li&gt;
&lt;li&gt;Store -&amp;gt; The store is the object which holds state of the application.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kHsk_UfP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/G45gjRr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kHsk_UfP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/G45gjRr.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;React components used in our application:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are React components?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Components are independent and reusable bits of code. They serve the same purpose as JavaScript functions, but work in isolation and return HTML via a render() function.&lt;/p&gt;

&lt;p&gt;Components are classified into two types, Class components and Function components.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What's the difference between class vs functional components:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In class component, we can access the value of the state by using this.state inside JSX and we would use setState to update the value of the state. You can set the function inside the event or outside of the render() method -- for readability.&lt;/p&gt;

&lt;p&gt;In functional component, we would use useState to assign initial state and we would use setCount (in our example) to update the state. If we want to access the value of the state, we can omit this.state and call the name of the state instead, in our case, it would just be count.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;React components used in our application:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here all our React components are available in the &lt;strong&gt;src/components&lt;/strong&gt; folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dineshsonachalam@macbook frontend % tree src/components 
src/components
‚îú‚îÄ‚îÄ Nav.js
‚îú‚îÄ‚îÄ ResponsiveAntMenu.js
‚îú‚îÄ‚îÄ SearchBar.js
‚îî‚îÄ‚îÄ SearchResults.js

0 directories, 4 files
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dChgwIfg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/eYefwnE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dChgwIfg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/eYefwnE.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How Redux is integrated into this React application:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here all our Redux components are available in the &lt;strong&gt;src/redux&lt;/strong&gt; folder. Here we intialized Actions, Search Reducer and Redux store.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dineshsonachalam@macbook frontend % tree src/redux 
src/redux
‚îú‚îÄ‚îÄ actionTypes.js
‚îú‚îÄ‚îÄ actions.js
‚îú‚îÄ‚îÄ reducers
‚îÇ   ‚îú‚îÄ‚îÄ index.js
‚îÇ   ‚îî‚îÄ‚îÄ searchReducer.js
‚îî‚îÄ‚îÄ store.js

1 directory, 5 files
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;To start the UI in development mode:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i &amp;amp;&amp;amp; npm run start --prefix frontend
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-testing-ui-using-cypress"&gt;
  &lt;/a&gt;
  5. Testing UI using Cypress.
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;What is Cypress?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fast, easy and reliable testing for anything that runs in a browser. Cypress is the most popular choice for Integration testing for web applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cypress Features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Test runner: So hands down one of the best features about Cypress is its test runner. It provides a whole new experience to end-to-end testing.&lt;/li&gt;
&lt;li&gt;Setting up tests: Another great feature that we talked about already is setting up tests are extremely easy, you just install Cypress and then everything gets set up for you&lt;/li&gt;
&lt;li&gt;Automatic waits ‚Äì you will barely have to use waits when using Cypress&lt;/li&gt;
&lt;li&gt;Stubbing ‚Äì you can easily stub application function behavior and server response.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Running Cypress Integration test&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The cypress integration tests for our application is available at frontend/cypress/integration/search-courses.spec.js filepath.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dineshsonachalam@macbook tech-courses-search-engine % tree frontend/cypress
frontend/cypress
‚îú‚îÄ‚îÄ fixtures
‚îÇ   ‚îî‚îÄ‚îÄ example.json
‚îú‚îÄ‚îÄ integration
‚îÇ   ‚îî‚îÄ‚îÄ search-courses.spec.js
‚îú‚îÄ‚îÄ plugins
‚îÇ   ‚îî‚îÄ‚îÄ index.js
‚îî‚îÄ‚îÄ support
    ‚îú‚îÄ‚îÄ commands.js
    ‚îî‚îÄ‚îÄ index.js

4 directories, 5 files
dineshsonachalam@macbook tech-courses-search-engine % 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Running your Cypress Test in the Cypress Test Runner:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To open the Cypress Test Runner, you can execute the following command below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx cypress open
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the Cypress Test Runner opens up, you can execute your test which will show results similar to this below:&lt;/p&gt;

&lt;p&gt;You can see all the Cypress commands listed below such as visit, URL &amp;amp; title&lt;br&gt;
All your successful assertions will show in Green and failed assertions in Red.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Q9HOrpa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/F97ooaD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Q9HOrpa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/F97ooaD.png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pytWqFlQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/jfmBLuk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pytWqFlQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/jfmBLuk.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#license"&gt;
  &lt;/a&gt;
  License
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://choosealicense.com/licenses/mit/"&gt;MIT&lt;/a&gt; ¬© &lt;a href="https://www.github.com/dineshsonachalam"&gt;dineshsonachalam&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>elasticsearch</category>
      <category>github</category>
      <category>react</category>
    </item>
    <item>
      <title>üëÄ Using 2 plugins to show you the importance of alt text in just 2 minutes üí°</title>
      <author>InHuOfficial</author>
      <pubDate>Tue, 24 Aug 2021 18:18:54 +0000</pubDate>
      <link>https://dev.to/inhuofficial/how-important-is-alt-text-let-me-show-you-with-a-couple-of-useful-plugins-2k0p</link>
      <guid>https://dev.to/inhuofficial/how-important-is-alt-text-let-me-show-you-with-a-couple-of-useful-plugins-2k0p</guid>
      <description>&lt;p&gt;In this article I will introduce you to a couple of extensions for Chrome, one of which will be a massive help when testing sites / web apps you have built! Then I will use those extensions to show you what a big problem alt attributes are! (the biggest problem being the lack of them!)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-intro"&gt;
  &lt;/a&gt;
  Quick Intro
&lt;/h2&gt;

&lt;p&gt;(&lt;a href="#what-are-we-doing-here"&gt;click here to skip this bit if you know what alt text is&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Look there are 200,000 articles on alt text. I don't need to repeat them do I? &lt;/p&gt;

&lt;p&gt;&lt;em&gt;OK&lt;/em&gt; - here is a quick summary:&lt;/p&gt;

&lt;p&gt;Alt text allows you to describe an image within your HTML. &lt;/p&gt;

&lt;p&gt;This means that people who use assistive technology get to know what the image contains and so get the same (or a similar) experience. &lt;/p&gt;

&lt;p&gt;Additionally if someone disables images or the image fails to load they also get to know what the image contained.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-alt-text-in-html"&gt;
  &lt;/a&gt;
  Adding alt text in HTML
&lt;/h3&gt;

&lt;p&gt;Here is how you add alt text to an image&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"image-source.jpg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"A description of the image in the context of the document"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That bit in the &lt;code&gt;alt&lt;/code&gt; attribute, that is alt text. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To write good alt text&lt;/strong&gt; all you need to do is imagine you were reading the article to a friend over the phone, when you reach an image just describe it with enough detail that they would get what the image is about and any information within that image that is relevant to the article.&lt;/p&gt;

&lt;p&gt;There are a few other tips on good alt text which I will write about in a future post, but that is the main one! &lt;/p&gt;

&lt;p&gt;On to the point of this article, the &lt;strong&gt;why&lt;/strong&gt;!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-we-doing-here"&gt;
  &lt;/a&gt;
  What are we doing here?
&lt;/h2&gt;

&lt;p&gt;There are &lt;a href="https://ux.stackexchange.com/a/119596/131399"&gt;estimated to be over 4.4 million Americans who use a screen reader&lt;/a&gt;...extrapolate that across the world and you have about 100 million people who use a screen reader! &lt;/p&gt;

&lt;p&gt;Without alt text a screen reader cannot tell people what an image is about!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;That is 100 million people who you are not only excluding, but you aren't reaching with your message!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I am going to &lt;strong&gt;show you&lt;/strong&gt; what your lack of alt text feels like for someone who relies on it, hopefully it will drive home the need for alt text!&lt;/p&gt;

&lt;p&gt;This article is not going to tell you how to write perfect alt text, but I will address that in a future article. This is just to show you &lt;strong&gt;why&lt;/strong&gt; you should care and the impact your actions have!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tools required:&lt;/strong&gt; You need a computer and Google Chrome (or browser that works with Chrome extensions) so if you are on mobile, you might want to &lt;strong&gt;bookmark this article&lt;/strong&gt; and wait until you get home to try it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-long-is-this-going-to-take-and-why-should-i-bother"&gt;
  &lt;/a&gt;
  How long is this going to take and why should I bother?
&lt;/h3&gt;

&lt;p&gt;Honestly, just give me 2-3 minutes of your time, you will soon realise that your lack of alt text is &lt;strong&gt;not a minor problem&lt;/strong&gt;, it has a &lt;strong&gt;huge impact&lt;/strong&gt; on a lot of people!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;As an added bonus&lt;/strong&gt; the first extension we are going to be using has so many useful tools for you as a developer it is worth reading this article just for that! &lt;/p&gt;

&lt;p&gt;It is great for checking code quality using the links under the "tools" section, for example!&lt;/p&gt;

&lt;p&gt;The second extension is more for this demonstration, but still useful to have for social media to remind you about alt attributes!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tool-1-web-developer"&gt;
  &lt;/a&gt;
  Tool 1 - Web Developer
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/web-developer/bfbameneiokkgbdmiekhjnmfkcnldhhm"&gt;Web Developer for Google Chrome&lt;/a&gt; provides you with loads of utilities for testing web pages.&lt;/p&gt;

&lt;p&gt;It is awesome! Add it to your tool kit &lt;strong&gt;today&lt;/strong&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tool-2-social-visual-alt-text"&gt;
  &lt;/a&gt;
  Tool 2 - Social Visual Alt Text
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/social-visual-alt-text/bkpbmomfemcjdeekdffmbohifpndodmi"&gt;Social Visual Alt Text&lt;/a&gt; takes the alt description for images and displays it visually on the page. &lt;/p&gt;

&lt;p&gt;It does this for Twitter, Instagram, Facebook and Tweet Deck.&lt;/p&gt;

&lt;p&gt;Add it to Chrome also. &lt;/p&gt;

&lt;p&gt;Although the first plugin allows you to display alt text, it doesn't work properly with Twitter (which is why we need this second plugin). Twitter is where we are going to demonstrate the problem as it is far more obvious there!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-twitter-test"&gt;
  &lt;/a&gt;
  The Twitter test!
&lt;/h2&gt;

&lt;p&gt;Ok so have you installed those two extensions?&lt;/p&gt;

&lt;p&gt;Great, now before leaving this page you have one tiny task. &lt;/p&gt;

&lt;p&gt;Look for the cog icon in your extensions toolbar (light grey colour, circled). &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IVMMv-JU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6d1if31fnb0ol40dxlgr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IVMMv-JU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6d1if31fnb0ol40dxlgr.jpg" alt='Cog icon for "Web Developer" plugin (cog has light grey gradient)'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on it and select the "images" tab at the top.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--60Fn-gw3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zzzdccrdnqgsh6mvhzy5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--60Fn-gw3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zzzdccrdnqgsh6mvhzy5.jpg" alt="Images tab located at top of popup window at the 5th position"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now select the first item in the list "Disable all images".&lt;/p&gt;

&lt;p&gt;You should now see a green tick next to "disable all images" (circled).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cVNwRStK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3pu53fu88yeqkhdi7xy8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cVNwRStK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3pu53fu88yeqkhdi7xy8.jpg" alt="Disable Images with green tick next to it highlighted with red circle around. Arrow pointing to notification at bottom that images are disabled."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You should also see a green notification appear at the bottom to let you know images are disabled (shown by the arrow).&lt;/p&gt;

&lt;p&gt;You are all set! All I want you to do is try and use Twitter for two minutes and make sense of it!&lt;/p&gt;

&lt;p&gt;Go on, head over to &lt;a href="https://twitter.com"&gt;Twitter&lt;/a&gt;, just for a minute or two!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-was-it-like"&gt;
  &lt;/a&gt;
  So what was it like?
&lt;/h2&gt;

&lt;p&gt;(20 minutes later I presume?)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Important Reminder:&lt;/strong&gt; Don't forget to go back to the Web Developer plugin (the cog) and allow images again!&lt;/p&gt;

&lt;p&gt;So, now that you have wasted some time on Twitter, what was it like? &lt;/p&gt;

&lt;p&gt;Did you see loads of code examples shared as images that were non existent to you? Did people share pictures with no context and you have no idea what they are on about?&lt;/p&gt;

&lt;p&gt;Did it look something like this?:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fvR7pZHT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dp47xmocqrcgvbzht1ku.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fvR7pZHT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dp47xmocqrcgvbzht1ku.jpg" alt="Twitter feed example with 3 images all with no alt text showing and just a red bar instead and various colour backgrounds where the images should be. None of the tweets makes sense without the image as the image is the context and main subject of the tweet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#it-is-an-awful-experience-isnt-it"&gt;
  &lt;/a&gt;
  It is an awful experience isn't it?
&lt;/h3&gt;

&lt;p&gt;Yup, that is the problem &lt;strong&gt;you&lt;/strong&gt; are causing for a lot of people by not adding alt text.&lt;/p&gt;

&lt;p&gt;Hopefully you also came across a few good alt descriptions!&lt;/p&gt;

&lt;p&gt;I hope you got to see how detailed descriptions of images in context can let you enjoy the same information and experience!&lt;/p&gt;

&lt;p&gt;That is all I wanted you to see, I hope it  has shown you &lt;strong&gt;why&lt;/strong&gt; it is important! &lt;/p&gt;

&lt;p&gt;This is a barrier to equality we can do something about really easily with a big impact!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#leave-the-social-visual-alt-text-plugin-on"&gt;
  &lt;/a&gt;
  Leave the Social Visual Alt Text plugin on
&lt;/h3&gt;

&lt;p&gt;I would encourage you to leave the social media plugin on as a reminder as it doesn't get in the way and you soon get used to it. (We all forget, yes even me with years working in accessibility!)&lt;/p&gt;

&lt;p&gt;In fact, I find it useful as sometimes (not often!) someone adds some alt text that explains where a building is, what piece of art something is etc. that otherwise I would not know!&lt;/p&gt;

&lt;p&gt;And who knows, the Social Visual Alt Text plugin might encourage you to (gently) nudge a few of your favourite peeps on Twitter to add alt descriptions to their images when you keep seeing the red bars on their content!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thats-a-wrap"&gt;
  &lt;/a&gt;
  That's a wrap!
&lt;/h2&gt;

&lt;p&gt;That is all!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let me know whether you had a good or bad experience using Twitter without images&lt;/strong&gt; (I think I know the answer üòã) in the comments!&lt;/p&gt;

&lt;p&gt;I have two follow up posts queued around this subject. &lt;/p&gt;

&lt;p&gt;One on how to add &lt;strong&gt;good&lt;/strong&gt; alt descriptions.&lt;/p&gt;

&lt;p&gt;The second is on how sites such as DEV, Twitter etc. can make adding alt descriptions more natural, loosely based on &lt;a href="https://dev.to/inhuofficial/dev-to-markdown-editor-part-deux-massive-improvements-hack-2-continued-5mp#images"&gt;my post on a What You See Is What You Get editor (WYSIWYG) that I built for DEV&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;The WYSIWYG has a little alt description process included as a concept (I linked straight to the relevant part)!&lt;/p&gt;

&lt;p&gt;You could use that for your DEV.to articles if you write them!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;p.s.&lt;/strong&gt; does anyone know if you can add alt text to cover images on DEV using front matter or something? It annoys me I can't do that! I seem to remember seeing a Github issue on the Forem repository about it, but I can't find it now.&lt;/p&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>productivity</category>
      <category>a11y</category>
    </item>
    <item>
      <title>Firebase core services</title>
      <author>Aswin Barath</author>
      <pubDate>Tue, 24 Aug 2021 18:01:28 +0000</pubDate>
      <link>https://dev.to/aswin2001barath/firebase-core-services-4hkl</link>
      <guid>https://dev.to/aswin2001barath/firebase-core-services-4hkl</guid>
      <description>&lt;h2&gt;
  &lt;a href="#firestore-database"&gt;
  &lt;/a&gt;
  Firestore database
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OdUPDGCJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qliisl5vchs8xas8j4v3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OdUPDGCJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qliisl5vchs8xas8j4v3.png" alt="Firestore database"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Firestore is an excellent choice these days as almost every app needs persistent data. Following are the benefits of firestore:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Realtime&lt;/li&gt;
&lt;li&gt;NoSQL&lt;/li&gt;
&lt;li&gt;Security&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#realtime"&gt;
  &lt;/a&gt;
  Realtime
&lt;/h3&gt;

&lt;p&gt;Realtime means that for every change made in the database, the connected users updates with these changes. This feature saves you a lot of time when you are developing applications. It provides clear logic and reduces your code length.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nosql"&gt;
  &lt;/a&gt;
  NoSQL
&lt;/h3&gt;

&lt;p&gt;Firestore is a NoSQL document database. There has been a surf of popularity for NoSQL databases. A lot of developers find them more comfortable to use.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h3&gt;

&lt;p&gt;Firestore provides a set of security rules with which you can easily create restrictions for who can read, write, update, or delete data from your database.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hosting"&gt;
  &lt;/a&gt;
  Hosting
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pYLBKkVR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6w96xl0bl2gmvynbh1ba.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pYLBKkVR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6w96xl0bl2gmvynbh1ba.png" alt="Hosting"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Firebase Hosting is an easy to use service even for beginners. Following are some impressive reasons to use this service:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SSL for Every Site&lt;/li&gt;
&lt;li&gt;Fast Servers&lt;/li&gt;
&lt;li&gt;Deploy From CLI&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#ssl-for-every-site"&gt;
  &lt;/a&gt;
  SSL for Every Site
&lt;/h3&gt;

&lt;p&gt;The SSL certificate is automatically provisioned and configured for each site deployed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cached-on-ssds"&gt;
  &lt;/a&gt;
  Cached on SSDs
&lt;/h3&gt;

&lt;p&gt;Sites deployed to Firebase Hosting are cached on SSD‚Äôs(Solid State Drive) for a low latency reliable experience.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deploy-from-cli"&gt;
  &lt;/a&gt;
  Deploy From CLI
&lt;/h3&gt;

&lt;p&gt;Deploying your app to the web from a local directory only takes one command.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#storage"&gt;
  &lt;/a&gt;
  Storage
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ixXSYaZg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zyw6j9xxzw9wns7hdv0x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ixXSYaZg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zyw6j9xxzw9wns7hdv0x.png" alt="Storage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We love to share photos, videos, and gifs. Firebase storage enables your users to store and share these files through your app. Some of the features of the Firebase storage service are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Handle Large File Sizes&lt;/li&gt;
&lt;li&gt;Flexible File Type&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#handle-large-file-sizes"&gt;
  &lt;/a&gt;
  Handle Large File Sizes
&lt;/h3&gt;

&lt;p&gt;Firebase storage can scale up to petabytes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flexible-file-type"&gt;
  &lt;/a&gt;
  Flexible File Type
&lt;/h3&gt;

&lt;p&gt;There are no limitations on the types of files you can upload, which means you can use this service for images, videos, PDFs, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#authentication"&gt;
  &lt;/a&gt;
  Authentication
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Or771bnG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/irk835xr7su5paudhy2f.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Or771bnG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/irk835xr7su5paudhy2f.PNG" alt="Authentication"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To build an authentication system from scratch is tiresome and can get tricky. Firebase offers a solution to authentication that requires less code, less time, and better security through the following features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Email and Password Authentication&lt;/li&gt;
&lt;li&gt;OAuth authentication

&lt;ul&gt;
&lt;li&gt;Using an existing platform to authenticate a user is known as OAuth. Firebase utilizes Google, Facebook, Twitter, Github, and many other providers that you can use to authenticate your users.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each Firebase service can be used on its own or together with the other services. Hence makes it easy to pick and choose the right services for your specific application.&lt;/p&gt;

&lt;p&gt;Firebase offers various services.&lt;br&gt;
So, I encourage you to take the time to explore the other services as well.&lt;/p&gt;

&lt;p&gt;Feel free to share if you found this useful üòÉ.&lt;/p&gt;

</description>
      <category>firebase</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Why Do Developers Choose Mobile First Approach</title>
      <author>Manar Abdelkarim</author>
      <pubDate>Tue, 24 Aug 2021 17:41:53 +0000</pubDate>
      <link>https://dev.to/manarabdelkarim/why-do-developers-choose-mobile-first-approach-4ckn</link>
      <guid>https://dev.to/manarabdelkarim/why-do-developers-choose-mobile-first-approach-4ckn</guid>
      <description>&lt;h4&gt;
  &lt;a href="#hello-designers-"&gt;
  &lt;/a&gt;
  Hello Designers ..
&lt;/h4&gt;

&lt;p&gt;Today I was practicing front-end development, so that I thought that it would be a good idea to share some of what I learned about  mobile first approach and bootstrap in a small article so you can benefit too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rWk-axge--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gifer.com/embedded/download/72Oz.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rWk-axge--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gifer.com/embedded/download/72Oz.gif" alt="cat"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's get started ..&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-idea-of-mobile-first-approach"&gt;
  &lt;/a&gt;
  The Idea of Mobile First Approach:
&lt;/h3&gt;

&lt;p&gt;The mobile first approach looks at designing a website for a mobile device first. So consider how you would satisfy the screen constraints of your mobile device. And then as your screen size expands, you would automatically start an app to your website to the larger and larger screen sizes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-mobile-first-approach"&gt;
  &lt;/a&gt;
  Why Mobile First Approach?
&lt;/h3&gt;

&lt;p&gt;The answer for this question is simple: mobile design is more limited. So if you start from a small screen you can focus in the main and important features that could fit a mobile screen, then perhaps you're willing more and more of the content. So as to take advantage of the increasing screen real estate, which means the same website when seeing on a mobile device might have only parts of the information being revealed to the user. But then when rendered on a full fledge desktop it might show a lot more detail version of the website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TUAR4NB2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://web3canvas.com/wp-content/uploads/2013/03/mobilefirst.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TUAR4NB2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://web3canvas.com/wp-content/uploads/2013/03/mobilefirst.png" alt="Mobile First Approach"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In addition, starting your website with mobile first and focusing more in the mobile design will make your website reachs more people because people tend to play more with their phone and we have 3.80 Billion phone users in the world! and the status of the world market share for mobile:55.77% comparing with Desktop:41.5%.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MWuLqkip--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydjd5ecuvkctfbopjy46.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MWuLqkip--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydjd5ecuvkctfbopjy46.png" alt="mobile first"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fortunately we have many web UI frameworks including Bootstrap to work with the design and apply mobile first approach .. here is a list of some popular UI frameworks:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Bootstrap ¬†¬†¬†¬†¬†¬† 2. Semantic-UI&lt;/li&gt;
&lt;li&gt;Foundation¬†¬†¬†¬†¬†4. Materialize&lt;/li&gt;
&lt;li&gt;Material UI ¬†¬†¬†¬†¬†6. Pure&lt;/li&gt;
&lt;li&gt;Skeleton ¬†¬†¬†¬†¬†¬†¬†¬† 8. UIKit&lt;/li&gt;
&lt;li&gt;Milligram ¬†¬†¬†¬†¬†¬† 10. Susy&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#bonus-info-what-is-bootstrap"&gt;
  &lt;/a&gt;
  Bonus Info üéâ: What is Bootstrap?
&lt;/h3&gt;

&lt;p&gt;Bootstrap is the most popular HTML, CSS, and JS framework for developing responsive, mobile first projects on the web, because  Bootstrap makes the web development faster and easier, also, it includes HTML and CSS based design templates for typography, forms, buttons, tables, navigation, modals, image carousels and many other, as well as optional , in addition to JavaScript plugins.&lt;br&gt;
so we can create responsive designs with mobile first easily &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b7xXhe9Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media3.giphy.com/media/SI8DCsjjGnODwlwqW0/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b7xXhe9Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media3.giphy.com/media/SI8DCsjjGnODwlwqW0/giphy.gif" alt="Mobile First Approach"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.invisionapp.com/inside-design/mobile-first-design/"&gt;What does mobile-first design mean for digital designers?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getbootstrap.com/docs/3.3/"&gt;getbootstrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Front-End Web UI Frameworks and Tools: Bootstrap 4 Course by The Hong Kong University of Science and Technology - Coursera&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bradfrost.com/blog/post/mobile-first-responsive-web-design/"&gt;mobile-first responsive web design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a&gt;NUMBER OF MOBILE PHONE &amp;amp; SMARTPHONE USERS&lt;/a&gt;](Source: &lt;a href="https://www.bankmycell.com/blog/how-many-phones-are-in-the-world"&gt;https://www.bankmycell.com/blog/how-many-phones-are-in-the-world&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.statista.com/statistics/330695/number-of-smartphone-users-worldwide/"&gt;Number of smartphone users from 2016 to 2021&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>design</category>
      <category>css</category>
      <category>javascript</category>
      <category>html</category>
    </item>
    <item>
      <title>Compose Animations beyond the state change</title>
      <author>Gustavo F√£o Valvassori</author>
      <pubDate>Tue, 24 Aug 2021 17:14:23 +0000</pubDate>
      <link>https://dev.to/touchlab/compose-animations-beyond-the-state-change-234a</link>
      <guid>https://dev.to/touchlab/compose-animations-beyond-the-state-change-234a</guid>
      <description>&lt;p&gt;Jetpack Compose hit 1.0 a few weeks ago, and it came with a wonderful and robust animations API. With this new API, you will have total control over animations when the state changes. But when it comes to more complex scenarios, you may face some non-obvious paths. This article will explore some of these scenarios and help you understand how you can achieve your goal.&lt;/p&gt;

&lt;p&gt;I'm about to discuss the problems I found when trying to implement the &lt;a href="https://github.com/yonglan-whl/AVLoadingIndicatorView"&gt;AVLoadingIndicatorView&lt;/a&gt; library in Compose. And to guide you through this journey, I'll use the following loading indicators as examples.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BWPizbA8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7qrttsqqftz8zuch0gr5.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BWPizbA8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7qrttsqqftz8zuch0gr5.gif" alt="Kapture 2021-08-18 at 18.02.33"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Also, all the code we discuss in this article is available in this repository:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/faogustavo"&gt;
        faogustavo
      &lt;/a&gt; / &lt;a href="https://github.com/faogustavo/loading-indicator-demo"&gt;
        loading-indicator-demo
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#ballscaleindicator"&gt;
  &lt;/a&gt;
  BallScaleIndicator
&lt;/h2&gt;

&lt;p&gt;Let's start with some simple animation. The animation consists in reducing alpha while increasing the scale from a circle. We can do that with just one value that will move from 0 to 1. So the scale will be the current value, and the alpha will be the complementary value (&lt;code&gt;1 - currentValue&lt;/code&gt;). As this is a loading animation, we will have to configure it to repeat forever.&lt;/p&gt;

&lt;p&gt;TL;DR; we would have to do something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;BallScaleIndicator&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;animationProgress&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nf"&gt;animateFloatAsState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;targetValue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;animationSpec&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;infiniteRepeatable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;animation&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;tween&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;durationMillis&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nc"&gt;Ball&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;modifier&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Modifier&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;animationProgress&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;animationProgress&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;But when you run your app, this is the result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kKFV82Nt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2y6vxpgvpn2nd0w6iris.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kKFV82Nt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2y6vxpgvpn2nd0w6iris.gif" alt="Loading indicator not working"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nothing happens. Why? In the first lines from this article, we said that Compose has an awesome API to animate state changes, but this is not some state change. We would have to add one variable to control the target state and change it to start the animation. Also, when the view is rendered, we would have to change the value to start the animation.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;BallScaleIndicator&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Create one target value state that will &lt;/span&gt;
    &lt;span class="c1"&gt;// change to start the animation&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;targetValue&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nf"&gt;remember&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nf"&gt;mutableStateOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Update the attribute on the animation&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;animationProgress&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nf"&gt;animateFloatAsState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;targetValue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;targetValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;animationSpec&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;infiniteRepeatable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;animation&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;tween&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;durationMillis&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;// Use the SideEffect helper to run something&lt;/span&gt;
    &lt;span class="c1"&gt;// when this block runs&lt;/span&gt;
    &lt;span class="nc"&gt;SideEffect&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;targetValue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1f&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;Ball&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;modifier&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Modifier&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;animationProgress&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;animationProgress&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And now, everything works üéâ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CI0OHbU6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ryhruwmikkgk87yj2b1t.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CI0OHbU6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ryhruwmikkgk87yj2b1t.gif" alt="Loading indicator with side effect"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;But we have another problem now. The &lt;code&gt;SideEffect&lt;/code&gt; will run every time the view is recomposed. So as the animation changes the state value on each iteration, we will run this effect many times. It makes the animation work, but it may not scale nicely and cause some UI issues. &lt;/p&gt;

&lt;p&gt;Compose also provides a way to animate values using transitions. One type of transition is the InfiniteTransition. It provides you a syntax with the initial and final values as parameters and it's automatically started when created (no need for SideEffects). To use it, you need to create an instance of it using the &lt;code&gt;rememberInfiniteTransition&lt;/code&gt; method and call the &lt;code&gt;animateFloat&lt;/code&gt; function to have an animated state.&lt;/p&gt;

&lt;p&gt;After a small refactor, this is the result.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;BallScaleIndicator&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Creates the infinite transition&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;infiniteTransition&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;rememberInfiniteTransition&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;// Animate from 0f to 1f&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;animationProgress&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="n"&gt;infiniteTransition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;animateFloat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;initialValue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;targetValue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;animationSpec&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;infiniteRepeatable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;animation&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;tween&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;durationMillis&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nc"&gt;Ball&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;modifier&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Modifier&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;animationProgress&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;animationProgress&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And the result animation is the same, but without using side effects on this function.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---7NacZ1s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgbtq690srggzutyze7p.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---7NacZ1s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgbtq690srggzutyze7p.gif" alt="Loading indicator with infinite transition"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#ballpulsesyncindicator"&gt;
  &lt;/a&gt;
  BallPulseSyncIndicator
&lt;/h2&gt;

&lt;p&gt;Alright, we got the first one. Let's try something more complex. This one consists of three balls jumping in synchrony. The easiest way to achieve this is to delay the start of each animation. We can have an animation time of 600ms and start it with a delay of 70ms for each ball.&lt;/p&gt;

&lt;p&gt;On a quick search into the compose animation API, we find that the &lt;code&gt;tween&lt;/code&gt; animation has a property &lt;code&gt;delayMillis&lt;/code&gt; that we can use to implement this behavior. And to animate the values, we can keep the InfiniteTransition. So let's start working with it.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;BallPulseSyncIndicator&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;infiniteTransition&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;rememberInfiniteTransition&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;animationValues&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="n"&gt;infiniteTransition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;animateFloat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;initialValue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;targetValue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;12f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;animationSpec&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;infiniteRepeatable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;animation&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;tween&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;durationMillis&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;delayMillis&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;repeatMode&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RepeatMode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Reverse&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;Row&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;animationValues&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;forEach&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;animatedValue&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="nc"&gt;Ball&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;modifier&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Modifier&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;horizontal&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;animatedValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Sound good, right? But when we see the animation, we will notice something weird.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iWG-HXqy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2yjut01re4h206h1eq37.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iWG-HXqy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2yjut01re4h206h1eq37.gif" alt="Loading indicator losing synchrony"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see that, after some running time, the animation loses synchrony and starts behaving weirdly. The reason for that is the property that we used to delay the animation. It applies the delay to each iteration, not just the first one.&lt;/p&gt;

&lt;p&gt;The solution to this is to use the Coroutines Animation API. It's provided by the Compose animations and has a method called &lt;code&gt;animate&lt;/code&gt;. It has a syntax pretty similar to the &lt;code&gt;animateFloat&lt;/code&gt; from transition. With that in mind, we can use the &lt;code&gt;delay&lt;/code&gt; function from Coroutines before starting the animation. This will guarantee the correct behavior.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;BallPulseSyncIndicator&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;animationValues&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;animatedValue&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nf"&gt;remember&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nf"&gt;mutableStateOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nc"&gt;LaunchedEffect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Unit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// Delaying using Coroutines&lt;/span&gt;
            &lt;span class="nf"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;70L&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="nf"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;initialValue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;targetValue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;12f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;animationSpec&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;infiniteRepeatable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="c1"&gt;// Remove delay property&lt;/span&gt;
                    &lt;span class="n"&gt;animation&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;tween&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;durationMillis&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                    &lt;span class="n"&gt;repeatMode&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RepeatMode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Reverse&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;animatedValue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;animatedValue&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;Row&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;animationValues&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;forEach&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;animatedValue&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="nc"&gt;Ball&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;modifier&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Modifier&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;horizontal&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;animatedValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, the animation will keep synchronized, even after some time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1N7fuzcw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cukgnsidgxqzu6nuvj21.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1N7fuzcw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cukgnsidgxqzu6nuvj21.gif" alt="Loading indicator with delay to start"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#triangleskewspinindicator"&gt;
  &lt;/a&gt;
  TriangleSkewSpinIndicator
&lt;/h2&gt;

&lt;p&gt;Alright, let's go to the next one. This triangle indicator has two animations (rotation on the X-axis and Y-axis), but you need to wait for the previous one to execute to start the next one. So if we put that in a timeline, we will have something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h94v_Ear--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/331147xkh4qvuijod005.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h94v_Ear--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/331147xkh4qvuijod005.png" alt="Untitled"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The easiest way to evaluate something like this is to handle the animation as one thing with groups. Each group will be formed by the value and the next item in the list and take the same amount to evaluate.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v1tAfl8b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c9tzqzqez975rsfejzug.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v1tAfl8b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c9tzqzqez975rsfejzug.png" alt="Untitled (1)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Rewriting the image in Kotlin, we would have something like this:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;animateValues&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Float&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;,&lt;/span&gt;
    &lt;span class="n"&gt;animationSpec&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;AnimationSpec&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Float&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;spring&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nc"&gt;State&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Float&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// 1. Create the groups zipping with next entry&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;groups&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nf"&gt;rememberUpdatedState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newValue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;zipWithNext&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

    &lt;span class="c1"&gt;// 2. Start the state with the first value&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;state&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;remember&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nf"&gt;mutableStateOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;LaunchedEffect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="py"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="py"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;

        &lt;span class="c1"&gt;// Start the animation from 0 to groups quantity&lt;/span&gt;
        &lt;span class="nf"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;initialValue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;targetValue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toFloat&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
            &lt;span class="n"&gt;animationSpec&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;animationSpec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="c1"&gt;// Get which group is being evaluated&lt;/span&gt;
            &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;integerPart&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toInt&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="py"&gt;initialValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="py"&gt;finalValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toInt&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;

            &lt;span class="c1"&gt;// Get the current "position" from the group animation&lt;/span&gt;
            &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;decimalPart&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;frame&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;integerPart&lt;/span&gt;

            &lt;span class="c1"&gt;// Calculate the progress between the initial and final value&lt;/span&gt;
            &lt;span class="nf"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;initialValue&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;finalValue&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;initialValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;decimalPart&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;With this one implemented, the animation process will be pretty simple. Just create two variables to hold the X and Y rotation, and update the view using the &lt;code&gt;.graphicsLayer&lt;/code&gt; modifier.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;TriangleSkewSpinIndicator&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;animationSpec&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;infiniteRepeatable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Float&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;
        &lt;span class="n"&gt;animation&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;tween&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;durationMillis&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;easing&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;LinearEasing&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;xRotation&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nf"&gt;animateValues&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;listOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;180f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;180f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0f&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
        &lt;span class="n"&gt;animationSpec&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;animationSpec&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;yRotation&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nf"&gt;animateValues&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;listOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;180f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;180f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0f&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
        &lt;span class="n"&gt;animationSpec&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;animationSpec&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nc"&gt;Triangle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;modifier&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;graphicsLayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;rotationX&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xRotation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;rotationY&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yRotation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And this is the result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fizrpdU2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qglti4cizw2e9rmq6qk5.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fizrpdU2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qglti4cizw2e9rmq6qk5.gif" alt="Triangle indicator example"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;The Jetpack Compose comes with an incredible animation API. It provides you many ways to implement all kinds of animations you may need. But, the current API is a bit different from the imperative version, and some paths will not be that obvious.&lt;/p&gt;

&lt;p&gt;To help you have a smooth transition to compose, Touchlab has started a project to help you with all these non-obvious paths.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/touchlab-lab"&gt;
        touchlab-lab
      &lt;/a&gt; / &lt;a href="https://github.com/touchlab-lab/compose-animations"&gt;
        compose-animations
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Compose Animations&lt;/h1&gt;
&lt;p&gt;Group of libraries to help you build better animations with &lt;a href="https://developer.android.com/jetpack/compose" rel="nofollow"&gt;Jetpack Compose&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
About&lt;/h2&gt;
&lt;h3&gt;
Goal&lt;/h3&gt;
&lt;p&gt;The main goal of this project is to help you build animations with Jetpack Compose. The compose
animations API provides a rich animation API to handle state changes, but you need to implement
some boilerplate code when it comes to other types of animation.&lt;/p&gt;
&lt;h3&gt;
What's Included?&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/touchlab-lab/compose-animations./easing/"&gt;Easings&lt;/a&gt; - A library with 30 different easings to use on your animations&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/touchlab-lab/compose-animations./value-animator-compat/"&gt;Value Animator Compat&lt;/a&gt; - Compatibility API with non-compose animations
using ValueAnimator&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/touchlab-lab/compose-animations./value-animator/"&gt;Value Animator&lt;/a&gt; - API that provides you the same functionality from
non-compose ValueAnimator, but using only compose methods&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
About Touchlab&lt;/h2&gt;
&lt;p&gt;Touchlab is a mobile-focused development agency based in NYC. We have been working on Android since
the beginning, and have worked on a wide range of mobile and hardware projects for the past decade
Over the past few years, we have invested significantly on‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/touchlab-lab/compose-animations"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;






&lt;p&gt;Thanks for reading! Let me know in the comments if you have questions. Also, you can reach out to me at &lt;a class="mentioned-user" href="https://dev.to/faogustavo"&gt;@faogustavo&lt;/a&gt;
 on &lt;a href="https://twitter.com/faogustavo"&gt;Twitter&lt;/a&gt;, the &lt;a href="https://slack.kotlinlang.org/"&gt;Kotlin Slack&lt;/a&gt;, or &lt;a href="http://slack.androiddevbr.org/"&gt;AndroidDevBr Slack&lt;/a&gt;. And if you find all this interesting, maybe you'd like to &lt;a href="https://touchlab.co/contact-us/"&gt;work with&lt;/a&gt; or &lt;a href="https://touchlab.co/careers-3/"&gt;work at&lt;/a&gt; Touchlab.  &lt;/p&gt;

</description>
      <category>android</category>
      <category>compose</category>
      <category>animations</category>
      <category>ui</category>
    </item>
    <item>
      <title>Assign value to multiple variables at once in Javascript</title>
      <author>Beginner Developer</author>
      <pubDate>Tue, 24 Aug 2021 16:50:52 +0000</pubDate>
      <link>https://dev.to/beginnerdeveloper/assign-value-to-multiple-variables-at-once-in-javascript-3ah7</link>
      <guid>https://dev.to/beginnerdeveloper/assign-value-to-multiple-variables-at-once-in-javascript-3ah7</guid>
      <description>&lt;p&gt;The &lt;strong&gt;destructuring assignment&lt;/strong&gt; syntax is a JavaScript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    let [a,b,c] = [1,2,3];

    console.log(a,b,c);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cuVKCvS1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3b8yxsbyhx8e3c9634r9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cuVKCvS1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3b8yxsbyhx8e3c9634r9.PNG" alt="Output"&gt;&lt;/a&gt;&lt;br&gt;
My Blog:- &lt;a href="https://beginners-developer.blogspot.com/"&gt;https://beginners-developer.blogspot.com/&lt;/a&gt;&lt;br&gt;
Reference: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tips</category>
      <category>html</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Why you should aim to be at a company with a lot of users</title>
      <author>Scott</author>
      <pubDate>Tue, 24 Aug 2021 16:45:58 +0000</pubDate>
      <link>https://dev.to/scottstern06/why-you-should-aim-to-be-at-a-company-with-a-lot-of-users-1k5</link>
      <guid>https://dev.to/scottstern06/why-you-should-aim-to-be-at-a-company-with-a-lot-of-users-1k5</guid>
      <description>&lt;p&gt;This is something I wish I did earlier on..&lt;/p&gt;

&lt;p&gt;First I worked at a small startup, I don‚Äôt think anyone used what we built‚Ä¶and it was horrible.&lt;/p&gt;

&lt;p&gt;My next few jobs were working at B2B enterprise software companies where not daily active users used the product.&lt;br&gt;
My current job has LOTS of users, and I‚Äôm one of them. And I‚Äôm happy and it has done a lot for my career for credibility.&lt;/p&gt;

&lt;p&gt;Why is this important?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;From a technical perspective its important to be in a company where ‚Äúoh shit‚Äù protocol is in place and you know how to fix a problem that could be potentially costing the business hundreds of thousands of dollars&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When you are networking or going into an interview, if they have used your product your credibility goes through the roof and they want to work with you.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Its ok not to be at a company like this, but strive to get there one day. &lt;/p&gt;

&lt;p&gt;It will help your career development and the problems you get to solve will most likely be more fun.&lt;/p&gt;

&lt;p&gt;Want more? Come join our Facebook group to help you get your first job as a software engineer, career development, and so much more!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.facebook.com/groups/310120400851953"&gt;https://www.facebook.com/groups/310120400851953&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scott&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>career</category>
      <category>productivity</category>
      <category>javascript</category>
    </item>
    <item>
      <title>KoMPose Kit: KaMP Kit goes Jetpack Compose</title>
      <author>Brady Aiello</author>
      <pubDate>Tue, 24 Aug 2021 16:38:22 +0000</pubDate>
      <link>https://dev.to/touchlab/kompose-kit-kamp-kit-goes-jetpack-compose-1k43</link>
      <guid>https://dev.to/touchlab/kompose-kit-kamp-kit-goes-jetpack-compose-1k43</guid>
      <description>&lt;h2&gt;
  &lt;a href="#kamp-kit-and-jetpack-compose"&gt;
  &lt;/a&gt;
  KaMP Kit and Jetpack Compose
&lt;/h2&gt;

&lt;p&gt;Hey folks, Brady from Touchlab here. I've only been at Touchlab since the beginning of the year, but &lt;a href="https://github.com/touchlab/KaMPKit"&gt;KaMP Kit&lt;/a&gt;, our simple-but-not-too-simple sample project to help those considering Kotlin Multiplatform, started way back at the end of 2019. Back then, Jetpack Compose had just been announced in May. It was a time full of optimism about the modern mobile UI development experience, but also of wild instability. The first &lt;a href="https://android.googlesource.com/platform/frameworks/support/+/refs/heads/androidx-navigation-release/ui/README.md"&gt;method&lt;/a&gt; of getting Jetpack Compose to work on your machine involved pulling down the AndroidX development toolchain, and running a special version of Android Studio via terminal commands. Eventually, preview, alpha, and beta version of Compose could be used in the canary version of Android Studio (more &lt;a href="https://youtu.be/U5BwfqBpiWU?t=1324"&gt;history&lt;/a&gt;). Starting July 28, 2021, Compose went &lt;a href="https://android-developers.googleblog.com/2021/07/jetpack-compose-announcement.html"&gt;stable&lt;/a&gt;, and a version of Android Studio Arctic Fox, which supports Compose, was released in the stable channel shortly thereafter. Now we can use a stable version of Compose with a stable version of Android Studio. We at Touchlab have been excited about Compose for a long time; you can watch us geek out about it &lt;a href="https://www.youtube.com/watch?v=CA6KYa0MvPo"&gt;here&lt;/a&gt;. And though the community has been interested in Compose for KaMP Kit since at least &lt;a href="https://github.com/touchlab/KaMPKit/issues/105"&gt;May 2020&lt;/a&gt;, we didn't want folks who are trying out Kotlin Multiplatform with KaMP Kit to also have to learn a changing Jetpack Compose API, and require them to use a special version of Android Studio. Now that these obstacles have been removed, we feel comfortable fully endorsing Jetpack Compose in KMM.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cutting-code"&gt;
  &lt;/a&gt;
  Cutting Code
&lt;/h2&gt;

&lt;p&gt;After moving to Jetpack Compose, we were able to remove a lot of things that clutter the KMP learning experience. XML views are gone, which means developers don't need to worry about context switching between XML and Kotlin, &lt;code&gt;findViewById()&lt;/code&gt;, or configure &lt;code&gt;viewBinding&lt;/code&gt; or &lt;code&gt;dataBinding&lt;/code&gt;. Removing the &lt;code&gt;RecyclerView&lt;/code&gt;, its &lt;code&gt;ViewHolder&lt;/code&gt;, and &lt;code&gt;Adapter&lt;/code&gt;, and replacing it with a &lt;code&gt;LazyColumn&lt;/code&gt; from Compose simplifies the sample considerably. Although we had to bring in Compose dependencies, &lt;a class="mentioned-user" href="https://dev.to/russhwolf"&gt;@russhwolf&lt;/a&gt;
 noticed that by abandoning &lt;code&gt;AppCompatActivity&lt;/code&gt; in favor of &lt;code&gt;ComponentActivity&lt;/code&gt;, we were able to remove the large AppCompat library from our dependencies entirely.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exposing-a-flaw-in-our-state-management"&gt;
  &lt;/a&gt;
  Exposing a Flaw in our State Management
&lt;/h2&gt;

&lt;p&gt;If you're now converting an app to use Jetpack Compose, you may have noticed that modeling your view state using a &lt;code&gt;sealed class&lt;/code&gt; may not work as well as it used to in the &lt;code&gt;View&lt;/code&gt; world. That's because &lt;code&gt;View&lt;/code&gt;s implicitly kept state that we relied on. Compose made this more apparent, and forced us to stop relying on our UI for any state whatsoever. &lt;/p&gt;

&lt;p&gt;For example, let's say we have &lt;code&gt;Loading&lt;/code&gt;, &lt;code&gt;Success&lt;/code&gt;, and &lt;code&gt;Error&lt;/code&gt; states to describe our UI, and that we are currently showing the &lt;code&gt;Success&lt;/code&gt; state to describe a list of items in our UI, while fetching more data. In the &lt;code&gt;View&lt;/code&gt; world, we emit a &lt;code&gt;Loading&lt;/code&gt; state, which just makes the loading spinner visible, in addition to the stale list, while fetching a fresh list. It just comes down to showing what we're already showing, and then making a loading spinner visible.&lt;/p&gt;

&lt;p&gt;However, in the Compose world, we don't have all possible views on the screen, only toggling some as visible. Instead, we need to emit all of the UI we want to show whenever the State changes. In our example, when we emit the &lt;code&gt;Loading&lt;/code&gt; state, the success UI with our list of data goes away, and only the loading spinner is visible. This is very jarring, and not a great user experience. This is because we're using a &lt;code&gt;sealed class&lt;/code&gt; for something that's not mutually exclusive. &lt;code&gt;Success&lt;/code&gt; and &lt;code&gt;Loading&lt;/code&gt; are not mutually exclusive, unless &lt;code&gt;Loading&lt;/code&gt; only describes an empty screen with a loading spinner. Ryan Harter has &lt;a href="https://ryanharter.com/blog/2019/07/encapsulating-view-state/#a-note-about-sealed-classes"&gt;written&lt;/a&gt; about this issue, and Android GDE &lt;a class="mentioned-user" href="https://dev.to/ditn"&gt;@ditn&lt;/a&gt;
 &lt;a href="https://twitter.com/iateyourmic"&gt;Adam Bennett&lt;/a&gt; told me that his team at Cuvva also had this discussion. Perhaps the simplest solution is to have a &lt;code&gt;data class&lt;/code&gt; with nullable fields:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;data class&lt;/span&gt; &lt;span class="nc"&gt;DataState&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;exception&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Boolean&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Boolean&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This covers the only &lt;code&gt;Loading&lt;/code&gt;, only &lt;code&gt;Success&lt;/code&gt;, only &lt;code&gt;Error&lt;/code&gt;, &lt;code&gt;Loading&lt;/code&gt; and &lt;code&gt;Success&lt;/code&gt;, and &lt;code&gt;Loading&lt;/code&gt; and &lt;code&gt;Error&lt;/code&gt; possibilities. It harkens back to the old Android architecture components samples' &lt;code&gt;Resource&amp;lt;T&amp;gt;&lt;/code&gt; &lt;a href="https://github.com/android/architecture-components-samples/blob/88747993139224a4bb6dbe985adf652d557de621/GithubBrowserSample/app/src/main/java/com/android/example/github/vo/Resource.kt"&gt;class&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Though, some &lt;a href="https://twitter.com/JorgeCastilloPr/status/1428731347888230402"&gt;argue&lt;/a&gt; that those State combinations should all be mutually exclusive &lt;code&gt;sealed class&lt;/code&gt;es, which is also a great approach that avoids the nullability issues. If &lt;code&gt;Loading&lt;/code&gt; is the only State that can coexist with other States, we can also just add a boolean field. &lt;/p&gt;

&lt;p&gt;Whichever way you go, you should make sure not to model any of your UI state as mutually exclusive of others unless it actually &lt;em&gt;is&lt;/em&gt; mutually exclusive of others. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#swipe-to-refresh"&gt;
  &lt;/a&gt;
  Swipe To Refresh
&lt;/h2&gt;

&lt;p&gt;Swipe-to-refresh functionality is an extremely common UI element, and as such, it is available on Android's legacy View system in &lt;a href="https://developer.android.com/training/swipe/add-swipe-interface"&gt;SwipeRefreshLayout&lt;/a&gt;. The Compose equivalent isn't part of the core Compose UI, but there is a solid solution.&lt;/p&gt;

&lt;p&gt;To get this same functionality in Compose without implementing swipe-to-refresh yourself, you'll want to use &lt;a href="https://github.com/google/accompanist/tree/main/swiperefresh"&gt;Accompanist-SwipeRefresh&lt;/a&gt;, which is a Google library, but isn't officially part of Jetpack. You'll also need to make sure that any content inside the &lt;code&gt;SwipeRefresh&lt;/code&gt; Composable is scrollable. You may have to wrap some content in a &lt;code&gt;Column&lt;/code&gt; with a &lt;code&gt;verticalScroll&lt;/code&gt; modifier per the &lt;a href="https://google.github.io/accompanist/swiperefresh/"&gt;documentation&lt;/a&gt;. If you miss this step, you could emit a non-scrollable &lt;code&gt;Error&lt;/code&gt; state, and be unable to swipe to refresh again.&lt;/p&gt;

&lt;p&gt;Given its popularity, it seems a little strange that swipe-to-refresh isn't a core part of Compose. But this brings us to another way that Compose shines. Compose, and its 1st party associated libraries, are completely unbundled from the operating system. This means that Compose can run on any device running Android API &lt;a href="https://developer.android.com/jetpack/compose/interop/adding#anchor"&gt;21 (Lollipop) and newer&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#transforming-flows"&gt;
  &lt;/a&gt;
  Transforming Flows
&lt;/h2&gt;

&lt;p&gt;Compose uses a &lt;a href="https://developer.android.com/jetpack/compose/state"&gt;special observable type&lt;/a&gt; to know when to update UI. In Compose, this is the &lt;code&gt;State&amp;lt;T&amp;gt;&lt;/code&gt; class. When &lt;code&gt;State&lt;/code&gt; changes, all &lt;code&gt;@Composable&lt;/code&gt; functions dependent on that &lt;code&gt;State&lt;/code&gt; are reinvoked, and emit the corresponding UI. By exposing data as &lt;code&gt;StateFlow&lt;/code&gt;s from our KMM module, we can use the &lt;code&gt;Flow&lt;/code&gt; extension function &lt;code&gt;collectAsState()&lt;/code&gt; and clean it up even more with delegate syntax. We want to collect the &lt;code&gt;Flow&lt;/code&gt; safely, avoiding collection when the view goes to the background, and restarting it when it comes back to the foreground. We'll use Manuel Vivo's &lt;a href="https://medium.com/androiddevelopers/a-safer-way-to-collect-flows-from-android-uis-23080b1f8bda#c5fd"&gt;post&lt;/a&gt;, "A safer way to collect flows from Android UIs" as a guide to create a lifecycle-aware &lt;code&gt;Flow&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;lifecycleOwner&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;LocalLifecycleOwner&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current&lt;/span&gt;
&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;lifecycleAwareDogsFlow&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;remember&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;breedStateFlow&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="n"&gt;lifecycleOwner&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;breedStateFlow&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;flowWithLifecycle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lifecycleOwner&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lifecycle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;dogsState&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="n"&gt;lifecycleAwareDogsFlow&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;collectAsState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;breedStateFlow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The delegate syntax is nice because we get best of &lt;code&gt;State&lt;/code&gt; and its backing data. Our &lt;code&gt;dogsState&lt;/code&gt; is actually not a &lt;code&gt;State&lt;/code&gt;, so we don't need to put &lt;code&gt;.value&lt;/code&gt; to get the value, but because it delegates its &lt;code&gt;get()&lt;/code&gt;s to a &lt;code&gt;State&lt;/code&gt;, &lt;code&gt;@Composable&lt;/code&gt; functions that take it as a parameter are still invoked whenever its value changes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Jetpack Compose has been an exciting project to follow, and it's clear that it has a bright future for reactive and declarative UI. Updating to Compose has simplified KaMP Kit, and exposed a flaw in our previous state management approach, forcing us to become better developers. Our goal with the &lt;a href="https://github.com/touchlab/KaMPKit"&gt;KaMP Kit&lt;/a&gt; project is to give folks interested in Kotlin Multiplatform the easiest way to get started, and now that Compose is stable, it makes learning KMM easier than ever.&lt;/p&gt;

</description>
      <category>kotlin</category>
      <category>compose</category>
      <category>android</category>
    </item>
    <item>
      <title>What is Firebase?</title>
      <author>Aswin Barath</author>
      <pubDate>Tue, 24 Aug 2021 16:38:13 +0000</pubDate>
      <link>https://dev.to/aswin2001barath/what-is-firebase-3f35</link>
      <guid>https://dev.to/aswin2001barath/what-is-firebase-3f35</guid>
      <description>&lt;p&gt;&lt;a href="https://aswinbarath.github.io/What-is-Firebase/"&gt;Originally posted here!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let us first understand how is a full-stack application built.&lt;br&gt;
A full-stack application consists of a front-end component and a back-end component.&lt;br&gt;
A front-end component is what we see, a user interface(UI).&lt;br&gt;
A back-end component communicates with the UI to send, receive, store and/or delete data.&lt;/p&gt;

&lt;p&gt;Firebase is &lt;strong&gt;Back-End as a Service (BaaS)&lt;/strong&gt;.&lt;br&gt;
Firebase gives you all the benefits of a back-end without the complexities of creating one up from scratch.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-firebase"&gt;
  &lt;/a&gt;
  Benefits of Firebase
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#reduce-development-time"&gt;
  &lt;/a&gt;
  Reduce Development Time
&lt;/h3&gt;

&lt;p&gt;Let's face it. We can get impatient when we want a full-stack application as soon as possible. With Firebase, you can cut down development time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h3&gt;

&lt;p&gt;Firebase provides built-in security. If you configure it in the right way, your app will be a solid fortress.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#highspeed-caching"&gt;
  &lt;/a&gt;
  High-Speed Caching
&lt;/h3&gt;

&lt;p&gt;Your app deployed using Firebase hosting gets cached on solid-state drives (SSD) throughout the world. Your app loading time will become extremely fast that also helps with SEO.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#realtime-data"&gt;
  &lt;/a&gt;
  Realtime Data
&lt;/h3&gt;

&lt;p&gt;Cloud Firestore database updates all connected clients in real-time. The ability to get real-time updates makes applications a lot easier to implement.&lt;/p&gt;

&lt;p&gt;Feel free to share if you found this useful üòÉ.&lt;/p&gt;

</description>
      <category>firebase</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>15 Useful VSCode shortcuts to improve productivity</title>
      <author>Shubham Khatri</author>
      <pubDate>Tue, 24 Aug 2021 16:20:43 +0000</pubDate>
      <link>https://dev.to/shubhamreacts/15-useful-vscode-shortcuts-to-improve-productivity-4akc</link>
      <guid>https://dev.to/shubhamreacts/15-useful-vscode-shortcuts-to-improve-productivity-4akc</guid>
      <description>&lt;p&gt;VSCode is one of the most popular editors for web development. When writing code, we often require certain formatting actions, and a lot of them are supported by VSCode itself. While most actions can be found from Menu options, having hands-on keyboard shortcuts can help improve your coding speed by a lot.&lt;/p&gt;

&lt;p&gt;Here is a list of some shortcuts that I have been using for a while and found to be really useful. &lt;/p&gt;

&lt;p&gt;Default shortcuts are for Mac, while shortcuts for Windows and Linux are mentioned below for each command &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#1-cmd-p-opens-the-palette-to-search-for-a-file"&gt;
  &lt;/a&gt;
  1. CMD + P: Opens the palette to search for a file
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL + P)&lt;/p&gt;

&lt;p&gt;Navigating through files is one of the most common options and this command can come in pretty handy. You can type the name of the file in the search box and select the file by clicking or by pressing enter on the search result to open the file&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cTCOXgfa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxo3d2am76propqw6vl4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cTCOXgfa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxo3d2am76propqw6vl4.gif" alt="CMD+P"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-cmd-shift-l-add-cursors-to-all-matching-selections"&gt;
  &lt;/a&gt;
  2. CMD + SHIFT + L: Add cursors to all matching selections
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL + SHIFT + L)&lt;/p&gt;

&lt;p&gt;One of my favorite features of VSCode is multi cursors. They allow you to replace text or append more text without copy-pasting or requiring you to change it one at a time. &lt;/p&gt;

&lt;p&gt;Using this command, you can add cursors to all matching selections in the document&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m9KDF5lp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hvaju2yhi84vprpnsytl.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m9KDF5lp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hvaju2yhi84vprpnsytl.gif" alt="CMD+SHIFT+L"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-cmd-d-add-cursor-to-next-matching-selection"&gt;
  &lt;/a&gt;
  3. CMD + D: Add cursor to next matching selection
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL + D)&lt;/p&gt;

&lt;p&gt;Like the above command, this is also used to add cursors but with this, you can add the cursor to the next matching selection. This is especially helpful when you don't want to select all occurrences together&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--diGL3ajV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/btp319vo48whuryb21k9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--diGL3ajV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/btp319vo48whuryb21k9.gif" alt="CMD+D"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-cmd-u-undo-last-cursor-operation"&gt;
  &lt;/a&gt;
  4.  CMD + U: Undo last cursor operation
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL + U)&lt;/p&gt;

&lt;p&gt;If you need to undo cursor selection in a case where you selected more cursors than required or reset the cursor to a previous position, you can use this command to undo the last cursor action&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0OI5Zdp3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l57879ascz6drk6rhsrl.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0OI5Zdp3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l57879ascz6drk6rhsrl.gif" alt="CMD+U"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-cmd-l-select-current-line"&gt;
  &lt;/a&gt;
  5. CMD + L: Select current line.
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL + L)&lt;/p&gt;

&lt;p&gt;Often we use mouse drag to select the text, but if we want to select entire lines, we can use this command &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0e5cfa_p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9z09oof6f5oupytbnx18.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0e5cfa_p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9z09oof6f5oupytbnx18.gif" alt="CMD+L"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-ctrl-g-go-to-a-specific-line"&gt;
  &lt;/a&gt;
  6. CTRL + G: Go to a specific line
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL + G)&lt;/p&gt;

&lt;p&gt;We can navigate to a specific line of the document by using this simple command and typing the line number. &lt;/p&gt;

&lt;p&gt;This is especially helpful in situations when error stack traces provide us the line number of the file and our file is large.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CFbXfmRo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/673j1pskcne0zc7sgp5g.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CFbXfmRo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/673j1pskcne0zc7sgp5g.gif" alt="CTRL+G"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-cmd-k-w-close-all-open-editor-tabs"&gt;
  &lt;/a&gt;
  7. CMD + K + W: Close all open editor tabs
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL + K + W)&lt;/p&gt;

&lt;p&gt;This command is useful when we want to clear all tabs. &lt;/p&gt;

&lt;p&gt;Often while debugging or developing, I have opened many tabs and when I want to change the context or start fresh, this command comes in very handy&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SbrLzFHk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mtdwxtdan9ik48jrkrk2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SbrLzFHk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mtdwxtdan9ik48jrkrk2.gif" alt="CMD+K+W"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-shift-option-a-toggle-block-comment"&gt;
  &lt;/a&gt;
  8. SHIFT + OPTION + A : Toggle  block comment
&lt;/h3&gt;

&lt;p&gt;(Windows: SHIFT + ALT + A, Linux: CTRL+SHIFT+A)&lt;/p&gt;

&lt;p&gt;This shortcut also allows us to add a new block comment or toggle existing ones.&lt;/p&gt;

&lt;p&gt;We enclose a piece of Javascript code with &lt;code&gt;/* */&lt;/code&gt;  to add a block comment. However, with this shortcut, we can add or remove a block comment for the selected code block or add new ones.  &lt;/p&gt;

&lt;p&gt;Line comments can be toggled with &lt;code&gt;CMD + / (Windows/Linux: CTRL + /)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--klhXakvg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1d0o7o7bd56dub5cf25s.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--klhXakvg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1d0o7o7bd56dub5cf25s.gif" alt="SHIFT+ALT+A"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-cmd-option-fold-code-block"&gt;
  &lt;/a&gt;
  9. CMD + OPTION + [ : Fold code block
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL + SHIFT + [ )&lt;/p&gt;

&lt;p&gt;This command is especially useful when we want to focus on a specific area of the code and hence ignore some code blocks. This folds the block closest to the cursor. &lt;/p&gt;

&lt;p&gt;You can unfold the code block with &lt;code&gt;CMD + OPTION + ] (Windows/Linux: CTRL + SHIFT + ] )&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wjlZCUyI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h7l30kgftqjwmhhyo735.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wjlZCUyI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h7l30kgftqjwmhhyo735.gif" alt="CMD+OPTION+Bracket"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-option-updown-move-line-up-or-down"&gt;
  &lt;/a&gt;
  10. OPTION + UP/DOWN : Move line up or down
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: ALT + UP/DOWN)&lt;/p&gt;

&lt;p&gt;When you want to move a piece of code, for example, a variable declaration either up or down, you cut and paste it to the appropriate place but if the readjustment is for a few lines you can use this command to move the current line/selection up or down&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RwcwivLM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g2he2n3sv0u2fp03kwx5.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RwcwivLM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g2he2n3sv0u2fp03kwx5.gif" alt="ALT+UP"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-ctrl-raw-open-integrated-terminal"&gt;
  &lt;/a&gt;
  11. CTRL + ` : Open integrated terminal
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL+ `)&lt;/p&gt;

&lt;p&gt;One of the most amazing features of VSCode is that it supports an integrated terminal which you can use just like a normal terminal and to run code or perform other operations. This command helps you open the terminal when you need it&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uNZ_lWgy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iftjbtlqz8wec862078p.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uNZ_lWgy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iftjbtlqz8wec862078p.gif" alt="CTRL+BackTick"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-cmd-split-editor-view"&gt;
  &lt;/a&gt;
  12. CMD + \ : Split editor view
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL+)&lt;/p&gt;

&lt;p&gt;You can split your editor view to open multiple files together. &lt;/p&gt;

&lt;p&gt;This is especially helpful when you want to refer to content from a file while coding in another.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BL26CsYe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ztr68zghaqmih1siaal.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BL26CsYe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ztr68zghaqmih1siaal.gif" alt="CMD+backslash"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13-shift-option-f-format-document"&gt;
  &lt;/a&gt;
  13. SHIFT + OPTION + F : Format document
&lt;/h3&gt;

&lt;p&gt;(Windows: SHIFT+ALT+F, Linux: CTRL+SHIFT+I)&lt;/p&gt;

&lt;p&gt;Often we have extensions enabled or settings configured to format documents on save but sometimes we like to control when we want to format the document. This is where this command comes in. &lt;/p&gt;

&lt;p&gt;It allows us to format the current document according to the configured settings. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v9_91UCU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dwmne9b9dlprk36l3suc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v9_91UCU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dwmne9b9dlprk36l3suc.gif" alt="SHIFT+ALT+F"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#14-option-shift-up-down-duplicate-selection-up-or-down"&gt;
  &lt;/a&gt;
  14. OPTION + SHIFT + UP / DOWN : Duplicate selection up or down
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: SHIFT+ALT+UP/DOWN)&lt;/p&gt;

&lt;p&gt;Using this command you can duplicate the selected code either above or below the current code.&lt;/p&gt;

&lt;p&gt;I love to use this when some functions are almost identical except for some small changes which I make after duplicating the previous implementation&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hnqjZZA4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3j692xc8232oqm77b32c.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hnqjZZA4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3j692xc8232oqm77b32c.gif" alt="SHIFT+ALT+UP"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#15-cmd-b-toggle-sidebar"&gt;
  &lt;/a&gt;
  15. CMD + B: Toggle Sidebar
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL+B)&lt;/p&gt;

&lt;p&gt;You can use this command to toggle the sidebar to make more space for your file view as and when needed. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DwGHsLv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9iicj04v50q5joc2dx8o.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DwGHsLv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9iicj04v50q5joc2dx8o.gif" alt="CMD+B"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#cherry-on-the-cake"&gt;
  &lt;/a&gt;
  Cherry on the cake
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;code .&lt;/code&gt; :  Open VSCode from the terminal&lt;/p&gt;

&lt;p&gt;Although this isn't a keyboard shortcut, it is extremely useful when you are working with the terminal and want to open a directory in VSCode&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uugoiilV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4n4wdhaex44s2j6qjop.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uugoiilV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4n4wdhaex44s2j6qjop.gif" alt="CMD+D"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;P.S. If this isn't configured yet, you can do so from VSCode by open command palette with &lt;code&gt;CMD+SHIFT+P&lt;/code&gt; and type in &lt;code&gt;shell&lt;/code&gt; and then select &lt;code&gt;Shell Command: Install 'code' command in PATH&lt;/code&gt; from the options.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;In this article, I covered some of the common, uncommon, and useful shortcuts. &lt;/p&gt;

&lt;p&gt;There are other shortcuts too which are useful like &lt;code&gt;CMD+SHIFT+F&lt;/code&gt; for search, &lt;code&gt;CMD+SHIFT+P&lt;/code&gt; for showing command palette, &lt;code&gt;CMD+/&lt;/code&gt; for toggling line comment, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank you for reading&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you found this article helpful, do like and share this with your colleagues and friends. If you have any suggestions, please feel free to add them in the comments.&lt;/p&gt;

&lt;p&gt;I also share tips and tricks related to web development with Javascript and React on &lt;a href="https://twitter.com/ShubhamReacts"&gt;Twitter&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Come say hi üëã . Let us connect üòÅ&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>beginners</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
