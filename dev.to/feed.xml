<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>AI Project For Beginners</title>
      <author>Tousif</author>
      <pubDate>Tue, 27 Jul 2021 13:25:59 +0000</pubDate>
      <link>https://dev.to/msiahgsyaj/ai-project-for-beginners-55ij</link>
      <guid>https://dev.to/msiahgsyaj/ai-project-for-beginners-55ij</guid>
      <description>&lt;p&gt;&lt;span&gt;In this guide, we’ll be walking through 8 fun machine learning projects for beginners. Projects are some of the best investments of your time. You’ll enjoy learning, stay motivated, and make faster progress.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;You see, no amount of theory can replace hands-on practice. Textbooks and lessons can lull you into a false belief of mastery because the material is there in front of you. But once you try to apply it, you might find that it’s harder than it looks.&lt;/p&gt;
&lt;p&gt;Projects help you improve your applied ML skills quickly while giving you the chance to explore an interesting topic.&lt;/p&gt;
&lt;p&gt;Plus, you can add projects into your portfolio, making it easier to land a job, find cool career opportunities, and even negotiate a higher salary.&lt;/p&gt;
&lt;p&gt;Here are 8 fun machine learning projects for beginners. You can complete any of them in a single weekend, or expand them into longer projects if you enjoy them.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Please Visit Originally Published To read More&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;b&gt;Originally Published&lt;/b&gt;: &lt;/span&gt;&lt;b&gt;&lt;a href="https://bit.ly/3zEccM7"&gt;&lt;span&gt;AI project for beginners&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;





</description>
    </item>
    <item>
      <title>Apprendre Vue.js 3 - Jour 1 : concepts de base</title>
      <author> Eric Le Codeur</author>
      <pubDate>Tue, 27 Jul 2021 13:21:44 +0000</pubDate>
      <link>https://dev.to/ericlecodeur/apprendre-vue-js-3-jour-1-concepts-de-base-2jfn</link>
      <guid>https://dev.to/ericlecodeur/apprendre-vue-js-3-jour-1-concepts-de-base-2jfn</guid>
      <description>&lt;p&gt;Si vous désirez plus de contenu francophone comme celui-ci, cliquer &lt;strong&gt;Follow ou &lt;a href="https://twitter.com/EricLeCodeur"&gt;suivez-moi sur Twitter&lt;/a&gt;&lt;br&gt;
&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#s%C3%A9rie-darticle-sur-vuejs-3"&gt;
  &lt;/a&gt;
  Série d'article sur Vue.js 3
&lt;/h3&gt;

&lt;p&gt;Bonjour, cici est le premier article d'une série d'article qui couvrira le monde de Vue 3. Cet article ce veut un résumé de mes notes et du coup un excellent aide-mémoire (cheat sheet)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#quest-ce-que-vuejs-"&gt;
  &lt;/a&gt;
  Qu’est ce que Vue.js ?
&lt;/h3&gt;

&lt;p&gt;Vue.js est un framework progressif pour JavaScript utilisé pour créer des interfaces Web et des applications d'une page (SPA). Vue.js peut également être utilisé  pour le développement d'applications de bureau et mobiles avec les frameworks Ionic et Electron.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#pourquoi-vuejs"&gt;
  &lt;/a&gt;
  Pourquoi Vue.js
&lt;/h3&gt;

&lt;p&gt;Avant d’utiliser un framework il est important de comprendre dans quel contexte il s’avère le bon outils. &lt;/p&gt;

&lt;p&gt;Voici donc la liste des différentes raisons qui pourraient justifier l’utilisation d’un framework comme Vue.js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Organisation de votre code&lt;/li&gt;
&lt;li&gt;Efficacité/rapidité de développement&lt;/li&gt;
&lt;li&gt;Réutilisabilité du code&lt;/li&gt;
&lt;li&gt;Maintenance et future développement&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#extensions-vscode-pour-%C3%AAtre-productif-avec-vue"&gt;
  &lt;/a&gt;
  Extensions VSCode pour être productif avec Vue
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Vetur : Outils d'aide à coder comme la coloration syntaxique, le formating, intelliSense, Emmet, etc.&lt;/li&gt;
&lt;li&gt;Vue VsCode Snippets : Raccourci clavier pour ajouter des snippets dans votre code&lt;/li&gt;
&lt;li&gt;settings.json ajoute
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;emmet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includeLanguages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#comment-utiliserinstaller-vuejs"&gt;
  &lt;/a&gt;
  Comment Utiliser/installer Vue.js
&lt;/h3&gt;

&lt;p&gt;Vue est un framework dit progressif. Vous pouvez l’utiliser juste dans une petite partie de votre page web ou si vous préférez vous pouvez construire une application entière avec Vue.js.&lt;/p&gt;

&lt;p&gt;Voici ce qu'il faut faire pour utiliser Vue seulement dans une partie de votre page web :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ajouter un tag 'script' qui contient un lien vers la librairie Vue.js&lt;/li&gt;
&lt;li&gt;Ajouter un autre tag 'script' qui contient un lien vers votre fichier application Vue (app.js)&lt;/li&gt;
&lt;li&gt;Créer une div avec id="app" qui servira de conteneur au rendu de votre application Vue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Voici un exemple d'une page utilisant Vue.js&lt;/p&gt;

&lt;p&gt;(index.html)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Ma page Vue.js&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/vue@next"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"./app.js"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;boby&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(app.js)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// fonction qui permet d'initialiser Vue.js&lt;/span&gt;
&lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello Word Vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c1"&gt;// mount spécifie que l'application Vue s'affichera dans la div avec id="app"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#variables-reactive"&gt;
  &lt;/a&gt;
  Variables Reactive
&lt;/h3&gt;

&lt;p&gt;La fonction data() sert à créer des variables réactives qui seront utilisé dans votre application Vue. Chaque fois qu'une variable réactive est modifié, si elle est affiché ou utilisé dans votre page, Vue la mettra à jour immédiatement.&lt;/p&gt;

&lt;p&gt;Pour afficher une variable réactive ou une expression dans votre page vous devez utiliser les doubles crochets Vue remplacera le contenu de l'expression par sa valeur&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// variable&lt;/span&gt;
&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;

&lt;span class="c1"&gt;// expression&lt;/span&gt;
&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#les-directives-vuejs"&gt;
  &lt;/a&gt;
  Les directives Vue.js
&lt;/h3&gt;

&lt;p&gt;Les directives Vue.js sont des attributs html qui peuvent être inséré dans votre page afin de modifier le rendu de votre application Vue. &lt;/p&gt;

&lt;p&gt;Voici la liste des directives disponible:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;v-bind&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Permet d'assigner une expression à un attribut. Vue va remplacer l'expression par sa valeur &lt;/p&gt;

&lt;p&gt;(ex: image_url : "&lt;a href="http://www.exemple.com/car.jpg"&gt;http://www.exemple.com/car.jpg&lt;/a&gt;"&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;v&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;bind&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"image_url"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;// ou syntaxe raccourci&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"image_url"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;v-once&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Avec la directive v-once Vue va interpolé l'expression seulement une fois. L'expression sera donc ignoré pour tous les autres rafraichissement&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;v&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;once&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;v-html&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Permet d'afficher une expression avec des tags HTML.&lt;/p&gt;

&lt;p&gt;ex: title: "&lt;/p&gt;
&lt;h1&gt;Hello World&lt;/h1&gt;"&lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;v&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;html&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;v-model&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Permet de lier la valeur d'un champs de saisie avec une variable. Si vous modifié l'un ou l'autre Vue mettra a jour automatiquement l'autre. Du coup, la variable et le champ de saisie auront toujours la même valeur.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;v&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;model&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    Nom : &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;v-if, v-else-if et v-else&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Rend un élément visible ou non visible selon la valeur vrai ou faux de l'expression. Lorsque non visible l'élément n'est pas rendu dans le html&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;v&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;if&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"montant &amp;gt; 100"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    Livraison gratuite!
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;v&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;else&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;if&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"montant &amp;gt; 50"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    Livraison 9.95$
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;v&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;else&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    Livraison 19.95$
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;v-show&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Rend un élément visible ou non visible selon la valeur vrai ou faux de l'expression. Par contre, l'élément reste toujours présent dans le rendu. Lorsque non visible l'élément est rendu avec l'attribut CSS: display: none;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;v&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;show&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"isError"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;errorMessage&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;v-for&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Permet d'afficher une liste d'élément&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="na"&gt;v&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;for&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"item in items"&lt;/span&gt; &lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"item.id"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;À noter le mot clé "key" est nécessaire pour permettre à Vue d'identifier uniquement l'élément&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ref&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Permet à votre application Vue d'identifier un élément html et d'effectuer des actions sur cet élément.&lt;/p&gt;

&lt;p&gt;Identification avec la directif ref&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Manipulation à partir de votre code Vue en utilisant le mot clé spécial: $refs&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$refs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$refs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;active&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$refs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#vbind-sur-lattribut-class-et-les-style"&gt;
  &lt;/a&gt;
  v-bind sur l'attribut "class" et les "style"
&lt;/h3&gt;

&lt;p&gt;Il est possibile de faire un v-bind sur l'attribut class et style&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-2xl"&lt;/span&gt; &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"isAdmin ? 'text-red-500' : 'text-gray-500'"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   Hello World
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;À noter que l'attribut class est utilisé deux fois. Vue va regrouper ces deux attributs lors du rendu.&lt;/p&gt;

&lt;p&gt;Il est également possible d'utiliser un object pour envoyer du contenu dans notre attribut "class"&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"{ 'text-red-500': isAdmin, 'text-gray-500': !isAdmin }"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   Hello World
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;À noter la syntaxe de l'object { attribut : expression } si l'expression retourne vrai alors l'attribut sera ajouter à la class&lt;/p&gt;

&lt;p&gt;Une syntaxe similaire s'applique à l'attribut style&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;:style=&lt;/span&gt;&lt;span class="s"&gt;"{'margin-top': '10px', 'padding': '5px'"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   Hello World
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Enfin les attributs class et style peuvent être définit par une variable de type objet créé ailleurs dans votre application&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;titleClass: {
    'text-red-400': this.isAdmin,
    'text-gray-500': !this.isAdmin
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"titleClass"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   Hello World
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#l%C3%A9l%C3%A9ment"&gt;
  &lt;/a&gt;
  L'élément 
&lt;/h3&gt;

&lt;p&gt;Cet élément permet d'utiliser des directives de Vue sans créer un élément html.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;template&lt;/span&gt; &lt;span class="na"&gt;v&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;show&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"quantity === 0"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    La quantité doit être supérieur à zéro
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;template&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#les-%C3%A9v%C3%A9nements"&gt;
  &lt;/a&gt;
  Les Événements
&lt;/h3&gt;

&lt;p&gt;Vue permet de gérer les événements javascript comme click, input, change, etc. Pour ce faire vous devez utiliser la directive v-on: suivit du nom de l'évènement.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;v-on:click&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Permet d'exécuter du code sur le click d'un élément&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;v&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="na"&gt;click&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name = 'Mike'"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Afficher message&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;// ou syntaxe raccourci&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name = 'Mike'"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Afficher message&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;v-on:keydown&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Permet d'exécuter du code sur le appuie d'une touche (ex. enter)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;v&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="na"&gt;keydown&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="na"&gt;enter&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name = 'Mike'"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Afficher message&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;// ou syntaxe raccourci&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name = 'Mike'"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Afficher message&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Autre valeurs possibles pour v-on:keydown, keyup, keypress&lt;/p&gt;

&lt;p&gt;Autre valeur possibles pour .enter, tab, esc, up, down, left, right, delete&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;v-on:submit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Permet d'exécuter du code lors de la soumission d'un formulaire&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="na"&gt;v&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="na"&gt;submit&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="na"&gt;prevent&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name = 'Mike'"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;v&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;model&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt; 
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Sauvegarde&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;À noter, la présence de ".prevent" après la directive v-on:submit. Cette instruction va prévenir la soumission du formulaire au serveur.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#les-m%C3%A9thodes"&gt;
  &lt;/a&gt;
  Les méthodes
&lt;/h3&gt;

&lt;p&gt;Vue js permet de créer des méthodes afin d'y placer un block de code réutilisable dans votre applications. Voici la syntaxe pour créer un méthode:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mike Taylor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;resetName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;À noter le mot clé 'this' placé en avant de la variable name. Ce mot clé est obligatoire pour permettre de référencer une variable à l'intérieure de notre instance de Vue.&lt;/p&gt;

&lt;p&gt;Pour appeler une méthode vous pouvez le faire simplement en utilisant son nom.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;v&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;model&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt; 
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"resetName"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Effacer&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Une méthode peut également contenir des paramètres&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;resetName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newName&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;v&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;model&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt; 
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"resetName('John')"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Effacer&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Une méthode peut également envoyer l'object event&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;resetName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newName&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;v&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;model&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt; 
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"resetName('John', $event)"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Effacer&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;À noter le paramètre spécial $event va envoyer l'object event à notre méthode&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#les-m%C3%A9thodes-computed"&gt;
  &lt;/a&gt;
  Les méthodes "computed"
&lt;/h3&gt;

&lt;p&gt;Contrairement aux autres méthodes qui vont se ré-exécuté à chaque rendu de votre application, les méthodes "computed" vont être ré-exécuté seulement si les variables quelle contiennent sont modifié.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;recalculerTotal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;taxes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculerTotal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;taxes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Les méthodes "computed" peuvent ensuite être appelé dans notre page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click=&lt;/span&gt;&lt;span class="s"&gt;"recalculerTotal"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Re-Calculer&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;À noter qu'aucun paramètre ni parenthèse n'est utilisé&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#les-m%C3%A9thodes-watch"&gt;
  &lt;/a&gt;
  Les méthodes "watch"
&lt;/h3&gt;

&lt;p&gt;Ces méthodes vont "regarder" une variable et dès quelle change exécutera le code de la méthode.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;watch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newTitle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;oldTitle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Le titre &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;oldTitle&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; à changé pour &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;newTitle&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#les-m%C3%A9thodes-lifecycle-hook"&gt;
  &lt;/a&gt;
  Les méthodes "Lifecycle Hook"
&lt;/h3&gt;

&lt;p&gt;Chaque instance de vue traverse une série d’étapes d’initialisation au moment de sa création - par exemple, elle doit mettre en place l’observation des données, compiler le template, monter l’instance sur le DOM et mettre à jour le DOM quand les données changent. &lt;/p&gt;

&lt;p&gt;En cours de route, elle va aussi invoquer des &lt;strong&gt;&lt;em&gt;hooks&lt;/em&gt; de cycle de vie&lt;/strong&gt;, qui nous donnent l’opportunité d’exécuter une logique personnalisée à chaque étape.&lt;/p&gt;

&lt;p&gt;Par exemple, le hook "created" est appelé une fois l’instance créée&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;created&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mon instance est created&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Il existe plusieurs autres méthodes hook. En voici quelques unes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;beforeCreate&lt;/li&gt;
&lt;li&gt;created&lt;/li&gt;
&lt;li&gt;beforeMount&lt;/li&gt;
&lt;li&gt;mounted&lt;/li&gt;
&lt;li&gt;beforeUpdate&lt;/li&gt;
&lt;li&gt;updated&lt;/li&gt;
&lt;li&gt;beforeDestroy&lt;/li&gt;
&lt;li&gt;destroyed&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#les-components"&gt;
  &lt;/a&gt;
  Les "Components"
&lt;/h3&gt;

&lt;p&gt;Vue.js est un framework qui permet et encourage l'organisation de votre application en plusieurs "components"et sous "components"&lt;/p&gt;

&lt;p&gt;Chaque élément distinct de votre page devra avoir son propre component. Par exemple la barre de navigation pourrait être contenu dans un component NavBar et réutilisé sur plusieurs pages&lt;/p&gt;

&lt;p&gt;Voici la syntaxe pour créer des "components" et utiliser Vue seulement dans une petite partie de votre page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;messsage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Un message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;methodes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;deleteUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`User &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;userID&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; deleted`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)}&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;nav-bar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`
        &amp;lt;div&amp;gt;
            {{ title }} 
            ...navigation bar code...
        &amp;lt;/div&amp;gt;
    `&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mon application&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;sendDelete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;delete&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Les components crées peuvent ensuite être utilisé comme des tags HTML dans votre page&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;nav-bar&lt;/span&gt; &lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;"Mon application"&lt;/span&gt; &lt;span class="na"&gt;v-on:delete=&lt;/span&gt;&lt;span class="s"&gt;"deleteUser($event)"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;L'élément "template" contient le HTML qui sera rendu à l'endroit ou vous avez placé votre tag component dans votre page html&lt;/p&gt;

&lt;p&gt;L'objet "props" définit quel data est attendu lors du rendu du component&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mon application&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Props peut également être utilisé avec une syntaxe raccourci&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Vous pouvez par la suite assigner une valeur à ces props lors de l'utilisation du component&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;nav&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;bar&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mon application&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Enfin, le mot-clé $emit permet d'émettre un événement. Cet évènement pourra ensuite être capté par votre application avec un v-on:nom-event&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;sendDelete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;delete&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;nav&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;bar&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mon app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;deleteUser&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#cr%C3%A9er-un-application-enti%C3%A8re-avec-vue-cli"&gt;
  &lt;/a&gt;
  Créer un application entière avec Vue CLI
&lt;/h3&gt;

&lt;p&gt;L'outils pour créer un projet Vue.js est Vue CLI. Vous devrez l'installé&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; @vue/cli
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#vue-create"&gt;
  &lt;/a&gt;
  Vue create
&lt;/h3&gt;

&lt;p&gt;Permet de créer un projet Vue.js avec plein de truc déjà pré-configuré pour vous.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;vue create my-app-name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#npm-run-serve"&gt;
  &lt;/a&gt;
  npm run serve
&lt;/h3&gt;

&lt;p&gt;Une fois l'application créer vous pouvez vous positionner dans le dossier et lancer le serveur de développement&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;my-app-name
npm run serve
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#vue-add"&gt;
  &lt;/a&gt;
  Vue add
&lt;/h3&gt;

&lt;p&gt;Il est possible d'ajouter des plugin/librairie à votre projet Vue en utilisant le raccourci vue add. Voici 3 exemples:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;vue add vue-router
vue add vuex
vue add tailwind
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#point-de-d%C3%A9part"&gt;
  &lt;/a&gt;
  Point de départ
&lt;/h3&gt;

&lt;p&gt;Vue CLI va créer plusieurs dossiers et fichiers. Le point de départ est public/index.html et "src/main.js"&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createApp&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Le component qui sert de point d'entré est donc App.vue&lt;/p&gt;

&lt;p&gt;Avec une application Vue, aucun code HTML ne sera écrit dans le fichier index.html. Votre code HTML sera écrit dans la section  de chacun de vos components&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vite"&gt;
  &lt;/a&gt;
  Vite
&lt;/h3&gt;

&lt;p&gt;Il est également possible de créer un projet avec Vite. C'est un outils plus récent et plus efficace&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init @vitejs/app my-app-name &lt;span class="nt"&gt;--template&lt;/span&gt; vue
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Cette commande va créer exactement un projet Vue.js avec les mêmes pré-configuration que le Vue-CLI&lt;/p&gt;

&lt;p&gt;Avec un projet Vite, la commande pour lancer le serveur est&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install
&lt;/span&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#les-singlefile-component"&gt;
  &lt;/a&gt;
  Les Single-File Component
&lt;/h3&gt;

&lt;p&gt;Chaque component Vue est définit dans son propre fichier .vue avec la syntaxe suivante&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&amp;lt;template&amp;gt;
    &amp;lt;img &lt;span class="nv"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Vue logo"&lt;/span&gt; &lt;span class="nv"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"./assets/logo.png"&lt;/span&gt; /&amp;gt;
    &amp;lt;HelloWorld &lt;span class="nv"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Hello Vue 3 + Vite"&lt;/span&gt; /&amp;gt;
    &lt;span class="o"&gt;{{&lt;/span&gt; message &lt;span class="o"&gt;}}&lt;/span&gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
    import HelloWorld from &lt;span class="s1"&gt;'./components/HelloWorld.vue'&lt;/span&gt;

    &lt;span class="nb"&gt;export &lt;/span&gt;default &lt;span class="o"&gt;{&lt;/span&gt;
        components: &lt;span class="o"&gt;{&lt;/span&gt;
            HelloWorld
        &lt;span class="o"&gt;}&lt;/span&gt;,
        data&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
             &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                message: &lt;span class="s1"&gt;'Hello World'&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;,    
    &lt;span class="o"&gt;}&lt;/span&gt;
&amp;lt;/script&amp;gt;

&amp;lt;style scope &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;#app {&lt;/span&gt;
      font-family: Avenir, Helvetica, Arial, sans-serif&lt;span class="p"&gt;;&lt;/span&gt;
      text-align: center&lt;span class="p"&gt;;&lt;/span&gt;
      color: &lt;span class="c"&gt;#2c3e50;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;À noter qu'avec l'utilisation des single-file-component, le code HTML du component est saisie dans la section template. Il n'est pas saisie dans la div #app de votre index.html&lt;/p&gt;

&lt;p&gt;Comme démontré dans le dernier exemple, Il est possible d'utiliser un autre component à l'intérieur de votre component actuel.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;HelloWorld&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello Vue 3 + Vite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pour cela il faut utiliser import:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;HelloWorld&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/HelloWorld.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#emplacement-des-fichiers-components"&gt;
  &lt;/a&gt;
  Emplacement des fichiers components
&lt;/h3&gt;

&lt;p&gt;Les Single-File-Component sont sauvegardés dans un dossier src/components ou src/pages selon si le component agit à titre de page (ex. About.vue) ou à titre de component ré-utilisable (ex. NavBar.vue)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#les-slots"&gt;
  &lt;/a&gt;
  Les Slots
&lt;/h1&gt;

&lt;p&gt;Les slots permettent d'ajouter du contenu à un component&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;custom&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    Je peux ajouter du contenu...
  Titre: &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;custom&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;À noter que le rendu de 'title' se fera dans le component parent. Le même principe s'appliquera pour le css. Donc le contenu de la slot doit être définit/accessible dans le component parent &lt;/p&gt;

&lt;p&gt;À l'interne le custom-button ressemble à quelque chose comme ceci:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;template&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;slot&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;slot&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;template&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;La balise slot va être remplacé par le contenu de 'custom-button'&lt;/p&gt;

&lt;p&gt;Il est possible de définir une valeur par défaut pour la slot&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;template&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;slot&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Si rien n'est spécifier je vais m'afficher&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;slot&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;template&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;À noter que la valeur par défaut est définit dans le component enfant, donc devra utiliser les variables ou le css définit dans le component enfant.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#les-slots-multiples"&gt;
  &lt;/a&gt;
  Les slots multiples
&lt;/h3&gt;

&lt;p&gt;Permet d'ajouter du contenu associé seulement à un slot en particulier&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;custom-button&amp;gt;&lt;/span&gt;
    Je peux ajouter du contenu...
  &lt;span class="nt"&gt;&amp;lt;template&lt;/span&gt; &lt;span class="na"&gt;#title&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    {{ title }}
  &lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/custom-button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;'#title' indentifie la template au slot title. La syntax v-slot:title p eut également être utilisé&lt;/p&gt;

&lt;p&gt;À l'interne le custom-button ressemble à quelque chose comme ceci:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;template&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;slot&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;slot&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;slot&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;slot&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;template&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;À noter que le slot principal est toujours disponible &lt;/p&gt;

&lt;p&gt;(les balise ici sont optionnelles) mais il est possible d'ajouter un second slot avec un nom&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#slot-props"&gt;
  &lt;/a&gt;
  Slot Props
&lt;/h3&gt;

&lt;p&gt;Les slot peuvent avoir des props&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;template&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;slot&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt; &lt;span class="na"&gt;satus&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"info"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;slot&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;template&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Les Props peuvent ensuite être utilisé&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;custom-button&amp;gt;&lt;/span&gt;
    Je peux ajouter du contenu...
  &lt;span class="nt"&gt;&amp;lt;template&lt;/span&gt; &lt;span class="na"&gt;#title&lt;/span&gt;&lt;span class="err"&gt;="&lt;/span&gt;&lt;span class="na"&gt;titleProps&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    {{ title }}
    {{ titleProps.status }}
  &lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/custom-button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Il est possible de définir des Props pour les slot principal en utilisant '#defaut'&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;slot&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"ajout"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/slot&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;slot&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt; &lt;span class="na"&gt;status=&lt;/span&gt;&lt;span class="s"&gt;"info"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/slot&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;custom-button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;template&lt;/span&gt; &lt;span class="na"&gt;#default&lt;/span&gt;&lt;span class="err"&gt;="&lt;/span&gt;&lt;span class="na"&gt;defaultProps&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       Je peux ajouter du contenu...
     {{ defaultProps.type }}
  &lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;template&lt;/span&gt; &lt;span class="na"&gt;#title&lt;/span&gt;&lt;span class="err"&gt;="&lt;/span&gt;&lt;span class="na"&gt;titleProps&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    {{ title }}
    {{ titleProps.status }}
  &lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/custom-button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;À noter que si il n'y a pas de named slot. Il est possible d'utiliser les Props du default avec cette syntaxe&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;custom-button&lt;/span&gt; &lt;span class="na"&gt;#default&lt;/span&gt;&lt;span class="err"&gt;="&lt;/span&gt;&lt;span class="na"&gt;defaultProps&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       Je peux ajouter du contenu...
     {{ defaultProps.type }}
&lt;span class="nt"&gt;&amp;lt;/custom-button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Merci d'avoir lu cet article. Si vous avez aimez ou si vous avez des commentaires n'hésitez pas à les enter ici bas.&lt;/p&gt;

</description>
      <category>french</category>
      <category>javascript</category>
      <category>vue</category>
      <category>beginners</category>
    </item>
    <item>
      <title>10 DevOps Myths - BUSTED!</title>
      <author>Davide 'CoderDave' Benvegnù</author>
      <pubDate>Tue, 27 Jul 2021 13:19:46 +0000</pubDate>
      <link>https://dev.to/n3wt0n/10-devops-myths-busted-30pa</link>
      <guid>https://dev.to/n3wt0n/10-devops-myths-busted-30pa</guid>
      <description>&lt;p&gt;There are many DevOps myths circulating in the developer community. This is no surprise, given the popularity of the DevOps concept in recent years.&lt;/p&gt;

&lt;p&gt;Today I'm gonna debunk those myths once and for all so you can really understand what DevOps is about and how to do it correctly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h3&gt;

&lt;p&gt;As you probably know, the DevOps methodology can have &lt;strong&gt;significant positive effects&lt;/strong&gt; for organizations when properly implemented, as I've discussed in &lt;a href="https://youtu.be/OxDtADXeyv8"&gt;this video over here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But to do it properly, it is necessary to recognize what DevOps really represents. And that’s why I wanted to make this article/video.&lt;/p&gt;

&lt;p&gt;Let's jump right into the first myth.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video"&gt;
  &lt;/a&gt;
  Video
&lt;/h3&gt;

&lt;p&gt;As usual, if you are a &lt;strong&gt;visual learner&lt;/strong&gt;, or simply prefer to watch and listen instead of reading, here you have &lt;strong&gt;the video with the whole explanation&lt;/strong&gt;, which is  &lt;strong&gt;&lt;em&gt;more complete&lt;/em&gt;&lt;/strong&gt; than this post.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/OsnWo4j4zIo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/OsnWo4j4zIo"&gt;Link to the video: https://youtu.be/OsnWo4j4zIo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you rather prefer reading, well... let's just continue :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#myth-1-devops-is-the-same-as-cicd"&gt;
  &lt;/a&gt;
  Myth 1: DevOps is the same as CI/CD
&lt;/h3&gt;

&lt;p&gt;Or to say it differently, "If I do CI/CD I do DevOps".&lt;/p&gt;

&lt;p&gt;This is one of the &lt;strong&gt;biggest misconceptions&lt;/strong&gt; about DevOps, and unfortunately there are a lot of people thinking that DevOps is the same thing as CI/CD. &lt;/p&gt;

&lt;p&gt;The truth is that while continuous integration and delivery are some key components, DevOps adoption focuses also on the &lt;strong&gt;culture&lt;/strong&gt; and responsibility in a &lt;strong&gt;team&lt;/strong&gt;. It emphasizes the need for everyone on the team to take part in each other’s tasks. This improves &lt;strong&gt;collaboration and communication&lt;/strong&gt; in the team.&lt;/p&gt;

&lt;p&gt;On the other hand, CI/CD enables this culture with software and tools that emphasize automation. You can see them as &lt;strong&gt;a mean to an end&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#myth-2-devops-is-all-about-tools"&gt;
  &lt;/a&gt;
  Myth 2: DevOps is all about tools
&lt;/h3&gt;

&lt;p&gt;Conversations about DevOps are often very focused around which tools a company is using. They then turn into philosophical battles about what are the best tools. Instead, we should be communicating about the bigger picture, the &lt;strong&gt;business value DevOps brings&lt;/strong&gt; to your company.&lt;/p&gt;

&lt;p&gt;DevOps means &lt;strong&gt;focusing on culture, mindset&lt;/strong&gt;, and how individuals work together. Tools are important, but only after addressing people and processes. In fact, you should be choosing &lt;strong&gt;the right tools for your processes&lt;/strong&gt;, and not changing your processes to adapt them to the tools.&lt;/p&gt;

&lt;p&gt;In general, many studies have in fact shown that the main factors in successfully implementing DevOps are the right culture, the right processes, AND the right tools. Tools should always come last.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#myth-3-i-can-use-the-same-processes-for-all-my-projects"&gt;
  &lt;/a&gt;
  Myth 3: I can use the same processes for all my projects
&lt;/h3&gt;

&lt;p&gt;While this might be true in some contexts, it is usually not...&lt;/p&gt;

&lt;p&gt;You can and &lt;strong&gt;should reuse some processes&lt;/strong&gt;, especially around people interactions and collaboration, but the more &lt;strong&gt;"technical processes" may change&lt;/strong&gt; between different projects or even may need to be different.&lt;/p&gt;

&lt;p&gt;For example, let's talk about environment promotion. You may have projects that only need two to three environments. For example, development, test, and production environments with frequent deployments. Another project may require more environments because it has multiple stages in the software delivery cycle. Or have more or less frequent deployments.&lt;/p&gt;

&lt;p&gt;Another example could be around approvals. Maybe a project needs to go through different approval at various stages, so your processes should account for that. But it is also possible that another project in your organization doesn't require the same approvals, or perhaps needs no approval at all.&lt;/p&gt;

&lt;p&gt;Different projects, different requirements and needs, different processes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#myth-4-i-can-do-in-my-organization-what-microsoftamazongooglenetflix-do"&gt;
  &lt;/a&gt;
  Myth 4: I can do in my organization what Microsoft/Amazon/Google/Netflix do
&lt;/h3&gt;

&lt;p&gt;Many world-famous companies have adopted DevOps for its benefits and its flexibility. Looking at the successes of these companies, we of course appreciate their achievements. We do this without realizing their context and the steps they have taken to be successful.&lt;/p&gt;

&lt;p&gt;One thing is for sure: these organizations chose and built the tools and processes that worked best for them at the time. This does not necessarily mean that we have to follow these organizations. Plus, &lt;strong&gt;what they've done won't magically work for our business either&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We need to learn from them and find new ways to innovate and grow. Explore and find the right processes and tools that define our problem space. What will &lt;strong&gt;bring success to our business&lt;/strong&gt; in particular? This is what DevOps is.&lt;/p&gt;

&lt;p&gt;As I've mentioned in the previous myth, different projects may require different processes and tools. And it is of course even more evident between different companies or organizations.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#myth-5-i-can-create-a-devops-team-and-im-done-implementing-devops"&gt;
  &lt;/a&gt;
  Myth 5:  I can create a DevOps team and I'm done implementing DevOps
&lt;/h3&gt;

&lt;p&gt;This is something I see happening many times and given the amount of replies I had when I posted this on Twitter means that I'm not the only one. (Btw &lt;a href="https://twitter.com/davidebenvegnu"&gt;follow me on Twitter&lt;/a&gt; if you aren't yet).&lt;/p&gt;

&lt;p&gt;Back to the myth, what I see happening all the time, especially in big organization, is that they create a new team, they hire a bunch of DevOps engineers, &lt;strong&gt;they call it "DevOps team" and they think their done&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The problem there is that if you're not willing to change your processes and your culture, creating a DevOps team won't help at all. DevOps is about collaboration, every person and team in the organization should "do DevOps". &lt;strong&gt;Barriers and silos need to be removed&lt;/strong&gt; for this to work. Otherwise, you are just creating more silos...&lt;/p&gt;

&lt;p&gt;There is an exception to this, and it is when the newly created DevOps team is in fact in charge to spread the DevOps principles throughout the organization. Basically, a DevOps Center of Excellence. But this anyway is not the end, &lt;strong&gt;it is just the starting point&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#myth-6-if-i-do-devops-i-dont-need-it-operations-anymore"&gt;
  &lt;/a&gt;
  Myth 6: If I do DevOps, I don't need IT Operations anymore
&lt;/h3&gt;

&lt;p&gt;If you think about it, you already know the answer. Of course &lt;strong&gt;you still need to perform tasks usually associated to IT Operations&lt;/strong&gt;! And the Operations team still has its own place.&lt;/p&gt;

&lt;p&gt;But &lt;strong&gt;with DevOps the responsibilities shift&lt;/strong&gt;. In a "&lt;em&gt;properly adopted&lt;/em&gt;" DevOps model, Software Engineers should also take care of the deployment. Maybe they are not the ones "pressing the deploy button", but they are the ones who should &lt;strong&gt;understand&lt;/strong&gt; how the application is &lt;strong&gt;operated in production&lt;/strong&gt;, and the ones who have to create &lt;strong&gt;deployment procedures and scripts&lt;/strong&gt;. Who better than them would know how to do it?&lt;/p&gt;

&lt;p&gt;Also, in many DevOps-mature organizations, Developers and Software engineers share the on-call duties with Operations for solving live site incidents.&lt;/p&gt;

&lt;p&gt;In this scenario, &lt;strong&gt;IT Operations duties shift&lt;/strong&gt; more towards the care and maintenance of the &lt;strong&gt;live site&lt;/strong&gt;: things like scaling, optimizations, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#myth-7-automation-removes-all-bottlenecks"&gt;
  &lt;/a&gt;
  Myth 7: Automation removes all bottlenecks
&lt;/h3&gt;

&lt;p&gt;Automation is one of the biggest advantages of DevOps. But &lt;strong&gt;this is not a quick fix&lt;/strong&gt; that will solve all of your problems.&lt;/p&gt;

&lt;p&gt;A continuous delivery process allows teams to quickly deploy new features, and also quickly get the feedback they need. This of course means that you have to guarantee the quality of the product. In addition, you should take care of its proper operation and performance when scaling, for example. You also need to ensure smooth production deployments.&lt;/p&gt;

&lt;p&gt;Automating your CI / CD pipelines helps eliminate bottlenecks between code validation and deployment. But this is only one step in the software delivery process. Unless the &lt;strong&gt;developers and testers work together as a single team&lt;/strong&gt;, you won't be able to solve all of your issues. It is likely that you will only move the bottlenecks somewhere else.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#myth-8-devops-requires-agile"&gt;
  &lt;/a&gt;
  Myth 8: DevOps requires Agile
&lt;/h3&gt;

&lt;p&gt;The truth is that DevOps and Agile can be either complementary or competitive, or even not related at all.&lt;/p&gt;

&lt;p&gt;The notions of working with small, incremental changes is common to both Agile and DevOps. However, organizations that embrace Agile are focused on &lt;strong&gt;optimization of the development end of the pipeline&lt;/strong&gt;, and may struggle with DevOps, which emphasizes engineering of end-to-end process optimizations.&lt;/p&gt;

&lt;p&gt;I've also seen organization being fairly &lt;strong&gt;successful at DevOps while not doing Agile&lt;/strong&gt; at all, working with Waterfall methodologies. It is quite rare, but not impossible.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#myth-9-devops-applies-only-to-web-applications"&gt;
  &lt;/a&gt;
  Myth 9: DevOps applies only to web applications
&lt;/h3&gt;

&lt;p&gt;This is simply not true. &lt;strong&gt;DevOps can be applied to any kind of software development&lt;/strong&gt;: Databases, Backends, Desktop software, Embedded software, IoT, and much more.&lt;/p&gt;

&lt;p&gt;In fact, the same principles can be applied and are applied also outside of the software world, like for example &lt;strong&gt;hardware development&lt;/strong&gt;. Remember that the legacy of DevOps for how we know it today comes from factory floors optimization.&lt;/p&gt;

&lt;p&gt;The examples of DevOps you can find around are mostly based on Web Applications or platforms because Web Development is one of the &lt;strong&gt;most common&lt;/strong&gt; types of software development, and also because it is where you can see the effects of DevOps more quickly. But that doesn't mean that DevOps and its principles cannot be used in other kind of projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#myth-10-i-have-to-apply-devops-to-any-software-product-service-or-application"&gt;
  &lt;/a&gt;
  Myth 10: I have to apply DevOps to any software product, service or application
&lt;/h3&gt;

&lt;p&gt;The fact that you can do DevOps basically everywhere, doesn't actually mean that you have to.&lt;/p&gt;

&lt;p&gt;DevOps brings benefits in many circumstances, but &lt;strong&gt;in some cases you may not want to or be able to afford the changes&lt;/strong&gt; in the people, process, and technology needed for DevOps.&lt;/p&gt;

&lt;p&gt;For example, applications that rarely change may not justify the cost of DevOps changes.&lt;/p&gt;

&lt;p&gt;In general, the guideline here is: &lt;strong&gt;assess your processes&lt;/strong&gt; and culture and see if it makes sense to change. Usually the answer is yes, but there may be instances in which the cost or the effort outweigh the benefits. If you have &lt;strong&gt;ROI&lt;/strong&gt; from adopting DevOps (and that usually comes in the form of higher velocity, higher quality, and reduced time-to-market) then go for it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h3&gt;

&lt;p&gt;Alright, &lt;strong&gt;&lt;em&gt;10 myths busted&lt;/em&gt;&lt;/strong&gt;. I think it is enough for today.&lt;/p&gt;

&lt;p&gt;Let me know in the comment section below what you think about what I've covered in this video and about my "answers" to those myths. Let me also know if you have any questions around this topic and DevOps in general.&lt;/p&gt;

&lt;p&gt;You may also want to &lt;a href="https://youtu.be/OxDtADXeyv8"&gt;watch this video&lt;/a&gt;, where I talk about the Benefits of adopting DevOps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Like, share and follow me&lt;/strong&gt; 🚀 for more content:&lt;/p&gt;

&lt;p&gt;📽 &lt;a href="https://www.youtube.com/CoderDave"&gt;YouTube&lt;/a&gt;&lt;br&gt;
☕ &lt;a href="https://buymeacoffee.com/CoderDave"&gt;Buy me a coffee&lt;/a&gt;&lt;br&gt;
💖 &lt;a href="https://patreon.com/CoderDave"&gt;Patreon&lt;/a&gt;&lt;br&gt;
🌐 &lt;a href="https://coderdave.io"&gt;CoderDave.io Website&lt;/a&gt;&lt;br&gt;
👕 &lt;a href="https://geni.us/cdmerch"&gt;Merch&lt;/a&gt;&lt;br&gt;
👦🏻 &lt;a href="https://www.facebook.com/CoderDaveYT"&gt;Facebook page&lt;/a&gt;&lt;br&gt;
🐱‍💻 &lt;a href="https://github.com/n3wt0n"&gt;GitHub&lt;/a&gt;&lt;br&gt;
👲🏻 &lt;a href="https://www.twitter.com/davide.benvegnu"&gt;Twitter&lt;/a&gt;&lt;br&gt;
👴🏻 &lt;a href="https://www.linkedin.com/in/davidebenvegnu/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
🔉 &lt;a href="https://geni.us/cdpodcast"&gt;Podcast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/CoderDave"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/OsnWo4j4zIo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>devops</category>
      <category>devsecops</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>3 fundamental monitoring methods essential for every DevOps engineer 🚀💥</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Tue, 27 Jul 2021 13:06:48 +0000</pubDate>
      <link>https://dev.to/ankit01oss/3-fundamental-monitoring-methods-essential-for-every-devops-engineer-4a5i</link>
      <guid>https://dev.to/ankit01oss/3-fundamental-monitoring-methods-essential-for-every-devops-engineer-4a5i</guid>
      <description>&lt;h3&gt;
  &lt;a href="#the-use-method-the-red-method-the-four-golden-signals"&gt;
  &lt;/a&gt;
  The USE Method | The RED method | The Four Golden Signals
&lt;/h3&gt;

&lt;p&gt;Running applications at scale is no mean task. Applications are more global now than ever. And with that scale comes the complexity of managing numerous systems, services &amp;amp; third-party integrations.&lt;/p&gt;

&lt;p&gt;Modern-day distributed systems are fraught with challenges and pitfalls at each stage of their lifecycle: development, testing, deployment, and running in production.&lt;/p&gt;

&lt;p&gt;The most critical stage is when your application is out there in the hands of its users. Both your infrastructure and application services need to be continually monitored for issues that might affect end-user experience.&lt;/p&gt;

&lt;p&gt;But modern systems can emit thousands or millions of metrics, and modern monitoring tools can collect it all. But that's never efficient.&lt;/p&gt;

&lt;p&gt;In this article, I want to talk about some of the methodologies used for monitoring applications. These methodologies can direct your monitoring strategies and serve as excellent starting points to get more visibility into your deployed applications.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;These methods give you a solid starting point to determine what you should monitor. 🔍&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;a href="https://bit.ly/3BmRwdd"&gt;SigNoz&lt;/a&gt; - an open-source APM &amp;amp; observability tool. An alternative to DataDog.&lt;/p&gt;

&lt;p&gt;Check out our GitHub repo👇&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/SigNoz"&gt;
        SigNoz
      &lt;/a&gt; / &lt;a href="https://github.com/SigNoz/signoz"&gt;
        signoz
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      SigNoz helps developers monitor their applications &amp;amp; troubleshoot problems, an open-source alternative to DataDog, NewRelic, etc. 🔥 🖥.   👉  Open source Application Performance Monitoring (APM) &amp;amp; Observability tool
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667"&gt;&lt;img src="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667" alt="SigNoz-logo" width="240"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;p&gt;Monitor your applications and troubleshoot problems in your deployed applications, an open-source alternative to DataDog, New Relic, etc.&lt;/p&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;img alt="License" src="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;img alt="Downloads" src="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;img alt="GitHub issues" src="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;/a&gt; 
    &lt;a href="https://twitter.com/intent/tweet?text=Monitor%20your%20applications%20and%20troubleshoot%20problems%20with%20SigNoz,%20an%20open-source%20alternative%20to%20DataDog,%20NewRelic.&amp;amp;url=https://signoz.io/&amp;amp;via=SigNozHQ&amp;amp;hashtags=opensource,signoz,observability" rel="nofollow"&gt; 
        &lt;img alt="tweet" src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c"&gt; &lt;/a&gt; 
&lt;/p&gt;

&lt;h3&gt;

  &lt;a href="https://signoz.io/docs" rel="nofollow"&gt;&lt;b&gt;Documentation&lt;/b&gt;&lt;/a&gt; •
  &lt;a href="https://github.com/SigNoz/signoz/blob/main/README.zh-cn.md"&gt;&lt;b&gt;ReadMe in Chinese&lt;/b&gt;&lt;/a&gt; •
  &lt;a href="https://bit.ly/signoz-slack" rel="nofollow"&gt;&lt;b&gt;Slack Community&lt;/b&gt;&lt;/a&gt; •
  &lt;a href="https://twitter.com/SigNozHq" rel="nofollow"&gt;&lt;b&gt;Twitter&lt;/b&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;SigNoz helps developers monitor applications and troubleshoot problems in their deployed applications. SigNoz uses distributed tracing to gain visibility into your software stack.&lt;/p&gt;

&lt;p&gt;👉 You can see metrics like p99 latency, error rates for your services, external API calls and individual end points.&lt;/p&gt;

&lt;p&gt;👉 You can find the root cause of the problem by going to the exact traces which are causing the problem and see detailed flamegraphs of individual request traces.&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/bc8a12f92d8313d86b619bd96c558b458b30f24cdb847b42e4db383aa83238a3/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f7369676e6f7a5f6865726f5f6769746875622e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/bc8a12f92d8313d86b619bd96c558b458b30f24cdb847b42e4db383aa83238a3/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f7369676e6f7a5f6865726f5f6769746875622e706e67" alt="SigNoz Feature"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d86b90eea3d56848776f64d2e8188152844713a3079c158954a3f4a49f2fb120/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f436f6e747269627574696e672e737667"&gt;&lt;img src="https://camo.githubusercontent.com/d86b90eea3d56848776f64d2e8188152844713a3079c158954a3f4a49f2fb120/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f436f6e747269627574696e672e737667" width="50px"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
Join our Slack community&lt;/h2&gt;
&lt;p&gt;Come say Hi to us on &lt;a href="https://join.slack.com/t/signoz-community/shared_invite/zt-lrjknbbp-J_mI13rlw8pGF4EWBnorJA" rel="nofollow"&gt;Slack&lt;/a&gt; 👋&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/61f3487967fd24ab9d66eddfc48ab2b822ef4f1c300ac8db16bf27f70f9f94af/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f46656174757265732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/61f3487967fd24ab9d66eddfc48ab2b822ef4f1c300ac8db16bf27f70f9f94af/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f46656174757265732e737667" width="50px"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/li&gt;
&lt;li&gt;Slowest endpoints in your application&lt;/li&gt;
&lt;li&gt;See exact request trace to figure out issues in downstream services, slow DB queries, call to 3rd party services like payment…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/SigNoz/signoz"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-use-method"&gt;
  &lt;/a&gt;
  The USE method
&lt;/h2&gt;

&lt;p&gt;USE is an acronym for Utilization, Saturation, and Errors. It was devised by Brenden Gregg, who is quite known for his work in systems performance analysis. This method can be used to solve common performance issues quickly without overlooking important areas.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Like an emergency checklist in a flight manual, it is intended to be simple, straightforward, complete, and fast."&lt;br&gt;
-Brenden Gregg&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The USE method can be summarized as:&lt;br&gt;
For every resource, check utilization, saturation, and errors.&lt;/p&gt;

&lt;p&gt;The metrics are usually expressed in the following terms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;utilization: the average time that the resource was busy servicing work.&lt;/li&gt;
&lt;li&gt;saturation: the degree to which the resource has extra work which it can't service, often queued.&lt;/li&gt;
&lt;li&gt;errors: the count of error events.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An example of USE-based metric list for linux operating systems👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y_LG3QRh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ac6k8zb6x8xyfrap40p6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y_LG3QRh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ac6k8zb6x8xyfrap40p6.png" alt="Alt Text"&gt;&lt;/a&gt;USE-based metric list for Linux operating systems&lt;a href="https://www.brendangregg.com/USEmethod/use-linux.html"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-red-method"&gt;
  &lt;/a&gt;
  The RED method
&lt;/h2&gt;

&lt;p&gt;RED stands for three metrics that you should measure for every microservice in your architecture. The metrics are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Request rates - the number of requests per second your services are serving.&lt;/li&gt;
&lt;li&gt;Errors - the number of failed requests per second.&lt;/li&gt;
&lt;li&gt;Duration - distributions of the amount of time each request takes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The RED metrics focus on measuring things that end-users care about when using your services.&lt;/p&gt;

&lt;p&gt;RED metrics can be easily tracked with APM &amp;amp; observability tools like &lt;a href="https://bit.ly/3BmRwdd"&gt;SigNoz&lt;/a&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vKCpP-v8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zghyabb1hkugzi3jrtku.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vKCpP-v8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zghyabb1hkugzi3jrtku.png" alt="Alt Text"&gt;&lt;/a&gt;RED metrics as shown in an APM tool, &lt;a href="https://bit.ly/3BmRwdd"&gt;(SigNoz)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Request rates&lt;/strong&gt; give you an idea about the bandwidth of a service being used. It can help you avoid failure by monitoring peak traffic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Errors&lt;/strong&gt; have a direct impact on end-user experience, and hence errors rates are necessary to be monitored. Incorrect, incomplete, or unexpected user requests can be defined as errors. Identifying the exact cause of errors can be a real pain point for tech teams, often requiring deep-dive into application code. This is where performance monitoring apps like SigNoz can help.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Duration&lt;/strong&gt; in microservices context is usually found out using a method called distributed tracing. In a nutshell, distributed tracing is a method through which a user request is tracked across different services, measuring the time taken by events through each microservice.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RUVi8Lgc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2gbcz26asoy56xhd8vbv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RUVi8Lgc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2gbcz26asoy56xhd8vbv.png" alt="Alt Text"&gt;&lt;/a&gt;Using Flamegraphs on &lt;a href="https://bit.ly/3BmRwdd"&gt;(SigNoz)&lt;/a&gt; dashboard, you can drill down into events taking more time.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-four-golden-signals-by-google"&gt;
  &lt;/a&gt;
  The Four Golden Signals by Google
&lt;/h2&gt;

&lt;p&gt;The four golden signals by Google are closely related to the RED metrics. In fact, RED metrics are an off-shoot of the golden signals.&lt;/p&gt;

&lt;p&gt;Google's site reliability engineers defined the four golden monitoring signals as latency, traffic, errors, and saturation.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#latency"&gt;
  &lt;/a&gt;
  Latency
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Slow&lt;/em&gt; is the new &lt;em&gt;down&lt;/em&gt;, they say. Latency is defined as the time it takes to service a request. Google also cautions to distinguish between the latency of successful requests and the latency of failed requests. Failed requests can be quick, but if included in latency calculations, they can be misleading.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#traffic"&gt;
  &lt;/a&gt;
  Traffic
&lt;/h3&gt;

&lt;p&gt;Traffic is a measure of the amount of activity in your application. It can be measured in any high-level system specific metric. For example, in web applications, traffic is usually measured by HTTP requests per second.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#errors"&gt;
  &lt;/a&gt;
  Errors
&lt;/h3&gt;

&lt;p&gt;Errors, as discussed earlier, are the rate of requests that fail. This can be instances of explicit errors like HTTP 500s or implicit ones like HTTP 200s with wrong content delivered.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#saturation"&gt;
  &lt;/a&gt;
  Saturation
&lt;/h3&gt;

&lt;p&gt;As the name suggests, saturation is how 'full' your system is. Saturation of a system can be challenging to measure at times. It is directly related to the utilization metrics of a system. Sometimes, failures can occur even when the system is not 100% utilized. Hence, deciding on a utilization target is important.&lt;/p&gt;

&lt;p&gt;Measuring saturation is also system-specific. For example, for memory-constrained systems, memory usage is used. For databases and streaming applications, disk I/O rates can be used.&lt;/p&gt;



&lt;p&gt;With these methods, you can set out to build monitoring practices in your organization. Choosing the right tool to monitor your application is critical in this regard.&lt;/p&gt;

&lt;p&gt;If you're interested, check out &lt;a href="https://bit.ly/3BmRwdd"&gt;SigNoz&lt;/a&gt; - a full-stack open-source APM &amp;amp; observability tool. You can self-host it to get started with monitoring your RED metrics. SigNoz uses OpenTelemetry for instrumentation which supports all popular languages like Java, Python, Golang, Nodejs, etc.&lt;/p&gt;

&lt;p&gt;Check out our GitHub repo 👇&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/SigNoz"&gt;
        SigNoz
      &lt;/a&gt; / &lt;a href="https://github.com/SigNoz/signoz"&gt;
        signoz
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      SigNoz helps developers monitor their applications &amp;amp; troubleshoot problems, an open-source alternative to DataDog, NewRelic, etc. 🔥 🖥.   👉  Open source Application Performance Monitoring (APM) &amp;amp; Observability tool
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667"&gt;&lt;img src="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667" alt="SigNoz-logo" width="240"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;p&gt;Monitor your applications and troubleshoot problems in your deployed applications, an open-source alternative to DataDog, New Relic, etc.&lt;/p&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;img alt="License" src="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;img alt="Downloads" src="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;img alt="GitHub issues" src="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;/a&gt; 
    &lt;a href="https://twitter.com/intent/tweet?text=Monitor%20your%20applications%20and%20troubleshoot%20problems%20with%20SigNoz,%20an%20open-source%20alternative%20to%20DataDog,%20NewRelic.&amp;amp;url=https://signoz.io/&amp;amp;via=SigNozHQ&amp;amp;hashtags=opensource,signoz,observability" rel="nofollow"&gt; 
        &lt;img alt="tweet" src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c"&gt; &lt;/a&gt; 
&lt;/p&gt;

&lt;h3&gt;

  &lt;a href="https://signoz.io/docs" rel="nofollow"&gt;&lt;b&gt;Documentation&lt;/b&gt;&lt;/a&gt; •
  &lt;a href="https://github.com/SigNoz/signoz/blob/main/README.zh-cn.md"&gt;&lt;b&gt;ReadMe in Chinese&lt;/b&gt;&lt;/a&gt; •
  &lt;a href="https://bit.ly/signoz-slack" rel="nofollow"&gt;&lt;b&gt;Slack Community&lt;/b&gt;&lt;/a&gt; •
  &lt;a href="https://twitter.com/SigNozHq" rel="nofollow"&gt;&lt;b&gt;Twitter&lt;/b&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;SigNoz helps developers monitor applications and troubleshoot problems in their deployed applications. SigNoz uses distributed tracing to gain visibility into your software stack.&lt;/p&gt;

&lt;p&gt;👉 You can see metrics like p99 latency, error rates for your services, external API calls and individual end points.&lt;/p&gt;

&lt;p&gt;👉 You can find the root cause of the problem by going to the exact traces which are causing the problem and see detailed flamegraphs of individual request traces.&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/bc8a12f92d8313d86b619bd96c558b458b30f24cdb847b42e4db383aa83238a3/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f7369676e6f7a5f6865726f5f6769746875622e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/bc8a12f92d8313d86b619bd96c558b458b30f24cdb847b42e4db383aa83238a3/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f7369676e6f7a5f6865726f5f6769746875622e706e67" alt="SigNoz Feature"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d86b90eea3d56848776f64d2e8188152844713a3079c158954a3f4a49f2fb120/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f436f6e747269627574696e672e737667"&gt;&lt;img src="https://camo.githubusercontent.com/d86b90eea3d56848776f64d2e8188152844713a3079c158954a3f4a49f2fb120/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f436f6e747269627574696e672e737667" width="50px"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
Join our Slack community&lt;/h2&gt;

&lt;p&gt;Come say Hi to us on &lt;a href="https://join.slack.com/t/signoz-community/shared_invite/zt-lrjknbbp-J_mI13rlw8pGF4EWBnorJA" rel="nofollow"&gt;Slack&lt;/a&gt; 👋&lt;/p&gt;



&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/61f3487967fd24ab9d66eddfc48ab2b822ef4f1c300ac8db16bf27f70f9f94af/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f46656174757265732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/61f3487967fd24ab9d66eddfc48ab2b822ef4f1c300ac8db16bf27f70f9f94af/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f46656174757265732e737667" width="50px"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
Features:&lt;/h2&gt;


&lt;ul&gt;
&lt;li&gt;Application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/li&gt;
&lt;li&gt;Slowest endpoints in your application&lt;/li&gt;
&lt;li&gt;See exact request trace to figure out issues in downstream services, slow DB queries, call to 3rd party services like payment…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/SigNoz/signoz"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


</description>
      <category>devops</category>
      <category>docker</category>
      <category>aws</category>
      <category>azure</category>
    </item>
    <item>
      <title>Tornado : ASYNC Framework for Python</title>
      <author>Bek Brace</author>
      <pubDate>Tue, 27 Jul 2021 12:30:32 +0000</pubDate>
      <link>https://dev.to/bekbrace/tornado-async-framework-for-python-2c5g</link>
      <guid>https://dev.to/bekbrace/tornado-async-framework-for-python-2c5g</guid>
      <description>&lt;p&gt;Tornado is a Python open source framework, but also an asynchronous networking library, and it was originally developed for a company called FriendFeed, which was acquired by Facebook recently in 2009. To understand Tornado we need to know what is it good for.&lt;/p&gt;

&lt;p&gt;Make sure to check out my last video on tornado Framework &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-gJ21qzpieA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Tornado is ideal for building apps asking for high performance and several thousand concurrent users; it can handle 10K connections at once, in addition to that it's non-blocking network IO. Asynchronous programming was introduced to python since python 3.5 when the asyncio library was introduced.&lt;/p&gt;

&lt;p&gt;Before anything, you need to know that Asynchronous programming, more specifically async syntax makes you code faster to execute.&lt;/p&gt;

&lt;p&gt;Async is a way of Concurrent ProgrammingAsync is one way of doing concurrent programming, which means doing many things at once or achieving multiple tasks at once.&lt;/p&gt;

&lt;p&gt;How does Python achieve multiple tasks at once ?&lt;/p&gt;

&lt;p&gt;1 OS makes multi-sharing and multi-tasking happen: One way is to run multiple terminal instances and run your server, and all of them will work concurrently in the same time; and your operating system takes care of sharing your CPU resources among those terminal instances.&lt;/p&gt;

&lt;p&gt;2 Another way of achieving multiple tasks at once is by using threads. A thread is a line of execution for several instructions which means that they all share access to common resources, and here the operating system intervens to share your CPU with these threads&lt;/p&gt;

&lt;p&gt;3 The last way is asynchronous programming which what Tornado does, even though the opperating system will not have any role here, yet we'll be able to achieve multiple things at once with asynchronous programming&lt;/p&gt;

&lt;p&gt;Drop your comment or contact me on: &lt;a href="mailto:info@bekbrace.com"&gt;info@bekbrace.com&lt;/a&gt;&lt;br&gt;
Github page: &lt;a href="https://github.com/BekBrace%E2%80%8B"&gt;https://github.com/BekBrace​&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for reading and watching &lt;br&gt;
Until next time - Peace out, &lt;br&gt;
Bek&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>javascript</category>
      <category>devops</category>
    </item>
    <item>
      <title>Luos new feature: manage Pipe type and command.</title>
      <author>Emanuel Allely</author>
      <pubDate>Tue, 27 Jul 2021 12:22:39 +0000</pubDate>
      <link>https://dev.to/emanuel_allely/luos-new-feature-manage-pipe-type-and-command-15cg</link>
      <guid>https://dev.to/emanuel_allely/luos-new-feature-manage-pipe-type-and-command-15cg</guid>
      <description>&lt;h3&gt;
  &lt;a href="#new-feature-in-the-130-manage-pipe-type-and-command"&gt;
  &lt;/a&gt;
  🆕 New feature in the 1.3.0: Manage Pipe type and command
&lt;/h3&gt;

&lt;p&gt;The Gate in a &lt;a href="https://www.luos.io"&gt;Luos&lt;/a&gt; environment is something tremendously important and used to check or control a Luos &lt;strong&gt;network&lt;/strong&gt;, and (teaser...) it will be even more important for the next revision! 😉&lt;/p&gt;

&lt;p&gt;Basically, its task is to share the entire machine capabilities to the outer world by translating Luos things into a standard format easy to use with standard software languages such as &lt;strong&gt;Python&lt;/strong&gt;, &lt;strong&gt;Javascript&lt;/strong&gt;, &lt;strong&gt;Ruby&lt;/strong&gt;, &lt;strong&gt;C++&lt;/strong&gt;, etc.&lt;/p&gt;

&lt;p&gt;On the previous version of the Gate example, you needed to modify the code to adapt it to your project's specificities, and it was an arduous task. Then we decided to make it simple and portable for you.&lt;/p&gt;

&lt;p&gt;We split it into 2 parts, the main Gate App and a Driver: &lt;/p&gt;

&lt;p&gt;Now the Gate is an App. Meaning it doesn't have any code related to hardware. It's a basic ANSI C that you can compile directly for any &lt;strong&gt;MCU&lt;/strong&gt; or &lt;strong&gt;CPU&lt;/strong&gt; without any additional configuration! This way, you can easily add it to your setup.&lt;/p&gt;

&lt;p&gt;We also added a build option allowing you to select the output format managed by the Gate or create your own easily. For now, we have 2 &lt;strong&gt;JSON&lt;/strong&gt; options, the one we use on the previous version (cJSON), and a new one (TinyJSON) that doesn't make any dynamic allocation.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Pipe&lt;/strong&gt; is the &lt;strong&gt;driver&lt;/strong&gt; part: This Driver allows sending or receiving data from the outer world and converting those data to the Luos side. A Pipe can be &lt;strong&gt;USB&lt;/strong&gt;, &lt;strong&gt;serial&lt;/strong&gt;, &lt;strong&gt;Wifi&lt;/strong&gt;, &lt;strong&gt;Bluetooth&lt;/strong&gt;, an &lt;strong&gt;SD card&lt;/strong&gt;, or anything allowing to send and receive information to/from another machine.&lt;/p&gt;

&lt;p&gt;This new type of driver can be used for different purposes, and the Gate App needs it to exchange information and share its output format.&lt;/p&gt;

&lt;p&gt;As a Gate user, you will only have to adapt this Pipe driver to your needs. The Gate will deal with it.&lt;/p&gt;

&lt;p&gt;More details about this can be found in the &lt;a href="https://docs.luos.io/pages/embedded/tools/gate.html"&gt;Gate&lt;/a&gt; section of our documentation.&lt;/p&gt;

</description>
      <category>embedded</category>
      <category>opensource</category>
      <category>release</category>
      <category>luos</category>
    </item>
    <item>
      <title>It’s hard to get job offers at tech companies right out of school. What's going on?</title>
      <author>Walt Schlender</author>
      <pubDate>Tue, 27 Jul 2021 12:19:13 +0000</pubDate>
      <link>https://dev.to/schlende/it-s-hard-to-get-job-offers-at-tech-companies-right-out-of-school-what-s-going-on-23jf</link>
      <guid>https://dev.to/schlende/it-s-hard-to-get-job-offers-at-tech-companies-right-out-of-school-what-s-going-on-23jf</guid>
      <description>&lt;p&gt;I used to work in engineering and data science at a tech recruiting company. &lt;/p&gt;

&lt;p&gt;We had a hard time placing new grads. &lt;/p&gt;

&lt;p&gt;In this article I want to describe what tech hiring is like. If you’re just starting your career I hope this article can help you come up with a strategy to stand out from the competition and get the job you want.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--If367ZhS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bvmjyl0esi3kp7kghzln.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--If367ZhS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bvmjyl0esi3kp7kghzln.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#its-hard-for-new-grads-to-get-their-first-job"&gt;
  &lt;/a&gt;
  It's hard for new grads to get their first job
&lt;/h2&gt;

&lt;p&gt;According to data I've seen, candidates who get a lot of job offers have a mix of &lt;strong&gt;experience&lt;/strong&gt; (preferably from a famous company or school), &lt;strong&gt;the right skillset&lt;/strong&gt; and &lt;strong&gt;the right salary expectations&lt;/strong&gt;. In that order.&lt;/p&gt;

&lt;p&gt;Experience is particularly important. &lt;/p&gt;

&lt;p&gt;The data I've seen suggests that there's a 3 year career-start dead zone -- you may be an amazing engineer but during those first years you'll have to knock on a lot of doors to get your interviews.&lt;/p&gt;

&lt;p&gt;In an industry "short on talent" where companies happily pay head-hunting firms $20,000 for introductions, why do new engineers struggle to even set up brief meetings?&lt;/p&gt;

&lt;p&gt;A lot of new engineers are talented, passionate and filled with potential. They're less expensive and fairly abundant.&lt;/p&gt;

&lt;p&gt;You'd think companies would be taking advantage of this talent pool but many of them aren't.&lt;/p&gt;

&lt;p&gt;What's going on?&lt;/p&gt;

&lt;p&gt;I believe that companies are being careful. Making ANY hire is expensive. A bad hire can be catastrophic. &lt;/p&gt;

&lt;p&gt;Let me describe what the interview process is like from the employer side.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-does-interviewing-work-inside-companies"&gt;
  &lt;/a&gt;
  How does interviewing work inside companies?
&lt;/h3&gt;

&lt;p&gt;In most companies finding candidates is the job of the HR / recruiting department or external recruiters.&lt;/p&gt;

&lt;p&gt;Companies have limited resources so out of the 12 applications they get for a position they'll only likely screen a couple.&lt;/p&gt;

&lt;p&gt;A basic code screen requires ~2 hours from an engineer whose salary after taxes and benefits runs about $100 / hr. Time spent interviewing is time NOT spent coding. When you factor in time for context switching and getting lunch an interview takes about half of an engineers' day.&lt;/p&gt;

&lt;p&gt;Recruiters usually don't have engineering backgrounds themselves but they're the ones who take the first look at your resume. They tend to work by keying in on keywords. &lt;/p&gt;

&lt;p&gt;Because of this a resume focused on 'Rust', or 'Clojure' skills will get weeded out. While an engineer looking at this resume would see "rockstar coder with an interest in functional languages", a recruiter only sees "not a node engineer".&lt;/p&gt;

&lt;p&gt;A company usually spends one to two full days interviewing a candidate.&lt;/p&gt;

&lt;p&gt;The process is elaborate because the stakes are high. While rejecting a candidate is painful, hiring the wrong candidate is disastrous.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BRU165Cw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mngwf22thxo8o0tx8ym1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BRU165Cw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mngwf22thxo8o0tx8ym1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hiring-the-wrong-person-is-really-bad"&gt;
  &lt;/a&gt;
  Hiring the wrong person is really bad
&lt;/h2&gt;

&lt;p&gt;The hiring process itself is expensive but the real costs come after the hire.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#closing-costs"&gt;
  &lt;/a&gt;
  Closing costs
&lt;/h3&gt;

&lt;p&gt;The company spends a pile of money before the new hire even walks in the door.&lt;/p&gt;

&lt;p&gt;If a recruiting firm sourced the candidate the company has to pay a finders fee - typically ~20000$ (15% - 20% of a first years’ salary). &lt;/p&gt;

&lt;p&gt;Then there are all the costs associated with hiring. Payroll, IT, etc...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rampup"&gt;
  &lt;/a&gt;
  Ramp-up
&lt;/h3&gt;

&lt;p&gt;Like most jobs, it takes a while for a new employee to become valuable. With engineers I've it takes about 3 months.&lt;/p&gt;

&lt;p&gt;During this time the engineer needs a lot of hand holding.&lt;/p&gt;

&lt;p&gt;An experienced engineer will need help with the quirks of a company's system, but a new engineer will need help with system setup and basics.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-quality"&gt;
  &lt;/a&gt;
  Code quality
&lt;/h3&gt;

&lt;p&gt;A newer engineer also requires more babysitting.&lt;/p&gt;

&lt;p&gt;They may not have mastered architectural patterns. They may not have experience with testing and code reviews.&lt;/p&gt;

&lt;p&gt;The company is exposing itself to a lot of risk if code ships with bugs or the codebase gets crufty.&lt;/p&gt;

&lt;p&gt;Older engineers write bad code too but if they worked for Apple the odds are that they have fewer holes in their coding skills -- or at least that's how the thinking goes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nobody-likes-firing-people-so-hiring-mistakes-dont-get-fixed"&gt;
  &lt;/a&gt;
  Nobody likes firing people + so hiring mistakes don't get fixed
&lt;/h3&gt;

&lt;p&gt;It's easy to hire someone it's really really hard to fire them.&lt;/p&gt;

&lt;p&gt;There have been a few times in my career where I worked with someone who obviously should have gotten fired. &lt;/p&gt;

&lt;p&gt;One person was showing up to work drunk and trying to write code. Another really took advantage of the 'unlimited vacation' policy by basically never showing up to work.&lt;/p&gt;

&lt;p&gt;In each case it took months for the management to finally admit that a mistake had been made.&lt;/p&gt;

&lt;p&gt;Firing someone after investing team time and resources sucks.&lt;/p&gt;

&lt;p&gt;If a person has a strong track record the likelihood you'll have to undo your hiring mistake drops.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#newer-engineers-are-up-against-a-lot-but-we-all-got-started-somehow"&gt;
  &lt;/a&gt;
  Newer engineers are up against a lot... but we all got started somehow
&lt;/h2&gt;

&lt;p&gt;I don't want to leave you with the idea that getting work in tech is impossible. Lots of people have broken into the industry even without CS-degrees.&lt;/p&gt;

&lt;p&gt;I know this because this was actually my path.&lt;/p&gt;

&lt;p&gt;When I graduated I had a lot of coding skills but my degree was in economics.&lt;/p&gt;

&lt;p&gt;My own story involved building up a portfolio by doing small-time contracts for clients with small budgets. I then used that portfolio to get bigger more prestigious clients.&lt;/p&gt;

&lt;p&gt;Over the years I have learned that getting hired takes strategy based on a realistic assessment of your strengths and weaknesses.&lt;/p&gt;

&lt;p&gt;Not all 'employers' are the same.&lt;/p&gt;

&lt;p&gt;Some companies are in high demand. Everybody wants to work with them so they're inundated with resumes from rockstars. Other companies need people but don't know how to find them. They'll hire the first good engineer who walks through their door.&lt;/p&gt;

&lt;p&gt;Little changes in a resume (like emphasizing your Node skills over your older .Net skills when applying to newer companies, or changing the market you're searching for a job in) are the difference between 20 job offers in a week and crickets.&lt;/p&gt;

&lt;p&gt;A little bit of thought about strategy can really help.&lt;/p&gt;

&lt;p&gt;I thought it would be useful to end this article with some strategy recommendations. &lt;/p&gt;

&lt;p&gt;I hope some of these approaches are helpful to you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#strategies-for-getting-in-the-door-when-you-have-no-work-history"&gt;
  &lt;/a&gt;
  Strategies for getting in the door when you have no work history
&lt;/h2&gt;

&lt;p&gt;To begin with, set realistic expectations - expect the hunt can be hard.&lt;/p&gt;

&lt;p&gt;If you're sending out lots of resumes and not hearing back know that this happens to lots of candidates -- it's fairly normal so don't lose hope. All it takes is one company to say yes to hiring to get things rolling. &lt;/p&gt;

&lt;p&gt;Sending out resumes can work but in my experience it's better to see if you can bypass HR by talking directly to an engineering manager.&lt;/p&gt;

&lt;p&gt;The best way I know of to do this is to attend tech-focused meetups and events. Search for ruby or node or whatever tech meetups and go to the events. After the event employers get up and see if anyone is looking for work. Talk about some of the stuff you've done or things you're passionate about and you'll likely get invited to come in for an interview.&lt;/p&gt;

&lt;p&gt;Another strategy you can use is to work with an employer in a contract (often contract-to-hire) role. &lt;/p&gt;

&lt;p&gt;As we talked about earlier, the big things that are keeping the employer from working with you are cost and risk. If an employer doesn't have to actually commit to hiring someone full time they're way more likely to take a chance on someone with a bit less experience.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ngEk_6aY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u9cg7nwp7x77rx8ja1xj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ngEk_6aY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u9cg7nwp7x77rx8ja1xj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can find contract work at events, on contract-centric work sites like Upwork. Smaller companies in particular like to work with contractors. This is how I got started and I highly recommend this approach.&lt;/p&gt;

&lt;p&gt;Sometimes you really DO want a role in a hard-to-get-into (popular) big tech company and when that’s the case you need to make your resume stand out. &lt;/p&gt;

&lt;p&gt;As someone who can't rely on work history to get in the door, you’ll need something else to make your resume stand out. &lt;/p&gt;

&lt;p&gt;Some things that you can do ~&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#niche-get-specific-about-who-you-want-to-work-for-and-bring-more-to-the-table-than-just-programming-skills"&gt;
  &lt;/a&gt;
  Niche ~ get specific about who you want to work for and bring more to the table than just programming skills.
&lt;/h4&gt;

&lt;p&gt;Most candidates are telling employers, ‘you need Java? I have Java’ but the employer really actually needs ‘Java’ to solve educational or fashion or recruiting problems…&lt;/p&gt;

&lt;p&gt;If you can bring a passion for the space along with the skills you have a much greater chance of getting an interview.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#demonstrate-work-the-employer-is-looking-for-a-portfolio-with-relevant-projects-is-pretty-awesome-here"&gt;
  &lt;/a&gt;
  Demonstrate work the employer is looking for ~ a portfolio with relevant projects is pretty awesome here.
&lt;/h4&gt;

&lt;p&gt;One hack I've seen done is to give yourself a homework assignment. Research a company you'd like to work for and put together a mini project (as if they had hired you). Send the project to them as part of your application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GMAjrQbt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pio7h5lhmcvi6cpkuna3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GMAjrQbt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pio7h5lhmcvi6cpkuna3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#demonstrate-high-quality-engineering-skills"&gt;
  &lt;/a&gt;
  Demonstrate high quality engineering skills.
&lt;/h4&gt;

&lt;p&gt;Most new grads are missing professional engineering experience. They don't know about testing of version control workflows. They have nothing a potential employer can look at. &lt;/p&gt;

&lt;p&gt;The solution? Work on open source projects, go to hack-a-thons, get involved in the engineering community.&lt;/p&gt;

&lt;p&gt;All of these things can help you get interviews... once you get interviews all you have to do is pass them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tinyurl.com/ccarticle01"&gt;If you're interested in learning about passing coding interviews I put together a 50 minute Skillshare course about coding interview techniques. It's free for dev.to readers until August 30th. Check it out.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iL-NGani--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ceyx0gpp62vrf25h8jau.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iL-NGani--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ceyx0gpp62vrf25h8jau.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope this article has been useful for you and that you have some new ideas for strategies you can use in your job hunt. Good luck and may you find exactly the work you’re looking for.&lt;/p&gt;

</description>
      <category>jobs</category>
      <category>interviewing</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Don't get burned by email</title>
      <author>Ondrej Musil</author>
      <pubDate>Tue, 27 Jul 2021 12:13:38 +0000</pubDate>
      <link>https://dev.to/superface/don-t-get-burned-by-email-6c4</link>
      <guid>https://dev.to/superface/don-t-get-burned-by-email-6c4</guid>
      <description>&lt;p&gt;When we noticed &lt;a href="https://twitter.com/garybernhardt/status/1390461076974735363"&gt;Gary Bernhardt's tweet&lt;/a&gt; about the major outage of &lt;a href="https://status.sendgrid.com/incidents/bj70jkn55zv8"&gt;SendGrid services&lt;/a&gt; we realized, we could get burned as well and looked at how &lt;a href="https://superface.ai/"&gt;Superface&lt;/a&gt; could help.&lt;/p&gt;

&lt;p&gt;This tutorial will help you to send transactional emails with the maximum reliability using &lt;a href="https://www.notion.so/Don-t-get-burned-by-email-7d7b68c7c6b047ffb0e2dca78d142deb"&gt;Superface OneSDK&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;By the end of the tutorial, you’ll have an email integration that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;automatically fails over and recovers between multiple email providers using circuit breaker pattern&lt;/li&gt;
&lt;li&gt;gives you clear insights into your email usage across all providers&lt;/li&gt;
&lt;li&gt;notifies you when things go wrong and actively suggests improvements&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#providers-and-setup"&gt;
  &lt;/a&gt;
  Providers and setup
&lt;/h2&gt;

&lt;p&gt;The simplest step you can do to improve your application is to use two providers with failover.&lt;/p&gt;

&lt;p&gt;For the purpose of this tutorial, we will use &lt;a href="http://example.com/"&gt;example.com&lt;/a&gt; as a sender domain and &lt;a href="//mailto:hello@example.com"&gt;hello@example.com&lt;/a&gt; as a sender email address. We’ll configure SendGrid to be the primary and Postmark the secondary email provider. Feel free to use your own domains &amp;amp; providers of choice (although currently only Sendgrid, Postmark, Mailgun &amp;amp; Mailchimp are supported).&lt;/p&gt;

&lt;p&gt;You need to do two things, to be able to send emails:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Verify domain or configure single email address&lt;/li&gt;
&lt;li&gt;Get API Key to access provider APIs&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;SendGrid&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://docs.sendgrid.com/ui/account-and-settings/how-to-set-up-domain-authentication"&gt;How to verify domain&lt;br&gt;
How to get&lt;/a&gt; &lt;a href="https://docs.sendgrid.com/ui/account-and-settings/api-keys"&gt;API Key&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Postmark&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://postmarkapp.com/support/article/1046-how-do-i-verify-a-domain"&gt;How to verify domain&lt;/a&gt;&lt;br&gt;
&lt;a href="https://postmarkapp.com/videos/an-introduction-to-postmark-servers"&gt;How to get API Key&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mailchimp&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://mailchimp.com/developer/transactional/docs/authentication-delivery/#authentication"&gt;How to verify domain&lt;/a&gt;&lt;br&gt;
&lt;a href="https://mailchimp.com/developer/transactional/guides/quick-start/#generate-your-api-key"&gt;How to get API Key&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mailgun&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://documentation.mailgun.com/en/latest/user_manual.html#verifying-your-domain"&gt;How to verify domain&lt;/a&gt;&lt;br&gt;
&lt;a href="https://documentation.mailgun.com/en/latest/api-intro.html#base-url"&gt;How to get API Key&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The last step is to &lt;a href="https://superface.ai/create-account?invitation=resilient_email"&gt;Create Superface account&lt;/a&gt;. It will give you access to details about &lt;a href="http://superface.ai/communication/send-email"&gt;send-email&lt;/a&gt; capability, and to your project monitoring, which we will use later.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#use-onesdk-in-your-application"&gt;
  &lt;/a&gt;
  Use OneSDK in your application
&lt;/h2&gt;

&lt;p&gt;You can use any of your NodeJS projects or simply clone our &lt;a href="https://github.com/superfaceai/resilient-email-tutorial"&gt;tutorial repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you use our tutorial repository, get started with installing dependencies and start the application,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Install dependencies&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;span class="c"&gt;# Start application&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then open &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;, you should see&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lb425ZOg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iashx6zm3ntm2yxq5tle.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lb425ZOg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iashx6zm3ntm2yxq5tle.png" alt="Running App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-sendemail-capability-and-configure-providers"&gt;
  &lt;/a&gt;
  Add send-email capability and configure providers
&lt;/h3&gt;

&lt;p&gt;The easiest way to add use cases is to use &lt;a href="https://www.notion.so/Don-t-get-burned-by-email-7d7b68c7c6b047ffb0e2dca78d142deb"&gt;Superface CLI&lt;/a&gt;. Its interactive install will guide you through the setup, and will automatically install OneSDK that does the hard work of integrating for you. &lt;/p&gt;

&lt;p&gt;The goal is to have two providers (SendGrid and Postmark) with failover and configure &lt;code&gt;SendEmail&lt;/code&gt; usecase to use &lt;a href="https://en.wikipedia.org/wiki/Circuit_breaker_design_pattern"&gt;circuit-breaker&lt;/a&gt; as failover policy.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npx @superfaceai/cli &lt;span class="nb"&gt;install &lt;/span&gt;communication/send-email &lt;span class="nt"&gt;-i&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After finishing the interactive install, you should see a new folder called &lt;code&gt;superface&lt;/code&gt;. It is a place where all configuration and metadata for OneSDK lives. Also, &lt;code&gt;package.json&lt;/code&gt; and &lt;code&gt;package-lock.json&lt;/code&gt; will be updated because CLI added &lt;code&gt;@superfaceai/one-sdk&lt;/code&gt; as a new dependency.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#send-email"&gt;
  &lt;/a&gt;
  Send email
&lt;/h3&gt;

&lt;p&gt;Now it is time to send emails. It should be implemented in &lt;code&gt;routes/index.js&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;First you need to import &lt;code&gt;SuperfaceClient&lt;/code&gt; from &lt;code&gt;@superfaceai/one-sdk&lt;/code&gt; package&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;SuperfaceClient&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@superfaceai/one-sdk&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The email will be sent when POST request is received &lt;em&gt;(Look for TODO: Implement Send Hello email comment).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Replace the comment and next line with following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create OneSDK instance&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SuperfaceClient&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// Load installed profile&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;profile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getProfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;communication/send-email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Use the profile to SendEmail&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUseCase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SendEmail&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;perform&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello@example.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Superface Resilient Email Tutorial&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`Hello &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; from Superface Tutorial`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Get and show data&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Send Email Failed: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Uups..&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#try-it"&gt;
  &lt;/a&gt;
  Try it
&lt;/h2&gt;

&lt;p&gt;Now it is time to run it and try if it works.&lt;/p&gt;

&lt;p&gt;Start application with&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;, fill in your email address, and hit &lt;code&gt;Send Hello&lt;/code&gt;, you should get the message-id as result and receive the email.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0y9FZwdW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mom0psz7xyxq2spu87pe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0y9FZwdW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mom0psz7xyxq2spu87pe.png" alt="Send with SendGrid"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing-failover"&gt;
  &lt;/a&gt;
  Testing failover
&lt;/h3&gt;

&lt;p&gt;Now let's check how failover works.&lt;/p&gt;

&lt;p&gt;You don't want to wait for the next outage, to see if failover works. To emulate the unavailability of SendGrid API, you can point &lt;a href="http://api.sendgrid.com"&gt;api.sendgrid.com&lt;/a&gt; to &lt;a href="http://localhost"&gt;localhost&lt;/a&gt; in &lt;code&gt;/etc/hosts&lt;/code&gt;. If you configured a different primary provider, use its respective API base URL.&lt;/p&gt;

&lt;p&gt;For unix systems open &lt;code&gt;/etc/hosts&lt;/code&gt; with sudo&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;nano /etc/hosts
Password:
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and enter this line at the end&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;127.0.0.1 api.sendgrid.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;result should be similar to&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;##
# Host Database
#
# localhost is used to configure the loopback interface
# when the system is booting.  Do not change this entry.
##
127.0.0.1   localhost
255.255.255.255 broadcasthost
::1             localhost

127.0.0.1 api.sendgrid.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now go back to running the application and send a hello to yourself again&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6LhWSG2w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/98qhddi8jr43i083s8yz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6LhWSG2w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/98qhddi8jr43i083s8yz.png" alt="Send with Postmark"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It looks the same as before, but there is a small change. The message-id has a different structure. And it is because the email was sent with Postmark instead of unavailable SendGrid.&lt;/p&gt;

&lt;p&gt;You can also try how OneSDK will recover, by removing &lt;a href="http://api.sendgrid.com"&gt;api.sendgrid.com&lt;/a&gt; entry added to &lt;code&gt;/etc/hosts&lt;/code&gt;. It must be at least 30 seconds from failover to secondary, to get tried primary provider again.et&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dashboard"&gt;
  &lt;/a&gt;
  Dashboard
&lt;/h2&gt;

&lt;p&gt;If you configured OneSDK with SDK Token, you should also receive an email notification about failover. It contains information such as when the failover happened and the reason.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6CN6sCuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/69b309s63zxc7kpyqjqq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6CN6sCuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/69b309s63zxc7kpyqjqq.png" alt="Failover email notification"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you check the &lt;a href="https://superface.ai/dashboard"&gt;dashboard&lt;/a&gt;, you can see what profiles and providers your application is using, the number of performs, and when the last failover happened.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1AKE2wQJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2m318kpuv7ogwkit1d4c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1AKE2wQJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2m318kpuv7ogwkit1d4c.png" alt="Project insights"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Emails are important in applications we build, without them users are not able to sign in, or worse customers will not receive bought train tickets. Here is how you can make it super resilient with the least effort. &lt;/p&gt;

&lt;p&gt;The best part? You can get this level of resiliency and ease of use for any use case out there! Check out &lt;a href="https://superface.ai"&gt;Superface&lt;/a&gt; and &lt;a href="https://superface.ai/how-it-works"&gt;how it works&lt;/a&gt;.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Introduction  to Data Structures and Algorithms With Python.</title>
      <author>Mwenda Harun Mbaabu</author>
      <pubDate>Tue, 27 Jul 2021 12:06:23 +0000</pubDate>
      <link>https://dev.to/grayhat/introduction-to-data-structures-and-algorithms-with-python-4ih1</link>
      <guid>https://dev.to/grayhat/introduction-to-data-structures-and-algorithms-with-python-4ih1</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LX569D-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j03t2nbck1fi876sb5p9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LX569D-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j03t2nbck1fi876sb5p9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Data structures and algorithms in Python are two of the most fundamental concepts in computer science. They are indispensable tools for any programmer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Data structures&lt;/strong&gt; in Python deal with the organization and storage of data in the memory while a program is processing it. On the other hand, &lt;strong&gt;Python algorithms&lt;/strong&gt; refer to the detailed set of instructions that helps in the processing of data for a specific purpose.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BWp8ubs2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/81uqaonjqubtfgz9uhlk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BWp8ubs2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/81uqaonjqubtfgz9uhlk.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Data structure organises the storage in computers so that we can easily access and change data. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stacks&lt;/strong&gt; and &lt;strong&gt;Queues&lt;/strong&gt; are the earliest data structure defined in computer science. A simple Python list can act as a queue and stack, also we can implement stack and queue using classes and functions and today we will be looking at the two approaches.&lt;/p&gt;

&lt;p&gt;A queue follows &lt;strong&gt;FIFO&lt;/strong&gt; rule (First In First Out) and used in programming for sorting. It is common for stacks and queues to be implemented with an array or linked list. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-stack"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1). Stack.&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;A Stack is a data structure that follows the LIFO(Last In First Out) principle. To implement a stack, we need two simple operations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;push : It adds an element to the top of the stack.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cq4rY2DT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqv0ku87eud2g0py03xu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cq4rY2DT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqv0ku87eud2g0py03xu.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;pop : It removes an element from the top of the stack. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j5CkG_BM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qrryymva4g7w2id2vdz0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j5CkG_BM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qrryymva4g7w2id2vdz0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Operations:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Adding - It adds the items in the stack and increases the stack size. The addition takes place at the top of the stack.&lt;/li&gt;
&lt;li&gt;Deletion - It consists of two conditions, first, if no element is present in the stack, then underflow occurs in the stack, and second, if a stack contains some elements, then the topmost element gets removed. It reduces the stack size.&lt;/li&gt;
&lt;li&gt;Traversing - It involves visiting each element of the stack.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Characteristics:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Insertion order of the stack is preserved.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Useful for parsing the operations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Duplicacy is allowed.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Implementation of stack using Python list.
&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Python"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Android"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;   
&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Java"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"C++"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;   
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;   
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;['Python', 'C', 'Android', 'Java', 'C++']
C++
['Python', 'C', 'Android', 'Java']
Java
['Python', 'C', 'Android']
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-queue"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2). Queue&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;A &lt;strong&gt;Queue&lt;/strong&gt; follows the &lt;strong&gt;First-in-First-Out&lt;/strong&gt; (FIFO) principle. It is opened from both the ends hence we can easily add elements to the back and can remove elements from the front.&lt;/p&gt;

&lt;p&gt;To implement a queue, we need two simple operations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;enqueue - It adds an element to the end of the queue.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bWg7Axde--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7624o5n0ama3mgz0287.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bWg7Axde--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7624o5n0ama3mgz0287.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dequeue - It removes the element from the beginning of the queue.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hv2aeHU5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fje69x3di16t91m13f8s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hv2aeHU5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fje69x3di16t91m13f8s.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Operations on Queue&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Addition&lt;/strong&gt; - It adds the element in a queue and takes place at the rear end, i.e., at the back of the queue.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Deletion&lt;/strong&gt; - It consists of two conditions - If no element is present in the queue, Underflow occurs in the queue, or if a stack contains some elements then element present at the front gets deleted.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Traversing&lt;/strong&gt; - It involves to visit each element of the queue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Characteristics:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Insertion order of the queue is preserved.&lt;/li&gt;
&lt;li&gt;Duplicacy is allowed.&lt;/li&gt;
&lt;li&gt;Useful for parsing CPU task operations.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;queue&lt;/span&gt;   
&lt;span class="c1"&gt;# Queue is created as an object 'L'  
&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Queue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;maxsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   

&lt;span class="c1"&gt;# Data is inserted in 'L' at the end using put()   
&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;span class="c1"&gt;# get() takes data from   
# from the head    
# of the Queue   
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;   
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;   
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;   
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;9
6
7
4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#use-case"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Use Case:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1). Stack.&lt;/strong&gt;&lt;br&gt;
Imagine you're a software engineer working on a brand new word processor. You're tasked with creating an undo feature - allowing users to backtrack their actions till the beginning of the session.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;stack&lt;/strong&gt; is an ideal fit for this scenario. We can record every action the user takes by pushing it to the stack. When the user wants to undo an action they'll pop it from the stack.&lt;br&gt;
We can quickly simulate the feature like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;document_actions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# The first enters the title of the document
&lt;/span&gt;&lt;span class="n"&gt;document_actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'action: enter; text_id: 1; text: This is my favourite document'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Next they center the text
&lt;/span&gt;&lt;span class="n"&gt;document_actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'action: format; text_id: 1; alignment: center'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# As with most writers, the user is unhappy with the first draft and undoes the center alignment
&lt;/span&gt;&lt;span class="n"&gt;document_actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# The title is better on the left with bold font
&lt;/span&gt;&lt;span class="n"&gt;document_actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'action: format; text_id: 1; style: bold'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2). Queues.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Queues have widespread uses in programming as well. Think of games like &lt;strong&gt;Street Fighter&lt;/strong&gt; or &lt;strong&gt;Super Smash Brothers.&lt;/strong&gt; Players in those games can perform special moves by pressing a combination of buttons. These button combinations can be stored in a queue.&lt;/p&gt;

&lt;p&gt;Now imagine that you're a software engineer working on a new fighting game. In your game, every time a button is pressed, an input event is fired. A tester noticed that if buttons are pressed too quickly the game only processes the first one and special moves won't work!&lt;/p&gt;

&lt;p&gt;You can fix that with a queue. We can enqueue all input events as they come in. &lt;br&gt;
This way it doesn't matter if input events come with little time between them, they'll all be stored and available for processing. When we're processing the moves we can dequeue them. &lt;br&gt;
A special move can be worked out like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;input_queue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Queue&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# The player wants to get the upper hand so pressing the right combination of buttons quickly
&lt;/span&gt;&lt;span class="n"&gt;input_queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'DOWN'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;input_queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'RIGHT'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;input_queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'B'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Now we can process each item in the queue by dequeueing them
&lt;/span&gt;&lt;span class="n"&gt;key_pressed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input_queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dequeue&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# 'DOWN'
&lt;/span&gt;
&lt;span class="c1"&gt;# We'll probably change our player position
&lt;/span&gt;&lt;span class="n"&gt;key_pressed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input_queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dequeue&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# 'RIGHT'
&lt;/span&gt;
&lt;span class="c1"&gt;# We'll change the player's position again and keep track of a potential special move to perform
&lt;/span&gt;&lt;span class="n"&gt;key_pressed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input_queue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dequeue&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# 'B'
&lt;/span&gt;
&lt;span class="c1"&gt;# This can do the act, but the game's logic will know to do the special move
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;More examples to use:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://colab.research.google.com/drive/1UyEZZeS0DhxFPRCnVa2UaXgxCmEHtpbr?usp=sharing"&gt;Stack data structure in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://colab.research.google.com/drive/1QURyou0CxfcQrpOv7ZRTHSmfz7_TbKv3?usp=sharing"&gt;Queue data structure in Python&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;If you find some errors in the article or have an addition or some inputs please feel free to leave a feed back or comment or DM me on &lt;a href="https://twitter.com/HarunMbaabu"&gt;twitter&lt;/a&gt;, &lt;a href="https://twitter.com/HarunMbaabu"&gt;https://twitter.com/HarunMbaabu&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion.&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Stacks and queues are simple data structures that allow us to store and retrieve data sequentially. In a stack, the last item we enter is the first to come out. In a queue, the first item we enter is the first come out.&lt;/p&gt;

&lt;p&gt;We can add items to a stack using the push operation and retrieve items using the pop operation. With queues, we add items using the enqueue operation and retrieve items using the dequeue operation.&lt;/p&gt;

&lt;p&gt;In Python, we can implement stacks and queues just by using the built-in List data structure. Python also has the deque library which can efficiently provide stack and queue operations in one object. Finally, we've made our stack and queue classes for tighter control of our data.&lt;/p&gt;

&lt;p&gt;There are many real-world use cases for stacks and queues, understanding them allows us to solve many data storage problems in an easy and effective manner.&lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>python</category>
      <category>datascience</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>10 Must-Have IntelliJ Plugins to Improve Your Productivity</title>
      <author>Alex Omeyer</author>
      <pubDate>Tue, 27 Jul 2021 11:28:48 +0000</pubDate>
      <link>https://dev.to/alexomeyer/10-must-have-intellij-plugins-to-improve-your-productivity-2pjg</link>
      <guid>https://dev.to/alexomeyer/10-must-have-intellij-plugins-to-improve-your-productivity-2pjg</guid>
      <description>&lt;p&gt;Many of you loved my list with the &lt;strong&gt;&lt;a href="https://dev.to/alexomeyer/10-must-have-vs-code-extensions-to-improve-your-productivity-4goe"&gt;10 Must-Have VS Code Extensions to boost developer productivity&lt;/a&gt;&lt;/strong&gt; so I asked devs who use IntelliJ IDEA: what are your favourite plugins to ship quality code fast? Here are 10 plugins many of you have mentioned:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-wakatime"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://plugins.jetbrains.com/plugin/7425-wakatime"&gt;WakaTime&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;WakaTime allows you to see metrics, insights, and time tracking automatically generated from your programming activity.&lt;/p&gt;

&lt;p&gt;You will learn exactly how long you spend coding as it automatically tracks when you start and stop typing, with detailed metrics for projects, file, branch, commit/PR, feature, and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5GKZNH9A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ctyq8nook6mtitp71osq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5GKZNH9A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ctyq8nook6mtitp71osq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-stepsize"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://bit.ly/3gZ6OeF"&gt;Stepsize&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Shameless plug - Stepsize is the best extension to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bookmark code, create TODOs and report technical debt directly from the editor&lt;/li&gt;
&lt;li&gt;Collaborate with your teammates on maintenance and refactoring work&lt;/li&gt;
&lt;li&gt;Prioritise technical issues during your sprint planning&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C6ZQ3IiH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h80d5anw22wa0vtkrqhd.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C6ZQ3IiH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h80d5anw22wa0vtkrqhd.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-key-promoter-x"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://plugins.jetbrains.com/plugin/9792-key-promoter-x"&gt;Key Promoter X&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Key Promoter X helps you to learn essential shortcuts while you are working. When you use the mouse on a button inside the IDE, the Key Promoter X shows you the keyboard shortcut that you should have used instead. &lt;/p&gt;

&lt;p&gt;This provides an easy way to learn how to replace tedious mouse work with keyboard keys and helps to transition to a faster, mouse free development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BSHkDUze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p6q6lb6dtcvu7hieaxo4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BSHkDUze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p6q6lb6dtcvu7hieaxo4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-zio-for-intellij"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://plugins.jetbrains.com/plugin/13820-zio-for-intellij"&gt;ZIO for IntelliJ&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;ZIO will give you suggestions, refactorings, and other enhancements for Scala's ZIO ecosystem.&lt;br&gt;
The plugin enhances the ZIO library with features, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Refactorings and suggestions&lt;/li&gt;
&lt;li&gt;Support for zio-macros (e.g. @accessible)&lt;/li&gt;
&lt;li&gt;Integrated test runner&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xNzLPgp9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84a77qyqrfhi4u6h7apa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xNzLPgp9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84a77qyqrfhi4u6h7apa.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-protobuf"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://plugins.jetbrains.com/plugin/16422-protobuf"&gt;Protobuf&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;IntelliJ-based IDEs Protobuf Language Plugin provides Protobuf language support. Protobuf help with syntax highlighting, importing files from library and SDK, navigation, finding usage, code folding, semantic analysis, quick documentation, and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jq5GfgQj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vv7je0ejmhkrdmux2vov.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jq5GfgQj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vv7je0ejmhkrdmux2vov.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-sonarlint"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://plugins.jetbrains.com/plugin/7973-sonarlint"&gt;SonarLint&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;SonarLint lets you fix coding issues before they exist: like a spell checker, SonarLint highlights Bugs and Security Vulnerabilities as you write code, with clear remediation guidance so you can fix them before the code is even committed. SonarLint in VS Code supports analysis of JavaScript, TypeScript, Python, Java, HTML &amp;amp; PHP code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--asfXtxpH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nqyzyfpjljnahvkarcgt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--asfXtxpH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nqyzyfpjljnahvkarcgt.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-eslint"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://plugins.jetbrains.com/plugin/7494-eslint"&gt;ESLint&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;ESLint IntelliJ integration supports displaying eslint warnings as IntelliJ inspections, helps making quick fixes for several rules, support for custom eslint rules, and eslint config annotation and completion.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dSo13Bgp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlx4cpy1q80tusl7zpm6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dSo13Bgp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlx4cpy1q80tusl7zpm6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-prettier"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://plugins.jetbrains.com/plugin/10456-prettier"&gt;Prettier&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Prettier extension helps code look better and be more consistent. It enforces a consistent style by parsing your code and reprinting it with its own rules that take the maximum line length into account, wrapping code when necessary. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sNcGtlN5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1wp4qrs28x3la8oyjdow.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sNcGtlN5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1wp4qrs28x3la8oyjdow.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-quokka"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://plugins.jetbrains.com/plugin/9667-quokka"&gt;Quokka&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Quokka.js is a developer productivity tool for rapid JavaScript / TypeScript prototyping. Runtime values are updated and displayed in your IDE next to your code, as you type. It makes prototyping, learning, and testing JavaScript / TypeScript much faster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mRziI-Kz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1emy913laveox58r7yn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mRziI-Kz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1emy913laveox58r7yn.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-acejump"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://plugins.jetbrains.com/plugin/7086-acejump"&gt;AceJump&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;AceJump allows you to quickly navigate the caret to any position visible in the editor. Simply hit "ctrl+;", type a character, then type the matching character to Ace Jump. If no matches can be found on-screen, AceJump will scroll to the next match it can find.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kjkd7vKN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxc79r3ccqvc6zp3fz6i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kjkd7vKN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxc79r3ccqvc6zp3fz6i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>intellij</category>
      <category>refactorit</category>
      <category>javascript</category>
      <category>tooling</category>
    </item>
    <item>
      <title>How the Resilience Score Algorithm works in Litmus!</title>
      <author>Sayan Mondal</author>
      <pubDate>Tue, 27 Jul 2021 11:04:34 +0000</pubDate>
      <link>https://dev.to/litmus-chaos/how-the-resilience-score-algorithm-works-in-litmus-1d22</link>
      <guid>https://dev.to/litmus-chaos/how-the-resilience-score-algorithm-works-in-litmus-1d22</guid>
      <description>&lt;p&gt;What really is Resilience? For practitioners, psychologists, etc, Resilience is the process of adapting well in the face of adversity, trauma, tragedy, threats, or significant sources of stress, for an SRE or Chaos Engineering however Resilience can be defined as the ability of a system to fail gracefully in the face of—and eventually recover from—disruptive events.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e8Y4GxOy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--EzkG1_qr--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://litmuschaos.io/static/0a11d0492777dc77ca7c7d008877ce5a/78692/cloud-native-way.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e8Y4GxOy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--EzkG1_qr--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://litmuschaos.io/static/0a11d0492777dc77ca7c7d008877ce5a/78692/cloud-native-way.webp" alt="Litmus"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Litmus&lt;/strong&gt; is a &lt;strong&gt;Cross-Cloud Chaos Orchestration&lt;/strong&gt; framework for practising chaos engineering in cloud-native environments. Litmus provides a chaos operator, a large set of chaos experiments on its &lt;a href="http://hub.litmuschaos.io/"&gt;hub&lt;/a&gt;, detailed &lt;a href="https://litmusdocs-beta.netlify.app/docs/introduction/"&gt;documentation&lt;/a&gt;, and a friendly &lt;a href="https://kubernetes.slack.com/?redir=%2Fmessages%2FCNXNB0ZTN"&gt;community&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Find the video format of this blog here:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/OuB3dS05DHU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this blog, we'll deep dive into how the Resilience Score is calculated for your Workflows in Litmus and also understand the concept of Weights.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pSbby3BL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mj9tei9qi59uzhnh3hc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pSbby3BL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mj9tei9qi59uzhnh3hc.png" alt="Weights"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weights-in-litmus"&gt;
  &lt;/a&gt;
  Weights in Litmus
&lt;/h2&gt;

&lt;p&gt;You might have often seen the term weightage pop up quite a few times when you construct your Workflows in Litmus. Typically attached to Resilience, these weights have an important role to play to determine the appropriate Resilience score for your use case.&lt;/p&gt;

&lt;p&gt;Giving a weightage to your experiment is a way of signifying/attaching the importance/priority of that experiment in your workflow. The higher the weight, the more importance it holds.&lt;/p&gt;

&lt;p&gt;For instance, consider this example where you have two Chaos Experiments, &lt;strong&gt;Pod Delete&lt;/strong&gt; and &lt;strong&gt;Pod Network Loss&lt;/strong&gt; in your workflow. Imagine you have a use case where you cannot bear having a network loss but an eviction of a pod does not really bother you that much because you are confident that the pod would re-spawn back up, but you still want to test for pod eviction as a part of your Chaos Test Suite. &lt;/p&gt;

&lt;p&gt;In such a scenario, the Pod Delete Chaos Experiment doesn't hold much of an importance for you but on the other hand, Pod Network Loss does.&lt;/p&gt;

&lt;p&gt;The weight priority is generally divided into three sections:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;0-3&lt;/strong&gt;: Low Priority&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;4-6&lt;/strong&gt;: Medium Priority&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;7-10&lt;/strong&gt;: High Priority&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Therefore considering your scenario, you would want to assign &lt;strong&gt;Pod Delete&lt;/strong&gt; with a &lt;strong&gt;Low Priority&lt;/strong&gt; weightage, whereas, &lt;strong&gt;Pod Network Loss&lt;/strong&gt; would be in the &lt;strong&gt;High Priority&lt;/strong&gt; category.&lt;/p&gt;

&lt;p&gt;Now that we know &lt;em&gt;why&lt;/em&gt; we set the weights the way we do! As we progress further in the blog, we'd also get to know how they actually come into play to determine the Resilience Score.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y6_pf7H3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hu5776an22ne4yuqrqjb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y6_pf7H3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hu5776an22ne4yuqrqjb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resilience-score"&gt;
  &lt;/a&gt;
  Resilience Score
&lt;/h2&gt;

&lt;p&gt;A Resilience Score is the measure of how resilient your workflow is considering all the chaos experiments and their individual result points. This calculation takes into account the individual experiment weights (from a range of 1-10) which are relative to each other.&lt;/p&gt;

&lt;p&gt;Once a weight has been assigned to the experiment, we look for the &lt;strong&gt;Probe Success Percentage&lt;/strong&gt; for that experiment itself (Post Chaos) and calculate the &lt;strong&gt;total resilience result&lt;/strong&gt; for that experiment as a &lt;em&gt;multiplication&lt;/em&gt; of the &lt;em&gt;weight given&lt;/em&gt; and the &lt;em&gt;probe success percentage&lt;/em&gt; returned after the Chaos Run.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Total Resilience for one single experiment = (Weight Given to that experiment * Probe Success Percentage)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;If an experiment doesn't have a probe in it, the probe success percentage returned can either be 0 or 100 based on the experiment verdict. If the experiment passed then it returns 100 else 0.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The Final Resilience Score is calculated by dividing the total test result by the sum of all the weights of all the experiments combined in a single workflow.&lt;/p&gt;

&lt;p&gt;Let's take our above scenario again, considering we have given a weightage of 2 to Pod Delete and 10 for Pod Network Loss, this is how the Resilience Calculation would look like.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BqlCQgq9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z4rny7uzy2wn6yoafyfb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BqlCQgq9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z4rny7uzy2wn6yoafyfb.png" alt="Resilience Calculation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Considering Probe Success Percentage is 100&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is why weights play such an important role in your use case specific Resilience Calculation. For the scenario mentioned above, even if Pod Delete would have failed for whichever reason, your Resilience Score would only drop down by a few numbers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Resilience Score = Total Test Result / Weight Sum 
                 = (0 * 100) + (10 * 100) / 12                  
                 = 1000 / 12 
                 = 83.33%
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However if they both were of the same weights, lets say 10. Then your Resilience Score would drop to 50% straight.&lt;/p&gt;

&lt;p&gt;With that I hope you are now an expert of weights, and would use them wisely. With great power comes great responsibility.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That's all folks 👨‍🏫, Thank you for reading it till the end. I hope you had a productive time learning about Litmus and how you can construct your workflows with more confidence now.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wnj4uCa1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Ftse1.mm.bing.net%252Fth%253Fid%253DOIP.NiUNEyoX9bHslroFaIqmEAAAAA%2526pid%253DApi%26f%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wnj4uCa1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Ftse1.mm.bing.net%252Fth%253Fid%253DOIP.NiUNEyoX9bHslroFaIqmEAAAAA%2526pid%253DApi%26f%3D1" alt="Thanks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Contribute to LitmusChaos and share your feedback on &lt;a href="https://github.com/litmuschaos/litmus"&gt;Github&lt;/a&gt;. If you like LitmusChaos, become one of the many stargazers &lt;a href="https://github.com/litmuschaos/litmus/stargazers"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Join the LitmusChaos slack community following these simple steps!&lt;/p&gt;

&lt;p&gt;Step 1: Join the Kubernetes slack using the following link: &lt;a href="https://slack.k8s.io/"&gt;https://slack.k8s.io/&lt;/a&gt;&lt;br&gt;
Step 2: Join the #litmus channel on the Kubernetes slack or use this link after joining the Kubernetes slack: &lt;a href="https://slack.litmuschaos.io/"&gt;https://slack.litmuschaos.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Looking forward to having you in our community and learning together!&lt;/p&gt;

</description>
      <category>litmuschaos</category>
      <category>cloudnative</category>
      <category>beginners</category>
      <category>productivity</category>
    </item>
    <item>
      <title>10+ Live chat tools like Intercom, Drift, Zendesk, Tawk.io, etc. compared with Chatwoot.</title>
      <author>Joshua Poddoku</author>
      <pubDate>Tue, 27 Jul 2021 10:49:34 +0000</pubDate>
      <link>https://dev.to/joshuapoddoku/10-live-chat-tools-like-intercom-drift-zendesk-tawk-io-etc-compared-with-chatwoot-3igm</link>
      <guid>https://dev.to/joshuapoddoku/10-live-chat-tools-like-intercom-drift-zendesk-tawk-io-etc-compared-with-chatwoot-3igm</guid>
      <description>&lt;p&gt;In the era of increasing digital products, chat apps have become bloated with features and complexities.&lt;/p&gt;

&lt;p&gt;A lot of features are missing, and problems are unsolved in many live chat applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#here-are-a-few-existing-problems-in-the-current-live-chat-support-systems"&gt;
  &lt;/a&gt;
  Here are a few existing problems in the current live chat support systems:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Losing active Internet connection&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Attack by other spammers&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Maintaining conversation history&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Instant replies are uncommon&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Breakdown of current ticket flow&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Very difficult to integrate the API into different internal systems&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Third-party app failures (Slack, Zendesk, internal server errors)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Limited and unextendible features&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And many other issues are challenging to handle, and the developers have to put extra effort into fixing the live chat support. It is all about establishing a great connection and impression among the users and the communities, even though your product can be great and effective.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A simple and all-in-one live chat support system - &lt;a href="//chatwoot.com"&gt;Chatwoot&lt;/a&gt;, an openspurce alternative, can resolve all the problems, and it is &lt;/strong&gt;open-source*&lt;em&gt; and **extendible&lt;/em&gt;* for all your business needs. The &lt;a href="https://github.com/chatwoot/chatwoot"&gt;community version&lt;/a&gt; is absolutely free.&lt;br&gt;
**&lt;/p&gt;

&lt;p&gt;Instant messaging and complete open-source codebase access ease even modifying the system according to the business needs and automating the workflow for faster monitoring and management.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iMno5cIN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626703514856/JsN-W-qCT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iMno5cIN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626703514856/JsN-W-qCT.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Every visitor is busy, they seek an instant real-conversation rather than revisiting the whole website. Chatwoot's auto agent assignment feature is the solution to get out of the bot-ly conversations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The chat widget can also be easily customized to product brand colors.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Considering only these few features earlier, it was complicated to handle all these tasks manually, and the company had to invest extra assets to fix the live chat support and ticketing systems.&lt;/p&gt;

&lt;p&gt;Elegant UI helps the whole team to adapt quickly and to track visitors and their queries from multiple products in a single app. Online chats are sometimes unclear, and all bots cannot identify the intents and become very unreal and irrelevant. Later, if the user tries to find the social handles of any company (like Whatsapp, Facebook, Twitter, E-mail, etc.), it already frustrates and delays the ticket resolution. Chatwoot has easy integration with any third-party social media and acts as a workplace to manage customers anytime. Let's look at the comparisons below.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bot-vs-agent"&gt;
  &lt;/a&gt;
  Bot vs. Agent
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R-lKGhfm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626703651625/_EBasSa7w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R-lKGhfm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626703651625/_EBasSa7w.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;&lt;a href="https://99firms.com/blog/live-chat-statistics/"&gt;https://99firms.com/blog/live-chat-statistics/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Current broken live chat system&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bots are increasing&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Complex pricing plans&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Difficult to manage internal customer support teams&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Manual agent assignment&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;100% extension is not supported&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Extra focus is required&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No mobile apps for such systems&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Extra learning is required&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Limited integration with third-party apps&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#comparing-with-other-products"&gt;
  &lt;/a&gt;
  Comparing with other products
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#1-intercom-vs-chatwoot"&gt;
  &lt;/a&gt;
  1) Intercom vs. Chatwoot
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.intercom.com/"&gt;Intercom&lt;/a&gt; is a popular product in the market. But I'm going to closely give a walkthrough of what can be done better using Chatwoot.&lt;/p&gt;

&lt;p&gt;The starter pack of Intercom has no customizations, custom bot support, neither any conversational management tools. &lt;em&gt;For example, Agent's inactivity cannot be traced.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kf7oIkwA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704112592/Xqf98h7Jw7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kf7oIkwA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704112592/Xqf98h7Jw7.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.chatwoot.com/"&gt;Chatwoot&lt;/a&gt; has unlimited conversations, and Hacker Plan (for developers) costs $0 forever up to 2 agents, and this includes integration with the Twilio SMS channel, which is not provided in Intercom. This plan also enables auto-assignment, note-taking, and other &lt;a href="https://www.chatwoot.com/"&gt;great features&lt;/a&gt; to help any team have a productive workday.&lt;/p&gt;

&lt;p&gt;All the plans below have the feature to track agents and their activity and availability, unlike Intercom.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_XRMx--C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704325575/gYml1r5PD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_XRMx--C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704325575/gYml1r5PD.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-zendesk-vs-chatwoot"&gt;
  &lt;/a&gt;
  2) Zendesk vs. Chatwoot
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.zendesk.com/"&gt;Zendesk&lt;/a&gt; is an award winner but not customizable for smaller budgets; additional enterprise plans touch up to $215/month; on the other hand, Chatwoot provides developer-friendly benefits with the open-source - for good.&lt;/p&gt;

&lt;p&gt;Here's the comparison with the actual features. Zendesk has limited pre-built apps and integrations with complexities of choices and business agreements. Chatwoot has a great low-level structure to solve your high-level needs for your businesses, accessible to developers and non-developers in your company.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jb2BRJsH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704654974/l5bhnOCN-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jb2BRJsH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704654974/l5bhnOCN-.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h6Pr9tyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704928540/wA1dvL0lu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h6Pr9tyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704928540/wA1dvL0lu.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chatwoot is breaking down the complexity of every live chat service into more straightforward language and utility, making it easy to adapt and use without any second thought. Support Team plan (in Zendesk) is equivalent to Startups (Chatwoot) in terms of cost but doesn't have business support.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Affordable plans start at chatwoot&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Business support at $19, whereas Zendesk has complicated business support&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Labeling conversations and easy history handling&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Two agents at $0, while Zendesk has only one agent for $19/month&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Custom widgets as per brand requirements&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bloated features are simply accessed in Chatwoot&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Training is not required&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No trial, get a $0 plan&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#solution-with-chatwoot"&gt;
  &lt;/a&gt;
  Solution with Chatwoot
&lt;/h1&gt;

&lt;p&gt;"Business" is not a static term; things here change very fast and often. We don't know who will become Elon Musk overnight.&lt;/p&gt;

&lt;p&gt;According to a report by Hubspot, the customer satisfaction rate is 92% higher for those who use live chat services.&lt;/p&gt;

&lt;p&gt;If you're the decision-maker in your company to choose the best service, you need to be aware of the trends, user behavior, developer accessibility and put some extra effort into learning these products. It will definitely consume time.&lt;/p&gt;

&lt;p&gt;The reason why Chatwoot's Founding members came with this idea was to solve the pain points in the entire product team in order to maintain easy workflow and to maximize Customer Ticket Management.&lt;/p&gt;

&lt;p&gt;On the other side, customer behavior changes dynamically, but you need to stick to one plan at a time. Especially for startups, when the revenue has just begun, it can be a considerable loss when there is an extra business need.&lt;/p&gt;

&lt;p&gt;Instead of switching to different plans and products, Chatwoot is the solution for every hassle.&lt;/p&gt;

&lt;p&gt;The product team can understand marketing by involving in the timely updating of their Chatwoot software by considering the changing demands of the users, and there can be a strong connection between Marketers and Developers. And provide solutions to the end-customers Instantly and Independently.&lt;/p&gt;

&lt;p&gt;Read the complete blog &lt;a href="https://aviyel.com/post/379/10-live-chat-tools-like-intercom-drift-zendesk-tawk-io-and-livechat-compared-with-chatwoot"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>linux</category>
      <category>cloud</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
