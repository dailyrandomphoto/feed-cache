<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Tutorial Vue Router Indonesia</title>
      <author>Dimas Andhika</author>
      <pubDate>Sat, 10 Apr 2021 13:54:07 +0000</pubDate>
      <link>https://dev.to/dimasngoding/tutorial-vue-router-indonesia-3j64</link>
      <guid>https://dev.to/dimasngoding/tutorial-vue-router-indonesia-3j64</guid>
      <description>&lt;h2&gt;
  &lt;a href="#perkenalan"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Perkenalan&lt;/strong&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Vue sangat berguna untuk membuat Aplikasi Satu Halaman, halaman webnya juga sangat interaktif yang memungkinkan kita untuk tidak me-refresh halaman ketika kita mengubah dari halaman satu ke halaman yang lain.&lt;/p&gt;
&lt;/blockquote&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Jika website kamu memiliki banyak halaman dan kamu menggunakan Vue&lt;/strong&gt;, itulah mengapa kamu membutuhkan Vue Router. &lt;strong&gt;Note: Pastikan kalian paham tentang Vue dan Javascript dasar&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;



&lt;h2&gt;
  &lt;a href="#basic-dari-vue-router"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Basic Dari Vue Router&lt;/strong&gt;
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#mempersiapkan-vue-router-dari-awal"&gt;
  &lt;/a&gt;
  🚀 Mempersiapkan Vue Router dari awal
&lt;/h4&gt;

&lt;p&gt;1.Pertama Kita Install Vue Router di Command Line&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npm i vue-router@next
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2.Konfigurasi pada Direktori &lt;strong&gt;&lt;em&gt;/src/router/index.js&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { createWebHistory, createRouter } from "vue-router";
// Import Component2 Kalian

import Home from "@/views/Home.vue"; 
import About from "@/views/About.vue";

const routes = [ 
  {
    path: "/", 
    name: "Home",
    component: Home,
  },
  {
    path: "/about",
    name: "About",
    component: About,
  },
];

const router = createRouter({
  history: createWebHistory(),
  routes,
});

export default router;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Di direktori &lt;strong&gt;&lt;em&gt;/src/router/index.js&lt;/em&gt;&lt;/strong&gt; kita membuat routes di dalam sebuah array yang akan mengspesifikasikan beberapa hal:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Path - URL / Tempat dimana component akan di load&lt;/li&gt;
&lt;li&gt;Component - Komponen yang akan diload saat path dipanggil&lt;/li&gt;
&lt;li&gt;Name - (Opsional)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Dibawah array routes &lt;strong&gt;terdapat &lt;code&gt;createRouter&lt;/code&gt; yang pastinya diperlukan untuk membuat router itu sendiri&lt;/strong&gt; &lt;/p&gt;
&lt;/blockquote&gt;



&lt;blockquote&gt;
&lt;p&gt;Dan juga terdapat &lt;strong&gt;&lt;code&gt;createWebHistory&lt;/code&gt; yang digunakan untuk beralih dari mode hash ke mode history di dalam browser, menggunakan API history HTML5, Ini yang akan membuat history pada browser kita setiap kita meload router&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;3.Konfigurasi pada direktori &lt;strong&gt;&lt;em&gt;/src/main.js&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Pada direktori &lt;strong&gt;&lt;em&gt;/src/main.js&lt;/em&gt;&lt;/strong&gt; kita juga perlu menambahkan sesuatu&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { createApp } from 'vue'
import App from './App.vue'
import router from './router' // &amp;lt;---

createApp(App)
  .use(router) // &amp;lt;---
  .mount('#app')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ya, tentunya kita perlu mengimpornya ke file utama kita&lt;/p&gt;



&lt;h4&gt;
  &lt;a href="#menggunakan-router"&gt;
  &lt;/a&gt;
  🚀 Menggunakan Router
&lt;/h4&gt;

&lt;p&gt;Ada 2 component yang diberikan oleh Vue Router yaitu &lt;code&gt;&amp;lt;router-view /&amp;gt;&lt;/code&gt; dan &lt;code&gt;&amp;lt;router-link to="/" /&amp;gt;&lt;/code&gt;. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;router-view /&amp;gt;&lt;/code&gt; digunakan untuk membungkus component2 yang akan dirender , dan &lt;code&gt;&amp;lt;router-link to="/" /&amp;gt;&lt;/code&gt; ini mirip seperti tag anchor pada html, pada tag anchor biasanya kita menggunakan href tetapi pada router link kita menggunakan 'to'&lt;/p&gt;
&lt;/blockquote&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Biasanya &lt;code&gt;&amp;lt;router-view /&amp;gt;&lt;/code&gt; dideklarasikan di file App.vue karena file tersebut adalah halaman utama yang isinya akan kita ubah2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Contoh:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(/src/App.vue)
&amp;lt;template&amp;gt;
  &amp;lt;div id="navbar"&amp;gt;
      &amp;lt;router-link to="/"&amp;gt;Home&amp;lt;/router-link&amp;gt; |
      &amp;lt;router-link to="/about"&amp;gt;About&amp;lt;/router-link&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;router-view /&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(Home.vue)
&amp;lt;template&amp;gt;
  &amp;lt;h1&amp;gt;Home Page&amp;lt;/h1&amp;gt;
&amp;lt;/template&amp;gt;

(About.vue)
&amp;lt;template&amp;gt;
  &amp;lt;h1&amp;gt;About Page&amp;lt;/h1&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;&lt;br&gt;
🚀 Selesai.. ya mungkin seperti itu konsep dasar vue router, mohon maaf bila bahasa yang digunakan membingungkan&lt;/p&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to Get Started With Azure Devops | beginner's guide</title>
      <author>Adit Modi</author>
      <pubDate>Sat, 10 Apr 2021 13:31:56 +0000</pubDate>
      <link>https://dev.to/cloudhacks/how-to-get-started-with-azure-devops-beginner-s-guide-3lj7</link>
      <guid>https://dev.to/cloudhacks/how-to-get-started-with-azure-devops-beginner-s-guide-3lj7</guid>
      <description>&lt;p&gt;A typical software development team is comprising of software developers, testers, DevOps engineers, architects, and project managers. Azure DevOps is a set of tools that allows software development teams to plan and collaborate on software development life cycle including creating features, coding, build, and deployment, testing, and provide feedback on the product.&lt;/p&gt;

&lt;p&gt;Requirements gathering, analysis and design, coding, testing, and deployment are common functions of software development life cycle. Azure DevOps is a cloud platform that provides tools to manage entire software development life cycle in the cloud.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5taoKyTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ybwh26h03t1ul2tp8ma.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5taoKyTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ybwh26h03t1ul2tp8ma.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My Background: I am Cloud , DevOps &amp;amp; Big Data Evangelist | 4x AWS Certified | 3x OCI Certified | 3x Azure Certified | AWS Community Builder | AWS Educate Cloud Ambassador .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Azure DevOps&lt;/strong&gt; offers two options. First, Azure DevOps Services in the cloud and on-premises using Azure DevOps Server.Azure DevOps provides integrated features that you can access through your web browser or IDE client.&lt;/p&gt;

&lt;p&gt;The following is a list of Azure DevOps services that includes Azure Artifacts, Azure Boards, Azure Pipelines, Azure Repos, and Azure Test Plans.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L1oPm2yV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dzl3bds6u4um98g91e2z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L1oPm2yV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dzl3bds6u4um98g91e2z.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Azure DevOps also offers collaboration tools such as to create documentation via wikis, and customizable team dashboards with configurable widgets to share information, progress, and trends&lt;/p&gt;

&lt;p&gt;Azure DevOps supports adding extensions and integrating with other popular services, such as: Campfire, Slack, Trello, UserVoice, and more, and developing your own custom extensions.&lt;/p&gt;

&lt;p&gt;Watch this video to learn more about Azure DevOps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=JhqpF-5E10I"&gt;https://www.youtube.com/watch?v=JhqpF-5E10I&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#azure-boards"&gt;
  &lt;/a&gt;
  Azure Boards
&lt;/h2&gt;

&lt;p&gt;Azure Boards delivers a set of tools that allows development teams to keep track of development features in Agile process. The tools include Kanban boards, backlogs, sprints, queries, and plans. There are also options to add code defects, keep track of issues, and generate reports.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xde1a8ZL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwwpg9hi30qs2wyoceu2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xde1a8ZL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwwpg9hi30qs2wyoceu2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In a typical agile software development process, requirements are added to a backlog and moved to sprints. In a backlog, you can create epics, features, and tasks.&lt;/p&gt;

&lt;p&gt;Learn more about Azure boards here.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=JhqpF-5E10I"&gt;https://www.youtube.com/watch?v=JhqpF-5E10I&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we know that Azure Boards has all the features your team needs to successfully manage your work. Azure boards allows you to visualize work with Kanban boards, execute in sprints, manage your backlog, and use queries to find work and visualize results. In this video, learn how to get started with Azure Boards.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#azure-repos"&gt;
  &lt;/a&gt;
  Azure Repos
&lt;/h2&gt;

&lt;p&gt;Source code version control is a common need of software projects to keep track of different versions and changes in the code. Azure Repos is a set of version control tools hosted in Azure cloud. Azure DevOps service includes free unlimited private Git repos.&lt;/p&gt;

&lt;p&gt;Azure Repos provides two types of version control, Git and Team Foundation Version Control (TFVC).&lt;/p&gt;

&lt;p&gt;Git is one of the most popular distributed version control system that allows developers to have a local copy their source code on their development machine as local repositories and a copy stays on the server. This helps developers to work locally offline and developer commit their work locally, and then the changes are sync with the copy on the server. Unlike Git, which is distributed, TFVC is a centralized version control system.&lt;/p&gt;

&lt;p&gt;Azure Repos UI looks like the following that allows users to pull requests of projects. Azure portal looks like the following where&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oMsoZCpM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fi5fk0is0s39epdz3581.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oMsoZCpM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fi5fk0is0s39epdz3581.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Watch this video to learn how to get started with Git in Azure Repos and how your team can use pull requests to work together to collaborate on code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=-5QzZzkBpF8"&gt;https://www.youtube.com/watch?v=-5QzZzkBpF8&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#azure-pipelines"&gt;
  &lt;/a&gt;
  Azure Pipelines
&lt;/h2&gt;

&lt;p&gt;Continuous integration (CI) and continuous delivery (CD) of software projects is a major task that is automated where tools are used to get latest versions of the code, build it, and deploy to the destinations. Azure Pipelines of Azure DevOps is a set of tools that provides build and release services for software development teams.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S6y17hlM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idmw875g7yivf3pdeibk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S6y17hlM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idmw875g7yivf3pdeibk.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Azure Pipelines support build, test, and deploy Node.js, Python, Java, PHP, Ruby, C/C++, .NET, Android, and iOS apps. Run in parallel on Linux, macOS, and Windows.&lt;/p&gt;

&lt;p&gt;Azure Pipelines supports containers and Kubernetes that allows teams to easily build and push images to container registries like Docker Hub and Azure Container Registry.&lt;/p&gt;

&lt;p&gt;Deploy containers to individual hosts or Kubernetes.&lt;/p&gt;

&lt;p&gt;Azure Pipelines are extensible and allows a wide range of community-built build, test, and deployment tasks, along with hundreds of extensions from Slack to SonarCloud.&lt;/p&gt;

&lt;p&gt;Azure Pipelines allows teams to deploy their apps to any cloud including Azure, AWS, and GCP.&lt;/p&gt;

&lt;p&gt;Watch this video tp learn why Azure Pipelines is the best tool on the planet for Continuous Integration and Continuous Deployment (CI/CD) of your code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=NuYDAs3kNV8"&gt;https://www.youtube.com/watch?v=NuYDAs3kNV8&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#azure-test-plans"&gt;
  &lt;/a&gt;
  Azure Test Plans
&lt;/h2&gt;

&lt;p&gt;Azure Test Plans are for software testing and QA teams to create test cases, test and report results, and generate reports. Azure Test Plans support manual testing and continuous testing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m7SQf8ui--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ztqkd28cdk7j5tkm5xxb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m7SQf8ui--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ztqkd28cdk7j5tkm5xxb.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The four key functionalities of Azure Test Plans are,&lt;br&gt;
Planned manual testing&lt;br&gt;
Manual testing by organizing tests into test plans and test suites by designated testers and test leads.&lt;/p&gt;

&lt;p&gt;User acceptance testing&lt;br&gt;
Testing carried out by designated user acceptance testers to verify the value delivered meets customer requirements, while reusing the test artifacts created by engineering teams.&lt;/p&gt;

&lt;p&gt;Exploratory testing&lt;br&gt;
Testing carried out by development teams, including developers, testers, UX teams, product owners and more, by exploring the software systems without using test plans or test suites.&lt;/p&gt;

&lt;p&gt;Stakeholder feedback&lt;br&gt;
Testing carried out by stakeholders outside the development team, such as users from marketing and sales divisions.&lt;br&gt;
Watch this video to learn the basic aspects on how to get started with Azure Test Plan, so you can start testing your application today.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=LF0hmSysWCg"&gt;https://www.youtube.com/watch?v=LF0hmSysWCg&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#azure-artifacts"&gt;
  &lt;/a&gt;
  Azure Artifacts
&lt;/h2&gt;

&lt;p&gt;Azure Artifacts allows teams to share packages such as Maven, npm, NuGet and more from public and private sources and integrate package sharing into your CI/CD pipelines&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wuaMdxK5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pgpxstrh12qclr616ho1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wuaMdxK5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pgpxstrh12qclr616ho1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this video, learn how to get started with Azure artifacts and start creating a feed for an npm package to use in your Azure Pipeline.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=b3BPkyikvNM"&gt;https://www.youtube.com/watch?v=b3BPkyikvNM&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#azure-devops-azure-pipelines-azure-boards-github"&gt;
  &lt;/a&gt;
  Azure DevOps, Azure Pipelines, Azure Boards + Github
&lt;/h2&gt;

&lt;p&gt;Azure DevOps integrates seamlessly with GitHub. Watch this video to learn how you can easily track our work with the Azure Boards and GitHub integration and how we can easily create CI/CD pipelines for our code in GitHub using Azure Pipelines.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=_gURf7CW1lg"&gt;https://www.youtube.com/watch?v=_gURf7CW1lg&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Azure DevOps is one of the recent products of Azure that allows development teams to collaborate and mange their tasks and releases. In this article, we learned about basics of Azure DevOps and its various products.&lt;/p&gt;

&lt;p&gt;Azure DevOps and entire cloud ecosystem is a growing and changing space. Make sure to learn about latest changes in Azure DevOps that may not have mentioned here.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fFhhQYYC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jv1lx235iniqdmhk5r0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFhhQYYC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jv1lx235iniqdmhk5r0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope this guide helps you understand on How to Get Started With Azure Devops, feel free to connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn.&lt;/a&gt;&lt;br&gt;
You can view my badges &lt;a href="https://www.youracclaim.com/users/adit-modi/badges"&gt;here.&lt;/a&gt;&lt;br&gt;
If you are interested in learning more about AWS / Azure Services then follow me on &lt;a href="https://github.com/AditModi"&gt;github.&lt;/a&gt;&lt;br&gt;
If you liked this content then do clap and share it . Thank You .&lt;/p&gt;

</description>
      <category>azure</category>
      <category>devops</category>
      <category>beginners</category>
    </item>
    <item>
      <title>System Design - How to design Google Drive / Dropbox (a cloud file storage service)</title>
      <author>Pankaj Tanwar</author>
      <pubDate>Sat, 10 Apr 2021 13:24:22 +0000</pubDate>
      <link>https://dev.to/pankajtanwarbanna/system-design-how-to-design-google-drive-dropbox-a-cloud-file-storage-service-284</link>
      <guid>https://dev.to/pankajtanwarbanna/system-design-how-to-design-google-drive-dropbox-a-cloud-file-storage-service-284</guid>
      <description>&lt;p&gt;System design is one of the most important aspect of software engineering. System design problems are usually open-ended discussions.&lt;/p&gt;

&lt;p&gt;Let’s design a cloud file storage service like Google drive or drop box. These services provides a platform that allow users to upload their files online and access them from any device. In this article, we will focus on architecture design &amp;amp; performance analysis of the system.&lt;/p&gt;

&lt;p&gt;So let’s dive right in!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#problem-statement"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Problem Statement&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;We need to design a service like Google Drive or Dropbox which allows users to store their data securely, synchronised &amp;amp; effectively on remote servers. User should be able to download and upload files from all their devices. System should be highly available, reliable and scalable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#feature-expectations"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Feature Expectations&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The top level requirements of the system are as follows -&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Functional Requirements&lt;/strong&gt; -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;User should be able to download/upload, update, delete files from any device&lt;/li&gt;
&lt;li&gt;Files should be synchronised in all the devices that the user is logged in&lt;/li&gt;
&lt;li&gt;History/versioning of files (snapshotting of data)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Non-functional requirements&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Our service needs to be highly available&lt;/li&gt;
&lt;li&gt;The system should be highly reliable; any uploaded file should never be lost&lt;/li&gt;
&lt;li&gt;System should support large files uploading &lt;/li&gt;
&lt;li&gt;ACID operations :&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Atomic          - File upload should be all or none &lt;br&gt;&lt;br&gt;
Consistency - Both versions on device and server must be same &lt;br&gt;&lt;br&gt;
Isolation           - Ensure multiple transactions at same time, with data consistency &lt;br&gt;&lt;br&gt;
Durability      - Must be highly available &amp;amp; durable &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Not in Scope&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sharing file access with other users, offline editing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scale"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Scale&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Total Users&lt;/strong&gt;       : ~100 M&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Daily Active Users&lt;/strong&gt;    : ~50 M&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;QPS&lt;/strong&gt;           : ~500M request per day (~9000 Queries Per Second)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Storage Estimate&lt;/strong&gt;  : Assume, every user has avg 100 files (avg file size ~1MB) so we will have a total of 100B files. Hence, total storage would be -&lt;/p&gt;

&lt;p&gt;100MB x 100B = 10000PB.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Read/Write ratio&lt;/strong&gt;  : ~ 1:1 &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Traffic Estimate&lt;/strong&gt;  : ~5 GB new file writes per second&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Memory Usage&lt;/strong&gt;      : Assume, each user access 5 files daily and reading chunks of 200KB out of 1MB. So, following the 80-20 rule (80% traffic comes for 20% of the files), our cache size -&lt;/p&gt;

&lt;p&gt;((50 M x 200KB x 5 ) x 20) / 100  = 10 Tera Byte&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Active Connections&lt;/strong&gt;    : 1 M active connections per minute &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#high-level-design"&gt;
  &lt;/a&gt;
  &lt;strong&gt;High Level Design&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;On a high level, we need to support two scenarios, one to upload/edit/delete files and other to view/search files. We would need some object storage server (cloud storage) to store files, one block server with whom client would interact, one database server to store metadata information (file name, file size, path etc) about the files and one synchronisation server. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AUxFBhBq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617952845935/_gcU4laIG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AUxFBhBq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617952845935/_gcU4laIG.png" alt="high-level-design.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#system-apis"&gt;
  &lt;/a&gt;
  &lt;strong&gt;System APIs&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Following are the APIs we can expose from our service -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;upload(string uploadToken, fileInfo file, userInfo user)&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;edit(string authToken, fileInfo file, userInfo user)&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;delete(string authToken, fileInfo file, userInfo user)&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;download(string authToken, fileInfo file, userInfo user)&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We can have an another API to generate a write token (uploadToken) before hand when a user request to upload a new file. Here we will have an opportunity to authenticate &amp;amp; validate the user. If we need to block a user from uploading new files, a check can be put here instead of allowing user to send whole file in request and then discard it. It can avoid unnecessary resources consumption.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#component-design-amp-deep-dive"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Component Design &amp;amp; Deep dive&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fd1ea0Qt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617952954142/fiX9kr9T_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fd1ea0Qt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617952954142/fiX9kr9T_.png" alt="component-design.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s go through the major components of our system one by one:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Client&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A client application on user's device talks to our service to upload, download and modify files to backend cloud storage. Below are some major operations done by client -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Upload/download file&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we upload/download the file with full size, it will cost us storage and bandwidth. And also, latency will be increased for this process. If a user attempts to upload a 10MB file, that's a lot of resource usage :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;10MB of server memory tied up&lt;/li&gt;
&lt;li&gt;A request handler being tied up for the entire amount of time to upload a 10MB file&lt;/li&gt;
&lt;li&gt;High CPU Usage&lt;/li&gt;
&lt;li&gt;Suppose, If uploading fails after 90%, the whole file would be required to upload again.&lt;/li&gt;
&lt;li&gt;No efficient method to update the file for small edits as we would have the entire file, not chunks&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It will hit scalability very hard. It's not a wise choice to use full file upload approach at this scale.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Handling file transfer efficiently&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We may divide the file into smaller chunks to make it easier to upload. Details of chunks can be included in metadata. Naming of chunks can be done by the hash value of chunks content.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e3nUmEsb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617953135029/JCCPxt9Fa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e3nUmEsb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617953135029/JCCPxt9Fa.png" alt="file-upload.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This strategy will helps us in many ways -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Bandwidth Optimisation&lt;/strong&gt; - Smaller chunks size optimises network bandwidth utilisation. While uploading, we can break the file into chunks and then upload it. In case of file upload failure, we don't need to upload whole file again, only failing chunk will be retried. If user updates the file, only modified chunk will be sent. &lt;/p&gt;

&lt;p&gt;Less amount of data transfer between client and server will reduce network bandwidth and most importantly, it will help us achieve a better response time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Cloud Storage utilisation&lt;/strong&gt; - As we are sending modified chunks only to the server in case of update instead of the entire file again, it will decrease the cloud storage consumption.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Latency or Concurrency Utilisation&lt;/strong&gt;  - Transmitting the entire file at once consumes a lot more time as compared to small chunks. With multiple smaller data chunks, we can make use of concurrency also to upload/download the file using multi threading or multi processes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Faster lookup &amp;amp; version control&lt;/strong&gt;  - As we are only transmitting the modified chunks in case of updates, it helps us in proving a history of versions of the file. We can directly lookup at the modified chunks to see the modifications.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;How to calculate chunk size&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Calculation of optimal chunk size can be done based on below parameters -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Input/Output operations per second on cloud storage devices&lt;/li&gt;
&lt;li&gt;Network bandwidth&lt;/li&gt;
&lt;li&gt;Average file size in storage &lt;/li&gt;
&lt;li&gt;Metadata information&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;How to implement synchronisation server&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have a synchronisation server which ensures that any updates from one client as sync with other devices. But how can we implement client efficiently listening to changes happening with other clients? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Basic Solution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The very first basic solution would be, to periodically hit and check with the server for new changes. But this approach is highly inefficient as most of the time we would be getting empty responses. It is a waste of network bandwidth too and we are unnecessary putting extra load on the servers. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTTP Long Polling&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An effective solution would be to use HTTP long polling. With long polling, client does not expect immediate response from the server. Server keeps the request open and waits for the new changes. Whenever there are new modifications by any client, server would immediately send an HTTP response to the client.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; - Unlike desktop or web clients, mobile clients usually sync on demand to save user’s bandwidth and space.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#metadata-database"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Metadata database&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;We store the metadata &amp;amp; indexes of all chunks in our database as we have to track it. Important thing here is that we are not storing the actual file/chunks itself here, we are storing only the metadata information to retrieve the file later. It is also responsible for maintaining the history (versioning) of files.&lt;/p&gt;

&lt;p&gt;Database can be a relational database such as MySQL or a non-relational database such as cassandra, dynamoDB or MongoDB. Let's discuss which database to consider for our use case -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Relational vs Non-relational Database&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;As, multiple users might be on the same file simultaneously &amp;amp; we need to ensure data consistency. Since NoSQL data storage do not support ACID properties in favour of performance and scalability. We would need to implement ACID properties pro-grammatically in synchronisation service. It would require extra DB configurations. (For example, Cassandra replication factor gives the consistency level). Here, relational database (MySQL) has a plus point as they support ACID properties.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Relational databases are difficult to scale as if we are using MySQL, we would need to use sharding or master slave techniques and it would become more difficult these multiple databases for any new updates. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To overcome this problem, we can have a wrapper around all databases and cache instead of directly talking to the database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f9vEAGV1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617953330392/T-REe_Lzm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f9vEAGV1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617953330392/T-REe_Lzm.png" alt="System-Design-Dropbox-Metadata-Edge-Wrapper.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; : Storing file URL in database is a really bad idea. Using stored metadata information to construct the URL is a lot more robust and scalable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#synchronisation-service"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Synchronisation Service&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;For every new update, synchronisation service is responsible to efficiently process updates and apply changes to other subscribed devices to keep their local db and remote db in sync. &lt;/p&gt;

&lt;p&gt;Synchronisation service should be designed to transmit as less data as possible to avoid unnecessary network bandwidth and achieve a better response time. Server and client can calculate a hash (SHA-256) to check if chunk is updated or not. On server also, if we have the chunk with similar hash(even from another user), we can use the same chunk instead of creating a new copy to avoid data deduplication.&lt;/p&gt;

&lt;p&gt;For more efficiency, we can consider using a communication middleware between client and sync service. It will provide a global message queue to support a very high number of pull or push from client. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#message-queuing-service"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Message Queuing Service&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;To enable asynchronous message based communication between client and server to serve huge number of requests, we can make use of a scalable message queuing service. It should support efficient storing of any number of messages in a highly available, reliable and scalable queue.&lt;/p&gt;

&lt;p&gt;It will implement request and response queue. Request queue is a global queue which all client share. For each modification, the request will go to the global queue first to update the meta data DB and after that, synchronisation Service will update the meta data and update message is sent to all subscribed clients via response queue.&lt;/p&gt;

&lt;p&gt;Along with high scalabiliy and high performance, it provides load balancing and elasticity for multiple instances of the Synchronisation Service. RabbitMQ, Apache Kafka, etc. are some of the examples of the messaging queue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rJTW2HTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617953447327/3aRsoDsiw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rJTW2HTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617953447327/3aRsoDsiw.png" alt="message-queue.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cloudblock-storage"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Cloud/Block Storage&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Cloud/Block storage stores all the chunks, uploaded by users to the service. As we have metadata database, separate from storage, we can use any cloud storage approach eg - Amazon S3, Azure etc.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When Dropbox started, they used S3 as block storage. However as they grew, they developed an in-house multi-exabyte storage system known as Magic Pocket. In magic Pocket, files are split up into blocks, replicated for durability, and distributed across data centres in multiple geographic regions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#database-partitioning"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Database Partitioning&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;From database scalability point of view, database partitioning comes into picture to ensure scalability. Partitioning is the database process where very large tables are divided into multiple smaller parts for faster queries. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Metadata Partitions&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Based on first latter of file&lt;/strong&gt; :&lt;/p&gt;

&lt;p&gt;We can store file/chunks in partitions based on the first letter of a file path, means all files starting with same letter will stay in one partition. This is called "range based partitioning".&lt;/p&gt;

&lt;p&gt;The major disadvantage of this approach is that, it can lead to unbalanced servers. It might possible that some database partitions get filled completely as there are more files starting with same letter and some remains with no traffic.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Based on hash of file ID&lt;/strong&gt; :&lt;/p&gt;

&lt;p&gt;Based on hash of fileId, randomly generated by our hash function, we can have partitions. Hash will be mapped to a number and it would be our partition to store the object. This approach can still lead to unbalanced partitions but can be solved by using consistent hashing.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#caching"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Caching&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Caching is a very common technique for performance. This is very helpful to lower the latency. For our use case, &lt;strong&gt;Memcached&lt;/strong&gt; would be a good choice which can store the whole chunk, with it's respective hash. A cache for Metadata Database can also be used.   &lt;/p&gt;

&lt;p&gt;Cache servers are determined based on users' usage pattern &amp;amp; &lt;strong&gt;LRU&lt;/strong&gt; (Least Recently Used) can be the optimal policy for our cache.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#load-balancer"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Load Balancer&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;We can adopt round robin or some other fancy algorithm for load balancing layer to distribute the incomming traffic uniformly. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Source : INTERNET&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;About me : &lt;a href="https://pankajtanwar.in"&gt;https://pankajtanwar.in&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I write about System Design, Backend Engineering and Web Tech at : &lt;a href="https://blog.pankajtanwar.in"&gt;https://blog.pankajtanwar.in&lt;/a&gt;&lt;/p&gt;

</description>
      <category>systems</category>
      <category>programming</category>
    </item>
    <item>
      <title>Projects to become a javascript master 🚀 Resource compilation 💥 + Giveaway⚡</title>
      <author>DevLorenzo</author>
      <pubDate>Sat, 10 Apr 2021 13:17:18 +0000</pubDate>
      <link>https://dev.to/devlorenzo/10-projects-to-become-a-javascript-master-giveaway-2o4k</link>
      <guid>https://dev.to/devlorenzo/10-projects-to-become-a-javascript-master-giveaway-2o4k</guid>
      <description>&lt;p&gt;&lt;code&gt;Hello World!&lt;/code&gt; Today I wanted to share with you 10 projects you can build to be from zero to hero in javascript!&lt;/p&gt;

&lt;p&gt;🔖 - Bookmark the article to save it &lt;em&gt;and&lt;/em&gt; &lt;strong&gt;remember the like ❤️ and maybe super like🦄&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#giveaway"&gt;
  &lt;/a&gt;
  ⚡Giveaway ⚡
&lt;/h2&gt;

&lt;p&gt;We are giving away any course you need on Udemy. Any price any course.&lt;br&gt;
Steps to enter the giveaway&lt;br&gt;
--&amp;gt; React to this post&lt;br&gt;
--&amp;gt; &lt;a href="https://chipper-motivator-3112.ck.page/05710ea3d3"&gt;Subscribe to our Newsletter&lt;/a&gt; &lt;strong&gt;&amp;lt;--&lt;/strong&gt; Very important&lt;br&gt;
--&amp;gt; &lt;a href="https://twitter.com/DevLorenzo1"&gt;Follow me on Twitter&lt;/a&gt; &amp;lt;-- x2 Chances of winning&lt;/p&gt;



&lt;p&gt;
  Table of content
  &lt;p&gt;a) &lt;a href="#a"&gt;General (for beginners)&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#a1"&gt;Converters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#a2"&gt;Word Counter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#a3"&gt;Timer / Clock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#a4"&gt;Random password generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#a5"&gt;Calculator&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;b) &lt;a href="#b"&gt;Games&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#b1"&gt;Guess the number&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#b2"&gt;Math time!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#b3"&gt;Other Games&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;c) &lt;a href="#c"&gt;Social &amp;amp; Websites&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#c1"&gt;Log-in, Sign-up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#c1"&gt;Log-in, Sign-up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#c2"&gt;To-Do List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#c3"&gt;Social&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#c4"&gt;Portfolio&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hey, remember that I have a &lt;a href="https://chipper-motivator-3112.ck.page/05710ea3d3"&gt;newlsetter&lt;/a&gt;!&lt;br&gt;
&lt;/p&gt;

&lt;br&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#a-general-gt-for-beginners"&gt;
  &lt;/a&gt;
  a) General --&amp;gt; For beginners &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-converters"&gt;
  &lt;/a&gt;
  1. Converters &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Svvv10c7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0hbzclx0tuzmkfo990w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Svvv10c7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0hbzclx0tuzmkfo990w.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I don't have to say a lot in reality for this category. Just build something that with a given input, convert it into a nice-looking output, for us to gain the time of doing it manually 🙃. If you do a full webpage around it, that's always a plus, but you can even do a really easy javascript code. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For example, I built a currency converter, it was one of my first JS projects!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://codepen.io/r4ndomw4lk/pen/KZyEBY"&gt;A CodePen - JavaScript: Currency Calculator&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-word-counter"&gt;
  &lt;/a&gt;
  2. Word counter &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hWfVfhLf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3tto05qxadnhuenmwvw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hWfVfhLf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3tto05qxadnhuenmwvw.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Just another easy fun project, build something count the number of words and characters in a text. Then the goal is to give as many stats as possible, showing reading and speaking time, keywords and their frequency, and others, be creative!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codesource.io/building-a-word-counter-in-javascript/"&gt;An Article - Building a Word Counter in JavaScript&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-timer-clock"&gt;
  &lt;/a&gt;
  3. Timer / Clock &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VUeQkRl4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/euy7bve2sxfmehg3odz8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VUeQkRl4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/euy7bve2sxfmehg3odz8.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That one also is quite easy, just try to build a basic functionality around time, like a timer, a digital clock, a scheduled alarm... And if you have time and willingness to learn, why not doing the entire clock app, maybe on an entire website!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.codesdope.com/blog/article/how-to-create-a-digital-clock-using-javascript/"&gt;An Article - How to Create a Digital Clock using JavaScript&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-random-password-generator"&gt;
  &lt;/a&gt;
  4. Random password generator &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--poIqBPre--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u4pvqhxj521n456jhnso.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--poIqBPre--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u4pvqhxj521n456jhnso.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Keep your learnings secure, you can create a random password generator in 10 minutes in reality. But like so many other projects on this list, they are fun to do only if you make them yours by adding special features! I think you can go deep into customization possibilities with this one. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=fOvYE1i_IiY"&gt;A Video - Strong Random Password Generator Mini Project using Html CSS &amp;amp; Javascript | Password Generator App - by &lt;br&gt;
Online Tutorials&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#5-calculator"&gt;
  &lt;/a&gt;
  5. Calculator &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z0fDys9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/up6qg743pmrsv54nnaov.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z0fDys9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/up6qg743pmrsv54nnaov.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Now you can build something more challenging, a fully working calculator. That should not be too difficult, everyone knows how a calculator works. Just try to be original, adding features obviously. &lt;a href="https://dev.to/worldindev/finally-how-to-understand-math-awesome-resource-list-4end"&gt;Make math fun!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.freecodecamp.org/news/how-to-build-an-html-calculator-app-from-scratch-using-javascript-4454b8714b98/"&gt;A freecodecamp Article - How to build an HTML calculator app from scratch using JavaScript&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/yudizsolutions/pen/poReVdw"&gt;Another Source - A CodePen - "Neumorphism calculator with dark mode switch"&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#b-games"&gt;
  &lt;/a&gt;
  b) Games &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#5-guess-the-number"&gt;
  &lt;/a&gt;
  5. Guess the number &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zeUNLrg_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcu6ml6laognmkgqur9g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zeUNLrg_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcu6ml6laognmkgqur9g.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's a very famous and easy game, you generate a random number from 0 to 50, the user has to guess it. And you give him some hints in the process (lower or greater). Nothing extraordinary, but you're starting to make great progress! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://opensource.com/article/21/1/learn-javascript"&gt;Learn JavaScript by writing a guessing game&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#6-math-questions"&gt;
  &lt;/a&gt;
  6. Math questions &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g4A_OWEJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b6xw2sb8elt35m6e9jlz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g4A_OWEJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b6xw2sb8elt35m6e9jlz.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;That can be fun, you create a game that generates random math questions (like 1304+222), with an open answer or a list of different propositions for the user. The code automatically checks if the result is right or wrong. Then you can do a scorekeeper, a timer, let the user set a difficulty, add a leaderboard, and make it even more customizable allowing the user to filter questions!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codereview.stackexchange.com/questions/84413/maths-qa-game-in-javascript"&gt;Stack Exchange - Code Review - Maths Q&amp;amp;A game in JavaScript&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#7-other-games"&gt;
  &lt;/a&gt;
  7. Other games &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IBypZp4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v460skp93gnhmnthzqcb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IBypZp4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v460skp93gnhmnthzqcb.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;--&amp;gt; Card Game, Rock-Paper-Scissors, Tic tac toe, Pong game...&lt;/p&gt;

&lt;p&gt;Actually, you can build lots of games with javascript, but I think these four do quite a lot in making you progress in javascript. A card game is fun to do and can be easily played directly on the console, without adding the full visual stuff. For example, I built a blackjack game completely playable from the console. Then &lt;a href="https://codepen.io/DevLorenzo/pen/ExgpPEO"&gt;Rock paper scissor&lt;/a&gt; and &lt;a href="https://codepen.io/DevLorenzo/pen/RwoNOPZ"&gt;Tic tac toe&lt;/a&gt;. You can do the first two players game, or even build a bot (more for the tic tac toe game in reality) to allow even a single user to play. &lt;br&gt;
The &lt;a href="https://codepen.io/gdube/pen/JybxxZ"&gt;pong game&lt;/a&gt; can allow you to do a more advanced 2d game with real-time updates (animations).&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#c-social-amp-websites"&gt;
  &lt;/a&gt;
  c) Social &amp;amp; Websites &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#8-login-signup"&gt;
  &lt;/a&gt;
  8. Log-in, Sign-up... &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wFSNNgfP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ckeuagbniwofkaaljt5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wFSNNgfP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ckeuagbniwofkaaljt5.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Now we start with some more social / website-focused content. First I suggest you be able to quickly write a nice looking and well-performing Log-in / Sign-up system for websites, I'm sure you will need it someday, and then you will remember this training, and you will manage the situation like a pro!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=l96bQuvUFto"&gt;A video by FrontendTips - Login / Signup panel in css and javascript (With source code)&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#9-filter"&gt;
  &lt;/a&gt;
  9. Filter &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qpATsdwz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ljn61r6uy7puk4tolr8z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qpATsdwz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ljn61r6uy7puk4tolr8z.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;That's easy as important to know how to do a basic filter. in pure javascript, you can need it to filter elements in an array. In real-life examples, you need to filter comments, posts, articles, videos... For example you can build, using the dev.to API, a webpage that allow the user to filter the articles. You have infinite way to filter articles!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.w3schools.com/howto/howto_js_filter_lists.asp"&gt;HOW TO Filter/Search List- W3school&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#11-todo-list"&gt;
  &lt;/a&gt;
  11. To-do list &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fJ9zUFfJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9i1b2w94qerqhqqxa2z.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fJ9zUFfJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9i1b2w94qerqhqqxa2z.gif" alt="giphy"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The to-do list. How famous... Do you know notion? I love this app a lot, but I'm sure that you can improve the user experience. Try building something that makes planning a fun thing!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.w3schools.com/howto/howto_js_todolist.asp"&gt;HOW TO create a to-do list - W3School&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#10-social"&gt;
  &lt;/a&gt;
  10. Social &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Now let's get to the really serious stuff, with javascript and web development you can build really complex things, so why not build a social with front-end and back-end coded in javascript? &lt;/p&gt;

&lt;p&gt;&lt;a href="https://pusher.com/tutorials/social-network-javascript"&gt;Build a simple social network with javascript - pusher.com&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#12-portfolio"&gt;
  &lt;/a&gt;
  12. Portfolio &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Hey, I actually wrote a full article about that, whyyyy not checking it out right now? After leaving a like to this article for sure! &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/devlorenzo" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QtgKvHIX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--N0bOH9Ja--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/571015/3b1e2909-e87b-4fc7-b817-0673184568b0.gif" alt="devlorenzo image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/devlorenzo/how-to-finally-land-a-job-as-a-front-end-full-stack-developer-4emb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to escape from tutorial hell and get a job as a web dev 🔥&lt;/h2&gt;
      &lt;h3&gt;DevLorenzo ・ Mar  1 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;
  Other useful sources for &lt;strong&gt;you&lt;/strong&gt;
  &lt;br&gt;
&lt;a href="https://skillcrush.com/blog/projects-you-can-do-with-javascript/"&gt;20+ Projects You Can Do With JavaScript&lt;/a&gt;&lt;br&gt;
&lt;a href="https://jsbeginners.com/javascript-projects-for-beginners/"&gt;100+ JavaScript Projects for Beginners!&lt;/a&gt;&lt;br&gt;
&lt;a href="https://thesmartcoder.dev/9-awesome-projects-you-can-build-with-vanilla-javascript/#chapter-10"&gt;40+ JavaScript Projects For Your Portfolio&lt;/a&gt;&lt;br&gt;
&lt;a href="https://mikkegoes.com/javascript-projects-for-beginners/"&gt;17 JAVASCRIPT PROJECTS YOU CAN BUILD TO PERFECT YOUR CODING SKILLS&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/florinpop17/app-ideas"&gt;App ideas - At GitHub&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=3gKhcPLOFdA"&gt;5 Vanilla JavaScript Projects for Beginners&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.freecodecamp.org/news/javascript-projects-for-beginners/"&gt;40 JavaScript Projects for Beginners – Easy Ideas to Get Started Coding JS&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=3PHXvlpOkf4"&gt;Build 15 JavaScript Projects - Vanilla JavaScript Course&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=dtKciwk_si4"&gt;10 JavaScript Projects in 10 Hours - Coding Challenge 🔥&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.codementor.io/javascript-projects"&gt;Learn programming&lt;br&gt;
with curated JavaScript projects - codementor.io&lt;/a&gt;&lt;br&gt;


&lt;/p&gt;




&lt;p&gt;Thanks for reading and Happy coding ❤&lt;/p&gt;

&lt;p&gt;Recommended readings:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/garvitmotwani" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a_j3ZA-i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--sbZDVkQ4--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/370225/6b6fe3de-e499-475b-a235-622dc13de202.jpg" alt="garvitmotwani image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/garvitmotwani/8-javascript-tips-tricks-that-no-one-teaches-24g1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;8 JavaScript Tips &amp;amp; Tricks That No One Teaches 🚀&lt;/h2&gt;
      &lt;h3&gt;Garvit Motwani ・ Apr  6 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#es6&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/devlorenzo" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QtgKvHIX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--N0bOH9Ja--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/571015/3b1e2909-e87b-4fc7-b817-0673184568b0.gif" alt="devlorenzo image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/devlorenzo/the-ultimate-compilation-of-cheat-sheets-100-268g" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;The ultimate Cheat sheets compilation (200+) - 🔥🎁 / Roadmap to dev 🚀&lt;/h2&gt;
      &lt;h3&gt;DevLorenzo ・ Mar  2 ・ 17 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#giveaway"&gt;
  &lt;/a&gt;
  ⚡Giveaway ⚡
&lt;/h2&gt;

&lt;p&gt;We are giving away any course you need on Udemy. Any price any course.&lt;br&gt;
Steps to enter the giveaway&lt;br&gt;
--&amp;gt; React to this post (3 likes)&lt;br&gt;
--&amp;gt; &lt;a href="https://chipper-motivator-3112.ck.page/05710ea3d3"&gt;Subscribe to our Newsletter&lt;/a&gt; &lt;strong&gt;&amp;lt;--&lt;/strong&gt; Very important&lt;br&gt;
--&amp;gt; &lt;a href="https://twitter.com/DevLorenzo1"&gt;Follow me on Twitter&lt;/a&gt; &amp;lt;-- x2 Chances of winning&lt;/p&gt;

&lt;p&gt;The winner will be announced on May 1, Via Twitter&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#subscribe-to-my-newsletter"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://chipper-motivator-3112.ck.page/05710ea3d3"&gt;Subscribe to my Newsletter!&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;A loooong, and fun, weekly recap for you &lt;br&gt;
Free PDF version of my articles&lt;br&gt;
Highly customizable inbox&lt;br&gt;
That's --&amp;gt; free &amp;lt;-- and you help me!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Second Monitor: Friend or Foe?</title>
      <author>Anthony</author>
      <pubDate>Sat, 10 Apr 2021 13:07:18 +0000</pubDate>
      <link>https://dev.to/toymachine/second-monitor-friend-or-foe-2f9a</link>
      <guid>https://dev.to/toymachine/second-monitor-friend-or-foe-2f9a</guid>
      <description>&lt;p&gt;The perfect computer monitor setup does not exist. I find that often my needs change and my preferences shift, so that I'm rarely happy with my monitor situation for more than a few weeks at a time. &lt;/p&gt;

&lt;p&gt;A normal path people take is to use a single monitor and then to add a second. This will likely cost you under $150 (or will be a hassle-free ask from IT) and will simply mean plugging in just one HDMI or USB-C cord. Now you'll have twice the real estate (if not more).&lt;/p&gt;

&lt;p&gt;PC Magazine has some good tips on &lt;a href="https://www.pcmag.com/how-to/6-ways-to-improve-your-dual-monitor-setup"&gt;improving your second monitor experience&lt;/a&gt;. One thing they fail to mention, and it took me a long time to realize, is that a second widescreen monitor invites the same work habits as the main monitor. The dashboards, email programs, and social media accounts distracting you on Monitor 1 are easily dragged over to Monitor 2... where they still distract you, just not enough to close them out. &lt;/p&gt;

&lt;p&gt;My second monitor was a dumping ground for things I wanted to deal with later (or never) as well as being an all to convenient fit for ever-present emails and sometimes-present Youtube videos, Spotify playlists, and similar diversions. &lt;/p&gt;

&lt;p&gt;For a time I tried a vertical monitor in the second position. This was briefly an improvement because it forced a chance in my behavior -- windows were no longer as easy a fit so I had to think about what I was putting there. Also videos no longer looked as inviting and my email wasn't wide enough to do more than look out for incoming messages. &lt;/p&gt;

&lt;p&gt;I found a vertical monitor could improve productivity with long spreadsheets, long documents (like specifications and contracts), and to be good for text editors where large swathes of code or multiple components could be visible at once. &lt;/p&gt;

&lt;p&gt;Still, the distraction was there. I had used 2020 to construct a nearly distraction-free workplace, complete with a great desk, ergonomic chair, &lt;a href="https://helpatmyhome.com/quietest-fan/"&gt;super quiet fan&lt;/a&gt;, tangle-free power cords, a wonderful LED desk lamp for working late, and all the other things a mind bent on productivity could come up with. I even had my &lt;a href="https://dev.to/toymachine/secret-weapons-pen-and-paper-1nhb"&gt;pen and paper notes&lt;/a&gt; going, right next to my laptop... yet I had this second monitor and I couldn't stop myself from putting weapons-grade distractions on my second monitor. I'd catch myself checking into dashboards and analytics constantly when one or twice a day was sufficient. &lt;/p&gt;

&lt;p&gt;As you have likely guessed. I'm down to a single display and I'd urge you to try the same for a time as well. Don't go too small -- 15" on a laptop or 24-27" on a desktop is great -- but one clean, well-maintained space offers a fraction of the distraction of a multiple displays. &lt;/p&gt;

</description>
      <category>hardware</category>
      <category>display</category>
      <category>productivity</category>
      <category>code</category>
    </item>
    <item>
      <title>JSON web tokens are NOT meant for authenticating the same user repeatedly: Use session tokens instead</title>
      <author>Masa Kudamatsu</author>
      <pubDate>Sat, 10 Apr 2021 12:43:27 +0000</pubDate>
      <link>https://dev.to/masakudamatsu/json-web-tokens-are-not-meant-for-authenticating-the-same-user-repeatedly-use-session-tokens-instead-pno</link>
      <guid>https://dev.to/masakudamatsu/json-web-tokens-are-not-meant-for-authenticating-the-same-user-repeatedly-use-session-tokens-instead-pno</guid>
      <description>&lt;p&gt;There's a countless number of articles across the web that compare session tokens and JSON web tokens (JWTs) as a method of user authentication. It's really confusing for someone who is trying to create his/her &lt;em&gt;first&lt;/em&gt; full-stack web app (i.e. me myself). No one clearly explains pros and cons of each. (Maybe no one knows for sure).&lt;/p&gt;

&lt;p&gt;Spending several days doing research on the topic, I've come to a conclusion that I will go for session tokens, because JWTs are not meant to be used for repeatedly authenticating the same user. &lt;/p&gt;

&lt;p&gt;In a week's time, however, I'm sure I will forget why I've come to this conclusion. This topic is really complicated. This article is a memorandum for my future self and hopefully for you as well.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: I'm not a web security expert. What's written below may not be fully correct, although I do my best to get everything right. Post a comment if you think I'm wrong. I just want to know the truth.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#for-the-uninitiated"&gt;
  &lt;/a&gt;
  For the uninitiated
&lt;/h2&gt;

&lt;p&gt;I'll skip describing what session tokens and JWTs are. There are great explanations already out there. &lt;/p&gt;

&lt;p&gt;For session tokens, I recommend reading &lt;a href="https://www.sohamkamani.com/blog/2017/01/08/web-security-session-cookies/"&gt;Kamani (2017)&lt;/a&gt;, who provides the most concise introduction to session tokens I've seen (and why cookies are necessary for them). &lt;/p&gt;

&lt;p&gt;For JWTs, have a look at &lt;a href="https://medium.com/swlh/why-do-we-need-the-json-web-token-jwt-in-the-modern-web-8490a7284482"&gt;Calandra (2019)&lt;/a&gt;, who very well explains the context in which JWTs were born.&lt;/p&gt;

&lt;p&gt;To compare session tokens and JWTs on a level playing field, we first need to be clear about one thing about JWTs:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dont-store-jwts-in-localstorage"&gt;
  &lt;/a&gt;
  Don't store JWTs in localStorage
&lt;/h3&gt;

&lt;p&gt;Many tutorials on JWTs that I've seen demonstrate how a front end app can store JWTs in &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage"&gt;localStorage&lt;/a&gt;, and these tutorials always attract comments saying, "Don't store JWTs in localStorage, which is susceptible to cross-site scripting (XSS) attacks". I find &lt;a href="https://courses.reactsecurity.io/courses/react-security-fundamentals/302508-hardening-the-application/937470-steal-a-json-web-token"&gt;Chenkie (2020a)&lt;/a&gt; extremely clear about what these comments really mean, with a rare demonstration of how XSS attacks can be done. (It requires a sign up (free of charge), but this 2.5-minute video tutorial is really worth watching.)&lt;/p&gt;

&lt;p&gt;So JWTs should be stored in a cookie, just like session tokens need to be stored in a cookie. Cookies are susceptible to another kind of attacks known as cross-site request forgery (CSRF), but we can deal with it (at least partially, if I understand correctly) by using a library like &lt;a href="https://www.npmjs.com/package/csurf"&gt;&lt;code&gt;csurf&lt;/code&gt;&lt;/a&gt; (see &lt;a href="https://courses.reactsecurity.io/courses/react-security-fundamentals/328811-switching-to-cookies/937498-add-a-cross-site-request-forgery-token"&gt;Chenkie 2020b&lt;/a&gt; for detail).&lt;/p&gt;

&lt;p&gt;NOTE: &lt;a href="https://hasura.io/blog/best-practices-of-using-jwt-with-graphql/"&gt;Vladimir and Gopal (2019)&lt;/a&gt; advocate storing JWTs in memory, which is neither susceptible to XSS nor CSRF. Maybe this approach is worth checking out.&lt;/p&gt;

&lt;p&gt;So the relevant comparison for us is "the session tokens stored in a cookie" versus "the JWTs stored in a cookie".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cons-of-session-tokens"&gt;
  &lt;/a&gt;
  Cons of session tokens
&lt;/h2&gt;

&lt;p&gt;The major drawback of session tokens is that the logged-in users will get kicked out when either a different server deals with their request (when an app is served by several servers) or the same sever gets restarted (for fixing bugs etc.), because whether or not the user is authenticated is kept in a particular server. For detail, see &lt;a href="https://medium.com/swlh/why-do-we-need-the-json-web-token-jwt-in-the-modern-web-8490a7284482"&gt;Calandra (2019)&lt;/a&gt; for example.&lt;/p&gt;

&lt;p&gt;This problem can be solved by using a "session store" library such as &lt;code&gt;connect-redis&lt;/code&gt; (see &lt;a href="https://github.com/expressjs/session#compatible-session-stores"&gt;&lt;code&gt;express-session&lt;/code&gt;'s documentation&lt;/a&gt; for the list of session store libraries for Express.js). The idea is to keep session tokens in a dedicated database, and each time the user makes an HTTP request with their session token, the server receiving the request will consult this database to learn whether the request comes from the authenticated user or not. Performance suffers consequently, as retrieving data from a database always takes some time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PSAYrdd9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f72yvxiwbuoaxe7o5lgh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PSAYrdd9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f72yvxiwbuoaxe7o5lgh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;em&gt;Using session tokens requires a Redis or a database. Image source: &lt;a href="https://youtu.be/dgg1dvs0Bn4?t=106"&gt;Awad (2019)&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;JWTs solve this issue by making a server "stateless": the user’s authentication status is embedded in the token so the server doesn’t need to remember about it. Another server or a restarted server can tell whether the user is authenticated or not, by decoding the JWT sent along with each HTTP request. So the logged-in user won’t get kicked out. We don't need any database to store user authentication status. Performance won't suffer consequently.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cons-of-jwts"&gt;
  &lt;/a&gt;
  Cons of JWTs
&lt;/h2&gt;

&lt;p&gt;The downside of JWTs, however, is that the server, once issuing a JWT, cannot control when the token expires. Even after the user has logged out, an app cannot kill it with the server code or with the front-end code (as JWTs should be stored in a HTTP-only cookie for security). &lt;/p&gt;

&lt;p&gt;The longer the token lives, the higher the risk of getting it stolen. So we want to set a JWT to expire in a short period of time, say, 15 minutes. Then the user experience suffers: each user will be forced to log out while using the app every 15 minute. That's terrible.&lt;/p&gt;

&lt;p&gt;Extending its expiration date (i.e. refreshing the token) requires a "refresh token" to be issued to the user as well as being stored in a database. When the token expires, the server will check the refresh token sent with a HTTP request and verify it against the one stored in the database. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2HfAnjAf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bp3krynmchi9q0b3q7l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2HfAnjAf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bp3krynmchi9q0b3q7l.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;em&gt;JSON web tokens require a Redis or a database for storing refresh tokens. Image: adapted from &lt;a href="https://youtu.be/dgg1dvs0Bn4?t=106"&gt;Awad (2019)&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This sounds familiar... Yes, it's the same as session tokens, which need to be stored in a database for different servers to verity the user authentication status. JWTs should have been a solution to this problem, but now we're back to the same situation: accessing database to verify the user authentication status. And it's more complicated: we're now not checking the token itself, but checking the token issued to refresh the original token... This is why &lt;a href="https://youtu.be/dgg1dvs0Bn4"&gt;Awad (2019)&lt;/a&gt; says he uses session tokens, not JWTs, for a simple web app.&lt;/p&gt;

&lt;p&gt;On the other hand, session tokens can be destroyed in the server code, say, when the user logs out. Extending the validity of sessions is straightforward, just by setting &lt;a href="https://github.com/expressjs/session#rolling"&gt;the &lt;code&gt;rolling&lt;/code&gt; option&lt;/a&gt; to be &lt;code&gt;true&lt;/code&gt; with &lt;code&gt;express-session&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summing-up"&gt;
  &lt;/a&gt;
  Summing up
&lt;/h2&gt;

&lt;p&gt;So the major benefit of using JWTs, improving performance by ditching the database of session tokens, is completely overturned by the need of a refresh token database to avoid forcing the user to log out every now and then. Well, not completely, to be exact. &lt;a href="https://dev.toWhy%20I%20haven't%20been%20using%20JWT%20tokens%20for%20Authentication"&gt;Awad (2019)&lt;/a&gt; points out that the frequency of database access is minimized with JWTs: the server needs to consult the refresh token database only when a JWT expires while it needs to access to the session token database each time the user sends a HTTP request. But this difference becomes smaller and smaller with a shorter lifetime of JWTs for strengthening security.&lt;/p&gt;

&lt;p&gt;Once I understand all this, then I finally figure out what &lt;a href="http://cryto.net/~joepie91/blog/2016/06/13/stop-using-jwt-for-sessions/"&gt;Slootweg (2016)&lt;/a&gt; means by saying JWTs are not meant to be used to manage user sessions. By design, JWTs are not suitable for repeatedly authenticating users. The benefits of JWTs will be compromised once we start dealing with user sessions. &lt;/p&gt;

&lt;p&gt;That's how I have interpreted the difference between session tokens and JWTs. If I miss something, please let me know. I'm eager to learn more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#before-we-go"&gt;
  &lt;/a&gt;
  Before we go…
&lt;/h2&gt;

&lt;p&gt;This article is published in a publication called Web Dev Survey from Kyoto. The idea is to hold a virtual conference on web development in Kyoto City, the ancient capital of Japan, where I’m living now. After each article (which acts as a seminar talk), we take you to the tour around the city.&lt;br&gt;
Today the famous cherry blossoms are mostly fallen, unfortunately. However, kerria is now blooming in brilliant yellow across many places in Kyoto City:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Daikaku-ji"&gt;Daikaku-ji Temple&lt;/a&gt; (photographed by the author on 5 April 2021)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FeFtE4mi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/892fdnupjubcldh9t1ng.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FeFtE4mi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/892fdnupjubcldh9t1ng.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Matsunoo-taisha"&gt;Matuno'o Shrine&lt;/a&gt; (photographed by the author on 10 April 2021)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DQSsfZmV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f6x9gzkviajsfgefn5xz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DQSsfZmV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f6x9gzkviajsfgefn5xz.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;Ben Awad (2019) "&lt;a href="https://youtu.be/dgg1dvs0Bn4"&gt;Why I haven't been using JWT tokens for Authentication&lt;/a&gt;", YouTube, Apr. 21, 2019.&lt;/p&gt;

&lt;p&gt;Mariano Calandra (2019) "&lt;a href="https://medium.com/swlh/why-do-we-need-the-json-web-token-jwt-in-the-modern-web-8490a7284482"&gt;Why do we need the JSON Web Token (JWT) in the modern web?&lt;/a&gt;", &lt;em&gt;Start It Up&lt;/em&gt;, Sep. 6, 2019.&lt;/p&gt;

&lt;p&gt;Ryan Chenkie (2020a) “&lt;a href="https://courses.reactsecurity.io/courses/react-security-fundamentals/302508-hardening-the-application/937470-steal-a-json-web-token"&gt;Steal a JSON Web Token&lt;/a&gt;”, &lt;em&gt;React Security Fundamentals&lt;/em&gt;, May 2020.&lt;/p&gt;

&lt;p&gt;Ryan Chenkie (2020b) "&lt;a href="https://courses.reactsecurity.io/courses/react-security-fundamentals/328811-switching-to-cookies/937498-add-a-cross-site-request-forgery-token"&gt;Add a Cross-site Request Forgery Token&lt;/a&gt;", &lt;em&gt;React Security Fundamentals&lt;/em&gt;, May 2020.&lt;/p&gt;

&lt;p&gt;Soham Kamani (2017) “&lt;a href="https://www.sohamkamani.com/blog/2017/01/08/web-security-session-cookies/"&gt;Web security essentials — Sessions and cookies&lt;/a&gt;”, &lt;em&gt;sohamkamani.com&lt;/em&gt;, Jan. 8, 2017.&lt;/p&gt;

&lt;p&gt;Sven Slootweg (2016) “&lt;a href="http://cryto.net/~joepie91/blog/2016/06/13/stop-using-jwt-for-sessions/"&gt;Stop using JWT for sessions&lt;/a&gt;”, &lt;em&gt;joepie91’s Ramblings&lt;/em&gt;, Jun. 13, 2016.&lt;/p&gt;

&lt;p&gt;Vladimir and Tanmai Gopal (2019) "&lt;a href="https://hasura.io/blog/best-practices-of-using-jwt-with-graphql/"&gt;The Ultimate Guide to handling JWTs on frontend clients (GraphQL)&lt;/a&gt;", &lt;em&gt;Hasura Blog&lt;/em&gt;, Sep. 9, 2019.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>expressjs</category>
      <category>jsonwebtoken</category>
      <category>security</category>
    </item>
    <item>
      <title>My Visual Studio Code Setup!</title>
      <author>PyBash</author>
      <pubDate>Sat, 10 Apr 2021 12:30:48 +0000</pubDate>
      <link>https://dev.to/pybash/my-visual-studio-code-setup-32po</link>
      <guid>https://dev.to/pybash/my-visual-studio-code-setup-32po</guid>
      <description>&lt;h1&gt;
  &lt;a href="#why-visual-studio-code"&gt;
  &lt;/a&gt;
  Why &lt;a href="https://code.visualstudio.com"&gt;Visual Studio Code&lt;/a&gt;?
&lt;/h1&gt;

&lt;p&gt;So, this post has an awkward start, but please don't mind that. So, why did I choose &lt;a href="https://code.visualstudio.com"&gt;VS Code&lt;/a&gt; after all? Well, it's a long story - First when I started, I used to use different IDEs for different languages, like &lt;a href="https://www.jetbrains.com/idea/"&gt;IntelliJ&lt;/a&gt; for Java, &lt;a href="https://www.jetbrains.com/pycharm/"&gt;PyCharm&lt;/a&gt; for Python, etc. And, they were great but for every language, a separate IDE just didn't seem right to me! So I moved to &lt;a href="https://www.sublimetext.com"&gt;Sublime Text&lt;/a&gt; and it was great, I used it for many days, until one day when suddenly my &lt;a href="https://python.org/"&gt;Python&lt;/a&gt; and &lt;a href="https://www.sublimetext.com"&gt;Sublime&lt;/a&gt; broke! So, I had to change. I later found that my &lt;code&gt;Tcl/Tk&lt;/code&gt;(basically Tkinter) module had &lt;strong&gt;broken&lt;/strong&gt;! So, I switched over to &lt;a href="https://atom.io"&gt;Atom&lt;/a&gt;! And I had just one problem, It was not exactly an IDE it was just a Code Editor! And after all this, I came across &lt;a href="https://code.visualstudio.com"&gt;VS Code&lt;/a&gt; - The perfect IDE/Code editor for me! And now I have been using it for more than &lt;strong&gt;1 and 1/2 years&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;NOTE: Do check all of these amazing editors and IDEs out! All of them deserve equal respect!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#so-my-setup"&gt;
  &lt;/a&gt;
  So, my setup?
&lt;/h1&gt;

&lt;p&gt;Yeah, so now the actual fun stuff, my setup!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rwbqS6Ca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1t2p6oz2dm3cmovrle91.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rwbqS6Ca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1t2p6oz2dm3cmovrle91.png" alt="my-setup"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#themes-and-customisation"&gt;
  &lt;/a&gt;
  Themes and Customisation
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#my-theme"&gt;
  &lt;/a&gt;
  My Theme
&lt;/h2&gt;

&lt;p&gt;Well, my theme also has a little story - I  used to use &lt;a href="https://marketplace.visualstudio.com/items?itemName=GitHub.github-vscode-theme"&gt;GitHub Dark&lt;/a&gt; as my theme, but recently I have switched over to &lt;a href="https://marketplace.visualstudio.com/items?itemName=kohlbachjan.the-best-theme"&gt;The Best Theme&lt;/a&gt; and I do not regret doing that! I love its colors and color scheme - they are so vibrant! It's just awesome although it doesn't have many downloads! (Only 8K)!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1EYnCPcK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kohlbachjan.gallerycdn.vsassets.io/extensions/kohlbachjan/the-best-theme/2.0.5/1614456574849/Microsoft.VisualStudio.Services.Icons.Default" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1EYnCPcK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kohlbachjan.gallerycdn.vsassets.io/extensions/kohlbachjan/the-best-theme/2.0.5/1614456574849/Microsoft.VisualStudio.Services.Icons.Default" alt="the-best-theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-icon-packs"&gt;
  &lt;/a&gt;
  My Icon Packs
&lt;/h2&gt;

&lt;p&gt;I won't go into much detail with this! I'll just list them!&lt;/p&gt;

&lt;p&gt;File Icon Theme - &lt;a href="https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme"&gt;Material Icon Theme&lt;/a&gt;&lt;br&gt;
Product Icon Theme - &lt;a href="https://marketplace.visualstudio.com/items?itemName=antfu.icons-carbon"&gt;Carbon Product Icons&lt;/a&gt;&lt;br&gt;
Previously Used Prod. Icon Theme - &lt;a href="https://marketplace.visualstudio.com/items?itemName=miguelsolorio.fluent-icons"&gt;Fluent Icons&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u4EB5-iy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://antfu.gallerycdn.vsassets.io/extensions/antfu/icons-carbon/0.2.2/1615284100314/Microsoft.VisualStudio.Services.Icons.Default" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4EB5-iy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://antfu.gallerycdn.vsassets.io/extensions/antfu/icons-carbon/0.2.2/1615284100314/Microsoft.VisualStudio.Services.Icons.Default" alt="carbon-icons"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#other-customization"&gt;
  &lt;/a&gt;
  Other Customization
&lt;/h2&gt;

&lt;p&gt;My Font - &lt;a href="https://github.com/tonsky/FiraCode"&gt;Fira Code&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/tonsky/FiraCode/releases/download/5.2/Fira_Code_v5.2.zip"&gt;Direct Download Link&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#settings-i-dont-even-wanna-talk-about-this-madness"&gt;
  &lt;/a&gt;
  Settings! - I don't even wanna talk about this madness!
&lt;/h1&gt;

&lt;p&gt;Just poking in - I really love AutoSave!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"python.analysis.autoImportCompletions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"python.analysis.completeFunctionParens"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;/*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Terminal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;*/&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"terminal.integrated.profiles.windows"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Git Bash"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"E:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;Git&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;bin&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;bash.exe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"overrideName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Command Prompt"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;Windows&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;system32&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;cmd.exe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"overrideName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Cygwin"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"E:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;Cygwin&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;bin&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;bash.exe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"args"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"--login"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"overrideName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"terminal.integrated.shell.windows"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"E:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;Git&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;bin&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;bash.exe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"terminal.integrated.cursorStyle"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"line"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;/*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Files&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;*/&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"files.autoSave"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"afterDelay"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"files.autoSaveDelay"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"files.autoGuessEncoding"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"files.insertFinalNewline"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"files.associations"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"*.txt"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"plaintext"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;/*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Editor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;*/&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"editor.suggestSelection"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"first"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"editor.formatOnSave"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"editor.formatOnType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"editor.fontLigatures"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"editor.fontFamily"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;/*Fira&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Code&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;added&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;manually*/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"'Fira Code', 'Courier New', monospace"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"editor.defaultFormatter"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"esbenp.prettier-vscode"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"editor.definitionLinkOpensInPeek"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;/*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Editor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;(Format&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Specific)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;*/&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"[javascript]"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"editor.defaultFormatter"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"esbenp.prettier-vscode"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"[json]"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"editor.defaultFormatter"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"esbenp.prettier-vscode"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;/*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Workbench&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;*/&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"workbench.productIconTheme"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"icons-carbon"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"workbench.colorTheme"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"The Best Theme"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"workbench.iconTheme"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"material-icon-theme"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"workbench.editorAssociations"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"viewType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"jupyter.notebook.ipynb"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"filenamePattern"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"*.ipynb"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;/*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Other&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;VS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Code&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Stuff&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;*/&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"explorer.incrementalNaming"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"smart"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"debug.node.autoAttach"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"on"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"window.zoomLevel"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"python.defaultInterpreterPath"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;Users&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;{USERNAME}&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;anaconda3&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;python.exe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;/*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="err"&gt;rd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Party&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Extensions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;*/&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;/*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Pylance&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;*/&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"python.languageServer"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Pylance"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;/*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Live&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Server&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;*/&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"liveServer.settings.donotShowInfoMsg"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"liveServer.settings.donotVerifyTags"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;/*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Visual&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Studio&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;IntelliCode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;*/&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"vsintellicode.modify.editor.suggestSelection"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"automaticallyOverrodeDefaultValue"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;/*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Kite&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;*/&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"kite.showWelcomeNotificationOnStartup"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;/*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;CodeRunner&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;*/&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"code-runner.runInTerminal"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;/*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;GitHub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;*/&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"githubPullRequests.remotes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"origin_new"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"origin"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"githubPullRequests.queries"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"label"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Open PRs"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"query"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"is:pr is:open"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"label"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Closed PRs"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"query"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"is:pr is:closed"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"githubIssues.queries"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"label"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"My Open Issues"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"query"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"is:open author:@me"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"label"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"My Closed Issues"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"query"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"is:closed author:@me"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"label"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"py_everything Open Issues"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"query"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"author:@me state:open repo:Play4Tutorials/py_everything sort:created-desc"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"label"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"py_everything Closed Issues"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"query"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"author:@me state:closed repo:Play4Tutorials/py_everything sort:created-desc"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;/*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;TabNine&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;*/&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"tabnine.experimentalAutoImports"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;/*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;TODO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Highlight&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;*/&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"todohighlight.keywords"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"FIX:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"rgb(255, 0, 0)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"backgroundColor"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"rgba(255, 0, 0, 0.2)"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"TIP:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"rgb(0, 255, 0)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"backgroundColor"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"rgba(0, 255, 0, 0.2)"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"TODO:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"rgb(255, 0, 0)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"backgroundColor"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"rgba(0, 0, 225, 0.5)"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"NOTE:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"color"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"rgb(255, 255, 0)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"backgroundColor"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"rgba(255, 255, 0, 0.2)"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#extensions"&gt;
  &lt;/a&gt;
  Extensions
&lt;/h1&gt;

&lt;p&gt;Well, I have a lot of extensions, so I am going to give the ones here that I actually use!&lt;/p&gt;

&lt;p&gt;My Extensions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-close-tag"&gt;Auto Close Tag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag"&gt;Auto Rename Tag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=alefragnani.Bookmarks"&gt;Bookmarks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer-2"&gt;Bracket Pair Colorizer 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools"&gt;C/C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csharp"&gt;C#&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=wmaurer.change-case"&gt;change-case&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner"&gt;Code Runner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=usernamehw.errorlens"&gt;Error Lens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint"&gt;ESLint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=mhutchie.git-graph"&gt;GitGraph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=GitHub.vscode-pull-request-github"&gt;GitHub Pull Requests and Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens"&gt;GitLens - git supercharged&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow"&gt;indent-rainbow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=WyattFerguson.jinja2-snippet-kit"&gt;Jinja2 Snippet Kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-toolsai.jupyter"&gt;Jupyter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=kiteco.kite"&gt;Kite Autocomplete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.live-sass"&gt;Live Sass Compiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer"&gt;Live Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare"&gt;Live Share&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one"&gt;Markdown All in One&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=techer.open-in-browser"&gt;open in browser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode"&gt;Prettier - Code Formatter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance"&gt;Pylance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-python.python"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=KevinRose.vsc-python-indent"&gt;Python Indent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=dongli.python-preview"&gt;Python Preview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=frhtylcn.pythonsnippets"&gt;python snippets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=LittleFoxTeam.vscode-python-test-adapter"&gt;Python Test Explorer UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=tht13.rst-vscode"&gt;RST Preview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=burkeholland.simple-react-snippets"&gt;Simple React Snippets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=TabNine.tabnine-vscode"&gt;TabNine Autocomplete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=hbenl.vscode-test-explorer"&gt;Test Explorer UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=wayou.vscode-todo-highlight"&gt;TODO Highlight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=VisualStudioExptTeam.vscodeintellicode"&gt;Visual Studio IntelliCode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion?
&lt;/h1&gt;

&lt;p&gt;Well, so it ended at last! I would just like to say that - &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Everyone has different opinions. And I do not want to say other editors are bad or VS Code is better - it's just that I like VS Code more! You might like Atom more or Sublime! This varies from person to person - and I completely agree with that!&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>vscode</category>
      <category>extension</category>
      <category>theme</category>
      <category>editor</category>
    </item>
    <item>
      <title>Github Skyline</title>
      <author>Aventure20</author>
      <pubDate>Sat, 10 Apr 2021 12:28:03 +0000</pubDate>
      <link>https://dev.to/aventure20/github-skyline-5hnk</link>
      <guid>https://dev.to/aventure20/github-skyline-5hnk</guid>
      <description>&lt;p&gt;Do you know this functionality of github&lt;br&gt;
&lt;a href="https://skyline.github.com"&gt;https://skyline.github.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>skyline</category>
      <category>new</category>
      <category>git</category>
    </item>
    <item>
      <title>How I Stay Up To Date</title>
      <author>Johannes Scharlach</author>
      <pubDate>Sat, 10 Apr 2021 12:27:31 +0000</pubDate>
      <link>https://dev.to/johannes_scha/how-i-stay-up-to-date-iik</link>
      <guid>https://dev.to/johannes_scha/how-i-stay-up-to-date-iik</guid>
      <description>&lt;p&gt;I've managed to stay in touch with what is happening in the React world, the Node.js world and also keep on updating my engineering management skills. So recently some colleagues asked me to share my sources.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learning-new-skills-quickly"&gt;
  &lt;/a&gt;
  Learning New Skills Quickly
&lt;/h2&gt;

&lt;p&gt;Whenever I want to learn a new topic, I try to find a hand full of domain experts – people who are really top notch in this field – and learn from them. Usually by following them on Twitter, reading their Blogs and subscribing to their newsletters. And then I practice. It's incredible how quickly you make progress when you have some direction from domain experts and put in time and effort to practice what you now know. Just 2 weeks of this make it possible for me to start having in depth conversations about the topic.&lt;/p&gt;

&lt;p&gt;Oren Ellenbogen has described a very similar approach at a conference talk. I fully recommend watching this.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/9edq00JwNzg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#twitter"&gt;
  &lt;/a&gt;
  Twitter
&lt;/h2&gt;

&lt;p&gt;Right now my most important source of info is Twitter. Here I have a few people I'm following&lt;/p&gt;

&lt;p&gt;React &amp;amp; Node.js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/kentcdodds"&gt;Kent C. Dodds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/ryanflorence"&gt;Ryan Florence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/sebmck"&gt;Sebastian McKenzie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/dan_abramov"&gt;Dan Abramov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/acdlite"&gt;Andrew Clark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/sophiebits"&gt;Sophie Alpert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/buildsghost"&gt;Jamie Kyle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Technical Excellence &amp;amp; Tech Entrepreneurship&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/mipsytipsy"&gt;Charity Majors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/lizthegrey"&gt;Liz Fong-Jones&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/rauchg"&gt;Guillermo Rauch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/monicalent"&gt;Monica Lent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/KentBeck"&gt;Kent Beck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/martinfowler"&gt;Martin Fowler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/b0rk"&gt;Julia Evans&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#newsletters"&gt;
  &lt;/a&gt;
  Newsletters
&lt;/h2&gt;

&lt;p&gt;With my newsletters I like to have a mix of content from individuals who write their own blog posts and curators who link to many different blogs. Keeping updated with the content of an individual allows some consistency and I understand their references to previous content. Curators allow me to open my mind to new content continuously&lt;/p&gt;

&lt;p&gt;&lt;a href="https://kentcdodds.com/"&gt;Kent C. Dodds&lt;/a&gt; has a focus on testing &amp;amp; React. You can subscribe to his newsletter at the bottom of the page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://softwareleadweekly.com/"&gt;SoftwareLeadWeekly&lt;/a&gt; by Oren Ellenbogen is helping me stay up to date as a manager and tech leader. Oren also has a book, which I found ok but it didn't influence me too much. His mailing list contains info which is more geared towards managers, but I believe that any engineer profits from that knowledge.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://leaddev.com/"&gt;LeadDev&lt;/a&gt; also has a great newsletter (at the bottom) focussed on all sorts of tech leadership topics. They also organise some wonderful (virtual) conferences which I previously attended.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.stefanjudis.com/newsletter/"&gt;Stefan Judis&lt;/a&gt; has a very humble tone in his newsletter. He writes stuff which is just fun to follow and very relatable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://x-team.com/"&gt;X-Team&lt;/a&gt; has a curation of usually technical documents. Sometimes they also highlight some specific libraries which &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#from-engineer-to-manager"&gt;
  &lt;/a&gt;
  From Engineer to Manager
&lt;/h2&gt;

&lt;p&gt;I've previously written about even more &lt;a href="https://dev.to/johannes_scha/getting-into-engineering-management-useful-resources-to-start-thinking-like-a-manager-57gm"&gt;resources which help with the transition to becoming an Engineering Manager&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cover photo by &lt;a href="https://unsplash.com/@scottsweb?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Scott Evans&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/renew?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>career</category>
    </item>
    <item>
      <title>My Approach to Learning Programming Concepts - When, Why?</title>
      <author>Fikra_Dev</author>
      <pubDate>Sat, 10 Apr 2021 11:50:52 +0000</pubDate>
      <link>https://dev.to/fikradev/my-approach-to-learning-programming-concepts-when-why-3d57</link>
      <guid>https://dev.to/fikradev/my-approach-to-learning-programming-concepts-when-why-3d57</guid>
      <description>&lt;p&gt;While my coding journey might be young, there are several observations that I have made.   One of these observations surrounds how programming concepts are taught and how we as learners interpret the concepts.&lt;/p&gt;

&lt;p&gt;Now, in this day and age there are a million ways and a million sources that facilitates someone learning to code without going to college or a Bootcamp.  Some of the most notable include FreeCodeCamp, YouTube, Udemy and we could go on forever.  But what I think is lost upon students of code, and it happened to me when I just started out, was not asking the right questions in order to cement or clear up our understanding of a concept. &lt;/p&gt;

&lt;p&gt;With that in mind, I am going to briefly explain the approach that I have personally taken to take my understanding of programming concepts to the next level.  &lt;/p&gt;

&lt;p&gt;Now, a lot these concepts, no matter the language or framework are taught in abstraction.  You understand the syntax of the language, you know how to create a variable etc. At the moment the instructor or lecturer is teaching you the concept of say, Arrays.  He then gives you some data and tells you to solve the problem and you do because at that moment you are learning Arrays.  &lt;/p&gt;

&lt;p&gt;But as a student of code one should not be just following along blindly and copying the code.  As a student of code, one should be actively asking themselves two questions when learning a programming concept, when and why.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when"&gt;
  &lt;/a&gt;
  When?
&lt;/h3&gt;

&lt;p&gt;Since adopting this process in my learning, whenever I am introduced to a new concept the first question I ask myself is, when would I use this?  For example, I am learning about Arrays in JavaScript, when would I use an Array? &lt;/p&gt;

&lt;p&gt;When is an interrogative word and in that vein it leads you to more questions and more questions and by the end of it the concept is cemented.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why"&gt;
  &lt;/a&gt;
  Why?
&lt;/h3&gt;

&lt;p&gt;The second question I ask myself is why? Why use this concept over another.  Why use Array.Map() over Array.forEach(). One why will lead to another and then another but I guarantee you that this will enhance you understanding of any concept.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;These are the steps that I have taken in my young coding journey.  They might not work for everyone, however, they  helped me significantly improved my understanding of concepts and simultaneously my confidence in knowing when and where to apply concepts.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks for the taking the time out to read my post. It is truly appreciated.  If you want to know more about my journey follow me at:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Twitter: @fikra_dev&lt;/p&gt;

&lt;p&gt;Github: &lt;a href="https://github.com/FikraDev"&gt;https://github.com/FikraDev&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>A free and elegant VS Code theme that does not hurt your eyes.</title>
      <author>michael-andreuzza</author>
      <pubDate>Sat, 10 Apr 2021 11:14:00 +0000</pubDate>
      <link>https://dev.to/michaelandreuzza/a-free-and-elegant-vs-code-theme-that-does-not-hurt-your-eyes-3hji</link>
      <guid>https://dev.to/michaelandreuzza/a-free-and-elegant-vs-code-theme-that-does-not-hurt-your-eyes-3hji</guid>
      <description>&lt;p&gt;Hello everyone.&lt;br&gt;
I have been a bit saturated with my side project this past week so I needed a small disconnection and I always wanted to make VSCode themes. &lt;/p&gt;

&lt;p&gt;The goal was to make it inspired by one of my templates on &lt;a href="http://wickedtemplates.com"&gt;wickedtemplates.&lt;/a&gt; but, I soon realized it was too bright.&lt;/p&gt;

&lt;p&gt;Another reason is that I can't find themes that I 100% like, so I have been using Ayu themes, which are superb.&lt;/p&gt;

&lt;p&gt;I will be making more themes so keep an eye if you are tired of neons and green letters.&lt;/p&gt;

&lt;p&gt;You can grab it here:&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;h2&gt;
  &lt;a href="#wickedbetamax"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=wicked-labs.wicked-betamax"&gt;WickedBetamax&lt;/a&gt;
&lt;/h2&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;p&gt;I really like colours, that's why I made &lt;a href="https://colorsandfonts.com"&gt;colorsandfonts.&lt;/a&gt; too.&lt;br&gt;
&lt;strong&gt;I will be updating the theme often so feel free to test it and drop some feedback.&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#about-the-theme"&gt;
  &lt;/a&gt;
  About the theme
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#wickedbetamax-theme-for-vs-code"&gt;
  &lt;/a&gt;
  WickedBetamax Theme for VS Code
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vsa1PYSI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EymsxnzWUAESYRE%3Fformat%3Djpg%26name%3Dlarge" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vsa1PYSI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EymsxnzWUAESYRE%3Fformat%3Djpg%26name%3Dlarge" alt="Preview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Open &lt;strong&gt;Extensions&lt;/strong&gt; sidebar panel in VS Code. &lt;code&gt;View → Extensions&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Search for &lt;code&gt;WickedBetamax&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Install&lt;/strong&gt; to install it.&lt;/li&gt;
&lt;li&gt;Code &amp;gt; Preferences &amp;gt; Color Theme &amp;gt; &lt;strong&gt;WickedBetamax&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Optional: Use the recommended settings below for best experience&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#recommended-settings"&gt;
  &lt;/a&gt;
  Recommended Settings
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// This is are my personal prefferences&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;workbench.colorTheme&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;WickedBetmax&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;editor.fontFamily&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;'Cascadia Code' , Consolas, 'Courier New', monospace&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;editor.fontSize&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;editor.lineHeight&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;38&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;editor.letterSpacing&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;files.trimTrailingWhitespace&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;editor.fontWeight&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;400&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prettier.eslintIntegration&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;editor.cursorStyle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;line&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;editor.cursorWidth&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;editor.cursorBlinking&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;phase&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;editor.renderWhitespace&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;all&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#colours"&gt;
  &lt;/a&gt;
  Colours
&lt;/h2&gt;

&lt;p&gt;Blue: #06090f&lt;br&gt;
Yellow: #facc44&lt;br&gt;
Orange: #FB543F&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#feedback"&gt;
  &lt;/a&gt;
  Feedback
&lt;/h2&gt;

&lt;p&gt;Anything you wonder just contact me on twitter. &lt;a href="https://twitter.com/Mike_Andreuzza"&gt;https://twitter.com/Mike_Andreuzza&lt;/a&gt;&lt;/p&gt;

</description>
      <category>uiweekly</category>
      <category>vscode</category>
      <category>productivity</category>
    </item>
    <item>
      <title>How to Build Your Personal Brand as a Developer?</title>
      <author>Anand mohan</author>
      <pubDate>Sat, 10 Apr 2021 11:06:48 +0000</pubDate>
      <link>https://dev.to/itanand/how-to-build-your-personal-brand-as-a-developer-2jga</link>
      <guid>https://dev.to/itanand/how-to-build-your-personal-brand-as-a-developer-2jga</guid>
      <description>&lt;p&gt;Hello guys, Welcome to our series How to make a Personal Branding? Guy's, Don't worry I am Anand I am a full stack developer as well as Digital Marketer. I am here to help you.&lt;/p&gt;

&lt;p&gt;Today's  we are mostly target about these topics.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tr&gt;
&lt;th&gt;
1.
&lt;/th&gt;
&lt;th&gt;
2.&lt;/th&gt;
&lt;th&gt;
3.&lt;/th&gt;
&lt;th&gt;
4.&lt;/th&gt;
&lt;th&gt;
5.&lt;/th&gt;

&lt;th&gt;
6.&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
What is Personal Branding?
&lt;/td&gt;
&lt;td&gt;
Different between Corporate Branding and Individual Personal Branding?
&lt;/td&gt;

&lt;td&gt;
Why is Personal Branding Important?
&lt;/td&gt;
&lt;td&gt;
How to Build your Personal Brand?
&lt;/td&gt;
&lt;td&gt;
Benefits of Personal Branding?
&lt;/td&gt;
&lt;td&gt;
Conclusion
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;
 

&lt;p&gt;Let's get started with our very first question What is personal branding.&lt;/p&gt;

&lt;h2&gt;1. What is personal branding?&lt;/h2&gt;

&lt;p&gt;Branding is not just something that companies need to worry about. Individuals can also establish a personal brand. Individuals can also make a self brand.&lt;/p&gt;

&lt;p&gt;According to Wikipedia "Personal branding is the conscious and intentional effort to create and influence public perception of an individual to ultimately advance their career, increase their circle of influence, and have a larger impact."&lt;/p&gt;

&lt;p&gt;i.e. Personal branding basically involves putting yourself out there in a particular way to help and promote yourself. &lt;/p&gt;

&lt;h2&gt;2. Difference Between Corporate Branding and and Individuals Branding?&lt;/h2&gt;

&lt;p&gt;There is different type of branding like companies do branding for their products Corporate. In individual You have to promote yourself. &lt;/p&gt;

&lt;p&gt;To simplify this, for example, If you are developer and want to make your personal brand. And You you are good at Something ( Like Programming, Web development, App development and etc.) and you want to make your personal brand. Then it must that you have to promote yourself but how? Don't worry be with us in next section we are coming at this point.&lt;/p&gt;

&lt;h2&gt;3. Why is personal branding important?&lt;/h2&gt;

&lt;p&gt;Do you know why is personal branding important. Establishing a personal brand is very important because it gives you an identity in public places. People get to know about you that who you are and what you are doing and the impact you have created, and this establishes what you want people to think of when they see you or your work. This can help increase your connections and lets you meet people in similar fields.&lt;/p&gt;

&lt;p&gt;Either you can help them and create a stronger bonding. You have the chance to do something for yourself and for communities, for others.&lt;/p&gt;

&lt;p&gt;It also helps you to advance your career. When people like your work and projects, and get a sense of what you can offer, they might reach out to you to offer opportunities or freelancing gigs. This can be valuable work experience as you look for your jobs.&lt;/p&gt;

&lt;p&gt;It is very important to know that you are not only doing your personal branding, you are  also adding a one more diamond in your bag.&lt;/p&gt;

&lt;h2&gt;4. How to Build Personal Brand?&lt;/h2&gt;

&lt;p&gt;Building out your brand is a step-by-step process – you start little by little then it begins to grow.&lt;/p&gt;

&lt;p&gt;Here is an example of the Journey of Mine. Here The Character Anand is mine. &lt;/p&gt;

&lt;p&gt;Anand is starting her journey as a developer, and he decided to specialize in front-end development.&lt;/p&gt;

&lt;p&gt;Over the time, he's able to successfully create her portfolio so people can see their sorts of personal projects he's worked on. he's creating an organizing, on-brand LinkedIn profile so he can connect with professionals in his field.&lt;/p&gt;

&lt;p&gt;As he gains more experience in the skills, he started a YouTube channel to share content and tutorials about what he knows. He's also be part of many Organizations and become founder of some organization and cofound some companies.&lt;/p&gt;

&lt;p&gt;After Lots of Hard Work. Anand has successfully started building his personal brand, so people get to know her for what he does.&lt;/p&gt;

&lt;p&gt;There's no limit to how you can build your brand and you can't say that it's limited– it's an infinite process. So start with any of the way you are suitable, but the is Start now!&lt;/p&gt;

&lt;p&gt;Let's look at more details and the steps, Anand took to build his brand. I'll explain them one by one here.&lt;/p&gt;

&lt;h3&gt;a. Find your niche&lt;/h3&gt;

&lt;p&gt;In this tech world!, there are numerous areas you can specialize in, such as front-end development, back-end development, Full Stack Development, UI/UX, Cybersecurity, Data Science, machine learning, and many mores.&lt;/p&gt;

&lt;p&gt;As an individual, it is the best to be skilled in a particular field, so you can continue to develop your expertise over time. As you grow with time you can explore many areas with your specialization.&lt;/p&gt;

&lt;p&gt;Finding your niche basically involves identifying the field you are interested in, you are skilled in, and knowing what best works for you. And The Most Important way to find Your niche is know your ability and see where you are interested what is your personal experience tell.  That way, when someone wants to found a  organization that mentors other developer's to get there dream, for example, they'll probably think of Anand if they've seen his work.&lt;/p&gt;

&lt;p&gt;Then We are going to touch the major points where Anand follow his journey.&lt;/p&gt;


&lt;h4&gt;1. Create a bio&lt;/h4&gt;
&lt;br&gt;
A bio is a description of yourself. It doesn't really matter how long it is, as long as you get the information across.

&lt;p&gt;Your bio should include your full name, occupation, some of your accomplishments, and your hobbies (if you want). Having a bio is important for your brand, as it gives an overview of who you are.&lt;/p&gt;

&lt;p&gt;When writing your bio, you should use the third-person perspective.&lt;/p&gt;

&lt;p&gt;Here is some examples:&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Short Bio Example&lt;/i&gt;&lt;/p&gt;

&lt;p&gt;Anand Mohan is a front-end developer passionate about creating user-friendly and Creative Design and accessible web applications. he also wrote technical articles about various technologies in his blog.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Long Bio Example&lt;/i&gt;&lt;/p&gt;

&lt;p&gt;Anand Mohan is a Frontend Developer at CCTech, Pune, India. He has Completed his graduation from Rajasthan Technical University, Kota  Rajasthan (India). &lt;/p&gt;

&lt;p&gt;Anand specializes in various web technologies ranging from front-end to back-end and also speaks at tech events worldwide, where he leads workshops and sessions on new technologies that he works with.&lt;/p&gt;

&lt;p&gt;As a philanthropist, he also volunteers in helping out various NGOs in different activities in his community.&lt;/p&gt;

&lt;p&gt;John enjoys a good Netflix binge and can also be found hiking in the countryside.&lt;/p&gt;

&lt;h3&gt;2. Create your portfolio&lt;/h3&gt;

&lt;p&gt;A portfolio is your personal website that showcases projects that you've worked on. It is basically a way of putting together your projects and making them easily accessible.&lt;/p&gt;

&lt;p&gt;Creating a portfolio and putting it out there lets the public see your work and how skilled you are. This helps you promote yourself and showcase your expertise.&lt;/p&gt;

&lt;p&gt;You can either create one from scratch or use website builders like WordPress, Wix, and Using HTML &amp;amp; CSS.&lt;/p&gt;

&lt;h3&gt;3. Create your LinkedIn profile&lt;/h3&gt;

&lt;p&gt;LinkedIn is an online platform that gives recruiters access to your professional information. It also helps job seekers find opportunities to network and connect with each other and potential employers.&lt;/p&gt;

&lt;p&gt;It also functions as a social platform for people with various skills to connect with each other.&lt;/p&gt;

&lt;p&gt;Your LinkedIn profile is a means of posting your résumé online in a particular format. Here's what you'll include:&lt;/p&gt;

&lt;p&gt;Professional headshot for your profile picture.&lt;/p&gt;

&lt;p&gt;About / Bio&lt;/p&gt;

&lt;p&gt;Job Experience (both present and past)&lt;/p&gt;

&lt;p&gt;Education, licenses, and certifications&lt;/p&gt;

&lt;p&gt;Volunteer experience&lt;/p&gt;

&lt;p&gt;Skills&lt;/p&gt;

&lt;p&gt;By creating an organized profile and building the right network, you are also promoting yourself for future career opportunities.&lt;/p&gt;

&lt;h4&gt;Sharing Content&lt;/h4&gt;

&lt;p&gt;You can share content in different ways, such as starting a YouTube channel to share video content, creating a podcast, doing live-coding streams, and so on.&lt;/p&gt;

&lt;p&gt;Content sharing goes a long way in building your brand. It shows that you want to help others learn new things from the content you share.&lt;/p&gt;

&lt;p&gt;One of the most popular way to sharing content with people is using blogging, and making videos. &lt;/p&gt;

&lt;p&gt;As we learn new skills and gain experience, it's a great idea to share that knowledge with people. You can it and help others by writing technical and non-technical articles.&lt;/p&gt;

&lt;p&gt;To start, you will need a platform where you can share your writing skills and Blogs. You can also have your own personal blog.&lt;/p&gt;

&lt;p&gt;As with a portfolio, you can either create a blog from scratch or set one up using open blogging platforms such as&lt;br&gt;
Hash node or dev-to. You can also apply to write on large publishing sites like FreeCodecamp.&lt;/p&gt;

&lt;p&gt;Once you have a blog set up or an account on a publishing site, you can start sharing content like technical tutorials, guides, how you solved a problem, and so much more.&lt;/p&gt;

&lt;p&gt;Build or Join a Community&lt;br&gt;
A community consists of a group of people with similar interests and goals. I can't over-emphasize the importance of being part of a tech community – you'll find so many benefits, including:&lt;/p&gt;

&lt;p&gt;Career growth and job opportunities.&lt;/p&gt;

&lt;p&gt;A platform to share problems and find solutions.&lt;/p&gt;

&lt;p&gt;A way to find mentors to guide you.&lt;/p&gt;

&lt;p&gt;A Tech Community can be a large (Global) community such as freeCodeCamp or Hashnode or a small community, such as a local meetup. Join a couple, depending on your location and skills. You can either start one with some other people or join an existing community.&lt;/p&gt;

&lt;p&gt;You can go through this list to find some developer communities to join.&lt;/p&gt;

&lt;p&gt;Benefits of personal branding&lt;br&gt;
Now that you know how to build your brand, how can you benefit from it?&lt;/p&gt;

&lt;p&gt;Job opportunities&lt;br&gt;
When you are able to put your work out there and also create impact, it gives you opportunities to get job offers. You might also get invitations to speak at events because people want to work with you based on what they see you can do.&lt;/p&gt;

&lt;p&gt;Your brand speaks for you&lt;br&gt;
If you can build a successful personal brand, it can speak for you in public. There's a clear image of what you do, the type of work you do, and the impact you have made so far. This makes it easier for you to put yourself out there.&lt;/p&gt;

&lt;p&gt;You can influence others&lt;br&gt;
Your brand can help you spread your influence and increases your value. You are able to lead communities, mentor other developers, speak at seminars, organize workshops, and more – all because people can see what you do and who you are based on your branding.&lt;/p&gt;

&lt;p&gt;It helps to build your network&lt;br&gt;
Finally, having a large network gives you an edge. It lets you connect and network with individuals who might be more experienced in the field, which helps you grow and develop your skills.&lt;/p&gt;

&lt;p&gt;Conclusion: &lt;/p&gt;

&lt;p&gt;In this article, Mostly, We were  looked at what Personal Branding is, how to build your Personal Brand as a developer, What is Important of personal Branding, Benefits of Personal Branding, and Many mores.&lt;/p&gt;

&lt;p&gt;I hope, You have been able to get something relevant and good information that you want from this article. If you have any questions, you can reach out to me Search "itanand" on google and click on the first link. Thank You !! &lt;/p&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
