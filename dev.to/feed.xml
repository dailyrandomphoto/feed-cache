<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>New benchmark: Mezon Router VS Toro Router</title>
      <author>alexdodonov</author>
      <pubDate>Tue, 22 Jun 2021 04:41:33 +0000</pubDate>
      <link>https://dev.to/alexdodonov/new-benchmark-mezon-router-vs-toro-router-2khg</link>
      <guid>https://dev.to/alexdodonov/new-benchmark-mezon-router-vs-toro-router-2khg</guid>
      <description>&lt;p&gt;Hi all! Today we have one more benchmark.&lt;/p&gt;

&lt;p&gt;As usual we have two cases:&lt;/p&gt;

&lt;p&gt;http server accepts request, launches php script, which handles this request, and then all script data is removed from memory. All following requests are processed in the same way. In this case very critical to launch script as soon as possible and we do not have time for long pre-compilations and preparations. Because all of it will be lost after the script will finish working;&lt;br&gt;
php script is launching, initiating all internal components (and router is one of them) and then starting processing requests. This case can be organized via for example react-php. It differs from the previous case because we can spend reasonable time to pre-compile routes for faster processing.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-first-case"&gt;
  &lt;/a&gt;
  The first case
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// static routes&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/0'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$routes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateToroStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Toro&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;serve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$routes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/99'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$routes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateToroStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Toro&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;serve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$routes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/199'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$routes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateToroStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Toro&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;serve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$routes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// and so on up to /static/999 route&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// non static routes&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/0/1'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$routes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateToroStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Toro&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;serve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$routes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/99/1'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$routes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateToroStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Toro&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;serve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$routes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/199/1'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$routes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateToroStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Toro&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;serve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$routes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// and so on up to /param/999/1 route&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#the-second-case"&gt;
  &lt;/a&gt;
  The second case
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// static routes&lt;/span&gt;
&lt;span class="nv"&gt;$routes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateToroStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/0'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Toro&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;serve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$routes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/99'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Toro&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;serve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$routes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/199'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Toro&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;serve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$routes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// and so on up to /static/999 route&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// non static routes&lt;/span&gt;
&lt;span class="nv"&gt;$routes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateToroStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/0/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Toro&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;serve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$routes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/99/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Toro&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;serve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$routes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/199/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;Toro&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;serve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$routes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// and so on up to /param/999/1 route&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#ok-what-do-we-have"&gt;
  &lt;/a&gt;
  OK What do we have?
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#the-first-case-static-routes"&gt;
  &lt;/a&gt;
  The first case + static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+------------------------------------+-------------+-----+------+-----+-------------+---------------+---------------+---------------+---------------+--------------+--------+---------+
| benchmark                          | subject     | set | revs | its | mem_peak    | best          | mean          | mode          | worst         | stdev        | rstdev | diff    |
+------------------------------------+-------------+-----+------+-----+-------------+---------------+---------------+---------------+---------------+--------------+--------+---------+
| CoffeeSingleRequestStaticBench     | benchStatic | 0   | 10   | 10  | 2,936,232b  | 51,788.600μs  | 72,561.940μs  | 64,995.644μs  | 120,653.900μs | 19,539.896μs | 26.93% | 32.80x  |
| DVKSingleRequestStaticBench        | benchStatic | 0   | 10   | 10  | 3,392,992b  | 30,391.000μs  | 34,287.980μs  | 32,068.417μs  | 41,819.800μs  | 3,676.896μs  | 10.72% | 15.50x  |
| HoaSingleRequestStaticBench        | benchStatic | 0   | 10   | 10  | 3,847,864b  | 51,521.200μs  | 60,500.540μs  | 55,449.889μs  | 76,615.700μs  | 8,949.335μs  | 14.79% | 27.35x  |
| IBSingleRequestStaticBench         | benchStatic | 0   | 10   | 10  | 3,471,624b  | 145,029.000μs | 157,675.860μs | 151,599.563μs | 185,481.500μs | 11,959.481μs | 7.58%  | 71.28x  |
| MezonSingleRequestStaticBench      | benchStatic | 0   | 10   | 10  | 2,287,376b  | 10,700.700μs  | 11,377.070μs  | 10,910.978μs  | 12,893.600μs  | 787.896μs    | 6.93%  | 5.14x   |
| MiladSingleRequestStaticBench      | benchStatic | 0   | 10   | 10  | 33,649,608b | 34,688.700μs  | 36,498.910μs  | 36,175.851μs  | 40,116.800μs  | 1,493.226μs  | 4.09%  | 16.50x  |
| PeceeSingleRequestStaticBench      | benchStatic | 0   | 10   | 10  | 7,085,072b  | 42,979.500μs  | 50,972.690μs  | 44,869.381μs  | 76,280.500μs  | 12,341.746μs | 24.21% | 23.04x  |
| PowerSingleRequestStaticBench      | benchStatic | 0   | 10   | 10  | 3,862,216b  | 22,560.900μs  | 24,287.840μs  | 23,619.461μs  | 27,762.100μs  | 1,503.188μs  | 6.19%  | 10.98x  |
| SteampixelSingleRequestStaticBench | benchStatic | 0   | 10   | 10  | 2,566,392b  | 242,619.200μs | 293,642.760μs | 275,573.834μs | 421,766.200μs | 49,686.592μs | 16.92% | 132.75x |
| ToroSingleRequestStaticBench       | benchStatic | 0   | 10   | 10  | 1,745,216b  | 1,648.400μs   | 2,212.000μs   | 1,935.956μs   | 4,529.600μs   | 812.268μs    | 36.72% | 1.00x   |
+------------------------------------+-------------+-----+------+-----+-------------+---------------+---------------+---------------+---------------+--------------+--------+---------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-first-case-nonstatic-routes"&gt;
  &lt;/a&gt;
  The first case + non-static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+-----------------------------------+------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+--------------+--------+--------+
| benchmark                         | subject    | set | revs | its | mem_peak     | best          | mean          | mode          | worst         | stdev        | rstdev | diff   |
+-----------------------------------+------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+--------------+--------+--------+
| CoffeeSingleRequestParamBench     | benchParam | 0   | 10   | 10  | 3,903,272b   | 61,363.600μs  | 73,230.700μs  | 65,808.914μs  | 92,480.800μs  | 11,389.641μs | 15.55% | 4.81x  |
| DVKSingleRequestParamBench        | benchParam | 0   | 10   | 10  | 3,385,376b   | 34,263.500μs  | 36,090.960μs  | 35,074.116μs  | 38,970.600μs  | 1,553.119μs  | 4.30%  | 2.37x  |
| HoaSingleRequestParamBench        | benchParam | 0   | 10   | 10  | 4,165,464b   | 55,861.500μs  | 69,817.250μs  | 60,315.758μs  | 105,342.500μs | 17,027.445μs | 24.39% | 4.59x  |
| IBSingleRequestParamBench         | benchParam | 0   | 10   | 10  | 3,592,344b   | 171,847.700μs | 199,650.260μs | 179,596.867μs | 259,843.800μs | 31,804.423μs | 15.93% | 13.12x |
| MezonSingleRequestParamBench      | benchParam | 0   | 10   | 10  | 139,508,728b | 146,697.900μs | 158,502.100μs | 151,439.221μs | 196,143.100μs | 15,167.294μs | 9.57%  | 10.42x |
| MiladSingleRequestParamBench      | benchParam | 0   | 10   | 10  | 34,508,144b  | 41,190.600μs  | 44,517.500μs  | 42,656.145μs  | 60,393.000μs  | 5,470.118μs  | 12.29% | 2.93x  |
| PeceeSingleRequestParamBench      | benchParam | 0   | 10   | 10  | 6,669,256b   | 88,335.200μs  | 97,452.940μs  | 91,227.214μs  | 152,588.200μs | 18,551.188μs | 19.04% | 6.40x  |
| PowerSingleRequestParamBench      | benchParam | 0   | 10   | 10  | 3,862,216b   | 24,931.000μs  | 43,285.750μs  | 37,113.992μs  | 86,569.700μs  | 17,254.528μs | 39.86% | 2.84x  |
| SteampixelSingleRequestParamBench | benchParam | 0   | 10   | 10  | 2,666,344b   | 349,656.300μs | 409,768.320μs | 384,646.479μs | 505,134.400μs | 50,775.289μs | 12.39% | 26.93x |
| ToroSingleRequestParamBench       | benchParam | 0   | 10   | 10  | 1,866,176b   | 13,830.500μs  | 15,216.090μs  | 14,714.330μs  | 17,033.600μs  | 1,019.982μs  | 6.70%  | 1.00x  |
+-----------------------------------+------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+--------------+--------+--------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-second-case-static-routes"&gt;
  &lt;/a&gt;
  The second case + static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+----------------------------+-------------+-----+------+-----+------------+---------------+---------------+---------------+---------------+--------------+--------+------------+
| benchmark                  | subject     | set | revs | its | mem_peak   | best          | mean          | mode          | worst         | stdev        | rstdev | diff       |
+----------------------------+-------------+-----+------+-----+------------+---------------+---------------+---------------+---------------+--------------+--------+------------+
| CoffeeReactStaticBench     | benchStatic | 0   | 10   | 10  | 2,409,400b | 10,106.800μs  | 19,048.790μs  | 13,410.792μs  | 35,305.900μs  | 8,214.204μs  | 43.12% | 771.02x    |
| DVKReactStaticBench        | benchStatic | 0   | 100  | 10  | 2,652,296b | 11,424.930μs  | 12,610.662μs  | 11,873.045μs  | 14,696.170μs  | 1,066.321μs  | 8.46%  | 510.43x    |
| HoaReactStaticBench        | benchStatic | 0   | 100  | 10  | 2,893,936b | 3,872.190μs   | 3,991.312μs   | 3,915.664μs   | 4,213.960μs   | 121.955μs    | 3.06%  | 161.55x    |
| IBReactStaticBench         | benchStatic | 0   | 10   | 10  | 3,034,880b | 27,870.900μs  | 28,814.580μs  | 28,855.359μs  | 29,924.200μs  | 559.066μs    | 1.94%  | 1,166.30x  |
| MezonReactStaticBench      | benchStatic | 0   | 100  | 10  | 1,908,208b | 18.760μs      | 24.706μs      | 20.367μs      | 45.250μs      | 8.214μs      | 33.25% | 1.00x      |
| MiladReactStaticBench      | benchStatic | 0   | 10   | 10  | 5,275,192b | 17,146.600μs  | 20,339.820μs  | 20,271.373μs  | 26,539.300μs  | 2,747.209μs  | 13.51% | 823.27x    |
| PeceeReactStaticBench      | benchStatic | 0   | 10   | 10  | 4,243,936b | 21,130.700μs  | 26,316.200μs  | 24,040.710μs  | 45,508.000μs  | 6,815.499μs  | 25.90% | 1,065.17x  |
| PowerReactStaticBench      | benchStatic | 0   | 10   | 10  | 3,029,632b | 17,328.700μs  | 19,601.060μs  | 18,353.480μs  | 23,417.800μs  | 2,064.396μs  | 10.53% | 793.37x    |
| SteampixelReactStaticBench | benchStatic | 0   | 10   | 10  | 2,605,560b | 257,290.900μs | 268,508.740μs | 260,911.613μs | 297,512.300μs | 14,117.695μs | 5.26%  | 10,868.16x |
| ToroReactStaticBench       | benchStatic | 0   | 10   | 10  | 1,734,616b | 357.100μs     | 403.060μs     | 369.654μs     | 551.500μs     | 65.056μs     | 16.14% | 16.31x     |
+----------------------------+-------------+-----+------+-----+------------+---------------+---------------+---------------+---------------+--------------+--------+------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-second-case-nonstatic-routes"&gt;
  &lt;/a&gt;
  The second case + non-static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+---------------------------+------------+-----+------+-----+------------+---------------+---------------+---------------+---------------+-------------+--------+---------+
| benchmark                 | subject    | set | revs | its | mem_peak   | best          | mean          | mode          | worst         | stdev       | rstdev | diff    |
+---------------------------+------------+-----+------+-----+------------+---------------+---------------+---------------+---------------+-------------+--------+---------+
| DVKReactParamBench        | benchParam | 0   | 100  | 10  | 2,656,688b | 14,377.450μs  | 15,335.535μs  | 14,586.373μs  | 17,427.720μs  | 1,169.105μs | 7.62%  | 11.91x  |
| HoaReactParamBench        | benchParam | 0   | 100  | 10  | 3,360,824b | 4,414.300μs   | 6,874.798μs   | 4,710.450μs   | 18,171.830μs  | 4,534.653μs | 65.96% | 5.34x   |
| IBReactParamBench         | benchParam | 0   | 10   | 10  | 3,157,360b | 40,450.500μs  | 45,353.040μs  | 42,672.966μs  | 54,646.500μs  | 4,782.835μs | 10.55% | 35.23x  |
| MezonReactParamBench      | benchParam | 0   | 100  | 10  | 3,129,488b | 1,243.050μs   | 1,287.188μs   | 1,253.139μs   | 1,420.820μs   | 67.379μs    | 5.23%  | 1.00x   |
| MiladReactParamBench      | benchParam | 0   | 10   | 10  | 5,402,688b | 24,902.500μs  | 25,396.180μs  | 25,264.709μs  | 26,153.100μs  | 338.754μs   | 1.33%  | 19.73x  |
| PeceeReactParamBench      | benchParam | 0   | 10   | 10  | 4,625,032b | 52,426.000μs  | 53,136.740μs  | 53,193.426μs  | 53,674.900μs  | 369.031μs   | 0.69%  | 41.28x  |
| PowerReactParamBench      | benchParam | 0   | 10   | 10  | 3,029,632b | 17,787.400μs  | 18,722.020μs  | 18,676.215μs  | 19,720.100μs  | 475.076μs   | 2.54%  | 14.54x  |
| SteampixelReactParamBench | benchParam | 0   | 10   | 10  | 2,664,712b | 268,663.100μs | 273,656.960μs | 269,978.707μs | 288,435.900μs | 7,371.649μs | 2.69%  | 212.60x |
| ToroReactParamBench       | benchParam | 0   | 10   | 10  | 1,785,112b | 8,908.600μs   | 9,703.240μs   | 9,498.031μs   | 10,670.000μs  | 539.366μs   | 5.56%  | 7.54x   |
+---------------------------+------------+-----+------+-----+------------+---------------+---------------+---------------+---------------+-------------+--------+---------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see in some cases Toro is the fastest router, in some cases it is not, but still shows good results.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's next?
&lt;/h1&gt;

&lt;p&gt;More articles can be found in my &lt;a href="https://twitter.com/mezonphp"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-mezonrouter"&gt;
  &lt;/a&gt;
  What is mezon/router?
&lt;/h1&gt;

&lt;p&gt;mezon/router now is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;framework for routing with &lt;strong&gt;100% code coverage&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;10.0 points&lt;/strong&gt; on scrutinizer-ci.com&lt;/li&gt;
&lt;li&gt;router is a part of the &lt;a href="https://github.com/alexdodonov/mezon"&gt;Mezon Project&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Repo on github.com: &lt;a href="https://github.com/alexdodonov/mezon-router"&gt;https://github.com/alexdodonov/mezon-router&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#it-will-be-great-if-you-will-contribute-something-to-this-project-documentation-sharing-the-project-in-your-social-media-bug-fixing-refactoring-or-even-submitting-issue-with-question-or-feature-request-thanks-anyway-"&gt;
  &lt;/a&gt;
  It will be great if you will contribute something to this project. Documentation, sharing the project in your social media, bug fixing, refactoring, or even &lt;strong&gt;&lt;a href="https://github.com/alexdodonov/mezon-router/issues"&gt;submitting issue with question or feature request&lt;/a&gt;&lt;/strong&gt;. Thanks anyway )
&lt;/h1&gt;

</description>
      <category>php</category>
      <category>router</category>
      <category>mezon</category>
      <category>benchmark</category>
    </item>
    <item>
      <title>EC2 storage (EBS)</title>
      <author>Ajit Singh</author>
      <pubDate>Tue, 22 Jun 2021 04:11:36 +0000</pubDate>
      <link>https://dev.to/this-is-learning/ec2-storage-ebs-5b4g</link>
      <guid>https://dev.to/this-is-learning/ec2-storage-ebs-5b4g</guid>
      <description>&lt;p&gt;Each EC2 instance needs storage to store data and run operations. In AWS this is done via network hard drives witch can be attached to your EC2 instance. The network drives are called EBS (Elastic block storage). These drives allow us to persist data even after an EC2 instance is terminated and are available in a specific availability zone. Following are the properties of an EBS volume.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#network-drive"&gt;
  &lt;/a&gt;
  Network drive
&lt;/h3&gt;

&lt;p&gt;It means that the storage is connected to our EBS volumes on the network. This provides us with immense flexibility as we can join one EBS volume to another very easily. We just point it to another EC2 instance.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bound-to-an-availability-zone"&gt;
  &lt;/a&gt;
  Bound to an Availability zone
&lt;/h3&gt;

&lt;p&gt;If you put your EBS volume in one availability zone we cannot move it to another. If you provision it to ap-northeast-1 then you can't use it in ap-northeast-2 there are some workarounds which we will study later.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flexible-capacity"&gt;
  &lt;/a&gt;
  Flexible Capacity
&lt;/h3&gt;

&lt;p&gt;You can set the capacity of EBS volume via size in GB's and IOPS(input output operations per second).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-port-ebs-data-over-different-availability-zones"&gt;
  &lt;/a&gt;
  How to port EBS data over different Availability Zones.
&lt;/h2&gt;

&lt;p&gt;There is a provision by which you can backup your EC2 instances called EBS snapshots. These are very helpful  in taking backups as they are async and just saves the changed data from last snapshot. These being async if you want to take a full backup of an EBS volume its recommended that you detach your volume before taking a backup. these snapshots are very helpful because using these we can move data to different availability zone. You can take an EBS snapshot of your volume in an availability zone restore your EBS volume from that Snapshot in another availability zone and voila we transferred our EBS volumes from one availability zone to another.&lt;/p&gt;

&lt;p&gt;Next up we will do some hands on exercises to learn more about EBS volumes.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloudskills</category>
      <category>cloud</category>
    </item>
    <item>
      <title>5 Lessons I Learned During 5 Years of College</title>
      <author>Atibhi Agrawal</author>
      <pubDate>Tue, 22 Jun 2021 03:39:50 +0000</pubDate>
      <link>https://dev.to/asquare14/5-lessons-i-learned-during-5-years-of-college-4dle</link>
      <guid>https://dev.to/asquare14/5-lessons-i-learned-during-5-years-of-college-4dle</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sSuqAWZY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/12000/0%2AXZgoLMDAH-FKGKcd" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sSuqAWZY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/12000/0%2AXZgoLMDAH-FKGKcd" alt="Photo by MD Duran on Unsplash&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@mdesign85?utm_source=medium&amp;amp;utm_medium=referral"&gt;MD Duran&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I graduate college in 30 days, and I can not believe that 5 years have gone by. My college has given me a lot of things apart from my degree including but not limited to lifelong friends, a career I love and life experiences. In this blog post, I want to share the top 5 things I learned during my college life, outside of the classroom.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-prioritize-yourself"&gt;
  &lt;/a&gt;
  1. Prioritize Yourself
&lt;/h2&gt;

&lt;p&gt;In college, you deal with a variety of emotions ranging from pure joy to heartbreak. You make new friends, handle the pressure of studies and try out new experiences. It is very important to prioritize yourself and take care of your needs.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Invest in yourself. Try to figure out what kind of person you want to become after you leave college. Think beyond college and how you would like to live your life. Align your short-term goals with your long-term goals.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For example, if you want to become someone who wants to work at a big firm and climb up the corporate ladder, talk to people who have been there and done that. If you want to start a business, try starting a small business in college and learn from your mistakes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-you-are-the-average-of-the-five-people-you-spend-the-most-time-with"&gt;
  &lt;/a&gt;
  2. You Are The Average Of The Five People You Spend The Most Time With
&lt;/h2&gt;

&lt;p&gt;Prioritizing yourself also means spending your time wisely. I strongly believe that your friend circle in college has a powerful impact on your life. If you surround yourself with folks who want to party 24/7, it is going to be hard for you to focus on your studies. If you want to party all the time, you will find friends who want to study all the time boring. That friend who only reaches out to you when you can help and they do not bother about you? Help them but also be aware that they will most probably never help you. Friends who gossip behind your back and break your trust? Cut them out of your life for your own well-being.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Find your tribe. Spend time with people who support you and are your cheerleaders. Keep your circle small but tight.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-adapt"&gt;
  &lt;/a&gt;
  3. Adapt
&lt;/h2&gt;

&lt;p&gt;Life will not always go to plan. If you haven't already realized this, college life will teach this to you fast. That internship position you wanted? You're rejected. The love of your life? He or she is no longer interested in you. That "A" you expected in your favourite course? Turns out you missed the deadline for the assignment submission.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Adapt to difficult situations. If something doesn't work out, try a fresh approach. Take feedback from your friends, teammates, professors and work on yourself.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-appreciate-your-parents"&gt;
  &lt;/a&gt;
  4. Appreciate Your Parents
&lt;/h2&gt;

&lt;p&gt;When you move away from home, you will stop taking little things that your parents did for granted. There will be no one to wake you up, take you to the doctor's or shout at you to clean your room. You will miss all this. As you grow older, you will see your parents as just normal people with their own flaws and problems. They can make mistakes and they definitely do not have everything figured out. Sometimes, distance from them helps you analyse your relationship and gives you much-needed clarity.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Even though it can be hard, forgive them if you have had a tough time during your teens and appreciate all that they have done for you.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-its-ok-to-not-have-everything-figured-out"&gt;
  &lt;/a&gt;
  5. It's Ok To Not Have Everything Figured Out
&lt;/h2&gt;

&lt;p&gt;Last but not the least, no one has everything figured out. Everyone has their own set of problems. Life is not perfect. If you had everything figured out and you never experienced the lows, you won't enjoy the highs.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It's okay to not know or do not have an answer. It's OKAY to not have your life figured out. Do not compare yourself with your peers and feel sad. Everyone goes through their own journey and has their own timeline.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Accept where you are in life right now and strive to do better every day. If you take one small step every day towards becoming the person you want to be, you'll be just fine.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2vfRo2o4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/8800/0%2ARYEC4XXRA2rT9WFA" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2vfRo2o4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/8800/0%2ARYEC4XXRA2rT9WFA" alt="Photo by Ava Sol on Unsplash"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>college</category>
      <category>watercooler</category>
      <category>discuss</category>
    </item>
    <item>
      <title>6 figure job in 6 months</title>
      <author>Amritanshu Dev Rawat</author>
      <pubDate>Tue, 22 Jun 2021 03:35:01 +0000</pubDate>
      <link>https://dev.to/amritanshu/6-figure-job-in-6-months-2g2b</link>
      <guid>https://dev.to/amritanshu/6-figure-job-in-6-months-2g2b</guid>
      <description>&lt;p&gt;&lt;strong&gt;Yes you heard it right "6 figure job in 6 months".&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;How can you achieve that?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Choose Your Stack&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Web Dev - html, CSS, JavaScript, etc..&lt;/li&gt;
&lt;li&gt;App Dev - native, hybrid etc..&lt;/li&gt;
&lt;li&gt;Design - Figma, Photoshop , etc..&lt;/li&gt;
&lt;li&gt;etc&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Work Hard Daily On Your Stack&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Give 6+ hrs daily &lt;/li&gt;
&lt;li&gt;Build Projects&lt;/li&gt;
&lt;li&gt;Follow people with the same stack&lt;/li&gt;
&lt;li&gt;Increase your social presence&lt;/li&gt;
&lt;li&gt;Be consistent&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Challenge yourself&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;In twitter you can follow 100DaysOfCode challenge or make your own and upload your progress daily&lt;/li&gt;
&lt;li&gt;You have to be better then the previous day, keep track of your progress.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Motivation&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Daily hard work is the only key to reach you at the top.&lt;/li&gt;
&lt;li&gt;Think what makes you different from other. &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Points To Remember&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;There will be ups and downs for sure, your mind will say no it's not working but you have to do it, remember all the past hard work and the time you spent, see the progress that you were tracking you will notice you have come too far, don't quit at later stages.&lt;/li&gt;
&lt;li&gt;Every field out there have potential to give you a good amount of money, if you choose one and master it.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/NewGenDeveloper"&gt;https://twitter.com/NewGenDeveloper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>motivation</category>
      <category>codenewbie</category>
      <category>webdev</category>
    </item>
    <item>
      <title>29 best YouTube channels to learn to code and become a better Developer</title>
      <author>programmer-list</author>
      <pubDate>Tue, 22 Jun 2021 03:19:03 +0000</pubDate>
      <link>https://dev.to/programmerlist/29-best-youtube-channels-to-learn-to-code-and-become-a-better-developer-2k6b</link>
      <guid>https://dev.to/programmerlist/29-best-youtube-channels-to-learn-to-code-and-become-a-better-developer-2k6b</guid>
      <description>&lt;p&gt;YouTube is considering a to be expansion in rush hour gridlock as an instructive stage, well known with understudies and educators the same. YouTube permits clients to buy in to the channels of their advantage, follow exercises and courses, and use free substance. &lt;/p&gt;

&lt;p&gt;Starting today, coding is perhaps the most well known subjects on YouTube. Many trying designers, engineers, and developers go to the best coding YouTube channels to master programming and sharpen their abilities. These channels give data on coding as well as give valuable tips with respect to the work chasing measure; remembering guidance for composing an ideal resume and planning for interviews.&lt;/p&gt;

&lt;p&gt;Let's look at 29 Best YouTube channel to learn to code and level your prorgamming skills. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#eleftheria-batsou-eleftheria-batsou"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/channel/UCC-WwYv3DEW7Nkm_IP6VeQQ"&gt;Eleftheria Batsou&lt;/a&gt; @&lt;a href="https://dev.to@eleftheriabatsou"&gt;Eleftheria Batsou&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lblpv-JB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077458245/VDfcjF_Ko.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lblpv-JB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077458245/VDfcjF_Ko.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is said the best way to learn something is by teaching it to others, &lt;br&gt;
this channel tries to explain my thoughts about web development and web design by small yet inetersting tutorials.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#freecodecamp"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ"&gt;FreeCodeCamp&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZWHHOoQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624075076909/sNNpisCtw.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZWHHOoQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624075076909/sNNpisCtw.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn to code for free. With nearly unlimited amount of tutorials on nearly all the Coding languages. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#learncodeacademy"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/c/learncodeacademy"&gt;LearnCode.academy&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hIbcIUsd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624075132012/b9BHOAgcK.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hIbcIUsd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624075132012/b9BHOAgcK.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;100% FREE Web Development tutorials, web site design tutorials and more.&lt;/p&gt;

&lt;p&gt;Including, but not limited to:&lt;br&gt;
HTML, CSS, JavaScript, CSS Layouts, Responsive Design, React.js, Node.js, Angular.js, Docker, Dev Ops, Server Administration, Deployment Strategies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#css-tricks"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/user/realcsstricks"&gt;CSS tricks&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BofnsX4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624075206038/ZZawa-L-h.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BofnsX4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624075206038/ZZawa-L-h.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the official YouTube channel for CSS-Tricks, a web design community curated by Chris Coyier. &lt;a href="https://css-tricks.com"&gt;https://css-tricks.com&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adam-khoury"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/c/AdamKhoury"&gt;Adam Khoury&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZLHpZBPr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077493306/NcHYGVUhC.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZLHpZBPr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077493306/NcHYGVUhC.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn to code and design like a professional. Master development technologies like JavaScript, PHP, SQL, HTML, CSS, ActionScript and more. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#derek-banas"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/c/derekbanas"&gt; Derek Banas&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T93WdYGD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077539504/6KRKuIbBS.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T93WdYGD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077539504/6KRKuIbBS.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;He makes tutorials based on your requests. He will cover any topic you can imagine. He uploads new videos everyday. He is currently teaching a series on data science and machine learning.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cl%C3%A9ment-mihailescu"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/channel/UCaO6VoaYJv4kS-TQO_M-N_g"&gt;Clément Mihailescu&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kATtNpap--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077571015/FGCuKzSGL.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kATtNpap--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077571015/FGCuKzSGL.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;He is Ex-Google Software Engineer, an Ex-Facebook Software Engineer, and the CEO and co-founder of AlgoExpert (algoexpert.io), a website that helps Software Engineers prepare for coding interviews.&lt;/p&gt;

&lt;p&gt;This YouTube channel is the outlet for all of his thoughts on tech, entrepreneurship, and random miscellanea!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#devtips"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/user/DevTipsForDesigners"&gt;DevTips&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i2Bahq6z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077609859/9ha7lyUTt.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i2Bahq6z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077609859/9ha7lyUTt.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;DevTips is a weekly show for YOU who want to be inspired 👍 and learn 🖖 about programming. Hosted by Andrew - a long-time community member, bug buster, and designer 💖. Lets explore code together and learning programming along the way - yay!&lt;/p&gt;

&lt;p&gt;Everything you see and hear are the opinions and preferences of the individual who said them, and no one else's.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#program-with-erik"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/c/ProgramWithErik/"&gt;Program With Erik&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GvBXp1Q1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077652877/3wAlVE5X7.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GvBXp1Q1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077652877/3wAlVE5X7.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;He's a web and Java developer from Reno, Nevada. He has been a programmer for many years now and have always been wanting to give back to the community. He started this channel, and his website (&lt;a href="http://www.programwitherik.com"&gt;www.programwitherik.com&lt;/a&gt;) as a way to teach people what he knows. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#colt-steele"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/channel/UCrqAGUPPMOdo0jfQ6grikZw"&gt;Colt Steele&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vtNkv9wp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077701595/jwxG7Kau5.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vtNkv9wp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077701595/jwxG7Kau5.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Colt Steele is online course instructor and yes a developer. He posts videos and tutorials on tutorials covering most of the parts of programming. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kevin-powell"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/user/KepowOb"&gt;Kevin Powell&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F1XfqISs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077732506/CoeIBEaxg.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F1XfqISs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077732506/CoeIBEaxg.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Helping you learn how to make the web, and make it look good while you're at it.&lt;/p&gt;

&lt;p&gt;With videos every Tuesday and Thursday, I'll be bringing you How Tos and Tutorials, as well as simple tips and tricks, with a big focus on helping people see how wonderful CSS is!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#florin-pop"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/channel/UCeU-1X402kT-JlLdAitxSMA"&gt;Florin POP&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fuuOK8WJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077787937/ti_DnK1ZA.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fuuOK8WJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077787937/ti_DnK1ZA.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;He loves to create Coding Tutorials and to Code Live, so you'll see a lot of those on his channel!&lt;br&gt;
You'll learn a lot about web development (HTML, CSS, JavaScript, ReactJS, NodeJS, Animations, Components, APIs and all the cool stuff 😎).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#simple-programmer"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/channel/UCRxWW_Ncs308nW4An23Yeig"&gt;Simple Programmer&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2RkyxxY2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077822671/iANe3I0du.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2RkyxxY2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077822671/iANe3I0du.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simple Programmer is focused on helping software developers, programmers and other IT professionals improve their careers and live better lives. One thing I learned from year of consulting and coaching software developers is that increasing your technical aptitude is not enough.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#traversy-media"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/c/TraversyMedia"&gt;Traversy Media&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uuHvrrFS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077845590/IbOT6_9sO.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uuHvrrFS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077845590/IbOT6_9sO.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Traversy Media features the best online web development and programming tutorials for all of the latest web technologies from the building blocks of HTML, CSS &amp;amp; JavaScript to frontend frameworks like React and Vue to backend technologies like Node.js, Python and PHP&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#joma-tech"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/channel/UCV0qA-eDDICsRR9rPcnG7tw"&gt;Joma Tech&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TmczKox2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077880032/5urUNbHKY.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TmczKox2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077880032/5urUNbHKY.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;He talks about life in Silicon Valley, big tech companies, data science and software engineering.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#treehouse"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/user/gotreehouse"&gt;Treehouse&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6TO3tDxl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077902529/XScqXfx-J.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6TO3tDxl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077902529/XScqXfx-J.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Treehouse is an online school that teaches technology. Treehouse has courses on hundreds of topics including how to build a website, how to build a web app, how to build a mobile app, and how to start a business.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dev-ed"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/channel/UClb90NQQcskPUGDIXsQEz5Q"&gt;Dev Ed&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M8c7rXmW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077920968/aDpDuUNaT.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M8c7rXmW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077920968/aDpDuUNaT.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn web development, web design, 3d modelling, tools like figma and more without getting bored!&lt;/p&gt;

&lt;p&gt;The goes of this channel is to get you to become as creative you can be!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mike-locke"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/user/mlwebco"&gt;Mike Locke&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BLQ4ssuH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077941692/QlFI0ISPQ.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BLQ4ssuH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077941692/QlFI0ISPQ.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Highly innovative, passionate and successful senior UI/UX designer with high proficiencies in Visual UI Design, User Experience, Usability, Interaction Design, Information Architecture, Research &amp;amp; Analytics, XHTML/CSS and Strategy &amp;amp; Planning. &lt;br&gt;
Recognized as a talented creative leader with a unique skill-set that spans various disciplines from design to front-end development. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tech-with-tim"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/channel/UC4JX40jDee_tINbkjycV4Sg"&gt;Tech with Tim&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wo4NeEuZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077984273/qbuUFHT5O.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wo4NeEuZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624077984273/qbuUFHT5O.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn programming, software engineering, machine learning and everything tech from this channel. With a special emphasis on python and javascript my channel aims to give you free resources so that you can learn to code and dive into the software engineering and programming industry. My goal is to provide the highest quality programming and tech videos on the internet! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#programming-with-mosh"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/c/programmingwithmosh"&gt;Programming with Mosh&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JtlSjbHl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624078000353/eKjjTuOHN5.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JtlSjbHl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624078000353/eKjjTuOHN5.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I train professional software engineers that companies love to hire. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#brad-hussey"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/c/hussey17"&gt;Brad Hussey&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hk6pZ_19--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624078064938/ixGd8Eo0c.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hk6pZ_19--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624078064938/ixGd8Eo0c.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;He is Brad! he is normal guy from Canada who helps web designers make a living doing work they love.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#designcourse"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/user/DesignCourse"&gt;DesignCourse &lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WDgV3gcJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624078098508/5uLg948Ox.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WDgV3gcJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624078098508/5uLg948Ox.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;He teaches full stack development! Which means you will see tutorials regarding UI/UX, Frontend Dev, Backend Dev, Graphic Design and more!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-new-boston"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/user/thenewboston"&gt;The New Boston&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QT6XOPlV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624078118858/BmNfS-ZD1.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QT6XOPlV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624078118858/BmNfS-ZD1.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tons of sweet computer related tutorials and some other awesome videos too!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sean-allen"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/channel/UCbTw29mcP12YlTt1EpUaVJw"&gt;Sean Allen&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zNPiDtkj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624078143551/v965NnCHw.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zNPiDtkj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624078143551/v965NnCHw.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;He posts 3 videos per week about Swift and iOS Development from an iOS Engineer in Silicon Valley. Tutorials, VLOGs, Interview Questions, and LIVE on Sundays. He had been an iOS Engineer for 3+ years in San Francisco/Silicon Valley.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gaurav-sen"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/channel/UCRPMAqdtSgd0Ipeef7iFsKw"&gt;Gaurav Sen&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uqYloJS3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624078249258/XbnPl4_nS.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uqYloJS3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624078249258/XbnPl4_nS.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Algorithms and System Design makes a powerful combination! &lt;br&gt;
Here are some things I talk about: &lt;br&gt;
1) System design&lt;br&gt;
2) Competitive programming&lt;br&gt;
3) Artificial intelligence&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sentdex"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/channel/UCfzlCWGWYyIQ0aLC5w48gBQ"&gt; Sentdex&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zZW3Bgo_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624078220448/EcPo7oiuD.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zZW3Bgo_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624078220448/EcPo7oiuD.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Python Programming tutorials, going further than just the basics. Learn about machine learning, finance, data analysis, robotics, web development, game development and more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ben-awad"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/user/99baddawg"&gt;Ben Awad&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JKsJzkFD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624078283306/gRj4HmkFg.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JKsJzkFD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624078283306/gRj4HmkFg.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;He is a software developer who makes videos about React, React Native, GraphQL, Typescript, Node.js, PostgreSQL, Python, and all things coding.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fun-fun-function"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/channel/UCO1cgjhGzsSYb1rsB4bFe4Q"&gt;Fun Fun Function&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PW4bmRB---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624078374020/nzSBQvfA2.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PW4bmRB---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624078374020/nzSBQvfA2.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mattias Petter Johansson, mpj for short. He has been a full-time programmer for about ten years. Among others, He has worked for Absolut Vodka, Blackberry and Spotify.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#coding-garden"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/channel/UCLNgu_OupwoeESgtab33CCw"&gt;Coding Garden&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fSataoGv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624078387879/yHEBCVZOD.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fSataoGv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624078387879/yHEBCVZOD.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Coding Garden is an open, interactive and engaging community where any coder, from beginner to veteran, can learn and grow together. Whether it's a tutorial, Q&amp;amp;A session, algorithmic problem solving or full application design and build, there's always something new to learn!&lt;/p&gt;




&lt;p&gt;Above ones were some amazing yet resourceful YouTube channels you should subscribe to. These channel will take your Development skills to next level.  &lt;/p&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
      <category>python</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Why Web developers still use Ruby on Rails?</title>
      <author>Eric The Coder</author>
      <pubDate>Tue, 22 Jun 2021 03:14:14 +0000</pubDate>
      <link>https://dev.to/ericchapman/why-web-developers-still-use-ruby-on-rails-1a95</link>
      <guid>https://dev.to/ericchapman/why-web-developers-still-use-ruby-on-rails-1a95</guid>
      <description>&lt;p&gt;Follow me!: &lt;a href="https://twitter.com/EricTheCoder_"&gt;Follow @EricTheCoder_&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;br&gt;
Many new web developers have absolutely no idea what is Ruby on Rails.

&lt;p&gt;I encourage those people do their research and learn more about this beautiful web framework.&lt;/p&gt;

&lt;p&gt;Ruby is a programming language and Rails is a framework to create web applications.&lt;/p&gt;

&lt;p&gt;Others web frameworks like Laravel, Django, Adonis use many concepts used by Rails. &lt;/p&gt;

&lt;p&gt;Rails is in some way the father of those modern frameworks. Rails inspire a lot of modern web development concepts.&lt;/p&gt;

&lt;p&gt;With Rails you can build a fullstack web application. You can even do frontend web app (SPA like React and Vue) with only using html/css and ruby code.&lt;/p&gt;

&lt;p&gt;Rails are old but Rails is not what it was when introduce. Rails have evolved over the year to add all the modern goodies. Rails are now at version 6 and version 7 is just around the corner. &lt;/p&gt;

&lt;p&gt;So why use it? Why not use a Node.js/Express app or any other more popular backend frameworks?&lt;/p&gt;

&lt;p&gt;I guess the reason can be different for every Rails developers, but for my part I choose Rails when I need development speed and efficiency! No other framework can build a web app faster than Rails.&lt;/p&gt;

&lt;p&gt;For that specific reason Rails is use by a lot of startup companies. &lt;/p&gt;

&lt;p&gt;Ruby on Rails is also used by some giant companies like Shopify, GitHub, Air B&amp;amp;B and a lot lot more.&lt;/p&gt;

&lt;p&gt;I also like the Ruby language a lot. Do yourself a favour and take a deep look at the Ruby language. &lt;/p&gt;

&lt;p&gt;Are Rails best for all projects? Of course not, but with the right project is still no 1 even after all those years.&lt;/p&gt;

&lt;p&gt;If you are a Ruby on Rails developer, please leave in the comments section why for you Rails is still one of your favorite framework?&lt;/p&gt;

</description>
      <category>rails</category>
      <category>ruby</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Build serveless real-time chat application with Web PubSub and Static Web Apps</title>
      <author>Yan Jin</author>
      <pubDate>Tue, 22 Jun 2021 02:53:52 +0000</pubDate>
      <link>https://dev.to/azure/build-serveless-real-time-chat-application-with-web-pubsub-and-static-web-apps-glc</link>
      <guid>https://dev.to/azure/build-serveless-real-time-chat-application-with-web-pubsub-and-static-web-apps-glc</guid>
      <description>&lt;p&gt;With the growth of internet and mobile, building the cross platform real-time chat experience into your application also becomes a very common need, for example patient and doctor chat in healthcare, customer support chat in eCommerce, student and teacher chat in remote education, players chat in eGaming, instant chat for social media or live video stream, and so on. The real-time chat experience offers several values to your application to help your customers success:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Instant and efficient communication to faster problem resolution.
&lt;/li&gt;
&lt;li&gt;Collaboration and purposeful conversation to overcome business challenges. &lt;/li&gt;
&lt;li&gt;Smooth built-in experience to improve the customer service and loyalty. &lt;/li&gt;
&lt;li&gt;Cross platform support to empower the customer to discovery easily. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In general, there are some fundamental and critical needs for an application with build-in real-time chat experience:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Real-time chat experience with users. &lt;/li&gt;
&lt;li&gt;Management of user and group.
&lt;/li&gt;
&lt;li&gt;Notification and popup.
&lt;/li&gt;
&lt;li&gt;AI-enabled, e.g., language moderator, bot, etc.
&lt;/li&gt;
&lt;li&gt;Typing indicator.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But it is not easy to build these functionalities into your application from scratch. You may have the issues to achieve the real-time performance, handles hosting, scalability, load balancing and other infrastructure related challenges, adapt with multiple client platforms, etc. Now, the Azure Web PubSub service which is a fully managed service give the opportunity to you to enable the real-time capability to your application with native and serverless WebSockets support. &lt;/p&gt;

&lt;p&gt;Let’s follow with &lt;a href="https://twitter.com/BenCodeGeek"&gt;Ben Coleman&lt;/a&gt; together to build a serverless Chatr web application and learn how does he leverage the advantages of the Azure Web PubSub and Azure Static Web Apps to achieve this easily and quickly. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-the-chatr"&gt;
  &lt;/a&gt;
  What's the Chatr?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://chatr.benco.io/"&gt;Chatr&lt;/a&gt; is a simple real-time, multi-user chat application, highlighting the ease of building applications on top of two of Azure services: &lt;a href="https://azure.microsoft.com/services/web-pubsub/"&gt;Azure Web PubSub&lt;/a&gt; and &lt;a href="https://azure.microsoft.com/services/app-service/static/"&gt;Azure Static Web Apps&lt;/a&gt;. The Chatr application provides many of the features you might expect; a way to sign in and authenticate, group chats, user to user private chats, a global online user list, idle (away from keyboard) detection and more. However it was built to be a way to learn and showcase possibilities rather than a fully fledged and production grade chat system. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wyjbKOQf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://techcommunity.microsoft.com/t5/image/serverpage/image-id/287807iB0F45BC03F96DD74/image-size/medium%3Fv%3Dv2%26px%3D400" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wyjbKOQf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://techcommunity.microsoft.com/t5/image/serverpage/image-id/287807iB0F45BC03F96DD74/image-size/medium%3Fv%3Dv2%26px%3D400" alt="Chatr Application"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chatr consists of four components: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The client or frontend, which users interact with – This is written in JavaScript and uses Vue.js &lt;/li&gt;
&lt;li&gt;The backend service, which provides message processing &amp;amp; event handling, written in Node.js &lt;/li&gt;
&lt;li&gt;A globally available but secure Websockets service – provided by Azure Web PubSub &lt;/li&gt;
&lt;li&gt;Persistence state storage and key value store – provided by Azure Table Storage &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A diagram will help illustrate how these all interact, and some of the main message &amp;amp; data flows. Let’s explore these components in more detail.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jQpCWjfY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://techcommunity.microsoft.com/t5/image/serverpage/image-id/287759i888989074CA0312D/image-size/large%3Fv%3Dv2%26px%3D999" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jQpCWjfY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://techcommunity.microsoft.com/t5/image/serverpage/image-id/287759i888989074CA0312D/image-size/large%3Fv%3Dv2%26px%3D999" alt="Chatr diagram"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#use-web-pubsub-to-build-the-scalable-backend"&gt;
  &lt;/a&gt;
  Use Web PubSub to build the scalable backend
&lt;/h2&gt;

&lt;p&gt;The Azure WebPubSub service works hand in hand with the Chatr backend, to provide the core chat functionality. This is done through &lt;a href="https://azure.github.io/azure-webpubsub/references/protocol-cloudevents"&gt;‘event handlers’ within Azure WebPub sub&lt;/a&gt;, these handlers enable an upstream service to receive client side WebSocket messages as “events”. These events are HTTP messages, which the service can then react to. These events supports both a range of built-in system events (e.g. client connecting or disconnecting) but also custom application specific events, in the case of Chatr there are many of these such events, for example “joinChat” or “userEnterIdle” etc. &lt;/p&gt;

&lt;p&gt;The backend uses the service client of the &lt;a href="https://azure.github.io/azure-webpubsub/references/server-sdks/js-server-sdks#service-client-library"&gt;Web PubSub SDK for Node.js&lt;/a&gt;, which can be instantiated easily. Here we are storing configuration details such as the connection string in an Azure Function App Settings, and obtain it them securely through environmental variables.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const { WebPubSubServiceClient } = require('@azure/web-pubsub')
const CONN_STR = process.env.PUBSUB_CONNECTION_STRING 
const HUB = process.env.PUBSUB_HUB 
const serviceClient = new WebPubSubServiceClient(CONN_STR, HUB) 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Within the Function itself we can handle any event sent to us from clients by binding to HTTP trigger POST requests and processing them as follows. For example, the code below shows how Chatr handles when a user has created a new shared group-chat. When doing so they send an event called “createChat”, when handling this we get the properties we require from both the headers and the HTTP body, (the special 'ce' headers are populated by Azure Web PubSub), then store into state and finally notify all clients about the new chat with an outbound message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;eventName&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ce-eventname&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
&lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ce-userid&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;eventName&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="o"&gt;===&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;createChat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="c1"&gt;// Build custom event payload &lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;chatPayload&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt; 
    &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt; 
    &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt; 
    &lt;span class="nx"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt; 

  &lt;span class="c1"&gt;// ... Update state, removed for brevity ... &lt;/span&gt;

  &lt;span class="c1"&gt;// Send message to all clients with custom JSON payload &lt;/span&gt;
  &lt;span class="c1"&gt;// Will be routed via Azure Web PubSub with WebSocket protocol &lt;/span&gt;
  &lt;span class="nx"&gt;serviceClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendToAll&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; 
    &lt;span class="na"&gt;chatEvent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;chatCreated&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;chatPayload&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#build-frontend-with-extensive-platform-and-host-easily-with-static-web-apps"&gt;
  &lt;/a&gt;
  Build frontend with extensive platform and host easily with Static Web Apps
&lt;/h2&gt;

&lt;p&gt;The Chatr frontend consists of a JavaScript static app or SPA (single page application) built on the Vue.js framework, this is hosted using the Azure Static Web App service as a set of HTML and JS files. This Azure service aside from just hosting static content, also provides Chatr a means to sign in and authenticate users and also a way to host the backend Azure Function service. The frontend establishes a secure connection to Azure Web PubSub using WebSockets, no SDK or client libraries are required making it quick easy to use. Let's walk through the frontend together. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setup-connection-between-application-and-backend-service"&gt;
  &lt;/a&gt;
  Setup connection between application and backend service
&lt;/h3&gt;

&lt;p&gt;The clients first request a way to access to Azure Web PubSub by calling a REST endpoint on our backend which in turn obtains a client access URL (which includes an access token) this is done using the same serviceClient described above, as this is done server side it provides a way to restrict access and secure the application. In the case of Chatr all users are permitted to request an access URL. The userId in the code below has been &lt;a href="https://docs.microsoft.com/en-us/azure/static-web-apps/authentication-authorization"&gt;fetched previously through a call to Azure Static WebApps&lt;/a&gt;, for the purposes of Azure Web PubSub. It’s simply a string and has no special meaning.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Get URL &amp;amp; token to connect to Azure Web Pubsub &lt;/span&gt;
&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`/api/getToken?userId=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 

&lt;span class="c1"&gt;// Now connect to Azure Web PubSub using the URL we obtained &lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;WebSocket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;json.webpubsub.azure.v1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We only use standard modern JavaScript APIs like fetch and WebSocket this means the Chatr frontend can be deployed without any bundling or WebPack stage. Also note how we use the ‘json.webpubsub.azure.v1' subprotocol when establishing the connection, this &lt;a href="https://azure.github.io/azure-webpubsub/references/pubsub-websocket-subprotocol.html"&gt;extension to plain WebSockets provides a range of additional capabilities&lt;/a&gt; which are used by Chatr such as; client to client messaging (without a round trip to the server), a means to join send messages to groups (which is how Chatr provides group chats) and also a way to send custom events which are routed to the service as described above. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#send-custom-event-or-message"&gt;
  &lt;/a&gt;
  Send custom event or message
&lt;/h3&gt;

&lt;p&gt;Sending a custom event from the client is very simple, for example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;event&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;createChat&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;dataType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;chatName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;chatId&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Chat messages between users are sent a very similar way, except leveraging the 'sendToGroup' message type. Rather than plain text strings (which are also supported) we enrich the messages we send with meta data such as the userId of who sent the message and send a JSON payload. It’s important to note these messages are not relayed by the Chatr backend we described above, they are handled entirely by the Azure Web PubSub service without any backend or server code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sendToGroup&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;group&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;chatId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;dataType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;fromUserId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;We’ve just scratched the surface of what the Chatr sample app does, and we’ve not covered details such as how state is stored using Azure Tables or how the authentication wrappers of Azure Static WebApps are used.  However I hope what we have shown illustrates some of the power and flexibility of Azure Web PubSub. If you are looking for more details about this application, you can refer to the &lt;a href="https://github.com/benc-uk/chatr"&gt;Chatr repo on GitHub&lt;/a&gt; where the code is hosted, along with information and docs on how to deploy it to Azure and run it yourself. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;p&gt;If you are trying to build your first real-time application with Azure Web PubSub, you could also get more helpful resources from the &lt;a href="https://azure.microsoft.com/services/web-pubsub/#documentation"&gt;getting stated contents&lt;/a&gt;. We are looking forward your feedback and ideas to help us become better via &lt;a href="https://feedback.azure.com/forums/934191-azure-web-pubsub-service"&gt;Azure Feedback Forum&lt;/a&gt;!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#more-information"&gt;
  &lt;/a&gt;
  More Information
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;This blog is also posted on &lt;a href="https://techcommunity.microsoft.com/t5/apps-on-azure/build-serveless-real-time-chat-application-with-web-pubsub-and/ba-p/2433211"&gt;Tech Community&lt;/a&gt; and you could also get more blogs about the Web PubSub and its new features here.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>serverless</category>
      <category>azure</category>
      <category>javascript</category>
    </item>
    <item>
      <title>String Prototype Capitalize</title>
      <author>Dimas Andhika</author>
      <pubDate>Tue, 22 Jun 2021 02:40:15 +0000</pubDate>
      <link>https://dev.to/dimasngoding/string-prototype-capitalize-5dhn</link>
      <guid>https://dev.to/dimasngoding/string-prototype-capitalize-5dhn</guid>
      <description>&lt;p&gt;&lt;strong&gt;Note: This article is intended for Indonesians&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#perkenalan"&gt;
  &lt;/a&gt;
  Perkenalan
&lt;/h1&gt;

&lt;p&gt;Javascript mempunyai banyak built in function pada prototype. Ada di array, string, object, dan lain2. Salah satu contohnya adalah &lt;code&gt;String.prototype.toUpperCase()&lt;/code&gt; yang memungkinkan kita membuat string menjadi huruf besar.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stringprototypetouppercase"&gt;
  &lt;/a&gt;
  String.prototype.toUpperCase()
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ini teks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; 'INI TEKS'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Tapi pada suatu saat kita mungkin perlu mengubah string menjadi huruf kapital, tetapi javascript tidak punya builtin function seperti itu. Jadi solusinya adalah kita membuat function sendiri seperti pada contoh berikut:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contoh-function-capitalize"&gt;
  &lt;/a&gt;
  Contoh Function Capitalize
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;()}${&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ini teks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; 'Ini teks'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ini bekerja dengan baik tetapi tidak seperti yang kita harapkan. Contoh yang saya buat diatas merupakan function biasa, yang bisa menjadikan kode kita sulit dibaca jika sudah terdapat banyak function. Lalu gimana cara kita dapat membuat function seperti &lt;code&gt;.toUpperCase()&lt;/code&gt;? Caranya seperti berikut:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stringprototypecapitalize"&gt;
  &lt;/a&gt;
  String.prototype.capitalize()
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;capitalize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;()}${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ini teks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; 'Ini teks'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Isi functionnya sama dengan yang kita buat pada contoh diatas ini, tetapi penulisan kode menjadi lebih rapih karena kita mendefinisikannya langsung ke prototype, ini seakan2 menjadikan capitalize seperti function bawaan javascript. &lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#penjelasan"&gt;
  &lt;/a&gt;
  Penjelasan
&lt;/h3&gt;

&lt;p&gt;Tetapi jika dilihat ada yang berubah, kita memakai keyword &lt;code&gt;this&lt;/code&gt; pada kode diatas karena &lt;code&gt;this&lt;/code&gt; pada kode diatas mereferensikan ke string yang kita beri method capitalize, contoh:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;capitalize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ini teks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; 'ini teks'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Jadi &lt;code&gt;this&lt;/code&gt; pada kode diatas digunakan untuk menangkap stringnya, dan karena itu pula kita tidak dapat menggunakan arrow function karena keyword &lt;code&gt;this&lt;/code&gt; akan berisi &lt;code&gt;undefined&lt;/code&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>How To Publish A Static React/Node.js App Using cPanel (the easy way)</title>
      <author>neethap</author>
      <pubDate>Tue, 22 Jun 2021 01:09:31 +0000</pubDate>
      <link>https://dev.to/neethap/how-to-publish-a-static-react-node-js-app-using-cpanel-the-easy-way-199o</link>
      <guid>https://dev.to/neethap/how-to-publish-a-static-react-node-js-app-using-cpanel-the-easy-way-199o</guid>
      <description>&lt;p&gt;I've been stuck on this problem recently and finally figured it out a week in. Except the solution surely took less than ten minutes so I decided to share the wisdom.&lt;/p&gt;

&lt;p&gt;Pro-tip: &lt;b&gt;Forget the Setup Node.js App feature&lt;/b&gt; on your cPanel. Instead, you want to focus your attention on the &lt;em&gt;build&lt;/em&gt; folder. When you run &lt;em&gt;yarn run build&lt;/em&gt;, you are effectively generating static files to be used in production. &lt;/p&gt;

&lt;p&gt;Once I made all my changes locally, I used the following steps to deploy my site:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;On your local machine&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;1)&lt;/b&gt; In your &lt;em&gt;package.json&lt;/em&gt;, add the line &lt;em&gt;"homepage":"&amp;lt;yourdomain&amp;gt;"&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;2)&lt;/b&gt; In your VSCode terminal, run &lt;em&gt;yarn run build&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;     You should see something like this:&lt;/p&gt;

&lt;p&gt;     &lt;em&gt;The project was built assuming it is hosted at &amp;lt;yourdomain&amp;gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you're seeing '/' or anything else in place of your domain, run &lt;em&gt;export PUBLIC_URL=&amp;lt;yourdomain&amp;gt;&lt;/em&gt; first, then run &lt;em&gt;yarn run build&lt;/em&gt; again. This time, you should see your domain.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;3)&lt;/b&gt; Go into the directory &lt;em&gt;/&amp;lt;yourproject&amp;gt;/build/&lt;/em&gt;, highlight all the files and folders, right-click and navigate to &lt;em&gt;Send to &amp;gt; Compressed (zipped) folder&lt;/em&gt; to generate a zipped folder.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;On your cPanel&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;4)&lt;/b&gt; Got into the directory &lt;em&gt;/home/&amp;lt;yourusername&amp;gt;/&amp;lt;yourdomain&amp;gt;/&lt;/em&gt; and &lt;em&gt;Upload&lt;/em&gt; the zipped folder. Then, extract its contents like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jdNksK4L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ub7m1p5m4dspg4huyjso.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jdNksK4L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ub7m1p5m4dspg4huyjso.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remember to delete the .zip folder, and voila! You're done!&lt;/p&gt;

&lt;p&gt;A few notes to keep in mind here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For some, it may take a while to load under your actual domain or in the same browser with all that cPanel activity. I used Incognito mode and other devices to check visit my domain and see the updates.&lt;/li&gt;
&lt;li&gt;I have not tried this with a full stack application (keyword: static) as of yet. Though I will be confronting it in the near future so stay tuned!&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>node</category>
      <category>react</category>
      <category>javascript</category>
      <category>html</category>
    </item>
    <item>
      <title>Test your C# Skills</title>
      <author>Swati</author>
      <pubDate>Tue, 22 Jun 2021 00:58:57 +0000</pubDate>
      <link>https://dev.to/swatisinghpuri/test-your-c-skills-52nh</link>
      <guid>https://dev.to/swatisinghpuri/test-your-c-skills-52nh</guid>
      <description>&lt;p&gt;My journey with learning .NET stack started with C# concepts. As I did not have any adequate financial support or the dedicated environment of people sharing same goals. I was left with no option but to self-teach myself the concepts/logic and internet was my only friend and mentor. &lt;/p&gt;

&lt;p&gt;I have made a small test platform using HTML, CSS and JS where one can test their basic knowledge of C# programming. It is completely beginner friendly MCQ based application. Let me give a little overview of C#.&lt;/p&gt;

&lt;p&gt;C# is a programming language developed by Microsoft that runs on the .NET Framework. C# is used to develop web applications, desktop &amp;amp; mobile apps, games and more. It is known as Step sibling of Java as it resembles with syntaxes, semantics of Java and is OOP’s based with advance features of garbage collection and compilers generating IL code. It is foundation base for creating apps on .Net. &lt;/p&gt;

&lt;p&gt;A C# developer should be aware of basic of C# concepts as CLS, CTS, boxing, unboxing, casting, string, arrays to advance concepts as inheritance, interface, abstraction, multithreading, generics, exception handling, delegates, and events. Although, this test app is beginner friendly so even if you are not much comfortable with C# advance topics, you could practise the test. Below is the link for Test your C# Skills application.&lt;br&gt;
&lt;a href="https://swati-quizapp.netlify.app"&gt;https://swati-quizapp.netlify.app&lt;/a&gt; &lt;/p&gt;

</description>
      <category>csharp</category>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Filter javascript</title>
      <author>Augusto Araujo da Rocha</author>
      <pubDate>Tue, 22 Jun 2021 00:41:08 +0000</pubDate>
      <link>https://dev.to/augustoaraujoo/filter-javascript-4b9g</link>
      <guid>https://dev.to/augustoaraujoo/filter-javascript-4b9g</guid>
      <description>&lt;p&gt;Aqui vai algumas dicas de como utilizar o método "filter" em seu código !&lt;br&gt;
este comando irá filtrar os "dados" que você deseja , para uma visualização ou etc...&lt;/p&gt;

&lt;p&gt;vamos começar ! &lt;/p&gt;

&lt;p&gt;const car =[&lt;br&gt;
{type:"ferrari",modelo:"f420",estadoDeVenda:"vendido"}{type:"volks",modelo:"v10",estadoDeVenda:"indisponível"}&lt;br&gt;
]&lt;/p&gt;

&lt;p&gt;o exemplo abaixo vai retornar apenas o "estadoDeVenda", pois estamos utilizando o método 'filter' , neste caso eu quero que retorne apenas os 'carros' que foram vendidos&lt;/p&gt;

&lt;p&gt;const venda = car⇒car.estadoDeVenda === 'vendido'&lt;br&gt;
console.log(carro.filter(Vendas))&lt;/p&gt;

&lt;p&gt;outro exemplo &lt;br&gt;
sem criar uma variável&lt;/p&gt;

&lt;p&gt;console.log(carro.filter(function(p){&lt;br&gt;
return p.estadoVenda === 'vendido'})) &lt;/p&gt;

&lt;p&gt;Eai gostou dessas dicas ? caso algo não ficou claro para você deixe seu feedback !&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Day 6 of #100DaysOfCode!
</title>
      <author>Christian Falucho</author>
      <pubDate>Tue, 22 Jun 2021 00:10:25 +0000</pubDate>
      <link>https://dev.to/cfalucho/day-6-of-100daysofcode-1m0m</link>
      <guid>https://dev.to/cfalucho/day-6-of-100daysofcode-1m0m</guid>
      <description>&lt;h3&gt;Today's progress🏍&lt;/h3&gt;

&lt;p&gt;I worked on inheritance, DRY (Don't Repeat Yourself) and supertype (parent). The benefit of inheritances and DRY is so that you don't rewrite code and it is about writing less code on your application. This way you deal with less problems (bugs) and write cleaner code. You can just imagine code can get extremely complex as it continues to grows. So it's better to find ways to minify it.&lt;/p&gt;

&lt;h3&gt;What I learned&lt;/h3&gt;

&lt;p&gt;I learned more about objects, prototypes and inheritances. The examples I worked on will hopefully explain how inheritance works and the benefits of it.&lt;/p&gt;

&lt;p&gt;So what is &lt;code&gt;inheritance&lt;/code&gt; in Object-oriented programming? Inheritance allows for one class to inherit (or obtain) the attributes and methods of another class. The class whose properties and methods are &lt;strong&gt;inherited&lt;/strong&gt; is known as the &lt;code&gt;Parent&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;The example below shows two &lt;em&gt;object constructors&lt;/em&gt; and they both have a something in common, which is the &lt;code&gt;drive&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function Car(){}

Car.prototype = {
   constructor: Car,
   drive: () =&amp;gt; {
     console.log("Vroom vroom")
   }
}

function Motorcycle() {}

Motorcycle.prototype = {
   constructor: Motorcycle,
   drive: () =&amp;gt; {
     console.log("Vroom vroom")
   }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because we know both vehicles can both be driven and make the sound &lt;em&gt;Vroom vroom&lt;/em&gt;, we can simplify and reduce the code by using the DRY principle and create a supertype (or parent) called &lt;code&gt;Vehicle&lt;/code&gt; and removing the drive method from both Car and Motorcycle and putting it in Vehicle.&lt;/p&gt;

&lt;p&gt;So let's go ahead and create that.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//child object
function Car(){}

Car.prototype = {
   constructor: Car,
   drive: () =&amp;gt; {
     console.log("Vroom vroom")
   }
}

//child object
function Motorcycle() {}

Motorcycle.prototype = {
   constructor: Motorcycle,
   drive: () =&amp;gt; {
     console.log("Vroom vroom")
   }
}

// parent object
function Vehicle() {}

Vehicle.prototype = {
   constructor: Vehicle,
   drive: () =&amp;gt; {
     console.log("Vroom vroom")
   }  
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Inheritance&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We created a supertype, used the DRY principle and now we want to apply inheritance. In other words, we want to inherit from the supertype, in this case the &lt;code&gt;Vehicle&lt;/code&gt; object. We can create a new instance of Animal simply by using a the method&lt;br&gt;
&lt;code&gt;Object.create(obj)&lt;/code&gt;. This will create a new object and set &lt;code&gt;obj&lt;/code&gt; as the new object's prototype. &lt;/p&gt;

&lt;p&gt;Here is what that looks like.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Car.prototype = Object.create(Vehicle.prototype)

let honda = new Car();

console.log(honda.drive());
//output: "Vroom vroom"

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The subtype (or child) &lt;code&gt;Car&lt;/code&gt; is now an instance of Vehicle. When we create a new &lt;code&gt;Car&lt;/code&gt; object and store it into variable honda. &lt;code&gt;honda&lt;/code&gt; now inherits all of &lt;code&gt;Vehicle&lt;/code&gt;'s properties and thus can perform the &lt;code&gt;drive()&lt;/code&gt; method.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>100daysofcode</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
