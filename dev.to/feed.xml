<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>DON’T PANIC! Averting the DDOS crisis in under 5 minutes with Cloudflare</title>
      <author>Maxence</author>
      <pubDate>Fri, 02 Jul 2021 09:42:22 +0000</pubDate>
      <link>https://dev.to/monisnap/don-t-panic-averting-the-ddos-crisis-in-under-5-minutes-with-cloudflare-10lh</link>
      <guid>https://dev.to/monisnap/don-t-panic-averting-the-ddos-crisis-in-under-5-minutes-with-cloudflare-10lh</guid>
      <description>&lt;p&gt;As your business gains traction, your success will inevitably bring its share of malicious actors who will try everything to breach your systems and considerably slow down your operations.&lt;/p&gt;

&lt;p&gt;One such threat are distributed denial-of-service (DDOS) attacks whereby the perpetrator floods a server with high network traffic loads coming from multiple sources, effectively disrupting the service and preventing legitimate users from accessing it.&lt;/p&gt;

&lt;p&gt;Startups and SMEs are particularly exposed because they seldom have the resources to prepare for the unexpected and the impact of something seen as unlikely is often underestimated if not completely overlooked.&lt;/p&gt;

&lt;p&gt;This guide will help you mitigate the risk in no time with a hassle-free, fully-managed and affordable solution.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#meet-cloudflare"&gt;
  &lt;/a&gt;
  Meet Cloudflare
&lt;/h2&gt;

&lt;p&gt;Security can be tricky and requires extreme meticulousness. A system is only as strong as its weakest component, and the slightest negligence can lead to disastrous consequences.&lt;/p&gt;

&lt;p&gt;Going managed can be a sensible choice if you are not positive you can handle security on your own. It ensures your infrastructure security is kept to the highest quality standards as new threats keep emerging.&lt;/p&gt;

&lt;p&gt;Cloudflare offers a battle-tested DDOS protection service &lt;a href="https://www.cloudflare.com/case-studies/"&gt;trusted by major companies throughout the world&lt;/a&gt;. The set-up can be done in a jiffy and their &lt;a href="https://www.cloudflare.com/plans/"&gt;pricing plans&lt;/a&gt; start with a free tier.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works
&lt;/h2&gt;

&lt;p&gt;Cloudflare acts as a gatekeeper between your server and the end-user trying to access it. It analyzes incoming requests and validates them against well-known threats and other inferences it has made over time from its experience of dealing with vast amounts of traffic worldwide.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m9DTGxvI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sf1bdwo2dxr3hf5diay2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m9DTGxvI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sf1bdwo2dxr3hf5diay2.png" alt="How Cloudflare works"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can choose how to deal with suspicious traffic, for example by presenting the user with a CAPTCHA or by blocking requests that match certain characteristics.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-cloudflare"&gt;
  &lt;/a&gt;
  Setting up Cloudflare
&lt;/h2&gt;

&lt;p&gt;When configured properly, transitioning to Cloudflare can be done without any downtime. Please make sure to understand every step perfectly and prepare a contingency plan before proceeding.&lt;/p&gt;

&lt;p&gt;You will need to have editor access to your Domain Name Server (DNS), typically found on your registrar’s dashboard. You may determine your registrar via &lt;a href="https://lookup.icann.org/"&gt;WHOIS&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Create a &lt;a href="https://dash.cloudflare.com/sign-up"&gt;Cloudflare account&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Once on the dashboard, proceed to &lt;strong&gt;adding your domain&lt;/strong&gt; by clicking on “Add a Site”.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Select the plan&lt;/strong&gt; that you deem best fit to your needs. DDOS protection is included in the free plan. &lt;a href="https://www.cloudflare.com/plans/"&gt;Other plans&lt;/a&gt; typically feature additional optimizations (caching, image compression etc) and more responsive support.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;List your DNS records&lt;/strong&gt; (in layman’s terms, instructions about how to handle requests passing through your domain). Clouflare will automatically try to scan your current configuration. However, please make sure that it matches the configuration you see on your DNS. Add missing records manually if needed. At this point the cloud icons should be greyed out, meaning Cloudflare is not yet proxying the traffic. You may skip the next screen about changing your nameserver for now; we’ll get back to it later.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---WevvJjI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8njo30jt7ehymjw4xsjh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---WevvJjI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8njo30jt7ehymjw4xsjh.png" alt="Listing DNS records"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IMPORTANT - Before moving on to the next steps, make sure to &lt;strong&gt;whitelist IP addresses&lt;/strong&gt; necessary for the proper functioning of your service (typically those of other microservices or partners it needs to communicate with). Failing to do so might disrupt your services. To do so, head over to the “Firewall &amp;gt; Tools” section and add the set of IP addresses to allow.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7_85wFkw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/on1n0j7opmz0a5hlx5hg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7_85wFkw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/on1n0j7opmz0a5hlx5hg.png" alt="Whitelisting IP addresses"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now you’ll need to &lt;strong&gt;configure your DNS to point to the Cloudflare servers&lt;/strong&gt;. This step might vary depending on your registrar (or DNS provider), but the interface should look similar. For example on Namecheap, you will need to switch to “Custom DNS” and replace the existing nameservers with Cloudflare’s.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YsBAw3QV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xt8y6rurv4ac7br887p6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YsBAw3QV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xt8y6rurv4ac7br887p6.png" alt="Configuring a custom DNS on Namecheap"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cloudflare’s nameservers you should be pointed at can be found in the “Overview” section (the values may differ from the ones in the screenshot).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dl00siNG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/83f1r8stzqgt1x9wbpqo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dl00siNG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/83f1r8stzqgt1x9wbpqo.png" alt="Find Cloudflare's nameservers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The new DNS configuration takes some time to propagate (from a few minutes up to a couple of hours depending on your registrar).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;At this point you’re ready to activate Cloudflare. Until now, traffic was rerouted directly onto your servers without any filtering. Turning on Cloudflare’s proxy on the DNS records you listed in step 4 will effectively activate the protection. This is the step where it all comes together. &lt;strong&gt;Make sure everything is correct&lt;/strong&gt; for the umpteenth time before proceeding. Once you are confident, head over to the “DNS” section and &lt;strong&gt;turn on the proxy on all the records&lt;/strong&gt;. Cloud icons should now appear orange, meaning the DNS record is properly proxied by Cloudflare. If anything were to go wrong at this stage, immediately turn off the proxy on every DNS record.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e5jtlDfk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2irx2g2w00sflncnxgye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e5jtlDfk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2irx2g2w00sflncnxgye.png" alt="Turning on Cloudflare's proxy"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You are almost done. Until now, your server’s IP address was directly exposed to the public. Cloudflare adds a new layer on top of your server and obfuscates its IP address to new users. However the original IP address is still accessible, and Cloudflare cannot do anything to protect you from direct-access attacks. A good strategy is to &lt;strong&gt;configure your server to only accept requests forwarded by Cloudflare&lt;/strong&gt;. Additionally you might want to allocate a new IP address to your server for good measure.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Congratulations! You made it through and &lt;strong&gt;your server is now protected against DDOS attacks&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Please let me know if you run into any problems or if you’re interested in diving deeper into the subject. Cloudflare offers many more features you might be interested in such as caching and compression which can improve performance and eventually save money.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>SvelteKit release date?</title>
      <author>kvetoslavnovak</author>
      <pubDate>Fri, 02 Jul 2021 09:13:39 +0000</pubDate>
      <link>https://dev.to/kvetoslavnovak/sveltekit-release-date-406f</link>
      <guid>https://dev.to/kvetoslavnovak/sveltekit-release-date-406f</guid>
      <description>&lt;p&gt;Stuff to nail down before launch &lt;a href="https://github.com/sveltejs/kit/milestone/2"&gt;https://github.com/sveltejs/kit/milestone/2&lt;/a&gt;&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>github</category>
      <category>sveltekit</category>
    </item>
    <item>
      <title>Jetpack Compose - Alert Dialogs</title>
      <author>Bernat Borrás Paronella</author>
      <pubDate>Fri, 02 Jul 2021 09:06:02 +0000</pubDate>
      <link>https://dev.to/adevintaspain/jetpack-compose-alert-dialogs-8j</link>
      <guid>https://dev.to/adevintaspain/jetpack-compose-alert-dialogs-8j</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xn7IhzXj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o01g8yp2oy2uzd2olkb9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xn7IhzXj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o01g8yp2oy2uzd2olkb9.png" alt="Material Aalert Dialog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The code presented in this article is using compose &lt;em&gt;rc01&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Jetpack Compose brings us with a cool new UI toolkit, but some things are completely different from how we are used to it, one of these cases is &lt;code&gt;AlertDialog&lt;/code&gt; a common component on any application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps-to-display-an-alertdialog-on-compose"&gt;
  &lt;/a&gt;
  Steps to display an AlertDialog on compose:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create a state as a flag to check if we need to show the dialog or not.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;showDialog&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nf"&gt;remember&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nf"&gt;mutableStateOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;You may need to import:&lt;br&gt;
&lt;code&gt;import androidx.compose.runtime.getValue&lt;/code&gt;&lt;br&gt;
&lt;code&gt;import androidx.compose.runtime.setValue&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#basic-alertdialog"&gt;
  &lt;/a&gt;
  Basic AlertDialog:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;showDialog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;AlertDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;onDismissRequest&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="n"&gt;confirmButton&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="n"&gt;dismissButton&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's see what's each param of &lt;code&gt;AlertDialog&lt;/code&gt; composable method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;    &lt;span class="n"&gt;onDismissRequest&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Will be called when clicking outside of a dialog, here we must set &lt;code&gt;showDialog&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to remove it from our stack.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Add a &lt;code&gt;Text&lt;/code&gt; to show a title and message of our &lt;code&gt;AlertDialog&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;    &lt;span class="n"&gt;confirmButton&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="n"&gt;dismissButton&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Define a &lt;code&gt;Button&lt;/code&gt; or &lt;code&gt;TextButton&lt;/code&gt; and its &lt;code&gt;Text&lt;/code&gt; to get actions like "Accept" or "Cancel"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When click on confirm or button we must set our &lt;code&gt;showDialog&lt;/code&gt; to false also, to avoid showing the dialog on the next recomposition.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;    &lt;span class="n"&gt;onDismissRequest&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;showDialog&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="n"&gt;confirmButton&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;showDialog&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="n"&gt;dismissButton&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;showDialog&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#other-dialogs"&gt;
  &lt;/a&gt;
  Other dialogs
&lt;/h2&gt;

&lt;p&gt;What if we want to display custom content, like a list of items to select one?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    text = { 
       LazyColumn {
          items(...) { item -&amp;gt; Text(text = item) }
       }
    },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use the &lt;code&gt;text&lt;/code&gt; field of &lt;code&gt;AlertDialog&lt;/code&gt; to display any content that is needed and handle the dialog in the same way of buttons: &lt;code&gt;showDialog = false&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Hope you enjoyed the article!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://careers.adevinta.es/ofertas/?search=android&amp;amp;stc=aff-blog%20dev.to-jetpack%20compose%20_%20alert%20dialogs%20bernat%20borras"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--saKpl-U9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8c861pb7skrzwx301tqg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>android</category>
      <category>compose</category>
      <category>dialogs</category>
    </item>
    <item>
      <title>Send mails using NodeJS</title>
      <author>Abayomi Ogunnusi</author>
      <pubDate>Fri, 02 Jul 2021 08:43:10 +0000</pubDate>
      <link>https://dev.to/drsimplegraffiti/send-mails-using-nodejs-42ag</link>
      <guid>https://dev.to/drsimplegraffiti/send-mails-using-nodejs-42ag</guid>
      <description>&lt;p&gt;Hey, fams! today we are going to learn how to send e-mails, right from our IDE using NodeJS. The module of interest is called Nodemailer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/UwrdbvJz1CNck/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/UwrdbvJz1CNck/giphy.gif" alt="puppy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;🔗 NodeJs &lt;br&gt;
🔗 Nodemailer&lt;br&gt;
🔗 Email account&lt;/p&gt;



&lt;p&gt;🎯 Steps&lt;br&gt;
Open editor (VSCode 😁), initialize your project with the command below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This command initiates a &lt;code&gt;package.json&lt;/code&gt;, &lt;code&gt;package.json.lock&lt;/code&gt;, and &lt;code&gt;index.js&lt;/code&gt; (main entry file). The &lt;code&gt;index.js&lt;/code&gt; will house all our logic.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#dependencies"&gt;
  &lt;/a&gt;
  Dependencies
&lt;/h2&gt;

&lt;p&gt;📌Install Nodemailer&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="nx"&gt;nodemailer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;📌 Import the package inside &lt;code&gt;index.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nodemailer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;nodemailer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;👨🏽‍🏫 For security reasons, make sure you install and use &lt;strong&gt;dot.env&lt;/strong&gt; package to prevent your password from being exposed or pushed to GitHub.&lt;br&gt;
&lt;code&gt;Install dotenv&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;S&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yKuHb3WA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9oxqlv82xhsdvo8qd9hy.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yKuHb3WA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9oxqlv82xhsdvo8qd9hy.JPG" alt="ignor"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Require dotenv in your &lt;code&gt;index.js&lt;/code&gt; file. I didn't require it in this project because I am using dummy data.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then, create a &lt;code&gt;.env&lt;/code&gt; file your email and password&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Email&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;***********&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;gmail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;com&lt;/span&gt;
&lt;span class="nx"&gt;Password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;******&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XIT5vQNb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wojtfrfsmugotenhp6dw.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XIT5vQNb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wojtfrfsmugotenhp6dw.JPG" alt="env"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#logic"&gt;
  &lt;/a&gt;
  Logic
&lt;/h2&gt;

&lt;p&gt;🎯 Your auth logic in &lt;code&gt;index.js&lt;/code&gt; with &lt;code&gt;dotenv&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Gmail account info&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;transporter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;nodemailer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createTransport&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;service&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;gmail&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;EMAIL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PASSWORD&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;🎯 Your auth logic in &lt;code&gt;index.js&lt;/code&gt; without &lt;code&gt;dotenv&lt;/code&gt;. Write the logic below and of course change the email to your own and the password to yours too.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Gmail account info&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;transporter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;nodemailer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createTransport&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;service&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;gmail&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dsimple@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ilovemymama&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;🎯 Next use the mailOption to send your message.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Email info&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mailOptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dsimple@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fams@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;How to send emails using NodeJS&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Follow the instructions and you will be fine&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;🎯 Lastly, write:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Send email 📧  and retrieve server response&lt;/span&gt;
&lt;span class="nx"&gt;transporter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendMail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mailOptions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Email sent: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;When done properly, you should have the following logic in your &lt;code&gt;index.js&lt;/code&gt;. That is if you choose not to use the &lt;code&gt;dotenv&lt;/code&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pOY2OLIo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4lcvg28ffo3hgnby1wl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pOY2OLIo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4lcvg28ffo3hgnby1wl.png" alt="carbon (28)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To run: type 👇🏼 in your terminal&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;Note: On your Gmail, do not forget to accept and allow the &lt;strong&gt;"Less secure apps"&lt;/strong&gt; access to use your scripts with your Gmail SMTP connection. Gmail will alert you with an error if this option is off, you need to turn it on.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--647atwBx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l8flcnjd5znq52zuv4tg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--647atwBx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l8flcnjd5znq52zuv4tg.jpg" alt="alert"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://myaccount.google.com/lesssecureapps"&gt;Disable Less App Here&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#multiple-emails-cc-and-bcc"&gt;
  &lt;/a&gt;
  Multiple emails, CC and BCC
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mailOptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dsimple@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fams@gmail.com,myrealfams@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;cc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lexus@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;bcc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sugar@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;How to send emails using NodeJS&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Follow the instructions and you will be fine&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#send-attachment"&gt;
  &lt;/a&gt;
  Send attachment
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mailOptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dsimple@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fams@gmail.com,myrealfams@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;cc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lexus@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;bcc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sugar@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;How to send emails using NodeJS&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Follow the instructions and you will be fine&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;attachment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;
    &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;robocop.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./img/robocop.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Thanks 🙌🏽 for reading&lt;br&gt;
&lt;a href="https://dev.to/drsimplegraffiti/chat-app-using-socket-io-1hp0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HFytooa_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrgtqfoxxg78kugbqhnm.png" alt="Read my Web Socket"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/drsimplegraffiti"&gt;
        drsimplegraffiti
      &lt;/a&gt; / &lt;a href="https://github.com/drsimplegraffiti/drsimplegraffiti"&gt;
        drsimplegraffiti
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Config files for my GitHub profile.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/drsimplegraffiti/drsimplegraffiti/blob/main/my%20banner1.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SEimLKUY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/drsimplegraffiti/drsimplegraffiti/raw/main/my%2520banner1.png" alt="Calm Developer"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Hi 👋, I'm Abayomi&lt;/h1&gt;
&lt;h3&gt;
A passionate Web developer from Nigeria&lt;/h3&gt;
&lt;p&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/0221f07f12f1c558b0bb19eb613b97fb328311347f96c85e1e3e0d5abbef3c16/68747470733a2f2f6b6f6d617265762e636f6d2f67687076632f3f757365726e616d653d647273696d706c656772616666697469266c6162656c3d50726f66696c65253230766965777326636f6c6f723d306537356236267374796c653d666c6174"&gt;&lt;img src="https://camo.githubusercontent.com/0221f07f12f1c558b0bb19eb613b97fb328311347f96c85e1e3e0d5abbef3c16/68747470733a2f2f6b6f6d617265762e636f6d2f67687076632f3f757365726e616d653d647273696d706c656772616666697469266c6162656c3d50726f66696c65253230766965777326636f6c6f723d306537356236267374796c653d666c6174" alt="drsimplegraffiti"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt; &lt;a href="https://github.com/ryo-ma/github-profile-trophy"&gt;&lt;img src="https://camo.githubusercontent.com/5b0425119d718a2d7a29a18c91a874bf87d18b05bf7565b62eb133731bffe04d/68747470733a2f2f6769746875622d70726f66696c652d74726f7068792e76657263656c2e6170702f3f757365726e616d653d647273696d706c656772616666697469" alt="drsimplegraffiti"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt; &lt;a href="https://twitter.com/drsimplegraffi1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0d465f23af0c86fcbd93694bafaed3eb69691738e2fbdcfaa4aa0dbe1d559962/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f647273696d706c65677261666669313f6c6f676f3d74776974746572267374796c653d666f722d7468652d6261646765" alt="drsimplegraffi1"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;🔭 I’m currently working on &lt;a href="https://dashboard.heroku.com/apps/bookoroma" rel="nofollow"&gt;Bookoroma&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🌱 I’m currently learning &lt;strong&gt;Backend Node Js&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;📝 I regularly write articles on &lt;a href="https://dev.to/drsimplegraffiti" rel="nofollow"&gt;https://dev.to/drsimplegraffiti&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;📫 How to reach me &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/drsimplegraffiti/drsimplegraffiti/main/mailto:abayomiogunnusi@gmail.com"&gt;abayomiogunnusi@gmail.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;📄 Know about my experiences &lt;a href="https://www.linkedin.com/in/abayomi-ogunnusi-974826141/" rel="nofollow"&gt;https://www.linkedin.com/in/abayomi-ogunnusi-974826141/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;⚡ Fun fact &lt;strong&gt;I'm an alien&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Connect with me:&lt;/h3&gt;
&lt;p&gt;
&lt;a href="https://codepen.io/drsimplegraffiti" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rzM7H5iw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/rahuldkjain/github-profile-readme-generator/master/src/images/icons/Social/codepen.svg" alt="drsimplegraffiti" height="30" width="40"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/drsimplegraffi1" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iWv4sl3q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/rahuldkjain/github-profile-readme-generator/master/src/images/icons/Social/twitter.svg" alt="drsimplegraffi1" height="30" width="40"&gt;&lt;/a&gt;
&lt;a href="https://stackoverflow.com/users/15661401" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M0U8MM-r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/rahuldkjain/github-profile-readme-generator/master/src/images/icons/Social/stack-overflow.svg" alt="15661401" height="30" width="40"&gt;&lt;/a&gt;
&lt;a href="https://instagram.com/drsimplegraffiti" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---za7rTXo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/rahuldkjain/github-profile-readme-generator/master/src/images/icons/Social/instagram.svg" alt="drsimplegraffiti" height="30" width="40"&gt;&lt;/a&gt;
&lt;a href="https://medium.com/@drsimplegraffiti" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RxX0CMZ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/rahuldkjain/github-profile-readme-generator/master/src/images/icons/Social/medium.svg" alt="@drsimplegraffiti" height="30" width="40"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h3&gt;
Languages and Tools:&lt;/h3&gt;
&lt;p&gt; &lt;a href="https://getbootstrap.com" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--38b8DYFn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/bootstrap/bootstrap-plain-wordmark.svg" alt="bootstrap" width="40" height="40"&gt; &lt;/a&gt; &lt;a href="https://www.w3schools.com/css/" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mHD1LdvX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/css3/css3-original-wordmark.svg" alt="css3" width="40" height="40"&gt; &lt;/a&gt; &lt;a href="https://expressjs.com" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Np3l8NWm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/express/express-original-wordmark.svg" alt="express" width="40" height="40"&gt; &lt;/a&gt; &lt;a href="https://git-scm.com/" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/fbfcb9e3dc648adc93bef37c718db16c52f617ad055a26de6dc3c21865c3321d/68747470733a2f2f7777772e766563746f726c6f676f2e7a6f6e652f6c6f676f732f6769742d73636d2f6769742d73636d2d69636f6e2e737667" alt="git" width="40" height="40"&gt; &lt;/a&gt; &lt;a href="https://heroku.com" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/df12cb598044a3f38efc1f45e3580558c324cf8789b79487125044eeebcc4dee/68747470733a2f2f7777772e766563746f726c6f676f2e7a6f6e652f6c6f676f732f6865726f6b752f6865726f6b752d69636f6e2e737667" alt="heroku" width="40" height="40"&gt; &lt;/a&gt; &lt;a href="https://www.w3.org/html/" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QXRvq6Ke--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/html5/html5-original-wordmark.svg" alt="html5" width="40" height="40"&gt; &lt;/a&gt; &lt;a href="https://www.adobe.com/in/products/illustrator.html" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/9e245893108b5ca27e7ac3d4a802d513f657b32aa7b5765bd92df7fb55d0ed54/68747470733a2f2f7777772e766563746f726c6f676f2e7a6f6e652f6c6f676f732f61646f62655f696c6c7573747261746f722f61646f62655f696c6c7573747261746f722d69636f6e2e737667" alt="illustrator" width="40" height="40"&gt; &lt;/a&gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QG_b2spU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/javascript/javascript-original.svg" alt="javascript" width="40" height="40"&gt; &lt;/a&gt; &lt;a href="https://www.mongodb.com/" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V-ExagyZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/mongodb/mongodb-original-wordmark.svg" alt="mongodb" width="40" height="40"&gt; &lt;/a&gt; &lt;a href="https://nodejs.org" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zw8Pc0Q8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/nodejs/nodejs-original-wordmark.svg" alt="nodejs" width="40" height="40"&gt; &lt;/a&gt; &lt;a href="https://www.photoshop.com/en" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sf0HeNaf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/photoshop/photoshop-line.svg" alt="photoshop" width="40" height="40"&gt; &lt;/a&gt; &lt;a href="https://postman.com" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/93b32389bf746009ca2370de7fe06c3b5146f4c99d99df65994f9ced0ba41685/68747470733a2f2f7777772e766563746f726c6f676f2e7a6f6e652f6c6f676f732f676574706f73746d616e2f676574706f73746d616e2d69636f6e2e737667" alt="postman" width="40" height="40"&gt; &lt;/a&gt; &lt;a href="https://reactjs.org/" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q7e3Gep6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/react/react-original-wordmark.svg" alt="react" width="40" height="40"&gt; &lt;/a&gt; &lt;a href="https://sass-lang.com" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gZefvAmh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/sass/sass-original.svg" alt="sass" width="40" height="40"&gt; &lt;/a&gt; &lt;a href="https://www.adobe.com/products/xd.html" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/c205ecbe12500177d102169d97bc1c17c545155fdf5ec78c08d54ac53e5b38c1/68747470733a2f2f63646e2e776f726c64766563746f726c6f676f2e636f6d2f6c6f676f732f61646f62652d78642e737667" alt="xd" width="40" height="40"&gt; &lt;/a&gt; &lt;/p&gt;
&lt;h3&gt;
Support:&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/drsimplegraffiti" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/28aae05a0fba45679e8e27d90609601e249b64a5fe30dfef05495de4f4e318d4/68747470733a2f2f63646e2e6275796d6561636f666665652e636f6d2f627574746f6e732f76322f64656661756c742d79656c6c6f772e706e67" height="50" width="210" alt="drsimplegraffiti"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/600a51e3614bad11537732d6a182b66ea04748f5225d2db4123a154d315c469a/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170692f746f702d6c616e67733f757365726e616d653d647273696d706c6567726166666974692673686f775f69636f6e733d74727565266c6f63616c653d656e266c61796f75743d636f6d70616374"&gt;&lt;img src="https://camo.githubusercontent.com/600a51e3614bad11537732d6a182b66ea04748f5225d2db4123a154d315c469a/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170692f746f702d6c616e67733f757365726e616d653d647273696d706c6567726166666974692673686f775f69636f6e733d74727565266c6f63616c653d656e266c61796f75743d636f6d70616374" alt="drsimplegraffiti"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4b87d0951cc2628ad9b0c95e00dd0c10dcb4d4c85bfd2e662ecef3f64069bab6/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170693f757365726e616d653d647273696d706c6567726166666974692673686f775f69636f6e733d74727565266c6f63616c653d656e"&gt;&lt;img src="https://camo.githubusercontent.com/4b87d0951cc2628ad9b0c95e00dd0c10dcb4d4c85bfd2e662ecef3f64069bab6/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170693f757365726e616d653d647273696d706c6567726166666974692673686f775f69636f6e733d74727565266c6f63616c653d656e" alt="drsimplegraffiti"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/452232592ebf9c9a7800f859a1ddbc83e6798e063daa551312e6689ef899e54d/68747470733a2f2f6769746875622d726561646d652d73747265616b2d73746174732e6865726f6b756170702e636f6d2f3f757365723d647273696d706c65677261666669746926"&gt;&lt;img src="https://camo.githubusercontent.com/452232592ebf9c9a7800f859a1ddbc83e6798e063daa551312e6689ef899e54d/68747470733a2f2f6769746875622d726561646d652d73747265616b2d73746174732e6865726f6b756170702e636f6d2f3f757365723d647273696d706c65677261666669746926" alt="drsimplegraffiti"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/drsimplegraffiti/drsimplegraffiti"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#discuss"&gt;
  &lt;/a&gt;
  Discuss
&lt;/h2&gt;

&lt;p&gt;What other email 📬 services can you use apart from Gmail without toggling off the Less Secure App setting?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://nodejs.org/en/"&gt;Download NodeJs&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.npmjs.com/package/nodemailer"&gt;npm Reference&lt;/a&gt;&lt;br&gt;
&lt;a href="https://nodemailer.com/about/"&gt;Nodemailer site&lt;/a&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>A Completely FREE planning poker app 💸 – Speed up your planning process!</title>
      <author>Luke Garrigan</author>
      <pubDate>Fri, 02 Jul 2021 08:00:16 +0000</pubDate>
      <link>https://dev.to/lukegarrigan/a-completely-free-planning-poker-app-speed-up-your-planning-process-115e</link>
      <guid>https://dev.to/lukegarrigan/a-completely-free-planning-poker-app-speed-up-your-planning-process-115e</guid>
      <description>&lt;p&gt;Estimating is tough, and us  &lt;a href="https://codeheir.com/2019/08/10/why-developers-are-so-sht-at-estimating/"&gt;developers are pretty sh*t at it&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are many ways to go about estimating, using the &lt;a href="https://www.mountaingoatsoftware.com/blog/why-the-fibonacci-sequence-works-well-for-estimating"&gt;Fibonacci sequence&lt;/a&gt;, the modified Fibonacci sequence, &lt;a href="https://www.c-sharpcorner.com/article/agile-story-point-estimation-techniques-t-shirt-sizing/"&gt;t-shirt sizing estimating&lt;/a&gt;, etc. My team tends to go for the Fibonnaci sequence to measure the complexity of tickets in order to story point.&lt;/p&gt;

&lt;p&gt;There are some brilliant apps out there to help us with estimating but all of them are stuck behind a paywall in some way or another.&lt;/p&gt;

&lt;p&gt;So I decided to create a planning poker app that is  &lt;strong&gt;free&lt;/strong&gt;. You can find the app at  &lt;a href="https://www.planfree.dev/"&gt;planfree.dev&lt;/a&gt;. It is completely open-source and the code can be found at  &lt;a href="https://github.com/LukeGarrigan/planfree.dev"&gt;github.com/LukeGarrigan/planfree.dev&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you’re interested in the development process go ahead and check out the blog I wrote  &lt;a href="https://codeheir.com/2021/02/27/coding-a-planning-poker-app/"&gt;Coding a Planning Poker App.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q06O5PVA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/codeheir.com/wp-content/uploads/2021/07/image.png%3Fresize%3D723%252C366%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q06O5PVA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/codeheir.com/wp-content/uploads/2021/07/image.png%3Fresize%3D723%252C366%26ssl%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When clicking “Start new game” it’ll create a room for you and your team.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YGgv9QX7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/codeheir.com/wp-content/uploads/2021/07/image-1.png%3Fresize%3D723%252C381%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YGgv9QX7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/codeheir.com/wp-content/uploads/2021/07/image-1.png%3Fresize%3D723%252C381%26ssl%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All you need to do is click “Invite Players” and send them the link.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pIYDgehv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/codeheir.com/wp-content/uploads/2021/07/image-2.png%3Fresize%3D723%252C366%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pIYDgehv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/codeheir.com/wp-content/uploads/2021/07/image-2.png%3Fresize%3D723%252C366%26ssl%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once your team have joined the game, all that’s left to do is vote by clicking one of the Fibonacci estimation tiles at the bottom.  &lt;em&gt;If your team uses a different voting system such as the T-Shirt or Powers of 2 then don’t panic, there’s a  &lt;a href="https://github.com/LukeGarrigan/planfree.dev/issues/11"&gt;Github Issue&lt;/a&gt;  for that.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N_m2Bos6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/codeheir.com/wp-content/uploads/2021/07/image-3.png%3Fresize%3D723%252C371%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N_m2Bos6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/codeheir.com/wp-content/uploads/2021/07/image-3.png%3Fresize%3D723%252C371%26ssl%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once all players have voted it’ll count down from 3 and then reveal the cards:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5BD_IMz6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/codeheir.com/wp-content/uploads/2021/07/image-4.png%3Fresize%3D723%252C352%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5BD_IMz6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/codeheir.com/wp-content/uploads/2021/07/image-4.png%3Fresize%3D723%252C352%26ssl%3D1" alt="Counting down for the reveal&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4rW7k5C2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/codeheir.com/wp-content/uploads/2021/07/image-6.png%3Fresize%3D723%252C357%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4rW7k5C2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/codeheir.com/wp-content/uploads/2021/07/image-6.png%3Fresize%3D723%252C357%26ssl%3D1" alt="All planning cards revealed"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope this app helps you and your team in planning. And please let me know either on  &lt;a href="https://twitter.com/luke_garrigan"&gt;Twitter&lt;/a&gt;  or on the  &lt;a href="https://github.com/LukeGarrigan/planfree.dev"&gt;GitHub repo&lt;/a&gt;  if you have any suggestions and/or feedback, I’ll gladly listen as I want this app to help as many teams as possible.&lt;/p&gt;

</description>
      <category>showdev</category>
    </item>
    <item>
      <title>Why you Must "Buy me a Coffee" to Someone and Anyone. An essay about Explainable AI on Open Data and Open source Environments</title>
      <author>Miguel Tomás</author>
      <pubDate>Fri, 02 Jul 2021 07:51:35 +0000</pubDate>
      <link>https://dev.to/aeonlabs/why-you-must-buy-me-a-coffee-to-someone-and-anyone-an-essay-about-explainable-ai-on-open-data-and-open-source-environments-54i7</link>
      <guid>https://dev.to/aeonlabs/why-you-must-buy-me-a-coffee-to-someone-and-anyone-an-essay-about-explainable-ai-on-open-data-and-open-source-environments-54i7</guid>
      <description>&lt;p&gt;In the midst of the G.D.P.R., there's something about authoring, ownership, and fairness of working online, more important than anything else, and is at the same time the foundation for privacy...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4rtu6sh7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/heatbwp9qdtjf0f4nn78.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4rtu6sh7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/heatbwp9qdtjf0f4nn78.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Recently I attended an online event. The main theme was about the dangers of artificial intelligence, in particular on promoting fairness, not only in institutions and government affairs but also at the workplace on a common business and enterprise. The speaker went on for almost five hours, explaining what is being promoted in the European Commission towards the challenges I mentioned in this article: The need for algorithms, in particular, artificial intelligence and machine learning algorithms,  of being publicly explainable away from the “black box“ way of doing business, that is to say, away from “industrial secrecy” of the recipe that lies inside the AI model. However, at the end of the event, I felt the speaker didn’t address the theme properly and failed to address the underlying concern before anything else: the definition of work and its new meanings, one that includes all outcomes of all these technologies, nowadays everywhere and around us. &lt;/p&gt;

&lt;p&gt;By all outcomes, I’m referring to the simplest and smallest task a citizen online, a.k.a. “user”,   can take and do: writing a short message and publishing it online, publicly accessible to anyone. Of course, the message from an author can assume many forms, for instance, be a “comment” in a “post” on “social media”.  The author can also make the message larger, bigger, with more words and sentences. Can include an image, a photo, or even attach a video to it. And the process of creating authentic content does not stop at the end of the message or “comment“ about being published. The author can also add a #tag or even add a web address link to another page, which the author finds useful for some unforeseeable reason to some but makes sense to others. &lt;/p&gt;

&lt;p&gt;All of it involves a task: and the simplest and smallest one is to take some time to type each individual letter and emoji and at the end push the button to “send“. &lt;/p&gt;

&lt;p&gt;I’m making a pause here to include the definition of Task I’m using here. One which includes definitions of Work, including the economic definition of Labor and Human Capital. And, as anyone may argue rightfully, attached to it, is as well, Time, in particular the amount of time the author gave or even dedicated for publishing online. &lt;/p&gt;

&lt;p&gt;But why is so vital to think at this level, when referring to the need for fairness and explainability of tasks, whether is done by human capital-labor, whether is executed by an autonomous, automatic system, or machine?  &lt;/p&gt;

&lt;p&gt;Well, may not be evident on the spot when looking at a simple tweet on Twitter.  One that has a maximum of 280 characters. Unless one dedicates enough time to think (and meditate) about it. While on it, the author of that particular short tweet added another one, one which included a high definition photograph. If you’re a professional photographer you’re going to understand what I’m about to say more easily. The amount of dedication expressed as a function of both time and work-task activities cannot, and should not be neglected nor discarded when arguing such matters, not even at the higher level where the European commission usually is. It asks the author, as an online user, to study and learn the trades of photography, the expenses needed for that photo to happen, including pieces of equipment, preparation tasks, etc. The same,  when dealing not with a photograph but instead while filming a video for later posting on the user’s YouTube channel for everyone to see. And finally, can be generalized to any other task, by any other user even those not working on media or marketing. Furthermore, nowadays, remote work is no longer a trend of a few but something to take seriously for its many advantages, far beyond costs and profits, and technology is demanding as well too on the data being asked to be collected and stored on those big databases, more importantly, the constant update of each data field on such databases. &lt;/p&gt;

&lt;p&gt;So the European Commission decided a few years back the need for such work activities to have a financial return to its owners. Back then, the concern was addressed in terms of “Big Databases“ companies such as Apple, Google, Facebook, … were amassing and turning into large amounts of profit while not being authors of the being data collected.  The reader at this point may be noodling in agreement on what I’ve been writing while saying, “indeed I also want a piece of that pie to fall into my personal bank account”. The question that failed an answer to this day, is, how much should the author ask for that particular message, for that particular tweet, since our monetary system only considers fractions of the unitary coin down to one cent. &lt;/p&gt;

&lt;p&gt;The answer to that question has been demoting further advances on this matter. Simply because the actual value of a message like a simple tweet is much lower than one cent. Unless you, the author, consider the possibility of being paid not in the traditional FIAT currency but instead getting paid in a digital “coin“. Facebook attempted this a few years back when announced the liracoin only to be forced to put the breaks on it by the US congress. The major concern was, and still is, it may become more “strategic“ than the US dollar itself while at the hands and control of a few.  Not a good setup for a democratic and free society anyone wants.  Since then, the FED and more recently the ECB arrived at this same conclusion, also due to many other factors and needs out of scope today on this article, the need of having more smaller fractions of a coin to a point of a single tweet can be quantified and measured as paid work. While that is being defined and decided, the reader may not be paid for a single tweet today, but how about an online video on YouTube publicly accessible to everyone to see? Google (hats off here to google) came to the conclusion that it was in their best interest (for many reasons, which includes courts and heavy fines) to pay for content YouTubers were making available on the platform. &lt;/p&gt;

&lt;p&gt;However, is not enough, demanding big corporations to pay for data they collect. Is also needed, for you to learn how to be paid as ask to get paid for this type of work-tasks and activities. For instance, give an hour of the reader’s time during the week, to explain a subject to someone or a group of people. What about the cases that revolve around closely related? Friends, Family, and acquaintances? Does make it an official business or can be seen differently, something more close to charity or a donation? My answer is the latter, and all those involved should be made aware of that, in particular, the advantages to all, attendees and speaker (for cases of an online event) and even on cases of really small daily tasks such as helping, on the spot, an elderly having difficulties with groceries or picking up a piece of harmless garbage on the way home. To be rewarded, also on the spot, some “pips” for such efforts. Anything, the reader can think or have already thought in the past, can be rewarded with a small amount on any digital coin available today.&lt;/p&gt;

&lt;p&gt;Why not try right now, and help this author deliver better and more often, content like this in your mailbox, while at the same time, you, the reader get an opportunity to explore and learn the advantages and benefits of doing so? Today the minimum amount being asked is 1 euro and one euro only! Click on the button below, the one it says “buy me a coffee“ and afterward don’t forget to leave me a tweet @AeonLabsS.&lt;/p&gt;

&lt;p&gt;Until next time, don’t forget to share, and if possible, subscribe for fairness of work and a fairer and safer economy.  &lt;/p&gt;




&lt;p&gt;a #tag can be an important keyword to someone reading it, unlock an area of search results and knowledge&lt;/p&gt;

&lt;p&gt;This particular article took 2 hours and 40 minutes to be written, top to bottom&lt;/p&gt;

&lt;p&gt;This article is looking for sponsors to grow. Consider giving a donation by Paypal to the author using the email &lt;a href="mailto:mtpsilva@gmail.com"&gt;mtpsilva@gmail.com&lt;/a&gt; or at least buy him a coffee by clicking on the above image link. &lt;/p&gt;

&lt;p&gt;As part of my research on online live writing, no proofreading was made to this text. Only Basic automated corrections.  Over time the reader can expect additional changes to the text without prior notification: bugs and error correction, but also for content adding. So make sure to check back later the article.If the reader, instead, prefers reading well-formatted text paragraphs, error-free; perfect notations; high-resolution graphics, figures, photos, and videos, please consider subscribing on substack.com to a monthly or yearly plan. To do so, the reader can start by clicking on the “subscribe now” button above.&lt;/p&gt;

</description>
      <category>safety</category>
      <category>privacy</category>
      <category>bestpracticesofcode</category>
    </item>
    <item>
      <title>CSS class builder</title>
      <author>Alwar G</author>
      <pubDate>Fri, 02 Jul 2021 07:23:31 +0000</pubDate>
      <link>https://dev.to/alwarg/css-class-builder-5h58</link>
      <guid>https://dev.to/alwarg/css-class-builder-5h58</guid>
      <description>&lt;p&gt;As a web developers, we need to write the styles for the given classes.&lt;/p&gt;

&lt;p&gt;But for lazy people like me, it creates too much frustration. So I decided to make the VS code extension to solve this problem and finally, I succeed in it. &lt;/p&gt;

&lt;p&gt;My extension name is &lt;strong&gt;CSS class builder.&lt;/strong&gt; It will generate the styles from your given classes in the HTML. &lt;/p&gt;

&lt;p&gt;For example, we have the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="nx"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UTF-8&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;viewport&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;width=device-width, initial-scale=1.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;My&lt;/span&gt; &lt;span class="nx"&gt;Web&lt;/span&gt; &lt;span class="nx"&gt;Page&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/title&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/head&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;section&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;w_40px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mR_auto mL_auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;red&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;display_block&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/section&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/body&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After running this extension, the above file changed into&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="nx"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UTF-8&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;viewport&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;width=device-width, initial-scale=1.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;My&lt;/span&gt; &lt;span class="nx"&gt;Web&lt;/span&gt; &lt;span class="nx"&gt;Page&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/title&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;builder&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;w_40px&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mL_auto&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mR_auto&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display_block&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/head&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;section&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;w_40px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mR_auto mL_auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;red&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;display_block&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/section&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/body&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more information kindly refer to &lt;a href="https://marketplace.visualstudio.com/items?itemName=AlwarG.css-class-builder"&gt;this&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt; I know we have a lot of good CSS frameworks like bootstrap. But it will be helpful for the people who are in the process of learning CSS styles.&lt;/p&gt;

&lt;p&gt;Repo Link: &lt;a href="https://github.com/AlwarG/css-class-builder"&gt;https://github.com/AlwarG/css-class-builder&lt;/a&gt;&lt;br&gt;
Extension Link: &lt;a href="https://marketplace.visualstudio.com/items?itemName=AlwarG.css-class-builder"&gt;https://marketplace.visualstudio.com/items?itemName=AlwarG.css-class-builder&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for reading this post 🙏. I Just tried what I know. Feel free to post your comments if you want to share something.&lt;/p&gt;

</description>
      <category>css</category>
      <category>vscode</category>
      <category>html</category>
      <category>codequality</category>
    </item>
    <item>
      <title>Git Squash Simplified</title>
      <author>Pawel</author>
      <pubDate>Fri, 02 Jul 2021 06:19:54 +0000</pubDate>
      <link>https://dev.to/pb/git-squash-simplified-3ba1</link>
      <guid>https://dev.to/pb/git-squash-simplified-3ba1</guid>
      <description>&lt;p&gt;If you have just started as an open source contributor or planning to become one, you might came across the open source projects which makes you to squash all the commits into a single one before or after opening a pull request.&lt;/p&gt;

&lt;p&gt;And as a beginner, It might feel challenging to you as the fear of messing up with other's commits can be there but all of this can be eliminated by using correct tools and extensions.&lt;/p&gt;

&lt;p&gt;In this post I'll help you to get over this fear will also help you to master and get comfortable with squashing commits.&lt;/p&gt;

&lt;p&gt;Let's start with the definition itself.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-squashing-commits-in-git-means"&gt;
  &lt;/a&gt;
  What is squashing commits in git means?
&lt;/h2&gt;

&lt;p&gt;To "squash" in Git means to combine multiple commits into a single one.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#when-to-squash-the-commits"&gt;
  &lt;/a&gt;
  When to squash the commits?
&lt;/h2&gt;

&lt;p&gt;You can squash commits at any point in the time but it's highly recommended to squash the commits while there's a correction or suggestion being done and you don't want to add an extra commit into the git history stating the corrections you've made.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#which-tools-should-i-use-to-make-it-more-easier-and-errorless"&gt;
  &lt;/a&gt;
  Which tools should I use to make it more easier and errorless?
&lt;/h2&gt;

&lt;p&gt;I would recommend using &lt;strong&gt;VSCode&lt;/strong&gt; as your code editor with the &lt;strong&gt;GitLens&lt;/strong&gt; extension installed. In this tutorial I'll be using the same.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;em&gt;So Let's get started!&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#1-first-you-have-to-change-your-default-code-editor-for-git"&gt;
  &lt;/a&gt;
  1. First you have to change your default code editor for Git.
&lt;/h3&gt;

&lt;p&gt;Git comes with nano as its default code editor, In order to make use of the GitLens extension you've to change the Git's defaut code editor to Visual Studio Code.&lt;br&gt;
To do so enter the command in the terminal&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; git config --global core.editor "code --wait"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;&lt;br&gt;
This will change your default code editor in git from nano to vscode.&lt;/p&gt;

&lt;p&gt;Now you're all set.&lt;/p&gt;

&lt;p&gt;Let's say you have made a correction to your code and committed the changes. After doing so let's get the overview of the commits you want to squash.&lt;br&gt;
To enlist the commits type below command in the terminal (Make sure you're in the same directory/git repository you want the squash the commits in.)&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git log --oneline
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Here's my output&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YO_aJhC9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r9hjfe2pro733ct0qak9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YO_aJhC9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r9hjfe2pro733ct0qak9.PNG" alt="Git Log"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Theme&lt;/em&gt; :- &lt;a href="https://marketplace.visualstudio.com/items?itemName=PawelBorkar.jellyfish"&gt;JellyFish&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Now Let's squash those commits&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In order to squash the commits we don't have any explicit command like &lt;code&gt;git squash&lt;/code&gt; or anything like that in git rather we use the rebase method to achieve the squashing of commits.&lt;/p&gt;

&lt;p&gt;So, To squash the commits you made type in the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git rebase -i HEAD~N
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;where &lt;strong&gt;N&lt;/strong&gt; is the number of commits you want to squash&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;I'll be squashing recent 2 commits so that's how my terminal will look like&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KvXzrlpA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lkrf5p2xusvhz7m4no8n.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KvXzrlpA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lkrf5p2xusvhz7m4no8n.jpg" alt="Git Rebase"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;And After hitting the Enter Key&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2bTLUdKb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5hk75xys4gmfenoxqw32.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2bTLUdKb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5hk75xys4gmfenoxqw32.PNG" alt="RebaseWindow"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Theme&lt;/em&gt; :- &lt;a href="https://marketplace.visualstudio.com/items?itemName=PawelBorkar.jellyfish"&gt;JellyFish&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select &lt;em&gt;squash&lt;/em&gt; from the dropdown for the commits you want to squash&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PojayyIe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmbqe5l56bkuru97zlsf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PojayyIe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmbqe5l56bkuru97zlsf.png" alt="SquashDropdown"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and select the &lt;em&gt;reword&lt;/em&gt; from the dropdown in order to edit the commit message while squashing.&lt;/p&gt;

&lt;p&gt;After selecting the options your vscode window may look like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tTy01ZI9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hi9h6e005lsxlbzm7rrv.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tTy01ZI9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hi9h6e005lsxlbzm7rrv.PNG" alt="Reword"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Theme&lt;/em&gt; :- &lt;a href="https://marketplace.visualstudio.com/items?itemName=PawelBorkar.jellyfish"&gt;JellyFish&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LTI7IyxS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t3uyb39ehbp5xi56sheo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LTI7IyxS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t3uyb39ehbp5xi56sheo.jpg" alt="Start Rebase"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's start the rebasing by hitting on &lt;em&gt;Start Rebase&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
As soon as you hit the Start Rebase button a new commit message tab will open in the editor. This is why we've set  vscode as the default code editor for the Git in order to get this tab open up in the vscode itself which will further make it more easier to edit the commit messages without any hussle of remembering the shortcut keys for the nano code editor this will completely eliminate those steps making your workflow more optimized and efficient.&lt;/p&gt;

&lt;p&gt;Since we've chose the reword option for the previous commit it will ask us to edit the commit message for that commit message.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--162Gm012--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/820gg5l6dhqqiwr3z2hj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--162Gm012--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/820gg5l6dhqqiwr3z2hj.jpg" alt="Reword Commit Message"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will be keeping it as it is, so press Ctrl+S or Cmd+S (MacOS  users)&lt;br&gt;
As soon as you save and close this tab the new rebase commit tab will open which will again confirm the messages you wanted to have in the squashed commit.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--39fhf4HP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/481nad3e1uryrktmloxo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--39fhf4HP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/481nad3e1uryrktmloxo.jpg" alt="Commit Message Rebase"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Again I will be keeping it as it is, so press Ctrl+S or Cmd+S (MacOS  users) and close the tab.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
Hurray! You've squashed the commits. Congrats🎉&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hc8dyeQ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1b5gegfw0nojkjrubykl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hc8dyeQ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1b5gegfw0nojkjrubykl.jpg" alt="squased output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It can be seen by typing in the following command in the terminal again&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git log --oneline
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and here's the output&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yzz2TfQV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2i1nfpmq1um12oyq5t0x.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yzz2TfQV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2i1nfpmq1um12oyq5t0x.jpg" alt="Squashed"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see the &lt;em&gt;Fix Bugs&lt;/em&gt; commit has got squashed and as we haven't changed the previous commit it remained same. And when  you type &lt;code&gt;git log&lt;/code&gt; it will show you both the messages remembered that second commit message tab? It came from there.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vote-of-thanks"&gt;
  &lt;/a&gt;
  Vote of Thanks
&lt;/h2&gt;

&lt;p&gt;Thank you so much for reading this post and I hope this post will help you to squash your commits even more easier and faster. Feel Free to give any suggestions and if you like my work you can connect with me via &lt;a href="https://twitter.com/pawelsb"&gt;Twitter&lt;/a&gt; or &lt;a href="https://linkedin.com/in/pawelborkar"&gt;LinkedIn&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Have a great day 😊&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>git</category>
    </item>
    <item>
      <title>Illustrating Lexical Scope in JavaScript</title>
      <author>Rajat Verma</author>
      <pubDate>Fri, 02 Jul 2021 06:00:58 +0000</pubDate>
      <link>https://dev.to/rajat2502/illustrating-lexical-scope-in-javascript-2h0f</link>
      <guid>https://dev.to/rajat2502/illustrating-lexical-scope-in-javascript-2h0f</guid>
      <description>&lt;h1&gt;
  &lt;a href="#chapter-2-illustrating-lexical-scope"&gt;
  &lt;/a&gt;
  Chapter 2: Illustrating Lexical Scope
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;These are the notes of second chapter of the book "You Don't Know JS: Scope and Closures".&lt;/li&gt;
&lt;li&gt;In this chapter, we will discuss how our program is handled by the JS Engine and how the JS Engine works.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#marbles-and-buckets-and-bubbles-oh-my"&gt;
  &lt;/a&gt;
  Marbles, and Buckets, and Bubbles... Oh My!
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Let's say we have marbles of three different colors Red, Blue, and Green. To sort all the marbles we will drop the red marbles into a red bucket, blue into a blue bucket, and green into a green bucket.&lt;/li&gt;
&lt;li&gt;Now if we need a red marble we know the red bucket is where to get it from.&lt;/li&gt;
&lt;li&gt;Now apply this analogy to scope and variables, the marbles are the variables and the buckets are the scopes.&lt;/li&gt;
&lt;li&gt;Let's understand this with the help of an example:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// outer/global scope: RED

var students = [
  { id: 14, name: "Kyle" },
  { id: 73, name: "Suzy" },
  { id: 112, name: "Frank" },
  { id: 6, name: "Sarah" },
];

function getStudentName(studentID) {
  // function scope: BLUE
  for (let student of students) {
    // loop scope: GREEN
    if (student.id == studentID) {
      return student.name;
    }
  }
}

var nextStudent = getStudentName(73);
console.log(nextStudent); // Suzy

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;As you can see that we have designated three scope colors with code comments: RED (outermost global scope), BLUE (scope of function), and GREEN (scope inside the for loop).&lt;/li&gt;
&lt;li&gt;Now let's see the boundaries of these scope buckets by drawing colored bubbles:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6ANR5uzg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/42200276/124065686-e50eea00-da54-11eb-8ac5-d4b7686bc61d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6ANR5uzg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/42200276/124065686-e50eea00-da54-11eb-8ac5-d4b7686bc61d.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bubble 1 (RED): surround global scope, holds three identifiers: &lt;code&gt;students&lt;/code&gt;, &lt;code&gt;getStudentName&lt;/code&gt; and &lt;code&gt;nextStudent&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Bubble 2 (BLUE): surround scope of function &lt;code&gt;getStudentName(..)&lt;/code&gt;, holds one identifier: &lt;code&gt;studentID&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Bubble 3 (GREEN): surround the scope of the for-loop, holds one identifier: &lt;code&gt;student&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Scope bubbles are determined during compilation. Each marble is colored based on which bucket it's declared in, not the color of the scope it may be accessed from.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scopes can nest inside each other, to any depth of nesting as your program needs.&lt;/li&gt;
&lt;li&gt;References (non-declarations) to variables/identifiers are allowed if there's a matching declaration either in the current scope, or any scope above/outside the current scope, but not with declarations from lower/nested scopes.&lt;/li&gt;
&lt;li&gt;An expression in the RED(1) bucket only has access to RED(1) marbles, not BLUE(2) or GREEN(3). An expression in the BLUE(2) bucket can reference either BLUE(2) or RED(1) marbles, not GREEN(3). And an expression in the GREEN(3) bucket has access to RED(1), BLUE(2), and GREEN(3) marbles.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#nested-scope"&gt;
  &lt;/a&gt;
  Nested Scope
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Scopes are lexically nested to any arbitrary depth as the program defines.&lt;/li&gt;
&lt;li&gt;In the above example, the function scope for &lt;code&gt;getStudentName(..)&lt;/code&gt; is nested inside the global scope. The block scope of the &lt;code&gt;for&lt;/code&gt; loop is similarly nested inside that function scope.&lt;/li&gt;
&lt;li&gt;Any time an identifier reference cannot be found in the current scope, the next outer scope in the nesting is consulted; that process is repeated until an answer is found or there are no more scopes to consult.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#undefined-mess"&gt;
  &lt;/a&gt;
  Undefined Mess
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;If the variable is a source, an unresolved identifier lookup is considered an undeclared (unknown, missing) variable, which always results in a &lt;code&gt;ReferenceError&lt;/code&gt; being thrown. &lt;/li&gt;
&lt;li&gt;If the variable is a target, and the code at that moment is running in strict-mode, the variable is considered undeclared and similarly throws a &lt;code&gt;ReferenceError&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The error message for an undeclared variable condition, in most JS environments, will look like, "Reference Error: XYZ is not defined."&lt;/li&gt;
&lt;li&gt;"Not defined" means "not declared" or "undeclared".&lt;/li&gt;
&lt;li&gt;"Undefined" means that the variable was found, but it has no other value at the moment. So it defaults to the &lt;code&gt;undefined&lt;/code&gt; value.&lt;/li&gt;
&lt;li&gt;To perpetuate the confusion even further, JS's &lt;code&gt;typeof&lt;/code&gt; operator returns the string "undefined" for variable references in either state:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var studentName;

typeof studentName; // "undefined"
typeof doesntExist; // "undefined"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;So, we as developers have to pay close attention to not mix up which kind of "undefined" we're dealing with.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#global-what"&gt;
  &lt;/a&gt;
  Global... What!?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;If the variable is a target and the program is not in strict-mode, the engine creates an accidental global variable to fulfill that target assignment. For Example:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function getStudentName() {
  // assignment to an undeclared variable :(
  nextStudent = "Suzy";
}

getStudentName();
console.log(nextStudent);
// "Suzy" -- oops, an accidental-global variable!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;This is another reason why we should use strict-mode. It prevents us from such incidents by throwing a &lt;code&gt;ReferenceError&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's it for this chapter. I will be back with the notes of the next chapter. &lt;/p&gt;

&lt;p&gt;Till then, &lt;strong&gt;Happy Coding!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you enjoyed reading these notes or have any suggestions or doubts, then do let me know your views in the comments. &lt;br&gt;
In case you want to connect with me, follow the links below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/rajat2502"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://github.com/rajat2502"&gt;GitHub&lt;/a&gt; | &lt;a href="https://twitter.com/rajatverma2502"&gt;Twitter&lt;/a&gt; | &lt;a href="https://medium.com/@rajat2502"&gt;Medium&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>vue</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Getting started with Probot</title>
      <author>Pragati Verma</author>
      <pubDate>Fri, 02 Jul 2021 05:57:12 +0000</pubDate>
      <link>https://dev.to/pragativerma18/getting-started-with-probot-jhd</link>
      <guid>https://dev.to/pragativerma18/getting-started-with-probot-jhd</guid>
      <description>&lt;p&gt;Open-source projects get more complex and hard to manage as they grow in terms of codebase and contributions, and thus, GitHub bots could help the project maintainers to cut down on the tedious tasks that can be automated with minimum code and efforts on installation. &lt;/p&gt;

&lt;p&gt;The easiest marketplace solution available for GitHub bots is  &lt;a href="https://probot.github.io/"&gt;Probot&lt;/a&gt;. We already discussed some great GitHub bots for every open-source project in the &lt;a href="https://dev.to/pragativerma18/github-bots-for-every-open-source-project-47hl"&gt;last article&lt;/a&gt;. Now, it's time to move a step forward and learn how to install, enable and customize these GitHub bots with an easy example.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0ckSYCRR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625169236531/GOlxvVsO0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ckSYCRR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625169236531/GOlxvVsO0.png" alt="Probot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started-with-probot"&gt;
  &lt;/a&gt;
  Getting started with Probot
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Pre-requisites:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To get started with Probot, you will need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An open-source repository hosted on &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://help.github.com/en/articles/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization"&gt;Admin rights&lt;/a&gt; to install Probot apps on the GitHub repository or organization.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of the Probot apps available on their marketplace are hosted, so you just need to install them and you're ready to go, without any deployment needed. Although, there could be some of them that would require you to deploy them over services such as &lt;a href="https://glitch.com/"&gt;Glitch&lt;/a&gt;, &lt;a href="https://www.heroku.com/"&gt;Heroku&lt;/a&gt;, or &lt;a href="https://github.com/features/actions"&gt;GitHub Actions&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-install-a-hosted-probot-app"&gt;
  &lt;/a&gt;
  How to install a hosted Probot App?
&lt;/h2&gt;

&lt;p&gt;To learn how to install a hosted Probot app, we'll walk through an example where I add the &lt;a href="https://probot.github.io/apps/welcome/"&gt;Welcome bot&lt;/a&gt; to one of my GitHub repositories. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-add-to-github"&gt;
  &lt;/a&gt;
  Step 1: Add to GitHub
&lt;/h3&gt;

&lt;p&gt;Navigate to the Welcome bot &lt;a href="https://probot.github.io/apps/welcome/"&gt;webpage&lt;/a&gt;, and click on &lt;strong&gt;Add to GitHub&lt;/strong&gt; button to begin as follows:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WkPp3JvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625167882414/YiM3ImyBl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WkPp3JvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625167882414/YiM3ImyBl.png" alt="Add to GitHub"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-choose-account"&gt;
  &lt;/a&gt;
  Step 2: Choose Account
&lt;/h3&gt;

&lt;p&gt;Clicking on the &lt;strong&gt;Add to GitHub&lt;/strong&gt; button will take you to a new tab, where you're asked to select the location or GitHub account where you want to install the Welcome bot. You'll notice that you can see a &lt;em&gt;Configure&lt;/em&gt; option for the accounts or organizations where you have Admin access. Note that you won't be able to add the app to a repository where you don't have Admin access. For the next steps, I am choosing my personal account, so I'll select &lt;strong&gt;PragatiVerma18&lt;/strong&gt; here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zLg7mW0U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625167675177/_WuH01OtR.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zLg7mW0U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625167675177/_WuH01OtR.png" alt="Choose Account"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-confirm-installation"&gt;
  &lt;/a&gt;
  Step 3: Confirm Installation
&lt;/h3&gt;

&lt;p&gt;You'll be asked to confirm installation by entering your GitHub password. Once you're done with that, you'll be taken to the settings page where you have most of the documentation and usage directions regarding the app. Scrolling down the same page, you'll find an option to opt for Repository access to the bot, as shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d2ySsk5M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625168388690/Ep-3Btn_l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d2ySsk5M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625168388690/Ep-3Btn_l.png" alt="Repository Access"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Choose the GitHub repository from the dropdown and click on &lt;strong&gt;save&lt;/strong&gt;, to update the settings.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-configuration"&gt;
  &lt;/a&gt;
  Step 4: Configuration
&lt;/h3&gt;

&lt;p&gt;This is the last but the most important step, as we deal with the configurations for this app here. Navigate to the GitHub repository where you installed the Welcome bot. Create a &lt;code&gt;.github/config.yml&lt;/code&gt; file to declare the contents of the comments, you can refer to the code as shown here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Configuration for new-issue-welcome - https://github.com/behaviorbot/new-issue-welcome&lt;/span&gt;

&lt;span class="c1"&gt;# Comment to be posted to on first-time issues&lt;/span&gt;
&lt;span class="na"&gt;newIssueWelcomeComment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="s"&gt;Thanks for opening your first issue here! Be sure to follow the issue template!&lt;/span&gt;

&lt;span class="c1"&gt;# Configuration for new-pr-welcome - https://github.com/behaviorbot/new-pr-welcome&lt;/span&gt;

&lt;span class="c1"&gt;# Comment to be posted to on PRs from first-time contributors in your repository&lt;/span&gt;
&lt;span class="na"&gt;newPRWelcomeComment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="s"&gt;Thanks for making your first PR here!&lt;/span&gt;

&lt;span class="c1"&gt;# Configuration for first-pr-merge - https://github.com/behaviorbot/first-pr-merge&lt;/span&gt;

&lt;span class="c1"&gt;# Comment to be posted to on pull requests merged by a first time user&lt;/span&gt;
&lt;span class="na"&gt;firstPRMergeComment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="s"&gt;Congrats on merging your first pull request! We're are so proud of you!&lt;/span&gt;

&lt;span class="c1"&gt;# It is recommended to include as many gifs and emojis as possible&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yay!! You're all done. The installation and configuration for the Welcome bot are hereby complete and now you can see it working in the comments whenever someone opens up a new issue or Pull Request as seen here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v5Yc6-R4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625169825906/ammj-1KlS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v5Yc6-R4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625169825906/ammj-1KlS.png" alt="Working"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This was a simple example that can act as a reference, as most of the Probot apps usually follow similar steps to let you install and then customize their configurations inside a &lt;code&gt;.yml&lt;/code&gt; file inside the &lt;code&gt;.github&lt;/code&gt; folder on your default branch. The name of the file might vary as per the bot documentation.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To learn how to deploy unhosted Probot apps, read more &lt;a href="https://probot.github.io/docs/deployment/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's all for this article. I hope this has been a helpful and insightful read. Please comment with your valuable suggestions and feedback. Also, let me know your favorite GitHub bots or apps that you may have used.&lt;/p&gt;

&lt;p&gt;In case you want to connect with me, follow the links below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/pragativerma18/"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://github.com/PragatiVerma18/"&gt;GitHub&lt;/a&gt; | &lt;a href="https://twitter.com/pragati_verma18"&gt;Twitter&lt;/a&gt; | &lt;a href="https://medium.com/@itispragativerma"&gt;Medium&lt;/a&gt;&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>github</category>
      <category>opensource</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Project 86 of 100 - Dynamic Jobs Page</title>
      <author>James Hubert</author>
      <pubDate>Fri, 02 Jul 2021 05:30:25 +0000</pubDate>
      <link>https://dev.to/jwhubert91/project-86-of-100-dynamic-jobs-page-75e</link>
      <guid>https://dev.to/jwhubert91/project-86-of-100-dynamic-jobs-page-75e</guid>
      <description>&lt;p&gt;&lt;em&gt;Hey! I'm on a mission to make 100 React.js projects. Please follow my dev.to profile or my &lt;a href="https://www.twitter.com/jwhubert91"&gt;twitter&lt;/a&gt; for updates and feel free to reach out if you have questions. Thanks for your support!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Link to today's deployed app: &lt;a href="https://100-react-projects-day-86-dynamic-resume.netlify.app/"&gt;Link&lt;/a&gt;&lt;br&gt;
Link to the repo: &lt;a href="https://github.com/jwhubert91/100daysofreact/tree/master/day-86-jobs-page"&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is part 6 of 15 in a series on building React projects by John Smilga, covered in &lt;a href="https://www.youtube.com/watch?v=a_7Z7C_JCyo"&gt;this 10 hour video&lt;/a&gt; on Youtube.&lt;/p&gt;

&lt;p&gt;In this project we exercise many of the same skills we learned in &lt;a href="https://dev.to/jwhubert91/project-85-of-100-dynamic-restaurant-menu-in-react-1g07"&gt;the last project&lt;/a&gt;, namely conditional rendering, using application-wide state (stored using useState hooks in the App component), destructuring arrays, and iterating over arrays to create JSX elements.&lt;/p&gt;

&lt;p&gt;Unlike the last project, we use a useEffect hook to load in the data from a remote endpoint asynchronously, and we display a Loading screen while the data is being fetched.&lt;/p&gt;

&lt;p&gt;I won't go into a ton of detail here because we've covered most of these topics in previous assignments.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you like projects like this and want to stay up to date with more, check out my Twitter &lt;a href="https://twitter.com/jwhubert91"&gt;@jwhubert91&lt;/a&gt;, I follow back! See you tomorrow for another project.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Laravel Image Text Watermarking Tutorial</title>
      <author>avani-trivedi</author>
      <pubDate>Fri, 02 Jul 2021 05:09:03 +0000</pubDate>
      <link>https://dev.to/avanitrivedi/laravel-image-text-watermarking-tutorial-4c1k</link>
      <guid>https://dev.to/avanitrivedi/laravel-image-text-watermarking-tutorial-4c1k</guid>
      <description>&lt;p&gt;Hello Friends,&lt;/p&gt;

&lt;p&gt;Now let's see example of how to image text watermarking in laravel. This is a short guide on laravel if image text watermarking. We will use how to use image text watermarking in laravel. Here you will learn how to use image text watermarking in laravel. Let's get started with how to image text watermarking in laravel.&lt;/p&gt;

&lt;p&gt;Here i will give you many example how you can image text watermarking in laravel.&lt;/p&gt;

&lt;p&gt;More..&lt;br&gt;
&lt;a href="https://www.mywebtuts.com/blog/laravel-image-text-watermarking-tutorial"&gt;https://www.mywebtuts.com/blog/laravel-image-text-watermarking-tutorial&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
    </item>
  </channel>
</rss>
