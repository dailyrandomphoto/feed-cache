<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Booking Web App UI Kit</title>
      <author>Mahfuzul Islam Nabil</author>
      <pubDate>Tue, 05 Oct 2021 10:46:53 +0000</pubDate>
      <link>https://dev.to/mahfuzulnabil/booking-web-app-ui-kit-2bgg</link>
      <guid>https://dev.to/mahfuzulnabil/booking-web-app-ui-kit-2bgg</guid>
      <description>&lt;p&gt;Hey, Design Lovers!&lt;/p&gt;

&lt;p&gt;This is a Booking Web App UI Kit– Homepage Design. In this Web App, you can book 3 types of trips. Hotel, Flight, and Car Rental.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vWJHm4yS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/448e22qt20ez5v8ybk38.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vWJHm4yS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/448e22qt20ez5v8ybk38.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Trip Guide is a booking web app UI kit. By developing this website, you can book hotels, flights, and car rentals. The design is very friendly with multiple booking options. People can easily book anything by using this website because it’s fully customizable. The designer can use their own artworks which will be mixed with original photos. The development device is responsive to the dark version of the web app. The application is a development device for creating responsive web applications. It allows you to work on a dark version of the web app as well as a standard version without needing to switch tabs. It has many different designs to suit your taste, easy to customize design files for Figma, XD and Sketch ready to implement into your own projects. &lt;/p&gt;

&lt;p&gt;You can customize everything on this template! You can change everything, colors, fonts, icons, button design anything you want.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.uihut.com/web-app-designs/trip-guide-booking-web-app-ui-kit/12169"&gt;https://www.uihut.com/web-app-designs/trip-guide-booking-web-app-ui-kit/12169&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have 14,000+ Best UI Design (Free/Premium)&lt;br&gt;
(web templates, web app, mobile app, illustrations, icons)&lt;br&gt;
( Codes Also Available)&lt;br&gt;
From 👉  uihut.com  &lt;/p&gt;

&lt;p&gt;[📢 Lifetime PLAN: $99]&lt;br&gt;
📌Offer,&lt;br&gt;
CODE: nab10&lt;br&gt;
(10% DISCOUNT OFF)&lt;/p&gt;

</description>
      <category>bookingwebapp</category>
      <category>travelapp</category>
      <category>webapp</category>
      <category>uikit</category>
    </item>
    <item>
      <title>A blog post about blogging</title>
      <author>Jelle Smeets</author>
      <pubDate>Tue, 05 Oct 2021 10:41:58 +0000</pubDate>
      <link>https://dev.to/smeetsmeister/a-blog-post-about-blogging-391p</link>
      <guid>https://dev.to/smeetsmeister/a-blog-post-about-blogging-391p</guid>
      <description>&lt;p&gt;I published my first blog post &lt;a href="https://blog.jellesmeets.nl/developer-basics/why-you-should-put-your-code-on-an-opensource-platform/"&gt;why you should put your code on an opensource platform&lt;/a&gt; on the 20th of January in 2019. And I thought it was a good moment to reflect on how blogging has been for me so far. In this new "meta" category I am planning to dedicate a few blog posts to what I have learned in my blogging journey. In this first blog post, we will dive into some of the statistics. How many people have read my blog posts and which ones are the most popular? Let's dive in!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#traffic"&gt;
  &lt;/a&gt;
  Traffic
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qKI8fjX2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/17j066v9jqui21mal4en.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qKI8fjX2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/17j066v9jqui21mal4en.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Total amount of page views&lt;/p&gt;

&lt;p&gt;From 20-01-2019 until 03-10-2021 I have had &lt;strong&gt;3.364&lt;/strong&gt; page views. I've had some spikes that I will explain later, but on average the page views are between 80 - 150 views per month.&lt;/p&gt;

&lt;p&gt;The traffic can be divided into the following categories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;57% Comes from direct traffic&lt;/li&gt;
&lt;li&gt;18% Comes from social (Thank you Twitter)&lt;/li&gt;
&lt;li&gt;14.3% Comes through organic search&lt;/li&gt;
&lt;li&gt;10.3% are referrals, mostly other Socials and clicks from other platforms like dev.to&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#most-viewed-blog-posts"&gt;
  &lt;/a&gt;
  Most viewed blog posts
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g4s80mHi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/znzuqsy134c4it2bc8vn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g4s80mHi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/znzuqsy134c4it2bc8vn.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Most viewed blog posts&lt;/p&gt;

&lt;p&gt;My most popular blog post is the &lt;a href="https://blog.jellesmeets.nl/lists/4-lessons-i-learned-as-a-starting-scrum-master/"&gt;4 lessons I learned as a starting scrum master&lt;/a&gt;. It has 982 pageviews which account for almost 30% of all page views! Most of these page views are thanks to Reddit. I shared this post there and it kind of blew up. This still brings in a small part of page views.&lt;/p&gt;

&lt;p&gt;The second best blog post in terms of page views is the &lt;a href="https://blog.jellesmeets.nl/retrospective/movie-retrospective/"&gt;Movie retrospective&lt;/a&gt;. 170 pageviews and about 5% of traffic.&lt;/p&gt;

&lt;p&gt;The third best blog post is the &lt;a href="https://blog.jellesmeets.nl/retrospective/finding-your-priorities-with-the-eisenhower-retrospective/"&gt;Eisenhower retrospective&lt;/a&gt;. Actually the first retrospective I wrote a blog post about and was the whole inspiration for the &lt;a href="https://blog.jellesmeets.nl/retrospective/retrospective-challenge-2020/"&gt;retrospective challenge&lt;/a&gt;. With 152 page views and 4,5% of traffic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#seo"&gt;
  &lt;/a&gt;
  SEO
&lt;/h2&gt;

&lt;p&gt;If my job was SEO specialist at a company I would probably already be fired. I have 22.271 impressions on Google and just 156 clicks. That means my click-through rate is 0.7%. To keep it positive, that means I have a lot of room for improvement in the future.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5rBc1kMr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t2gq8rdd9l4dl4s76ryn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5rBc1kMr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t2gq8rdd9l4dl4s76ryn.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Clicks in Google&lt;/p&gt;

&lt;p&gt;In terms of clicks, there is 1 content king. The movie retrospective. I'm not sure how or why, but this page lands almost 54% of all clicks on Google. Nice!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--roMIhqWE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fqu2z5dnppukbkpeo48.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--roMIhqWE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fqu2z5dnppukbkpeo48.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Impressions in Google&lt;/p&gt;

&lt;p&gt;As you can see, the pages that get a lot of impressions are not getting the same amount of clicks. Interesting and an interesting area to take a look at in terms of improving click-through rates.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#newsletter"&gt;
  &lt;/a&gt;
  Newsletter
&lt;/h2&gt;

&lt;p&gt;Almost every blog dedicated to improving your blogging mentions having a newsletter. Get e-mail addresses of people that are interested in your content. And send them emails once you write new blog posts. This will drive recurring customers back to your blog post. This sounds good on paper, but I &lt;strong&gt;&lt;em&gt;ab-so-lutely&lt;/em&gt;&lt;/strong&gt; hate serving popups to visitors to subscribe to the newsletter. I have a menu item at the top, but that does not seem to drive a lot of traffic. If you are interested in joining the newsletter, you can &lt;a href="https://blog.jellesmeets.nl/newsletter-signup/"&gt;sign up here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In terms of how many people actually signed up? Just 1, Thanks &lt;a href="https://twitter.com/bartveneman"&gt;Bart&lt;/a&gt;, you are the real MVP!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#earnings"&gt;
  &lt;/a&gt;
  Earnings
&lt;/h2&gt;

&lt;p&gt;If there is one thing I hate more than popups asking you to sign up for a newsletter, it is ads. Luckily I found a great replacement called &lt;a href="https://coil.com/"&gt;Coil&lt;/a&gt;. You basically pay Coil 5 dollars per month and install a browser plugin. Whenever you visit a website that has Coil, you pay a small part of your 5 dollars to that website, depending on how long you spent on this website. This makes sure your subscription goes to the websites you really visit. And the longer you stay the more they will get.&lt;/p&gt;

&lt;p&gt;In this period I have earned &lt;strong&gt;€4,63&lt;/strong&gt; with Coil. Almost 1 month of hosting. This amount fluctuates, there are times where I earn 80 cents per day, and there are times where I earn 1 cent in 2 months.&lt;/p&gt;

&lt;p&gt;Those are the statistics on my blogging journey. Do you have any tips or any other metrics you would like to see? Let me know and I will answer them in one of the upcoming meta posts.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>meta</category>
      <category>learninpublic</category>
      <category>learning</category>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 37, File handling in Python</title>
      <author>Aatmaj</author>
      <pubDate>Tue, 05 Oct 2021 10:32:12 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-37-file-handling-in-python-1pih</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-37-file-handling-in-python-1pih</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-we-cover-filehandling-in-python-in-a-lightning-fast-speed"&gt;
  &lt;/a&gt;
  Today we cover File-handling in Python in a lightning fast speed
&lt;/h2&gt;




&lt;p&gt;Many times we need to save data into files for long-term usage. Today we will learn how to write data into a file and retrieve it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#opening-a-file"&gt;
  &lt;/a&gt;
  Opening a file
&lt;/h3&gt;

&lt;p&gt;Python has two types of files, text and binary. But we will now learn only about text files, which are quite popular. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;How will the interpreter know when to end a line? Each line in a file has the EOL terminating character (example comma or newline character) which the interpreter reads and processes a new line.. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We can open a file into four modes&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;"r"  Reading mode&lt;/li&gt;
&lt;li&gt;"w"  Writing mode&lt;/li&gt;
&lt;li&gt;"a"  Appending mode&lt;/li&gt;
&lt;li&gt;"r+" Both reading and writing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If not passed, then Python will assume it to be “ r ” by default. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax for opening a file&lt;/strong&gt; We can open a file using the syntax&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'myfile.txt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Reading mode
&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'myfile.txt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Writing mode
&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'myfile.txt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'w'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Appending mode
&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'myfile.txt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'r+'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Both reading and writing
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note than the file name is case sensitive. So &lt;code&gt;myfile.txt&lt;/code&gt; is not equal to &lt;code&gt;Myfile.txt&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#reading-from-a-file"&gt;
  &lt;/a&gt;
  Reading from a file
&lt;/h3&gt;

&lt;p&gt;First we make a file named....say &lt;code&gt;myfile.txt&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A Quick brown fox jumps over the lazy dog
Welcome to PYTHON Programming
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In case the file doesn't exist, we get this error-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Traceback (most recent call last):
  File "main.py", line 1, in &amp;lt;module&amp;gt;
    file = open("myfile.txt", "r") 
FileNotFoundError: [Errno 2] No such file or directory: 'myfile.txt'

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can read the contents of the file using the &lt;code&gt;file.read()&lt;/code&gt; method&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"myfile.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"r"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OUTPUT&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A Quick brown fox jumps over the lazy dog
Welcome to PYTHON Programming

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also return a specific number of characters by adding parameters to the read method. For example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"myfile.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"r"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OUTPUT&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A Quick
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The value returned is a string&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"myfile.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"r"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;class 'str'&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can access the file line by line using the for in loop&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"myfile.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"r"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This syntax prints out each element of the file in lines.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A Quick brown fox jumps over the lazy dog

Welcome to PYTHON Programming

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#writing-into-a-file"&gt;
  &lt;/a&gt;
  Writing into a file
&lt;/h3&gt;

&lt;p&gt;When we write into a file, we do not need to create one. If the file in which we want to write doesn't exist, it gets automatically created.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'myfile.txt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'w'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"A Quick brown fox jumps over the lazy dog."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Welcome to PYTHON Programming"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OUTPUT (myfile.txt)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A Quick brown fox jumps over the lazy dog.Welcome to PYTHON Programming
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The close() command terminates all the resources in use and frees the system of this particular program.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If we want the text into two separate lines, we can use the newline &lt;code&gt;\n&lt;/code&gt; symbol.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'myfile.txt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'w'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"A Quick brown fox jumps over the lazy dog."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Welcome to PYTHON Programming"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OUTPUT- (myfile.txt)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A Quick brown fox jumps over the lazy dog.
Welcome to PYTHON Programming
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The write method overrides the file each and every time the file is opened function is called. To avoid this, we can use the append mode to add to the file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'myfile.txt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"A Quick brown fox jumps over the lazy dog."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Welcome to PYTHON Programming"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A Quick brown fox jumps over the lazy dog.
Welcome to PYTHON ProgrammingA Quick brown fox jumps over the lazy dog.
Welcome to PYTHON Programming
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;So friends we have covered file handling today. From next parts onwards we will cover object oriented programming.&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Building Tailwind CSS card components</title>
      <author>Zoltán Szőgyényi</author>
      <pubDate>Tue, 05 Oct 2021 10:31:16 +0000</pubDate>
      <link>https://dev.to/themesberg/building-tailwind-css-card-components-12c5</link>
      <guid>https://dev.to/themesberg/building-tailwind-css-card-components-12c5</guid>
      <description>&lt;p&gt;Tailwind CSS is a framework that I've been using a lot lately to quickly build websites without having to leave the HTML files.&lt;/p&gt;

&lt;p&gt;It is an interesting new approach and there are pros and cons as with any other framework or technology, but I think that everyone should at least give it a try.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8EpCLKH6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5vnr2ina000btz70qmee.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8EpCLKH6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5vnr2ina000btz70qmee.png" alt="Tailwind CSS card component"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the disadvantages that I've found is that it does not have a base set of components to work with which would also be solely based on the utility classes.&lt;/p&gt;

&lt;p&gt;This is why I started a tutorial series here on dev.to about building the most commonly used web components such as buttons, cards, dropdowns, datepickers, and more.&lt;/p&gt;

&lt;p&gt;Last time I wrote about &lt;a href="https://dev.to/themesberg/building-a-tailwind-css-button-group-component-o51"&gt;building a button group components with Tailwind CSS&lt;/a&gt; and today I want to show you how to build card elements.&lt;/p&gt;

&lt;p&gt;Let's get started!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tailwind-css-card-component"&gt;
  &lt;/a&gt;
  Tailwind CSS card component
&lt;/h2&gt;

&lt;p&gt;I'll show you two different cards in this tutorial:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a card which is an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag&lt;/li&gt;
&lt;li&gt;a card that has a CTA button inside which is the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We'll first need to write the HTML for the first card.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;a href="#"&amp;gt;
    &amp;lt;h5&amp;gt;Noteworthy technology acquisitions 2021&amp;lt;/h5&amp;gt;
    &amp;lt;p&amp;gt;Here are the biggest enterprise technology acquisitions of 2021 so far, in reverse chronological order.&amp;lt;/p&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, the markup is quite simple and straightforward. There's an &lt;code&gt;a&lt;/code&gt; tag that wraps up everything with a &lt;code&gt;h5&lt;/code&gt; and &lt;code&gt;p&lt;/code&gt; tags inside.&lt;/p&gt;

&lt;p&gt;Let's give some style to the card.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;a href="#" class="block p-6 bg-white shadow-md border border-gray-200 rounded-lg max-w-sm"&amp;gt;
    &amp;lt;h5&amp;gt;Noteworthy technology acquisitions 2021&amp;lt;/h5&amp;gt;
    &amp;lt;p&amp;gt;Here are the biggest enterprise technology acquisitions of 2021 so far, in reverse chronological order.&amp;lt;/p&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Looks pretty good, but the text inside is still unstyled. Let's fix that.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;a href="#" class="block p-6 bg-white shadow-md border border-gray-200 rounded-lg max-w-sm"&amp;gt;
    &amp;lt;h5 class="text-gray-900 font-bold text-2xl tracking-tight mb-2"&amp;gt;Noteworthy technology acquisitions 2021&amp;lt;/h5&amp;gt;
    &amp;lt;p class="font-normal text-gray-700"&amp;gt;Here are the biggest enterprise technology acquisitions of 2021 so far, in reverse chronological order.&amp;lt;/p&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Looking better. Let's also add a hover effect to the card.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;a href="#" class="block p-6 bg-white hover:bg-gray-100 shadow-md border border-gray-200 rounded-lg max-w-sm"&amp;gt;
    &amp;lt;h5 class="text-gray-900 font-bold text-2xl tracking-tight mb-2"&amp;gt;Noteworthy technology acquisitions 2021&amp;lt;/h5&amp;gt;
    &amp;lt;p class="font-normal text-gray-700"&amp;gt;Here are the biggest enterprise technology acquisitions of 2021 so far, in reverse chronological order.&amp;lt;/p&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The final result should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QZnn-OSd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bqr99x7nx3xx65cxpw0j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QZnn-OSd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bqr99x7nx3xx65cxpw0j.png" alt="Tailwind CSS card"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Look pretty neat! But this card has only text. I want to show you how to build a classic blog card that you can use to link to articles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tailwind-css-card-with-image"&gt;
  &lt;/a&gt;
  Tailwind CSS card with image
&lt;/h2&gt;

&lt;p&gt;Let's first start with the HTML.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div&amp;gt;
    &amp;lt;a href="#"&amp;gt;
        &amp;lt;img src="https://flowbite.com/docs/images/blog/image-1.jpg" alt=""&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;a href="#"&amp;gt;
            &amp;lt;h5&amp;gt;Noteworthy technology acquisitions 2021&amp;lt;/h5&amp;gt;
        &amp;lt;/a&amp;gt;
        &amp;lt;p&amp;gt;Here are the biggest enterprise technology acquisitions of 2021 so far, in reverse chronological order.&amp;lt;/p&amp;gt;
        &amp;lt;a href="#"&amp;gt;
            Read more
        &amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see we've added multiple '&lt;a&gt;' tags on the image, title, and the read more button. Nothing is styled yet, so let's start with the card styles.&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="bg-white shadow-md border border-gray-200 rounded-lg max-w-sm"&amp;gt;
    &amp;lt;a href="#"&amp;gt;
        &amp;lt;img src="https://flowbite.com/docs/images/blog/image-1.jpg" alt=""&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;div class="p-5"&amp;gt;
        &amp;lt;a href="#"&amp;gt;
            &amp;lt;h5&amp;gt;Noteworthy technology acquisitions 2021&amp;lt;/h5&amp;gt;
        &amp;lt;/a&amp;gt;
        &amp;lt;p&amp;gt;Here are the biggest enterprise technology acquisitions of 2021 so far, in reverse chronological order.&amp;lt;/p&amp;gt;
        &amp;lt;a href="#"&amp;gt;
            Read more
        &amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Looking better. Let's now give some style to the text elements.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="bg-white shadow-md border border-gray-200 rounded-lg max-w-sm"&amp;gt;
    &amp;lt;a href="#"&amp;gt;
        &amp;lt;img src="https://flowbite.com/docs/images/blog/image-1.jpg" alt=""&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;div class="p-5"&amp;gt;
        &amp;lt;a href="#"&amp;gt;
            &amp;lt;h5 class="text-gray-900 font-bold text-2xl tracking-tight mb-2"&amp;gt;Noteworthy technology acquisitions 2021&amp;lt;/h5&amp;gt;
        &amp;lt;/a&amp;gt;
        &amp;lt;p class="font-normal text-gray-700 mb-3"&amp;gt;Here are the biggest enterprise technology acquisitions of 2021 so far, in reverse chronological order.&amp;lt;/p&amp;gt;
        &amp;lt;a href="#"&amp;gt;
            Read more
        &amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's also make the image rounded.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="bg-white shadow-md border border-gray-200 rounded-lg max-w-sm"&amp;gt;
    &amp;lt;a href="#"&amp;gt;
        &amp;lt;img class="rounded-t-lg" src="https://flowbite.com/docs/images/blog/image-1.jpg" alt=""&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;div class="p-5"&amp;gt;
        &amp;lt;a href="#"&amp;gt;
            &amp;lt;h5 class="text-gray-900 font-bold text-2xl tracking-tight mb-2"&amp;gt;Noteworthy technology acquisitions 2021&amp;lt;/h5&amp;gt;
        &amp;lt;/a&amp;gt;
        &amp;lt;p class="font-normal text-gray-700 mb-3"&amp;gt;Here are the biggest enterprise technology acquisitions of 2021 so far, in reverse chronological order.&amp;lt;/p&amp;gt;
        &amp;lt;a href="#"&amp;gt;
            Read more
        &amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's also make that read more button look like one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="bg-white shadow-md border border-gray-200 rounded-lg max-w-sm"&amp;gt;
    &amp;lt;a href="#"&amp;gt;
        &amp;lt;img class="rounded-t-lg" src="https://flowbite.com/docs/images/blog/image-1.jpg" alt=""&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;div class="p-5"&amp;gt;
        &amp;lt;a href="#"&amp;gt;
            &amp;lt;h5 class="text-gray-900 font-bold text-2xl tracking-tight mb-2"&amp;gt;Noteworthy technology acquisitions 2021&amp;lt;/h5&amp;gt;
        &amp;lt;/a&amp;gt;
        &amp;lt;p class="font-normal text-gray-700 mb-3"&amp;gt;Here are the biggest enterprise technology acquisitions of 2021 so far, in reverse chronological order.&amp;lt;/p&amp;gt;
        &amp;lt;a class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-3 py-2 text-center inline-flex items-center" href="#"&amp;gt;
            Read more
        &amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The final result should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZLbHt3Nw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fmnsy2aju0xvqucvztia.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZLbHt3Nw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fmnsy2aju0xvqucvztia.png" alt="Tailwind CSS card component with image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Awesome. I hope that you liked this tutorial and that it will help you with your project and Tailwind CSS journey.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flowbite-tailwind-css-component-library"&gt;
  &lt;/a&gt;
  Flowbite - Tailwind CSS component library
&lt;/h2&gt;

&lt;p&gt;This &lt;a href="https://flowbite.com/docs/components/card/"&gt;Tailwind CSS card component&lt;/a&gt; is part of a larger and open-source component library built with Tailwind CSS utility classes called Flowbite.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--csha25rZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6mot92n3afn4qlbjxxow.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--csha25rZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6mot92n3afn4qlbjxxow.png" alt="Flowbite - Tailwind CSS component library"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can learn more about the library and how to get started by checking out the &lt;a href="https://flowbite.com/docs/getting-started/introduction/"&gt;official documentation of Flowbite&lt;/a&gt; or by checking out the &lt;a href="https://github.com/themesberg/flowbite"&gt;Github repository&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>tutorial</category>
      <category>opensource</category>
      <category>css</category>
    </item>
    <item>
      <title>Reverse Engineering Keyboard Driver: Part 2 (Decompiling .NET applications)</title>
      <author>Rishit Bansal</author>
      <pubDate>Tue, 05 Oct 2021 10:19:22 +0000</pubDate>
      <link>https://dev.to/rishit/reverse-engineering-keyboard-driver-part-2-decompiling-net-applications-44l2</link>
      <guid>https://dev.to/rishit/reverse-engineering-keyboard-driver-part-2-decompiling-net-applications-44l2</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;This post is a part of my series to reverse engineer the keyboard driver/Omen Light Studio application on my HP Omen Laptop and re-implement its functionality on  Linux. In this post, I will be covering how to decompile .NET services/DLLs&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#locating-the-service"&gt;
  &lt;/a&gt;
  Locating the Service
&lt;/h2&gt;

&lt;p&gt;I have been using the Light Studio Application for a while, and one of its best features is the ability to set up dynamic "wave" lighting on your keyboard. In this setting, the lighting on the keyboard keeps changing dynamically to show a sort of wave animation. An intriguing behavior I have observed with this feature is that the animation works just once you have booted into Windows. During the boot process in Ubuntu, the lighting is set to the last set color from windows and remains static. This means that the animation is most likely set by a background service on windows which starts on boot and is not a feature of the keyboard on the hardware level. &lt;/p&gt;

&lt;p&gt;So, I began by opening a task manager and looking for any relevant background services that are running. I found two of particular interest:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Omen Gaming Hub&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ezOEn7Oo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvd2p9ys07tvuw3mjxg6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ezOEn7Oo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvd2p9ys07tvuw3mjxg6.png" alt="Omen Gaming Hub Process"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Light Studio Helper&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ku1hCcci--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39y65if43hqtw52bwe47.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ku1hCcci--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39y65if43hqtw52bwe47.png" alt="Light Studio Helper Process"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The second service looks more interesting, so I right-clicked on the service and selected "Open File Location", and found that it was located at &lt;code&gt;C:\Program Files\HP\LightStudioHelper&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We can see several files, but one which caught my eye was &lt;code&gt;Newtonsoft.Json.dll&lt;/code&gt;. I instantly recognized it as a C# library (&lt;a href="https://www.newtonsoft.com/json"&gt;https://www.newtonsoft.com/json&lt;/a&gt;), as I have worked with it in the past. This is important, as this means that the application was likely to be written in &lt;code&gt;.Net&lt;/code&gt; in &lt;code&gt;C#&lt;/code&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#decompiling-the-executable-and-dll-files"&gt;
  &lt;/a&gt;
  Decompiling the Executable and DLL Files
&lt;/h2&gt;

&lt;p&gt;Next, I looked for tools to decompile .NET applications. The top result was a free tool by Jetbrains called &lt;code&gt;DotPeek&lt;/code&gt;. I began by opening the folder on DotPeek and it was able to decompile all the DLLs. The two results of most importance to us are the ones for &lt;code&gt;LightStudioHelper&lt;/code&gt; and &lt;code&gt;OmenFourZoneLighting&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;LightStudioHelper&lt;/code&gt; binary is what runs the background service. We start by looking at the &lt;code&gt;Main()&lt;/code&gt; method in this class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt; &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;productVersion&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetCurrentProcess&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;MainModule&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileVersionInfo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductVersion&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"----- Log Start, version: "&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;productVersion&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Program&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ProcessCommands&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"----- program exits, returnCode = {0}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Program&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_returnCode&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Program&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_returnCode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Program&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;IsAnotherInstanceRunning&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"OLS_HELPER"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"----- program exits"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Program&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_returnCode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="n"&gt;Program&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Cleanup&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="n"&gt;Program&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;CreateTimer&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="n"&gt;Program&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;CreateAndRunThread&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"----- program exits"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Program&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_returnCode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This method first gets the version of the service, processes command line arguments, and then checks if another process of the &lt;code&gt;OLS_HELPER&lt;/code&gt; service is running (not sure why yet) and then runs the &lt;code&gt;Cleanup()&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Cleanup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Cleanup()"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;TaskScheduler&lt;/span&gt; &lt;span class="n"&gt;taskScheduler&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;TaskScheduler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"LightStudioHelperTemp"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;taskScheduler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Stop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="n"&gt;taskScheduler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Delete&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="n"&gt;DirectoryInfo&lt;/span&gt; &lt;span class="n"&gt;directoryInfo&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;DirectoryInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Program&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;InstallDirTemp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="n"&gt;directoryInfo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Exists&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;directoryInfo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;cleanup()&lt;/code&gt; method creates a &lt;code&gt;TaskScheduler&lt;/code&gt; class, which is another user-defined class in the source code of the service.&lt;br&gt;
The implementation for &lt;code&gt;Stop()&lt;/code&gt; and &lt;code&gt;Delete()&lt;/code&gt; can be seen in the source, but it's irrelevant as it just deals with killing any already running process of the LightStudioHelper. We concentrate on the &lt;code&gt;CreateAndRunThread()&lt;/code&gt; method which is run next:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt; &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CreateAndRunThread&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"CreateAndRunThread()"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;Thread&lt;/span&gt; &lt;span class="n"&gt;thread&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ParameterizedThreadStart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Program&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ThreadLightingUpdate&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
      &lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IsBackground&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thread&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="p"&gt;||&lt;/span&gt; &lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IsAlive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Join&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This method creates a new &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.threading.thread?view=net-5.0"&gt;Thead&lt;/a&gt; which executes the &lt;code&gt;ThreadLightingUpdate&lt;/code&gt; method in the background:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;ThreadLightingUpdate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;object&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;colorArray&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"enter ThreadLightingUpdate()"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Program&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_isRunning&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;FourZoneLightingData&lt;/span&gt; &lt;span class="n"&gt;zoneLightingData&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LightStudioStorage&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FourZoneLightingData&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;.&lt;/span&gt;&lt;span class="nf"&gt;ReadData&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zoneLightingData&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;zoneLightingData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FourZoneColors&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;++&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;colorArray&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;zoneLightingData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FourZoneColors&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
              &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;colorArray&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zoneLightingData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FourZoneColors&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;FourZoneLighting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;IsTurnOn&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;FourZoneLighting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SetZoneColors&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zoneLightingData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FourZoneColors&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;33&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"leave ThreadLightingUpdate()"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This is the main loop of the thread(), and on looking at it, we already got a lot of clues on how the background service works:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It maintains a 4 element array of &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color?view=net-5.0"&gt;Color&lt;/a&gt;, which is encouraging, as I know my keyboard has 4 configurable lighting zones, this might refer to the color of each zone!&lt;/li&gt;
&lt;li&gt;The program has a while loop that seems to read colors from some sort of storage (&lt;code&gt;LightStudioStorage&amp;lt;FourZoneLightingData&amp;gt;.ReadData()&lt;/code&gt;), and then stores the color data in the 4 element color array. It maintains a &lt;code&gt;flag&lt;/code&gt; variable to check if any of the regions has a different color. Finally, if the &lt;code&gt;flag&lt;/code&gt; variable is set, and &lt;code&gt;FourZoneLighting.IsTurnOn()&lt;/code&gt; is true (presumably checking if the keyboard lights are turned on), it calls &lt;code&gt;FourZoneLighting.SetZoneColors&lt;/code&gt; to set the colors.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I went in a little side adventure in checking out the  &lt;code&gt;LightStudioStorage&lt;/code&gt; and where it stores data, and found that it is a &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.io.memorymappedfiles.memorymappedfile?view=net-5.0"&gt;MemoryMappedFile&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;CommonLib.SharedMemory&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;sealed&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LightStudioStorage&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;MemoryMappedFileHelper&lt;/span&gt; &lt;span class="n"&gt;_mmfHelper&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;MemoryMappedFileHelper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nf"&gt;LightStudioStorage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;WriteData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LightStudioStorage&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;.&lt;/span&gt;&lt;span class="n"&gt;_mmfHelper&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;LightStudioStorage&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;.&lt;/span&gt;&lt;span class="n"&gt;_mmfHelper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="nf"&gt;ReadData&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LightStudioStorage&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;.&lt;/span&gt;&lt;span class="n"&gt;_mmfHelper&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LightStudioStorage&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;.&lt;/span&gt;&lt;span class="n"&gt;_mmfHelper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This likely refers to some shared memory logic, and another process might be writing to this memory-mapped file and calculating colors based on an algorithm. For now, I stopped here, but this area might be interesting to look at in the future as well.&lt;/p&gt;

&lt;p&gt;Moving on, I searched for the implementation of &lt;code&gt;FourZoneLighting.SetZoneColors&lt;/code&gt;, and found it was implemented in &lt;code&gt;OmenFourZoneLighting.dll&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="nf"&gt;SetZoneColors&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;zoneColors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zoneColors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;returnData&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FourZoneLighting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;131081&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="n"&gt;returnData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;returnData&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;inputData&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;returnData&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;returnData&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;++&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="n"&gt;inputData&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;25&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zoneColors&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="n"&gt;inputData&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;25&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zoneColors&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;G&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="n"&gt;inputData&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;25&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zoneColors&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FourZoneLighting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;131081&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inputData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inputData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="n"&gt;returnData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This file basically seems too transfer the colors to another data structure, &lt;code&gt;inputData&lt;/code&gt;, and then passes them to &lt;code&gt;Execute()&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt; &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;Execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;commandType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;inputDataSize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;inputData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;returnData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;returnData&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="k"&gt;try&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;ManagementObject&lt;/span&gt; &lt;span class="n"&gt;managementObject1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ManagementObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"root\\wmi"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"hpqBIntM.InstanceName='ACPI\\PNP0C14\\0_0'"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ObjectGetOptions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;ManagementObject&lt;/span&gt; &lt;span class="n"&gt;managementObject2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ManagementObject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ManagementClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"root\\wmi:hpqBDataIn"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;ManagementBaseObject&lt;/span&gt; &lt;span class="n"&gt;methodParameters&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;managementObject1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetMethodParameters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"hpqBIOSInt128"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;ManagementBaseObject&lt;/span&gt; &lt;span class="n"&gt;managementBaseObject1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ManagementBaseObject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ManagementClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"root\\wmi:hpqBDataOut128"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;managementObject2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Sign"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;FourZoneLighting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sign&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;managementObject2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Command"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;managementObject2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"CommandType"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;commandType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;managementObject2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Size"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;inputDataSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;managementObject2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"hpqBData"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;inputData&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;methodParameters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"InData"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;managementObject2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;InvokeMethodOptions&lt;/span&gt; &lt;span class="n"&gt;invokeMethodOptions&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;InvokeMethodOptions&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;invokeMethodOptions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timeout&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TimeSpan&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MaxValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;InvokeMethodOptions&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;invokeMethodOptions&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;ManagementBaseObject&lt;/span&gt; &lt;span class="n"&gt;managementBaseObject2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;managementObject1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;InvokeMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"hpqBIOSInt128"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methodParameters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s"&gt;"OutData"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;ManagementBaseObject&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;returnData&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;managementBaseObject2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Data"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Convert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToInt32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;managementBaseObject2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"rwReturnCode"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"OMEN Four zone lighting - WmiCommand.Execute occurs exception: "&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This method seems to be doing the actual interaction with the hardware of the keyboard. I did a bit of research about &lt;code&gt;ManagementObject&lt;/code&gt; and found that it's a class used to interact with &lt;code&gt;WMI&lt;/code&gt; (Windows Management Instrumentation). WMI, specifically &lt;a href="https://docs.microsoft.com/en-us/samples/microsoft/windows-driver-samples/wmi-acpi-sample/"&gt;WMIACPI&lt;/a&gt; allows you to interact with the Bios and hardware devices, but more on this on the next blog post, for now, let us just treat this function as a black box which does some magic to set the colors of the keyboard.&lt;/p&gt;

&lt;p&gt;Since now we have enough information on how the service works, I tried to implement everything in the &lt;code&gt;OmenFourZoneLighting.dll&lt;/code&gt; file in my command line C# program for windows.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#rewriting-the-wmi-code-in-a-c-program"&gt;
  &lt;/a&gt;
  Rewriting the WMI Code in a C# program
&lt;/h2&gt;

&lt;p&gt;I started by setting up a .NET console application on &lt;a href="https://www.jetbrains.com/rider/"&gt;Rider&lt;/a&gt; and added the &lt;code&gt;System.Drawing&lt;/code&gt;, and &lt;code&gt;System.Management&lt;/code&gt; DLLs as assembly references from my system.&lt;/p&gt;

&lt;p&gt;I copied most of the Code from the &lt;code&gt;dotPeek&lt;/code&gt; decompiled result, and fixed some variable references, and wrote a CMD application which is available on this Github repository:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/thebongy"&gt;
        thebongy
      &lt;/a&gt; / &lt;a href="https://github.com/thebongy/omen-cli"&gt;
        omen-cli
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;br&gt;
&lt;p&gt;
  &lt;a href="https://github.com/thebongy/omen-cli"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--66EEuaiK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/thebongy/omen-cli/master/assets/logo.png" alt="Logo" width="80"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;
&lt;b&gt;omen-cli&lt;/b&gt;
&lt;/h2&gt;
  &lt;p&gt;
    A CLI to customize your keyboard backlight 🚀
    &lt;br&gt;
    &lt;a href="https://github.com/thebongy/omen-cli"&gt;&lt;strong&gt;Explore the docs »&lt;/strong&gt;&lt;/a&gt;
    &lt;br&gt;
    &lt;br&gt;
    &lt;a href="https://github.com/thebongy/omen-cli"&gt;View Demo&lt;/a&gt;
    ·
    &lt;a href="https://github.com/thebongy/omen-cli/issues"&gt;Report Bug&lt;/a&gt;
    ·
    &lt;a href="https://github.com/thebongy/omen-cli/issues"&gt;Request Feature&lt;/a&gt;
  &lt;/p&gt;
&lt;h2&gt;
🎯 Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/thebongy/omen-cli#about-the-project"&gt;About the Project&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thebongy/omen-cli#built-with"&gt;Built With&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/thebongy/omen-cli#getting-started"&gt;Getting Started&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thebongy/omen-cli#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thebongy/omen-cli#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thebongy/omen-cli#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thebongy/omen-cli#roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thebongy/omen-cli#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thebongy/omen-cli#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thebongy/omen-cli#contributors-"&gt;Contributors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
📖 About The Project&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;omen-cli&lt;/code&gt; is  a lightweight CLI tools built in C# to customize keyboard backlights on HP Omen  laptops similar to how Omen Light studio does.&lt;/p&gt;
&lt;h3&gt;
Built With&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/" rel="nofollow"&gt;C#&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dotnet.microsoft.com/download/dotnet-framework/net48" rel="nofollow"&gt;.Net Framework 4.8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/commandlineparser/commandline"&gt;CommandLineParser&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
✈️ Getting Started&lt;/h2&gt;
&lt;p&gt;To get a local copy up and running follow these simple steps.&lt;/p&gt;
&lt;h3&gt;
Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;.NET Framework 4.8&lt;/li&gt;
&lt;li&gt;Nuget.exe CLI&lt;/li&gt;
&lt;li&gt;MSBuild.exe CLI&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Installation&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Clone the repo&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;git clone https://github.com/thebongy/omen-cli.git&lt;/pre&gt;

&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Install dependencies&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;nuget install .&lt;span class="pl-cce"&gt;\C&lt;/span&gt;LI&lt;span class="pl-cce"&gt;\p&lt;/span&gt;ackages.config -OutputDirectory packages&lt;/pre&gt;

&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Run the following command from the root dir to build the project&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;MSBuild.exe&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
🔧 Usage&lt;/h2&gt;
&lt;p&gt;To view all the options available, use the &lt;code&gt;--help&lt;/code&gt; command:&lt;/p&gt;
 &lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/thebongy/omen-cli./assets/ss-1.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--87wTNf0---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/thebongy/omen-cli./assets/ss-1.png" alt="ss-1"&gt;&lt;/a&gt;&lt;/p&gt;
 &lt;br&gt;
&lt;p&gt;The &lt;code&gt;set4&lt;/code&gt; command is used to set 4 colors to…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/thebongy/omen-cli"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this post, we saw how to decompile a C# application, and then implemented is using .NET Framework. In the next post, I will research more into ACPI and WMI drivers for Linux, to get a better idea of how to implement this functionality on Linux. &lt;/p&gt;

</description>
    </item>
    <item>
      <title>7 Reasons You Should Learn JavaScript + 5 Best Free JavaScript Resources</title>
      <author>Ashutosh Mishra</author>
      <pubDate>Tue, 05 Oct 2021 10:17:22 +0000</pubDate>
      <link>https://dev.to/ashutoshmishra/7-reasons-you-should-learn-javascript-5-best-free-javascript-resources-465c</link>
      <guid>https://dev.to/ashutoshmishra/7-reasons-you-should-learn-javascript-5-best-free-javascript-resources-465c</guid>
      <description>&lt;p&gt;In September 1995, &lt;a href="https://en.wikipedia.org/wiki/Brendan_Eich?ref=hackernoon.com"&gt;Brendan Eich&lt;/a&gt;, a Netscape programmer, created a language called Mocha in 10 days.&lt;/p&gt;

&lt;p&gt;Mocha would later become JavaScript, and it was originally created with the purpose of making small animations, user interactions, and other types of automation for the web. Little did he know that JavaScript would become so huge that the concept of the web would be unimaginable without it.&lt;/p&gt;

&lt;p&gt;Today, 26 years later, in 2021, JavaScript powers &lt;a href="https://w3techs.com/technologies/details/cp-javascript"&gt;97.6%&lt;/a&gt; of the websites on the Internet.&lt;/p&gt;

&lt;p&gt;So, anyone who wants to make a career in web development must walk this road of JavaScript. In today’s post, I’ll tell you why it’s important for you to learn JavaScript and the best courses where you can learn JavaScript for free.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-reasons-you-should-learn-javascript"&gt;
  &lt;/a&gt;
  7 Reasons You Should Learn JavaScript
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-javascript-is-the-most-popular-programming-language"&gt;
  &lt;/a&gt;
  1. JavaScript is the most popular programming language
&lt;/h3&gt;

&lt;p&gt;In the 2021 Stack Overflow &lt;a href="https://insights.stackoverflow.com/survey/2021?ref=hackernoon.com#technology-most-popular-technologies"&gt;survey&lt;/a&gt;, JavaScript completed its 9th year in a row as the most popular programming language. What more evidence should I give you to prove its popularity?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-javascript-is-the-default-language-of-the-internet"&gt;
  &lt;/a&gt;
  2. JavaScript is the default language of the internet
&lt;/h3&gt;

&lt;p&gt;JavaScript is the default language of the internet and native to your browser. Hence, you don’t need those fancy IDEs to start programming in JavaScript.&lt;/p&gt;

&lt;p&gt;As long as you have access to a web browser and some text editor, you are all set to code, all your solutions will run inside the browser itself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-javascript-is-beginnerfriendly-in-nature"&gt;
  &lt;/a&gt;
  3. JavaScript is beginner-friendly in nature
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rSX9yYhX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://hackernoon.com/_next/image%3Furl%3Dhttps%253A%252F%252Fcdn.hackernoon.com%252Fimages%252FFpKROxxtLBRmSsCCb4lxCS7LBVr2-zf135of.gif%26w%3D1920%26q%3D75" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rSX9yYhX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://hackernoon.com/_next/image%3Furl%3Dhttps%253A%252F%252Fcdn.hackernoon.com%252Fimages%252FFpKROxxtLBRmSsCCb4lxCS7LBVr2-zf135of.gif%26w%3D1920%26q%3D75" alt="Beginner's Spelling Book Volume I meme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;JavaScript saves beginners from the hassle of setting up their development server which could have overwhelmed a lot of newbie coders.&lt;/p&gt;

&lt;p&gt;The syntax of JavaScript is also easier to pick up than other programming languages like C++ etc.&lt;/p&gt;

&lt;p&gt;Apart from that, thousands of awesome free resources and gigantic online community support also make JavaScript a great choice for beginners.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-javascript-is-a-versatile-language"&gt;
  &lt;/a&gt;
  4. JavaScript is a versatile language
&lt;/h3&gt;

&lt;p&gt;JavaScript is one of the most versatile programming languages in the world, you can learn both Front-End and Back-End development with JavaScript only, which means you don’t necessarily need knowledge of any other programming language apart from JavaScript to create awesome full-fledged websites.&lt;/p&gt;

&lt;p&gt;But Web Development is not the only field where JavaScript rocks! &lt;/p&gt;

&lt;p&gt;You can create desktop apps with Electron and Mobile apps with React Native if you know React which is a JavaScript framework.&lt;/p&gt;

&lt;p&gt;Apart from websites, desktop or mobile apps, you can also use JavaScript to create browser games, web applications, web servers, smartwatch apps, and many more cool things :-)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-huge-demand-in-the-market"&gt;
  &lt;/a&gt;
  5. Huge demand in the market
&lt;/h3&gt;

&lt;p&gt;With the internet spreading its wings even across the remotest areas of the world, the huge demand for web developers is a no-brainer, and most of the web is essentially based on JavaScript so the demand for developers who know JavaScript is obvious.&lt;/p&gt;

&lt;p&gt;In the 2021 Stack Overflow &lt;a href="https://insights.stackoverflow.com/survey/2021?ref=hackernoon.com#most-popular-technologies-language-prof"&gt;survey&lt;/a&gt;, JavaScript outperformed every other language as the most common programming language with 68.62% of professional developers using it around the globe.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-massive-community-support"&gt;
  &lt;/a&gt;
  6. Massive community support
&lt;/h3&gt;

&lt;p&gt;Communities play a huge role in learning, most of the problems which you’ll face as a beginner have already been solved and documented by someone else.&lt;/p&gt;

&lt;p&gt;JavaScript has one of the most active and vibrant communities spread all over the internet from Stack Overflow, GitHub, HackerNoon, Reddit, Twitter, Freecodecamp, Hashnode, etc. to different Slack groups and Discord servers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-futureoriented"&gt;
  &lt;/a&gt;
  7. Future-oriented
&lt;/h3&gt;

&lt;p&gt;The number of internet users all around the world is increasing every day, so to cater their needs more JavaScript developers will be needed. &lt;/p&gt;

&lt;p&gt;JavaScript as a language is also evolving every year, and with the advent of Web3, technologies such as Artificial Intelligence, Blockchain, IoT, AR/VR are making their way on the web.&lt;/p&gt;

&lt;p&gt;This clearly shows that JavaScript has a lot to offer the world in the future.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-amazing-free-javascript-courses"&gt;
  &lt;/a&gt;
  5 Amazing FREE JavaScript Courses
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#1-javascript-algorithms-and-data-structures-freecodecamp"&gt;
  &lt;/a&gt;
  1. JavaScript Algorithms and Data Structures @ Freecodecamp
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q6JBM1HR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hackernoon.com/_next/image%3Furl%3Dhttps%253A%252F%252Flh4.googleusercontent.com%252FwdZt6q1oLVj2Sevyps7kbE8VG9AeKbOUSklnHvFQgQ4dfdnkQG9YCt7AxRaJ99znlz0x69HCANWLwSI2ldiVcefvoQ8_2nRBb95Tll5qOxNZFUTw3z_3fxPkYT9ST9ZNpooHPzOx%253Ds0%26w%3D1920%26q%3D75" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q6JBM1HR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hackernoon.com/_next/image%3Furl%3Dhttps%253A%252F%252Flh4.googleusercontent.com%252FwdZt6q1oLVj2Sevyps7kbE8VG9AeKbOUSklnHvFQgQ4dfdnkQG9YCt7AxRaJ99znlz0x69HCANWLwSI2ldiVcefvoQ8_2nRBb95Tll5qOxNZFUTw3z_3fxPkYT9ST9ZNpooHPzOx%253Ds0%26w%3D1920%26q%3D75" alt="JavaScript Algorithms and Data Structures Certification course opening page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Freecodecamp is a not-for-profit company whose mission is to help people learn to code for free. Their course &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/"&gt;JavaScript Algorithms and Data Structures&lt;/a&gt; is one of the best courses to start learning JavaScript.&lt;/p&gt;

&lt;p&gt;This course takes you from the absolute basics of JavaScript to modern ES6, Regular Expressions, Basic Data Structures, Functional Programming, and Object-Oriented Programming along with lots of algorithmic challenges to strengthen your problem-solving muscles.&lt;/p&gt;

&lt;p&gt;Unfortunately, this course doesn’t teach you about Document Object Model(DOM) but still, this is one of the best courses to start JavaScript, you can cover DOM from other courses mentioned below quickly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-learn-javascript-basics-codedamn"&gt;
  &lt;/a&gt;
  2. Learn JavaScript Basics @ Codedamn
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H5BmCFus--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hackernoon.com/_next/image%3Furl%3Dhttps%253A%252F%252Flh3.googleusercontent.com%252F0IulwA5B9kAKPAGkbYhyxq2v1eSLWULKVsv_EXVQFnFkjEZQ3zvu0WDwvwwc8oLNJRCEOkpZvXlIfe8CHlYFQXfPdqvjDbh2l3vusmxz9Df4nXi0szG3vW7RkcgQMjZ45323VfgK%253Ds0%26w%3D1920%26q%3D75" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H5BmCFus--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hackernoon.com/_next/image%3Furl%3Dhttps%253A%252F%252Flh3.googleusercontent.com%252F0IulwA5B9kAKPAGkbYhyxq2v1eSLWULKVsv_EXVQFnFkjEZQ3zvu0WDwvwwc8oLNJRCEOkpZvXlIfe8CHlYFQXfPdqvjDbh2l3vusmxz9Df4nXi0szG3vW7RkcgQMjZ45323VfgK%253Ds0%26w%3D1920%26q%3D75" alt="Learn JavaScript Basics Certification intro page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Codedamn is an interactive coding platform that provides both video lectures and hands-on practice sessions with its labs feature which means you are not just passively watching videos but also implementing what you learn side-by-side.&lt;/p&gt;

&lt;p&gt;This &lt;a href="https://codedamn.com/learn/javascript-basics?ref=hackernoon.com"&gt;course&lt;/a&gt; takes you from the absolute basics of JavaScript(variables, data types etc.) to intermediate concepts like function and objects etc.&lt;/p&gt;

&lt;p&gt;This course is designed to cover only basic JavaScript and for advanced concepts Codedamn has another &lt;a href="https://codedamn.com/learn/advanced-practical-javascript?ref=hackernoon.com"&gt;course&lt;/a&gt;, you can either buy that or cover the advance part from freecodecamp’s curriculum.&lt;/p&gt;

&lt;p&gt;One great thing here is that this course teaches you about DOM, so you can complement the course with freecodecamp.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-mdn-web-docs"&gt;
  &lt;/a&gt;
  3. MDN Web Docs
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A9xz0caN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hackernoon.com/_next/image%3Furl%3Dhttps%253A%252F%252Flh3.googleusercontent.com%252FxUjcheC-QGg1zadUzduBIu86rwiUX0RdIIVCYIrMukfd4jzuC2Nq9c-ZfTEuMURP6UsQxQ1RzVgQvHETzc11NXb7bhecP88cgy4uI4zS1sXWDzG2UqIZo4PsVmFYfVUrVFLD0q1G%253Ds0%26w%3D1920%26q%3D75" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A9xz0caN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hackernoon.com/_next/image%3Furl%3Dhttps%253A%252F%252Flh3.googleusercontent.com%252FxUjcheC-QGg1zadUzduBIu86rwiUX0RdIIVCYIrMukfd4jzuC2Nq9c-ZfTEuMURP6UsQxQ1RzVgQvHETzc11NXb7bhecP88cgy4uI4zS1sXWDzG2UqIZo4PsVmFYfVUrVFLD0q1G%253Ds0%26w%3D1920%26q%3D75" alt="MDN Web Docs JavaScript page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript"&gt;MDN&lt;/a&gt; Web Docs is an extensive documentation created and maintained by Mozilla. Technically it’s not a course but documentation. &lt;/p&gt;

&lt;p&gt;It covers structured content on JavaScript from absolute basics to advance, if you can directly understand and learn the language from here, that’s amazing, or else you can use it as a reference to look up when you find any topic confusing or want to learn a specific topic.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-learn-javascript-for-free-scrimba"&gt;
  &lt;/a&gt;
  4. Learn JavaScript for free @ Scrimba
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1SN-grOc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hackernoon.com/_next/image%3Furl%3Dhttps%253A%252F%252Flh3.googleusercontent.com%252F3Ud2EZ3bmiqP9jvi0Ty0RoGwCzFeUT0E-yFWfC45kO-yWlhWxYjn7RZNZzjl6SMXi9Id_I-rZQKIMclmRgwrsxpUd6Jn1z0mvt_C66RD3w2UfEzQxo8tbotISOwCwl6gXZHd95p4%253Ds0%26w%3D1920%26q%3D75" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SN-grOc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hackernoon.com/_next/image%3Furl%3Dhttps%253A%252F%252Flh3.googleusercontent.com%252F3Ud2EZ3bmiqP9jvi0Ty0RoGwCzFeUT0E-yFWfC45kO-yWlhWxYjn7RZNZzjl6SMXi9Id_I-rZQKIMclmRgwrsxpUd6Jn1z0mvt_C66RD3w2UfEzQxo8tbotISOwCwl6gXZHd95p4%253Ds0%26w%3D1920%26q%3D75" alt="Learn JavaScript for free Certification course page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Scrimba.com is a code learning platform whose goal is to create the best possible coding school at the lowest possible cost for students.&lt;/p&gt;

&lt;p&gt;Scrimba created a new video format for its code screencast tutorials. All their tutorials are screencast videos and, at any point, you can pause the video and edit the code which your instructor was typing - which is a mind-blowing way to learn.&lt;/p&gt;

&lt;p&gt;This is purely a project-based &lt;a href="https://scrimba.com/learn/learnjavascript?ref=hackernoon.com"&gt;course&lt;/a&gt;, here you’ll create a&lt;/p&gt;

&lt;p&gt;*Passenger Counter App&lt;br&gt;
*Blackjack game&lt;br&gt;
*Chrome Extension&lt;/p&gt;

&lt;p&gt;I would recommend you to first learn the concepts from the above courses and once you have a basic understanding of JavaScript, come here to learn how to implement those concepts while building actual projects.&lt;/p&gt;

&lt;p&gt;Building these three awesome projects will be fun and also boost your development skills.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-javascriptinfo"&gt;
  &lt;/a&gt;
  5. JavaScript.info
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eBYvlPxH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hackernoon.com/_next/image%3Furl%3Dhttps%253A%252F%252Flh6.googleusercontent.com%252FANSROpEgfDioGNgyctVW99k5hMO9xx8l3QmkxRfzR2x_2qdL09HZI2emCmP9MG7YbMO6EqufGoWLPZNCyfgDeASOGwdVH4m9RaftgKrD3E7Y1QbV4ZRcIHJl2lEKcJCZNaKc3a4j%253Ds0%26w%3D1920%26q%3D75" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eBYvlPxH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hackernoon.com/_next/image%3Furl%3Dhttps%253A%252F%252Flh6.googleusercontent.com%252FANSROpEgfDioGNgyctVW99k5hMO9xx8l3QmkxRfzR2x_2qdL09HZI2emCmP9MG7YbMO6EqufGoWLPZNCyfgDeASOGwdVH4m9RaftgKrD3E7Y1QbV4ZRcIHJl2lEKcJCZNaKc3a4j%253Ds0%26w%3D1920%26q%3D75" alt="JavaScript.info website's screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another incredible &lt;a href="https://javascript.info/?ref=hackernoon.com"&gt;documentation&lt;/a&gt; website similar to MDN but only for JavaScript. This website documents JavaScript from absolute beginning to absolute advance. If your goal is to master JavaScript or reach an advanced level, I would recommend you to check out this website.&lt;/p&gt;

&lt;p&gt;In the initial stage, don’t use this website as a roadmap for your learning, but only as a reference to understand certain topics.&lt;/p&gt;

&lt;p&gt;Your first goal should be to get to the stage where you can build amazing projects on your own. &lt;/p&gt;

&lt;p&gt;JavaScript.info might overwhelm and demotivate you in the early stage when you look at the depth of the JavaScript language. &lt;/p&gt;

&lt;p&gt;Once you go beyond the basic level of JavaScript, this website is your best friend.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#ideal-roadmap-to-learn-javascript"&gt;
  &lt;/a&gt;
  Ideal Roadmap to learn JavaScript
&lt;/h1&gt;

&lt;p&gt;My ideal recommendation for you as a beginner would be to cover the important topics from Freecodecamp and Codedamn: try to complement the learnings of both the platforms, and don’t study the same topic from all the websites if you already get it.&lt;/p&gt;

&lt;p&gt;Once your basics are covered, sign up for the Scrimba course to get started in project building. If you complete the course sincerely, you’ll be skilled enough to walk on your own path and start building your own projects once the course is over.&lt;/p&gt;

&lt;p&gt;If you have any doubts or you are stuck at something, feel free to DM me on &lt;a href="https://twitter.com/ashutoshmishrae"&gt;Twitter&lt;/a&gt;, I’ll be more than happy to help you. :-)&lt;/p&gt;

&lt;p&gt;Also published on &lt;a href="https://hackernoon.com/5-best-free-javascript-courses-for-beginner-devs"&gt;HackerNoon&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>My 10 favorite Tech Twitter tweets from the past week:</title>
      <author>Pasca Vlad</author>
      <pubDate>Tue, 05 Oct 2021 10:10:43 +0000</pubDate>
      <link>https://dev.to/pascavld/my-10-favorite-tech-twitter-tweets-from-the-past-week-3ab2</link>
      <guid>https://dev.to/pascavld/my-10-favorite-tech-twitter-tweets-from-the-past-week-3ab2</guid>
      <description>&lt;p&gt;&lt;em&gt;If you found value in this thread you will most likely enjoy my tweets too so make sure you follow me on &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;  for more information about web development and how to improve as a developer. This article was first published on my &lt;a href="https://vladpasca.hashnode.dev/"&gt;Blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is how you can use "var" in HTML:&lt;/p&gt;

&lt;p&gt;by IMAC2 &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ysWUC09w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FASyjO3WUAcyUbx.png" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--LQdMEJqn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/481764787089440769/NNWc-S_V_normal.jpeg" alt="Álvaro Trigo  🐦🔥 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Álvaro Trigo  🐦🔥
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @imac2
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      We can use `var` in HTML too! 👇&lt;br&gt;&lt;br&gt;- Usually displayed in italics.&lt;br&gt;&lt;br&gt;- Improves semantics for variables, mathematical expressions, and programming contexts. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:07 PM - 27 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1442475955075915777" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1442475955075915777" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1442475955075915777" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Stop worrying about the tools:&lt;/p&gt;

&lt;p&gt;By ravinwashere &lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--niwr-zi8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1314872679195799552/80_xRIEF_normal.jpg" alt="Ravin profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Ravin
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/ravinwashere"&gt;@ravinwashere&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Dear Developer, &lt;br&gt;&lt;br&gt;Don't worry about tools,&lt;br&gt;Don't worry about making things perfect. &lt;br&gt;&lt;br&gt;Just build things. &lt;br&gt;&lt;br&gt;When you do, you will learn about all sorts of things related to software development.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:48 PM - 30 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1443573347497824257" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1443573347497824257" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1443573347497824257" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Learn Unit Testing in JavaScript:&lt;/p&gt;

&lt;p&gt;By TheAnkurTyagi &lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7P1-CsK6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FASrGY9WYAQwCAS.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--jmpwvIZM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1411675163586928642/XpjAUSnz_normal.jpg" alt="Ankur💻🎧💪 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Ankur💻🎧💪
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @theankurtyagi
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      The Ultimate Guide to Unit Testing in JavaScript.&lt;br&gt;&lt;br&gt;A Thread... 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      12:41 PM - 27 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1442469511311990798" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1442469511311990798" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1442469511311990798" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Free Full Stack program:&lt;/p&gt;

&lt;p&gt;By catalinmpit &lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8l7u-nfY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1420288123729231874/ygNOzKbc_normal.jpg" alt="Catalin Pit profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Catalin Pit
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @catalinmpit
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Today I started the Full Stack program and I thought of sharing it with you.&lt;br&gt;&lt;br&gt;It teaches you the following technologies:&lt;br&gt;• Node.js&lt;br&gt;• MongoDB&lt;br&gt;• GraphQL&lt;br&gt;• TypeScript&lt;br&gt;• React&lt;br&gt;• Redux&lt;br&gt;&lt;br&gt;It's completely free and of high quality! 🌟&lt;br&gt;&lt;br&gt;&lt;a href="https://t.co/YVwpTFb9KY"&gt;fullstackopen.com/en/&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      14:26 PM - 30 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1443583066618806285" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1443583066618806285" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1443583066618806285" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Simple Web3 Developer Roadmap:&lt;/p&gt;

&lt;p&gt;By heyOnuoha &lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--NCGI2cnh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1397096197073031171/IlAGINXQ_normal.jpg" alt="⚡ Favor ⚡ profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        ⚡ Favor ⚡
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/heyonuoha"&gt;@heyonuoha&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      A Simple Web 3.0 Developer Roadmap&lt;br&gt;&lt;br&gt;&amp;lt;Start Here /&amp;gt;&lt;br&gt;   ↓&lt;br&gt;Blockchain Theory&lt;br&gt;   ↓&lt;br&gt;Smart Contracts&lt;br&gt;   ↓&lt;br&gt;JavaScript     →     Web3.js&lt;br&gt;   ↓&lt;br&gt;Projects         →     1 Project&lt;br&gt;   ↓&lt;br&gt;Deploy           →     IPFS&lt;br&gt;   ↓&lt;br&gt;Get a job &lt;br&gt;   ↓&lt;br&gt;💰💰💰
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      07:39 AM - 27 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1442393394651836419" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1442393394651836419" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1442393394651836419" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Useful websites for developers:&lt;/p&gt;

&lt;p&gt;By denicmarko &lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--PUv9KUkw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1308385514744098816/oDXuaci__normal.jpg" alt="Marko ⚡ Denic profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Marko ⚡ Denic
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/denicmarko"&gt;@denicmarko&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Useful websites for web developers.&lt;br&gt;&lt;br&gt;🧵
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      10:15 AM - 29 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1443157416363925505" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1443157416363925505" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1443157416363925505" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Focus on the basics&lt;/p&gt;

&lt;p&gt;By natmiletic &lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--IehfkE-Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1377680126834450432/L2BxGCMT_normal.jpg" alt="Nat Miletic profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Nat Miletic
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/natmiletic"&gt;@natmiletic&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I would learn WordPress and SEO before I spend any time on web3
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      19:11 PM - 27 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1442567475619516421" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1442567475619516421" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1442567475619516421" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Contribute to web3&lt;/p&gt;

&lt;p&gt;By oliverjumpertz &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--WnS_qwUF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1156692917114871809/Ju4ZOciV_normal.jpg" alt="Oliver Jumpertz profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Oliver Jumpertz
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/oliverjumpertz"&gt;@oliverjumpertz&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Web 3.0 is the next evolutionary step of the internet and an awesome one, to be honest.&lt;br&gt;&lt;br&gt;Every web developer, beginner, junior, or senior can and should contribute to it, and it doesn't even take too much effort.&lt;br&gt;&lt;br&gt;Let's see how.&lt;br&gt;&lt;br&gt;A thread. ↓
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      12:38 PM - 30 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1443555879907889159" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1443555879907889159" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1443555879907889159" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Don't do these things as a developer&lt;/p&gt;

&lt;p&gt;By sunilc_ &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--kPuQ7wIq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1292375738461503488/DTtTN8JZ_normal.jpg" alt="Sunil Kumar profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Sunil Kumar
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/sunilc_"&gt;@sunilc_&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      As a developer, do not:&lt;br&gt;&lt;br&gt;- neglect soft skills&lt;br&gt;- run behind buzz words&lt;br&gt;- be in your comfort zone&lt;br&gt;- make work your entire life&lt;br&gt;- just stick to one tech stack&lt;br&gt;- stay in one company for long&lt;br&gt;- feel envious of others' success&lt;br&gt;- keep sitting for longer hours without breaks
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:36 PM - 29 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1443207984927051776" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1443207984927051776" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1443207984927051776" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Always learn something new&lt;/p&gt;

&lt;p&gt;By nachoiacovino &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--GT-VxZuk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1352285231030689794/MgpWv4q0_normal.jpg" alt="Nacho Iacovino ⚡ profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Nacho Iacovino ⚡
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @nachoiacovino
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Software engineering is the only job in which companies expect you to keep doing it and learning about it in your free time.&lt;br&gt;&lt;br&gt;Imagine a doctor that gets discarded for a job because he doesn't perform enough "side surgeries".
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:06 PM - 29 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1443245724653735939" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1443245724653735939" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1443245724653735939" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;&lt;em&gt;I hope found this useful and if you did please let me know. If you have any questions feel free to DM me on  &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;._let me know. If you have any questions feel free to DM me on  &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>A simple markdown parser in 50 lines of js</title>
      <author>Casualwriter</author>
      <pubDate>Tue, 05 Oct 2021 09:42:06 +0000</pubDate>
      <link>https://dev.to/casualwriter/a-simple-markdown-parser-in-50-lines-of-js-4gpi</link>
      <guid>https://dev.to/casualwriter/a-simple-markdown-parser-in-50-lines-of-js-4gpi</guid>
      <description>&lt;p&gt;Just write a simple markdown parser. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;support basic markdown syntax only&lt;/li&gt;
&lt;li&gt;50 lines of JavaScript.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NWvnGMmg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vomk64862fcop14j72r5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NWvnGMmg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vomk64862fcop14j72r5.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/casualwriter/powerpage/blob/main/source/pp-document.html"&gt;Source&lt;/a&gt;, &lt;/li&gt;
&lt;li&gt;documentation and supported syntax can be found at &lt;a href="https://github.com/casualwriter/powerpage/blob/main/pp-document.md"&gt;github.com/casualwriter&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sorry for not good coding style! still working on more syntax.&lt;/p&gt;

&lt;p&gt;best regards,&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>markdown</category>
    </item>
    <item>
      <title>Supabase: what's new in September 2021</title>
      <author>Copple</author>
      <pubDate>Tue, 05 Oct 2021 09:22:15 +0000</pubDate>
      <link>https://dev.to/supabase/supabase-what-s-new-in-september-2021-3id2</link>
      <guid>https://dev.to/supabase/supabase-what-s-new-in-september-2021-3id2</guid>
      <description>&lt;p&gt;Did you know it's been 2 years since the &lt;a href="https://github.com/supabase/realtime/commit/175f649784147af80acfc9ff5be9d160285c76ea"&gt;first commit&lt;/a&gt; to Realtime, our real-time engine for Postgres? Before we even existed as a company! &lt;br&gt;
We spent this month improving docs and content content, improving UX, and &lt;a href="https://twitter.com/thorwebdev/status/1441041268411277322"&gt;onboarding Developer Advocates&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NesbT3cb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901469-77c45924-56f0-49ad-ab92-914d17e2a7f7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NesbT3cb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901469-77c45924-56f0-49ad-ab92-914d17e2a7f7.jpg" alt="release-sept-2021"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hackathon-v2"&gt;
  &lt;/a&gt;
  Hackathon v2
&lt;/h2&gt;

&lt;p&gt;To kick off &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest&lt;/a&gt;, another Supabase Hackathon is happening &lt;a href="https://supabase.io/blog/2021/09/28/supabase-hacktoberfest-hackathon-2021"&gt;right now&lt;/a&gt;. You've got another 7 days to be in to win a limited edition t-shirt. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f35KIPUk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901455-51e87e99-13b6-42dc-ac18-5a09c95f8c52.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f35KIPUk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901455-51e87e99-13b6-42dc-ac18-5a09c95f8c52.png" alt="hacktober"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#abort-requests"&gt;
  &lt;/a&gt;
  Abort Requests
&lt;/h2&gt;

&lt;p&gt;We added support for &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/AbortController"&gt;AbortController&lt;/a&gt; in our Javascript library so that you can abort long-running queries. [&lt;a href="https://supabase.io/docs/reference/javascript/select#aborting-requests-in-flight"&gt;Docs&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pp2ojSQY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901474-83e4d0d2-0846-4445-8c51-2c9af3ca5413.png" class="article-body-image-wrapper"&gt;&lt;img alt="Supabase_abort_requests" src="https://res.cloudinary.com/practicaldev/image/fetch/s--pp2ojSQY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901474-83e4d0d2-0846-4445-8c51-2c9af3ca5413.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#improved-table-management"&gt;
  &lt;/a&gt;
  Improved table management
&lt;/h2&gt;

&lt;p&gt;We've made a number of changes to the Dashboard to expose some great features of PostgreSQL including:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#column-types"&gt;
  &lt;/a&gt;
  Column types
&lt;/h3&gt;

&lt;p&gt;We've improved the column Type field so that it supports your &lt;a href="https://www.postgresql.org/docs/current/sql-createtype.html"&gt;custom types&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yOkK7Qfp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901485-986106b5-5182-45a3-bc62-e7faa64f6b7e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yOkK7Qfp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901485-986106b5-5182-45a3-bc62-e7faa64f6b7e.png" alt="types"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#is-unique"&gt;
  &lt;/a&gt;
  Is Unique
&lt;/h3&gt;

&lt;p&gt;We've made it simple to add a unique constraint.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0JLl6Hvm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901461-245fd635-5aca-4589-ac03-a2b0807899f5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0JLl6Hvm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901461-245fd635-5aca-4589-ac03-a2b0807899f5.png" alt="is-unique"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#edit-columns"&gt;
  &lt;/a&gt;
  Edit columns
&lt;/h3&gt;

&lt;p&gt;By popular request, you can now view all columns in a table at a glance and edit them in bulk.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TXjBBLE8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901451-87b7d91a-639c-427d-9fec-777951bcc7d3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TXjBBLE8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901451-87b7d91a-639c-427d-9fec-777951bcc7d3.png" alt="edit-columns"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#crossschema-relationships"&gt;
  &lt;/a&gt;
  Cross-schema relationships
&lt;/h2&gt;

&lt;p&gt;We updated our &lt;a href="https://github.com/supabase/grid"&gt;grid&lt;/a&gt; to support relationships across multiple schemas.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LrRRD8A3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901463-1ba0d27d-d431-41d5-bd9a-42304480e840.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LrRRD8A3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901463-1ba0d27d-d431-41d5-bd9a-42304480e840.png" alt="relationships"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#improved-auth-docs"&gt;
  &lt;/a&gt;
  Improved Auth Docs
&lt;/h2&gt;

&lt;p&gt;We've revamped the Auth docs - The docs are now broken down into &lt;a href="https://supabase.io/docs/guides/auth/auth-apple"&gt;Authentication&lt;/a&gt; and &lt;a href="https://supabase.io/docs/guides/auth/row-level-security"&gt;Authorization&lt;/a&gt;, and organized alongside our &lt;a href="https://supabase.io/docs/learn/auth-deep-dive/auth-deep-dive-jwts"&gt;Deep Dive&lt;/a&gt; series.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ub-LeMwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901440-e335a99f-7ee5-4dda-8cee-0b689c5cb311.png" class="article-body-image-wrapper"&gt;&lt;img alt="auth-docs" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ub-LeMwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901440-e335a99f-7ee5-4dda-8cee-0b689c5cb311.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#low-code-demo"&gt;
  &lt;/a&gt;
  Low Code demo
&lt;/h2&gt;

&lt;p&gt;Low Code demo, Using Supabase with &lt;a href="http://clutch.io/"&gt;Clutch.io&lt;/a&gt; - &lt;a href="https://twitter.com/_dijonmusters"&gt;@_dijonmusters&lt;/a&gt; ran a &lt;a href="https://www.youtube.com/watch?t=642&amp;amp;v=5fsKMTeBKKY"&gt;session at General Assembly&lt;/a&gt; showing how to use these two tools together to create apps using a low code approach. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/5fsKMTeBKKY"&gt;https://youtu.be/5fsKMTeBKKY&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#community"&gt;
  &lt;/a&gt;
  Community
&lt;/h2&gt;

&lt;p&gt;There was a lot of new content this month.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#videos"&gt;
  &lt;/a&gt;
  Videos
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;How I built the #10 product in 30 days - &lt;a href="https://www.youtube.com/watch?v=CS1myTKJBR4"&gt;Gary Tokman [video]&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Github OAuth flow with Supabase + React - &lt;a href="https://www.youtube.com/watch?v=jSqTzZk9UMg"&gt;Nader Dabit [video]&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;The Best Stack for Web Developers - &lt;a href="https://www.youtube.com/watch?v=-2s_87QkPEI"&gt;Christopher Kapic [video]&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Flutter + Supabase Course - &lt;a href="https://www.youtube.com/watch?v=PjVG6QtUYw4"&gt;Abhishvek [video]&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;React Native Mobile Auth - &lt;a href="https://www.youtube.com/watch?v=aBuB-Q6vHDE"&gt;Aaron Saunders [video]&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Self Hosting Supabase - &lt;a href="https://www.youtube.com/watch?v=HCqta43JHkU"&gt;Kelvin Pompey [video]&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Teta Flutter Frontend builder - &lt;a href="https://www.youtube.com/watch?v=rooTglpUuvE"&gt;Teta Team [product]&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Magic Link + Route Controls in Next.js - &lt;a href="https://www.youtube.com/watch?v=oXWImFqsQF4"&gt;Nader Dabit [Video]&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Supabase in 6 minutes - &lt;a href="https://www.youtube.com/watch?v=ogEitL8RwtQ"&gt;Nader Dabit [video]&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#twitter"&gt;
  &lt;/a&gt;
  Twitter
&lt;/h3&gt;

&lt;p&gt;We hit 16.5k followers. &lt;a href="https://twitter.com/supabase/status/1441428275176247302"&gt;Follow us&lt;/a&gt; there for advance frontend tips and 👁️⚡👁️&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--55Mc6NNi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901479-91226fcc-4c25-4c8f-be62-761d5d500b1d.png" class="article-body-image-wrapper"&gt;&lt;img alt="twitter" src="https://res.cloudinary.com/practicaldev/image/fetch/s--55Mc6NNi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901479-91226fcc-4c25-4c8f-be62-761d5d500b1d.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#github"&gt;
  &lt;/a&gt;
  GitHub
&lt;/h3&gt;

&lt;p&gt;Not far from 20K stars: &lt;a href="http://github.com/supabase/supabase"&gt;github.com/supabase/supabase&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QSb29i00--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901472-6f4e2bd0-ba6a-4572-b77a-44dfc3c69675.png" class="article-body-image-wrapper"&gt;&lt;img alt="stars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--QSb29i00--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901472-6f4e2bd0-ba6a-4572-b77a-44dfc3c69675.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://repository.surf/supabase"&gt;repository.surf/supabase&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#discord"&gt;
  &lt;/a&gt;
  Discord
&lt;/h3&gt;

&lt;p&gt;Our Discord is growing fast. Come hangout with 3500+ developers building on Supabase today: &lt;a href="http://discord.supabase.com"&gt;discord.supabase.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nOs_6VtJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901449-4cead844-d1c2-4226-941d-2525c2f745ef.png" class="article-body-image-wrapper"&gt;&lt;img alt="discord" src="https://res.cloudinary.com/practicaldev/image/fetch/s--nOs_6VtJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901449-4cead844-d1c2-4226-941d-2525c2f745ef.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hiring"&gt;
  &lt;/a&gt;
  Hiring
&lt;/h2&gt;

&lt;p&gt;We're Hiring &lt;a href="https://about.supabase.com/careers/sre"&gt;SREs&lt;/a&gt;. We're fully remote and we love Open Source. &lt;a href="https://about.supabase.com/careers"&gt;See open roles&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JY-u1Fpj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901458-d6f601a5-45de-41a0-bcec-35dba385cd47.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JY-u1Fpj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/135901458-d6f601a5-45de-41a0-bcec-35dba385cd47.png" alt="hiring"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#coming-next"&gt;
  &lt;/a&gt;
  Coming Next
&lt;/h2&gt;

&lt;p&gt;We're warming up for another Launch Week! Last time was "&lt;a href="https://supabase.io/blog/2021/07/22/supabase-launch-week-sql"&gt;Launch Week II: the SQL&lt;/a&gt;". We're going to need another month to come up with a good pun again, so we'll aim for November.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-started"&gt;
  &lt;/a&gt;
  Get started
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Start using Supabase today: &lt;strong&gt;&lt;a href="https://app.supabase.io/"&gt;app.supabase.io&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Make sure to &lt;strong&gt;&lt;a href="https://github.com/supabase/supabase"&gt;star us on GitHub&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Follow us &lt;strong&gt;&lt;a href="https://twitter.com/supabase"&gt;on Twitter&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Subscribe to our &lt;strong&gt;&lt;a href="https://www.youtube.com/channel/UCNTVzV1InxHV-YR0fSajqPQ"&gt;YouTube channel&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Become a &lt;strong&gt;&lt;a href="https://github.com/sponsors/supabase"&gt;sponsor&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>hacktoberfest</category>
      <category>firebase</category>
      <category>javascript</category>
      <category>postgres</category>
    </item>
    <item>
      <title>What if front-end technologies were countries? - ⚔️ Game of Codes project 🛡️</title>
      <author>Michal Szymanski</author>
      <pubDate>Tue, 05 Oct 2021 09:19:02 +0000</pubDate>
      <link>https://dev.to/ascensus_mdb/what-if-front-end-technologies-were-countries-game-of-codes-project-2ac1</link>
      <guid>https://dev.to/ascensus_mdb/what-if-front-end-technologies-were-countries-game-of-codes-project-2ac1</guid>
      <description>&lt;p&gt;Hi!&lt;/p&gt;

&lt;p&gt;My name is Michal and apart from being a web developer I am also a huge fan of history, maps and fantasy.&lt;/p&gt;

&lt;p&gt;Over the years, observing the world of front-end technologies, I could not help but feel that it is a great material for creating a separate universe that could become the basis for an extremely interesting story.&lt;/p&gt;

&lt;p&gt;This project is purely for fun. Using real data, such as the number of NPM downloads, stars on github, I tried to measure the "power" of a given technology and visualize it with quasi-historical maps.&lt;/p&gt;

&lt;p&gt;I was also tempted to write a mini-story that could happen in such an imaginary universe.&lt;/p&gt;

&lt;p&gt;Anyway - if you're curious about what front-end technologies visualized as states would look like, have a look at the link below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://game-of-codes.mdbgo.io/"&gt;https://game-of-codes.mdbgo.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And if you have any idea how this story and this universe could become more interesting, or more in line with real statistics related to the front-end - let me know in the comment!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>What is a REST API?</title>
      <author>Salma Alam-Naylor</author>
      <pubDate>Tue, 05 Oct 2021 09:05:20 +0000</pubDate>
      <link>https://dev.to/whitep4nth3r/what-is-a-rest-api-51h</link>
      <guid>https://dev.to/whitep4nth3r/what-is-a-rest-api-51h</guid>
      <description>&lt;p&gt;If you’ve had a look at the Contentful docs, you’ll have seen the acronyms REST and API in at least a few places! But what does it all mean? Let’s break it down.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-an-api"&gt;
  &lt;/a&gt;
  What is an API?
&lt;/h2&gt;

&lt;p&gt;API stands for Application Programming Interface, which is a way to communicate between different software services. Different types of APIs are used in programming hardware and software, including operating system APIs, remote APIs and web APIs — like the APIs that Contentful provides. If you’re new to development, I recommend you check out this blog post — What is an API? to get a good grounding on APIs and HTTP, in order to prepare for what we’re going to cover in this post.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/whitep4nth3r" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gFhxX9YI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--89x-qD1I--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/492757/d64f2cf8-616d-4a73-af1c-17273b0c8545.png" alt="whitep4nth3r"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/whitep4nth3r/what-is-an-api-587c" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;What is an API?&lt;/h2&gt;
      &lt;h3&gt;Salma Alam-Naylor ・ Aug 12 ・ 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Now that you’ve got up to speed on APIs and HTTP, how does REST fit into it? Let’s take a look.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-rest-mean"&gt;
  &lt;/a&gt;
  What does REST mean?
&lt;/h2&gt;

&lt;p&gt;REST is an acronym for Representational State Transfer, which is a term introduced in 2000 by American computer scientist Roy Fielding in his dissertation “&lt;a href="https://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm"&gt;Architectural Styles and the Design of Network-based Software Architectures.&lt;/a&gt;” REST is a set of rules and guidelines for creating resource-based web services that are stateless (we’ll unpack this later).&lt;/p&gt;

&lt;p&gt;You might hear REST APIs described as RESTful, or following a RESTful architecture.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rules-of-representational-state-transfer"&gt;
  &lt;/a&gt;
  Rules of Representational State Transfer
&lt;/h2&gt;

&lt;p&gt;Let’s take a look at some of the most important concepts of a RESTful API. This list is not exhaustive but is designed to give an overview of how REST architecture is designed. Not all APIs are RESTful APIs — and some APIs take inspiration from the principles of REST without following the rules completely.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#restful-apis-have-a-predefined-set-of-operations-available-to-a-user"&gt;
  &lt;/a&gt;
  RESTful APIs have a predefined set of operations available to a user
&lt;/h2&gt;

&lt;p&gt;Developers and documentation often talk about “functionality being exposed via an API.” APIs usually do not allow for complete control over back-end systems. Instead, predefined functionality and operations are made available to users of APIs. Good APIs come with great documentation that describes how to send data in the correct format and what data to expect from each piece of API functionality. &lt;/p&gt;

&lt;p&gt;New features are often added to APIs using a versioning system to ensure that large-scale applications are protected from potential breaking changes. As a result, you may end up working with differently versioned API URLs in your applications. For example, you might see &lt;code&gt;https://myawesomeapi.dev/api/v1/users&lt;/code&gt; vs &lt;code&gt;https://myawesomeapi.dev/api/v2/users&lt;/code&gt; in the wild. Notice the difference between the URLs — /v1 vs /v2.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#restful-apis-are-based-on-resources"&gt;
  &lt;/a&gt;
  RESTful APIs are based on resources
&lt;/h2&gt;

&lt;p&gt;Responses from RESTful API calls over HTTP — usually called payloads — are returned as HTML, XML, JSON or similar text-based representations of resources that exist as stored objects. A stored object — or resource — can be &lt;em&gt;anything&lt;/em&gt;, such as a blog post stored in a document database, a URL to a hosted image, or data about a user stored across multiple tables in a relational database.&lt;/p&gt;

&lt;p&gt;The format of the URLs for RESTful API endpoints are descriptive and self-documenting. Each URL — requesting a resource or requesting to modify a resource — describes &lt;em&gt;what type of resource&lt;/em&gt; is being requested from the API. &lt;/p&gt;

&lt;p&gt;For example, here’s a &lt;a href="https://www.contentful.com/developers/docs/references/content-delivery-api/"&gt;Contentful Content Delivery API&lt;/a&gt; (CDA) URL that requests information about a single Contentful space via an HTTP GET request. A Contentful space is like a bucket for your Contentful content, which has a name and unique ID.&lt;/p&gt;

&lt;p&gt;Notice the &lt;code&gt;/spaces&lt;/code&gt; part of the URL — which defines that the resource we’re asking for is data that represents a space.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://cdn.contentful.com/spaces/{space_id}?access_token={access_token}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The URL requires two dynamic URL parameters — &lt;code&gt;space_id&lt;/code&gt; and &lt;code&gt;access_token&lt;/code&gt;. The &lt;code&gt;space_id&lt;/code&gt; is the unique identifier of the space we’d like to get information about from the database, and the &lt;code&gt;access_token&lt;/code&gt; is for authentication (more on this later when we talk about how REST APIs are stateless).&lt;/p&gt;

&lt;p&gt;Here’s a second example from the &lt;a href="https://www.contentful.com/developers/docs/references/content-management-api/#/reference/environments/environment-collection/get-all-environments-of-a-space/console/curl"&gt;Contentful Content Management API&lt;/a&gt; (CMA), this time asking for a specified &lt;strong&gt;environment&lt;/strong&gt; resource available inside a space via an HTTP GET request (see &lt;strong&gt;/environments&lt;/strong&gt; in the URL). Contentful spaces allow for multiple environments in order to manage content and feature migrations in your applications. This API endpoint takes two dynamic URL parameters — &lt;code&gt;space_id&lt;/code&gt; and &lt;code&gt;environment_id&lt;/code&gt;, and requires an authentication token to be sent via an HTTP Authorization header.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://api.contentful.com/spaces/{space_id}/environments/{enviroment_id}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#restful-apis-allow-resources-to-be-read-or-modified"&gt;
  &lt;/a&gt;
  RESTful APIs allow resources to be read or modified
&lt;/h2&gt;

&lt;p&gt;In the examples above, we used HTTP GET requests to &lt;strong&gt;read&lt;/strong&gt; information about a Contentful space from the CDA and &lt;strong&gt;read&lt;/strong&gt; information about an environment inside a space from the CMA. In addition to retrieving information about stored resources, RESTful APIs also allow you to &lt;strong&gt;create&lt;/strong&gt;, &lt;strong&gt;update&lt;/strong&gt; or &lt;strong&gt;delete&lt;/strong&gt; resources in separate API calls. &lt;/p&gt;

&lt;p&gt;Using the CMA, we can also create, update or delete resources using HTTP POST, PUT and DELETE methods. What’s great about this, is that not only do RESTful API URLs describe the &lt;strong&gt;resources&lt;/strong&gt; concerned in the format of the API URLs, they also describe the &lt;strong&gt;action&lt;/strong&gt; you’re performing on the API according to the HTTP method implemented.&lt;/p&gt;

&lt;p&gt;You may have heard of the acronym &lt;strong&gt;CRUD&lt;/strong&gt; when referring to RESTful API architecture. CRUD stands for &lt;strong&gt;Create, Read, Update, Delete&lt;/strong&gt; — which are the standard actions available on RESTful APIs over HTTP.&lt;/p&gt;

&lt;p&gt;Now we know how to &lt;strong&gt;read&lt;/strong&gt; from the Contentful APIs, let’s take a look at how we can &lt;strong&gt;create, update&lt;/strong&gt; and &lt;strong&gt;delete&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-new-environment-with-http-post"&gt;
  &lt;/a&gt;
  Creating a new environment with HTTP POST
&lt;/h2&gt;

&lt;p&gt;Use HTTP POST to create a new environment with the CMA. &lt;/p&gt;

&lt;p&gt;Send a POST request to the following URL:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://api.contentful.com/spaces/{space_id}/environments
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the following HTTP headers:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Authorization: Bearer &amp;lt;cma_token&amp;gt;
"Content-Type": application/vnd.contentful.management.v1+json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the name of the environment you wish to create in the body of the request:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;body: {
  "name": "My new environment name"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;An HTTP POST request to this API URL creates a new environment with an auto-generated ID. While it’s perfectly fine to create an environment with an auto-generated ID, we recommend creating environments with a specified ID to have more control in your automation scripts. And the good news is, you can do this with an HTTP PUT request.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-or-updating-an-environment-with-http-put"&gt;
  &lt;/a&gt;
  Creating or updating an environment with HTTP PUT
&lt;/h2&gt;

&lt;p&gt;I like to think of the HTTP PUT method as literally putting more specific information into the data store, rather than sending off a request via POST for the API to create something for me.&lt;/p&gt;

&lt;p&gt;To create a new environment with a specified ID, send an HTTP PUT request to the following URL, where &lt;code&gt;{environment_id}&lt;/code&gt; is the ID you wish to specify.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://api.contentful.com/spaces/{space_id}/environments/{enviroment_id}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use the following HTTP headers:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Authorization: Bearer &amp;lt;cma_token&amp;gt;
"Content-Type": application/vnd.contentful.management.v1+json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And send the name of the environment you wish to create in the body of the request:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;body: {
  "name": "My new environment name"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To update an environment, &lt;strong&gt;make the same API call as above&lt;/strong&gt;, but with an additional HTTP header, specifying the last version of the environment you are updating, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;X-Contentful-Version: &amp;lt;existing_version&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#deleting-an-environment-with-http-delete"&gt;
  &lt;/a&gt;
  Deleting an environment with HTTP DELETE
&lt;/h2&gt;

&lt;p&gt;To delete a particular environment within a space, send an HTTP DELETE request to the following URL, where &lt;code&gt;{environment_id}&lt;/code&gt; is the ID of the environment you wish to delete:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://api.contentful.com/spaces/{space_id}/environments/{enviroment_id}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And use the following HTTP header:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Authorization: Bearer &amp;lt;cma_token&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#now-heres-the-fun-bit"&gt;
  &lt;/a&gt;
  Now, here’s the fun bit!
&lt;/h2&gt;

&lt;p&gt;Notice how the API URLs to create with a specified ID, read, update and delete an environment are &lt;em&gt;&lt;strong&gt;all exactly the same&lt;/strong&gt;&lt;/em&gt;!&lt;/p&gt;

&lt;p&gt;RESTful API calls are performed on a single URL representing the type of resource you wish to create or modify. The difference is that the read method uses an HTTP GET request, the create and update method uses HTTP PUT (with different HTTP headers depending on the action you want to perform), and the delete method uses HTTP DELETE.&lt;/p&gt;

&lt;p&gt;This is where RESTful architecture really shines. The combination of the HTTP methods coupled with the resource-based URLs and different HTTP headers makes navigating and working with RESTful APIs pretty intuitive and very well structured.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.contentful.com/developers/docs/references/content-management-api/#/reference/environments/environment"&gt;Click here to see the CMA environments documentation referenced above in full.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#restful-apis-are-stateless"&gt;
  &lt;/a&gt;
  RESTful APIs are stateless
&lt;/h2&gt;

&lt;p&gt;Stateless in this context means no information is passed between different interactions or API calls. In stateless architecture, each request to an API must be processed based only on the information sent with the request at the time. For example, if you make a call to the API with an authentication token, the API won’t remember that you’re authenticated in additional requests. If you wish to make more calls to the same API, you must send an authentication token in all subsequent requests. &lt;/p&gt;

&lt;p&gt;You’ll notice that in each API request above to the CMA, an authorization header was included with each request. Similarly, in the first GET request from the CDA, the authentication token was passed as a URL parameter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-summary"&gt;
  &lt;/a&gt;
  In summary
&lt;/h2&gt;

&lt;p&gt;An API is a way to communicate between different software services using code. REST is a set of rules and guidelines for creating a particular type of API, and not all APIs are RESTful APIs. &lt;/p&gt;

&lt;p&gt;REST stands for Representation State Transfer. RESTful APIs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Have a predefined set of operations available to a user&lt;/li&gt;
&lt;li&gt;Are based on resources&lt;/li&gt;
&lt;li&gt;Usually allow CRUD operations on resources — and CRUD stands for Create, Read, Update, Delete&lt;/li&gt;
&lt;li&gt;Are stateless&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Explore the &lt;a href="https://www.contentful.com/developers/docs/"&gt;Contentful documentation&lt;/a&gt; to solidify your understanding and if you’ve got any questions, find me on &lt;a href="https://twitter.com/whitep4nth3r"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>api</category>
    </item>
    <item>
      <title>Top 10 dev.to articles of the week👘.</title>
      <author>Kavindu Santhusa</author>
      <pubDate>Tue, 05 Oct 2021 07:34:17 +0000</pubDate>
      <link>https://dev.to/ksengine/top-10-dev-to-articles-of-the-week-4dl8</link>
      <guid>https://dev.to/ksengine/top-10-dev-to-articles-of-the-week-4dl8</guid>
      <description>&lt;p&gt;DEV is a community of software developers getting together to help one another out. The software industry relies on collaboration and networked learning. They provide a place for that to happen.&lt;br&gt;
Here is the most popular articles published on this platform.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/jburroughs" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7K0-XOS5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--vvj__Eh4--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/706259/8bb55f32-ccfd-4c18-bca0-9e93c9ac4c77.jpg" alt="jburroughs"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/jburroughs/bookmark-these-8-front-end-websites-now-gl0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Bookmark These 8 Front-End Websites Now!&lt;/h2&gt;
      &lt;h3&gt;Jordan Burroughs ・ Sep 29 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#frontend&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/olanetsoft" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Rji20a---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--YCPGNvcB--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/229877/4072b09f-dd13-4ecf-932c-5bd392085500.png" alt="olanetsoft"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/olanetsoft/12-github-repositories-to-help-you-ace-your-job-interview-2a08" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;12+ Github Repositories to Help You Ace Your Job Interview&lt;/h2&gt;
      &lt;h3&gt;Olubisi Idris Ayinde💡 ・ Sep 29 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/sourcegraph" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KF6o1GaU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--4xYIFUjp--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/4522/36950af1-cf2c-4979-bd0f-79873ddbc44d.png" alt="Sourcegraph"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DKGnU9sV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--lqZ7uLPe--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/304853/b1f707ad-5975-4aca-a2bd-db854a60dda5.jpg" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/sourcegraph/15-developer-tools-to-make-you-super-productive-2g0a" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;15 Developer Tools to Make You Super Productive&lt;/h2&gt;
      &lt;h3&gt;Prosper Otemuyiwa for Sourcegraph ・ Sep 28 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codequality&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/muthuannamalai12" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MmS9oXMT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GDTulbee--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/561644/95b85f88-c16f-4b47-8552-b085d58e4362.jpeg" alt="muthuannamalai12"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/muthuannamalai12/10-github-repository-every-web-developer-should-know-10pm" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;10 GitHub Repository every Web Developer should Know&lt;/h2&gt;
      &lt;h3&gt;Muthu Annamalai Venkatachalam ・ Sep 30 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/devteam" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CTihtlIw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--nJ87SGF6--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/1/0213bbaa-d5a1-4d25-9e7a-10c30b455af0.png" alt="The DEV Team"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dJmDooVO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--w_vOeX_E--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/129358/dbf5ae52-7042-4e48-b69d-519eaee20e07.jpeg" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/devteam/hacktoberfest-2021-is-here-4a3l" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Hacktoberfest 2021 is Here 🎃 &lt;/h2&gt;
      &lt;h3&gt;Christina Gorton for The DEV Team ・ Oct 1 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#hacktoberfest&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#meta&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#contributorswanted&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/santan47" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bhefq3ve--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--_m2UqHwH--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/617037/0ce86226-e5db-45bb-85ab-9e6af265aa63.jpeg" alt="santan47"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/santan47/promise-async-await-in-javascript-mlb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Promise &amp;amp; Async await in JavaScript.&lt;/h2&gt;
      &lt;h3&gt;Santan kr Sharma ・ Sep 29 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/collins87mbathi" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LsTjd2lg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--08eekAQP--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/645126/d375cfdd-85cd-42c4-ad1a-575aa35566ae.jpeg" alt="collins87mbathi"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/collins87mbathi/building-a-dating-app-with-mern-478h" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Building a Dating App with MERN&lt;/h2&gt;
      &lt;h3&gt;Collins Mbathi ・ Sep 28 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#express&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/kemyd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3WBwDM5B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--DxG-pIY2--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/136307/dba72ff0-1b9e-42f9-b759-b042a41d990a.jpeg" alt="kemyd"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kemyd/the-largest-library-of-ui-components-for-popular-frameworks-51b5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;The largest library of UI components for popular frameworks&lt;/h2&gt;
      &lt;h3&gt;Dawid Andrzejewski ・ Sep 30 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#tailwindcss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#bootstrap&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/codesphere" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uIg2ovJ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8giGPtm7--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/3552/380dfba1-48b3-42de-85ad-adfdc0f6b89c.jpg" alt="Codesphere Inc."&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X6G6GQhC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j0OuDQK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/554778/bede5ab8-4554-449b-9318-bf43a4f044a3.JPG" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/codesphere/building-a-chrome-extension-in-minutes-3662" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Building a Chrome Extension in Minutes&lt;/h2&gt;
      &lt;h3&gt;Saji Wang for Codesphere Inc. ・ Oct 1 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/bscript" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4O_QNi2A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--C3HUn6mz--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/626546/147b97c9-542f-4593-b0d9-0cf41360bc3d.jpg" alt="bscript"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/bscript/javascript-security-checklist-af" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Javascript Security Checklist&lt;/h2&gt;
      &lt;h3&gt;Bour Abdelhadi ・ Sep 29 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#security&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codereview&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
Enjoy these articles.&lt;br&gt;
Follow me for more articles.&lt;br&gt;
Thanks 💖💖💖

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
