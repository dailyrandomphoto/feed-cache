<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>SES Email Tracking</title>
      <author>Vu Dao</author>
      <pubDate>Wed, 07 Apr 2021 13:04:02 +0000</pubDate>
      <link>https://dev.to/vumdao/ses-email-tracking-34</link>
      <guid>https://dev.to/vumdao/ses-email-tracking-34</guid>
      <description>&lt;p&gt;
  &lt;a href="https://dev.to/vumdao"&gt;
    &lt;img alt="SES Email Tracking" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZPzfphMA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/ses-mail-tracking/blob/master/cover.png%3Fraw%3Dtrue" width="700"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Email tracking gives us the power to build and maintain relationships in this exceedingly crowded, competitive inbox environment And tracking bounced emails, this will be useful for us to track our bounce rate, and monitor our future campaigns in order to get the lowest bounce rate possible and have your emails correctly delivered.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Definition and causes of bounces: A bounce (or bounced email) refers to the situation where your email is rejected by your subscriber's email server.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Soft bounce: This is a temporary issue. The reasons are the following:

&lt;ul&gt;
&lt;li&gt;Your recipients' mailbox and/or your own inbox are full&lt;/li&gt;
&lt;li&gt;Your email message is too large and too heavy&lt;/li&gt;
&lt;li&gt;Your recipients' email server is down or offline&lt;/li&gt;
&lt;li&gt;A connection timeout occurred when Gmail tried to deliver your email&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Hard bounce: This is a permanent issue. The reasons are the following:

&lt;ul&gt;
&lt;li&gt;Your recipients' email address does not exist (anymore)&lt;/li&gt;
&lt;li&gt;The domains do not exist (anymore)&lt;/li&gt;
&lt;li&gt;Your recipients' email server has completely blocked email deliveries&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#whats-in-this-document" class="anchor"&gt;
  &lt;/a&gt;
  What’s In This Document
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#-Setup-Amazon-SES-to-send-detailed-notifications-about-your-bounces,-complaints,-and-deliveries"&gt;Setup Amazon SES to send detailed notifications about your bounces, complaints, and deliveries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Create-the-SNS-to-send-message-to-lambda-function"&gt;Create the SNS to send message to lambda function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Create-lambda-function-which-store-SES-notification-to-Dynamodb"&gt;Create lambda function which store SES notification to Dynamodb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Query-Bounce-Email-By-Using-AWS-CLI"&gt;Query Bounce Email By Using AWS CLI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#setup-amazon-ses-to-send-detailed-notifications-about-your-bounces-complaints-and-deliveries" class="anchor"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Setup Amazon SES to send detailed notifications about your bounces, complaints, and deliveries&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--45-E9iV1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/ses-mail-tracking/blob/master/enable_ses_sns.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--45-E9iV1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/ses-mail-tracking/blob/master/enable_ses_sns.png%3Fraw%3Dtrue" alt="Alt-Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-the-sns-to-send-message-to-lambda-function" class="anchor"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Create the SNS to send message to lambda function&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I9GaClHp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/ses-mail-tracking/blob/master/sns_to_lambda.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I9GaClHp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/ses-mail-tracking/blob/master/sns_to_lambda.png%3Fraw%3Dtrue" alt="Alt-Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-lambda-function-which-store-ses-notification-to-dynamodb" class="anchor"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Create lambda function which store SES notification to Dynamodb&lt;/strong&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;'use strict';
console.log('Loading function');

let doc = require('dynamodb-doc');
let dynamo = new doc.DynamoDB();
let tableName = 'ses-mailing';

exports.handler = (event, context, callback) =&amp;gt; {
    //console.log('Received event:', JSON.stringify(event, null, 2));
    const message = JSON.parse(event.Records[0].Sns.Message);

    var eventType = message.eventType;
    if (eventType == undefined) {
        eventType = message.notificationType;
    }
    switch(eventType) {
        case "Bounce":
            handleBounce(message);
            break;
        case "Complaint":
            handleComplaint(message);
            break;
        case "Send":
            handleDelivery(message);
            break;
        case "Delivery":
            handleDelivery(message);
            break;

        case "Open":
            handleOpen(message);
            break;

        default:
            callback("Unknown notification type: " + message.notificationType);
    }
};

function handleBounce(message) {
    const messageId = message.mail.messageId;
    const addresses = message.bounce.bouncedRecipients.map(function(recipient){
        return recipient.emailAddress;
    });
    const bounceType = message.bounce.bounceType;

    console.log("Message " + messageId + " bounced when sending to " + addresses.join(", ") + ". Bounce type: " + bounceType);

    for (var i=0; i&amp;lt;addresses.length; i++){
        writeDDB(addresses[i], message, tableName, "disable");
    }
}

function handleComplaint(message) {
    const messageId = message.mail.messageId;
    const addresses = message.complaint.complainedRecipients.map(function(recipient){
        return recipient.emailAddress;
    });

    console.log("A complaint was reported by " + addresses.join(", ") + " for message " + messageId + ".");

    for (var i=0; i&amp;lt;addresses.length; i++){
        writeDDB(addresses[i], message, tableName, "disable");
    }
}

function handleDelivery(message) {
    const messageId = message.mail.messageId;
    const deliveryTimestamp = message.mail.timestamp;
    const addresses = message.mail.destination;
    console.log("Message " + messageId + " was delivered successfully at " + deliveryTimestamp + ".");

    for (var i=0; i&amp;lt;addresses.length; i++){
        writeDDB(addresses[i], message, tableName, "enable");
    }
}
function handleOpen(message) {
    const messageId = message.mail.messageId;
    const deliveryTimestamp = message.open.timestamp;
    const addresses = message.mail.destination;
    console.log("Message " + messageId + " was opened at " + deliveryTimestamp + ".");

    for (var i=0; i&amp;lt;addresses.length; i++){
        writeDDB(addresses[i], message, tableName, "enable");
    }
}

function writeDDB(id, payload, tableName, status) {
    const tags = payload.mail.tags;
    var configuration_set = null;
    var source_ip = null;
    var from_domain = null;
    var tenant = null;

    if (tags != undefined ) {
        console.log('Received tags:', JSON.stringify(tags, null, 2));
        if ('ses:configuration-set' in tags) {
            configuration_set = tags['ses:configuration-set'].join(',');
        }
        if ('ses:source-ip' in tags) {
            source_ip = tags['ses:source-ip'].join(',');
        }
        if ('ses:from-domain' in tags) {
            from_domain = tags['ses:from-domain'].join(',');
        }
        if ('tenant' in tags) {
            tenant = tags['tenant'].join(',');
        }

    }

    var eventType = payload.eventType;
    if (eventType == undefined) {
        eventType = payload.notificationType;
    }

    const item = {
            UserId: id,
            eventType: eventType,
            from: payload.mail.source,
            messageId: payload.mail.messageId,
            timestamp: payload.mail.timestamp,
            state: status,
            configuration_set: configuration_set,
            source_ip: source_ip,
            from_domain: from_domain,
            tenant: tenant
        };
    const params = {
            TableName:tableName,
            Item: item
        };
    dynamo.putItem(params,function(err,data){
            if (err) console.log(err);
            else console.log(data);
    });
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;DDB Result - Partition key| Sort key | Global secondary indexes&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p5wU5Smo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/ses-mail-tracking/blob/master/example_ddb.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p5wU5Smo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/ses-mail-tracking/blob/master/example_ddb.png%3Fraw%3Dtrue" alt="Alt-text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XkV2bDuJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/ses-mail-tracking/blob/master/ddb_index.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XkV2bDuJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/ses-mail-tracking/blob/master/ddb_index.png%3Fraw%3Dtrue" alt="Alt-text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#query-bounce-email-by-using-aws-cli" class="anchor"&gt;
  &lt;/a&gt;
  Query Bounce Email By Using AWS CLI
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. Use dynamodb query&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;aws --region=us-east-1 dynamodb query --select ALL_ATTRIBUTES --table-name ses-mailing --index-name eventType-timestamp-index --key-condition-expression "eventType = :e and #timestamp &amp;gt;= :t" --expression-attribute-names '{ "#timestamp": "timestamp"}' --expression-attribute-values  '{":e":{"S":"Bounce"}, ":t": {"S": "2021-04-04"}}' &amp;gt; mail-bounce.json
cat mail-bounce.json | jq  -r '.Items[] | [.from.S, .UserId.S, .timestamp.S] | @csv ' &amp;gt; mail-bounce.csv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Use dynamodb execute-statement&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;aws dynamodb execute-statement --statement "SELECT * FROM \"ses-mailing\".\"eventType-timestamp-index\" WHERE \"eventType\" = 'Bounce' AND \"timestamp\" &amp;gt;= '2021-04-05'" --region us-east-1 &amp;gt; ses.json
cat ses.json | jq -r '.Items[] | [([.UserId.S, .from.S, .timestamp.S] | join(","))] | @csv' | sort -r &amp;gt; bounce.list
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#refs" class="anchor"&gt;
  &lt;/a&gt;
  Refs
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Sending email using the Amazon SES SMTP Interface with adding &lt;code&gt;CONFIGURATION_SET&lt;/code&gt;
&lt;a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/examples-send-using-smtp.html"&gt;https://docs.aws.amazon.com/ses/latest/DeveloperGuide/examples-send-using-smtp.html&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="https://dev.to/vumdao"&gt;🌠 Blog&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://github.com/vumdao/"&gt;Github&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://vumdao.hashnode.dev/"&gt;Web&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://www.linkedin.com/in/vu-dao-9280ab43/"&gt;Linkedin&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://www.linkedin.com/groups/12488649/"&gt;Group&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://www.facebook.com/CloudOpz-104917804863956"&gt;Page&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://twitter.com/VuDao81124667"&gt;Twitter 🌠&lt;/a&gt;
&lt;/h3&gt;

</description>
      <category>aws</category>
      <category>devops</category>
      <category>cloudopz</category>
      <category>ses</category>
    </item>
    <item>
      <title>TOP 10 ANDROID GAMES UNDER 5MB 🔥
</title>
      <author>SaiAnsulsBlog</author>
      <pubDate>Wed, 07 Apr 2021 12:46:23 +0000</pubDate>
      <link>https://dev.to/saiansulsblog/top-10-android-games-under-5mb-cma</link>
      <guid>https://dev.to/saiansulsblog/top-10-android-games-under-5mb-cma</guid>
      <description>&lt;p&gt;Hey Guys,&lt;br&gt;
Welcome back to a new post of &lt;strong&gt;SAI ANSUL'S BLOG&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this blog after a long research I have got for you best games🎮 under 5mb which won't affect your phone's storage.&lt;/p&gt;

&lt;p&gt;These games are self-tested and selected under various criteria mentioned below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; Under 5mb &lt;/li&gt;
&lt;li&gt; Offline&lt;/li&gt;
&lt;li&gt; Genre: Adventure, Classic &amp;amp; Educational &lt;/li&gt;
&lt;li&gt; Around 4⭐ Rating on Playstore&lt;/li&gt;
&lt;li&gt; Friendly for all users&lt;/li&gt;
&lt;li&gt; Free for all
I have also shared the link of each game. Click on the title and directly download it from Google Play store.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So let's start,&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#category-1-educational" class="anchor"&gt;
  &lt;/a&gt;
  Category 1: Educational
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#a-brainilis" class="anchor"&gt;
  &lt;/a&gt;
  a.  &lt;a href="https://play.google.com/store/apps/details?id=ch.appilis.brain.android"&gt;Brainilis&lt;/a&gt; 🧠
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WIIbLW52--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612686387895/h-C6WfEbK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WIIbLW52--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612686387895/h-C6WfEbK.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This game comes with rating of 4.1⭐, developed by &lt;strong&gt;appilis LLC&lt;/strong&gt;. It constitutes a great variety of games with 4 categories inside it. This app contains more than 30 embedded games like Math, Logic, Memory, etc. in just 5 mb. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#b-onetouchdraw" class="anchor"&gt;
  &lt;/a&gt;
  b. &lt;a href="https://play.google.com/store/apps/details?id=com.alcamasoft.onetouchdraw"&gt;OneTouchDraw&lt;/a&gt; ✏️
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HmAwP3ie--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612686516930/5CVPxBM27.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HmAwP3ie--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612686516930/5CVPxBM27.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This one comes with rating of 4.3⭐, developed by &lt;strong&gt;AlcamSoft&lt;/strong&gt;. In this game, there are figures you need to connect via a laser light without lifting your fingers. This game has 150 levels ranging from easy to difficult. This is one of the best in the category.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#c-brain-games" class="anchor"&gt;
  &lt;/a&gt;
  c.  &lt;a href="https://play.google.com/store/apps/details?id=com.pescapps.BrainGames"&gt;Brain Games&lt;/a&gt; 🧠
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tAP2Dy9A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612686553710/dXSdl-43I.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tAP2Dy9A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612686553710/dXSdl-43I.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game also comes with rating of 4.1⭐, developed by pescAPPs. In this application, you can find 12 games with the difficulty level for three age groups. The games are word search, reach the end puzzle, image collage puzzle, under which glass is the ball, and many more. Do check it out!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#d-kids-quiz-gk" class="anchor"&gt;
  &lt;/a&gt;
  d.  &lt;a href="https://play.google.com/store/apps/details?id=kids.gk.quiz.kidsquizgknew"&gt;Kids Quiz GK&lt;/a&gt;  💭
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G_GxR0Nl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612686599154/BfiFR6pQx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G_GxR0Nl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612686599154/BfiFR6pQx.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game has a rating of 3.9⭐, developed by &lt;strong&gt;Quizes India Games&lt;/strong&gt;. In this application, you can answer many types of General Knowledge questions with 4 options for each questions in Hindi and English. In this game, there are 15 levels. Each correct answer gives you 50 points with 3 helps which is known as &lt;strong&gt;50:50&lt;/strong&gt;, which when used 2 wrong options are eliminated and lets you choose from the remaining. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#e-spelling-master" class="anchor"&gt;
  &lt;/a&gt;
  e.  &lt;a href="https://play.google.com/store/apps/details?id=com.ackaddeveloper.spellingbee"&gt;Spelling Master&lt;/a&gt;  👨‍🎓
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5mHvVFwe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612686647703/Ld6ej0Dz8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5mHvVFwe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612686647703/Ld6ej0Dz8.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with a rating of 4.2⭐, developed by &lt;strong&gt;ACKAD&lt;/strong&gt;. This game helps you to improve your spellings in which it shows the image of the spelling which you need to type and it pronounces the word for you. It also has a wide range to select from, which type of word you need to spell like alphabets, words, body parts , transport and many more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#category-2-classic-amp-adventure" class="anchor"&gt;
  &lt;/a&gt;
  Category 2: Classic &amp;amp; Adventure
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#a-carrom-3d" class="anchor"&gt;
  &lt;/a&gt;
  a.  &lt;a href="https://play.google.com/store/apps/details?id=com.zagmoid.carrom3d"&gt;Carrom 3D&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X7BxlefB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612686698778/FCkygDvck.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X7BxlefB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612686698778/FCkygDvck.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with the rating of 3.9 ⭐, developed by &lt;strong&gt;Zagmoid&lt;/strong&gt;. This game makes you feel that you're playing the game in real. You can have fun anytime, anywhere with just a click. You can enjoy this game offline competing with the computer or with your friends online. You can try all the types of shots on this app just like you use to do on the carrom board.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#b-jungle-castle-run" class="anchor"&gt;
  &lt;/a&gt;
  b.  &lt;a href="https://play.google.com/store/apps/details?id=com.junglecastleboy.apt"&gt;Jungle Castle Run&lt;/a&gt; 🏃🏻‍♂️
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dCF8qPVA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612686748998/wqG4z9b2m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dCF8qPVA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612686748998/wqG4z9b2m.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with  a rating of 3.9 ⭐, developed by &lt;strong&gt;Simplified Apps&lt;/strong&gt;, In this game, there is a guy like Tarzan who runs in the jungle and you have to help him escape from all the dangers kept for him. There are more then 100 levels in this game. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#c-stickman-and-gun-3-zombie-shooter" class="anchor"&gt;
  &lt;/a&gt;
  c.  &lt;a href="https://play.google.com/store/apps/details?id=fighting.stickmanandgun.zombieshooter"&gt;Stickman and Gun 3: Zombie Shooter&lt;/a&gt; 🧟🔫
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1DChrGqK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612686790455/IazXxpd_M.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1DChrGqK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612686790455/IazXxpd_M.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with a rating of 4.3⭐,devloped by &lt;strong&gt;1MB Games&lt;/strong&gt;. In this game, there is a stick man warrior who carries guns and you need to kill the zombies coming from both sides. As you kill a zombie you get some game money. You can use the money to purchase new guns, refill your bullets, buy medical kit or get skins. You need to go to different levels while killing and as well as moving. Till now in the game there are 8 guns where you can equip 3 guns at a time. Keep filling the health to keep your warrior unbeatable.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#d-ludo-winner" class="anchor"&gt;
  &lt;/a&gt;
  d.  &lt;a href="https://play.google.com/store/apps/details?id=com.naim.ludowinner"&gt;Ludo winner&lt;/a&gt; 🎲🥇
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Ly2RhJ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612686817314/SiqRDSluQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Ly2RhJ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612686817314/SiqRDSluQ.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with  a rating of 4.2 ⭐, developed by *&lt;em&gt;Amader Media *&lt;/em&gt;. This app is a 5 in 1 games app which has ludo, snake &amp;amp; ladder, bead 16, Tic Tac Toe &amp;amp; puzzle. These games are well known to all of us. Do give this app a try.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#e-all-black" class="anchor"&gt;
  &lt;/a&gt;
  e.  &lt;a href="https://play.google.com/store/apps/details?id=com.puransoftware.allblack"&gt;All Black&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wmGqroGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612687538877/T5pZGzueq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wmGqroGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1612687538877/T5pZGzueq.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with a rating of 4.5⭐, developed by *&lt;em&gt;Puran Software *&lt;/em&gt;. This app has 10 games which are performed by the stick man in the game. The games which this app introduces are: Cricket🏏,Football⚽, Basketball🏀, Badminton🏸, Archery🏹 , Stone Throw, Bomber, Boxer 🥊and Runner🏃&lt;/p&gt;

&lt;p&gt;This was it for today guys. Do comment which game you liked the most.&lt;/p&gt;

&lt;p&gt;Stay tuned for some more interesting blogs coming up soon.&lt;/p&gt;

&lt;p&gt;If you like my content and want to support my efforts please like👍🏻, share📲 &amp;amp; subscribe to the newsletter to be get notified whenever I post a new blog.&lt;/p&gt;

</description>
      <category>android</category>
      <category>games</category>
    </item>
    <item>
      <title>NFT Marketing Services enable the support of millions of crypto investors for your crypto collectibles</title>
      <author>Robert john</author>
      <pubDate>Wed, 07 Apr 2021 12:44:37 +0000</pubDate>
      <link>https://dev.to/roert1598/nft-marketing-services-enable-the-support-of-millions-of-crypto-investors-for-your-crypto-collectibles-1knj</link>
      <guid>https://dev.to/roert1598/nft-marketing-services-enable-the-support-of-millions-of-crypto-investors-for-your-crypto-collectibles-1knj</guid>
      <description>&lt;p&gt;Every investor will be aware of Non-Fungible Tokens (NFTs) after it had made a storm in the cryptocurrency market recently. NFT marketplaces such as NBA Top Shot, OpenSea, and Rarible are the hub for large-scale trading of NFTs and quick execution of crypto transactions. &lt;/p&gt;

&lt;p&gt;Entrepreneurs looking to capitalize on this growing trend can take a strong position in the industry by joining hands with an experienced Crypto marketing company.  They will have a knowledgeable team of social media managers, community managers, content writers, content editors, and copywriters. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;The various NFT marketing services offered are&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Listing NFTs&lt;/b&gt; - The NFTs will be listed on the leading NFT marketplaces and cryptocurrency exchanges for sale to prospective crypto investors.&lt;br&gt;
&lt;b&gt;Top-notch market-making&lt;/b&gt; - The liquidity of the NFT is enhanced making it highly sellable for attracting a huge inflow of investments.&lt;br&gt;
&lt;b&gt;Social media engagement&lt;/b&gt; - A positive buzz for the Non-Fungible tokens is ensured by promoting its benefits actively on well-known social media platforms like Facebook, Instagram, and Twitter.&lt;br&gt;
&lt;b&gt;Online forum management&lt;/b&gt; - Active discussions about your NFT will be initiated on the popular cryptocurrency forums like Bitcointalk, CryptoTalk, and Altcoins Talks. This lifts the credibility of your crypto collectible.&lt;br&gt;
&lt;b&gt;Influencer marketing&lt;/b&gt; - Popular influencers with a large number of followers ensure maximum business traction for your NFT by showcasing its positives. Influencer marketing is done aggressively on platforms like LinkedIn and YouTube. &lt;br&gt;
&lt;b&gt;Email marketing&lt;/b&gt; - Crisp and engaging newsletters are shared with interested NFT investors as part of email marketing. Targeted marketing campaigns are conducted through Mailchimp.&lt;br&gt;
&lt;b&gt;Search Engine Optimization (SEO)&lt;/b&gt; - The NFT will be displayed at the top of Google and Bing search engine results when investors lookout for your digital collectibles.&lt;br&gt;
&lt;b&gt;Publishing paid advertisements&lt;/b&gt; - Paid ads are based on the Pay-Per-Click (PPC) model. Your NFT gets huge support from investors leading to greater demand for buying it. The brand value of the crypto collectibles is also boosted. Keyword targeting is done via Google Ads.&lt;br&gt;
&lt;b&gt;Maintaining friendly public relations&lt;/b&gt; - Public relations (PR) is taken care of by sharing press releases with famous industry sites like CoinDesk, Cointelegraph, Decrypt, and Yahoo Finance.&lt;br&gt;
&lt;b&gt;Telegram promotion&lt;/b&gt;- The prospective NFT investors are shared real-time alerts about sales, price changes, and special offers through the instant messaging Telegram app. Groups and channels will be created for publishing announcements frequently. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Final Thoughts&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;A &lt;b&gt;&lt;a href="https://www.appdupe.com/nft-marketing-services"&gt;Crypto marketing company&lt;/a&gt;&lt;/b&gt; will efficiently pull in a large target audience for your NFT. Customized NFT marketing services are provided to achieve the desired results successfully. The performance of NFT marketing campaigns can be tracked regularly. It contributes to a greater return on investment and an increase in the number of leads. &lt;/p&gt;

</description>
      <category>nftmarketingagency</category>
      <category>nftmarketing</category>
      <category>nftmarketingcompany</category>
    </item>
    <item>
      <title>Cypress Installation &amp; Setup</title>
      <author>Automation Bro</author>
      <pubDate>Wed, 07 Apr 2021 12:37:55 +0000</pubDate>
      <link>https://dev.to/automationbro/cypress-installation-setup-3749</link>
      <guid>https://dev.to/automationbro/cypress-installation-setup-3749</guid>
      <description>&lt;p&gt;In this Cypress testing tutorial, we will be doing the setup and installation on our local machine to get Cypress up and running. &lt;br&gt;
One of the great things about Cypress is that using just one command you can get all the necessary packages installed to start writing your first test using Cypress. Let’s take a look at that –&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#installation" class="anchor"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;To install Cypress locally, you need to run through the following steps –&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Create a new npm project:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;mkdir your_project_name &amp;amp;&amp;amp; cd your_project_name&lt;/code&gt;&lt;br&gt;
&lt;code&gt;npm init -y to initialize your project&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Install Cypress:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;npm install cypress --save-dev&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will download and unzip the Cypress desktop client and install all the necessary packages for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fs_qyry4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automationbro.com/wp-content/uploads/2021/04/Screen-Shot-2021-04-05-at-4.11.27-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fs_qyry4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automationbro.com/wp-content/uploads/2021/04/Screen-Shot-2021-04-05-at-4.11.27-AM.png" alt="Opening Cypress Desktop App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once Cypress is installed, you can open the Cypress desktop app by running the following command –&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npx cypress open&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will open up the Cypress app for you and list all the initial pre-built tests –&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#run-tests-in-cypress-test-runner" class="anchor"&gt;
  &lt;/a&gt;
  Run tests in Cypress Test Runner
&lt;/h3&gt;

&lt;p&gt;Click on any of the pre-built example tests and it will launch up the Cypress Test Runner and start running all the tests –&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NaP0BgMu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://automationbro.com/wp-content/uploads/2021/04/cypress_runner.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NaP0BgMu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://automationbro.com/wp-content/uploads/2021/04/cypress_runner.gif" alt="Cypress Test Runner"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#cypress-folder-structure" class="anchor"&gt;
  &lt;/a&gt;
  Cypress Folder Structure
&lt;/h3&gt;

&lt;p&gt;When you install Cypress, it will setup the folder structure for you automatically –&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Fixtures&lt;/strong&gt;: used to store all the external static data for your tests i.e. JSON data files, images, etc…&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Integration&lt;/strong&gt;: this is where all your test files are stored&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Plugins&lt;/strong&gt;: You can extend Cypress functionalities by taking advantage of Cypress built as well as community-built plugins&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Support&lt;/strong&gt;: In the support folder, you can store custom commands which can be utilized by your tests&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Cypress.json&lt;/strong&gt;: this is the default configuration file where you can store information such as baseUrl, env, port, etc…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0JYEVA_v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automationbro.com/wp-content/uploads/2021/04/Screen-Shot-2021-04-05-at-4.20.38-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0JYEVA_v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://automationbro.com/wp-content/uploads/2021/04/Screen-Shot-2021-04-05-at-4.20.38-AM.png" alt="Folder Structure"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h4&gt;
  &lt;a href="#check-out-the-video-below-to-see-how-to-setup-amp-install-cypress-in-your-local-machine-" class="anchor"&gt;
  &lt;/a&gt;
  Check out the video below to see how to Setup &amp;amp; Install Cypress in your local machine –
&lt;/h4&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/YZTrD9CSuuc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;📧 Subscribe to my &lt;a href="https://automationbro.com/mailing-list"&gt;mailing list&lt;/a&gt; to get access to more content like this &lt;/p&gt;

&lt;p&gt;👍 Follow &lt;a href="https://twitter.com/automationbro"&gt;automationbro&lt;/a&gt; on Twitter for the latest updates&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;I love coffees! And, if this post helped you out and you would like to support my work, you can do that by clicking on the button below and buying me a cup of coffee -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/automationbro"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lUHFj71T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4aw2ub3f4qkyjk0ivwt4.png" alt="Buy me a coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also support me by liking and sharing this content.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>testing</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Daily UI :: 001 - Sign Up Page</title>
      <author>Matthew Marquise</author>
      <pubDate>Wed, 07 Apr 2021 12:34:48 +0000</pubDate>
      <link>https://dev.to/mattmarquise/daily-ui-001-sign-up-page-53fh</link>
      <guid>https://dev.to/mattmarquise/daily-ui-001-sign-up-page-53fh</guid>
      <description>&lt;p&gt;I completed the first of Daily UI's 100 day design challenge. Here's what I did, how I did it, my thoughts from the first day, and I already strongly recommend doing it!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-challenge" class="anchor"&gt;
  &lt;/a&gt;
  The challenge:
&lt;/h1&gt;

&lt;p&gt;Design A Sign Up Page.&lt;/p&gt;

&lt;p&gt;I began by doing a little research on the internet to gain inspiration. After a few minutes of doing so, I had a couple ideas. For this first day I decided to do two different 'takes' on a sign up page. The first being a modern, minimalistic sign up page for a mobile app. The second also being a modern and minimalistic sign up form but for a website. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#take-1" class="anchor"&gt;
  &lt;/a&gt;
  Take 1:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ik0ElH4o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pn9o4thp8uiydds1c37b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ik0ElH4o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pn9o4thp8uiydds1c37b.png" alt="Daily UI :: 001 Take 1"&gt;&lt;/a&gt;&lt;a href="https://www.behance.net/gallery/116951867/Daily-UI-001-Sign-Up-Page-Take-1"&gt;Daily UI ::001 - Sign Up Page; Take 1 - Bēhance&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dribbble.com/shots/15431498-Daily-UI-001-Sign-Up-Page-Take-1"&gt;Daily UI ::001 - Sign Up Page; Take 1 - Dribble&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For this first take I wanted to give designing a sign up form for a mobile app a shot. I'm pretty satisfied with it currently, though there is room for improvement so I'll definitely return to this first take and update it a bit later on. &lt;/p&gt;

&lt;p&gt;The first of the two pages, the "Intro Screen" is the welcome/introduction to the app. The page is very basic in the sense that besides the welcome text, it only features a "Create Account" button. &lt;/p&gt;

&lt;p&gt;Moving to the "Sign Up Form" page, the page viewed after pushing the Create Account button, it features the actual form where users can choose to create an account with the app, or create one using their Apple or Google account. Once they've filled out their information using any of the sign up options, pushing the sign up button will transport the user straight into the app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#take-2" class="anchor"&gt;
  &lt;/a&gt;
  Take 2:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R_FiMzGT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rc79ztap1cfsucbrrp4m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R_FiMzGT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rc79ztap1cfsucbrrp4m.png" alt="Daily UI :: 001 Take 2"&gt;&lt;/a&gt;&lt;a href="https://www.behance.net/gallery/116957689/Daily-UI-001-Sign-Up-Page-Take-2"&gt;Daily UI ::001 - Sign Up Page; Take 1 - Bēhance&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dribbble.com/shots/15431516-Daily-UI-001-Sign-Up-Page-Take-2"&gt;Daily UI ::001 - Sign Up Page; Take 1 - Dribble&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the second take I decided to go with a sign up page for a desktop website. I began with a simple split screen design I've seen countless times on various, popular websites. This sign up form doesn't feature a sign up with apple or google button because I thought it would be more fitting just to have the user create an account directly. It's followed by two check boxes for auto sign up to newsletter, and a select box for accepting terms and conditions. &lt;/p&gt;

&lt;p&gt;As for the color and concept of developers who love salads, it's very random and wasn't my original intention but I thought why not add a bit of humor to liven up the project!&lt;/p&gt;

&lt;p&gt;As always, thanks for reading, and consider following me on Dribbble and or Bēhance to stay up to date on each project I complete!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-next-project-credit-card-checkout-page" class="anchor"&gt;
  &lt;/a&gt;
  The Next Project: Credit Card Checkout Page.
&lt;/h2&gt;

</description>
      <category>ux</category>
      <category>ui</category>
      <category>design</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Popup Share Modal UI Design using HTML CSS &amp; JavaScript</title>
      <author>CodingNepal</author>
      <pubDate>Wed, 07 Apr 2021 12:29:22 +0000</pubDate>
      <link>https://dev.to/codingnepal/popup-share-modal-ui-design-using-html-css-javascript-397j</link>
      <guid>https://dev.to/codingnepal/popup-share-modal-ui-design-using-html-css-javascript-397j</guid>
      <description>&lt;p&gt;Hey friends, today in this blog you'll learn how to create a Popup Share Modal UI Design using HTML CSS &amp;amp; JavaScript. In the previous blog, I have shared &lt;a href="https://www.codingnepalweb.com/2021/04/poll-ui-design-using-html-css-javascript.html"&gt;how to create a Poll UI Design in HTML CSS &amp;amp; JavaScript&lt;/a&gt; and now it's time to create Share Modal. If you're looking for some other type of modals then &lt;a href="https://www.codingnepalweb.com/search/label/Modal%20Dialog%20Box"&gt;click here to view them all.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this project [Popup Share Modal UI Design], at first, on the webpage, there is a view modal button, when you click on that button then the modal box appears with a popup animation. In this share modal box, there are some social media icons with pretty cool hover animation and an input box to copy the link. There is also a close icon to the right top corner to hide this modal box. To show or hide the Modal Box and copy the given link, I used JavaScript.&lt;/p&gt;

&lt;p&gt;You can copy the codes from the given boxes or download the code files from the given link but I recommend you download the source code files instead of copying codes. &lt;a href="https://www.codingnepalweb.com/2021/04/popup-share-modal-ui-design.html"&gt;Click here to download code files.&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#you-might-like-this" class="anchor"&gt;
  &lt;/a&gt;
  You might like this:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.codingnepalweb.com/2020/05/popup-subscription-form-using-html-css.html"&gt;Email Subscription Popup Box&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.codingnepalweb.com/2021/03/cookie-consent-box-in-javascript.html"&gt;Cookie Consent Box in JavaScript&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.codingnepalweb.com/2021/03/limit-input-characters-using-javascript.html"&gt;Limit Input Characters in JavaScript&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.codingnepalweb.com/2021/04/poll-ui-design-using-html-css-javascript.html"&gt;Minimal Poll UI Design in HTML &amp;amp; CSS&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#html-code" class="anchor"&gt;
  &lt;/a&gt;
  HTML CODE:
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;!-- Created By CodingNepal - www.codingnepalweb.com --&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset="UTF-8"&amp;gt;
  &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
  &amp;lt;title&amp;gt;Popup Share Modal | CodingNepal&amp;lt;/title&amp;gt;
  &amp;lt;link rel="stylesheet" href="style.css"&amp;gt;
  &amp;lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"/&amp;gt;
  &amp;lt;link rel="stylesheet" href="https://unicons.iconscout.com/release/v3.0.6/css/line.css"&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;button class="view-modal"&amp;gt;View Modal&amp;lt;/button&amp;gt;
  &amp;lt;div class="popup"&amp;gt;
    &amp;lt;header&amp;gt;
      &amp;lt;span&amp;gt;Share Modal&amp;lt;/span&amp;gt;
      &amp;lt;div class="close"&amp;gt;&amp;lt;i class="uil uil-times"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;/header&amp;gt;
    &amp;lt;div class="content"&amp;gt;
      &amp;lt;p&amp;gt;Share this link via&amp;lt;/p&amp;gt;
      &amp;lt;ul class="icons"&amp;gt;
        &amp;lt;a href="#"&amp;gt;&amp;lt;i class="fab fa-facebook-f"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;
        &amp;lt;a href="#"&amp;gt;&amp;lt;i class="fab fa-twitter"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;
        &amp;lt;a href="#"&amp;gt;&amp;lt;i class="fab fa-instagram"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;
        &amp;lt;a href="#"&amp;gt;&amp;lt;i class="fab fa-whatsapp"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;
        &amp;lt;a href="#"&amp;gt;&amp;lt;i class="fab fa-telegram-plane"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;
      &amp;lt;/ul&amp;gt;
      &amp;lt;p&amp;gt;Or copy link&amp;lt;/p&amp;gt;
      &amp;lt;div class="field"&amp;gt;
        &amp;lt;i class="url-icon uil uil-link"&amp;gt;&amp;lt;/i&amp;gt;
        &amp;lt;input type="text" readonly value="example.com/share-link"&amp;gt;
        &amp;lt;button&amp;gt;Copy&amp;lt;/button&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;

  &amp;lt;script&amp;gt;
    const viewBtn = document.querySelector(".view-modal"),
    popup = document.querySelector(".popup"),
    close = popup.querySelector(".close"),
    field = popup.querySelector(".field"),
    input = field.querySelector("input"),
    copy = field.querySelector("button");

    viewBtn.onclick = ()=&amp;gt;{
      popup.classList.toggle("show");
    }
    close.onclick = ()=&amp;gt;{
      viewBtn.click();
    }

    copy.onclick = ()=&amp;gt;{
      input.select(); //select input value
      if(document.execCommand("copy")){ //if the selected text copy
        field.classList.add("active");
        copy.innerText = "Copied";
        setTimeout(()=&amp;gt;{
          window.getSelection().removeAllRanges(); //remove selection from document
          field.classList.remove("active");
          copy.innerText = "Copy";
        }, 3000);
      }
    }
  &amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#css-code" class="anchor"&gt;
  &lt;/a&gt;
  CSS CODE:
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&amp;amp;display=swap');
*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Poppins', sans-serif;
}
body{
  /* background: #f2f3fb; */
  background: #7d2ae8;
}
::selection{
  color: #fff;
  background: #7d2ae8;
}
.view-modal, .popup{
  position: absolute;
  left: 50%;
}
button{
  outline: none;
  cursor: pointer;
  font-weight: 500;
  border-radius: 4px;
  border: 2px solid transparent;
  transition: background 0.1s linear, border-color 0.1s linear, color 0.1s linear;
}
.view-modal{
  top: 50%;
  color: #7d2ae8;
  font-size: 18px;
  padding: 10px 25px;
  background: #fff;
  transform: translate(-50%, -50%);
}
.popup{
  background: #fff;
  padding: 25px;
  border-radius: 15px;
  top: -150%;
  max-width: 380px;
  width: 100%;
  opacity: 0;
  pointer-events: none;
  box-shadow: 0px 10px 15px rgba(0,0,0,0.1);
  transform: translate(-50%, -50%) scale(1.2);
  transition: top 0s 0.2s ease-in-out,
              opacity 0.2s 0s ease-in-out,
              transform 0.2s 0s ease-in-out;
}
.popup.show{
  top: 50%;
  opacity: 1;
  pointer-events: auto;
  transform:translate(-50%, -50%) scale(1);
  transition: top 0s 0s ease-in-out,
              opacity 0.2s 0s ease-in-out,
              transform 0.2s 0s ease-in-out;

}
.popup :is(header, .icons, .field){
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.popup header{
  padding-bottom: 15px;
  border-bottom: 1px solid #ebedf9;
}
header span{
  font-size: 21px;
  font-weight: 600;
}
header .close, .icons a{
  display: flex;
  align-items: center;
  border-radius: 50%;
  justify-content: center;
  transition: all 0.3s ease-in-out;
}
header .close{
  color: #878787;
  font-size: 17px;
  background: #f2f3fb;
  height: 33px;
  width: 33px;
  cursor: pointer;
}
header .close:hover{
  background: #ebedf9;
}
.popup .content{
  margin: 20px 0;
}
.popup .icons{
  margin: 15px 0 20px 0;
}
.content p{
  font-size: 16px;
}
.content .icons a{
  height: 50px;
  width: 50px;
  font-size: 20px;
  text-decoration: none;
  border: 1px solid transparent;
}
.icons a i{
  transition: transform 0.3s ease-in-out;
}
.icons a:nth-child(1){
  color: #1877F2;
  border-color: #b7d4fb;
}
.icons a:nth-child(1):hover{
  background: #1877F2;
}
.icons a:nth-child(2){
  color: #46C1F6;
  border-color: #b6e7fc;
}
.icons a:nth-child(2):hover{
  background: #46C1F6;
}
.icons a:nth-child(3){
  color: #e1306c;
  border-color: #f5bccf;
}
.icons a:nth-child(3):hover{
  background: #e1306c;
}
.icons a:nth-child(4){
  color: #25D366;
  border-color: #bef4d2;
}
.icons a:nth-child(4):hover{
  background: #25D366;
}
.icons a:nth-child(5){
  color: #0088cc;
  border-color: #b3e6ff;
}
.icons a:nth-child(5):hover{
  background: #0088cc;
}
.icons a:hover{
  color: #fff;
  border-color: transparent;
}
.icons a:hover i{
  transform: scale(1.2);
}
.content .field{
  margin: 12px 0 -5px 0;
  height: 45px;
  border-radius: 4px;
  padding: 0 5px;
  border: 1px solid #e1e1e1;
}
.field.active{
  border-color: #7d2ae8;
}
.field i{
  width: 50px;
  font-size: 18px;
  text-align: center;
}
.field.active i{
  color: #7d2ae8;
}
.field input{
  width: 100%;
  height: 100%;
  border: none;
  outline: none;
  font-size: 15px;
}
.field button{
  color: #fff;
  padding: 5px 18px;
  background: #7d2ae8;
}
.field button:hover{
  background: #8d39fa;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Visit CodingNepal for more awesome videos | blogs&lt;br&gt;
&lt;a href="https://www.codingnepalweb.com/"&gt;https://www.codingnepalweb.com/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/codingnepal"&gt;https://www.youtube.com/codingnepal&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>sharemodal</category>
      <category>modalbox</category>
    </item>
    <item>
      <title>Clean Code with Unit Tests: Tips and tricks for keeping your test suites clean</title>
      <author>Tyler Hawkins</author>
      <pubDate>Wed, 07 Apr 2021 12:02:14 +0000</pubDate>
      <link>https://dev.to/thawkin3/clean-code-with-unit-tests-tips-and-tricks-for-keeping-your-test-suites-clean-483l</link>
      <guid>https://dev.to/thawkin3/clean-code-with-unit-tests-tips-and-tricks-for-keeping-your-test-suites-clean-483l</guid>
      <description>&lt;p&gt;Unit tests are important. They prevent regressions as you refactor code, serve as documentation, and save you hours of time not spent doing tedious manual testing. In short, tests enable change.&lt;/p&gt;

&lt;p&gt;But how much attention to cleanliness do we give our tests? We refactor our app’s production code, give descriptive names to variables, extract methods for repeatable functionality, and make our code easy to reason about. But do we do the same for our tests?&lt;/p&gt;

&lt;p&gt;Consider this quote from Robert C. Martin:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Test code is just as important as production code.&lt;/strong&gt; It is not a second-class citizen. It requires thought, design, and care. It must be kept as clean as production code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, how do we keep our test code clean? Let’s consider some ideas below.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#structuring-tests" class="anchor"&gt;
  &lt;/a&gt;
  Structuring Tests
&lt;/h2&gt;

&lt;p&gt;Tests should be structured according to the Arrange-Act-Assert pattern. This pattern goes by many names and is sometimes referred to as the Build-Operate-Check, Setup-Exercise-Verify, or Given-When-Then pattern.&lt;/p&gt;

&lt;p&gt;I prefer Arrange-Act-Assert for the alluring alliteration. Regardless of what you call it, the pattern looks like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Arrange&lt;/strong&gt;:  Set up your test fixtures, objects, or components you’ll be working with&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Act&lt;/strong&gt;: Perform some operation, perhaps by calling a function or clicking a button&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Assert&lt;/strong&gt;: Assert that the expected behavior or output occurred&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the React world, applying this pattern when testing a simple toggle button component might look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mbXXRA8D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qzg039qcc4p4t2txhxfw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mbXXRA8D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qzg039qcc4p4t2txhxfw.png" alt="Arrange-Act-Assert pattern when unit testing a toggle button component’s rendered content"&gt;&lt;/a&gt;&lt;/p&gt;
Arrange-Act-Assert pattern when unit testing a toggle button component’s rendered content



&lt;p&gt;We arrange our code and act on it all in the same line by rendering the &lt;code&gt;ToggleButton&lt;/code&gt; component. We then make assertions on the output that it renders a button to the DOM and that the button’s text is visible on the screen.&lt;/p&gt;

&lt;p&gt;A more complex example might look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cLbhGsio--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dai88tkbamjxg799zb11.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cLbhGsio--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dai88tkbamjxg799zb11.png" alt="Arrange-Act-Assert pattern when unit testing a toggle button component’s interactive behavior"&gt;&lt;/a&gt;&lt;/p&gt;
Arrange-Act-Assert pattern when unit testing a toggle button component’s interactive behavior



&lt;p&gt;Here we arrange our code by creating a stateful component that allows the toggle button to be toggled on and off. We act by rendering the component. We then assert that the button is initially toggled off. Next we act again by clicking the button and then make another assertion that the button is now toggled on. Just for good measure, we act again by clicking again, and we assert again by verifying the button is back to being toggled off.&lt;/p&gt;

&lt;p&gt;It’s important to note here that you should generally only be writing code for the Arrange phase at the beginning of each test. After that, it’s ok to cycle between iterations of Act and Assert. But if you find yourself back in the Arrange phase later on in the test, that’s probably a good sign that you’re testing a second concept and should move that to a separate test. More on this later.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#test-object-builders" class="anchor"&gt;
  &lt;/a&gt;
  Test Object Builders
&lt;/h2&gt;

&lt;p&gt;Test object builders are methods, classes, or constructor functions that allow you to created commonly needed objects. For example, you might often be working with a &lt;code&gt;User&lt;/code&gt; object that contains all sorts of data about any given user. This could include a first name, last name, email address, phone number, mailing address, job title, app permissions, and much more.&lt;/p&gt;

&lt;p&gt;Creating a new &lt;code&gt;User&lt;/code&gt; object in each of your tests could easily take several lines of code, leading to an unwieldy test file hundreds of lines long. Instead, we can keep our test code DRY by creating a helper test object builder method that returns a new &lt;code&gt;User&lt;/code&gt; object for us. Even better, we can allow the default values to be overridden for when we need to be more specific about the properties used in the object.&lt;/p&gt;

&lt;p&gt;One library I find especially helpful is the &lt;a href="https://www.npmjs.com/package/faker"&gt;faker.js&lt;/a&gt; npm package. We can use this package to generate mock data for all sorts of different fields like &lt;code&gt;firstName&lt;/code&gt;, &lt;code&gt;jobTitle&lt;/code&gt;, &lt;code&gt;phoneNumber&lt;/code&gt;, and more.&lt;/p&gt;

&lt;p&gt;Consider this example for a &lt;code&gt;User&lt;/code&gt; test object builder:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--629ZQLXu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rkxg4nryw3rjypobwrra.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--629ZQLXu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rkxg4nryw3rjypobwrra.png" alt="Creating a User test object builder with the help of faker.js"&gt;&lt;/a&gt;&lt;/p&gt;
Creating a User test object builder with the help of faker.js



&lt;p&gt;Our &lt;code&gt;buildUser&lt;/code&gt; method returns a plain object representing a user. We can then use this &lt;code&gt;buildUser&lt;/code&gt; method in our test files to create users that have random values by default, like the &lt;code&gt;user1&lt;/code&gt; user, or to create users that have specific values we specify, like the &lt;code&gt;user2&lt;/code&gt; user.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#evaluate-a-single-concept-per-test" class="anchor"&gt;
  &lt;/a&gt;
  Evaluate a Single Concept Per Test
&lt;/h2&gt;

&lt;p&gt;Each test should verify only one thing. Don’t try to test several things all in the same test. For example, a bad test for a date picker component might read something like “renders in various states” and then render eight different date pickers to illustrate the differences. A test like this is doing too much. A better test would be more specific, something like “renders the date picker when the user clicks the text input.”&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tests-should-be-fast" class="anchor"&gt;
  &lt;/a&gt;
  Tests Should Be Fast
&lt;/h2&gt;

&lt;p&gt;Slow test suites are a pain to run. Even worse, when slow test suites are optional or not enforced as part of a CI pipeline, developers tend to choose to not run these test suites. No one likes to wait.&lt;/p&gt;

&lt;p&gt;Fast test suites, on the other hand, can be run continuously while you’re writing production code. This short feedback loop enables you to develop more quickly and more confidently. Fast test suites also facilitate programming paradigms like test-driven development.&lt;/p&gt;

&lt;p&gt;In the JavaScript world, running Jest tests in &lt;code&gt;watch&lt;/code&gt; mode while you develop is a game changer.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tests-should-be-independent" class="anchor"&gt;
  &lt;/a&gt;
  Tests Should Be Independent
&lt;/h2&gt;

&lt;p&gt;Tests should be able to be run in any order. In other words, any given test should not depend on the test before it. If you’re not careful in doing proper teardown or cleanup between tests in your test files, you may end up modifying global variables in one test that then affect subsequent tests. This can lead to unexpected behavior and headaches. It’s always a fun debugging adventure when a single test passes when run in isolation but fails when run as part of the test suite.&lt;/p&gt;

&lt;p&gt;If you’re using Jest, the setup and teardown is typically done in &lt;code&gt;beforeEach&lt;/code&gt; and &lt;code&gt;afterEach&lt;/code&gt; code blocks. It’s also helpful to remember that each test file gets its own instance of &lt;code&gt;JSDOM&lt;/code&gt;, but tests within the same file share that same &lt;code&gt;JSDOM&lt;/code&gt; instance.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tests-should-be-repeatable" class="anchor"&gt;
  &lt;/a&gt;
  Tests Should Be Repeatable
&lt;/h2&gt;

&lt;p&gt;Tests should be able to be run in any environment. If the test suite passes on my machine, it should pass on your machine too. That also means it should pass in the CI pipeline. When tests are repeatable, there are no surprises where a test passes in one environment but fails in another. Flakiness like that decreases your confidence in your tests.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tests-should-be-selfvalidating" class="anchor"&gt;
  &lt;/a&gt;
  Tests Should Be Self-Validating
&lt;/h2&gt;

&lt;p&gt;Tests should return a Boolean. Either the test passes or it fails. You shouldn’t need a human to interpret the results of the test. This is one of many reasons why snapshot tests suck and should be avoided.&lt;/p&gt;

&lt;p&gt;Snapshot tests don’t tell you what the correct output should be, they just tell you that &lt;em&gt;something&lt;/em&gt; is different. It’s up to you as the developer to decide if it’s intentional that the snapshot changed or if this is an error that needs to be addressed. Oftentimes though what ends up happening is that developers blindly accept the changes to the snapshot and assume that the new snapshot is correct.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tests-should-be-written-in-a-timely-manner" class="anchor"&gt;
  &lt;/a&gt;
  Tests Should Be Written in a Timely Manner
&lt;/h2&gt;

&lt;p&gt;Tests should be written at the same time as the production code. If you’re an advocate for test-driven development, then you believe tests should be written right before the production code. If you’re not as strict, then you probably write your tests shortly after the production code. Either of those approaches is much better than writing tests months later when trying to play catch up to increase your repository’s code coverage.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#make-sure-tests-fail-when-they-should" class="anchor"&gt;
  &lt;/a&gt;
  Make Sure Tests Fail When They Should
&lt;/h2&gt;

&lt;p&gt;Have you ever come across a test that doesn’t test what it says it does? The test may be passing, but it definitely doesn’t test anything meaningful or what it states its intended purpose is. Tests like these create a false sense of confidence. Your test suite &lt;em&gt;is passing&lt;/em&gt;, after all!&lt;/p&gt;

&lt;p&gt;Consider this quote from Martin Fowler:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I like to see a test fail at least once when I write it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Those are wise words! It’s easy to verify that your test is doing its job by making a slight modification to either the test code or the production code to change the output to something intentionally incorrect. If your test fails, great! (Don’t forget to change your test back to get it passing again after doing this sanity check, of course.)&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#remember-to-test-your-edge-cases" class="anchor"&gt;
  &lt;/a&gt;
  Remember to Test Your Edge Cases
&lt;/h2&gt;

&lt;p&gt;It’s a rookie mistake to only test the happy path. In addition to making sure the normal behavior works, try to consider ways in which things could go wrong. What if someone provided invalid arguments to your function? Or perhaps unexpected data types?&lt;/p&gt;

&lt;p&gt;Consider &lt;a href="https://www.geeksforgeeks.org/dont-forget-edge-cases/"&gt;this example scenario&lt;/a&gt;: You’re writing a function that returns the type of a triangle based on the value of the length of the three sides of that triangle.&lt;/p&gt;

&lt;p&gt;We’ll call the function &lt;code&gt;triangleType&lt;/code&gt;, and it’ll have three parameters so that the function signature looks like this: &lt;code&gt;triangleType(side1, side2, side3)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;What cases would you test for a function like this?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_WYTh3oa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1fu93ribt7k4n99ov66d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_WYTh3oa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1fu93ribt7k4n99ov66d.png" alt="Pseudo-code for the triangleType function"&gt;&lt;/a&gt;&lt;/p&gt;
Pseudo-code for the triangleType function



&lt;p&gt;The immediately obvious test cases might be to check that it can correctly identify a valid equilateral triangle, isosceles triangle, and scalene triangle. Your test cases might look like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;triangleType(4, 4, 4) // Equilateral Triangle&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;triangleType(6, 7, 6) // Isosceles Triangle&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;triangleType(6, 7, 8) // Scalene Triangle&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Interestingly enough, testing those three cases would even give you 100% code coverage based on the current implementation of the function. But, these three tests alone are not enough.&lt;/p&gt;

&lt;p&gt;What if, for example, all zeros were provided to the function? That’s not a triangle; that’s a point. But the function would identify that as an equilateral triangle since all sides are equal.&lt;/p&gt;

&lt;p&gt;What if negative numbers were provided to the function? A triangle can’t have negative lengths. That doesn’t make any sense.&lt;/p&gt;

&lt;p&gt;Or what if two of the sides were much shorter than the third side? Then the sides wouldn’t connect, and we wouldn’t have a triangle.&lt;/p&gt;

&lt;p&gt;Those three additional test cases might look like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;triangleType(0, 0, 0) // Not a triangle&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;triangleType(-6, -7, -8) // Not a triangle&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;triangleType(5, 3, 100) // Not a triangle&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As you can see, it’s essential to test more than just the happy path in your code.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#test-the-things-youre-most-worried-about-going-wrong" class="anchor"&gt;
  &lt;/a&gt;
  Test the Things You’re Most Worried About Going Wrong
&lt;/h2&gt;

&lt;p&gt;I like to shoot for 100% test coverage. But, it’s important to not be dogmatic about this number. There is a law of diminishing returns, and each additional test adds less and less value. If you have 95% code coverage, it might not be worth it to get that last 5% of code coverage. Not everything is worth testing.&lt;/p&gt;

&lt;p&gt;The important thing is to test the critical parts of the application. What are the areas of your code that you’re most concerned about things going wrong? Focus on having good tests in place for that core functionality first. Then write additional tests to cover less critical paths. But as you do so, remember to focus your tests on specific behavior and product requirements, not just on getting that last hard to reach line covered.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#summary" class="anchor"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;You made it! If you need a quick refresher on everything we’ve covered in this article, here are my unit testing tips and tricks for clean code:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Structure your tests using the &lt;strong&gt;Arrange-Act-Assert&lt;/strong&gt; pattern.&lt;/li&gt;
&lt;li&gt;Use &lt;strong&gt;test object builders&lt;/strong&gt; to make test setup easy for commonly used objects.&lt;/li&gt;
&lt;li&gt;Evaluate a &lt;strong&gt;single concept&lt;/strong&gt; per test.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;F.I.R.S.T.&lt;/strong&gt; — Tests should be &lt;strong&gt;fast&lt;/strong&gt;, &lt;strong&gt;independent&lt;/strong&gt;, &lt;strong&gt;repeatable&lt;/strong&gt;, &lt;strong&gt;self-validating&lt;/strong&gt;, and &lt;strong&gt;timely&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Make sure tests fail&lt;/strong&gt; when they should.&lt;/li&gt;
&lt;li&gt;Remember your &lt;strong&gt;boundaries&lt;/strong&gt; and &lt;strong&gt;edge cases&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Test the &lt;strong&gt;things you’re most worried about&lt;/strong&gt; going wrong.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thanks for reading, and happy coding!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>beginners</category>
      <category>testing</category>
    </item>
    <item>
      <title>Top 25 🎨 Color Tools for Designers</title>
      <author>venkatesh-aj</author>
      <pubDate>Wed, 07 Apr 2021 12:01:35 +0000</pubDate>
      <link>https://dev.to/venkateshaj/top-25-color-tools-for-designers-4la1</link>
      <guid>https://dev.to/venkateshaj/top-25-color-tools-for-designers-4la1</guid>
      <description>&lt;p&gt;1) &lt;a href="https://colorsui.com"&gt;Colors UI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A collection of beautiful color palettes that can be customized as well. This website also provides Tint and Shade generators, Solid colors, Material colors, and more.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3WH27oVd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/blbzwd2gvjm9gh3domhu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3WH27oVd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/blbzwd2gvjm9gh3domhu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2) &lt;a href="https://www.culrs.com/"&gt;Culrs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Culrs gives you to pick color palettes easily&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--39HnRbLI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j5lswslxpdwvuce2gbs7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--39HnRbLI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j5lswslxpdwvuce2gbs7.png" alt="Culrs"&gt;&lt;/a&gt;&lt;br&gt;
3) &lt;a href="https://colorwise.io/"&gt;Colorwise&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The wise choice of colors. Most voted on product hunt&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qD4WkbMo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vo2m4xeseqwfbfsccoqz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qD4WkbMo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vo2m4xeseqwfbfsccoqz.png" alt="Colorwise"&gt;&lt;/a&gt;&lt;br&gt;
4) &lt;a href="https://htmlcolorcodes.com/"&gt;HTML Color Codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HTML Color Codes where you can find HTML color codes using color picker and also create color chart and much more&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P8boJnkX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v05oxwlnt4oov0azsir0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P8boJnkX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v05oxwlnt4oov0azsir0.png" alt="HTML Color Codes"&gt;&lt;/a&gt;&lt;br&gt;
5) &lt;a href="https://www.colorsandfonts.com/"&gt;Colors &amp;amp; Fonts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;C&amp;amp;F is a Curated collection of color palettes and gradient colors and font pairing.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jAxEz5DD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nq3f91wqfrwzhj4cp5md.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jAxEz5DD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nq3f91wqfrwzhj4cp5md.png" alt="Colors &amp;amp; Fonts"&gt;&lt;/a&gt;&lt;br&gt;
6) &lt;a href="http://colormind.io/"&gt;Color Mind&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Color Mind is an AI-powered color palette generator &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V8FeISbi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xv3g1w76fzz3emxzueoj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V8FeISbi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xv3g1w76fzz3emxzueoj.png" alt="Color Mind"&gt;&lt;/a&gt;&lt;br&gt;
7) &lt;a href="https://colordrop.io/"&gt;Color Drop&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Color Drop is a collection of beautiful four-color palettes. It is also provided flat colors, color code converter, and more&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kDyjRf7s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/77am9dmxsnz942q89z8o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kDyjRf7s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/77am9dmxsnz942q89z8o.png" alt="Color Drop"&gt;&lt;/a&gt;&lt;br&gt;
8) &lt;a href="https://www.schemecolor.com/"&gt;Scheme Color&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Scheme Color has a large number of color palettes where you can edit and download color palettes. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kIAFjOgY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6afpiok4slxam3bfeqvj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kIAFjOgY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6afpiok4slxam3bfeqvj.png" alt="Scheme Color"&gt;&lt;/a&gt;&lt;br&gt;
9) &lt;a href="https://colorbox.io/"&gt;Colorbox&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ColorBox is a color tool website. It provides a set of colors&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1j-Uy4l2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aveemf3ytzsaxnw8az8l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1j-Uy4l2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aveemf3ytzsaxnw8az8l.png" alt="Colorbox"&gt;&lt;/a&gt;&lt;br&gt;
10) &lt;a href="https://coolors.co/"&gt;Coolors.co&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Coolors.co is a popular tool for color palettes. Where you can edit, save and download color palettes&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4SNDsT7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bes7mxxux73y561kw5j4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4SNDsT7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bes7mxxux73y561kw5j4.png" alt="Coolors"&gt;&lt;/a&gt;&lt;br&gt;
11) &lt;a href="https://colorhunt.co/"&gt;Color Hunt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Color Hunt is an open collection of color palettes.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yVMTFY_h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jwhg7yvma82h8zjs0ee2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yVMTFY_h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jwhg7yvma82h8zjs0ee2.png" alt="Color Hunt"&gt;&lt;/a&gt;&lt;br&gt;
12) &lt;a href="https://colors.dopely.top/"&gt;Dopelycolors&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dopely Colors is a super app for anything related to colors designed for creatives like you.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VSBZXXNH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ax91xn8jffkgkou9lum2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VSBZXXNH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ax91xn8jffkgkou9lum2.png" alt="Dopelycolors"&gt;&lt;/a&gt;&lt;br&gt;
13) &lt;a href="https://mycolor.space/"&gt;ColorSpace&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Generate color palettes from one color.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YraxwPq2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6jm5ykgkynobiwhdjnp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YraxwPq2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6jm5ykgkynobiwhdjnp.png" alt="ColorSpace"&gt;&lt;/a&gt;&lt;br&gt;
14) &lt;a href="https://saruwakakun.com/en/color-ideas"&gt;Saruwakakun&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nice color schemes for websites with app preview&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zY8Fdkru--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wtfhzkw9x91c0q7geju3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zY8Fdkru--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wtfhzkw9x91c0q7geju3.png" alt="Saruwakakun"&gt;&lt;/a&gt;&lt;br&gt;
15) &lt;a href="https://image-color.com/"&gt;Image Color&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pick colors from image, color picker and Color Contrast Checker&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TGOF6thd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6sxm6xovgt8nyif4iba5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TGOF6thd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6sxm6xovgt8nyif4iba5.png" alt="Image Color"&gt;&lt;/a&gt;&lt;br&gt;
16) &lt;a href="https://farbvelo.elastiq.ch/"&gt;Farbvelo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Random color palette generator&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tFIUW1s4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fkc0bvknoe02ff5estii.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tFIUW1s4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fkc0bvknoe02ff5estii.png" alt="Farbvelo"&gt;&lt;/a&gt;&lt;br&gt;
17) &lt;a href="https://www.happyhues.co/"&gt;Happy Hues&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Curated color palettes&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8MmGrT4w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gxrn7l72x24b7dfkyjlu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8MmGrT4w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gxrn7l72x24b7dfkyjlu.png" alt="Happy Hues"&gt;&lt;/a&gt;&lt;br&gt;
18) &lt;a href="http://khroma.co/"&gt;Khroma&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Another AI color scheme tool&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xgtoobit--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tv9gfmr79lmaf04jrnxw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xgtoobit--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tv9gfmr79lmaf04jrnxw.png" alt="Khroma"&gt;&lt;/a&gt;&lt;br&gt;
19) &lt;a href="https://nipponcolors.com/"&gt;nipponcolors&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you would like to use traditional colors then we recommend Nippon Colors.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zOUFJh0Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7giyaitqbvyjgdsiumd8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zOUFJh0Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7giyaitqbvyjgdsiumd8.png" alt="nipponcolors"&gt;&lt;/a&gt;&lt;br&gt;
20) &lt;a href="https://colorsinspo.com/"&gt;Colorsinspo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copy beautiful color palettes with a single click&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q-LeQnRa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/goak37lhfghp6b2givcc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q-LeQnRa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/goak37lhfghp6b2givcc.png" alt="Colorsinspo"&gt;&lt;/a&gt;&lt;br&gt;
21) &lt;a href="https://colortopia.io/"&gt;Colortopia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Online color tool for finding beautiful color schemes.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VJlwzYx6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/usi5tqb477lhtp9uskst.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VJlwzYx6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/usi5tqb477lhtp9uskst.png" alt="Colortopia"&gt;&lt;/a&gt;&lt;br&gt;
22) &lt;a href="https://colorswall.com/"&gt;Colorswall&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Generate and save your color palettes&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CH9Qz7Zf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kbfn01lk23yoiiryf694.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CH9Qz7Zf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kbfn01lk23yoiiryf694.png" alt="Colorswall"&gt;&lt;/a&gt;&lt;br&gt;
23) &lt;a href="https://www.palettelist.com/"&gt;Palettelist&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pick 2 colors and generate more color palettes&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--laZ8vCVz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jtgufz1r1j8g2tovscs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--laZ8vCVz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jtgufz1r1j8g2tovscs.png" alt="Palettelist"&gt;&lt;/a&gt;&lt;br&gt;
24) &lt;a href="https://webgradients.com/"&gt;Webgradients&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WebGradients is a free collection of linear gradients.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L8rAVnk_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jjmtbxk4tgsuptyx44d0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L8rAVnk_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jjmtbxk4tgsuptyx44d0.png" alt="Webgradients"&gt;&lt;/a&gt;&lt;br&gt;
25) &lt;a href="https://www.grabient.com/"&gt;Grabient&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another gradient tool&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--185I5Ebn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wiy8sbew7j8jh1scxjul.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--185I5Ebn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wiy8sbew7j8jh1scxjul.png" alt="Grabient"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>frontend</category>
      <category>productivity</category>
      <category>design</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Daily Developer Jokes - Wednesday, Apr 7, 2021</title>
      <author>Daily Developer Jokes</author>
      <pubDate>Wed, 07 Apr 2021 12:00:15 +0000</pubDate>
      <link>https://dev.to/dailydeveloperjokes/daily-developer-jokes-wednesday-apr-7-2021-4a2o</link>
      <guid>https://dev.to/dailydeveloperjokes/daily-developer-jokes-wednesday-apr-7-2021-4a2o</guid>
      <description>&lt;p&gt;Generated by Daily Developer Jokes, a project by &lt;a href="https://xtrp.io/"&gt;Fred Adams&lt;/a&gt; (&lt;a href="https://dev.to/xtrp"&gt;@xtrp&lt;/a&gt; on DEV)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Read about Daily Developer Jokes on &lt;a href="https://xtrp.io/blog/2020/01/12/daily-jokes-bot-release/"&gt;this blog post&lt;/a&gt;, and check out the &lt;a href="https://dailydeveloperjokes.github.io/"&gt;Daily Developer Jokes Website&lt;/a&gt;.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#todays-joke-is" class="anchor"&gt;
  &lt;/a&gt;
  Today's Joke is...
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OfmoRRHi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e1258c00f974.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OfmoRRHi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e1258c00f974.png" alt="Joke Image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Have a joke idea for a future post? Email &lt;strong&gt;&lt;em&gt;&lt;a href="//mailto:xtrp@xtrp.io"&gt;xtrp@xtrp.io&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt; with your suggestions!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This joke comes from &lt;a href="https://github.com/wesbos/dad-jokes"&gt;Dad-Jokes GitHub Repo by Wes Bos&lt;/a&gt; (thank you!), whose owner has given me permission to use this joke with credit.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>jokes</category>
      <category>dailydeveloperjokes</category>
    </item>
    <item>
      <title>Making your KotlinJS Website Mobile-Friendly</title>
      <author>skalable-dev</author>
      <pubDate>Wed, 07 Apr 2021 11:59:06 +0000</pubDate>
      <link>https://dev.to/skalabledev/making-your-kotlinjs-website-mobile-friendly-223g</link>
      <guid>https://dev.to/skalabledev/making-your-kotlinjs-website-mobile-friendly-223g</guid>
      <description>&lt;p&gt;At sKalable we are Kotlin driven, so we are in a mission to make KotlinJS websites mainstream. We are advocates of clean code and strive for the best quality in everything we build! &lt;/p&gt;

&lt;p&gt;How many times have you visited a site that is not mobile responsive and thus renders terribly on your device? From my experience, I would say too many times! &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Let's explore how we can make our KotlinJS site responsive, so we can delight our users&lt;/em&gt; 🙂😛&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#making-your-kotlinjs-website-mobilefriendly" class="anchor"&gt;
  &lt;/a&gt;
  Making your KotlinJS Website Mobile-Friendly
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0RpENrcv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://storage.googleapis.com/skalable.appspot.com/KotlinJS%2520Mobile%2520Responsive%2520Website%2520/KotlinJS%2520Media.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0RpENrcv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://storage.googleapis.com/skalable.appspot.com/KotlinJS%2520Mobile%2520Responsive%2520Website%2520/KotlinJS%2520Media.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-mobile-responsiveness" class="anchor"&gt;
  &lt;/a&gt;
  What is mobile responsiveness?
&lt;/h3&gt;

&lt;p&gt;When a website is responsive, its layout and content automatically adapt to fit and render correctly on the device its being run on. Basically, if the screen gets smaller, then the content and layout rearranges accordingly, ensuring the visuals and functionality are not compromised.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-is-it-so-important" class="anchor"&gt;
  &lt;/a&gt;
  Why is it so important?
&lt;/h3&gt;

&lt;p&gt;Google's recommendation is to adopt a &lt;a href="https://developers.google.com/search/mobile-sites/mobile-seo/responsive-design"&gt;responsive development&lt;/a&gt; for our websites. The benefits of doing this are many:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It provides the best quality and user experience as a non-mobile friendly website is very hard to view on devices.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A good website will have better SEO, perform better in rankings and make your brand distill quality!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Users find non-mobile friendly websites frustrating and will certainly abandon your site if it is hard to navigate.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-are-we-going-to-achieve-this" class="anchor"&gt;
  &lt;/a&gt;
  How are we going to achieve this?
&lt;/h3&gt;

&lt;p&gt;We are going to adopt a 'mobile first' approach by using &lt;code&gt;Meta Tags&lt;/code&gt; and &lt;code&gt;Media Queries&lt;/code&gt;!&lt;/p&gt;

&lt;p&gt;Let's get started by building a quick website with a &lt;em&gt;Navigation Bar&lt;/em&gt; that changes the layout into a convenient &lt;em&gt;Navigation Drawer&lt;/em&gt; depending on the device's dimensions.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#meta-viewport-tag" class="anchor"&gt;
  &lt;/a&gt;
  Meta Viewport Tag
&lt;/h1&gt;

&lt;p&gt;The &lt;code&gt;ViewPort&lt;/code&gt; tag is basically needed to signal browsers that the site adapts to all devices. It provides them with instructions on how to scale and adjust the dimensions to match the screen's size.&lt;/p&gt;

&lt;p&gt;The first thing we need to do is to add the &lt;a href="https://developers.google.com/search/mobile-sites/mobile-seo/responsive-design"&gt;Meta Viewport Tag&lt;/a&gt; below in your &lt;code&gt;index.html&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#media-queries" class="anchor"&gt;
  &lt;/a&gt;
  Media Queries
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.w3schools.com/cssref/css3_pr_mediaquery.asp"&gt;Media Queries&lt;/a&gt; are used to style websites for different sized screens (phones, tablets, desktop). Essentially, by using Media Queries, we can target a specific screen size or pixel range and make changes to the CSS ONLY when the particular screen size that we have set is hit. &lt;/p&gt;

&lt;p&gt;So, how do we use them? The syntax of Media Queries for mobile responsiveness looks like this in KotlinJS:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="cm"&gt;/*Specify the minimum screen width that you want to target in pixels*/&lt;/span&gt;
&lt;span class="nf"&gt;media&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"only screen and (min-width: 768px)"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/*Add the CSS changes you want to display here*/&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To clarify, the code above will only execute on screens that are 768px or larger.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="cm"&gt;/*Specify the maximum screen width that you want to target in pixels*/&lt;/span&gt;
&lt;span class="nf"&gt;media&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"only screen and (max-width: 768px)"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="cm"&gt;/*Add the CSS changes you want to display here*/&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will adapt our CSS for screen sizes 768px or lower.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#safety-in-functions" class="anchor"&gt;
  &lt;/a&gt;
  Safety in Functions
&lt;/h3&gt;

&lt;p&gt;As we begin to add more and more queries it becomes more and more hardcoded. A misspelling can cause all sorts of havoc in these cases.&lt;/p&gt;

&lt;p&gt;Using utility functions to generate these can save us from all types of headaches.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;mediaOnlyScreenMinWidth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;LinearDimension&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"only screen and (min-width: ${width})"&lt;/span&gt;

&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;mediaOnlyScreenMaxWidth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;LinearDimension&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"only screen and (max-width: ${width})"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using these functions we can create responsive sizes that will match across our codebase.&lt;/p&gt;

&lt;p&gt;Applying the utility functions our code now feels less hardcoded&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="cm"&gt;/*Specify the minimum screen width that you want to target in pixels*/&lt;/span&gt;
&lt;span class="nf"&gt;media&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;mediaOnlyScreenMinWidth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;768&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/*Add the CSS changes you want to display here*/&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see above, we use the &lt;code&gt;(mediaOnlyScreenMaxWidth())&lt;/code&gt; or the &lt;br&gt;
&lt;code&gt;(mediaOnlyScreenMinWidth())&lt;/code&gt; to specify when the changes to the CSS should happen. &lt;/p&gt;

&lt;p&gt;Let's explore the code above in more detail with specific examples from our website. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#media-in-action" class="anchor"&gt;
  &lt;/a&gt;
  Media in Action
&lt;/h3&gt;

&lt;p&gt;Our top navigation bar includes a logo and three Call to action (CTA) buttons. When the Webpage is rendered on Desktop, we want the navbar to display fully. If the screen size drops below the desired limit, the margin should be removed. To achieve this we use the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;  &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;primaryNav&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nf"&gt;css&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;marginTop&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;em&lt;/span&gt;

        &lt;span class="nf"&gt;media&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;mediaOnlyScreenMinWidth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;768&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nf"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Rendering on smaller devices, such as phones and tablets, the navbar should be replaced with a drawer navigation containing the CTAs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;mobileMenu&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nf"&gt;css&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;display&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;

        &lt;span class="nf"&gt;media&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;mediaOnlyScreenMinWidth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;768&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;display&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;none&lt;/span&gt;
            &lt;span class="nf"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;LinearDimension&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;blueViolet&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8Heg1v24--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://storage.googleapis.com/skalable.appspot.com/KotlinJS%2520Mobile%2520Responsive%2520Website%2520/mobile-responsiveness.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Heg1v24--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://storage.googleapis.com/skalable.appspot.com/KotlinJS%2520Mobile%2520Responsive%2520Website%2520/mobile-responsiveness.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Using media tags in KotlinJS is quite simple. It is definitely worth addressing mobile responsiveness when developing your KotlinJS website. Making it render correctly on a desktop is not enough, especially  factoring in that mobile traffic has overtaken desktop and now accounts for the majority of website traffic.&lt;/p&gt;

&lt;p&gt;You can check out the sample project &lt;a href="https://github.com/skalable-samples/KotlinJS-Responsive-Web"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Feel free to leave any questions or comments below. We would love hear your thoughts.&lt;/p&gt;

&lt;p&gt;@sKalable we are a Full Stack Kotlin-centric agency that create code to ensure it is consistently Maintainable, Flexible and of course,  &lt;strong&gt;&lt;em&gt;sKalable&lt;/em&gt;&lt;/strong&gt;. 😎&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/skalable_dev"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/skalabledev"&gt;Dev.to&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/company/skalable-dev/"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;for the latest updates and strategies in Kotlin, Multiplatform and much more, catering for your business or personal needs.&lt;/p&gt;

</description>
      <category>react</category>
      <category>kotlin</category>
      <category>html</category>
      <category>codequality</category>
    </item>
    <item>
      <title>building a rock paper scissors game</title>
      <author>Bethuel</author>
      <pubDate>Wed, 07 Apr 2021 11:49:43 +0000</pubDate>
      <link>https://dev.to/bethropolis/building-a-rock-paper-scissors-game-3a7f</link>
      <guid>https://dev.to/bethropolis/building-a-rock-paper-scissors-game-3a7f</guid>
      <description>&lt;p&gt;We all like building a fun project and one of them is a simple game.&lt;/p&gt;

&lt;p&gt;today I will be building a rock paper scissors game with &lt;code&gt;RPSjs&lt;/code&gt; library which I built myself a year ago.&lt;/p&gt;

&lt;p&gt;the whole source code is at the &lt;a href="#code"&gt;end&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;this is how it will look&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7hTxxrYT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/co41n7fu22fkpwq0c7zj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7hTxxrYT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/co41n7fu22fkpwq0c7zj.png" alt="Desktop-screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;when you click the buttons it shows what the computer choose against yours and who won&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ge46j5lK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ir7mbmeunkmg5n0mvbej.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ge46j5lK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ir7mbmeunkmg5n0mvbej.gif" alt="7cd19c054f22a60646f87ce541e422b1152def5b"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;you can play with this &lt;a href="https://jsfiddle.net/bethropolis/fdvxLk13/5/"&gt;JSfiddle&lt;/a&gt; &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#first" class="anchor"&gt;
  &lt;/a&gt;
  first
&lt;/h1&gt;

&lt;p&gt;we will import the library through a CDN&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/rpsjs@1.0.0/rockPaperScissors.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;you can visit the website for the &lt;a href="https://bethropolis.github.io/rockPaperScissorsjs"&gt;documentation&lt;/a&gt; or &lt;a href="https://github.com/bethropolis/rockPaperScissorsjs"&gt;Github&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;we are going to create a boilerplate&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QqIj5Zlk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxlcedde1rxdf9zlbqno.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QqIj5Zlk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxlcedde1rxdf9zlbqno.png" alt="xdfsghh-svg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;where are now going to add the buttons&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LP7R6HIF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sr9cjuny1q7n4hll4tz3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LP7R6HIF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sr9cjuny1q7n4hll4tz3.png" alt="gy8oooo-svg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;add the cdn onto the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--85L8mIc4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dohs8iayih4bkd6be4f0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--85L8mIc4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dohs8iayih4bkd6be4f0.png" alt="half-svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;
  &lt;a href="#javascript" class="anchor"&gt;
  &lt;/a&gt;
  javascript
&lt;/h1&gt;

&lt;p&gt;now it is time for sweet JavaScript to be added.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4K9QfTFy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awckayevg23ye838nilw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4K9QfTFy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awckayevg23ye838nilw.png" alt="oggggui-svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#explanation" class="anchor"&gt;
  &lt;/a&gt;
  explanation
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;      &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;btn&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
              &lt;span class="nx"&gt;startGame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;in the Js, we first get how many buttons are on the document with the &lt;code&gt;document.querySelectorAll("button")&lt;/code&gt; and for each button, we add an event listener which will call the &lt;code&gt;startGame()&lt;/code&gt; function when clicked. the &lt;code&gt;btn.innerText&lt;/code&gt; is passed as a parameter in the function which will be the user's choice. For example, if you click &lt;code&gt;&amp;lt;button&amp;gt;rock&amp;lt;/rock&amp;gt;&lt;/code&gt; then &lt;code&gt;rock&lt;/code&gt; will be passed as a value in the function.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This way is not recommended but I will use it just for this demonstration &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#second-part" class="anchor"&gt;
  &lt;/a&gt;
  second part
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;startGame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userChoice&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;player&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Play&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Roll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userChoice&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;in the &lt;code&gt;startGame(userChoice)&lt;/code&gt; function we place the users choice into a variable &lt;code&gt;userChoice&lt;/code&gt;. &lt;br&gt;
Using the &lt;code&gt;play()&lt;/code&gt; class we create a new class &lt;code&gt;player&lt;/code&gt;(can be anything) which gives us access to the &lt;code&gt;player.Roll()&lt;/code&gt; function, we pass &lt;code&gt;userChoice&lt;/code&gt; onto the function which will return an object and finally we log out the result with &lt;code&gt;console.log(data)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;this is what will be displayed on your console&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;it won't be exact, since the computer's choice is random&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MsxOXKOB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7exiqv9ze5w5jaqx5mag.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MsxOXKOB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7exiqv9ze5w5jaqx5mag.png" alt="output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;but displaying it on the console isn't that impressive so let's add some more code.&lt;/p&gt;

&lt;p&gt;on the HTML let's add&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt; 
   &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"user"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"computer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"won"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and css&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;inset&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;7px&lt;/span&gt; &lt;span class="m"&gt;-17px&lt;/span&gt; &lt;span class="m"&gt;#97c4fe&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#3d94f6&lt;/span&gt; &lt;span class="m"&gt;5%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#1e62d0&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#3d94f6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#337fed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#ffffff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;9px&lt;/span&gt; &lt;span class="m"&gt;26px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt; &lt;span class="m"&gt;#1570cd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#1e62d0&lt;/span&gt; &lt;span class="m"&gt;5%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#3d94f6&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#1e62d0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="nd"&gt;:active&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the CSS is just to style the buttons and make them look great.&lt;/p&gt;

&lt;p&gt;and let's update the javascript&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;startGame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userChoice&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;player&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Play&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Roll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userChoice&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#computer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;computer: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;computer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#won&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;won: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;won&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#code" class="anchor"&gt;
  &lt;/a&gt;
  code
&lt;/h1&gt;

&lt;p&gt;finally here is the whole source code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
      &lt;span class="c"&gt;&amp;lt;!--the css--&amp;gt;&lt;/span&gt; 
    &lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;inset&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;7px&lt;/span&gt; &lt;span class="m"&gt;-17px&lt;/span&gt; &lt;span class="m"&gt;#97c4fe&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#3d94f6&lt;/span&gt; &lt;span class="m"&gt;5%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#1e62d0&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#3d94f6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#337fed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#ffffff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;9px&lt;/span&gt; &lt;span class="m"&gt;26px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
         &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;text-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt; &lt;span class="m"&gt;#1570cd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#1e62d0&lt;/span&gt; &lt;span class="m"&gt;5%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#3d94f6&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#1e62d0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="nd"&gt;:active&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
          &lt;span class="c"&gt;&amp;lt;!--the cdn--&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/rpsjs@1.0.0/rockPaperScissors.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
     &lt;span class="c"&gt;&amp;lt;!--to be displayed--&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"user"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"computer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"won"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!--user buttons--&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;rock&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt; 
    &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;paper&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt; 
    &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;scissors&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!--the js--&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
       &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;btn&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;startGame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;

      &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;startGame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userChoice&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;player&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Play&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Roll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userChoice&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#computer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;computer: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;computer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#won&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;won: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;won&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and there you go, you have your very own rock paper scissors game.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/TdfyKrN7HGTIY/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/TdfyKrN7HGTIY/giphy.gif" alt="huraaay"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#about" class="anchor"&gt;
  &lt;/a&gt;
  about
&lt;/h1&gt;

&lt;p&gt;I am Bethuel and this is my first post, I hope you enjoyed it and&lt;br&gt;
thanks for sticking by. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>noob</category>
      <category>rpsjs</category>
    </item>
    <item>
      <title>Video: Building a Codename One Project for iOS</title>
      <author>Steve Hannah</author>
      <pubDate>Wed, 07 Apr 2021 11:46:34 +0000</pubDate>
      <link>https://dev.to/shannah/video-building-a-codename-one-project-for-ios-2j54</link>
      <guid>https://dev.to/shannah/video-building-a-codename-one-project-for-ios-2j54</guid>
      <description>&lt;p&gt;This is the third video in my series about &lt;a href="https://start.codenameone.com"&gt;our new online tool, Codename One initializr&lt;/a&gt;, which allows you to generate a Maven starter project for a native mobile app in one click. The &lt;a href="https://dev.to/shannah/online-tool-to-generate-ios-android-starter-project-k7h"&gt;first video&lt;/a&gt; showed how to generate the starter project, and run it in the Codename One simulator. The &lt;a href="https://dev.to/shannah/how-to-deploy-a-codename-one-app-on-android-5h8o"&gt;second video&lt;/a&gt; showed how to build and deploy the project on an Android device. In this video I show how to build and deploy the project on an iOS device.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/J7UJrtkXHqg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldw-too-long-didnt-watch" class="anchor"&gt;
  &lt;/a&gt;
  TLDW (Too Long Didn't Watch):
&lt;/h2&gt;

&lt;p&gt;This video starts out with my Codename One project already opened in IntelliJ. See &lt;a href="https://dev.to/shannah/online-tool-to-generate-ios-android-starter-project-k7h"&gt;this post&lt;/a&gt; for steps on how to generate this project.&lt;/p&gt;

&lt;p&gt;In the video I demonstrate two different approaches for building the iOS app.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;strong&gt;Locally (0:55-2:45)&lt;/strong&gt; - Requires a Mac with Xcode Installed.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Using Build Server (6:45-8:35)&lt;/strong&gt; - Can be built on Windows, Linux, or Mac. With no special requirements beyond Maven and the JDK. You just need a free Codename One account.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;NOTE: I also show how to generate your iOS certificates and provisioning profiles using the Certificate Wizard (2:45-6:45), as this is required to build apps for iOS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#building-locally" class="anchor"&gt;
  &lt;/a&gt;
  Building Locally
&lt;/h3&gt;

&lt;p&gt;The &lt;em&gt;local build&lt;/em&gt; option generates an Xcode project, which we then open and build using Xcode.&lt;/p&gt;

&lt;p&gt;To trigger this build, select "Local Builds" &amp;gt; "Xcode iOS Project":&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rm4LiGDR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-5.51.41-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rm4LiGDR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-5.51.41-AM.png" alt="Screen Shot 2021-04-06 at 5.51.41 AM" width="448" height="180" class="aligncenter size-full wp-image-583"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then press the "Run" button.&lt;/p&gt;

&lt;p&gt;It takes the ParparVM compiler a minute or two to do its thing, but when it's done, it opens the generated Xcode project in Xcode.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cLnvXnC0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-5.55.03-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cLnvXnC0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-5.55.03-AM.png" alt="Screen Shot 2021-04-06 at 5.55.03 AM" width="911" height="517" class="aligncenter size-full wp-image-584"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once opened, I press the "Run" button on the Xcode toolbar and wait while it compiles the project. When it is done, it opens the iOS simulator with my app running in it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E5BOzwG_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-5.58.05-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E5BOzwG_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-5.58.05-AM.png" alt="Screen Shot 2021-04-06 at 5.58.05 AM" width="317" height="665" class="aligncenter size-full wp-image-585"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#building-with-the-build-server" class="anchor"&gt;
  &lt;/a&gt;
  Building with the Build Server
&lt;/h3&gt;

&lt;p&gt;One of the nice things about Codename One is that it provides a build server with all of the native build tools installed and up-to-date. This simplifies the process of building native apps greatly. You can build your project for iOS, Android, Mac Desktop, Windows Desktop, Windows UWP, and Javascript without requiring any special build tools installed beyond the JDK. Building for any of these targets is as simple as pressing a button, or running a Maven goal.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#generating-certificates" class="anchor"&gt;
  &lt;/a&gt;
  Generating Certificates
&lt;/h4&gt;

&lt;p&gt;Building for iOS requires that you have an Apple developer account. Additionally, Apple requires you to generate certificates and provisioning profiles for your apps. This is by far the most painful part of app development. To help ease the pain, Codename One provides a certificate wizard to help generate these. Before I can submit my first iOS build, I need to walk through the certificate wizard to generate these certificates. The certificate wizard process starts at approx 2:45 in the video, and runs until 6:45.&lt;/p&gt;

&lt;p&gt;To access the certificate wizard, I need to open Codename One Settings. I do this by selecting "Tools" &amp;gt; "Codename One Settings" from IntelliJ's configuration menu, then pressing the "Run" button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YZO1mgZV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-6.11.27-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YZO1mgZV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-6.11.27-AM.png" alt="Screen Shot 2021-04-06 at 6.11.27 AM" width="372" height="163" class="aligncenter size-full wp-image-586"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will open The Control Center (aka Codename One Settings, aka Codename One Preferences):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zj5Y_9zl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-6.12.53-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zj5Y_9zl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-6.12.53-AM.png" alt="Screen Shot 2021-04-06 at 6.12.53 AM" width="872" height="460" class="aligncenter size-full wp-image-587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once there, I select "Device Settings" &amp;gt; "iOS" &amp;gt; "Certificate Wizard" from the navigation menu on the left.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gAPOLMc9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-6.13.55-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gAPOLMc9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-6.13.55-AM.png" alt="Screen Shot 2021-04-06 at 6.13.55 AM" width="207" height="530" class="aligncenter size-full wp-image-588"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This displays the login form for the certificate wizard:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qyPc20VI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-6.15.40-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qyPc20VI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-6.15.40-AM.png" alt="Screen Shot 2021-04-06 at 6.15.40 AM" width="644" height="330" class="aligncenter size-full wp-image-589"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;IMPORTANT: You need to use your Apple Developer account to login to this form. NOT your Codename One account.&lt;/p&gt;

&lt;p&gt;In the video I spliced out some of the waiting time. The login can take a little while, so be patient. Once logged in, it shows me a list of my registered development devices, and I can select which ones I want to be able to deploy this app to for testing and debugging.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lOtbgQiB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-6.17.06-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lOtbgQiB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-6.17.06-AM.png" alt="Screen Shot 2021-04-06 at 6.17.06 AM" width="653" height="506" class="aligncenter size-full wp-image-590"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The above screenshot has all of the rows greyed out. When you log in, you'll see device names and UDIDs listed on this form.&lt;/p&gt;

&lt;p&gt;Generally I select all of them. If this is your first time building an iOS app, then you may not have any devices listed yet, and you'll need to click on the "Manage Devices" button and follow the instructions there.&lt;/p&gt;

&lt;p&gt;Next, it asks me to confirm that I want to regenerate my certificates, as it has detected that I already have certificates generated in my Apple account. In my case, I say "yes", I'd like to regenerate them, but in most cases, you would select "no", to just use your existing certificates.&lt;/p&gt;

&lt;p&gt;TIP: If your certificates were generated by the certificate wizard, then a copy of them has been stored inside the &lt;em&gt;$HOME/.codenameone/iosCerts&lt;/em&gt; directory, and the wizard will use them automatically. If they weren't generated by the certificate wizard, and you choose &lt;em&gt;not&lt;/em&gt; to regenerate them, then you may need to specify the location of your certificates in the iOS Settings section.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oh-raszm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-6.25.52-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oh-raszm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-6.25.52-AM.png" alt="Screen Shot 2021-04-06 at 6.25.52 AM" width="648" height="290" class="aligncenter size-full wp-image-592"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, it asks whether we want to generate push certificates. In this case, since this is just a basic &lt;em&gt;Hello World&lt;/em&gt; app, we don't need push, so I leave these options OFF.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SQ-BTo56--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-6.27.38-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SQ-BTo56--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-6.27.38-AM.png" alt="Screen Shot 2021-04-06 at 6.27.38 AM" width="653" height="282" class="aligncenter size-full wp-image-595"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After clicking next, it will churn for a bit, and if all goes well, it will show us the message that our certificates were generated and installed successfully.&lt;/p&gt;

&lt;p&gt;Just to be sure that my settings are saved. I click on the &lt;em&gt;hamburger&lt;/em&gt; menu in the upper right, and select "Save".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i_sv3neU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-6.29.40-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i_sv3neU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-6.29.40-AM.png" alt="Screen Shot 2021-04-06 at 6.29.40 AM" width="198" height="330" class="aligncenter size-full wp-image-596"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#sending-the-build" class="anchor"&gt;
  &lt;/a&gt;
  Sending the Build
&lt;/h4&gt;

&lt;p&gt;Now that the certificates are generated, we can send the build. Back in IntelliJ, I select "Build Server" &amp;gt; "iOS Debug Build"&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5fH7iaXv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-6.32.38-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5fH7iaXv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-6.32.38-AM.png" alt="Screen Shot 2021-04-06 at 6.32.38 AM" width="384" height="193" class="aligncenter size-full wp-image-597"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;NOTE: If this is your first time building with the build server, you may be prompted for your Codename One username and password.&lt;/p&gt;

&lt;p&gt;I then follow the progress of the build on the Codename One website.&lt;/p&gt;

&lt;p&gt;When it's finished, I get a set of links to do things like download the .ipa, or install the app on device.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YodDaSy8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-6.34.32-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YodDaSy8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sjhannah.com/blog/wp-content/uploads/2021/04/Screen-Shot-2021-04-06-at-6.34.32-AM.png" alt="Screen Shot 2021-04-06 at 6.34.32 AM" width="378" height="348" class="aligncenter size-full wp-image-598"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-started" class="anchor"&gt;
  &lt;/a&gt;
  Get Started
&lt;/h2&gt;

&lt;p&gt;Getting started with your own native app is really easy. Just go to the &lt;a href="https://start.codenameone.com"&gt;Codename One initializr&lt;/a&gt;, enter your app details, and press "Download".&lt;/p&gt;

&lt;p&gt;For more information about Codename One, see &lt;a href="https://www.codenameone.com"&gt;the Codename One website&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>ios</category>
      <category>java</category>
      <category>kotlin</category>
      <category>mobile</category>
    </item>
  </channel>
</rss>
