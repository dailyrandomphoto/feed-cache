<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Deploying CI/CD For NodeJS Serverless Applications Workshop: Part II</title>
      <author>Salah Elhossiny</author>
      <pubDate>Fri, 06 Aug 2021 11:06:47 +0000</pubDate>
      <link>https://dev.to/aws-builders/deploying-ci-cd-for-nodejs-serverless-applications-workshop-part-ii-3df2</link>
      <guid>https://dev.to/aws-builders/deploying-ci-cd-for-nodejs-serverless-applications-workshop-part-ii-3df2</guid>
      <description>&lt;p&gt;In the first part, we setup the environment, created a simple Node.JS app, explored the SAM template, and lambda code. &lt;/p&gt;

&lt;p&gt;In this part, we will run the project locally. &lt;/p&gt;

&lt;p&gt;You will learn how to run it and test it locally using the AWS SAM CLI. This is important because its part of the day to day development workflow. It helps you verify if the application is behaving as expected, debug what’s wrong, and fix any issues before pushing your changes to a central repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vveUmsqF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zuxej64a0xb8ao9r1rvw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vveUmsqF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zuxej64a0xb8ao9r1rvw.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-dependencies"&gt;
  &lt;/a&gt;
  INSTALL DEPENDENCIES
&lt;/h2&gt;

&lt;p&gt;Before we run the application locally, it’s a common practice to install third-party libraries or dependencies that your application might be using. These dependencies are defined in a file that varies depending on the runtime, for example package.json for NodeJS projects or requirements.txt for Python ones.&lt;/p&gt;

&lt;p&gt;In the terminal, go into the sam-app/hello-world folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;sam-app/hello-world
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And install the dependencies:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QgO6bVzZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdqjhf65m2avb7qiauek.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QgO6bVzZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdqjhf65m2avb7qiauek.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#run-using-sam-cli"&gt;
  &lt;/a&gt;
  RUN USING SAM CLI
&lt;/h2&gt;

&lt;p&gt;There are 2 ways of running a Serverless app locally: 1) By invoking an individual Lambda function or 2) By running a local HTTP server that simulates API Gateway.&lt;/p&gt;

&lt;p&gt;We will focus on number 2, but you can learn about invoking individual functions in the &lt;a href="https://docs.aws.amazon.com/en_pv/serverless-application-model/latest/developerguide/sam-cli-command-reference-sam-local-invoke.html"&gt; SAM Local Invoke reference &lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;In the terminal, run the following command from the root directory of the sam-app folder:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/environment/sam-app
sam &lt;span class="nb"&gt;local &lt;/span&gt;start-api &lt;span class="nt"&gt;--port&lt;/span&gt; 8080
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#test-your-endpoint"&gt;
  &lt;/a&gt;
  Test your endpoint
&lt;/h3&gt;

&lt;p&gt;Once your local server is running, we can send HTTP requests to test it. Chose one of the following options:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#option-a-using-curl"&gt;
  &lt;/a&gt;
  Option A) Using CURL
&lt;/h4&gt;

&lt;p&gt;Without killing the running process, open a new terminal. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1T8wVwig--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pu05riuyxse9jpwtkfks.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1T8wVwig--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pu05riuyxse9jpwtkfks.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Test your endpoint by running a CURL command that triggers an HTTP GET request.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl http://localhost:8080/hello
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#option-b-using-a-browser-window"&gt;
  &lt;/a&gt;
  Option B) Using a browser window
&lt;/h4&gt;

&lt;p&gt;In Cloud9, go to the top menu and chose Tools &amp;gt; Preview &amp;gt; Preview Running Application. A browser tab will open, append /hello to the end of the URL. &lt;/p&gt;

&lt;p&gt;This will invoke your Lambda function locally.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H0ybG3Tc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ggp0tle9xpak4s2pzp05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H0ybG3Tc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ggp0tle9xpak4s2pzp05.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note how SAM is pulling the Docker container image lambci/lambda:nodejs12.x automatically. This is how SAM is able to simulate the Lambda runtime locally and run your function within it. The first invocation might take a few seconds due to the docker pull command, but subsequent invocations should be much faster.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-a-code-change"&gt;
  &lt;/a&gt;
  MAKE A CODE CHANGE
&lt;/h3&gt;

&lt;p&gt;While the app is still running, open the file sam-app/hello-world/app.js and make a simple code change. For example, change the response message to return hello my friend instead of hello world. Your Lambda handler should look like this after the change:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KDHDNJPe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2io9zh8nmtybaoibh12l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KDHDNJPe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2io9zh8nmtybaoibh12l.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#note-make-sure-you-save-the-file-after-changing-it"&gt;
  &lt;/a&gt;
  Note: Make sure you save the file after changing it.
&lt;/h6&gt;

&lt;p&gt;You don’t have to restart the sam local process, just refresh the browser tab or re-trigger the CURL command to see the changes reflected in your endpoint.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tX-kV99X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mks5wsipym36do605xeg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tX-kV99X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mks5wsipym36do605xeg.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#run-the-unit-tests"&gt;
  &lt;/a&gt;
  RUN THE UNIT TESTS
&lt;/h4&gt;

&lt;p&gt;As you typically would, with any software project, running the unit tests locally is no different for Serverless applications. Developers run them before pushing changes to a code repository. So, go ahead and run the unit tests for your project.&lt;/p&gt;

&lt;p&gt;In the terminal, run this command from the sam-app/hello-world folder to run the unit tests:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/environment/sam-app/hello-world
npm run &lt;span class="nb"&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The tests should fail. This is expected!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nnEBK239--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x7isy1qn1xfhqe9e9iwe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nnEBK239--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x7isy1qn1xfhqe9e9iwe.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#fix-the-unit-test"&gt;
  &lt;/a&gt;
  Fix the unit test
&lt;/h4&gt;

&lt;p&gt;Makes sense right? We changed the response message to hello my friend and the unit test was expecting hello world. This is an easy fix, let’s update the unit test.&lt;/p&gt;

&lt;p&gt;Open the file sam-app/hello-world/tests/unit/test-handler.js and update the expected value for the response to match the new message. The unit test should look like this after the update:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../../app.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;chai&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;chai&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;chai&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Tests index&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;verifies successful response&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lambdaHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;be&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;an&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;object&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;be&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;an&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;be&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;an&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;object&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;be&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello my friend&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;- FIX&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#run-the-tests-again"&gt;
  &lt;/a&gt;
  Run the tests again
&lt;/h4&gt;

&lt;p&gt;Run the same command again.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run &lt;span class="nb"&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the tests should pass:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jmMVyPTC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqh5bjvjpbu3zjm85smd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jmMVyPTC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqh5bjvjpbu3zjm85smd.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  Note:
&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;This project uses the Chai Framework for running the unit tests, but you can chose any other framework. SAM doesn’t enforce any particular one. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reaching the second part end. In the upcoming part, we will deploy the app manually and build the pipeline. &lt;/p&gt;

</description>
      <category>aws</category>
      <category>node</category>
      <category>cicd</category>
      <category>cloudskills</category>
    </item>
    <item>
      <title>What's the difference between a Developer and a CTO?</title>
      <author>Valentin Sawadski</author>
      <pubDate>Fri, 06 Aug 2021 10:17:29 +0000</pubDate>
      <link>https://dev.to/_vsaw/what-s-the-difference-between-a-developer-and-a-cto-pe</link>
      <guid>https://dev.to/_vsaw/what-s-the-difference-between-a-developer-and-a-cto-pe</guid>
      <description>&lt;p&gt;In my opinion it can be summarised like this:&lt;/p&gt;

&lt;p&gt;Dev: Technology is key!&lt;br&gt;
CTO: Technology is a tool!&lt;/p&gt;

&lt;p&gt;Don't get me wrong, it's important to be good at your craft, but in the end you will not be measured by how clean your code is, but by achieving your companies goals!&lt;/p&gt;

&lt;p&gt;Or how would you describe the difference?&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>management</category>
      <category>career</category>
    </item>
    <item>
      <title>Bitsets, Bit Manipulations and Bitmasks Questions</title>
      <author>Abhinandan Sharma</author>
      <pubDate>Fri, 06 Aug 2021 10:15:20 +0000</pubDate>
      <link>https://dev.to/abhi824/bitsets-bit-manipulations-and-bitmasks-questions-p2g</link>
      <guid>https://dev.to/abhi824/bitsets-bit-manipulations-and-bitmasks-questions-p2g</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;If you have come to this post, I bet you are struggling with all those bit operations and tricks as there are two many of them! These bit operations are not only useful in competitive programming questions but also in Dynamic Programming (where we have to save the current state), and reducing time complexities in certain scenarios. &lt;/p&gt;

&lt;p&gt;Before heading to discuss the questions let's just get a glimpse of why you should learn bitsets and type of questions which you can't do if you don't have enough knowledge of bit manipulation.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Maximum AND/OR/XOR value of a pair in an array&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Queries for bitwise AND in the index range [L, R] of the given array.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://leetcode.com/problems/find-the-longest-substring-containing-vowels-in-even-counts/"&gt;Find Longest substring containing vowels in even counts&lt;/a&gt;, &lt;a href="https://leetcode.com/problems/find-longest-awesome-substring/"&gt;Find Longest awesome substring&lt;/a&gt;, &lt;a href="https://leetcode.com/problems/number-of-wonderful-substrings/"&gt;Number of wonderful sub-strings&lt;/a&gt;, &lt;a href="https://leetcode.com/problems/maximum-product-of-word-lengths/"&gt;Maximum Product of Word Lengths&lt;/a&gt; These type of questions are typically solved using bitsets easily.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We will be discussing each of the above questions and in the end, I would be sharing some of the questions from codeforces, Leetcode, etc. If you have any doubts in those questions, feel free to discuss in the comments.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#first-type-of-questions"&gt;
  &lt;/a&gt;
  First Type of Questions
&lt;/h3&gt;

&lt;p&gt;Questions asking you to compute the maximum AND/XOR/OR of any pair in an array, directly or indirectly, are actually based on a rather simple trick. Let's First discuss the questions.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#q1-find-maximum-binary-and-pair-from-an-array"&gt;
  &lt;/a&gt;
  Q1. Find Maximum Binary AND pair from an array.
&lt;/h4&gt;

&lt;p&gt;Codeforces Link of the problem:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: arr=[2,6,4,5,12,14,15]
Output: Max And pair: 14
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is rather a difficult problem to solve but this will let you think much. &lt;/p&gt;

&lt;p&gt;Hint 1: First convert all the numbers to their binary forms and see if you see a pattern in finding the answer&lt;/p&gt;

&lt;p&gt;Hint 2: The size of the numbers can be at most 32 bits. &lt;/p&gt;

&lt;p&gt;Solution: Read Hint 2 one more time. We know that total digits in binary representation can't be more than 32 for int datatype. Now, think this way: We have to see if a bit can be set or unset in our answer. That means we are actually constructing our answer bit by bit. &lt;/p&gt;

&lt;p&gt;We would do a simple iteration here starting from leftmost bit and then we would search for the elements in array having this bit as set (And also the all the bits in our current answer). If the number of such elements is greater than or equal to 2, we would add this bit in our answer. &lt;/p&gt;

&lt;p&gt;Dry Run:&lt;/p&gt;

&lt;p&gt;arr[]={2,6,4,5,12,14,15}&lt;/p&gt;

&lt;p&gt;Binary form of these numbers:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;0010
0110
0100
0101
1100
1110
1111
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now Our max answer can't be more than the maximum of these numbers(It's binary AND). So our max answer can be 15. We would start by setting the leftmost bit.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Initial Answer : 0000
First bit set: 1000 which is 8 in decimal. Fourth bit set in 12, 
15 and 14. (Greater than 2) So, we add this bit to our answer

Second Bit: 1100 which is 12 in decimal. The number of elements 
in which both first and second bit is set is 3(12,14 and 15). So,
we add this bit.

Third Bit: 1110 which is 14 in decimal. The number of elements in
which all of the set bits of 14 are present is 2(14 and 15). So,
we add this bit as well.

Fouth bit: 1111 which is 15 in decimal. the number of elements in
which all of the set bits of 15 are present is 1 only(15 
itself). So, we would not add this bit and reset our answer to 
1110.

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Why does this work?&lt;/strong&gt;&lt;br&gt;
A very frequent doubt which comes in mind is, how this algorithm differentiates between two numbers added in the answer. Like, I am first considering 12, 14 in for the second bit but there can be some number which actually satisfies our conditions but 12 don't. So the set bits of 12 would be removed! This would cause "some error". First of all, see the conditions clearly, the condition to add a number is that it should have bits added so far, so 12 won't be contributing any unique bit...&lt;/p&gt;

&lt;p&gt;Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#include&amp;lt;bits/stdc++.h&amp;gt;
using namespace std;
#define int long long int
bool isValid(int x, vector&amp;lt;int&amp;gt; &amp;amp;arr, int n)
{
    int cnt = 0;
    for(int i = 0; i &amp;lt; n; i++)
    {
        // How do I check if all bits set in answer is set in the element as well?
        // Just do an AND operation!
        if((x &amp;amp; arr[i]) == x)
            cnt++;
    }
    return cnt &amp;gt;= 2;
}
int findMaxAndPair(vector&amp;lt;int&amp;gt; &amp;amp;arr, int n)
{
    int ans = 0;
    // Here I am starting from 63 as it is long long
    // You can actually compute the maximum number
    // and start from it's rightmost set bit
    for(int i = 31; i &amp;gt;= 0; i--)
    {
        // How do I set a specific bit? Just do an OR operation on shifted bit!
        if(isValid(ans | (1 &amp;lt;&amp;lt; i), arr, n))
        {
            ans = ans | (1 &amp;lt;&amp;lt; i);
        }
    }
    return ans;
}
int32_t main()
{
    int n;
    cin &amp;gt;&amp;gt; n;
    vector&amp;lt;int&amp;gt; arr (n);
    for(int i = 0; i &amp;lt; n; i++)
        cin &amp;gt;&amp;gt; arr[i];

    cout &amp;lt;&amp;lt; findMaxAndPair(arr, n);

    return 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#second-type"&gt;
  &lt;/a&gt;
  Second Type
&lt;/h3&gt;

&lt;p&gt;Querying inside a specific range. To be continued...&lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>bits</category>
      <category>cpp</category>
      <category>codeforces</category>
    </item>
    <item>
      <title>How to keep Tailwind DRY</title>
      <author>npm run dev</author>
      <pubDate>Fri, 06 Aug 2021 09:24:28 +0000</pubDate>
      <link>https://dev.to/npmrundev/how-to-keep-tailwind-dry-2jfe</link>
      <guid>https://dev.to/npmrundev/how-to-keep-tailwind-dry-2jfe</guid>
      <description>&lt;p&gt;There's many complaints I see online about Tailwind: it's WET, not DRY, it's the same as inline styles, you can't make global changes, and it's hard to read. I understand how this may seem to be the case when you first start working with Tailwind. The thing to bear in mind is &lt;strong&gt;Tailwind is nothing like traditional CSS, and you shouldn't treat it as such&lt;/strong&gt;.



&lt;/p&gt;
&lt;p&gt;There's lots of ways that Tailwind can benefit us, such as its tiny bundle size and super-fast prototyping capabilities. I explained a bit more about that in a &lt;a href="https://npmrundev.wordpress.com/2021/08/04/6-reasons-to-use-tailwind-over-traditional-css/"&gt;previous article&lt;/a&gt;. But we can only get these benefits if we use it in the right situation; used in the wrong context, Tailwind will only bring you headaches.&lt;/p&gt;

&lt;h2&gt;When is the wrong time to use Tailwind CSS?&lt;/h2&gt;

&lt;p&gt;The first thing I would recommend &lt;strong&gt;against&lt;/strong&gt; using Tailwind for is plain HTML static websites. When you're building a static site, you will inevitably end up copy and pasting HTML, since there's likely to be more than one occurrence of the same component/section on a single page. &lt;/p&gt;

&lt;p&gt;This is totally fine if you're using a traditional CSS methodology such as &lt;a href="http://getbem.com/"&gt;BEM&lt;/a&gt;: your CSS and HTML exist completely separately, so you can rely on your CSS as your single source of truth for how your website will look. If you change a CSS class, the change will be reflected everywhere the class is used without having to update the HTML. In this way, it doesn't really matter &lt;em&gt;too much&lt;/em&gt; if you've copy and pasted some HTML.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// you can copy and paste these classes anywhere
&amp;lt;button class="button button--negative"&amp;gt;&amp;lt;/button&amp;gt;

&amp;lt;button class="button button--negative"&amp;gt;&amp;lt;/button&amp;gt;

// but you could also break rules like this
&amp;lt;div class="button"&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I38x9Xsr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://npmrundev.files.wordpress.com/2021/08/html-files-suck.png%3Fw%3D263" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I38x9Xsr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://npmrundev.files.wordpress.com/2021/08/html-files-suck.png%3Fw%3D263" alt=""&gt;&lt;/a&gt;Separation of concerns is traditionally defined by language&lt;/p&gt;

&lt;p&gt;This is about as much as you can do when it comes to &lt;strong&gt;separation of concerns&lt;/strong&gt; with CSS and plain HTML. Personally, I still think this method isn't properly DRY since you're copy and pasting the same code in multiple places, but it's about the best you can do with basic HTML- something that never sat right with me while I was learning CSS. To make this system truly DRY, you would want to use some form of templating or a component-based framework so you could only write HTML for a section one time, and then re-use the component wherever you like. This brings me onto...&lt;/p&gt;

&lt;h2&gt;When is the right time to use Tailwind CSS? &lt;/h2&gt;

&lt;p&gt;I'm glad you asked! If you don't want to repeat yourself when building websites with Tailwind, you're probably going to want to use some kind of JavaScript framework. Whether it's React, Vue or some other new-fangled framework, the important thing is that you can build JS components which can be reused over and over. You might be able to get it to work with PHP templates, but I'd say this method is best for JavaScript since you can keep your HTML, JS and CSS all in the same file.&lt;/p&gt;

&lt;p&gt;That's the real way Tailwind should be used: as an entirely different paradigm where separation of concerns doesn't mean separating HTML, CSS and JS, it means separating entire components instead, and keeping everything related to that component inside one file or folder. It's a pretty different way of working to how we're used to with its own challenges, but this method has some great benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Components can behave independently of each other and be used across different projects without much hassle&lt;/li&gt;
&lt;li&gt;Components can be tested on their own so you don't need to worry about things changing later on&lt;/li&gt;
&lt;li&gt;Prototyping is much faster since you don't need to write a custom class for every single element&lt;/li&gt;
&lt;li&gt;Full access to use JavaScript for more advanced conditional styling than with regular HTML&lt;/li&gt;
&lt;li&gt;Encourages component composition - once you have a bunch of components, it's easy to build pages or even new variants of components by combining what you already have&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Embracing component-based architecture&lt;/h2&gt;

&lt;p&gt;Once you have your HTML, JavaScript and CSS all in one place, you'll realise it's much easier to contain components within their own folders rather than having resources stretched across your whole project in different file trees. Working in this way opens up new opportunities, such as being able to use JavaScript to dictate your styles and building more complex logic for views.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n8UNppHf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://npmrundev.files.wordpress.com/2021/08/filez-1.png%3Fw%3D275" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n8UNppHf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://npmrundev.files.wordpress.com/2021/08/filez-1.png%3Fw%3D275" alt=""&gt;&lt;/a&gt;File structure in component-based development&lt;/p&gt;

&lt;p&gt;Here's some tips to help you adjust to component-based development:&lt;/p&gt;

&lt;h2&gt;1. Break components down into small, reusable pieces&lt;/h2&gt;

&lt;p&gt;Have you ever noticed, when looking at a design, that there tend to be lots of repeating patterns? You can take advantage of this with class composition. It's common to see a 50/50 layout with text on one side, and some type of media on the other. I tend to call them &lt;code&gt;SplitContent&lt;/code&gt; blocks. There are often variants on this, perhaps some of the text is a different size or the media slot is filled with a carousel instead of an image.&lt;/p&gt;

&lt;p&gt;Instead of building two components that use the exact same styles for the most part, you could create a container component with props, slots where you can add any kind of content. You could set up logic for your styles inside - maybe you want a prop that changes which side the content will appear on, or add padding to a certain side. Alternatively, you could just add a prop which can be passed a string of class names, giving you the ability to customise the container as it's used in different contexts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xjATRopb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://npmrundev.files.wordpress.com/2021/08/breaking-down-components-01.png%3Fw%3D1024" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xjATRopb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://npmrundev.files.wordpress.com/2021/08/breaking-down-components-01.png%3Fw%3D1024" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For areas where I want to use SplitContent as a dynamic content block with a CMS such as Wordpress, I might create a &lt;code&gt;Handler&lt;/code&gt; component which breaks down the style options defined in the CMS and passes on the relevant combinations of components.&lt;/p&gt;

&lt;p&gt;You might, for example, want your client to only have access to one SplitContent component in the CMS, but have the choice to create many different layouts using that one component. Some of the choices might include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Which type of content do you want on each side?&lt;/li&gt;
&lt;li&gt;Which side should each content type be on?&lt;/li&gt;
&lt;li&gt;Does this component need a different colour scheme?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These options can be taken in by the component Handler and it will return the correct layout, while keeping all this logic contained within itself so the other components can still be used across different components.&lt;/p&gt;

&lt;p&gt;I usually keep everything related to SplitContent under one folder, and add a subfolder of smaller pieces which make up the main components:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dqg05ZA0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://npmrundev.files.wordpress.com/2021/08/filez-2-1.png%3Fw%3D264" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dqg05ZA0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://npmrundev.files.wordpress.com/2021/08/filez-2-1.png%3Fw%3D264" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is just one example; essentially, your components should all have a single purpose so it's easier to build larger and more complex components using the pieces you have created.&lt;/p&gt;

&lt;h2&gt;2. Use JS to build class lists&lt;/h2&gt;

&lt;p&gt;If you find Tailwind hard to read, you're not alone. It's one of the most common complaints and I can understand why: you have to read each class to understand what's going on, which doesn't work for everyone.&lt;/p&gt;

&lt;p&gt;It may help to rely on JavaScript to build your class names. I often prefer this method over composing new CSS classes for the sake of it, especially when they might only be used in one place. Some people might say this is the same as using the @apply directive, but if the class isn't going to be used anywhere else there's no reason to write a whole new class for it. Writing classes with JavaScript like this helps to keep everything related to that component in a similar place, rather than placing it miles away in the CSS folder.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// components/Modal/View.jsx

export default function ModalView () {
  const modalContainerClass = "bg-white p-4 rounded shadow";
  const modalHeadingClass = "heading-1 text-darkgrey";

  return (
    &amp;lt;aside className={modalContainerClass}&amp;gt;
      &amp;lt;h1 className={modalHeadingClass}&amp;gt;...&amp;lt;/h1&amp;gt;
    &amp;lt;/aside&amp;gt;
  );
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Storing classes in JavaScript variables makes it a little clearer what is trying to be accomplished with it, while also opening up the opportunity to use more advanced logic than would be possible with CSS.&lt;/p&gt;

&lt;h2&gt;3. Use props to extend components&lt;/h2&gt;

&lt;p&gt;One of the problems we encounter with Tailwind compared to normal CSS is that we lose the ability to extend a basic version of a component into a new modified version with classes:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// _button.scss

.button {
  padding: 20px;
  border: 1px solid black;
}
.button--negative {
  border-colour: red;
}

// index.html

&amp;lt;button class="button"&amp;gt;Accept&amp;lt;/button&amp;gt;
&amp;lt;button class="button button--negative"&amp;gt;Cancel&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Of course we could manually add the &lt;code&gt;border-red&lt;/code&gt; Tailwind class to any button we want to make negative, but what if there's more than one style? What if the background and text colour also change?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// this would be a nightmare if the negative styles ever changed

&amp;lt;button class="p-5 border-red bg-red text-white"&amp;gt;Cancel&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;The solution: Extend your components using JavaScript&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When we make the switch over to component-based development, we gain the ability to use JavaScript in place of CSS for creating components. Since you're no longer tied to a separate stylesheet, you can create variants of your components by abstracting them to different files, using your base component as the starting point.&lt;/p&gt;

&lt;p&gt;One of the most flexible ways of doing this is to pass class names down as props, and merge them with the existing classes on a component. This is an example of &lt;a href="https://reactpatterns.com/#merge-destructured-props-with-other-values"&gt;merging destructured props with other values&lt;/a&gt;, as shown on the fantastic resource &lt;a href="https://reactpatterns.com/"&gt;reactpatterns.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here's how our button variants might look using this method:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// components/Button/index.jsx

export default function Button = ({ classnames, handleOnClick, label }) {
  const buttonClass = [
    "p-5 border-1", // default button styles
    classnames      // any additional styles
  ].join(' ');
  
  return (
    &amp;lt;button className={buttonClass} onClick={handleOnClick}&amp;gt;
      {label}
    &amp;lt;/button&amp;gt;
  )
}

// components/Button/Negative.jsx

export default function ButtonNegative = (props) {
  return (
    &amp;lt;Button
      classnames="border-red bg-red text-white"
      {...props}
    /&amp;gt;
  )
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we can use &lt;code&gt;index.jsx&lt;/code&gt; as the base layer of our button, and keep all the logic on that level, while also having variants of that button clearly defined without any change to functionality. This way, if the styles change later on, anywhere &lt;code&gt;&amp;lt;ButtonNegative /&amp;gt;&lt;/code&gt; is used will reflect changes made in that file.&lt;/p&gt;

&lt;h2&gt;4. Move view logic and business logic to separate files&lt;/h2&gt;

&lt;p&gt;This is quite a general tip for working with JavaScript frameworks, but in Tailwind it can help even more so because it separates your styles from your business logic without relegating them to a completely different folder. You can enter your Button folder, and know that everything in that folder will be related to buttons.&lt;/p&gt;

&lt;p&gt;Once you've got everything in one place, you can start to break it down further: In React, you can keep the way your component looks separate from how it behaves. Here's an example of this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// components/Carousel/View.jsx (view logic only)
export default function CarouselView ({ slides }) {
  return (
    &amp;lt;SomeCarouselPlugin&amp;gt;
      {Array.isArray(slides) &amp;amp;&amp;amp; slides.map(slide =&amp;gt; (
        &amp;lt;CarouselSlide {...slide} /&amp;gt;
      ))}
    &amp;lt;/SomeCarouselPlugin&amp;gt;
  )
}

// components/Carousel/Jobs.jsx (business logic only)
export default function JobsCarousel () {
  const [jobs, setJobs] = useState(null);
  
  const fetchJobs = async () =&amp;gt; {
    const res = await request({
      url: 'my-api-url.com/jobs?limit=16',
      method: 'GET'
    })
    setJobs(res.data)
  }
  
  useEffect(() =&amp;gt; {
    fetchJobs();
  }, [])
  
  return !!jobs ? (
    &amp;lt;CarouselView slides={jobs.map(job =&amp;gt; ({
      title: job.title,
      description: job.description,
      salary: 'Up to ' + job.salary.max
    }))} /&amp;gt;
  ) : &amp;lt;&amp;gt;Loading...&amp;lt;/&amp;gt;
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If we wanted to make another carousel which used the same styles, perhaps we want the carousel to be filled with staff members instead of jobs, we could do that by creating a new container component in &lt;code&gt;Carousel/Staff.jsx&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This massively helps with breaking down huge components with hundreds or even thousands of lines, and this method means you could also include extra layers if you wanted to for even more customisation. This system of extension makes it easier to break down what a component is supposed to be doing, while making sure you don't repeat yourself.&lt;/p&gt;

&lt;h2&gt;5. Use class composition for containers, text styles and anything used between components&lt;/h2&gt;

&lt;p&gt;That's right: Even when components are your source of truth, there is still a place for custom classes. For example, you are likely to use a container class on many different components with a max width, margin: auto and some side padding. Since these aren't likely to change, it makes sense to compose a new custom class using the @apply directive. &lt;/p&gt;

&lt;p&gt;Personally, I also like to include typographic classes such as for headings, standard blocks of content and the like. These are things that don't necessarily make a lot of sense to create a new JavaScript component for, but they combine the same styles in multiple places nevertheless.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.page-wrap {
  @apply max-w-page mx-auto px-4 tablet:px-5 laptop:px-6;
}

.paragraph {
  @apply text-16 font-body leading-loose;
}

// we can still create variants of .paragraph
&amp;lt;p class="paragraph text-white"&amp;gt;Hello world!&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;6. When composing classes, avoid using margins&lt;/h2&gt;

&lt;p&gt;You can make classes more reusable by making them position agnostic. If you leave out properties such as margins which only affect the position of the element, you are able to reuse it more often.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// _typography.scss

.heading-2 {
  @apply text-black text-24 bold;
}&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;h2 className="heading-2 mb-4"&amp;gt;Hello world!&amp;lt;/h2&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This might not be what you want in every situation - maybe you &lt;em&gt;do&lt;/em&gt; want every heading to have a certain margin. But for many cases it's a trick worth keeping in mind that makes your components much more flexible and less dependent on their position on the page.&lt;/p&gt;

&lt;h2&gt;7. Treat tailwind.config.js as your source of truth&lt;/h2&gt;

&lt;p&gt;In SCSS or LESS, you might create variables for constants such as colours, fonts and max widths. You can reuse those variables anywhere in your CSS, and if you change the variable this change will be reflected everywhere it's used.&lt;/p&gt;

&lt;p&gt;Tailwind works in much the same way, except &lt;em&gt;everything&lt;/em&gt; is defined by variables. That means not just the text or background colours you can use, but also spacing, sizing, borders and almost any other property you can think of. You can make use of this with the &lt;code&gt;theme&lt;/code&gt; object in &lt;code&gt;tailwind.config.js&lt;/code&gt;, or extend the default theme with the &lt;code&gt;extend&lt;/code&gt; object.&lt;/p&gt;

&lt;p&gt;This file defined the way your whole app will look: If your designer has used a design system which commonly uses numbers like &lt;code&gt;4, 8, 12, 16, 32&lt;/code&gt; etc. you can build that system right into your CSS:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;spacing: {
  1: '4px',
  2: '8px',
  3: '12px',
  4: '16px',
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These classes are then ready to use, straight away, and in the case of the &lt;code&gt;spacing&lt;/code&gt; property will be applied to &lt;code&gt;padding&lt;/code&gt;, &lt;code&gt;margin&lt;/code&gt; and &lt;code&gt;relative&lt;/code&gt; positioning classes such as &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Don't forget that you can also use regular JavaScript to generate some of these properties, which can save a bit of time and clean the file up. I like to make a &lt;code&gt;const&lt;/code&gt; containing an array similar to the one above, and using it for &lt;code&gt;spacing&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt; and any other similar properties - even &lt;code&gt;font size&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I've also entertained the idea of such a spacing/font system generated using the &lt;a href="https://grtcalculator.com/"&gt;golden ratio&lt;/a&gt;, which might be a great option for fast prototyping while also maintaining a great visual flow.&lt;/p&gt;

&lt;h2&gt;8. Use tools to spot repeating patterns&lt;/h2&gt;

&lt;p&gt;On the topic of composing classes, there are some great tools to help you find repeating patterns in your class lists so you can refactor these into their own generic classes.&lt;/p&gt;

&lt;p&gt;One of the most useful is Refactor CSS, a VS Code extension that automatically finds and presents very similar strings of classes, which helps when finding common patterns to abstract into new classes. Class strings will be highlighted if they have more than 3 classes and these 3 classes repeat more than 3 times in the current document. The order of classes is ignored, so you don't need to worry about maintaining a &lt;a href="https://www.matuzo.at/blog/ordering-css-properties/"&gt;property sort order&lt;/a&gt; to make sure the tool works.&lt;/p&gt;

&lt;p&gt;If you &lt;em&gt;are&lt;/em&gt; worried about property sort order (Tailwind is much more readable if you are) then you can use another tool to deal with that for you: &lt;a href="https://github.com/heybourn/headwind"&gt;Headwind&lt;/a&gt;. This VS Code extension will format your Tailwind classes on save and group them by their function, making sure everything is where you expect it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// before saving
&amp;lt;div class="bg-red container mb-6 text-white"&amp;gt;&amp;lt;/div&amp;gt;

// after saving
&amp;lt;div class="container mb-6 text-white bg-red"&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also change the regex of Headwind, so you can customise the sort order exactly how you like. &lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I'll won't pretend moving to this way of working is particularly easy, and there are many problems that still need solving. We're still in the early (ish) days of utility-first frameworks and component-based development, so everything hasn't been figured out yet.&lt;/p&gt;

&lt;p&gt;Despite this, I feel confident that we'll start to see new tools, packages and methodologies that aim to tackle any issues we may face. What we can get out of this approach are lightweight, fast applications that are truly DRY. Isolated, independent components are great for building across different platforms, so I think we'll see a lot of companies building headless systems picking up this way of working.&lt;/p&gt;

&lt;p&gt;I write more articles like this one about headless systems and component-based development over on my blog at &lt;a href="https://npmrundev.wordpress.com/"&gt;npm run dev&lt;/a&gt;. Check it out if you want, and I'd love to get some feedback on my thoughts and writing style. Thanks for reading!&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>css</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>4 Important Dictionary Methods</title>
      <author>Aya Bouchiha</author>
      <pubDate>Fri, 06 Aug 2021 08:35:53 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/4-important-dictionary-methods-j54</link>
      <guid>https://dev.to/ayabouchiha/4-important-dictionary-methods-j54</guid>
      <description>&lt;p&gt;Hello everybody, I'm &lt;a href="//developer.aya.b@gmail.com"&gt;Aya Bouchiha&lt;/a&gt;, today, we'll talk about 4 important dictionary methods.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#clear"&gt;
  &lt;/a&gt;
  clear()
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;clear()&lt;/strong&gt;: this method lets you delete all the dictionary's items;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Aya Bouchiha"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"developer.aya.b@gmail.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 2
&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# {}
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 0
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#copy"&gt;
  &lt;/a&gt;
  copy()
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;copy()&lt;/strong&gt;: lets you get a copy of the specified dictionary.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Aya Bouchiha"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"developer.aya.b@gmail.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;admin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# {'name': 'Aya Bouchiha', 'email': 'developer.aya.b@gmail.com'}
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'John Doe'&lt;/span&gt;
&lt;span class="c1"&gt;# {'name': 'John Doe', 'email': 'developer.aya.b@gmail.com'}
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# {'name': 'Aya Bouchiha', 'email': 'developer.aya.b@gmail.com'}
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#setdefaultkey-value"&gt;
  &lt;/a&gt;
  setdefault(key, value)
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;setdefault(key, value(optional))&lt;/strong&gt;: this method returns the value of the given key If It exists, otherwise, It creates a new item with the given key and value and returns its value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Aya Bouchiha"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"developer.aya.b@gmail.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setdefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'unknown'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# Aya Bouchiha
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setdefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'is_admin'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'False'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# False
&lt;/span&gt;
&lt;span class="c1"&gt;# {'name': 'Aya Bouchiha', 'email': 'developer.aya.b@gmail.com', 'is_admin': 'False'}
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#values"&gt;
  &lt;/a&gt;
  values()
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;values()&lt;/strong&gt;: this method returns all the given dictionary's values as a list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;products_prices_in_dollar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s"&gt;"laptop"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;"phone"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;"mouse"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;"keyboard"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;products_prices_in_dollar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;# dict_values([1000, 150, 10, 7])
&lt;/span&gt;
&lt;span class="c1"&gt;# converts from dollar to moroccan dirham
# 1000+150+10+7 = 1167$ =&amp;gt; 11670 moroccan dirhams
&lt;/span&gt;&lt;span class="n"&gt;sum_in_dirham&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;products_prices_in_dollar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="c1"&gt;# you have to pay 11670 dirhams
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;pay&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;sum_in_dirham&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;dirhams&lt;/span&gt;&lt;span class="s"&gt;')
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;clear()&lt;/strong&gt;: deletes all the dictionary's items;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;copy()&lt;/strong&gt;: returns a copy of the specified dictionary.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;setdefault()&lt;/strong&gt;:  returns the value of the given key If It exists, otherwise, It create a new item with the given key and value and returns its value.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;values()&lt;/strong&gt;:returns all the given ditionary's values as a list&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/"&gt;www.w3schools.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#suggested-posts"&gt;
  &lt;/a&gt;
  Suggested posts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/all-you-need-to-know-about-python-json-module-5ef0"&gt;All You Need To Know About Python JSON Module&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/5-helpful-python-math-module-methods-44gf"&gt;5 Helpful Python Random Module Methods&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/5-helpful-python-math-module-methods-44gf"&gt;5 Helpful Python Math Module Methods&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/5-useful-python-string-methods-4pe7"&gt;5 Useful Python String Methods&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To Contact Me:&lt;/p&gt;

&lt;p&gt;email: &lt;a href="mailto:developer.aya.b@gmail.com"&gt;developer.aya.b@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;telegram: &lt;a href="https://t.me/AyaBouchiha"&gt;Aya Bouchiha&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope you enjoyed reading this post :)&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>programming</category>
    </item>
    <item>
      <title>Vue Vs. React: What Is Easier? What Is Trending? Detailed Guide With All +/- [2021]</title>
      <author>Nastassia Ovchinnikova</author>
      <pubDate>Fri, 06 Aug 2021 08:31:41 +0000</pubDate>
      <link>https://dev.to/flatlogic/vue-vs-react-what-is-easier-what-is-trending-detailed-guide-with-all-2021-26m0</link>
      <guid>https://dev.to/flatlogic/vue-vs-react-what-is-easier-what-is-trending-detailed-guide-with-all-2021-26m0</guid>
      <description>&lt;p&gt;The holy war between Vue and React still keeps going. Though both React and Vue basically resolve the same level issues, let’s add some fuel to the fire! As experts in web development since 2013, we’ve worked a lot with both frameworks, React and Vue. So, here is our two cents’ worth.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Btw, have you heard the joke?&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;— Angular is for jobs&lt;/em&gt;&lt;br&gt;
&lt;em&gt;—  Jquery is for those who stuck in the mid-2000s&lt;/em&gt;&lt;br&gt;
&lt;em&gt;—  React is for trends&lt;/em&gt;&lt;br&gt;
&lt;em&gt;—  Vue is for peace of mind&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Both Vue and React.js are popular first-class technologies which are well known for their flexibility and power in terms of building progressive web applications. But, Reactjs is a library, and Vue is a framework. &lt;/p&gt;

&lt;p&gt;What is a library? Library is a collection of reusable functions (classes); whereas a framework is a piece of code where the architecture can’t be changed but can be extended with specific functionality. &lt;/p&gt;

&lt;p&gt;Framework from the start of development sets the rules for building app architecture, setting its default behavior. Whereas a library is defined as a set of similar functionalities, the framework may include several such .&lt;/p&gt;

&lt;p&gt;One more principal difference between libraries and frameworks is an inversion of control. It means that the framework uses (calls) functions of the user code and this user code is embedded in the default structure of the framework. When you work with a library, your code calls the library functions and then gets control. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--spiKnpbO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/06/Screenshot-2021-06-24-at-18.53.01-1.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--spiKnpbO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/06/Screenshot-2021-06-24-at-18.53.01-1.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s just say, If you’re a newbie programmer, a framework can help you to do complex things a bit faster. But Vue also has its guideline and set of rules to follow and learn.&lt;/p&gt;

&lt;p&gt;Some say that Vue is much easier, or, let’s say, more ergonomic, in terms of general logic, comprehension, and web development; others will go for React, due to its similarity to Javascript and because being under the aegis of Facebook it works better for large scale projects, has reusable components and a wider support community than Vue. Besides, React is also often favored for its more minimalistic approach and a stronger focus on UI. However, all these modern frameworks are basically pretty much the same and you should first note the local market demand, and secondly the scale and the specification of the project you need to develop.&lt;/p&gt;

&lt;p&gt;There are fewer Vue projects on the development market, and consequently, there is lower competition among coders. Also, you may have heard that Vue is an instrument to build your apps faster, but we won’t be so categorical, because it also depends on the expertise of the developer. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-and-vue-similarities"&gt;
  &lt;/a&gt;
  React and Vue Similarities
&lt;/h2&gt;

&lt;p&gt;Both Vue and React.js offer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Extremely flexible and relatively fast development;&lt;/li&gt;
&lt;li&gt;Component-based architecture with lifecycle methods;&lt;/li&gt;
&lt;li&gt;Virtual DOM usage (but React and Vue interact with DOM differently);&lt;/li&gt;
&lt;li&gt;Reusable components;&lt;/li&gt;
&lt;li&gt;An open and progressive community;&lt;/li&gt;
&lt;li&gt;Rich selection of libraries and tools.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-is-vuejs"&gt;
  &lt;/a&gt;
  What is Vue.js?
&lt;/h3&gt;

&lt;p&gt;Vue.js is a JavaScript framework widely used in web development for building modern and scalable apps. Evan You, the Chinese software developer, created Vue.js and maintained it with a team of 24 developers. Vue.js Completion for components, directives, props and methods in templates.&lt;/p&gt;

&lt;p&gt;Vue is known for being implemented on 9gag, Alibaba, Behance, BMW, Gitlab, Euronews, Vice, Trustpilot, Wizz Air, Adobe Portfolio, PayPal, DropBox. &lt;/p&gt;

&lt;p&gt;Vue has an MVC pattern, a way of processing data that is focused on the view layer, that lets you add changes to the DOM; i.e. you don’t have to worry about how your application’s UI is rendered or how changes are applied to the DOM. The DOM is responsible for setting  relationships among the elements in the HTML file.&lt;/p&gt;

&lt;p&gt;Vue.JS offers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Simplicity&lt;/li&gt;
&lt;li&gt;Built-in directives and event handlers &lt;/li&gt;
&lt;li&gt;Coding assistance for different languages inside template, script and style tags in .vue files&lt;/li&gt;
&lt;li&gt;Extraction of component and renaming component refactorings&lt;/li&gt;
&lt;li&gt;Code snippets&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T6I9ueKE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/06/288d1fe075ac4fe014fbb9b117a03eca-1.jpeg%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T6I9ueKE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/06/288d1fe075ac4fe014fbb9b117a03eca-1.jpeg%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-reactjs"&gt;
  &lt;/a&gt;
  What is React.js?
&lt;/h3&gt;

&lt;p&gt;React.js (also known as React or ReactJS) is a super popular library to create beautiful and highly interactive single-page applications. The instruments of React are components that are easy to collect, reuse, and test out. React.js is perfect for building large web applications.&lt;/p&gt;

&lt;p&gt;We already love React for being implemented on the sites of Tesla, HBO, WhatsApp, Netflix, New York Times, Facebook, Instagram, Twitter, Codeacademy, Spotify, and Yahoo! Now, React has 171k stars on GitHub and more than 10,164,796 downloads on NPM.&lt;/p&gt;

&lt;p&gt;React offers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rich package ecosystem &lt;/li&gt;
&lt;li&gt;Extremely common world usage and wide support&lt;/li&gt;
&lt;li&gt;High demand in workforce&lt;/li&gt;
&lt;li&gt;Optimal for development of lightweight applications and medium-size projects apps, as well as large enterprise-scale systems.&lt;/li&gt;
&lt;li&gt;Cross-platform with React Native&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#popularity"&gt;
  &lt;/a&gt;
  Popularity
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--llOGKxo4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/06/Screenshot-2021-06-03-at-12.41.36-1536x673.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--llOGKxo4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/06/Screenshot-2021-06-03-at-12.41.36-1536x673.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have checked the graphs of stateofjs and noticed the eloquent statistics showing the continuing popularity of the JS frameworks. According to this data, for the last 5 years React.js has held the leading position over Vue.js.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jOvIodH5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/06/Screenshot-2021-06-03-at-12.41.04-1536x675.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jOvIodH5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/06/Screenshot-2021-06-03-at-12.41.04-1536x675.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s also check the Google Trends graphics. Here the red one speaks for React.js, and the blue color speaks for Vue. And again, we see that the popularity of React is maintained/unchanging.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zRTICQIP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/06/Screenshot-2021-06-25-at-16.33.18-1536x519.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zRTICQIP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/06/Screenshot-2021-06-25-at-16.33.18-1536x519.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Plus, to be total sure that React still has all the aces, see the downloads on the npm trends:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JhLUnqQ1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/06/Screenshot-2021-06-23-at-12.27.09-1536x586.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JhLUnqQ1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/06/Screenshot-2021-06-23-at-12.27.09-1536x586.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We’ve checked also the coders’ darling, Stackoverflow; and realised that there are 80,064 questions tagged with  #vuejs and 314,882 questions tagged with #reactjs; that only proves that Reacjs market share is four times higher.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#developer-market"&gt;
  &lt;/a&gt;
  Developer market
&lt;/h3&gt;

&lt;p&gt;We went through everything from Indeed to Glassdoor to find out the actual demand for Vue and React developers in the world. See what is going on:&lt;/p&gt;

&lt;p&gt;React.js experts still get to be right at the top. We’re not short of React developers, because there are lots of junior specialists on the market which are often sold at the rate of seniors; and an average hourly rate is hovering somewhere about $60 per hour of custom development. In the USA, the annual income of a good specialist is $80000 roughly. Nevertheless it’s still pretty expensive to hire developers locally, and it’s a common practice for companies to hire workers from the countries of Eastern and Central Europe where the rate is significantly lower.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qW-BxK4E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/06/Screenshot-2021-06-17-at-18.24.04-1536x640.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qW-BxK4E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/06/Screenshot-2021-06-17-at-18.24.04-1536x640.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Top-rated Vue.js developers get around $90000 per year because there are relatively fewer of such specific specialists but again, it’s all individual and depends on the type of the project, overall experience of a person and other factors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ngp4URuU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/06/Screenshot-2021-06-17-at-18.39.26-1536x644.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ngp4URuU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/06/Screenshot-2021-06-17-at-18.39.26-1536x644.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax-and-structure"&gt;
  &lt;/a&gt;
  Syntax and Structure 🧱
&lt;/h3&gt;

&lt;p&gt;Probably, this is the most crucial difference between React and Vue; how the view layer is developed. &lt;/p&gt;

&lt;p&gt;React elements and components may be written with the help of JSX syntax. JSX is an XML/HTML-like syntax to transform HTML-like text into standard JavaScript objects. It means that first you can write HTML/XML-like structures, then Babel will transform your code into JS code. Though you can do this without using JSX.&lt;/p&gt;

&lt;p&gt;Vue.js uses an HTML-based template syntax and can be parsed by spec-compliant browsers and HTML parsers. Vue.js templates are parsed into Virtual DOM render functions that help to significantly increase performance. If you know how to work with DOM concepts, write render functions instead of out-of-the-box templates, with optional JSX support. &lt;/p&gt;

&lt;p&gt;React has no architecture pattern/structure for the applications. React provides the view layer of an app that is made up of components which render the underlying user interface when the input data changes. As you probably know, create-react-app gives us everything we need to develop a React application. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#runtime-performance"&gt;
  &lt;/a&gt;
  Runtime Performance
&lt;/h3&gt;

&lt;p&gt;Since both of these technologies are under constant development, I would not recommend you rely mainly on this factor. Both Vue and React are great in terms of performance judging by two major factors to evaluate like start-up time and runtime performance. &lt;/p&gt;

&lt;p&gt;React’s component-based architecture and virtual DOM directly influence the page loading process. All this adds a seamless app performance and pleasing user experience. Though it may seem that Vue is a bit faster in memory allocation and startup times, React is a bit faster at runtime. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#learning-curve"&gt;
  &lt;/a&gt;
  Learning Curve
&lt;/h3&gt;

&lt;p&gt;You’ll hear dozens of opinions that Vue is easier than React. Vue.js is a template language for writing its components; and has a number of built-in templates that help to speed up development just from scratch. But, it’s all about syntax. If you’re not a big fan of boilerplates, templates and need something more functional, then get started with React. And there are more open source packages available for React than for Vue.js.&lt;/p&gt;

&lt;p&gt;If you are a newbie in web development, we would personally recommend starting with Vue, because it is way easier and has a friendlier learning curve. Why? Because React is a full-fledged library, and in order to succeed with React.js, a web developer has to know other JS libraries to make a logically consistent system. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing 🧪
&lt;/h3&gt;

&lt;p&gt;Testing in JavaScript frameworks usually runs via the well-known libraries and plugins like Testing Library, Jest, Mocha, Enzyme. &lt;/p&gt;

&lt;p&gt;React Testing library as well as Vue Testing library are built-in libraries that let you test various UI components and significantly minimize the bugs in your app. &lt;/p&gt;

&lt;p&gt;Another popular testing library for React.js or Vue.js is Jest. With the help of manual mocks it lets you easily create various types of tests, replacing the dependencies you don’t control with something you do. How to create a Mock Function? Type in: jest.fn()&lt;/p&gt;

&lt;p&gt;Mocha, running on Node.js, is one more JavaScript framework for testing components. Mocha can execute tests right in the browser. But Mocha doesn’t simulate a browser environment; being in Node.js it doesn’t reset the state, and doesn’t execute each test in an isolated context.&lt;/p&gt;

&lt;p&gt;Also, you may use Ionic React Test Utils made on TypeScript for testing React Ionic Apps. &lt;br&gt;
Plus, to test your app in real browsers you may refer to Karma test runner, and do unit-testing for Vue or React app components, or any other JS component. Karma just launches an HTTP server and generates an HTML file.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#debugging"&gt;
  &lt;/a&gt;
  Debugging 🔍
&lt;/h3&gt;

&lt;p&gt;Regarding bugs in React or Vue, we are usually faced with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;UI bugs;&lt;/li&gt;
&lt;li&gt;Lack of a parent element or fragment;&lt;/li&gt;
&lt;li&gt;Incorrect binding;&lt;/li&gt;
&lt;li&gt;Logic bugs;&lt;/li&gt;
&lt;li&gt;Networking bugs behaving as we expect.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How to debug in Vue.js or React.js? The most evident way to handle and fix your errors is using well-known VSCode. Set up the debugger extension (Chrome or Firefox). Follow the official debugging documentation from Vue.js here.&lt;/p&gt;

&lt;p&gt;After the installation process, open the &lt;code&gt;launch.json&lt;/code&gt; file and paste in the corresponding configuration based on your browser selection.&lt;/p&gt;

&lt;p&gt;Other tools and libraries for testing Vue.js applications may be found here. &lt;/p&gt;

&lt;p&gt;How to debug React components? Install React DevTools. Or, you can pick one of  the best React Debugging Libraries here.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#ecosystem-routing-and-state-management"&gt;
  &lt;/a&gt;
  Ecosystem. Routing and State management
&lt;/h3&gt;

&lt;p&gt;Both Vue and React are known for their extensive ecosystems. However, React differs from Vue, in that its ecosystem updating and maintaining are based on the developer community rather than managed through one center. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#routing"&gt;
  &lt;/a&gt;
  Routing
&lt;/h3&gt;

&lt;p&gt;Any application needs a good routing solution and state management solution. &lt;/p&gt;

&lt;p&gt;Routing will head the user to different pages around the website; while rendering will put those pages on the UI. Routing in Reactjs is performed with React Router.&lt;/p&gt;

&lt;p&gt;React Router is a collection of navigational components that compose declaratively with your application. This is a framework that allows users to navigate among views of various components in React. Application made with React, allows changing the browser URL, and enables synchronising the URL with the UI. Plus, the app gets three basic pages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a home page, &lt;/li&gt;
&lt;li&gt;a contact page, and&lt;/li&gt;
&lt;li&gt;an about page.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vue has its own built-in sustainable Router library, called Vue Router. But of course you still can use 3rd party routers. Also, Vuejs has a standard Vuex library to handle centralized data state management.&lt;/p&gt;

&lt;p&gt;State Management&lt;br&gt;
Here are several instruments for state management for you to choose: &lt;/p&gt;

&lt;p&gt;1.Redux state container and Redux Toolkit &lt;br&gt;
2.MobX and MobX State Tree &lt;br&gt;
3.Recoil&lt;br&gt;
4.Zustand &lt;br&gt;
5.AKITA&lt;br&gt;
6.React Hooks libraries&lt;/p&gt;

&lt;p&gt;Vue has its own implementation called Vuex, see above, an Elm-inspired state management solution that integrates deeply into Vue and provides a superior development experience to other similar libraries.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#documentation"&gt;
  &lt;/a&gt;
  Documentation
&lt;/h3&gt;

&lt;p&gt;One of the crucial points that we especially love and that distinguishes Vue from React is style guide existence that may become a super manual for novice coders. As well as all the rest of the documentation, it is an in-depth source of explanations for Vue-specific code:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to write multi-world component names?&lt;/li&gt;
&lt;li&gt;How to do single-file component file naming?&lt;/li&gt;
&lt;li&gt;Prop name casing and many more…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;n comparison to any other free frameworks, Vue documentation is really next level; it is utterly comprehensive and easy to handle even if you still have no great expertise in Javascript.&lt;/p&gt;

&lt;p&gt;React.js also has good documentation, but it’s not as well-structured and detailed as Vue’s.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#community"&gt;
  &lt;/a&gt;
  Community 🌎
&lt;/h3&gt;

&lt;p&gt;Vue has already got 185k stars on GitHub and this is not the limit; the community is still growing. You may easily contribute the code; also you can get in touch with the expert world in chat, forum, or report an issue on GitHub.&lt;/p&gt;

&lt;p&gt;React community is also well-developed and even more: since React is a bit older than Vue, and it also has a great army of supporters from all over the world. The React ecosystem is really strong and flexible and this is proven not only by GitHub’s 170k stars, but also by the 11,034,440 weekly downloads on NPM.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#sumup-vue-vs-react-benchmarking"&gt;
  &lt;/a&gt;
  Sum-up. Vue vs. React Benchmarking🔪
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VHXjIGzj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/06/Frame-2496egssg-1536x1152.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VHXjIGzj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/06/Frame-2496egssg-1536x1152.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#react-disadvantages"&gt;
  &lt;/a&gt;
  React Disadvantages
&lt;/h3&gt;

&lt;p&gt;😑  Working with React syntax can be tedious, you have to build UI elements individually that is time-consuming with view-rendering instructions. &lt;/p&gt;

&lt;p&gt;😑 You have to use third-party libraries tools like Redux, Next.js, GraphQL which can be no longer available or maintained over time&lt;/p&gt;

&lt;p&gt;😑 Working with library may result in writing more erroneous code, because here you have more freedom&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#vue-disadvantages"&gt;
  &lt;/a&gt;
  Vue Disadvantages
&lt;/h3&gt;

&lt;p&gt;😑 Vue is more opinionated framework with its inner rules; it relies on quite complex mechanisms to implement its two-way binding. &lt;/p&gt;

&lt;p&gt;Take into consideration:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Property addition and deletion of an object&lt;/li&gt;
&lt;li&gt;Array length modifications using the corresponding property&lt;/li&gt;
&lt;li&gt;Direct assignment of an array element by index&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#useful-resources-for-developers-of-all-levels"&gt;
  &lt;/a&gt;
  Useful Resources for Developers of All Levels
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#react-resources"&gt;
  &lt;/a&gt;
  React Resources:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/enaqx/awesome-react"&gt;Awesome React&lt;/a&gt;: an ultimate list of tools for the React ecosystem; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://flatlogic.com/blog/react-table-guide-and-best-react-table-examples/"&gt;React table guide and best react table examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flatlogic.com/blog/12-react-boilerplates-and-starter-kits-for-developers-in-2021/"&gt;12+ React Boilerplates &amp;amp; Starter Kits For Developers In 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flatlogic.com/blog/how-to-choose-the-best-react-drag-and-drop-top-15-free-libraries-to-set-up/"&gt;Top 15 React Drag and Drop Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flatlogic.com/blog/best-react-open-source-projects/"&gt;Best React Open Source Projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codesandbox.io/examples/package/react-datepicker"&gt;React Date Picker Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flatlogic.com/blog/6-reasons-to-use-reactjs-for-web-development/"&gt;6 Reasons To Use ReactJS For Web Development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#vue-resources"&gt;
  &lt;/a&gt;
  Vue Resources:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/vuejs/awesome-vue"&gt;Awesome Vue&lt;/a&gt;: a detailed list of useful plugins and libraries for Vue.js;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://flatlogic.com/blog/top-16-vue-open-source-projects/"&gt;Top 16+ Vue Open Source Projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/abiolaesther_/an-overview-of-the-top-10-vue-ui-component-libraries-in-2021-3dhm"&gt;Top 10 Vue UI Component Libraries in 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flatlogic.com/blog/top-6-vue-admin-templates/"&gt;Top 6 Vue Admin Templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vuetifyjs.com/en/"&gt;Vue Component Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vuetifyjs.com/en/"&gt;Vuetify, Vue UI Library with Material Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#recap"&gt;
  &lt;/a&gt;
  Recap
&lt;/h2&gt;

&lt;p&gt;Frankly speaking, there is no answer to the issue: which one is better. Both React and Vue are widely used in web development to create cost-effective large scale or medium-size websites or apps. Everything depends on the tasks, complexity, and scale of the project.&lt;/p&gt;

&lt;p&gt;The job market is booming and everyday more new frameworks come up. It is great when you’re like a Swiss army knife and can quickly learn and adapt to any customer requirements; no matter which framework is your personal favourite. &lt;/p&gt;

&lt;p&gt;The only reasonable way to stay competitive and stay afloat is to develop a sound judgment, develop personal expertise, learning everything where Javascript is involved. Learn the language, learn the algorithms and app architecture, check the best practices, and remember that only sky is the limit.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#about-flatlogic"&gt;
  &lt;/a&gt;
  About Flatlogic
&lt;/h2&gt;

&lt;p&gt;Web development is our true love. We love beautiful things that work well. We love processes that run smoothly. Since 2014, we’ve been speeding up web development creating web &amp;amp; mobile app templates with the help of React, Vue, Angular, React Native, and Bootstrap.&lt;/p&gt;

&lt;p&gt;We’re always eager to help you with your next project and we will be enlightened to estimate or develop your project, big or small, eCommerce, CMS, CMR, or anything you may need. Feel free to leave your question for us on our rapidly growing forum.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/WpVQsS-Bb3U"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;You might also like these articles:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://dev.to/flatlogic/javascript-tabs-save-space-examples-of-tabbed-widgets-3d1i"&gt;Javascript Tabs: Save Space! Examples Of Tabbed Widgets&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/flatlogic/react-table-guide-and-best-react-table-examples-56n1"&gt;React Table Guide And Best React Table Examples&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/flatlogic/12-javascript-image-manipulation-libraries-for-your-next-web-app-1e0d"&gt;12 JavaScript Image Manipulation Libraries For Your Next Web App&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>vue</category>
      <category>webdev</category>
      <category>frontend</category>
    </item>
    <item>
      <title>NextJS Performance Checklist</title>
      <author>Ben Read</author>
      <pubDate>Fri, 06 Aug 2021 08:05:28 +0000</pubDate>
      <link>https://dev.to/endymion1818/nextjs-performance-checklist-5gjb</link>
      <guid>https://dev.to/endymion1818/nextjs-performance-checklist-5gjb</guid>
      <description>&lt;p&gt;&lt;strong&gt;Building React applications with NextJS is a great way of getting things in front of customers quickly. But you might find that they aren't using your site because it's too slow. Here's a list of things you might be able to do to improve the performance of your NextJS application.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I've geared this towards NextJS for a few specifics I wanted to include, but this list can be applied more generally too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#applications"&gt;
  &lt;/a&gt;
  Applications
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Frontends are entirely cached on CDNs wherever possible ("Jamstacked" &lt;a href="https://jamstack.org/"&gt;https://jamstack.org/&lt;/a&gt;) &lt;/li&gt;
&lt;li&gt;Where that’s not possible, pages are constructed at build time or on the server using Incremental Static Regeneration (&lt;a href="https://www.smashingmagazine.com/2021/04/incremental-static-regeneration-nextjs/"&gt;https://www.smashingmagazine.com/2021/04/incremental-static-regeneration-nextjs/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Make use of module replacement strategies in links to internal routes (&lt;a href="https://nextjs.org/docs/api-reference/next/link"&gt;https://nextjs.org/docs/api-reference/next/link&lt;/a&gt; )&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#images"&gt;
  &lt;/a&gt;
  Images
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Images are fetched either on build or on request from a CDN &lt;/li&gt;
&lt;li&gt;Images are fetched at the correct dimensions and most performant formats (&lt;a href="https://ericportis.com/posts/2014/srcset-sizes/"&gt;https://ericportis.com/posts/2014/srcset-sizes/&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;High priority images (those in the viewport when the page is opened) use responsive &lt;code&gt;preload&lt;/code&gt; (&lt;a href="https://www.bronco.co.uk/our-ideas/using-relpreload-for-responsive-images/"&gt;https://www.bronco.co.uk/our-ideas/using-relpreload-for-responsive-images/&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Low priority images are downloaded asynchronously using loading="lazy"&lt;/li&gt;
&lt;li&gt;Make use of application image components where possible (&lt;a href="https://nextjs.org/docs/api-reference/next/image"&gt;https://nextjs.org/docs/api-reference/next/image&lt;/a&gt; )&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#styles"&gt;
  &lt;/a&gt;
  Styles
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Don’t use css-in-js (&lt;a href="https://pustelto.com/blog/css-vs-css-in-js-perf/"&gt;https://pustelto.com/blog/css-vs-css-in-js-perf/&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Only used styles are sent to the client (&lt;a href="https://markmurray.co/blog/tree-shaking-css-modules/"&gt;https://markmurray.co/blog/tree-shaking-css-modules/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;If using css-in-js try to make css as static as possible (&lt;a href="https://itnext.io/how-to-increase-css-in-js-performance-by-175x-f30ddeac6bce"&gt;https://itnext.io/how-to-increase-css-in-js-performance-by-175x-f30ddeac6bce&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;CSS is minified&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#fonts"&gt;
  &lt;/a&gt;
  Fonts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Use font substitution (&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display"&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Use fonts from a CDN&lt;/li&gt;
&lt;li&gt;Download only necessary fonts&lt;/li&gt;
&lt;li&gt;Subset fonts where possible (&lt;a href="https://developers.google.com/fonts/docs/getting_started#specifying_script_subsets"&gt;https://developers.google.com/fonts/docs/getting_started#specifying_script_subsets&lt;/a&gt; )&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#scripts"&gt;
  &lt;/a&gt;
  Scripts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Only interactive elements are hydrated on the client (&lt;a href="https://medium.com/@luke_schmuke/how-we-achieved-the-best-web-performance-with-partial-hydration-20fab9c808d5"&gt;https://medium.com/@luke_schmuke/how-we-achieved-the-best-web-performance-with-partial-hydration-20fab9c808d5&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Only used JavaScript is sent to the client (&lt;a href="https://web.dev/codelab-remove-unused-code/"&gt;https://web.dev/codelab-remove-unused-code/&lt;/a&gt;, &lt;a href="https://developers.google.com/web/fundamentals/performance/optimizing-javascript/tree-shaking"&gt;https://developers.google.com/web/fundamentals/performance/optimizing-javascript/tree-shaking&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Consider using Preact instead of React (&lt;a href="https://dev.to/dlw/next-js-replace-react-with-preact-2i72"&gt;https://dev.to/dlw/next-js-replace-react-with-preact-2i72&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;JavaScript is minified&lt;/li&gt;
&lt;li&gt;Scripts are compressed using 

&lt;ul&gt;
&lt;li&gt;GZip (good)&lt;/li&gt;
&lt;li&gt;Brotli (better)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;JavaScript bundles are split to allow for effective download &amp;amp; parsing&lt;/li&gt;
&lt;li&gt;Only essential JavaScript is blocking&lt;/li&gt;
&lt;li&gt;Use web workers for memory intensive operations&lt;/li&gt;
&lt;li&gt;Use more performant libraries (or use native JavaScript) where possible (eg. Lodash vs Underscore, Temporal API vs Moment)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#data"&gt;
  &lt;/a&gt;
  Data
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Only fetch data you need (consider using GraphQL)&lt;/li&gt;
&lt;li&gt;No API chaining (consider using GraphQL)&lt;/li&gt;
&lt;li&gt;Minimise data normalisation (offload to a standalone function or backend)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#thirdparty-scripts"&gt;
  &lt;/a&gt;
  Third-party scripts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Third party scripts are non-blocking (&lt;a href="https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/loading-third-party-javascript"&gt;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/loading-third-party-javascript&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Use resource hinting to parallelise downloads (&lt;a href="https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/loading-third-party-javascript"&gt;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/loading-third-party-javascript&lt;/a&gt; )&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#perceived-performance"&gt;
  &lt;/a&gt;
  Perceived performance
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;UI placeholders are used for loading states&lt;/li&gt;
&lt;li&gt;Loss of connectivity results in a notification and showing the previous state (&lt;a href="https://www.apollographql.com/docs/react/data/queries/#previousdata"&gt;https://www.apollographql.com/docs/react/data/queries/#previousdata&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Completed action states are shown when data has been sent not received by the server&lt;/li&gt;
&lt;li&gt;Prevent jumping content / layout shift&lt;/li&gt;
&lt;li&gt;Reduce DNS resolution &amp;amp; SSL negotiation time where possible (&lt;a href="https://zoompf.com/blog/2014/12/optimizing-tls-handshake/"&gt;https://zoompf.com/blog/2014/12/optimizing-tls-handshake/&lt;/a&gt; )
Testing and analysis&lt;/li&gt;
&lt;li&gt;PRs that degrade performance are identified in the pipeline&lt;/li&gt;
&lt;li&gt;Frontend performance is measured (&lt;a href="https://speedcurve.com/"&gt;https://speedcurve.com/&lt;/a&gt; ) &lt;/li&gt;
&lt;li&gt;Frontend performance is regularly analysed&lt;/li&gt;
&lt;li&gt;Analysis is turned into actionable backlog items&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are two benefits to implementing as many of these as you can: conversions will likely improve because more users can use your app. And also you will save your own costs: less downloads, less bandwith and where you can cache from origin, you'll save on infrastructure costs.&lt;/p&gt;

&lt;p&gt;I'm sure this list isn't quite complete, let me know if there's anything I've missed!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>nextjs</category>
    </item>
    <item>
      <title>Introduction to Machine Learning with Python.</title>
      <author>PhylisChumba</author>
      <pubDate>Fri, 06 Aug 2021 07:34:40 +0000</pubDate>
      <link>https://dev.to/phylis/introduction-to-machine-learning-with-python-2ak0</link>
      <guid>https://dev.to/phylis/introduction-to-machine-learning-with-python-2ak0</guid>
      <description>&lt;h6&gt;
  &lt;a href="#basics"&gt;
  &lt;/a&gt;
  BASICS
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#what-is-machine-learning-ml"&gt;
  &lt;/a&gt;
  What is Machine Learning (ML).
&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;Machine learning&lt;/strong&gt; is a type of Artificial Intelligence that extract patterns out of raw data by using an algorithm or method.&lt;/p&gt;

&lt;p&gt;The main focus of ML is to allow computer systems learn from experience without explicitly programmed or human intervention.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#need-for-machine-learning"&gt;
  &lt;/a&gt;
  Need for Machine Learning.
&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Human beings at this moment, are the most intelligent and advanced species on earth because they can think, evaluate and solve complex problems. On the other side, Artificial intelligence is in its initial stage and haven't surpassed human intelligence.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Due to growing volumes and varieties of available data, computational processing that is cheaper and more powerful, and affordable data storage, Machine Learning is essential for;&lt;br&gt;
*Producing models that can analyze bigger, more complex data and deliver faster and more accurate results.&lt;br&gt;
*Building precise models that ensures an organization has a better chance of identifying profitable opportunities or avoiding unknown risks.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;
  &lt;a href="#why-and-when-to-make-machines-learn"&gt;
  &lt;/a&gt;
  Why and When to Make Machines Learn
&lt;/h6&gt;

&lt;p&gt;There are several circumstances where we need machines to take data-driven decisions with efficiency and at a huge scale such as;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lack of human expertise.&lt;/strong&gt;&lt;br&gt;
Scenarios where there is lack of human expertise such as navigation in unknown territories or spatial planets need machine learning.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dynamic Scenarios&lt;/strong&gt;&lt;br&gt;
Scenarios that keep changing over time  need a machine to learn and take various data driven decisions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Difficulty in translating expertise into computational task&lt;/strong&gt;&lt;br&gt;
There can be various domains in which humans have their expertise but they can't translate expertise into computational tasks such speech recognition and cognitive tasks.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#challenges-in-machine-learning"&gt;
  &lt;/a&gt;
  Challenges in Machine Learning
&lt;/h6&gt;

&lt;p&gt;While Machine learning is rapidly evolving, it still has a long way to go. The reason behind this is because ML has not been able to overcome challenges such as;&lt;/p&gt;

&lt;p&gt;Time-consuming task- Data acquisition, feature selection and retrieval consume a lot of time.&lt;/p&gt;

&lt;p&gt;Lack of specialist Persons- As ML is still evolving, availability of experts is a tough job.&lt;/p&gt;

&lt;p&gt;Issues of Overfitting and Underfitting- If the model is overfitting or underfitting, it cannot be represented well for the problem.&lt;/p&gt;

&lt;p&gt;Difficulty in deployment- Complexity of ML projects makes it difficult to be deployed in real life.&lt;/p&gt;

&lt;p&gt;Quality of data- Having good quality data for ML algorithms is a challenge. Use of low quality data leads to problems related to data preprocessing and feature extraction.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#applications-of-machine-learning"&gt;
  &lt;/a&gt;
  Applications of Machine Learning.
&lt;/h6&gt;

&lt;p&gt;Machine learning is the most rapidly growing technology used to solve real-world complex problems which cannot be solved by traditional approach such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Emotion analysis&lt;/li&gt;
&lt;li&gt;Stock market analysis and forecasting&lt;/li&gt;
&lt;li&gt;Speech synthesis.&lt;/li&gt;
&lt;li&gt;Customer segmentation.&lt;/li&gt;
&lt;li&gt;Fraud detection.&lt;/li&gt;
&lt;li&gt;Weather Forecasting and Prediction.&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;
  &lt;a href="#why-python-for-machine-learning"&gt;
  &lt;/a&gt;
  Why Python for Machine Learning?
&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Extensive set of packages.&lt;br&gt;
Python has an extensive and powerful set of packages ready to be used in various domains such as numpy,scipy,pandas and scikit learn.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Easy prototyping.&lt;br&gt;
Python provides easy and fast prototyping useful for developing new algorithms.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python has libraries for data loading, visualization, statistics, natural language processing and image processing which provides data scientists with a large array of general- and special-purpose functionality.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h6&gt;

&lt;p&gt;For us to work with machine learning projects we will use Pre-packaged python distribution: Anaconda.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Anaconda is a distribution of the Python and R programming languages for scientific computing, that aims to simplify package management and deployment.&lt;/li&gt;
&lt;li&gt;The distribution includes data-science packages suitable for Windows, Linux, and macOS.&lt;/li&gt;
&lt;li&gt;Anaconda comes with NumPy, SciPy, matplotlib, pandas, IPython, Jupyter Notebook, and scikit-learn.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To set up Python environment using Anaconda use the following steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Download the required installation package from Anaconda Distribution  &lt;a href="https://www.anaconda.com/products/individual"&gt;Using this Link&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can choose for windows ,Mac and Linux as per your requirement.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Next, select the python version you want to install on your machine. The latest python version is 3.9. There you will get options for 64-bit and 32-bit installer for both.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After selecting the OS and python version, it will download the Anaconda installer on your computer. Double click the file and the installer will install Anaconda package.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;
  &lt;a href="#components-of-python-ml-ecosystem"&gt;
  &lt;/a&gt;
  Components of Python ML Ecosystem.
&lt;/h6&gt;

&lt;p&gt;The core libraries that form the components of python machine learning ecosystem are;&lt;/p&gt;

&lt;p&gt;Jupyter Notebook&lt;br&gt;
It is an interactive environment for running code in the browser. It is a great tool for exploratory data analysis and is widely used by data scientists and also makes it easy to incorporate code, text, and images.&lt;/p&gt;

&lt;p&gt;NumPy&lt;br&gt;
 It is the fundamental package for scientific computing with Python which contains functionality for multidimensional arrays, high-level mathematical functions such as linear algebra operations and the Fourier transform, and pseudorandom number generators.&lt;/p&gt;

&lt;p&gt;Matplotlib&lt;br&gt;
 It is a comprehensive library for creating static, animated, and interactive visualizations in Python.&lt;/p&gt;

&lt;p&gt;Pandas&lt;br&gt;
 It is a fast, powerful, flexible and easy to use open source data analysis and manipulation tool, built on top of the Python programming language.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#knowing-your-task-and-knowing-your-data"&gt;
  &lt;/a&gt;
  Knowing Your Task and Knowing Your Data
&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;The most important part in the machine learning process is understanding the data you are working with and how it relates to the task you want to solve.&lt;/li&gt;
&lt;li&gt;It will not be effective to randomly choose an algorithm and throw your data at it.&lt;/li&gt;
&lt;li&gt;It is necessary to understand what is going on in your dataset before you begin building a model since each algorithm is different in terms of what kind of data and what problem setting it works best for.&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;
  &lt;a href="#machine-learning-approaches"&gt;
  &lt;/a&gt;
  Machine Learning Approaches.
&lt;/h6&gt;

&lt;p&gt;Once you have a clear understanding of your data, you can choose the best algorithm so solve your problem based on the following approaches.&lt;/p&gt;

&lt;p&gt;1.Supervised Learning&lt;br&gt;
In supervised Learning the user provides the algorithm with pairs of inputs and desired outputs, and the algorithm finds a way to produce the desired output given an input.&lt;/p&gt;

&lt;p&gt;The most common forms of supervised learning are &lt;strong&gt;Classification&lt;/strong&gt; and &lt;strong&gt;Regression&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Classification is used to group similar data points into different sections.&lt;br&gt;
Regression outputs a number rather than a class and is useful when predicting problems like stock prices, probability of an event and even temperature for a given day.&lt;/p&gt;

&lt;p&gt;Examples of Supervised Learning tasks are;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Predicting house prices.&lt;br&gt;
Here the inputs can be square footage, number of rooms, features, whether a house has a garden or not.&lt;br&gt;
-By leveraging data coming from thousands of houses, their features and prices, we can now train a supervised machine learning model to predict a new house’s price based on the examples observed by the model.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Detecting fraudulent activity in credit card transactions.&lt;br&gt;
Here the input is a record of the credit card transaction, and the output is whether it is likely to be fraudulent or not.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Other examples are weather prediction, stock prediction and so on&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2.Unsupervised Learning.&lt;/p&gt;

&lt;p&gt;In unsupervised learning, only the input data is known, and no known output data is given to the algorithm.&lt;/p&gt;

&lt;p&gt;An example of unsupervised learning in real life would be sorting different color coins into separate piles. By looking at their features such as color you can see which coins are &lt;strong&gt;associated&lt;/strong&gt; and &lt;strong&gt;cluster&lt;/strong&gt; them into their correct groups.&lt;/p&gt;

&lt;p&gt;Unsupervised learning is commonly used for &lt;strong&gt;Clustering&lt;/strong&gt; and &lt;strong&gt;Anomaly detection&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Clustering is the act of creating groups with different characteristics. It attempts to find various subgroups within a dataset.&lt;br&gt;
In clustering association learning uncovers the rules that describe your data.&lt;/p&gt;

&lt;p&gt;Anomaly detection is the identification of rare or unusual items that differ from majority of data.&lt;/p&gt;

&lt;p&gt;Examples of unsupervised learning tasks include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Segmenting customers into groups with similar preferences&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-Given a set of customer records, you might want to identify which customers are similar, and whether there are groups of customers with similar preferences. For a shopping site, these might be "parents", "bookworms", or "gamers". Because you don’t know in advance what these groups might be, or even how many there are, you have no known outputs.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Detecting abnormal access patterns to a website&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-To identify abuse or bugs, it is often helpful to find access patterns that are different from the norm. Each abnormal pattern might be very different, and you might not have any recorded instances of abnormal behavior. Because in this example you only observe traffic, and you don’t know what constitutes normal and abnormal behavior, this is an unsupervised problem.&lt;/p&gt;

&lt;p&gt;3.Semi-supervised Learning.&lt;/p&gt;

&lt;p&gt;It is a mix between supervised and unsupervised approaches.&lt;br&gt;
It takes the middle road by being able to mix together a small amount of labelled data with a much larger unlabeled dataset.&lt;/p&gt;

&lt;p&gt;4.Reinforcement Learning.&lt;/p&gt;

&lt;p&gt;It is less common and much more complex compared to other approaches. It does not use labels and instead uses rewards to learn.&lt;br&gt;
The approach uses occasional positive and negative feedback to reinforce behaviors.&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>python</category>
      <category>datascience</category>
    </item>
    <item>
      <title>Post On Developers Habits</title>
      <author>Akash Shah</author>
      <pubDate>Fri, 06 Aug 2021 07:30:43 +0000</pubDate>
      <link>https://dev.to/akash_dev/post-on-developers-habits-1j0o</link>
      <guid>https://dev.to/akash_dev/post-on-developers-habits-1j0o</guid>
      <description>&lt;p&gt;Hello, buddies! Bad habits are hard to break and even harder if you don't realize that what you're doing is undermining your work. If you know but don't care—that would be the worst. You lucky buddy, you are in the right article. Here are the 7 coding habits you might have and if you have them, drop it right now.&lt;/p&gt;

&lt;p&gt;For many, a programmer is a dream profession. Young (and not so) people storm the admissions offices of technical universities, study video tutorials, and laugh at clever jokes in the “Typical Programmer” communities and the like.&lt;/p&gt;

&lt;p&gt;Moreover, many people study programming at universities and training centers, sincerely believing that the cherished crust will open the doors to an exciting profession. Company representatives will line up to get a newly minted specialist in their staff. This is rarely the case. And the reason for this is the mistakes made by the programmers themselves.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cmsinstallation.blogspot.com/2021/04/habit-which-you-can-change-if-you-want.html"&gt;11 Developers Habits&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://newrelic.com/blog/nerd-life/successful-software-developers-habits"&gt;10 Habits of Highly Successful Software Developers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/unitybuddy/7-bad-coding-habits-you-should-leave-right-now-2hjn"&gt;7 Bad Coding Habits You Should Leave Right Now&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://content.techgig.com/7-habits-of-successful-developers/articleshow/72996679.cms"&gt;7 Habits of successful developers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cmsinstallation.blogspot.com/2021/04/how-to-distinguish-good-programmer-from.html"&gt;Difference between good developer and average developer&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>在網頁中使用 JavaScript 進行 MQTT 通訊</title>
      <author>黃昕暐</author>
      <pubDate>Fri, 06 Aug 2021 07:07:40 +0000</pubDate>
      <link>https://dev.to/codemee/javascript-mqtt-910</link>
      <guid>https://dev.to/codemee/javascript-mqtt-910</guid>
      <description>&lt;p&gt;MQTT 是非常輕便簡易的通訊協定, 由於大部分的 MQTT broker 都支援 websocket, 因此我們也可以在網頁中使用 MQTT, 以下以 &lt;a href="https://github.com/mqttjs/MQTT.js"&gt;MQTT.js&lt;/a&gt; 這個模組為例, 並以 &lt;a href="https://test.mosquitto.org/"&gt;https://test.mosquitto.org/&lt;/a&gt; 提供的 MQTT broker 示範：&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;test Ws mqtt.js&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/mqtt/dist/mqtt.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mqtt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ws://test.mosquitto.org:8080&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// you add a ws:// url here&lt;/span&gt;
  &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mee&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;topic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;topic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="c1"&gt;// client.end()&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;publish&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mee&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello from web!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;第 4 行是 &lt;a href="https://github.com/mqttjs/MQTT.js#browser"&gt;MQTT.js 提供的 CDN&lt;/a&gt;, 你也可以儲存一份本機檔使用。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第 8 行就是以 websocket 連上 MQTT broker, 在 test.mosquitto.org 的頁面上有說明, 不加密、不認證的測試用 broker 使用 &lt;a href="//test.mosquitto.org"&gt;8080 通訊埠&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第 9 行就可以向 MQTT broker 訂閱頻道, 並且透過第 11 行註冊 &lt;code&gt;message&lt;/code&gt; 事件的函式。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第 16 行則是在特定頻道發佈訊息。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#%E9%80%A3%E6%8E%A5%E6%94%AF%E6%8F%B4-wss-%E7%9A%84-mqtt-broker"&gt;
  &lt;/a&gt;
  連接支援 wss 的 MQTT broker
&lt;/h2&gt;

&lt;p&gt;在 https 的網頁中並不能使用未加密的 ws 協定連接 MQTT, 必須改用 wss 協定。我們測試的 test.mosquitto.org 網站也提供 wss 協定, 但要改用  8081 埠：&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mqtt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;wss://test.mosquitto.org:8081&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mee&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;topic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;topic&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;topic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="c1"&gt;// client.end()&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;publish&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mee&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello from web!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;可以用 &lt;a href="https://editor.p5js.org/codemee/sketches/4RjXx5qwz"&gt;p5.js Web Editor&lt;/a&gt; 測試。&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E9%80%A3%E6%8E%A5%E9%9C%80%E8%A6%81%E5%B8%B3%E8%99%9F%E5%AF%86%E7%A2%BC%E7%99%BB%E5%85%A5%E7%9A%84-mqtt-broker"&gt;
  &lt;/a&gt;
  連接需要帳號密碼登入的 MQTT broker
&lt;/h2&gt;

&lt;p&gt;如果 MQTT broker 需要帳密登入, 也可以在連接時加上 options 物件指定使用者名稱與密碼。在我們測試用的 test.mosquitto.org 提供有 rw/readwrite 帳密可供測試：&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rw&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="c1"&gt;// 可讀寫的測試帳戶&lt;/span&gt;
    &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;readwrite&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// 測試帳戶的密碼&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mqtt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="c1"&gt;// test.mosquitto.org 的 wss 使用 8081 埠&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;wss://test.mosquitto.org:8081&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="c1"&gt;// 連接時指定選項登入&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mee&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;topic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;topic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="c1"&gt;// client.end()&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;publish&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mee&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;可以用 &lt;a href="https://editor.p5js.org/codemee/sketches/745HI130Z"&gt;p5.js Web Editor&lt;/a&gt; 測試。&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#api-%E8%AA%AA%E6%98%8E"&gt;
  &lt;/a&gt;
  API 說明
&lt;/h2&gt;

&lt;p&gt;詳細的 &lt;a href="https://github.com/mqttjs/MQTT.js#api"&gt;API&lt;/a&gt; 可在網站上查詢。&lt;/p&gt;

</description>
      <category>mqtt</category>
      <category>javascript</category>
    </item>
    <item>
      <title>call vs apply vs bind</title>
      <author>jcfrane</author>
      <pubDate>Fri, 06 Aug 2021 07:01:02 +0000</pubDate>
      <link>https://dev.to/jcfrane/call-vs-apply-vs-bind-2d4c</link>
      <guid>https://dev.to/jcfrane/call-vs-apply-vs-bind-2d4c</guid>
      <description>&lt;p&gt;If you started your career as a javascript developer using frameworks such as vue and angular,  javascript native functions might be unfamiliar to you. If you stumbled upon functions like &lt;strong&gt;call&lt;/strong&gt;, &lt;strong&gt;apply&lt;/strong&gt;, and &lt;strong&gt;bind&lt;/strong&gt; and seems you can’t wrap your head around them, this article is for you.&lt;/p&gt;

&lt;p&gt;All these 3 methods allow you to change the &lt;em&gt;this&lt;/em&gt; context of a function.&lt;/p&gt;

&lt;p&gt;Suppose you have the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output of this call is &lt;strong&gt;undefined&lt;/strong&gt;. Because this refers to Window(if you are running the code in a browser) object and it has no &lt;em&gt;name&lt;/em&gt; property. Thus, the &lt;em&gt;undefined&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;call()&lt;/strong&gt; method&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;call()&lt;/strong&gt; basically calls a function with the given lexical context as parameter like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;human&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JC&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;human&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Outputs JC&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another thing you can do is to supply argument/s to the function like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;human&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JC&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;greeting&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;human&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hi!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Outputs Hi! JC&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;strong&gt;apply()&lt;/strong&gt; method&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;apply()&lt;/strong&gt; is just like &lt;strong&gt;call()&lt;/strong&gt; except that it accepts arguments in array like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;human&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="nx"&gt;JC&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;city&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;greeting&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; from &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;city&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;human&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Taguig&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;// Outputs Hi! JC from Taguig&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;with &lt;strong&gt;call()&lt;/strong&gt; you have to supply the arguments individually like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;human&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hi!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Taguig&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// Outputs Hi! JC from Taguig&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;strong&gt;bind()&lt;/strong&gt; method&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;bind()&lt;/strong&gt; is somewhat special. It is a higher-order function which means it returns another function when you invoke it. The function returned is curried, meaning you can call it multiple times to provide different arguments in each call. It is a complex topic you can read more about it on the internet. For now, let’s apply it on our example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;human&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JC&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;city&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;greeting&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;     &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; from &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;city&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;greet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;human&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hi!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Taguig&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Outputs Hi! JC from Taguig&lt;/span&gt;
&lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Makati&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Outputs Hello! JC from Makati&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That’s it! I hope I was able to demistified these 3 methods for you.  Thanks for reading my article!&lt;/p&gt;

&lt;p&gt;Originally posted at &lt;a href="https://www.jcfrane.com"&gt;jcfrane.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Getting started in AI</title>
      <author>AIDRI</author>
      <pubDate>Fri, 06 Aug 2021 06:52:04 +0000</pubDate>
      <link>https://dev.to/byteslash/getting-started-in-ai-46op</link>
      <guid>https://dev.to/byteslash/getting-started-in-ai-46op</guid>
      <description>&lt;p&gt;Hi guys,🖐&lt;/p&gt;

&lt;p&gt;Today I wanted to give you some tips and answer some of your questions so you can get started in the world of AI !&lt;/p&gt;

&lt;p&gt;By the end of this article, you will no longer have any fears about the difficulty of the field, one person will have become your god, you will have dozens of hours of videos to watch, and you will have plenty of project ideas for all levels !&lt;/p&gt;

&lt;p&gt;I hope you like the article, let's get started !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-is-it-necessary-to-have-significant-knowledge-in-maths-"&gt;
  &lt;/a&gt;
  I/ Is it necessary to have significant knowledge in maths ?
&lt;/h3&gt;

&lt;p&gt;It is true that at first sight, one can say to oneself that one needs advanced knowledge in maths to create a brain... In fact, not really ! It all depends on the job you want to do. Obviously, if you want to become a researcher, you will need to have a good background in mathematics. But if not, you will soon realize that high school or basic undergraduate knowledge is enough !&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j7hxOtba--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8bdda3nrd7gssste1lta.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j7hxOtba--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8bdda3nrd7gssste1lta.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Among this knowledge, I think you need to be comfortable with linear algebra, including: vectors, matrices, eigenvalues and eigenvectors, functions, derivatives, and vector and matrix calculus. Moreover, some basic notions of probability can be interesting: conditional probabilities, dependant and non-dependent elements, variance, etc...&lt;/p&gt;

&lt;p&gt;If you don't have all this knowledge, don't worry, there are plenty of mini-videos or courses to explain everything ! I would recommend three of them : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.khanacademy.org/"&gt;Khan Academy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab"&gt;3Blue1Brown on linear algebra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://ocw.mit.edu/courses/mathematics/18-06-linear-algebra-spring-2010/video-lectures/"&gt;MIT courses on linear algebra&lt;/a&gt; (there is also one I'm doing &lt;a href="https://ocw.mit.edu/resources/res-6-012-introduction-to-probability-spring-2018/"&gt;on probability&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#ii-where-to-learn-ai-"&gt;
  &lt;/a&gt;
  II/ Where to learn AI ?
&lt;/h3&gt;

&lt;p&gt;That's probably why you're here: where to learn AI. In this section, we'll talk about theoretical AI, but right after, I'll give you the best tools to code them ! &lt;/p&gt;

&lt;p&gt;To learn AI, we notice three different methods :&lt;/p&gt;

&lt;p&gt;First of all, &lt;strong&gt;MOOCs (Massive Open Online Course)&lt;/strong&gt;. These are online courses, which last several weeks, but where everyone can start them when he wants, but especially go at his own pace. There are videos, with teachers and speakers, additional documents, links to useful information, but also exercises and tests. Some of these MOOCs offer certificates that can be useful in a CV / on Linkedin. &lt;br&gt;
Here are some MOOCs that may be interesting to get started in AI :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/learn/machine-learning"&gt;Machine Learning, by Andrew Ng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/specializations/deep-learning"&gt;Deep Learning, by Andrew Ng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://deepmind.com/learning-resources/deep-learning-lecture-series-2020"&gt;Deep Learning Series 2020, by DeepMind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/reinforcement-learning--ud600"&gt;Reinforcement Learning, by Georgia Tech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://deepmind.com/learning-resources/-introduction-reinforcement-learning-david-silver"&gt;Reinforcement Learning, by the great David Silver (DeepMind)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SY8nuKR3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ikufovvn1rvp2lfheli8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SY8nuKR3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ikufovvn1rvp2lfheli8.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you will see, one person often comes up in MOOCs: Andrew Ng, he is in some way the god of MOOCs, we all already listened to him when we started AI ! There is no more reliable source. &lt;br&gt;
As you have noticed some MOOCs are expensive, you can claim financial aid, which is often granted.&lt;/p&gt;

&lt;p&gt;Then there are the &lt;strong&gt;books&lt;/strong&gt;, there are plenty of them that sometimes contain exercises with answers. Again, this allows you to go at your own pace, but you can also study a particular chapter or find information easily. Here are some books to read: (a little expensive, but the content is worth it)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Deep Learning, Aaron Courville, Ian Goodfellow and Yoshua Bengio&lt;/li&gt;
&lt;li&gt;Hands on Machine Learning with Scikit-Learn and Tensorflow, Aurélien Géron&lt;/li&gt;
&lt;li&gt;Pattern Recognition and Machine Learning, Christopher Bishop&lt;/li&gt;
&lt;li&gt;Reinforcement Learning: An Introduction, Andrew Barto, Richard Sutton&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7K9AKsRY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/78ti6d7uk9d5vtd2fsz7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7K9AKsRY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/78ti6d7uk9d5vtd2fsz7.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, the &lt;strong&gt;research papers&lt;/strong&gt;. There are plenty of them, but this is not what I would recommend for a beginner. Indeed, it is easier to follow a course where all the notions are covered than to go and find the different points by yourself (at the risk of forgetting them) and study them in depth. &lt;br&gt;
However, when you feel capable, and you see that you have a good level, you should start to detach yourself from the MOOCs to go towards papers specific to your project: it remains relatively well explained and will give you tracks to carry out your idea ! &lt;br&gt;
You have different places to read them: arxiv (the most famous), researchgate, paperswithcode (code is provided with it), but also the blogs of the big ones in the field: deepmind, openai, facebook research, etc...&lt;br&gt;
Here are some interesting ones :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.researchgate.net/publication/292074166_Mastering_the_game_of_Go_with_deep_neural_networks_and_tree_search"&gt;Mastering the game of Go with deep neural networks and tree search, by David Silver &amp;amp; al&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1706.03762"&gt;Attention is all you need, by Ashish Vaswani &amp;amp; al&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1506.01497"&gt;Faster R-CNN: towards real-time object detection with region proposal networks, by Shaoqing Ren &amp;amp; al&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1412.6980"&gt;Adam: A Method for Stochastic Optimization, by Diederik Kingma &amp;amp; al&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2005.14165"&gt;Language Models are few-show learners, by Tom Brown &amp;amp; al&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;you will find dozens of others very interesting, but I must continue my article :)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#iii-how-to-code-ais-"&gt;
  &lt;/a&gt;
  III/ How to code AIs ?
&lt;/h3&gt;

&lt;p&gt;I won't teach you how to code AIs here, but I will give you some tips to get started:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First of all, I advise you to code in Python, it is the language where the most libraries are developed. A new language is emerging : Julia, it's really nice if you want to implement IAs from scratch, but otherwise some libraries are missing !&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a_lzYMBo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/geqq29ofuiige8zwqhdm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a_lzYMBo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/geqq29ofuiige8zwqhdm.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then you have to choose a framework : to start it is interesting to have one, but when your project will become more complex, you will have to choose several. Your choice must be made between Tensorflow and PyTorch. Eventually you can use Scikit Learn.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SA-mQfEi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ifzficufoqim3dj0lkc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SA-mQfEi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ifzficufoqim3dj0lkc.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Read the documentation of your framework carefully, especially the important functions.&lt;/li&gt;
&lt;li&gt;Look at implementations on github, it is even recommended by big names (Andrew Ng). Indeed, this will not only allow you to discover your language, but also to understand in another way the paper / course you are working on.&lt;/li&gt;
&lt;li&gt;Use datasets and RL environments already made. As far as datasets are concerned, you will find plenty of them on the internet in general, which correspond to your project (you may have to rearrange the data, but not much more). Think to look on &lt;a href=""&gt;Kaggle&lt;/a&gt;, there is a "contest" section but also a "dataset" section gathering thousands of datasets ! On the RL side, you will need environments, use OpenAI-gym, they are very good and easy to use. For autonomous cars, I advise to use Carla. It is quite complete, and many tools are available (Lidar, camera, etc...).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T0Z52vFt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zs369svsyeyi9txpd16b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T0Z52vFt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zs369svsyeyi9txpd16b.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iv-interesting-projects-to-work-on"&gt;
  &lt;/a&gt;
  IV/ Interesting projects to work on
&lt;/h3&gt;

&lt;p&gt;At some point, you will have to get out of the "tutorial spiral", and start creating your own projects: you will become more and more confident in your skills, you will build a portfolio, etc...&lt;br&gt;
Here are some ideas :&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Beginner :&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;prediction of the price of a house&lt;/li&gt;
&lt;li&gt;image classification (cat / dog)&lt;/li&gt;
&lt;li&gt;chatbot&lt;/li&gt;
&lt;li&gt;classification of tweets according to emotion&lt;/li&gt;
&lt;li&gt;spam checker&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Intermediate :&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;translation&lt;/li&gt;
&lt;li&gt;personal assistant&lt;/li&gt;
&lt;li&gt;driving a car (by reinforcement learning)&lt;/li&gt;
&lt;li&gt;Moon Lander (by reinforcement learning)&lt;/li&gt;
&lt;li&gt;detection of emotions on a face&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Advanced :&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;summarize a text&lt;/li&gt;
&lt;li&gt;chess player&lt;/li&gt;
&lt;li&gt;Robotics (on OpenAI gym)&lt;/li&gt;
&lt;li&gt;text generation&lt;/li&gt;
&lt;li&gt;math solver (addition, subtraction, modulo, etc...)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally, you can try the &lt;a href="https://www.kaggle.com/"&gt;Kaggle contests&lt;/a&gt;, many contests are available with lots of dataset. The goal is of course to make the best AI possible, using an AI model (no need to invent one) and to "tune" it !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#v-conclusion"&gt;
  &lt;/a&gt;
  V/ Conclusion
&lt;/h3&gt;

&lt;p&gt;The field of AI is therefore quite accessible to everyone. You just need to have a basic knowledge of mathematics, and to start studying courses and books. Coding is also the best way to know your skills, and to reassure yourself about the apparent complexity of a project ! &lt;/p&gt;

&lt;p&gt;I hope I've motivated you to get into AI !&lt;/p&gt;

&lt;p&gt;Adrien&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>career</category>
      <category>programming</category>
      <category>machinelearning</category>
    </item>
  </channel>
</rss>
