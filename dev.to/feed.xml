<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Why you should learn Zig</title>
      <author>Hanna</author>
      <pubDate>Mon, 15 Mar 2021 18:28:21 +0000</pubDate>
      <link>https://dev.to/hanna/why-you-should-learn-zig-329a</link>
      <guid>https://dev.to/hanna/why-you-should-learn-zig-329a</guid>
      <description>&lt;p&gt;There is a lot of programming languages in the world, why create another, or more relevantly, why learn another? Today we're going to be discussing the programming language named &lt;a href="https://ziglang.org"&gt;Zig&lt;/a&gt; and why I have fallen in love with it.&lt;/p&gt;

&lt;p&gt;Let's start from the beginning zig is meant to "fix" a lot of issues other programming languages have, a good video to watch is &lt;a href="https://www.youtube.com/watch?v=Gv2I7qTux7g"&gt;The Road to Zig 1.0&lt;/a&gt; by Andew Kelley, which goes into a lot of the nitpicking on other languages such as C, Rust, D, and others. Now don't get me wrong, the other languages Zig is meant to compete against are great languages, they power a lot of technologies, however there are some things that just aren't right in my opinion, and that's where Zig comes in.&lt;/p&gt;

&lt;p&gt;One thing Zig provides is a featureful toolset out of the box, and when I say featureful, I mean featureful. A general overview of the Zig language and toolchain can be seen &lt;a href="https://ziglang.org/learn/overview/"&gt;here&lt;/a&gt;, but we're going to be focusing on a few specific points from this as well as it's &lt;a href="https://ziglang.org/learn/why_zig_rust_d_cpp/"&gt;comparison to other languages&lt;/a&gt; to best get my point across, hopefully.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#simple-language" class="anchor"&gt;
  &lt;/a&gt;
  Simple language
&lt;/h3&gt;

&lt;p&gt;Zig is meant to be "similar" to C in the sense it is simple, the maintainer (Andrew Kelley) aims for the language to be and stay simple at all times, without adding a lot of extra functionality to the language like C++ does, while some may see this as a downside, and rightfully so, this can also be seen as an upside as it means you have less to learn, and you're more likely to pick up good rules of thumb and traditions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#performance-and-safety" class="anchor"&gt;
  &lt;/a&gt;
  Performance and safety
&lt;/h3&gt;

&lt;p&gt;Zig's toolchain has 4 seperate build modes: &lt;code&gt;Debug&lt;/code&gt;, &lt;code&gt;ReleaseSafe&lt;/code&gt;, &lt;code&gt;ReleaseFast&lt;/code&gt;, and &lt;code&gt;ReleaseSmall&lt;/code&gt;. Each build mode enables and disables specific parts of the compilation process, including but not limited to optimization, runtime safety checks, compression, and more. A simple overview about what each mode does can be viewed &lt;a href="https://ziglang.org/learn/overview/#performance-and-safety-choose-two"&gt;here&lt;/a&gt;. As Zig handles errors strictly, you're less likely to build and run programs that have undefined behavior in them, as zig has 2 layers of safety checks, both runtime and compile time.&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;D has @property functions, which are methods that you call with what looks like field access, so in the above example, c.d might call a function.&lt;/li&gt;
&lt;li&gt;C++, D, and Rust have operator overloading, so the + operator might call a function.&lt;/li&gt;
&lt;li&gt;C++, D, and Go have throw/catch exceptions, so foo() might throw an exception, and prevent bar() from being called. (Of course, even in Zig foo() could deadlock and prevent bar() from being called, but that can happen in any Turing-complete language.)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Another layer of safety Zig has is restricting some things, such as not implementing &lt;a href="https://en.wikipedia.org/wiki/Operator_overloading"&gt;operator overloading&lt;/a&gt;, preventing hidden control flow among other things that can be caused by features as such. Another thing Zig focuses on preventing is &lt;a href="https://ziglang.org/learn/why_zig_rust_d_cpp/#no-hidden-allocations"&gt;hidden allocations&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#no-dependency-on-libc-and-cross-compilation" class="anchor"&gt;
  &lt;/a&gt;
  No dependency on libc and cross compilation
&lt;/h3&gt;

&lt;p&gt;While Zig can compile against libc (musl, glibc, etc), it does not depend on it. This allows you to build binaries that work on any platform. On top of this, Zig also ships with multiple versions of libc itself, so that if for any reason you want to compile against libc, you can cross-compile your program against a &lt;a href="https://ziglang.org/learn/overview/#support-table"&gt;large number of platforms&lt;/a&gt;. Other programming languages such as rust have some form of cross-compilation, but from what i've seen certainly not to the same level as Zig, cross-compiliation has been made a &lt;a href="https://ziglang.org/learn/overview/#cross-compiling-is-a-first-class-use-case"&gt;first class use case&lt;/a&gt; in Zig and the platform support is still growing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-c-libraries-without-bindings" class="anchor"&gt;
  &lt;/a&gt;
  Using C libraries without bindings
&lt;/h3&gt;

&lt;p&gt;One thing I've found to love about zig is it's C library support, and by that I mean &lt;a href="https://ziglang.org/learn/overview/#integration-with-c-libraries-without-ffibindings"&gt;there is literally no FFI or bindings needed&lt;/a&gt;, Zig can directly use C libraries without the need for wrappers, bindings, or an FFI. In some cases this even results in &lt;a href="https://gist.github.com/andrewrk/d285c8f912169329e5e28c3d0a63c1d8"&gt;code being simpler than the C code itself&lt;/a&gt;, showing that sometimes Zig can be better at using C libraries than C itself is. Andrew Kelley once said that "Zig is better at using C libraries than C is at using C libraries." and after using the language for a while, I can say I agree to an extent.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#closing-words" class="anchor"&gt;
  &lt;/a&gt;
  Closing words
&lt;/h3&gt;

&lt;p&gt;While I love zig, there are certainly downsides of it as with any language, in Zig's case it's the fact it's still fairly early in development and the ecosystem is quite microscopic in the grand scheme of things, but one thing I like to believe is that a language can't grow if it's not used so I encourage you to give the language a try, maybe make a wrapper or library or two or more! The language needs some love and attention, it's a great project with a great promise, and while it's goal of &lt;a href="https://ziglang.org/learn/overview/#zig-competes-with-c-instead-of-depending-on-it"&gt;competing against C&lt;/a&gt; may be a bit of a big one especially for what it is currently, I do say it may be possible far in the future, it has promise, it has the ability to use C libraries so people can easily migrate, hell Zig can &lt;a href="https://ziglang.org/learn/overview/#zig-is-also-a-c-compiler"&gt;even act as a drop in C compiler&lt;/a&gt; and even translate C code to Zig (though very very roughly).&lt;/p&gt;

&lt;p&gt;So should you learn Zig? &lt;strong&gt;Yes.&lt;/strong&gt; I think you should.&lt;/p&gt;

</description>
      <category>zig</category>
      <category>devops</category>
      <category>tooling</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Responsibilities of a Senior Dev</title>
      <author>Kim Arnett ï£¿</author>
      <pubDate>Mon, 15 Mar 2021 16:50:35 +0000</pubDate>
      <link>https://dev.to/kaydacode/responsibilities-of-a-senior-dev-4i3i</link>
      <guid>https://dev.to/kaydacode/responsibilities-of-a-senior-dev-4i3i</guid>
      <description>&lt;p&gt;I let Twitter select my next blog post, and 50% wanted to know what was it like in the shoes of a senior developer! I've been settling in to the title for the last 11 months, and I'm happy to share my experience and how my responsibilities have shifted from mid-level. All of this will be in the flavor of mobile development. The primary differences between mobile and web at this stage, &lt;em&gt;from my perspective&lt;/em&gt;, is that mobile developers are also responsible for continuous integration and deployment.&lt;/p&gt;

&lt;p&gt;This list is inclusive of my experience and what I've observed at other companies I've worked in. My experience is mostly enterprise app development. If your experience is different, I'd love for you to highlight your responsibilities in the comments!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Solving problems&lt;br&gt;
I'm not talking about code! Things arise all the time that need immediate attention. As a senior dev, it's my responsibility to make sure my team is not blocked by anything, shine light on problems that will help get them resolved faster, or if it's in my wheelhouse, jump in and help out! It could look like an environment problem, a code problem, a build problem, a business problem, whatever it may be. It's my job to ensure things are moving forward, and waving the flag for attention if it's not so we can address it quick and effectively. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mentoring&lt;br&gt;
A big change for people as they go from mid to senior is they are the ones providing advice and guidance to their team instead of purely absorbing. A quick reminder that everyone is human and we're all sharing and absorbing constantly. For many, this is the first time they've really sat on the other side of the table, and it's great! You're responsible for shaping your new and junior team members to some day take your job. Or at least that's the idea, while you move on into architecture or management, or wherever your heart desires. It is your responsibility to ensure they have the support and tools they need to fully grow into the position and career.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Providing actionable feedback&lt;br&gt;
This is a big one that will show up almost every day. As a senior engineer, you need to be driving the codebase, product and team in the right direction. Apart of that is providing actionable feedback to your teammates that will help reach the end goal. Whether it's official performance reviews, code reviews, pull requests or a pairing session - your feedback is necessary and crucial to your teams success. Learning how to provide feedback that is helpful is critical. Instead of "this could be improved" - elaborate. How could it be improved? What is the original author missing that could help them see the problem. Positive feedback fits here too! "I really like the way you took charge of that meeting" - we all need positive feedback to learn where our strengths are. Let your team know you appreciate them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Keeping an eye on all the things&lt;br&gt;
This one is a bit much at times, but it's really important to keep an eye on reviews, crashes, analytics, dashboards, abnormalities, test coverage, builds, etc.  It's good to check in with your systems every few days to ensure everything's a go. Is code coverage trending in the right direction? Are unit tests functioning after that last Xcode update? Any new crashers with the latest release? Any bad events surfacing to the top, or an abnormal amount of unexpected ones?  As a team, keeping an eye on these things will help you be proactive should a problem arise.  In previous jobs, we found analytics and crash data to be a very valuable combination to use with our remote feature manager. With seeing a rise in crashes, we were able to take action and turn off a remote feature flag to ensure clients would no longer be effected.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Identify problems and feature planning&lt;br&gt;
As one of the codebase owners, it falls on you to identify any tech debt or refactor spots, and come up with a plan to tackle them.  It also falls on you to help architect features and plan for how long a feature will take, to help "business" requirements and expectations. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build&lt;br&gt;
Especially true as a mobile engineer, the build pipeline will likely fall in your court. Keeping your Continuous Integration pipeline happy, building out improvements, keeping the build passing and unit tests passing all falls on you (and your team). You can certainly share the responsibility, but you're ultimately in the driver's seat is what I'm saying.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Giving credit&lt;br&gt;
This ties closely with number three, providing actionable feedback, but I wanted to call it out specifically here. When you're working with someone else and do a feature together, let them drive. Help them get to the answers, but don't do everything for them. Tied also with number two, mentoring, you're there for their success. Their success means your success, and your teams success means your success. But highlighting your accomplishments solely is (mostly) over. When you're driving a team, it takes everyone, and it's up to you to call out when people do good, when your team delivers, and the features you all flush out. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thanks so much for reading, I'm really enjoying being a Senior iOS Engineer! While my imposter syndrome does get out of control some days, I'll share some wisdom that really has helped me this past year. Teams work because everyone brings something unique to the table. If you have a weak spot, someone else is going to have that as a strong spot. You don't have to know everything, now go uplift your team and get some stuff done. :) &lt;/p&gt;

</description>
      <category>career</category>
    </item>
    <item>
      <title>How JavaScript really works?</title>
      <author>Krishna Nigalye</author>
      <pubDate>Mon, 15 Mar 2021 16:03:26 +0000</pubDate>
      <link>https://dev.to/kpnigalye/how-javascript-really-works-1p0m</link>
      <guid>https://dev.to/kpnigalye/how-javascript-really-works-1p0m</guid>
      <description>&lt;p&gt;Heard of JavaScript but, donât know the basics? Have no idea about what happens behind the scenes? Having troubles in cracking the interviews? Donât worry. This post will get you started with fundamental concepts of JavaScript. These concepts may or maynât be used in your day to day activities, but if you are curious and want to dig deep into the world of JavaScript then I am sure that you will find this stuff really interesting. This post will cover one of the most basic topics of JS â Execution Context. So without further ado, lets get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#have-you-heard-about-the-execution-context" class="anchor"&gt;
  &lt;/a&gt;
  Have you heard about the âExecution Contextâ?
&lt;/h2&gt;

&lt;p&gt;Execution Context is one of the most basic concepts in JS. Let me put it this way.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Everything in JS happens inside the Execution Context.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let us understand this with the help of an example. The code shown below finds square of the given number.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ui0Uv122--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9fhf3gj5uvnrqw1ne2k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ui0Uv122--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9fhf3gj5uvnrqw1ne2k.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we run a JS program, an Execution context is created. There are two phases involved in this process. First phase is called the Memory Creation phase and the second phase is called the Code Execution phase.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rAr-6-_R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ske9ybnt94gnsqamaclz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rAr-6-_R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ske9ybnt94gnsqamaclz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the Memory Creation phase, JS parses the program and looks for variables and function definitions. In case of variables a special keyword called undefined is assigned and in case of functions, JS stores copy of the whole function definition. (check out the diagram).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: undefined is not a value. Its a special keyword used in JS to indicate that a variable is not defined or assigned any value.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The second phase is the Code Execution phase. In this phase, JS starts from the beginning and goes in synchronous manner (one line at a time).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: This can be one of your first interview questions. â Is JavaScript is a synchronous language or an asynchronous languageâ. I think you know the answer now.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Un0Ea9Fv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdm7230ks64h73w279ac.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Un0Ea9Fv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdm7230ks64h73w279ac.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At line 1, ânâ has a value set to 10 so JS removes the keyword undefined and sets the value to 10. Now the control goes to the next code block. Since this is a function definition, there is no code execution happening here so JS skips the function definition and moves control to line number 8. As soon as JS encounters a function invocation [ square(5) ], it creates a new Execution Context as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--feXX6OKN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ug3tqvllxqm2c4arsvch.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--feXX6OKN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ug3tqvllxqm2c4arsvch.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the whole process of Execution Context repeats for that function call. Lets see how the execution of the function block happens.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--flKXtcpF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6kj2lmgxfcdjgm5qbk8g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--flKXtcpF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6kj2lmgxfcdjgm5qbk8g.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the Memory Creation phase, we will have two variables, ânumberâ which is your function parameter and âansâ which is the local variable. Both will have value set to âundefinedâ. In the second phase of this current Execution Context, JS starts from the first line of this function declaration. Since we are passing 5 as an argument in the function call, 5 is assigned as the value to the variable number. Now the control goes to the next line.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pgU5lEF0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/73tgo8jl4lo7l2qggowx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pgU5lEF0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/73tgo8jl4lo7l2qggowx.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the next line, JS executes [ number * number ] part of the line and the result of this operation (which is 25) is stored in the variable âansâ. Now the next line has a keyword âreturnâ. As soon as JS encounters âreturnâ keyword, it moves control back to the parent Execution Context. Since we are returning the value of âansâ, the value 25 is returned and stored in the variable âsquareOf5â. Now remember this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When the control moves back to the place where the function call was made, the newly created Execution Context is deleted.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Check out the diagram below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yqZ0xVkG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ffgo1m9klsw55ur6hoyl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yqZ0xVkG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ffgo1m9klsw55ur6hoyl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the control goes to the next line which is again a function call and whole process of Execution Context repeats again.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-js-keeps-track-of-these-execution-contexts" class="anchor"&gt;
  &lt;/a&gt;
  How JS keeps track of these Execution Contexts?
&lt;/h2&gt;

&lt;p&gt;This happens through something called as a Call Stack or Execution Stack. Itâs like a regular stack but mainly used for keeping track of Execution Contexts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vFLojzVT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rls5v6zq9t2hx5oss1i4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vFLojzVT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rls5v6zq9t2hx5oss1i4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When the JS engine first encounters the script, it creates a Global Execution Context (GEC) and is pushed on the Call Stack. During the code execution part of GEC, whenever JS engine encounters a function call, it creates a new Execution Context and pushes it to the Call Stack.&lt;/p&gt;

&lt;p&gt;The engine executes the function whose execution context is at the top of the stack. When this function is complete, its execution stack is popped off from the stack, and the process continues for the rest of the script.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts" class="anchor"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;I hope now you have got a good understanding of Execution Context now. If I have to explain the importance of Execution Context in simple language, I can say that Execution Context is the heart of JS.&lt;/p&gt;

&lt;p&gt;Let me also mention that I have not gone into too much of depth but there are a lot of concepts which can be covered.&lt;/p&gt;

&lt;p&gt;Thank you for reading this article. Let me know your thoughts in comments section.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#references" class="anchor"&gt;
  &lt;/a&gt;
  References:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;How JavaScript Code is executed? &amp;amp; Call Stack by Akshay Saini &lt;a href="https://www.youtube.com/watch?v=iLWTnMzWtj4"&gt;https://www.youtube.com/watch?v=iLWTnMzWtj4&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An Article by Sukhjinder Arora&lt;br&gt;
&lt;a href="https://blog.bitsrc.io/understanding-execution-context-and-execution-stack-in-javascript-1c9ea8642dd0"&gt;https://blog.bitsrc.io/understanding-execution-context-and-execution-stack-in-javascript-1c9ea8642dd0&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The power behind the Linux terminal</title>
      <author>Anderson Bosa</author>
      <pubDate>Mon, 15 Mar 2021 15:45:28 +0000</pubDate>
      <link>https://dev.to/andersonbosa/the-power-behind-the-linux-terminal-189h</link>
      <guid>https://dev.to/andersonbosa/the-power-behind-the-linux-terminal-189h</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/andersonbosa/o-poder-por-tras-do-terminal-linux-2m63"&gt;ð§ð· Brazilian Version&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#table-of-contents" class="anchor"&gt;
  &lt;/a&gt;
  Table of contents
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#chapter-eng-1"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-eng-2"&gt;Basic commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-eng-3"&gt;Commands that help us help each other&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-eng-4"&gt;Have your own Snippets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-eng-5"&gt;Practice!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#introduction" class="anchor"&gt;
  &lt;/a&gt;
  Introduction &lt;a id="chapter-eng-1"&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Search, differentiate, analyze, share, unzip, encrypt a file, access a cloud computer, convert a video to gif, etc. These are some of the possible things to do with the command line.&lt;/p&gt;

&lt;p&gt;The terminal is a magic wand to interact with the computer's resources. Allowing interaction practically and flexibly, which makes it a very powerful tool.&lt;/p&gt;

&lt;p&gt;Basically on all operating systems (e.g., Windows, Android, Mac and etc.), the command line is a text interface to communicate with the computer (or device).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--catE4518--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.giphy.com/media/toXKzaJP3WIgM/giphy.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--catE4518--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.giphy.com/media/toXKzaJP3WIgM/giphy.webp" alt="image" title="likeagod"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also known as &lt;code&gt;shell&lt;/code&gt;,&lt;code&gt;console&lt;/code&gt;, &lt;code&gt;prompt&lt;/code&gt;, and among other names, the terminal can be frightening and confusing at first contact. Like all new knowledge, in the beginning, there may be more difficulties. However, as we overcome these barriers, we are faced with our evolution.&lt;/p&gt;

&lt;p&gt;Knowing how to use the terminal can be essential when trying to deal with the problems that pop up daily as an IT professional. I read a post the other day when the author said something that itched me:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are a Linux user, Terminal is probably the most powerful tool you have ever had. But the problem with Terminal is that you need to learn how to use it if you want to benefit from it. - &lt;a href="https://dev.to/mauro_codes"&gt;Mauro Garcia&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt; me: YYEESSSS &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ot9QlusA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xkjs7elno05bdzdrn67i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ot9QlusA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xkjs7elno05bdzdrn67i.png" alt="image" title="YEEEEESSSSSSSSS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It scratched me to want to share a little of what I learned out there with my colleagues. And then I brought it here too. Knowing some of these things makes a difference in my day-to-day life as a software developer.&lt;/p&gt;

&lt;p&gt;I hope I can help you feel a little more comfortable the next time you need to open the terminal.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-before-we-start-a-tip-for-nonnative-speakers-of-english" class="anchor"&gt;
  &lt;/a&gt;
  But before we start ... a tip for non-native speakers of English:
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Thinking in English helps to assimilate the commands!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you are like me, non-native English, I believe you will understand better what I mean.&lt;/p&gt;

&lt;p&gt;Let's understand with an example, the command &lt;code&gt;pwd&lt;/code&gt; is for &lt;code&gt;Print Working Directory&lt;/code&gt;. What in my language (Brazilian*) would be something like &lt;code&gt;edt&lt;/code&gt; (&lt;code&gt;Write the Working Directory&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;I think this example helps to make it clear that thinking about what you want to do in English helps to assimilate what is being done. Helping to internalize what you want to do. As with &lt;code&gt;ls&lt;/code&gt; (list) or &lt;code&gt;cd&lt;/code&gt; (change directory).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basic-commands" class="anchor"&gt;
  &lt;/a&gt;
  Basic commands &lt;a id="chapter-eng-2"&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Here are some practical commands to know. I used a command to describe them, we'll see which one is ahead.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;mv&lt;/strong&gt; - move (rename) files&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;cp&lt;/strong&gt; - copy files and directories&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;rm&lt;/strong&gt; - remove files or directories&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ls&lt;/strong&gt; - list directory contents&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;pwd&lt;/strong&gt; - print name of current/working directory&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;mkdir&lt;/strong&gt; - make directories, create a directory&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;rmdir&lt;/strong&gt; - remove empty directories, delete a directory&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;cat&lt;/strong&gt; - concatenate files and print on the standard output&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;tac&lt;/strong&gt; - concatenate and print files in reverse&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;more&lt;/strong&gt; - file perusal filter for crt viewing&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;less&lt;/strong&gt; - opposite of more&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;chown&lt;/strong&gt; - change file owner and group, change ownership of a file&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;chmod&lt;/strong&gt; - change file mode bits, change permissions of a file&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;chattr&lt;/strong&gt; - change file attributes on a Linux file system&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;curl&lt;/strong&gt; - transfer a URL&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;wget&lt;/strong&gt; - The non-interactive network downloader.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;tar&lt;/strong&gt; - an archiving utility&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;gzip&lt;/strong&gt; - compress or expand files, sort of Linux 'WinRar'&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ping&lt;/strong&gt; - send ICMP ECHO_REQUEST to network hosts&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;sort&lt;/strong&gt; - sort lines of text files&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;filter&lt;/strong&gt; - cups file conversion filter interface&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;uniq&lt;/strong&gt; - report or omit repeated lines&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;history&lt;/strong&gt; - GNU History Library&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;top&lt;/strong&gt; - display Linux processes&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ps&lt;/strong&gt; - report a snapshot of the current processes.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;pkill&lt;/strong&gt; - look up or signal processes based on name and other attributes&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ssh&lt;/strong&gt; - OpenSSH remote login client&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;git&lt;/strong&gt; - the stupid content tracker&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All commands can be concatenated in the terminal, it is a matter of knowing how to do them. The power to concatenate commands gives us incredible power with the command line.&lt;/p&gt;

&lt;p&gt;For example, let's say we want to find which commands are in the history, but there are a lot of repetitions and irrelevant information at the moment (like the parameters) ... We could do it by unifying 4 commands in the following order: &lt;code&gt;history | cut --delimiter=" " -f 4 | sort | uniq&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Or maybe you want to use an image as an icon ... You could:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# 1) download the image and 2) encode it on the fly.&lt;/span&gt;
curl https://duckduckgo.com/i/bfc48a09.jpg &lt;span class="nt"&gt;--output&lt;/span&gt; - | &lt;span class="nb"&gt;base64&lt;/span&gt; -
&lt;span class="c"&gt;# is now ready to use in an HTML tag ð&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#here-is-precious-witchcraft-for-the-next-time-your-virtual-memory-runs-out" class="anchor"&gt;
  &lt;/a&gt;
  Here is precious witchcraft for the next time your virtual memory runs out:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;xkill&lt;/strong&gt; - kill a client by its X resource. Basically when you proclaim this command the point of your mouse will become Alvo Dumbledore's wand. Wherever you (left) click, the thing where you clicked dies.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/AhjXalGPAfJg4/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/AhjXalGPAfJg4/giphy.gif" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#commands-that-help-us-help-each-other" class="anchor"&gt;
  &lt;/a&gt;
  Commands that help us help each other &lt;a id="chapter-eng-3"&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;whatis&lt;/strong&gt; - display one-line manual page descriptions. It helps to identify the purpose of any command in seconds. &lt;strong&gt;This was the command I mentioned above.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;which&lt;/strong&gt; - locate a command.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;whereis&lt;/strong&gt; - locate the binary, source, and manual page files for a command.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;man&lt;/strong&gt; - the program manual. An interface to the system reference manuals.
&lt;a href="https://youtu.be/uelA7KRLINA?t=8"&gt;This is the way&lt;/a&gt; to anything. The relevant information about the program will be in the manual.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Try on your terminal&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;whatis whatis which whereis man
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#have-your-own-snippets" class="anchor"&gt;
  &lt;/a&gt;
  Have your own Snippets &lt;a id="chapter-eng-4"&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;A snippet is a function designed to serve a purpose. In Bash / shellscript we have the famous "one-liners". I recommend having them for two reasons:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Fear: they obviously scare. A chain of interconnected commands to serve a purpose? I find it incredible and terrifying. ~~ Whenever I find myself running a I think that if it breaks in half it will delete my entire system ð. ~~ With that you will be cautious with the terminal because even a hammer is bad if it is not used correctly.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;And news: you will be exposed to new solutions and also to new ways of using what you already know.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;I will leave some references on the wheel, places where we can check out these "one-liners". ð&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#practice" class="anchor"&gt;
  &lt;/a&gt;
  Practice! &lt;a id="chapter-eng-5"&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The best way to learn and assimilate is by doing. So let's put into practice what we've seen so far through some exercises. For this we will use Capture The Flag &lt;a href="https://overthewire.org/wargames/bandit/"&gt;Bandit&lt;/a&gt; from &lt;a href="https://overthewire.org/wargames"&gt;OverTheWire&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Capture The Flag&lt;/strong&gt; is a style of competition that involves several skills to solve challenges related to &lt;code&gt;infosec&lt;/code&gt;, to capture the flag (usually a code), and scoring. In &lt;strong&gt;Bandit&lt;/strong&gt; the CTF levels take place on a remote machine, where we will connect via the terminal via &lt;a href="https://en.wikipedia.org/wiki/SSH_(Secure_Shell)"&gt;ssh&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bandit&lt;/strong&gt; will help us to put into practice and polish our skills with the Terminal. From here on, it's up to you. Good luck!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://overthewire.org/wargames/bandit/"&gt;#Start here!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#feedbacks" class="anchor"&gt;
  &lt;/a&gt;
  Feedbacks ð
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Was something missing, or was it wrong, or do you have any suggestions? Please let me know your opinions!

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://forms.gle/M3K8eaSun4oY4mjQ6"&gt;&lt;strong&gt;Form&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#oneliners" class="anchor"&gt;
  &lt;/a&gt;
  One-liners
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;â­ &lt;a href="https://linuxcommandlibrary.com/"&gt;https://linuxcommandlibrary.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;â­ &lt;a href="http://www.bashoneliners.com/"&gt;http://www.bashoneliners.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://catonmat.net/top-ten-one-liners-from-commandlinefu-explained"&gt;https://catonmat.net/top-ten-one-liners-from-commandlinefu-explained&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stefanjudis.com/notes/1025-shell-command-one-liners-on-one-page/"&gt;https://www.stefanjudis.com/notes/1025-shell-command-one-liners-on-one-page/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rosettacode.org/wiki/Shell_one-liner"&gt;https://rosettacode.org/wiki/Shell_one-liner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#credits-fonts-and-articles" class="anchor"&gt;
  &lt;/a&gt;
  Credits, fonts and articles:
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/maurogarcia_19/linux-terminal-the-ultimate-cheat-sheet-2g5b"&gt;https://dev.to/maurogarcia_19/linux-terminal-the-ultimate-cheat-sheet-2g5b&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ubuntu.com/tutorials/command-line-for-beginners#1-overview"&gt;https://ubuntu.com/tutorials/command-line-for-beginners#1-overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.howtogeek.com/140679/beginner-geek-how-to-start-using-the-linux-terminal/"&gt;https://www.howtogeek.com/140679/beginner-geek-how-to-start-using-the-linux-terminal/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ctf-br.org/sobre/"&gt;https://ctf-br.org/sobre/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Dash"&gt;https://wiki.archlinux.org/index.php/Dash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Bash"&gt;https://wiki.archlinux.org/index.php/Bash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Command-line_shell"&gt;https://wiki.archlinux.org/index.php/Command-line_shell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Bourne_shell"&gt;https://en.wikipedia.org/wiki/Bourne_shell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>linux</category>
      <category>terminal</category>
      <category>bash</category>
      <category>overthewire</category>
    </item>
    <item>
      <title>An easy way to build a responsive navbar using Tailwindó ¾ó ¾ &amp; React â</title>
      <author>Pranav Birajdar</author>
      <pubDate>Mon, 15 Mar 2021 15:24:23 +0000</pubDate>
      <link>https://dev.to/prnvbirajdar/the-easiest-way-to-build-a-responsive-navbar-using-tailwind-react-2803</link>
      <guid>https://dev.to/prnvbirajdar/the-easiest-way-to-build-a-responsive-navbar-using-tailwind-react-2803</guid>
      <description>&lt;p&gt;I recently wrote an &lt;a href="https://dev.to/prnvbirajdar/a-collection-of-beautiful-responsive-tailwind-component-libraries-5ce0"&gt;article&lt;/a&gt; about some of my favorite Tailwind component libraries. &lt;/p&gt;

&lt;p&gt;However, I could never find an ideal navbar for my projects.&lt;/p&gt;

&lt;p&gt;I've always dreaded the navbar! For such a small component that sits at the top of your website, it sure needs a lot of attention. &lt;/p&gt;

&lt;p&gt;In this tutorial, we will learn how to build a clean and responsive navbar in under 10 minutes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1" class="anchor"&gt;
  &lt;/a&gt;
  Step 1:
&lt;/h3&gt;

&lt;p&gt;Go to &lt;a href="https://tailwindui.com/preview#component-10058606cac5398d7fa2c73b64089874"&gt;Tailwind UI&lt;/a&gt; and copy the HTML code for "Dark nav with white page header". &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HnM8qLtX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9c18a7xxiczqj305mhx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HnM8qLtX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9c18a7xxiczqj305mhx.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2" class="anchor"&gt;
  &lt;/a&gt;
  Step 2:
&lt;/h3&gt;

&lt;p&gt;Make a functional Nav component in your React project and paste this code. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3" class="anchor"&gt;
  &lt;/a&gt;
  Step 3:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Convert all the 'class' attributes to 'className'.&lt;/li&gt;
&lt;li&gt;Remove the HTML comment tags and add the JSX comment tags instead.&lt;/li&gt;
&lt;li&gt;Close the 'img' tags.&lt;/li&gt;
&lt;li&gt;Get rid of the 'profile' and the 'notifications' components to keep it simple.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-4" class="anchor"&gt;
  &lt;/a&gt;
  Step 4:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Remove the 'bg-gray-900' class from Dashboard and add 'hover:bg-gray-700' instead.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is roughly how our Nav component should look right now:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";

function Nav() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;nav className="bg-gray-800"&amp;gt;
        &amp;lt;div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"&amp;gt;
          &amp;lt;div className="flex items-center justify-between h-16"&amp;gt;
            &amp;lt;div className="flex items-center"&amp;gt;
              &amp;lt;div className="flex-shrink-0"&amp;gt;
                &amp;lt;img
                  className="h-8 w-8"
                  src="https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg"
                  alt="Workflow"
                /&amp;gt;
              &amp;lt;/div&amp;gt;
              &amp;lt;div className="hidden md:block"&amp;gt;
                &amp;lt;div className="ml-10 flex items-baseline space-x-4"&amp;gt;
                  &amp;lt;a
                    href="#"
                    className=" hover:bg-gray-700 text-white px-3 py-2 rounded-md text-sm font-medium"
                  &amp;gt;
                    Dashboard
                  &amp;lt;/a&amp;gt;

                  &amp;lt;a
                    href="#"
                    className="text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium"
                  &amp;gt;
                    Team
                  &amp;lt;/a&amp;gt;

                  &amp;lt;a
                    href="#"
                    className="text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium"
                  &amp;gt;
                    Projects
                  &amp;lt;/a&amp;gt;

                  &amp;lt;a
                    href="#"
                    className="text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium"
                  &amp;gt;
                    Calendar
                  &amp;lt;/a&amp;gt;

                  &amp;lt;a
                    href="#"
                    className="text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium"
                  &amp;gt;
                    Reports
                  &amp;lt;/a&amp;gt;
                &amp;lt;/div&amp;gt;
              &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div className="-mr-2 flex md:hidden"&amp;gt;
              &amp;lt;button
                type="button"
                className="bg-gray-800 inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white"
                aria-controls="mobile-menu"
                aria-expanded="false"
              &amp;gt;
                &amp;lt;span className="sr-only"&amp;gt;Open main menu&amp;lt;/span&amp;gt;

                &amp;lt;svg
                  className="block h-6 w-6"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                  aria-hidden="true"
                &amp;gt;
                  &amp;lt;path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M4 6h16M4 12h16M4 18h16"
                  /&amp;gt;
                &amp;lt;/svg&amp;gt;

                &amp;lt;svg
                  className="hidden h-6 w-6"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                  aria-hidden="true"
                &amp;gt;
                  &amp;lt;path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M6 18L18 6M6 6l12 12"
                  /&amp;gt;
                &amp;lt;/svg&amp;gt;
              &amp;lt;/button&amp;gt;
            &amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div className="md:hidden" id="mobile-menu"&amp;gt;
          &amp;lt;div className="px-2 pt-2 pb-3 space-y-1 sm:px-3"&amp;gt;
            &amp;lt;a
              href="#"
              className="hover:bg-gray-700 text-white block px-3 py-2 rounded-md text-base font-medium"
            &amp;gt;
              Dashboard
            &amp;lt;/a&amp;gt;

            &amp;lt;a
              href="#"
              className="text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium"
            &amp;gt;
              Team
            &amp;lt;/a&amp;gt;

            &amp;lt;a
              href="#"
              className="text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium"
            &amp;gt;
              Projects
            &amp;lt;/a&amp;gt;

            &amp;lt;a
              href="#"
              className="text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium"
            &amp;gt;
              Calendar
            &amp;lt;/a&amp;gt;

            &amp;lt;a
              href="#"
              className="text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium"
            &amp;gt;
              Reports
            &amp;lt;/a&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/nav&amp;gt;

      &amp;lt;header className="bg-white shadow"&amp;gt;
        &amp;lt;div className="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8"&amp;gt;
          &amp;lt;h1 className="text-3xl font-bold text-gray-900"&amp;gt;Dashboard&amp;lt;/h1&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/header&amp;gt;
      &amp;lt;main&amp;gt;
        &amp;lt;div className="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8"&amp;gt;
          {/* &amp;lt;!-- Replace with your content --&amp;gt; */}
          &amp;lt;div className="px-4 py-6 sm:px-0"&amp;gt;
            &amp;lt;div className="border-4 border-dashed border-gray-200 rounded-lg h-96"&amp;gt;&amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;
          {/* &amp;lt;!-- /End replace --&amp;gt; */}
        &amp;lt;/div&amp;gt;
      &amp;lt;/main&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
export default Nav;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-5" class="anchor"&gt;
  &lt;/a&gt;
  Step 5:
&lt;/h3&gt;

&lt;p&gt;React doesn't include a first-party transition component out of the box. Thus, the folks at Tailwaind made one.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install @headlessui/react&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#or" class="anchor"&gt;
  &lt;/a&gt;
  or
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;yarn add @headlessui/react&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-6" class="anchor"&gt;
  &lt;/a&gt;
  Step 6:
&lt;/h3&gt;

&lt;p&gt;Time to add the boolean state to open and close the mobile navbar. We will also have to use the same boolean logic to change the nav icon for open and close state.&lt;/p&gt;

&lt;p&gt;You can learn more about the implementation &lt;a href="https://tailwindui.com/documentation#integrating-with-javascript-frameworks"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-7" class="anchor"&gt;
  &lt;/a&gt;
  Step 7:
&lt;/h3&gt;

&lt;p&gt;Here is the final code with the responsive state added.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useState } from "react";
import { Transition } from "@headlessui/react";

function Nav() {
  const [isOpen, setIsOpen] = useState(false);
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;nav className="bg-gray-800"&amp;gt;
        &amp;lt;div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"&amp;gt;
          &amp;lt;div className="flex items-center justify-between h-16"&amp;gt;
            &amp;lt;div className="flex items-center"&amp;gt;
              &amp;lt;div className="flex-shrink-0"&amp;gt;
                &amp;lt;img
                  className="h-8 w-8"
                  src="https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg"
                  alt="Workflow"
                /&amp;gt;
              &amp;lt;/div&amp;gt;
              &amp;lt;div className="hidden md:block"&amp;gt;
                &amp;lt;div className="ml-10 flex items-baseline space-x-4"&amp;gt;
                  &amp;lt;a
                    href="#"
                    className=" hover:bg-gray-700 text-white px-3 py-2 rounded-md text-sm font-medium"
                  &amp;gt;
                    Dashboard
                  &amp;lt;/a&amp;gt;

                  &amp;lt;a
                    href="#"
                    className="text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium"
                  &amp;gt;
                    Team
                  &amp;lt;/a&amp;gt;

                  &amp;lt;a
                    href="#"
                    className="text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium"
                  &amp;gt;
                    Projects
                  &amp;lt;/a&amp;gt;

                  &amp;lt;a
                    href="#"
                    className="text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium"
                  &amp;gt;
                    Calendar
                  &amp;lt;/a&amp;gt;

                  &amp;lt;a
                    href="#"
                    className="text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium"
                  &amp;gt;
                    Reports
                  &amp;lt;/a&amp;gt;
                &amp;lt;/div&amp;gt;
              &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div className="-mr-2 flex md:hidden"&amp;gt;
              &amp;lt;button
                onClick={() =&amp;gt; setIsOpen(!isOpen)}
                type="button"
                className="bg-gray-900 inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white"
                aria-controls="mobile-menu"
                aria-expanded="false"
              &amp;gt;
                &amp;lt;span className="sr-only"&amp;gt;Open main menu&amp;lt;/span&amp;gt;
                {!isOpen ? (
                  &amp;lt;svg
                    className="block h-6 w-6"
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                    aria-hidden="true"
                  &amp;gt;
                    &amp;lt;path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth="2"
                      d="M4 6h16M4 12h16M4 18h16"
                    /&amp;gt;
                  &amp;lt;/svg&amp;gt;
                ) : (
                  &amp;lt;svg
                    className="block h-6 w-6"
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                    aria-hidden="true"
                  &amp;gt;
                    &amp;lt;path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth="2"
                      d="M6 18L18 6M6 6l12 12"
                    /&amp;gt;
                  &amp;lt;/svg&amp;gt;
                )}
              &amp;lt;/button&amp;gt;
            &amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;Transition
          show={isOpen}
          enter="transition ease-out duration-100 transform"
          enterFrom="opacity-0 scale-95"
          enterTo="opacity-100 scale-100"
          leave="transition ease-in duration-75 transform"
          leaveFrom="opacity-100 scale-100"
          leaveTo="opacity-0 scale-95"
        &amp;gt;
          {(ref) =&amp;gt; (
            &amp;lt;div className="md:hidden" id="mobile-menu"&amp;gt;
              &amp;lt;div ref={ref} className="px-2 pt-2 pb-3 space-y-1 sm:px-3"&amp;gt;
                &amp;lt;a
                  href="#"
                  className="hover:bg-gray-700 text-white block px-3 py-2 rounded-md text-base font-medium"
                &amp;gt;
                  Dashboard
                &amp;lt;/a&amp;gt;

                &amp;lt;a
                  href="#"
                  className="text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium"
                &amp;gt;
                  Team
                &amp;lt;/a&amp;gt;

                &amp;lt;a
                  href="#"
                  className="text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium"
                &amp;gt;
                  Projects
                &amp;lt;/a&amp;gt;

                &amp;lt;a
                  href="#"
                  className="text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium"
                &amp;gt;
                  Calendar
                &amp;lt;/a&amp;gt;

                &amp;lt;a
                  href="#"
                  className="text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium"
                &amp;gt;
                  Reports
                &amp;lt;/a&amp;gt;
              &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
          )}
        &amp;lt;/Transition&amp;gt;
      &amp;lt;/nav&amp;gt;

      &amp;lt;header className="bg-white shadow"&amp;gt;
        &amp;lt;div className="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8"&amp;gt;
          &amp;lt;h1 className="text-3xl font-bold text-gray-900"&amp;gt;Dashboard&amp;lt;/h1&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/header&amp;gt;
      &amp;lt;main&amp;gt;
        &amp;lt;div className="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8"&amp;gt;
          {/* &amp;lt;!-- Replace with your content --&amp;gt; */}
          &amp;lt;div className="px-4 py-6 sm:px-0"&amp;gt;
            &amp;lt;div className="border-4 border-dashed border-gray-200 rounded-lg h-96"&amp;gt;&amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;
          {/* &amp;lt;!-- /End replace --&amp;gt; */}
        &amp;lt;/div&amp;gt;
      &amp;lt;/main&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}

export default Nav;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's how our navbar looks like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Z8TTK07--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/twenltp2jilkq0es4mz4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Z8TTK07--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/twenltp2jilkq0es4mz4.gif" alt="Responsive Navbar"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's a &lt;a href="https://codesandbox.io/s/dy13o?file=/src/Nav.js:0-6206"&gt;link&lt;/a&gt; to the Codesandbox, if you guys want to test it out.&lt;/p&gt;

&lt;p&gt;Hope this helps! &lt;/p&gt;

</description>
      <category>beginners</category>
      <category>react</category>
      <category>tutorial</category>
      <category>tailwindcss</category>
    </item>
    <item>
      <title>Accessible Svelte transitions</title>
      <author>Geoff Rich</author>
      <pubDate>Mon, 15 Mar 2021 15:23:23 +0000</pubDate>
      <link>https://dev.to/geoffrich/accessible-svelte-transitions-4ho</link>
      <guid>https://dev.to/geoffrich/accessible-svelte-transitions-4ho</guid>
      <description>&lt;p&gt;Svelte's built-in &lt;a href="https://svelte.dev/tutorial/transition"&gt;transition&lt;/a&gt; functionality makes it easy to animate elements as they are added to and removed from the DOM. It's as simple as adding a &lt;code&gt;transition:&lt;/code&gt; directive to an element and passing one of the built-in transition functions.&lt;/p&gt;

&lt;p&gt;However, we need to be mindful of accessibility issues around animation. Some transitions could trigger motion sickness for those with motion sensitivities. I will go over which Svelte transitions could cause accessibility issues and how to remove or replace them based on the user's preference.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-kind-of-animations-cause-motion-sickness" class="anchor"&gt;
  &lt;/a&gt;
  What kind of animations cause motion sickness?
&lt;/h2&gt;

&lt;p&gt;Making our sites accessible does not mean removing animation entirely. When used tastefully, animation can make web sites more intuitive to use. We mainly need to be careful with animation that involves a large amount of movement. Animation that does not involve movement (e.g. color or opacity animation) is less likely to pose a problem to those sensitive to motion. Val Head has a great article on &lt;a href="https://alistapart.com/article/designing-safer-web-animation-for-motion-sensitivity/"&gt;A List Apart&lt;/a&gt; that covers this subject in depth.&lt;/p&gt;

&lt;p&gt;Of Svelte's seven built-in transition functions, five of them involve motion and could pose a problem: fly, slide, scale, draw, and crossfade. The other two, fade and blur, do not involve motion and shouldn't cause any issues.&lt;/p&gt;

&lt;p&gt;There are two options to apply the user's motion preference to Svelte's transitions: one in CSS, and one in JS. In both cases, we will use the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion"&gt;prefers-reduced-motion&lt;/a&gt; media query to detect if the user has requested reduced motion.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#option-1-globally-disable-all-animation" class="anchor"&gt;
  &lt;/a&gt;
  Option 1: Globally disable all animation
&lt;/h2&gt;

&lt;p&gt;Since Svelte's built-in transitions are applied in CSS, we can disable them in CSS. The prefers-reduced-motion media query will detect if the user has requested reduced motion in their device settings. You can add the following to your global styles to disable all CSS animation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prefers-reduced-motion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;animation-duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.01ms&lt;/span&gt; &lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;animation-iteration-count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition-duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.01ms&lt;/span&gt; &lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;animation-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.01ms&lt;/span&gt; &lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because Svelte's transitions are applied using inline styles, we need &lt;strong&gt;!important&lt;/strong&gt; here to win the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity"&gt;specificity&lt;/a&gt; battle.&lt;/p&gt;

&lt;p&gt;After applying this to your global styles, Svelte's built in transition functions will no longer have any effect when reduced motion is enabled. This is the safest option, since you can be sure that Svelte's built-in transitions won't trigger motion sickness if the user has enabled the setting. However, it has some downsides.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It has no effect on any &lt;a href="https://svelte.dev/tutorial/custom-js-transitions"&gt;custom JS transitions&lt;/a&gt; (written using &lt;code&gt;tick&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;It also disables safe animations that do not involve motion, like fade.&lt;/li&gt;
&lt;li&gt;Because it's global and uses !important, it's hard to undo if you want to add animation back for some elements.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#option-2-reactively-swap-out-transitions" class="anchor"&gt;
  &lt;/a&gt;
  Option 2: Reactively swap out transitions
&lt;/h2&gt;

&lt;p&gt;We can have more fine-grained control by replacing problematic transitions with something else when reduced motion is requested. For example, instead of having something fly in, we could fade it in instead. This is how iOS implements reduced motion transitions. When reduced motion is turned on, apps fade into view instead of the traditional zoom. This preserves the polish that animations add to a UI while also avoiding animations that could trigger motion sickness.&lt;/p&gt;

&lt;p&gt;We'll use the &lt;code&gt;reducedMotion&lt;/code&gt; store from my &lt;a href="https://geoffrich.net/posts/svelte-prefers-reduced-motion-store/"&gt;previous article&lt;/a&gt; to detect if the user has requested reduced motion. Using a Svelte store will make it easy to react to user preference changes.&lt;/p&gt;

&lt;p&gt;We can define the transition to use for an element in a &lt;a href="https://svelte.dev/tutorial/reactive-declarations"&gt;reactive declaration&lt;/a&gt;. When the value of the store changes, &lt;code&gt;rmTransition&lt;/code&gt; automatically updates.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;reducedMotion&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./reducedMotion&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;fly&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fade&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;svelte/transition&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;showCards&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nl"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;rmTransition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$reducedMotion&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;fade&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;fly&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can use &lt;code&gt;rmTransition&lt;/code&gt; just like any other Svelte transition function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;transition:rmTransition=&lt;/span&gt;&lt;span class="s"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;y:&lt;/span&gt; &lt;span class="err"&gt;300&lt;/span&gt; &lt;span class="err"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When reduced motion is enabled, the element will fade in. When reduced motion is not enabled, it will fly in. See it in action in this &lt;a href="https://svelte.dev/repl/470f23fcce014693be8333016059c223?version=3.35.0"&gt;REPL&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Note that the transitions will share the same set of parameters. It probably won't hurt anything, since fade will ignore parameters that it doesn't understand (e.g. x and y). However, if you wanted to make changes to the parameters when prefers-reduced-motion is enabled, you can define a custom transition with the desired parameters hard-coded.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;customFade&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;fade&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nl"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cardTransition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$reducedMotion&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;customFade&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;fly&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you often find yourself making the same replacement, we can move this logic into a reactive store that can be used in any component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;derived&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;svelte/store&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;fly&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fade&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;svelte/transition&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;accessibleFly&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;derived&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reducedMotion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$reducedMotion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$reducedMotion&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fade&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fly&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This store is derived from our &lt;code&gt;reducedMotion&lt;/code&gt; store. When the value of &lt;code&gt;reducedMotion&lt;/code&gt; changes, this store will automatically replace fly with fade. We can use the value of this store as a replacement for Svelte's built-in fly transition.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;transition:&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="na"&gt;accessibleFly=&lt;/span&gt;&lt;span class="s"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;y:&lt;/span&gt; &lt;span class="err"&gt;300&lt;/span&gt; &lt;span class="err"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#wrapping-up" class="anchor"&gt;
  &lt;/a&gt;
  Wrapping up
&lt;/h2&gt;

&lt;p&gt;You have two options to respect the user's motion preference when using Svelte transitions. You can disable all animations globally in CSS, which is the safest option but also disables animations that do not trigger motion sickness. Alternatively, you can swap out problematic transitions with a safer option when the user requests it, but this requires vigilance whenever implementing a new transition.&lt;/p&gt;

&lt;p&gt;We all should do our part to make the web a more accessible place. If you want to learn more about motion sensitivities and the web, I've linked some articles below that I found helpful while working on this piece.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;"Designing With Reduced Motion For Motion Sensitivities" by Val Head, &lt;a href="https://www.smashingmagazine.com/2020/09/design-reduced-motion-sensitivities/"&gt;Smashing Magazine&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;"Designing Safer Web Animation For Motion Sensitivity" by Val Head, &lt;a href="https://alistapart.com/article/designing-safer-web-animation-for-motion-sensitivity/"&gt;A List Apart&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;"Accessibility for Vestibular Disorders: How My Temporary Disability Changed My Perspective" by Facundo Corradini, &lt;a href="https://alistapart.com/article/accessibility-for-vestibular/"&gt;A List Apart&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;"Revisiting prefers-reduced-motion, the reduced motion media query" by Eric Bailey, &lt;a href="https://css-tricks.com/revisiting-prefers-reduced-motion-the-reduced-motion-media-query/"&gt;CSS Tricks&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>svelte</category>
      <category>a11y</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Newbie's Cheatsheet: Commonly used verbs for naming functions, methods and variables</title>
      <author>Maiko Miyazaki</author>
      <pubDate>Mon, 15 Mar 2021 14:47:39 +0000</pubDate>
      <link>https://dev.to/maikomiyazaki/beginner-s-cheat-sheet-commonly-used-verbs-for-naming-functions-methods-and-variables-509i</link>
      <guid>https://dev.to/maikomiyazaki/beginner-s-cheat-sheet-commonly-used-verbs-for-naming-functions-methods-and-variables-509i</guid>
      <description>&lt;p&gt;Do you follow your instinct when choosing a verb in your function?&lt;/p&gt;

&lt;p&gt;Do you use a number of synonyms for the same purpose inconsistently?&lt;/p&gt;

&lt;p&gt;If the answer is yes, you are not the only one. &lt;/p&gt;

&lt;p&gt;In order to write a clean code, or at least to attempt it, we need to know what words are commonly used so that we can use them, and people can understand easier what we are trying to do.&lt;/p&gt;

&lt;p&gt;In this post, I'll summarise commonly used verbs found in programming books and Github regardless of the type of programming language, so we can find the best-suited verbs for our own needs.&lt;/p&gt;

&lt;p&gt;On the tables below, we'll see 5 rows: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The verb&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The number of times the verb is written on Github to give us some ideas on how commonly it's used&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Its general definition&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Synonyms to avoid using to express the same concept&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Just bear with me, this is not a complete list of common words, so please do let me know in the comment if you find some of the definition is too biased on certain programming languages. I'll also be grateful if you could teach me any other verbs that you think it's common!&lt;/p&gt;

&lt;p&gt;I hope this post helps us, newbies choose a suitable verb and stick to it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents" class="anchor"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h3&gt;

&lt;p&gt;1ï¸â£ &lt;a href="#chapter-1"&gt;Alteration&lt;/a&gt;&lt;br&gt;
2ï¸â£ &lt;a href="#chapter-2"&gt;Creation&lt;/a&gt;&lt;br&gt;
3ï¸â£ &lt;a href="#chapter-3"&gt;Establishment&lt;/a&gt;&lt;br&gt;
4ï¸â£ &lt;a href="#chapter-4"&gt;Obtainment&lt;/a&gt;&lt;br&gt;
5ï¸â£ &lt;a href="#chapter-5"&gt;True or False Statement&lt;/a&gt;&lt;br&gt;
6ï¸â£ &lt;a href="#chapter-6"&gt;Conclusion&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-alteration" class="anchor"&gt;
  &lt;/a&gt;
  1. Alteration&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Verb&lt;/th&gt;
&lt;th&gt;Written&lt;br&gt;on Github&lt;/th&gt;
&lt;th&gt;Definition&lt;/th&gt;
&lt;th&gt;Examples&lt;/th&gt;
&lt;th&gt;Synonyms&lt;br&gt;to avoid&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;set&lt;/td&gt;
&lt;td&gt;2B&lt;/td&gt;
&lt;td&gt;Often used to put data in an existing resource such as an attribute of an object.&lt;/td&gt;
&lt;td&gt;set_name(), set_store_id()&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;change&lt;/td&gt;
&lt;td&gt;668M&lt;/td&gt;
&lt;td&gt;Often used when a whole thing, such as image, is replaced by something else&lt;/td&gt;
&lt;td&gt;change_image(), change_colour()&lt;/td&gt;
&lt;td&gt;edit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;edit&lt;/td&gt;
&lt;td&gt;325M&lt;/td&gt;
&lt;td&gt;Often used same as change. It could be used especially when action is responsible for rendering the view.&lt;/td&gt;
&lt;td&gt;edit_title(), edit_record()&lt;/td&gt;
&lt;td&gt;change&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;update&lt;/td&gt;
&lt;td&gt;739M&lt;/td&gt;
&lt;td&gt;Often used when one or more of the components is updated as a result, and something new could also be added.&lt;/td&gt;
&lt;td&gt;update_file()&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;add&lt;/td&gt;
&lt;td&gt;1B&lt;/td&gt;
&lt;td&gt;Often used to add something into a group of the things.&lt;/td&gt;
&lt;td&gt;add_item(), add_member()&lt;/td&gt;
&lt;td&gt;append&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;append&lt;/td&gt;
&lt;td&gt;287M&lt;/td&gt;
&lt;td&gt;Often used same as add. It could be used when it does not modify the original group of things but produce the new group.&lt;/td&gt;
&lt;td&gt;append_item(), append_element()&lt;/td&gt;
&lt;td&gt;add&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;remove&lt;/td&gt;
&lt;td&gt;824M&lt;/td&gt;
&lt;td&gt;Often used when a given thing is removed from a group of the things.&lt;/td&gt;
&lt;td&gt;remove_record(), remove_item()&lt;/td&gt;
&lt;td&gt;delete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;delete&lt;/td&gt;
&lt;td&gt;455M&lt;/td&gt;
&lt;td&gt;Often used same as remove, but it could also render nonrecoverable.&lt;/td&gt;
&lt;td&gt;delete_record(), delete_item()&lt;/td&gt;
&lt;td&gt;remove&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;save&lt;/td&gt;
&lt;td&gt;478M&lt;/td&gt;
&lt;td&gt;Often used when preserving data to avoid loss.&lt;/td&gt;
&lt;td&gt;save_json(), save_order()&lt;/td&gt;
&lt;td&gt;store&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;store&lt;/td&gt;
&lt;td&gt;396M&lt;/td&gt;
&lt;td&gt;Often used the same way as save.&lt;/td&gt;
&lt;td&gt;store_json(), store_order()&lt;/td&gt;
&lt;td&gt;save&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;disable&lt;/td&gt;
&lt;td&gt;586M&lt;/td&gt;
&lt;td&gt;Often used to configure a resource an unavailable or inactive state.&lt;/td&gt;
&lt;td&gt;disable_user()&lt;/td&gt;
&lt;td&gt;hide&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hide&lt;/td&gt;
&lt;td&gt;237M&lt;/td&gt;
&lt;td&gt;Often has the same intention as disable, by hiding it.&lt;/td&gt;
&lt;td&gt;hide_field()&lt;/td&gt;
&lt;td&gt;disable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;split&lt;/td&gt;
&lt;td&gt;276M&lt;/td&gt;
&lt;td&gt;Used when separating parts of a resource.&lt;/td&gt;
&lt;td&gt;split_table(), split_group()&lt;/td&gt;
&lt;td&gt;separate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;separate&lt;/td&gt;
&lt;td&gt;151M&lt;/td&gt;
&lt;td&gt;Often used the same way as the verb split.&lt;/td&gt;
&lt;td&gt;separate_table(), separate_group()&lt;/td&gt;
&lt;td&gt;split&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;merge&lt;/td&gt;
&lt;td&gt;312M&lt;/td&gt;
&lt;td&gt;Often used when creating a single resource from multiple resource.&lt;/td&gt;
&lt;td&gt;merge_records(),Â  merge_tables()&lt;/td&gt;
&lt;td&gt;join&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;join&lt;/td&gt;
&lt;td&gt;220M&lt;/td&gt;
&lt;td&gt;It can be used in a same way as merge.&lt;/td&gt;
&lt;td&gt;join_records(),Â  join_tables()&lt;/td&gt;
&lt;td&gt;merge&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#2-creation" class="anchor"&gt;
  &lt;/a&gt;
  2. Creation&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Verb&lt;/th&gt;
&lt;th&gt;Written&lt;br&gt;on Github&lt;/th&gt;
&lt;th&gt;Definition&lt;/th&gt;
&lt;th&gt;Examples&lt;/th&gt;
&lt;th&gt;Confusing&lt;br&gt;synonyms&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;create&lt;/td&gt;
&lt;td&gt;1B&lt;/td&gt;
&lt;td&gt;Used when creating a resource.&lt;/td&gt;
&lt;td&gt;create_package(), create_directory()&lt;/td&gt;
&lt;td&gt;make, generate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;make&lt;/td&gt;
&lt;td&gt;797M&lt;/td&gt;
&lt;td&gt;Often used in a same way as create.&lt;/td&gt;
&lt;td&gt;make_package(), make_statement()&lt;/td&gt;
&lt;td&gt;create, generate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;generate&lt;/td&gt;
&lt;td&gt;286M&lt;/td&gt;
&lt;td&gt;Often used in a same way as create.&lt;/td&gt;
&lt;td&gt;generate_directory(), generate_statement()&lt;/td&gt;
&lt;td&gt;create, make&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;copy&lt;/td&gt;
&lt;td&gt;1B&lt;/td&gt;
&lt;td&gt;Used when creating a resource with the same structure and data as the original one.&lt;/td&gt;
&lt;td&gt;copy_file(), copy_graph()&lt;/td&gt;
&lt;td&gt;clone&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;clone&lt;/td&gt;
&lt;td&gt;147M&lt;/td&gt;
&lt;td&gt;Could be used in a same way as copy.&lt;/td&gt;
&lt;td&gt;clone_file(), clone_graph()&lt;/td&gt;
&lt;td&gt;copy&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#3-establishment" class="anchor"&gt;
  &lt;/a&gt;
  3. Establishment&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Verb&lt;/th&gt;
&lt;th&gt;Written&lt;br&gt;on Github&lt;/th&gt;
&lt;th&gt;Definition&lt;/th&gt;
&lt;th&gt;Examples&lt;/th&gt;
&lt;th&gt;Confusing&lt;br&gt;synonyms&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;start&lt;/td&gt;
&lt;td&gt;1B&lt;/td&gt;
&lt;td&gt;Generally used when initiating an operation.&lt;/td&gt;
&lt;td&gt;start_listening()&lt;/td&gt;
&lt;td&gt;begin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;begin&lt;/td&gt;
&lt;td&gt;342M&lt;/td&gt;
&lt;td&gt;Often used in a same way as start.&lt;/td&gt;
&lt;td&gt;begin_listening()&lt;/td&gt;
&lt;td&gt;start&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;open&lt;/td&gt;
&lt;td&gt;854M&lt;/td&gt;
&lt;td&gt;Used when changing state of a resource to make it accessible or usable.&lt;/td&gt;
&lt;td&gt;open_file()&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#4-obtainment" class="anchor"&gt;
  &lt;/a&gt;
  4. Obtainment&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Verb&lt;/th&gt;
&lt;th&gt;Written&lt;br&gt;on Github&lt;/th&gt;
&lt;th&gt;Definition&lt;/th&gt;
&lt;th&gt;Examples&lt;/th&gt;
&lt;th&gt;Confusing&lt;br&gt;synonyms&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;get&lt;/td&gt;
&lt;td&gt;2B&lt;/td&gt;
&lt;td&gt;Generally used to obtain a resource.&lt;/td&gt;
&lt;td&gt;get_data(),Â  get_store_id()&lt;/td&gt;
&lt;td&gt;fetch, retrieve&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fetch&lt;/td&gt;
&lt;td&gt;146M&lt;/td&gt;
&lt;td&gt;Can be used in a same way as get.&lt;/td&gt;
&lt;td&gt;fetch_data(), fetch_store_id()&lt;/td&gt;
&lt;td&gt;get, retrieve&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;retrieve&lt;/td&gt;
&lt;td&gt;116M&lt;/td&gt;
&lt;td&gt;Can be used in a same way as get or fetch&lt;/td&gt;
&lt;td&gt;retrieve_data(), retrieve_store_id()&lt;/td&gt;
&lt;td&gt;get, fetch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;read&lt;/td&gt;
&lt;td&gt;1B&lt;/td&gt;
&lt;td&gt;Used when acquiring data from a source.&lt;/td&gt;
&lt;td&gt;read_file()&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;find&lt;/td&gt;
&lt;td&gt;672M&lt;/td&gt;
&lt;td&gt;Used when looking for an unknown data in a container.&lt;/td&gt;
&lt;td&gt;find_element(), find_keyword()&lt;/td&gt;
&lt;td&gt;search&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;search&lt;/td&gt;
&lt;td&gt;438M&lt;/td&gt;
&lt;td&gt;Generally used in a same way as find. It may refer to look for an unknown data from multiple containers.&lt;/td&gt;
&lt;td&gt;search_element(), search_keyword()&lt;/td&gt;
&lt;td&gt;find&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;close&lt;/td&gt;
&lt;td&gt;492M&lt;/td&gt;
&lt;td&gt;Used when changing state of a resource to make it inaccessible or unusable.&lt;/td&gt;
&lt;td&gt;close_file()&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#5-true-or-false-statement" class="anchor"&gt;
  &lt;/a&gt;
  5. True or False Statement&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Verb&lt;/th&gt;
&lt;th&gt;Written&lt;br&gt;on Github&lt;/th&gt;
&lt;th&gt;Definition&lt;/th&gt;
&lt;th&gt;Examples&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;is&lt;/td&gt;
&lt;td&gt;3B&lt;/td&gt;
&lt;td&gt;Used when defining state of a resource.&lt;/td&gt;
&lt;td&gt;Method: is_available(), is_correct()&lt;br&gt;Variables: name_is_available, date_is_correct&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;has&lt;/td&gt;
&lt;td&gt;1B&lt;/td&gt;
&lt;td&gt;Used to define whether a resource contains a certain data.&lt;/td&gt;
&lt;td&gt;Method: has_name(), has_date()&lt;br&gt;Variables: person_has_name, course_has_date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;can&lt;/td&gt;
&lt;td&gt;2B&lt;/td&gt;
&lt;td&gt;Used to define a certain ability of a resource.&lt;/td&gt;
&lt;td&gt;can_load(), can_create()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;should&lt;/td&gt;
&lt;td&gt;1B&lt;/td&gt;
&lt;td&gt;Used to define a certain obligation of a resource.&lt;/td&gt;
&lt;td&gt;should_render(), should_print_message()&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#6-conclusion" class="anchor"&gt;
  &lt;/a&gt;
  6. Conclusion&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Writing clean code is not a skill that we can obtain overnight. But at the same time, I believe that we can improve the quality of code significantly and constantly by learning the wisdom of other people's clean code. To write this bost, I gained so many ideas from the book &lt;a href="https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship-ebook/dp/B001GSTOAM"&gt;Clean Code written by Robert C. Martin&lt;/a&gt; and many codes on Github. I especially recommend the book for anyone who is just started coding. Many of the contents might seem going too far for newbies, but I am certain that this book will be my forever reference for my career as a developer. &lt;/p&gt;

&lt;p&gt;Thanks to these people who share their own hard work!&lt;/p&gt;

&lt;p&gt;Thanks for reading. If you have any opinion or question, please leave a comment below! In the meantime, please follow me on Linkedin &lt;a href="https://www.linkedin.com/feed/update/urn:li:activity:6771886321091821568/"&gt;@Maiko Miyazaki&lt;/a&gt; or Twitter &lt;a href="https://twitter.com/MaikoMiyazaki"&gt;@Maiko Miyazaki&lt;/a&gt;&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>productivity</category>
      <category>womenintech</category>
    </item>
    <item>
      <title>Cloud-Native CI/CD with Tekton - Laying The Foundation</title>
      <author>Martin Heinz</author>
      <pubDate>Mon, 15 Mar 2021 14:26:58 +0000</pubDate>
      <link>https://dev.to/martinheinz/cloud-native-ci-cd-with-tekton-laying-the-foundation-13n4</link>
      <guid>https://dev.to/martinheinz/cloud-native-ci-cd-with-tekton-laying-the-foundation-13n4</guid>
      <description>&lt;p&gt;We all know that every serious project needs CI/CD and I'm pretty sure that it's not necessary to explain why. There are a lot of tools, platforms and solution to choose from when deciding where to build your CI/CD, though. You could pick Jenkins, Travis, CircleCI, Bamboo, and many other, but if you're building CI/CD for cloud-native applications running on Kubernetes, then it just makes sense to also run cloud-native CI/CD along with it using appropriate tool.&lt;/p&gt;

&lt;p&gt;One such solution that allows you to run CI/CD natively on Kubernetes is &lt;a href="https://tekton.dev/"&gt;Tekton&lt;/a&gt;, so in this article we will begin series about building CI/CD with Tekton, starting with introduction, installation and customization of Tekton to kick-start our journey to cloud-native CI/CD on Kubernetes.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;TL;DR: All resources, scripts and files needed to kick-start your CI/CD with Tekton are available at &lt;a href="https://github.com/MartinHeinz/tekton-kickstarter"&gt;https://github.com/MartinHeinz/tekton-kickstarter&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-it-and-why-even-bother" class="anchor"&gt;
  &lt;/a&gt;
  What is it? (and Why Even Bother?)
&lt;/h2&gt;

&lt;p&gt;As title and intro implies, Tekton is cloud native CI/CD tool. It was originally developed at Google and was known as &lt;em&gt;Knative&lt;/em&gt; pipelines. It runs on Kubernetes as a set of custom resources (CRDs) such as &lt;em&gt;Pipeline&lt;/em&gt; or &lt;em&gt;Task&lt;/em&gt; which lifecycle is managed by Tekton's controller. The fact that it natively runs on Kubernetes makes it ideal to manage/build/deploy any applications and resources that are also being deployed on Kubernetes.&lt;/p&gt;

&lt;p&gt;This shows that it's suitable for managing Kubernetes workloads, but why not use other, more popular tools for this?&lt;/p&gt;

&lt;p&gt;Commonly used CI/CD solutions such as Jenkins, Travis or Bamboo weren't built to run on Kubernetes or lack proper integration with Kubernetes. This makes it difficult and/or annoying to deploy, maintain and manage the CI/CD tool itself as well as use it to deploy any Kubernetes-native applications with it. Tekton on the other hand can be deployed very easily as Kubernetes operator alongside all the other containerized applications and every Tekton pipeline is just another Kubernetes resource managed the same way as good old &lt;em&gt;Pods&lt;/em&gt; or &lt;em&gt;Deployments&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;This also makes Tekton work well with GitOps practices, as you can take all your pipelines and configurations and maintain them in git, which cannot be said about at least one of the above mentioned tools (yes, I hate Jenkins with burning passion). Same goes for resource consumption - considering that whole Tekton deployment is just a couple of pods - a very little memory and CPU is consumed while pipelines are not running in comparison to other CI/CD tools.&lt;/p&gt;

&lt;p&gt;With that said, it's pretty clear that if you're running all your workloads on Kubernetes, then it's very much advisable to use some Kubernetes-native tool for your CI/CD. Is the Tekton the only option though? No, there are - of course - other tools you could use, one of them being &lt;em&gt;JenkinsX&lt;/em&gt; which is an &lt;em&gt;opinionated way to do continuous delivery with Kubernetes, natively&lt;/em&gt;. It packs a lot of tools, which can make your life easier if you don't have any strong preferences for alternative tooling, but it can also be very annoying if you want to customize your tech stack. JenkinsX uses Tekton in the background anyway though, so you might as well learn to use Tekton and then decide, whether you also want all the other components that JenkinsX provides.&lt;/p&gt;

&lt;p&gt;Another option would be &lt;em&gt;Spinnaker&lt;/em&gt; - it's a multi-cloud solution that has been around for a long time. It uses plugins to integrate with various providers, one of them being Kubernetes. It's however, not a build engine - it does not provide tools to test your code, build your application images or push them to registry, for those task you would still need some other CI tool.&lt;/p&gt;

&lt;p&gt;Let's now take a closer look at what Tekton consists of - the core of Tekton consist of just a few &lt;em&gt;CustomResourceDefinitions (CRDs)&lt;/em&gt;, which are &lt;em&gt;Tasks&lt;/em&gt; and &lt;em&gt;Pipelines&lt;/em&gt; which act as a blueprints for &lt;em&gt;TaskRuns&lt;/em&gt; and &lt;em&gt;PipelineRuns&lt;/em&gt;. These four (plus a few other that are either about to be deprecated or aren't relevant right now) are enough to start running some pipelines and tasks.&lt;/p&gt;

&lt;p&gt;That however is usually not sufficient, considering that most setups require the builds, deployments - and therefore - also the pipelines to be triggered by some events. That's why we also install &lt;em&gt;Tekton Triggers&lt;/em&gt; which provides additional resources, namely - &lt;em&gt;EventListener&lt;/em&gt;, &lt;em&gt;TriggerBinding&lt;/em&gt; and &lt;em&gt;TriggerTemplate&lt;/em&gt;. These three resources provide means for us to listen to particular events - such as (GitHub) webhooks, &lt;em&gt;CloudEvents&lt;/em&gt; or events sent by cron jobs - and fire up specific pipelines.&lt;/p&gt;

&lt;p&gt;Last - and very optional component - is &lt;em&gt;Tekton Dashboard&lt;/em&gt;, which is a very simple GUI, yet very convenient tool for inspecting all CRDs, including tasks, pipelines and triggers. It also allows for searching and filtering, which can be helpful when looking for &lt;em&gt;TaskRuns&lt;/em&gt; and &lt;em&gt;PipelineRuns&lt;/em&gt;. You can also use it to create TaskRuns and PipelineRuns from existing Tasks and Pipelines.&lt;/p&gt;

&lt;p&gt;All these pieces are managed by controller deployments and pods, which take care of lifecycle of the above mentioned CRDs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-things-up" class="anchor"&gt;
  &lt;/a&gt;
  Setting Things Up
&lt;/h2&gt;

&lt;p&gt;Considering that Tekton consists of multiple components, installing can be a little complicated and can be done in various ways. Usually you will want to install at least Pipelines and Triggers and the most obvious way would be to install it with raw Kubernetes manifests, but you can take the simpler route and install Tekton Operator from OperatorHub, which already includes all the parts. As a prerequisite (for any of the installation approaches) we will obviously need a cluster, here we will use &lt;em&gt;KinD (Kubernetes in Docker)&lt;/em&gt; for local pipeline development. We will use following custom config for KinD, as we will need to deploy Ingress controller and expose port 80/443 to be able to reach Tekton Triggers event listener.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# kind-tekton.yaml&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Cluster&lt;/span&gt;
&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;kind.x-k8s.io/v1alpha4&lt;/span&gt;
&lt;span class="na"&gt;nodes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;role&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;control-plane&lt;/span&gt;
  &lt;span class="na"&gt;kubeadmConfigPatches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
    &lt;span class="s"&gt;kind: InitConfiguration&lt;/span&gt;
    &lt;span class="s"&gt;nodeRegistration:&lt;/span&gt;
      &lt;span class="s"&gt;kubeletExtraArgs:&lt;/span&gt;
        &lt;span class="s"&gt;node-labels: "ingress-ready=true"&lt;/span&gt;
  &lt;span class="na"&gt;extraPortMappings&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;containerPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;
    &lt;span class="na"&gt;hostPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;
    &lt;span class="na"&gt;protocol&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TCP&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;containerPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;443&lt;/span&gt;
    &lt;span class="na"&gt;hostPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;443&lt;/span&gt;
    &lt;span class="na"&gt;protocol&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TCP&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And we can create the cluster with following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;~ &lt;span class="nv"&gt;$ &lt;/span&gt;kind create cluster &lt;span class="nt"&gt;--name&lt;/span&gt; tekton &lt;span class="nt"&gt;--image&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;kindest/node:v1.20.2 &lt;span class="nt"&gt;--config&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;kind-tekton.yaml
~ &lt;span class="nv"&gt;$ &lt;/span&gt;kubectl cluster-info &lt;span class="nt"&gt;--context&lt;/span&gt; kind-tekton
~ &lt;span class="nv"&gt;$ &lt;/span&gt;kubectl config set-context kind-tekton
~ &lt;span class="nv"&gt;$ &lt;/span&gt;kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/provider/kind/deploy.yaml
~ &lt;span class="nv"&gt;$ &lt;/span&gt;kubectl &lt;span class="nb"&gt;wait&lt;/span&gt; &lt;span class="nt"&gt;--namespace&lt;/span&gt; ingress-nginx &lt;span class="nt"&gt;--for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;condition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ready pod &lt;span class="nt"&gt;--selector&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;app.kubernetes.io/component&lt;span class="o"&gt;=&lt;/span&gt;controller &lt;span class="nt"&gt;--timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;90s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, for the actual deployment of Tekton Pipeline and Triggers - I mentioned an installation via Tekton Operator which might seem like the fastest and the best way to get up and running with everything preconfigured, the operator however (at the time of writing) lacks any actual documentation, so you would need to dig around quite a lot to find any explanation as to how things work, which wouldn't be that big of an problem for me personally. The real problem here though, is that the Operator in OperatorHub isn't up to date and I couldn't find current build/image which renders it more or less useless. I'm sure this will change at some point when Tekton Operator is a little more mature (so keep an eye on it's &lt;a href="https://github.com/tektoncd/operator"&gt;repository&lt;/a&gt;), but until then, other installation options should be used.&lt;/p&gt;

&lt;p&gt;If you happen to be running on OpenShift, the option you could use would be &lt;em&gt;Red Hat Pipeline Operator&lt;/em&gt;, which is - again - Kubernetes Operator, but in this case curated by Red Hat and customized for OpenShift. It can be installed with just a few clicks in web console, so in case you have access to OpenShift cluster, then you should give it a try. One downside of using this is a slower release cycle so you will be forced to use not-quite-up-to-date version of Tekton.&lt;/p&gt;

&lt;p&gt;If OpenShift is not an option or you just want run things on Kubernetes, then installation using raw manifests will work just fine and this is how it's done:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;~ &lt;span class="nv"&gt;$ &lt;/span&gt;kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; https://storage.googleapis.com/tekton-releases/pipeline/latest/release.yaml  &lt;span class="c"&gt;# Deploy pipelines&lt;/span&gt;
~ &lt;span class="nv"&gt;$ &lt;/span&gt;kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; https://storage.googleapis.com/tekton-releases/triggers/latest/release.yaml  &lt;span class="c"&gt;# Deploy triggers&lt;/span&gt;
~ &lt;span class="nv"&gt;$ &lt;/span&gt;kubectl get svc,deploy &lt;span class="nt"&gt;--namespace&lt;/span&gt; tekton-pipelines &lt;span class="nt"&gt;--selector&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;app.kubernetes.io/part-of&lt;span class="o"&gt;=&lt;/span&gt;tekton-pipelines
NAME                                  TYPE        CLUSTER-IP      EXTERNAL-IP   PORT&lt;span class="o"&gt;(&lt;/span&gt;S&lt;span class="o"&gt;)&lt;/span&gt;                              AGE
service/tekton-pipelines-controller   ClusterIP   10.106.114.94   &amp;lt;none&amp;gt;        9090/TCP,8080/TCP                    2m13s
service/tekton-pipelines-webhook      ClusterIP   10.105.247.0    &amp;lt;none&amp;gt;        9090/TCP,8008/TCP,443/TCP,8080/TCP   2m13s

NAME                                          READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/tekton-pipelines-controller   1/1     1            1           2m13s
deployment.apps/tekton-pipelines-webhook      1/1     1            1           2m13s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to also include Tekton Dashboard in this installation, then you need to apply one more set of manifests:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;~ &lt;span class="nv"&gt;$ &lt;/span&gt;kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; https://storage.googleapis.com/tekton-releases/dashboard/latest/tekton-dashboard-release.yaml  &lt;span class="c"&gt;# Deploy dashboard&lt;/span&gt;
~ &lt;span class="nv"&gt;$ &lt;/span&gt;kubectl get svc,deploy &lt;span class="nt"&gt;-n&lt;/span&gt; tekton-pipelines &lt;span class="nt"&gt;--selector&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;app&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tekton-dashboard
NAME                       TYPE        CLUSTER-IP      EXTERNAL-IP   PORT&lt;span class="o"&gt;(&lt;/span&gt;S&lt;span class="o"&gt;)&lt;/span&gt;    AGE
service/tekton-dashboard   ClusterIP   10.111.144.87   &amp;lt;none&amp;gt;        9097/TCP   25s

NAME                               READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/tekton-dashboard   1/1     1            1           25s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On top of that we also need extra &lt;em&gt;Ingress&lt;/em&gt; to reach the Dashboard:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;networking.k8s.io/v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Ingress&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dashboard&lt;/span&gt;
  &lt;span class="na"&gt;namespace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;tekton-pipelines&lt;/span&gt;
  &lt;span class="na"&gt;annotations&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;nginx.ingress.kubernetes.io/rewrite-target&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/$2'&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;http&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;paths&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/dashboard(/|$)(.*)&lt;/span&gt;
            &lt;span class="na"&gt;pathType&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Prefix&lt;/span&gt;
            &lt;span class="na"&gt;backend&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
              &lt;span class="na"&gt;service&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;tekton-dashboard&lt;/span&gt;
                &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                  &lt;span class="na"&gt;number&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;9097&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The previously applied Dashboard resources are by default created in &lt;code&gt;tekton-pipelines&lt;/code&gt; namespace and include &lt;em&gt;Service&lt;/em&gt; named &lt;code&gt;tekton-dashboard&lt;/code&gt; that uses port &lt;code&gt;9097&lt;/code&gt;, which are the values referenced in the Ingress above. This Ingress also has rewrite rule to show the dashboard at &lt;code&gt;/dashboard/...&lt;/code&gt; path instead of &lt;code&gt;/&lt;/code&gt;. This is because we will want to use the default &lt;code&gt;/&lt;/code&gt; (root) path for the webhook of our event listener (topic for later).&lt;/p&gt;

&lt;p&gt;To verify that the Dashboard really is live and everything is running, you can browse to &lt;code&gt;localhost/dashboard/&lt;/code&gt; (assuming you're using &lt;em&gt;KinD&lt;/em&gt;) and you should see something like this (minus the actual pipeline):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0ZsFYyKw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2dkouvtwz8pc1u34h9sw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ZsFYyKw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2dkouvtwz8pc1u34h9sw.png" alt="Tekton Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If all this setup seems like way too much effort, then you can grab the &lt;a href="https://github.com/MartinHeinz/tekton-kickstarter"&gt;&lt;code&gt;tekton-kickstarter&lt;/code&gt; repository&lt;/a&gt; and just run &lt;code&gt;make&lt;/code&gt; and you will have all of the above ready in a minute.&lt;/p&gt;

&lt;p&gt;With this deployed, we have all the (very) basic pieces up and running, so let's poke around in CLI to see what we actually deployed with those you commands...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exploring-custom-resources" class="anchor"&gt;
  &lt;/a&gt;
  Exploring Custom Resources
&lt;/h2&gt;

&lt;p&gt;If you followed the steps above (or just used &lt;code&gt;make&lt;/code&gt; target from the kick-start repository), then you should have quite a few new resources in your cluster now. All the components of Tekton will be located in &lt;code&gt;tekton-pipelines&lt;/code&gt; namespace and should include the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;~ &lt;span class="nv"&gt;$ &lt;/span&gt;kubectl get deploy,service,ingress,hpa &lt;span class="nt"&gt;-n&lt;/span&gt; tekton-pipelines 
NAME                                                READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/tekton-dashboard                    1/1     1            1           2m24s
deployment.apps/tekton-pipelines-controller         1/1     1            1           6m57s
deployment.apps/tekton-pipelines-webhook            1/1     1            1           6m57s
deployment.apps/tekton-triggers-controller          1/1     1            1           6m56s
deployment.apps/tekton-triggers-core-interceptors   1/1     1            1           6m56s
deployment.apps/tekton-triggers-webhook             1/1     1            1           6m56s

NAME                                        TYPE        CLUSTER-IP       EXTERNAL-IP   PORT&lt;span class="o"&gt;(&lt;/span&gt;S&lt;span class="o"&gt;)&lt;/span&gt;                              AGE
service/tekton-dashboard                    ClusterIP   10.108.143.42    &amp;lt;none&amp;gt;        9097/TCP                             2m24s
service/tekton-pipelines-controller         ClusterIP   10.98.218.218    &amp;lt;none&amp;gt;        9090/TCP,8080/TCP                    6m57s
service/tekton-pipelines-webhook            ClusterIP   10.101.192.94    &amp;lt;none&amp;gt;        9090/TCP,8008/TCP,443/TCP,8080/TCP   6m57s
service/tekton-triggers-controller          ClusterIP   10.98.189.205    &amp;lt;none&amp;gt;        9090/TCP                             6m56s
service/tekton-triggers-core-interceptors   ClusterIP   10.110.47.172    &amp;lt;none&amp;gt;        80/TCP                               6m56s
service/tekton-triggers-webhook             ClusterIP   10.111.209.100   &amp;lt;none&amp;gt;        443/TCP                              6m56s

NAME                                  CLASS    HOSTS   ADDRESS     PORTS   AGE
ingress.networking.k8s.io/dashboard   &amp;lt;none&amp;gt;   &lt;span class="k"&gt;*&lt;/span&gt;       localhost   80      2m24s

NAME                                                           REFERENCE                             TARGETS          MINPODS   MAXPODS   REPLICAS   AGE
horizontalpodautoscaler.autoscaling/tekton-pipelines-webhook   Deployment/tekton-pipelines-webhook   &amp;lt;unknown&amp;gt;/100%   1         5         1          6m57s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These include all the deployments, services as well as autoscaler which can help with higher availability in case of higher number of requests. If HA is required, then you can also look into &lt;a href="https://github.com/tektoncd/pipeline/blob/master/docs/install.md#configuring-high-availability"&gt;docs section&lt;/a&gt; which explains how to configure Tekton for HA.&lt;/p&gt;

&lt;p&gt;Besides the resources shown above, you can also find event listeners and their resources in the &lt;code&gt;default&lt;/code&gt; namespace. These could share namespace with the core components, but splitting them like this allows you to keep the pipelines and their webhooks divided based on application/project they are used for:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl get deploy,service,ingress,hpa &lt;span class="nt"&gt;-n&lt;/span&gt; default
NAME                                     READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/el-cron-listener         1/1     1            1           8m40s
deployment.apps/el-http-event-listener   1/1     1            1           8m40s

NAME                             TYPE        CLUSTER-IP      EXTERNAL-IP   PORT&lt;span class="o"&gt;(&lt;/span&gt;S&lt;span class="o"&gt;)&lt;/span&gt;    AGE
service/el-cron-listener         ClusterIP   10.100.238.60   &amp;lt;none&amp;gt;        8080/TCP   8m40s
service/el-http-event-listener   ClusterIP   10.98.88.164    &amp;lt;none&amp;gt;        8080/TCP   8m40s

NAME                                      CLASS    HOSTS   ADDRESS     PORTS   AGE
ingress.networking.k8s.io/http-listener   &amp;lt;none&amp;gt;   &lt;span class="k"&gt;*&lt;/span&gt;       localhost   80      8m40s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Installation of Tekton also brings along couple of CRDs, which are used to manage all tasks, pipelines and triggers:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl get crd | &lt;span class="nb"&gt;grep &lt;/span&gt;tekton
clustertasks.tekton.dev                      2021-02-27T20:23:35Z
clustertriggerbindings.triggers.tekton.dev   2021-02-27T20:23:36Z
conditions.tekton.dev                        2021-02-27T20:23:35Z
eventlisteners.triggers.tekton.dev           2021-02-27T20:23:36Z
extensions.dashboard.tekton.dev              2021-02-27T20:28:08Z
pipelineresources.tekton.dev                 2021-02-27T20:23:35Z
pipelineruns.tekton.dev                      2021-02-27T20:23:35Z
pipelines.tekton.dev                         2021-02-27T20:23:35Z
runs.tekton.dev                              2021-02-27T20:23:35Z
taskruns.tekton.dev                          2021-02-27T20:23:35Z
tasks.tekton.dev                             2021-02-27T20:23:35Z
triggerbindings.triggers.tekton.dev          2021-02-27T20:23:36Z
triggers.triggers.tekton.dev                 2021-02-27T20:23:36Z
triggertemplates.triggers.tekton.dev         2021-02-27T20:23:36Z
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can use these CRDs to list and inspect Tasks and Pipelines with &lt;code&gt;kubectl get&lt;/code&gt; or &lt;code&gt;kubectl describe&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For every user of Kubernetes, the natural way of interacting with resources is using &lt;code&gt;kubectl&lt;/code&gt;, but Tekton also has it's own CLI tool called &lt;code&gt;tkn&lt;/code&gt;. You can download it from this &lt;a href="https://github.com/tektoncd/cli/releases/tag/v0.16.0"&gt;release page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This CLI allows you to interact with Tekton resources without having to deal with CRDs. As an example you can list or inspect a Pipelines:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;~ &lt;span class="nv"&gt;$ &lt;/span&gt;tkn pipeline list
NAME              AGE            LAST RUN    STARTED          DURATION    STATUS
database-backup   12 hours ago   job-qxcwc   39 minutes ago   8 minutes   Failed
deploy            12 hours ago   &lt;span class="nt"&gt;---&lt;/span&gt;         &lt;span class="nt"&gt;---&lt;/span&gt;              &lt;span class="nt"&gt;---&lt;/span&gt;         &lt;span class="nt"&gt;---&lt;/span&gt;

~ &lt;span class="nv"&gt;$ &lt;/span&gt;tkn pipeline describe deploy
&lt;span class="c"&gt;# ... Long and verbose output&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Besides inspecting resources, you can also use it to start TaskRuns or PipelineRuns and subsequently read the logs without having to look up individual pods:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;~ &lt;span class="nv"&gt;$ &lt;/span&gt;tkn task start send-to-webhook-slack
? Value &lt;span class="k"&gt;for &lt;/span&gt;param &lt;span class="sb"&gt;`&lt;/span&gt;webhook-secret&lt;span class="sb"&gt;`&lt;/span&gt; of &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;string&lt;span class="sb"&gt;`&lt;/span&gt;? slack-webhook
? Value &lt;span class="k"&gt;for &lt;/span&gt;param &lt;span class="sb"&gt;`&lt;/span&gt;message&lt;span class="sb"&gt;`&lt;/span&gt; of &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;string&lt;span class="sb"&gt;`&lt;/span&gt;? Hello There!
TaskRun started: send-to-webhook-slack-run-d5sxv

In order to track the TaskRun progress run:
tkn taskrun logs send-to-webhook-slack-run-d5sxv &lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="nt"&gt;-n&lt;/span&gt; default

~ &lt;span class="nv"&gt;$ &lt;/span&gt;tkn taskrun logs send-to-webhook-slack-run-d5sxv &lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="nt"&gt;-n&lt;/span&gt; default
&lt;span class="o"&gt;[&lt;/span&gt;post]   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
&lt;span class="o"&gt;[&lt;/span&gt;post]                                  Dload  Upload   Total   Spent    Left  Speed
100    23    0     0  100    23      0    111 &lt;span class="nt"&gt;--&lt;/span&gt;:--:-- &lt;span class="nt"&gt;--&lt;/span&gt;:--:-- &lt;span class="nt"&gt;--&lt;/span&gt;:--:--   111
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see above, it even prompts you for parameters if you don't specify them initially!&lt;/p&gt;

&lt;p&gt;One thing that annoys me to no end though, is the reversed order of arguments this CLI tool uses compared to &lt;code&gt;kubectl&lt;/code&gt;. With &lt;code&gt;kubectl&lt;/code&gt; the order is &lt;code&gt;kubectl &amp;lt;VERB&amp;gt; &amp;lt;RESOURCE&amp;gt;&lt;/code&gt; and with &lt;code&gt;tkn&lt;/code&gt; it's &lt;code&gt;tkn &amp;lt;RESOURCE&amp;gt; &amp;lt;VERB&amp;gt;&lt;/code&gt; - a minor nitpick about otherwise very handy tool.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#customizing-everything" class="anchor"&gt;
  &lt;/a&gt;
  Customizing Everything
&lt;/h2&gt;

&lt;p&gt;The installation that we've done already, puts in place some reasonable default values for all the configs. These can be changed a bit to better suit your needs and simplify things down the line. There are 2 &lt;em&gt;ConfigMaps&lt;/em&gt; that we will take a look at:&lt;/p&gt;

&lt;p&gt;First of them is &lt;code&gt;config-defaults&lt;/code&gt;, which - as name implies - sets defaults for pipeline and task executions. These include things like default timeout, &lt;em&gt;ServiceAccount&lt;/em&gt; or node selector. This ConfigMap also initially includes &lt;code&gt;_example&lt;/code&gt; key, which has all the possible (commented out) options and their description, so when in doubt, just run &lt;code&gt;kubectl get cm config-defaults -n tekton-pipelines -o=jsonpath='{ .data._example }'&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The other available ConfigMap is &lt;code&gt;feature-flags&lt;/code&gt;, which allows you to switch on/off some of the Tekton features. You can mostly leave those on default values. Only one that I change is &lt;code&gt;require-git-ssh-secret-known-hosts&lt;/code&gt;, which I prefer to have switched on to require &lt;code&gt;known_hosts&lt;/code&gt; to be included when authenticating to git with SSH. To view current settings, you can run &lt;code&gt;kubectl get cm feature-flags -n tekton-pipelines -o=jsonpath='{.data}' | jq .&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you want complete, customized version of both of these configs, you can grab them in my repository &lt;a href="https://github.com/MartinHeinz/tekton-kickstarter/tree/master/config"&gt;here&lt;/a&gt;. If you used the &lt;code&gt;make&lt;/code&gt; script in this repository to set up your Tekton environment, then these were already applied during installation.&lt;/p&gt;

&lt;p&gt;Besides these global defaults, there are also other configs you might want to set. Most important of these would be SSH key for authenticating to git. This gets configured in Kubernetes &lt;em&gt;Secret&lt;/em&gt; containing SSH private key and &lt;code&gt;known_hosts&lt;/code&gt; file in &lt;code&gt;base64&lt;/code&gt; format:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Secret&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ssh-key&lt;/span&gt;
  &lt;span class="na"&gt;annotations&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;tekton.dev/git-0&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;github.com&lt;/span&gt;
&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;kubernetes.io/ssh-auth&lt;/span&gt;
&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;# cat ~/.ssh/id_rsa | base64&lt;/span&gt;
  &lt;span class="na"&gt;ssh-privatekey&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|-&lt;/span&gt;
    &lt;span class="s"&gt;...&lt;/span&gt;
  &lt;span class="c1"&gt;# cat ~/.ssh/known_hosts | base64&lt;/span&gt;
  &lt;span class="na"&gt;known_hosts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|-&lt;/span&gt;
    &lt;span class="s"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This secret also includes Tekton annotation(s) (&lt;code&gt;tekton.dev/git-*&lt;/code&gt;) to make it aware that it should use it for authentication for specified provider.&lt;/p&gt;

&lt;p&gt;Another important Secret is registry credentials which allows you to push Docker images (or pull from private registry). For this one we use &lt;code&gt;dockerconfigjson&lt;/code&gt; Secret type and once again we specify Tekton annotation with registry URL of your provider:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# kubectl create secret generic reg-cred \&lt;/span&gt;
&lt;span class="c1"&gt;#  --from-file=.dockerconfigjson=&amp;lt;DOCKER_CFG_PATH&amp;gt; \&lt;/span&gt;
&lt;span class="c1"&gt;#  --type=kubernetes.io/dockerconfigjson&lt;/span&gt;
&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Secret&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;reg-cred&lt;/span&gt;
  &lt;span class="na"&gt;annotations&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;tekton.dev/docker-0&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://docker.io'&lt;/span&gt;
&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;kubernetes.io/dockerconfigjson&lt;/span&gt;
&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;.dockerconfigjson&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Both of these then need to be added to ServiceAccount that your tasks and pipelines will be using. This should be the ServiceAccount that was previously specified in &lt;code&gt;config-defaults&lt;/code&gt; ConfigMap.&lt;/p&gt;

&lt;p&gt;Speaking of ServiceAccounts - you will need to give it enough permissions to interact with pipelines and optionally add extra permissions based on what your pipelines will be doing. For example, if you want to run &lt;code&gt;kubectl rollout&lt;/code&gt;, then your ServiceAccount will need permission for that.&lt;/p&gt;

&lt;p&gt;Both ServiceAccount and reasonable Roles and RoleBindings are available in the repository &lt;a href="https://github.com/MartinHeinz/tekton-kickstarter/blob/master/misc/sa.yaml"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Last but not least, I also recommend setting &lt;em&gt;LimitRange&lt;/em&gt; to make sure that each of your tasks get enough CPU and memory and at the same time doesn't consume way too much. The exact values depend on your use case but some reasonable defaults are shown &lt;a href="https://github.com/MartinHeinz/tekton-kickstarter/blob/master/misc/limit.yaml"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And with that, we have fully prepared and customized installation of Tekton with all the components and their configs, ready to run some pipelines!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Tekton is a versatile tool that can get quite complicated and therefore one short article definitely isn't enough to go over every piece of it in detail. This introduction should give you enough to get up and running with all the configurations in place. In the following articles in these series, we will explore how to use and build your own custom Tasks and Pipelines, deal with event handling - both HTTP events and scheduled with cron and much more. So, stay tuned for next article and in the meantime you can have a sneak peek at files in &lt;a href="https://github.com/MartinHeinz/tekton-kickstarter"&gt;tekton-kickstarter repository&lt;/a&gt; where all the resources from this and following articles are already available. And in case you have some feedback or suggestion feel free to open an issue in the repository or just star it if like you the content. ð&lt;/p&gt;

</description>
      <category>devops</category>
      <category>kubernetes</category>
      <category>cicd</category>
      <category>linux</category>
    </item>
    <item>
      <title>Java IDEs (of March)</title>
      <author>Marisa Goode (she/her)</author>
      <pubDate>Mon, 15 Mar 2021 14:14:06 +0000</pubDate>
      <link>https://dev.to/devmarisa/java-ides-4id9</link>
      <guid>https://dev.to/devmarisa/java-ides-4id9</guid>
      <description>&lt;p&gt;Hey Folks,&lt;br&gt;
I figured today would be a &lt;del&gt;good&lt;/del&gt; funny day to ask but which Java IDE do you all prefer. At my workplace we teach the Spring Framework so we have been using Spring Tool Suite. It does the job but it's not well loved by the instructors or the students. &lt;/p&gt;

</description>
      <category>java</category>
      <category>webdev</category>
    </item>
    <item>
      <title>GYRO-WEB: ACCESSING THE DEVICE ORIENTATION IN JAVASCRIPT</title>
      <author>Oleksii Trekhleb</author>
      <pubDate>Mon, 15 Mar 2021 13:18:18 +0000</pubDate>
      <link>https://dev.to/trekhleb/gyro-web-accessing-the-device-orientation-in-javascript-2492</link>
      <guid>https://dev.to/trekhleb/gyro-web-accessing-the-device-orientation-in-javascript-2492</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This article has &lt;a href="https://trekhleb.dev/blog/2021/gyro-web/"&gt;interactive version&lt;/a&gt;. You may open it to play around with the device orientation right from your mobile device.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#accessing-device-orientation-in-pure-javascript" class="anchor"&gt;
  &lt;/a&gt;
  Accessing device orientation in pure JavaScript
&lt;/h2&gt;

&lt;p&gt;In Javascript, you may access your device orientation data by listening to the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Detecting_device_orientation"&gt;deviceorientation&lt;/a&gt; event. It is as easy as the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;deviceorientation&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handleOrientation&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleOrientation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;alpha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;beta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;beta&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;gamma&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;gamma&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// Do stuff...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is the meaning of the &lt;code&gt;alpha&lt;/code&gt;, &lt;code&gt;beta&lt;/code&gt; and &lt;code&gt;gama&lt;/code&gt; angles:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--84V8IXc0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/trekhleb/trekhleb.github.io/master/src/posts/2021/gyro-web/assets/01-cover.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--84V8IXc0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/trekhleb/trekhleb.github.io/master/src/posts/2021/gyro-web/assets/01-cover.jpg" alt="device orientation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Image source: &lt;a href="https://newnow.co/me-myself-and-i/"&gt;newnow.co&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But!&lt;/strong&gt; Not every browser allows you to access the orientation data without user's permission. For example, in iOS 13 Apple has introduced the &lt;a href="https://www.w3.org/TR/orientation-event/#dom-deviceorientationevent-requestpermission"&gt;requestPermission&lt;/a&gt; method. It must be triggered on user action (click, tap or equivalent).&lt;/p&gt;

&lt;p&gt;The example of accessing the device orientation becomes a bit more complicated:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;DeviceMotionEvent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestPermission&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;function&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Handle iOS 13+ devices.&lt;/span&gt;
    &lt;span class="nx"&gt;DeviceMotionEvent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestPermission&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;granted&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;devicemotion&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handleOrientation&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Request to access the orientation was rejected&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Handle regular non iOS 13+ devices.&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;devicemotion&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handleOrientation&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you would turn the device orientation toggle on in the &lt;a href="https://trekhleb.dev/blog/2021/gyro-web/"&gt;interactive version of this post&lt;/a&gt; you should see what angles your device is reporting.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8-TwUkSh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/trekhleb/trekhleb.github.io/master/src/posts/2021/gyro-web/assets/01-demo-orientation.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8-TwUkSh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/trekhleb/trekhleb.github.io/master/src/posts/2021/gyro-web/assets/01-demo-orientation.gif" alt="angles demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#debugging-the-orientation-access-in-the-browser" class="anchor"&gt;
  &lt;/a&gt;
  Debugging the orientation access in the browser
&lt;/h2&gt;

&lt;p&gt;In case if you're using the desktop device you may imitate the device rotation from the "Sensors" tab in dev-tools:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7m0RRaBt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/trekhleb/trekhleb.github.io/master/src/posts/2021/gyro-web/assets/02-chrome-testing.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7m0RRaBt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/trekhleb/trekhleb.github.io/master/src/posts/2021/gyro-web/assets/02-chrome-testing.jpg" alt="testing in chrome"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cool! So now we have the access to device orientation, and we can even test it in the browser!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-hook-for-accessing-the-device-orientation" class="anchor"&gt;
  &lt;/a&gt;
  React hook for accessing the device orientation
&lt;/h2&gt;

&lt;p&gt;The last step I would like to take is to come up with the &lt;a href="https://reactjs.org/docs/hooks-intro.html"&gt;React hook&lt;/a&gt;, that will encapsulate the orientation fetching for me, and make it easier to use it in the React components (like the one that displayed the angles to you above).&lt;/p&gt;

&lt;p&gt;Here is an example of the &lt;code&gt;useDeviceOrientation.ts&lt;/code&gt; hook, that is written in TypeScript:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;DeviceOrientation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;beta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;gamma&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;UseDeviceOrientationData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;orientation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DeviceOrientation&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;requestAccess&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;revokeAccess&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useDeviceOrientation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nx"&gt;UseDeviceOrientationData&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;Error&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;orientation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setOrientation&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DeviceOrientation&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onDeviceOrientation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DeviceOrientationEvent&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setOrientation&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;beta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;beta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;gamma&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;gamma&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;revokeAccessAsync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;deviceorientation&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onDeviceOrientation&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;setOrientation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;requestAccessAsync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;DeviceOrientationEvent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Device orientation event is not supported by your browser&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;DeviceOrientationEvent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestPermission&lt;/span&gt;
      &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;DeviceMotionEvent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestPermission&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;function&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="na"&gt;permission&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;PermissionState&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;permission&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;DeviceOrientationEvent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestPermission&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;permission&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;granted&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Request to access the device orientation was rejected&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;deviceorientation&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onDeviceOrientation&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;requestAccess&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;requestAccessAsync&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;revokeAccess&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;revokeAccessAsync&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;revokeAccess&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;revokeAccess&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;orientation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;requestAccess&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;revokeAccess&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The hook might be used as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Toggle&lt;/span&gt;  &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Toggle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useDeviceOrientation&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./useDeviceOrientation&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;OrientationInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ReactElement&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;orientation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;requestAccess&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;revokeAccess&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useDeviceOrientation&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onToggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;toggleState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;toggleState&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;requestAccess&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;revokeAccess&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;orientationInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;orientation&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;É: &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;orientation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;alpha&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Î²: &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;orientation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;beta&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Î³: &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;orientation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;gamma&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;errorElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"error"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Toggle&lt;/span&gt; &lt;span class="na"&gt;onToggle&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onToggle&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;orientationInfo&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;errorElement&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;OrientationInfo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#demo" class="anchor"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;Finally, having the access to the device orientation, let's imitate a 3D space, and a possibility to look at the object from a 3D perspective by rotating your mobile device. Imagine you have a virtual shopping item, and you want to see it from different angles and sides before putting it into your basket.&lt;/p&gt;

&lt;p&gt;We will use a simple 3D cube which is made with pure CSS by using the &lt;a href="https://css-tricks.com/almanac/properties/p/perspective/"&gt;perspective&lt;/a&gt;, &lt;a href="https://css-tricks.com/almanac/properties/p/perspective-origin/"&gt;perspective-origin&lt;/a&gt; and &lt;a href="https://css-tricks.com/almanac/properties/t/transform/"&gt;transform&lt;/a&gt; properties (you may find the full example with styles &lt;a href="https://css-tricks.com/how-css-perspective-works/"&gt;on css-tricks.com&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Here we go, here is our Gyro-Cube that you should be able to see from the different angles depending on your device orientation!&lt;/p&gt;

&lt;p&gt;In case if you're reading the article from the laptop, here's how the demo should work on mobile devices if you would launch the &lt;a href="https://trekhleb.dev/blog/2021/gyro-web/"&gt;interactive version of this post&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j48p_MlS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/trekhleb/trekhleb.github.io/master/src/posts/2021/gyro-web/assets/03-demo-02.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j48p_MlS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/trekhleb/trekhleb.github.io/master/src/posts/2021/gyro-web/assets/03-demo-02.gif" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You may find all the code examples from this article (including the Gyro-cube styles) in &lt;a href="https://github.com/trekhleb/trekhleb.github.io/tree/master/src/posts/2021/gyro-web/components/"&gt;trekhleb.github.io&lt;/a&gt; repo.&lt;/p&gt;

&lt;p&gt;I hope this example was useful for you! I also hope that you will come up with much more interesting and realistic use-case for the device orientation than the Gyro-Cube above ð Happy coding!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>react</category>
    </item>
    <item>
      <title>Work with Production Data Deletion</title>
      <author>toooooooooomy</author>
      <pubDate>Mon, 15 Mar 2021 13:01:01 +0000</pubDate>
      <link>https://dev.to/kazu9su/work-with-production-data-deletion-3p6j</link>
      <guid>https://dev.to/kazu9su/work-with-production-data-deletion-3p6j</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction" class="anchor"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;The working process of production data deletion is completely different from development tasks.&lt;br&gt;
We should take it as another kind of task, and think with another way. The coding examples are based on RoR in this article.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#estimate-the-workload" class="anchor"&gt;
  &lt;/a&gt;
  Estimate the workload
&lt;/h1&gt;

&lt;p&gt;It is difficult to estimate without investigation to work through data deletion.&lt;br&gt;
I can say, do not estimate via the usual development style estimation process.&lt;br&gt;
As a rough estimation, it could take 2 weeks at least to complete the whole process.&lt;br&gt;
Because we should answer the questions listed below in advance.&lt;br&gt;
Furthermore, performance could be a problem after you finish up writing code.&lt;br&gt;
I do recommend doing a sensitive investigation, discuss it with all involved people including QA developers before start working on it.&lt;br&gt;
It would be the fastest way.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#questions-we-should-answer-before-start-coding" class="anchor"&gt;
  &lt;/a&gt;
  Questions we should answer before start coding
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;How much data do we have to delete?&lt;/li&gt;
&lt;li&gt;How can we test the deletion?&lt;/li&gt;
&lt;li&gt;What is the data to delete?&lt;/li&gt;
&lt;li&gt;How many related resources belong to target data?&lt;/li&gt;
&lt;li&gt;How can we estimate the deletion time?&lt;/li&gt;
&lt;li&gt;Can we have an alternative approach if it's difficult to delete the whole data?&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#general-coding-tips-to-handle-huge-data-to-delete" class="anchor"&gt;
  &lt;/a&gt;
  General coding tips to handle huge data to delete
&lt;/h1&gt;

&lt;p&gt;I show the example via Ruby on Rails(RoR) code but it would be able to translate to other languages easily.&lt;br&gt;
Let's say, you are working with an E-commerce app and we have orders, and order_items belong to each order.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#avoid-n1" class="anchor"&gt;
  &lt;/a&gt;
  Avoid N+1
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#do-not-iterate-all-associated-relations" class="anchor"&gt;
  &lt;/a&gt;
  Do not iterate all associated relations
&lt;/h3&gt;

&lt;p&gt;If the target data amount is huge, using iteration could be a cause of a terrible performance problem.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Order&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;user_id: &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;order_items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;order_item&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
     &lt;span class="o"&gt;...&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, if the order amount is millions, this leads significant N+1 problem.&lt;br&gt;
We should consider the way not to use ORM magics.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#use-deleteall-instead-of-destroyall" class="anchor"&gt;
  &lt;/a&gt;
  Use delete_all instead of destroy_all
&lt;/h3&gt;

&lt;p&gt;In RoR, there are basically 2 methods to delete records, delete and destroy. &lt;code&gt;destroy&lt;/code&gt; methods calls callbacks defined on a model before deleting the object. On the other hand, &lt;code&gt;delete&lt;/code&gt; doesn't see callbacks set up on the model, simply calling a delete SQL.&lt;br&gt;
Given that, delete_all is way faster than destroy_all, and it makes a significant performance difference if the data is big.&lt;br&gt;
And, it means we should take care of the operation we defined in the &lt;code&gt;before_destroy&lt;/code&gt; or &lt;code&gt;after_destroy&lt;/code&gt; callbacks manually.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#use-batches" class="anchor"&gt;
  &lt;/a&gt;
  Use batches
&lt;/h2&gt;

&lt;p&gt;If it comes to delete even thousands of records, we should handle it carefully to use database resources sufficiently. Probably simply calling &lt;code&gt;delete_all&lt;/code&gt; is not enough.&lt;br&gt;
In that case, use something like built-in method find_in_batches or &lt;a href="https://github.com/ankane/delete_in_batches"&gt;delete_in_batches gem&lt;/a&gt;.&lt;br&gt;
The batch size should be around some thousands to prevent DB stuck. In find_in_batches, default is 1,000. In delete_in_batches, default is 10,000.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Order&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_in_batches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;batch_size: &lt;/span&gt;&lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;orders&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;orders&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;delete_all&lt;/span&gt;
  &lt;span class="nb"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# throttle down DB&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#set-asleep-to-throttle-down-the-db" class="anchor"&gt;
  &lt;/a&gt;
  Set asleep to throttle down the DB
&lt;/h2&gt;

&lt;p&gt;Like the above example, looks good to throttle down by using sleep in batches when we delete in batches. &lt;a href="https://api.rubyonrails.org/classes/ActiveRecord/Batches.html#method-i-in_batches"&gt;The RoR official website recommends it&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#when-the-deletion-is-quite-slow" class="anchor"&gt;
  &lt;/a&gt;
  When the deletion is quite slow
&lt;/h1&gt;

&lt;p&gt;Possibly you couldn't find this problem until using the full prod pruned data. That is why using prod pruned data is important.&lt;br&gt;
Anyhow, in many cases, the cause of the slow query is full table scan due to no index as you know.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#case-1-no-index-on-the-column-used-in-where-sql" class="anchor"&gt;
  &lt;/a&gt;
  Case 1: No index on the column used in where SQL
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;DELETE&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'something@localhost'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;SQL tries to look for target records by email but there is no index on email so that it does a full table scan. It is simple and you are probably familiar with it.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#case-2-no-index-on-the-column-to-use-constraint-check" class="anchor"&gt;
  &lt;/a&gt;
  Case 2: No index on the column to use constraint check
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;DELETE&lt;/span&gt; &lt;span class="n"&gt;addresses&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;                  &lt;span class="k"&gt;Table&lt;/span&gt; &lt;span class="nv"&gt;"addresses"&lt;/span&gt;

   &lt;span class="k"&gt;Column&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;Type&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;Modifiers&lt;/span&gt;
&lt;span class="c1"&gt;-----------+------+------------------------------&lt;/span&gt;
 &lt;span class="n"&gt;id&lt;/span&gt;        &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;nextval&lt;/span&gt;&lt;span class="p"&gt;(...&lt;/span&gt;
 &lt;span class="n"&gt;street_no&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Indexes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nv"&gt;"idx_primary"&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;btree&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Referenced&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="nv"&gt;"users"&lt;/span&gt; &lt;span class="k"&gt;CONSTRAINT&lt;/span&gt; &lt;span class="nv"&gt;"fk_users_addresses"&lt;/span&gt; &lt;span class="k"&gt;FOREIGN&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;address_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;REFERENCES&lt;/span&gt; &lt;span class="n"&gt;addresses&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;VALID&lt;/span&gt;

                  &lt;span class="k"&gt;Table&lt;/span&gt; &lt;span class="nv"&gt;"users"&lt;/span&gt;
    &lt;span class="k"&gt;Column&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="k"&gt;Type&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;         &lt;span class="n"&gt;Modifiers&lt;/span&gt;
&lt;span class="c1"&gt;-------------+--------+--------------------------------&lt;/span&gt;
 &lt;span class="n"&gt;id&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;bigint&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;nextval&lt;/span&gt;&lt;span class="p"&gt;(...&lt;/span&gt;
 &lt;span class="n"&gt;address_id&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Indexes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nv"&gt;"idx_primary"&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;btree&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;Foreign&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;key&lt;/span&gt; &lt;span class="k"&gt;constraints&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nv"&gt;"fk_users_addresses"&lt;/span&gt; &lt;span class="k"&gt;FOREIGN&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;address_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;REFERENCES&lt;/span&gt; &lt;span class="n"&gt;addresses&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;VALID&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;SQL tries to delete addresses but addresses referenced by users table, and it has a foreign key constraint on address_id. But because address_id does not have index, SQL does a full table scan for users when deleting addresses&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#when-we-need-further-consideration" class="anchor"&gt;
  &lt;/a&gt;
  When we need further consideration
&lt;/h1&gt;

&lt;p&gt;If the target data has a lot of associations, we should consider deleting some of them tentatively.&lt;br&gt;
For example, an order has some order_items, purchaced_users, addresses, items, etc...&lt;br&gt;
But in this case, we will create orphan data which doesn't have the parent data(i, e. relations of orders and order_items, deleting only orders)&lt;br&gt;
This would be tech debt, so when we take this solution, we should have common sense with the people involved.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#create-tobedeleted-tables" class="anchor"&gt;
  &lt;/a&gt;
  Create to_be_deleted tables
&lt;/h2&gt;

&lt;p&gt;To delete only required data and delete orphan data in the future, consider creating "to_be_deleted" tables which have ids of target data to be deleted. Those tables look like below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="c1"&gt;-- orders_to_be_deleted&lt;/span&gt;
&lt;span class="k"&gt;Table&lt;/span&gt; &lt;span class="nv"&gt;"orders_to_be_deleted"&lt;/span&gt;
  &lt;span class="k"&gt;Column&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="k"&gt;Type&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Modifiers&lt;/span&gt;
&lt;span class="c1"&gt;----------+---------+-----------&lt;/span&gt;
 &lt;span class="n"&gt;order_id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;integer&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;
&lt;span class="n"&gt;Indexes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nv"&gt;"index_orders_to_be_deleted_on_order_id"&lt;/span&gt; &lt;span class="n"&gt;btree&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;order_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By using these id tables, we can refer to deleted ids after deleting orders themselves for example.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#create-a-db-backup-before-starting-the-deletion" class="anchor"&gt;
  &lt;/a&gt;
  Create a DB backup before starting the deletion
&lt;/h1&gt;

&lt;p&gt;Thanks for this tip &lt;a href="https://dev.to/raphael_jambalos"&gt;Raphael!&lt;/a&gt;&lt;br&gt;
No matter how careful we prepare, unexpected situations always come in front of us. Make sure you can have the backup with your team.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Those are what we should consider when deleting data.&lt;br&gt;
I'm glad if someone won't do the same mistakes as mine when working on data deletion projects.&lt;/p&gt;

</description>
      <category>rails</category>
      <category>ruby</category>
      <category>database</category>
      <category>postgres</category>
    </item>
    <item>
      <title>My Journey into Rails: Beginnings</title>
      <author>David SÃ¡nchez</author>
      <pubDate>Mon, 15 Mar 2021 12:30:50 +0000</pubDate>
      <link>https://dev.to/d4vsanchez/my-journey-into-rails-beginnings-191i</link>
      <guid>https://dev.to/d4vsanchez/my-journey-into-rails-beginnings-191i</guid>
      <description>&lt;p&gt;I'm a software engineer whose focus is mainly in web development. Since I started coding professionally my backend experience has gravitated around Python, using Django, Flask, FastAPI, etc.&lt;/p&gt;

&lt;p&gt;I changed my employer a few months ago, and though I'm mainly a frontend developer, I'm also expected to write some backend code in order to fulfill the tickets I'm assigned to. But in the new company, we don't use Python at all, we use &lt;a href="https://www.ruby-lang.org/en/"&gt;Ruby&lt;/a&gt; and I've never used Ruby before.&lt;/p&gt;

&lt;p&gt;At the beginning, I thought that I could start reading Ruby code and since I had experience with Python it was going to make sense as I worked with it, but I was truly wrong with that. There were a bunch of syntax differences that wouldn't make sense to me at first by looking at the code and I had to search what they were supposed to do. That's clearly not a very productive way of doing things, isn't it? So that set me a challenge in order to learn Ruby &amp;amp; Ruby on Rails so I can be a bit more productive in the backend side of the project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-get-serious-about-learning-ruby" class="anchor"&gt;
  &lt;/a&gt;
  Let's get serious about learning Ruby
&lt;/h3&gt;

&lt;p&gt;I needed a way to learn about Ruby's syntax first so I can be more comfortable reading the code and understanding what it does. I used two resources to do this:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; As I'm not 100% into backend in the new project I was able to do this while the project advances, I'm not sure this is the best approach if your time is a bit limited in the project you're currently working on.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JYM5jAM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhvc63znmbqd28ta1ru2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JYM5jAM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhvc63znmbqd28ta1ru2.png" alt="Box receiving some papers with Ruby logos on them"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://www.amazon.com/Well-Grounded-Rubyist-David-Black/dp/1617295213/"&gt;The Well Grounded Rubyist (3rd edition)&lt;/a&gt;&lt;/strong&gt;: I love this book, it teaches every aspect of Ruby in a way that's pretty simple to understand and it has some examples and exercises that will help you review the concepts once you finish every chapter of the book.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://www.codecademy.com/learn/learn-ruby"&gt;Codecademy&lt;/a&gt;&lt;/strong&gt;: I haven't used this page for years, but it was clearly a great resource that was recommended to me by a friend. I used it after reading the book above and it helped me a lot to review even more the concepts, as you have to make some exercises in order to advance on it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After using both this resources, I was able to better understand the syntax of Ruby and navigate through the codebase of the project as everything now fits much better in my mind.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-different-with-ruby-compared-to-python-or-node" class="anchor"&gt;
  &lt;/a&gt;
  What's different with Ruby compared to Python or Node?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pgAIJO85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6kh92q9ayhyzd4ynkir.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pgAIJO85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6kh92q9ayhyzd4ynkir.png" alt="A person looking at a screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Parenthesis are optional&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First thing I found different between Ruby and Python or Node was the optional parenthesis to call a method (or pass messages into an object). This was of the first issues I met when I was first reading Ruby code as it was totally different from I was used to.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Greeter&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;greet&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;
        &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Hello &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;greeter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Greeter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="c1"&gt;# Create a new object of the Greeter class&lt;/span&gt;
&lt;span class="n"&gt;greeter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;greet&lt;/span&gt; &lt;span class="s2"&gt;"David"&lt;/span&gt; &lt;span class="c1"&gt;# prints "Hello David" in console&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Flexibility when naming methods&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ruby is very &lt;a href="https://docs.ruby-lang.org/en/2.0.0/syntax/methods_rdoc.html#label-Method+Names"&gt;flexible when it comes to naming methods&lt;/a&gt;. You will find a lot of "operators" that are just language conventions using method names to do certain actions. For example, the &lt;a href="https://ruby-doc.org/core-2.7.2/Array.html#method-i-3C-3C"&gt;"append" operator&lt;/a&gt; to add a new element into an array is just a method named &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="c1"&gt;# This will print 1 2 3 4 and 5 in console&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or the setters, that are created by appending an &lt;code&gt;=&lt;/code&gt; to the attribute name.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initializer&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;
        &lt;span class="vi"&gt;@name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;name&lt;/span&gt; &lt;span class="c1"&gt;# This is the getter of the name attribute&lt;/span&gt;
        &lt;span class="vi"&gt;@name&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;newName&lt;/span&gt; &lt;span class="c1"&gt;# This is the setter, look at the = in the name&lt;/span&gt;
        &lt;span class="vi"&gt;@name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;newName&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="s2"&gt;"David"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Customer is &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"John"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Customer is &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#it-always-returns-the-last-line" class="anchor"&gt;
  &lt;/a&gt;
  It always returns the last line
&lt;/h3&gt;

&lt;p&gt;This is something I loved when learning &lt;a href="https://doc.rust-lang.org/rust-by-example/fn.html"&gt;Rust&lt;/a&gt; and I'm glad something kinda similar is present in Ruby. Ruby will &lt;strong&gt;always&lt;/strong&gt; return the result of the last line of the expression, unless you set a &lt;strong&gt;return&lt;/strong&gt; keyword in a statement that comes before.&lt;/p&gt;

&lt;p&gt;In the example above, you can see that in the getter method I didn't set an explicit return keyword, but calling the &lt;code&gt;name&lt;/code&gt; method will anyways return the value of the &lt;code&gt;@name&lt;/code&gt; variable. That method works as if I did something as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;name&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="vi"&gt;@name&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#local-variables-vs-instance-variables-vs-class-variables" class="anchor"&gt;
  &lt;/a&gt;
  Local variables vs Instance variables vs Class variables
&lt;/h3&gt;

&lt;p&gt;These kind of variables exists in all object oriented languages I've used until today, but the syntax to create them is really different to what I was used in Python.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Local variables&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are the variables that are only available in a block and cannot be accessed outside that scope. This is the normal behavior that you find in variables that are created inside a method or that are passed as arguments.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Instance variables&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are variables that are available to all the methods of the instance. Each instance may have different values for these variables. You create this type of variable by prepending an &lt;code&gt;@&lt;/code&gt; character to the name of the variable, such as &lt;code&gt;@name&lt;/code&gt; in the example above.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Class variables&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are variables that are available in the class and all instances will have the same value, modifying it in a single instance means that &lt;strong&gt;all&lt;/strong&gt; instances will also have the new value updated. You create this type of variable by prepending the &lt;code&gt;@@&lt;/code&gt; characters to the name of the variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt;
    &lt;span class="vc"&gt;@@types&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Regular"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Loyal"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;types&lt;/span&gt;
        &lt;span class="vc"&gt;@@types&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;first_customer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;first_customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;types&lt;/span&gt; &lt;span class="c1"&gt;# Regular, Loyal&lt;/span&gt;
&lt;span class="n"&gt;second_customer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
&lt;span class="n"&gt;second_customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;types&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s2"&gt;"VIP"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;second_customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;types&lt;/span&gt; &lt;span class="c1"&gt;# Regular, Loyal &amp;amp; VIP&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;first_customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;types&lt;/span&gt; &lt;span class="c1"&gt;# Regular, Logal &amp;amp; VIP&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#instance-methods-vs-class-methods" class="anchor"&gt;
  &lt;/a&gt;
  Instance methods vs Class methods
&lt;/h3&gt;

&lt;p&gt;These type of methods also exists in all object oriented languages I've used until today, but the syntax really confused me a bit coming from a Python background.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Instance methods&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are methods that are only accesible when you create a new instance of a class. In all the examples above I created instance methods, no big deal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Class methods&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are methods that are accesible from the class itself and you don't need an instance of the class in order to execute them. They are created by prepending the &lt;code&gt;self.&lt;/code&gt; to the name of the method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Sample&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hello_class&lt;/span&gt;
        &lt;span class="s2"&gt;"Hello from the class method"&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="no"&gt;Sample&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hello_class&lt;/span&gt; &lt;span class="c1"&gt;# Hello from the class method&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#and-more-things" class="anchor"&gt;
  &lt;/a&gt;
  And more things...
&lt;/h3&gt;

&lt;p&gt;There was some other topics that I'd like to cover here but they will make this post really long, I'll cover them later in this series in a more detailed way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-i-like-about-ruby" class="anchor"&gt;
  &lt;/a&gt;
  What I like about Ruby?
&lt;/h2&gt;

&lt;p&gt;It looks like a very fun language to work with and I found its syntax to be elegant and easy to understand. It has a lot of useful built-in behaviors and frameworks such as Ruby on Rails makes it really easy to go from 0 to a MVP in short time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-i-dislike-about-ruby" class="anchor"&gt;
  &lt;/a&gt;
  What I dislike about Ruby?
&lt;/h3&gt;

&lt;p&gt;This is not a Ruby per-se problem, but I found the Ruby on Rails learning curve to be a bit steep. There's a lot of things that in Python are totally explicit (following the "&lt;em&gt;Explicit is better than implicit&lt;/em&gt;" principle) and are not so "explicit" in Ruby, you'll need to search in multiple files in order to understand where they are actually declared and how they work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thats-it-for-now" class="anchor"&gt;
  &lt;/a&gt;
  That's it... for now.
&lt;/h3&gt;

&lt;p&gt;I've found Ruby to be a really fun to learn language and using it has been a total pleasure. I'm eager to learn new things about the language and Ruby on Rails in order to be a bit more productive in the backend side of the current project I'm currently working on and to achieve proficiency in this language.&lt;/p&gt;

&lt;p&gt;I love teaching others in order to better learn concepts, so I will try to make more of these posts in a tutorial-like style when I learn new concepts. If you liked this post, please be assured that I will publish new ones with other concepts or thoughts about this topic.&lt;/p&gt;




&lt;p&gt;I hope you liked this post.&lt;/p&gt;

&lt;p&gt;Please tell me in the comments if you want to have a post about a particular aspect of Ruby or if you have any comments or feedback that could help me improve this post, and please, don't forget to react to this post, that would make me really happy.&lt;/p&gt;

&lt;p&gt;Thank you for your time â¤ï¸ð&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
