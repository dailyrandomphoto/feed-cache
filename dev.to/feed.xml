<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network. Open source and radically transparent.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Run SQL in Slack</title>
      <author>Katie Hindson</author>
      <pubDate>Tue, 24 Nov 2020 16:17:20 +0000</pubDate>
      <link>https://dev.to/turinglovesdeathmetal/run-sql-in-slack-3lkm</link>
      <guid>https://dev.to/turinglovesdeathmetal/run-sql-in-slack-3lkm</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ziHgrgn2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/rvexaz0nvcj6lv3ae0wo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ziHgrgn2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/rvexaz0nvcj6lv3ae0wo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#write-sql-in-slack-and-bring-the-latest-analytics-into-the-conversation" class="anchor"&gt;
  &lt;/a&gt;
  Write SQL in Slack and bring the latest analytics into the conversation.
&lt;/h3&gt;

&lt;p&gt;In my first week at Hubble, a teammate shared a SQL query he'd run in Slack. &lt;/p&gt;

&lt;p&gt;Since I'd just joined, I hadn't set myself up with our company's database yet (and had spent a bit too much time getting my dev environment lookin' right üíÅ‚Äç‚ôÄÔ∏è). So, when I tried to open what he'd shared, it took me ~30 minutes before I could actually see the results. &lt;/p&gt;

&lt;p&gt;This got us to talking: how annoying was it that we couldn't just run SQL and share the results straight in Slack? &lt;/p&gt;

&lt;p&gt;This was a problem I'd run into before. At least once a week, I'll have to share SQL results with engineers in Slack for debugging, or invest ~ 1 hr of time getting someone set up with BigQuery and understanding the UI just so that they can re-run really specific queries I've written for them. &lt;/p&gt;

&lt;p&gt;A few other companies we'd talked to had also mentioned some of their frustrations in quick and easy SQL collaboration. Specifically:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A fitness company wants to make their daily growth metrics visible by all the team each day, so they run SQL queries and copy the outputs to Slack each morning, where they know all team members will see it rather than logging into a BI dashboard.&lt;/li&gt;
&lt;li&gt;Another data analyst was trying to collaborate in SQL with their marketing director. They had to do a bunch of copy-pasting of code and sharing screenshots of the SQL output, making it really slow and difficult to actually identify any problems.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of this got us to thinking: &lt;strong&gt;why not bring SQL &lt;em&gt;into&lt;/em&gt; Slack?&lt;/strong&gt; (Because everyone needs a reason to spend more time in Slack, right?)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#we-built-beacon-so-you-can-collaborate-on-sql-with-your-team-directly-in-slack" class="anchor"&gt;
  &lt;/a&gt;
  We built Beacon so you can collaborate on SQL with your team, directly in Slack!
&lt;/h3&gt;

&lt;p&gt;With Beacon, I open Slack and run a query directly in Slack where the output is shared with my team. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t_dsMiKt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://uploads-ssl.webflow.com/5eaf203a6af9c85f55e39a9a/5fad4e650f8dca25293794b3_ezgif-4-3b1cd25cc2c6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t_dsMiKt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://uploads-ssl.webflow.com/5eaf203a6af9c85f55e39a9a/5fad4e650f8dca25293794b3_ezgif-4-3b1cd25cc2c6.gif" alt="https://uploads-ssl.webflow.com/5eaf203a6af9c85f55e39a9a/5fad4e650f8dca25293794b3_ezgif-4-3b1cd25cc2c6.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Beacon makes the output from any SQL query super accessible to everyone in your team by posting the results right in Slack.&lt;/p&gt;

&lt;p&gt;And, collaborating in SQL becomes a breeze because you can save your favourite queries and share them with your team (because we all know, SQL is more fun with friends üë≠). All of your saved queries are automatically available to your whole team, so everyone has access to what they need, when they need it, at the click of a button &lt;strong&gt;all in Slack&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#try-using-beacon-to-share-kpis-save-common-queries-and-more" class="anchor"&gt;
  &lt;/a&gt;
  Try using Beacon to share KPIs, save common queries, and more!
&lt;/h3&gt;

&lt;p&gt;You can install Beacon into your Slack workspace using this link: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://slack.com/oauth/v2/authorize?client_id=1207722259383.1462138656839&amp;amp;scope=commands,users:read,users:read.email,team:read&amp;amp;user_scope=dev.to"&gt;Add to Slack&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Beacon connects to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Snowflake&lt;/li&gt;
&lt;li&gt;Bigquery&lt;/li&gt;
&lt;li&gt;PostgreSQL&lt;/li&gt;
&lt;li&gt;Redshift&lt;/li&gt;
&lt;li&gt;Rockset&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Shoot me a message at &lt;a href="mailto:katie@gethubble.io"&gt;katie@gethubble.io&lt;/a&gt; if you have any questions or feedback, we'd love to hear from you üòä&lt;/p&gt;

</description>
      <category>sql</category>
      <category>productivity</category>
      <category>database</category>
      <category>analytics</category>
    </item>
    <item>
      <title>How to keep your local changes while pulling the code</title>
      <author>Saumya Agnihotri</author>
      <pubDate>Tue, 24 Nov 2020 16:11:58 +0000</pubDate>
      <link>https://dev.to/saumyaagnihtori/how-to-keep-your-changes-while-pulling-the-code-381c</link>
      <guid>https://dev.to/saumyaagnihtori/how-to-keep-your-changes-while-pulling-the-code-381c</guid>
      <description>&lt;p&gt;If you are working on a project in a team and you have used GitHub as your version control system then you might have come across a situation where you're working on some feature but the work hasn't finished yet and there are some update from other member and now you need to pull the code again from remote repository.&lt;/p&gt;

&lt;p&gt;Now a problem arises here, while you're pulling the code your changes (work in progress) will be overridden and you will lose your code that wasn't committed. So in such scenarios, you can use a git command known as git stash.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-git-stash" class="anchor"&gt;
  &lt;/a&gt;
  What is Git Stash?
&lt;/h2&gt;

&lt;p&gt;Git stash will solve the problem faced in the above scenario. You can keep your changes similar to keeping a draft and then after pulling the remote repo code you can go back to draft version and apply the changes again.&lt;/p&gt;

&lt;p&gt;So the usual flow will go like this :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You are working on some unfinished feature and you need to save this (draft)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;          git stash
           or 
          git stash save "feature X"
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now you pull the code&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;          git pull origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restore the work you were doing for feature X using below command&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;          git stash apply
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That's it. You are done ‚úÖ&lt;/p&gt;

&lt;p&gt;For learning more about git stash you can refer to these resources :&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#links-" class="anchor"&gt;
  &lt;/a&gt;
  Links -
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=DeU6opFU_zw&amp;amp;feature=youtu.be"&gt;Git STASH Explained in Simple Words&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.atlassian.com/git/tutorials/saving-changes/git-stash"&gt;Git Stash tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>todayilearned</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The best way to learn React is.. to learn Angular?!</title>
      <author>Michael Di Prisco</author>
      <pubDate>Tue, 24 Nov 2020 15:23:37 +0000</pubDate>
      <link>https://dev.to/cadienvan/the-best-way-to-learn-react-is-to-learn-angular-4f08</link>
      <guid>https://dev.to/cadienvan/the-best-way-to-learn-react-is-to-learn-angular-4f08</guid>
      <description>&lt;h1&gt;
  &lt;a href="#intro-im-an-angular-developer-and-the-title-is-not-clickbait" class="anchor"&gt;
  &lt;/a&gt;
  Intro - I'm an Angular developer and the title is not click-bait.
&lt;/h1&gt;

&lt;p&gt;I've been working with Angular (From V4 to V9) for at least 1.5 years now and I've been enjoying every bit of it.&lt;/p&gt;

&lt;p&gt;In this post I'll try to explain my reasons behind moving from Angular to React, and why &lt;strong&gt;I'll probably come back&lt;/strong&gt;, in certain cases.&lt;/p&gt;

&lt;p&gt;From routing to dependency injection, from TypeScript support to services, I worked in both big and small projects and always felt empowered by the awesome toolkit provided by Angular.&lt;/p&gt;

&lt;p&gt;I had also a chance to look at state management via NgRx and NgXs and enjoyed them also.&lt;/p&gt;

&lt;p&gt;I feel like I'm not an Angular expert, but I can surely bring a nice project from idea to deployment with confidence.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#choosing-react" class="anchor"&gt;
  &lt;/a&gt;
  Choosing React.
&lt;/h1&gt;

&lt;p&gt;One day a call arrived and I decided to move.&lt;br&gt;
I'll start a new job at a new office in January and had a chance to choose my front-end stack as I'll be responsible for creating and training a new team for some new big projects to be developed during the next year, and felt like I could give another framework a try as I saw 99% of what I could see in Angular and wanted to learn something different.&lt;/p&gt;

&lt;p&gt;I had a look at Vue, as I've been working a little with it in 2018, but felt like, if I had to move, better do it for the most popular one, so I went for React.&lt;/p&gt;

&lt;p&gt;P.S. I didn't decide to try React because it was simply &lt;em&gt;the most popular&lt;/em&gt;, but because being such allows me to have a wider developer audience to get information and tools from. It's the first time for me as a team leader, so I felt having a little more help from the community could only help.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-problem" class="anchor"&gt;
  &lt;/a&gt;
  The problem.
&lt;/h1&gt;

&lt;p&gt;When I started studying Angular, coming from a vanilla JS - Vue.js background, I clearly felt overwhelmed by the steep learning curve everyone mentions when talking about this framework, and I needed ~3 months of studying in my free time to grab the fundamentals and start doing something good (P.S. Thank you Mosh Hamedani for your incredible &lt;a href="https://codewithmosh.com/p/angular-master-class"&gt;course&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;As someone who never looked at a single React snippet, I thought it could be equally hard to grasp and master this framework and started to feel a little doubtful about my decision.&lt;/p&gt;

&lt;p&gt;But, nonetheless, I decided I could give it a try.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#first-steps-with-react" class="anchor"&gt;
  &lt;/a&gt;
  First steps with React
&lt;/h1&gt;

&lt;p&gt;As soon as I started my new course on React (Thank you Mosh, again!) I realized the length was different (We are talking about ~75% length reduction in the course) and thought&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Well, I guess I could give it a try, see what it's all about, and then decide if I want to move to React or stick with Angular&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I started as everyone else did, I guess.&lt;/p&gt;

&lt;p&gt;Reactivity in React, a simple counter, child components, props, prop drilling, class vs function component, state management, hooks, and.. stop.&lt;/p&gt;

&lt;p&gt;Yes, you read that right, STOP! That's React.&lt;br&gt;
Of course, I know React has thousands of features coming from official and unofficial libraries, routing systems, global state managers, GraphQL clients, etc., but nonetheless React is just that, and if you want to start with some simple stuff, that's all it takes.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#so-michael-how-much-time-did-it-take-for-you-to-learn-this-stuff" class="anchor"&gt;
  &lt;/a&gt;
  So, Michael, how much time did it take for you to learn this stuff?
&lt;/h1&gt;

&lt;p&gt;As I was running like Flash through the course, I realized one thing: Every framework shares a fair 50-60% of fundamentals with every other, so if you grasp them in Angular, you can reuse the same mental model for React. So what's my answer? &lt;strong&gt;3 hours&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Yes, I'm not joking, I just needed 3 hours to learn it. And wanna know the most incredible thing?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#i-took-the-best-from-angular-and-brought-it-with-me-into-react-with-no-hassle" class="anchor"&gt;
  &lt;/a&gt;
  I took the best from Angular and brought it with me into React with no hassle.
&lt;/h1&gt;

&lt;p&gt;I don't wanna bother you with code snippets and long discussions about which one is better. &lt;strong&gt;Angular and React solve different problems in different ways&lt;/strong&gt;. But, to provide an understandable example, everyone who has ever worked with Angular knows the intrinsic problem-solving power of services, so bringing them with me in React was an easy and powerful way to solve some of the problems I was facing in my sample apps.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#but-react-is-awesome-by-itself-too" class="anchor"&gt;
  &lt;/a&gt;
  But React is awesome by itself too.
&lt;/h1&gt;

&lt;p&gt;Yeah, I know, React purists are already taking the pitchforks so let me clear out one thing: React is awesome by itself, even without things taken from Angular. Of course, I'm really enjoying the simplicity of React compared to the structured, more secure but clearly more verbose and harder way of thinking and working in Angular. React is simply javascript with a small but clearly understandable pinch of magic.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#ok-michael-so-the-question-is-will-you-move-to-react" class="anchor"&gt;
  &lt;/a&gt;
  Ok Michael, so the question is: Will you move to React?
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Yes and no.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I feel really good when I work with React, as it's easy, fast, reactive and does everything I want it to do letting me understand every bit of what I'm doing, instead of the fog you have in Angular in certain situations (Of course, there are many world-class Angular experts here on dev.to, but that's not the case for 90+% of front-end developers who approach Angular on a daily basis and can't easily grasp the inner bits and parts of Dependency Injection and Lazy Routing, for example).&lt;/p&gt;

&lt;p&gt;But at the same time, Angular solves different problems, hardly solvable by React without a good dose of patience and self-control, so I guess I'll use both, depending on the occasion.&lt;/p&gt;

&lt;p&gt;We are reaching a point where front-end developers are not expected to know just vanilla js and a framework, but to grasp the fundamentals of the whole industry, and I guess having two frameworks in my toolkit could solve me many issues in the future.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-do-you-think" class="anchor"&gt;
  &lt;/a&gt;
  What do you think?
&lt;/h1&gt;

&lt;p&gt;If you follow me, you know I always ask people to comment and provide their opinions, so feel free to share yours and let's discuss them together!&lt;/p&gt;

</description>
      <category>react</category>
      <category>angular</category>
      <category>webdev</category>
      <category>discuss</category>
    </item>
    <item>
      <title>How to Improve Lighthouse Score - Search Engine Optimization (SEO)</title>
      <author>Linda</author>
      <pubDate>Tue, 24 Nov 2020 14:55:27 +0000</pubDate>
      <link>https://dev.to/lindaojo/how-to-improve-lighthouse-score-search-engine-optimization-seo-20jh</link>
      <guid>https://dev.to/lindaojo/how-to-improve-lighthouse-score-search-engine-optimization-seo-20jh</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yOGvFAb---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wucwg72vpnxex3js2lnj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yOGvFAb---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wucwg72vpnxex3js2lnj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the first article of the Lighthouse Series üéâüéâüéâ&lt;/p&gt;

&lt;p&gt;Don't know how to check your website's Lighthouse score? No problem, use my last article &lt;a href="https://www.lindaojo.com/blog/how-to-check-lighthouse-scores-on-chrome-and-firefox/"&gt;How to Check Lighthouse Scores using Chrome or Firefox &lt;/a&gt; as a guide.&lt;/p&gt;

&lt;p&gt;In this post, we will be going through tips to improve your Lighthouse SEO score and the overall visibility of your website.&lt;/p&gt;

&lt;h3&gt;What is SEO?&lt;/h3&gt;

&lt;p&gt;Search Engine Optimization (SEO) simply means the process of improving your site to increase its visibility for relevant searches. The higher your SEO score, the better visibility your web pages have in search results.&lt;/p&gt;

&lt;p&gt;Lighthouse carries various audits on your website, these audits can be passed by making a few simple changes. Want to know what they are? Keep reading. &lt;/p&gt;

&lt;h3&gt;Add a title element&lt;/h3&gt;

&lt;p&gt;Adding a title element is very important because search engines such as Google rely on it heavily to determine if a page is relevant to their search. It also gives screen reader users an overview of the page. The title element is usually added to the head of an &lt;span class="code-word"&gt;index.html&lt;/span&gt; file as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Linda Ojo&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;Add necessary meta tags&lt;/h3&gt;  

&lt;p&gt;Meta tags provide information about a webpage. The meta tags don‚Äôt appear on the page itself, but only in the page‚Äôs source code. For starters, your website should have the meta tags shown below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; //optimize your webpage for smaller screens
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"author"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Linda Ojo"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"description"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Articles on frontend development written by Linda Ojo, Frontend Developer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; //included in search results to concisely summarize page content.
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"keywords"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"HTML, CSS, JavaScript, Frontend, Web Development"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;You could also customise the way your webpage link looks on social media platforms such as Twitter and Facebook. Though this does &lt;strong&gt;not&lt;/strong&gt; affect your lighthouse score, it's recommended.&lt;/p&gt;

&lt;p&gt;Below are meta tags I use to customise links to my website&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- Facebook, Whatsapp --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:site_name"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Linda Ojo"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:title"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Linda Ojo's Personal website and Blog"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:description"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Articles on frontend development written by Linda Ojo, Frontend Developer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:image"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"logo.png"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"og:url"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"https//www.lindaojo.com"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

     &lt;span class="c"&gt;&amp;lt;!-- Twitter --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"twitter:title"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Linda Ojo's Personal website and Blog"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"twitter:description"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Articles on frontend development written by Linda Ojo, Frontend Developer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"twitter:image"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"logo.png"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"twitter:url"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"https//www.lindaojo.com"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"twitter:card"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"summary"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Using the meta tags above, a link to my website on Twitter looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mo8hHr1i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/lindaojo/image/upload/v1606058540/twitter-card_mpspzu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mo8hHr1i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/lindaojo/image/upload/v1606058540/twitter-card_mpspzu.png" alt="twitter card for website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Size interactive elements properly&lt;/h3&gt;

&lt;p&gt;Interactive elements such as links and buttons should be sized and spaced properly. This is very important as search engines rank pages based on how mobile-friendly they are.&lt;/p&gt;

&lt;p&gt;These elements should have a minimum size of 48px by 48px and a spacing of at least 8px in all directions.&lt;/p&gt;

&lt;h3&gt;Links should have descriptive text&lt;/h3&gt;

&lt;p&gt;Lighthouse flags generic link texts such as "click here", "go", "start", "more", "learn more" e.t.c. Using descriptive text for anchor elements will help search engines understand your content.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- Don't  --&amp;gt;&lt;/span&gt;
‚ùå &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;To read more articles about JavaScript, &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/articles"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;click here&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt; 

&lt;span class="c"&gt;&amp;lt;!-- Do --&amp;gt;&lt;/span&gt;
‚úÖ &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/articles"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Read more JavaScript articles&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;Add alternative text to images&lt;/h3&gt;

&lt;p&gt;All images should have the &lt;span class="code-word"&gt;alt&lt;/span&gt; attribute which contains a short descriptive text. If the image acts as decoration and does not provide any useful content, give it an empty &lt;span class="code-word"&gt;alt=""&lt;/span&gt; attribute.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- Do --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"background.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!--decorative image --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"dancers.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"4 female dancers in yellow dresses"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!-- informative image--&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;Use legible font sizes for all screen sizes&lt;/h3&gt;

&lt;p&gt;The minimum accepted font size for text is 12px. Text with a font size lower than 12px forces most mobile users to zoom in in order to read. There are edge cases where small fonts are needed, these small fonts should not make up more than 40% of a page's text.&lt;/p&gt;

&lt;h3&gt;Use "hreflang" links to specify different Versions of a website&lt;/h3&gt;

&lt;p&gt;&lt;span class="code-word"&gt;hreflang&lt;/span&gt; links enables search engines to select the right version of a website based on the language and region of the user. Lighthouse checks for &lt;span class="code-word"&gt;hreflang&lt;/span&gt; links in the page's head and in its &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Response_header"&gt;response headers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;span class="code-word"&gt;hreflang&lt;/span&gt; links should be added to the head of your webpage.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"alternate"&lt;/span&gt; &lt;span class="na"&gt;hreflang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://example.com"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;    //English
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"alternate"&lt;/span&gt; &lt;span class="na"&gt;hreflang=&lt;/span&gt;&lt;span class="s"&gt;"es"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://es.example.com"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; // Spanish
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"alternate"&lt;/span&gt; &lt;span class="na"&gt;hreflang=&lt;/span&gt;&lt;span class="s"&gt;"de"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://de.example.com"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; // German
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;For pages that allow users to select their language, use the x-default keyword:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"alternate"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://example.com"&lt;/span&gt; &lt;span class="na"&gt;hreflang=&lt;/span&gt;&lt;span class="s"&gt;"x-default"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;p&gt;The tips above will definitely boost your lighthouse SEO score and improve the overall visibility of your website on the internet.&lt;/p&gt;

</description>
      <category>performance</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Build an Unsplash Photo Search App Using Vanilla JavaScript</title>
      <author>Tolu Agboola</author>
      <pubDate>Tue, 24 Nov 2020 14:51:55 +0000</pubDate>
      <link>https://dev.to/toluagboola/build-an-unsplash-photo-search-app-using-vanilla-javascript-441j</link>
      <guid>https://dev.to/toluagboola/build-an-unsplash-photo-search-app-using-vanilla-javascript-441j</guid>
      <description>&lt;p&gt;In this article, I will explain how I used JavaScript to build an image search app. It fetches and displays images from &lt;a href="//unsplash.com"&gt;Unsplash&lt;/a&gt; based on the user's search query. This is one of several personal projects I've built to enable me to gain some practice on all I've been learning. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PjMb4zck--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dipyaby4f/image/upload/v1604092951/2020-10-13_12.15.33_e9ecfae75723.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PjMb4zck--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dipyaby4f/image/upload/v1604092951/2020-10-13_12.15.33_e9ecfae75723.png" alt="My Unsplash search app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-markup-and-styles" class="anchor"&gt;
  &lt;/a&gt;
  Setting up the markup and styles
&lt;/h2&gt;

&lt;p&gt;I thought about what I wanted the page to look like and decided on a simple white page (as shown above) with the input and submit button at the top, and the results in a grid formation. You can view the whole code below:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/Tolu-Agboola/embed/WNxOoqZ?height=600&amp;amp;default-tab=html&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tackling-the-javascript" class="anchor"&gt;
  &lt;/a&gt;
  Tackling the JavaScript
&lt;/h2&gt;

&lt;p&gt;I first globally stored references to the form and some other HTML elements that I was going to work with. I would still select others within functions later. I also added a &lt;code&gt;submit&lt;/code&gt; event listener to the form.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.js-form&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nextBtn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.js-next&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;prevBtn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.js-prev&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;resultStats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.js-result-stats&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;searchQuery&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Then I defined the callback function &lt;code&gt;handleSubmit&lt;/code&gt; in the event listener as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.js-search-input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;searchQuery&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;inputValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;searchQuery&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;fetchResults&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;searchQuery&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This function takes an event as its argument and first of all prevents the page from reloading using the &lt;code&gt;preventDefault()&lt;/code&gt; method. It then stores the value of the search input in &lt;code&gt;inputValue&lt;/code&gt; and removes any whitespace with the &lt;code&gt;trim()&lt;/code&gt; method. It stores the trimmed input value in &lt;code&gt;searchQuery&lt;/code&gt; and passes it as an argument to the &lt;code&gt;fetchResults&lt;/code&gt; function which is being called there. I logged the value of &lt;code&gt;searchQuery&lt;/code&gt; to the console to make sure the right value was being passed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fetch-results-from-unsplash" class="anchor"&gt;
  &lt;/a&gt;
  Fetch results from Unsplash
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;searchUnsplash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;searchQuery&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;endpoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://api.unsplash.com/search/photos?query=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;searchQuery&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;client_id=YOUR_ACCESS_KEY`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;statusText&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fetchResults&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;searchQuery&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;searchUnsplash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;searchQuery&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;displayResults&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Failed to search Unsplash&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;To be able to use Unsplash's API, you have to create a developer account. Only after that do you get your unique API key with which you can access the photos on the site. An AJAX request is made to Unsplash using a URL containing the endpoint and the relevant query parameters. More information on this is provided in the &lt;a href="//unsplash.com/documentation"&gt;Documentation&lt;/a&gt; page on their website.&lt;/p&gt;

&lt;p&gt;The function &lt;code&gt;searchUnsplash&lt;/code&gt; takes one parameter (&lt;code&gt;searchQuery&lt;/code&gt;), which is inserted into the endpoint as the value of the &lt;code&gt;query&lt;/code&gt; query parameter. Now, the URL is stored in a variable &lt;code&gt;endpoint&lt;/code&gt; which is passed as a parameter to &lt;code&gt;fetch&lt;/code&gt;. The &lt;code&gt;fetch()&lt;/code&gt; method takes one argument, the path to the resource you want to fetch, which is stored in &lt;code&gt;endpoint&lt;/code&gt; in this case. It always returns a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"&gt;Promise&lt;/a&gt;. Now, if the response is 200 OK, it is parsed as JSON which is stored in the &lt;code&gt;json&lt;/code&gt; variable. The result is logged to the console so as to view the contents of the JSON data.&lt;/p&gt;

&lt;p&gt;Both functions above are asynchronous which means that the &lt;code&gt;await&lt;/code&gt; keyword can be used to pause the execution of the function until a promise is resolved. This is achieved by placing the &lt;code&gt;async&lt;/code&gt; keyword before declaring a function. I used a &lt;code&gt;try...catch&lt;/code&gt; block in the &lt;code&gt;fetchResults&lt;/code&gt; function. The &lt;code&gt;try&lt;/code&gt; block 'tries' to execute the code within it and, should there be an exception or error, the &lt;code&gt;catch&lt;/code&gt; block saves the day and responds appropriately with whatever code is written within it. This is a control flow mechanism which prevents the code from crashing if an error occurs while fetching the results. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#display-the-results-on-the-page" class="anchor"&gt;
  &lt;/a&gt;
  Display the results on the page
&lt;/h3&gt;

&lt;p&gt;The next thing is to display the results on the page. If you check the JSON data looged to the console, you will find that it contains several properties which have different contents.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K4cSgRjv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dipyaby4f/image/upload/v1604239194/2020-11-01_14.57.12_5a4befeb5bd3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K4cSgRjv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dipyaby4f/image/upload/v1604239194/2020-11-01_14.57.12_5a4befeb5bd3.png" alt="Chrome console containing raw JSON data"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;results&lt;/code&gt; property is an array in which the search results are contained. Each search result is an object and can be accessed using either dot or bracket notation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;displayResults&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;searchResults&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.js-search-results&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;searchResults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;small&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;unsplashLink&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;links&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;photographer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;photographerPage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;links&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;searchResults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertAdjacentHTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;beforeend&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;`&amp;lt;div&amp;gt;
                &amp;lt;a href="&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;unsplashLink&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;" target="_blank"&amp;gt;
                    &amp;lt;div class="result-item" style="background-image: url(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;);"&amp;gt;&amp;lt;/div&amp;gt;
                &amp;lt;/a&amp;gt;
                &amp;lt;p class="photographer-name"&amp;gt;
                    &amp;lt;a href="&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;photographerPage&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;" target="_blank" style="color: black; text-decoration: none;"&amp;gt;Photo by &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;photographer&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/a&amp;gt;
                &amp;lt;/p&amp;gt;
            &amp;lt;/div&amp;gt;`&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;  
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nx"&gt;totalResults&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;total&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;resultStats&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`About &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;totalResults&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; results found`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;An empty &lt;code&gt;div&lt;/code&gt; with a class of &lt;code&gt;search-results&lt;/code&gt; was already created in the HTML file. It is then selected in the JS file within a new function called &lt;code&gt;displayResults&lt;/code&gt; which takes a JSON object as an argument. The &lt;code&gt;textContent&lt;/code&gt; is also set to an empty string to clear all previous results.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H-uCtHCb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dipyaby4f/image/upload/v1606212496/2020-11-24_10.28.47_9df83f297e27.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H-uCtHCb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dipyaby4f/image/upload/v1606212496/2020-11-24_10.28.47_9df83f297e27.png" alt="JSON Object"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, the &lt;code&gt;results&lt;/code&gt; array is iterated over using the &lt;code&gt;forEach&lt;/code&gt; method. Within the callback function, the nested object can be accessed through the &lt;code&gt;result&lt;/code&gt; parameter. If you study the above image closely, you will find that each object in the array contains several keys such as &lt;code&gt;links&lt;/code&gt;, &lt;code&gt;user&lt;/code&gt;, &lt;code&gt;urls&lt;/code&gt;. These can be used to access different categories of information on the object in question.&lt;/p&gt;

&lt;p&gt;The first lines within the callback function are variables in which the different values needed are stored. They were all accessed using dot notation and include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the image url&lt;/li&gt;
&lt;li&gt;the link to the image on Unsplash&lt;/li&gt;
&lt;li&gt;the name of the photographer&lt;/li&gt;
&lt;li&gt;the link to the photographer's Unsplash profile&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Afterwards, each result is inserted into the &lt;code&gt;searchResults&lt;/code&gt; element using the &lt;a href="https://developer.mozilla.org/en/docs/Web/API/Element/insertAdjacentHTML"&gt;insertAdjacentHTML&lt;/a&gt; method. This method takes two arguments: the position of the element, and the text to be parsed as HTML. Template literals are used in the second argument because of the parts of the code that will be changing constantly. These are represented by placeholders in the code. The function &lt;code&gt;displayResults&lt;/code&gt; is then called in &lt;code&gt;fetchResults&lt;/code&gt;.  &lt;/p&gt;

&lt;p&gt;Each image is set to be the background of its container, and is also a link to its Unsplash page. The name of the photographer, which links to his/her Unsplash profile, is placed right under the image and the result display was styled using CSS Grid.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#show-a-loading-indicator" class="anchor"&gt;
  &lt;/a&gt;
  Show a loading indicator
&lt;/h3&gt;

&lt;p&gt;This is something to be displayed when a search query is being executed to let the user know that the operation is still in progress. I selected a spinner from &lt;a href="https://tobiasahlin.com/spinkit/"&gt;this website&lt;/a&gt; and pasted the HTML and CSS into my code. A referece to the spinner was stored globally in a variable &lt;code&gt;spinner&lt;/code&gt; and then the &lt;code&gt;fectchResults&lt;/code&gt; function was updated as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;spinner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.js-spinner&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fetchResults&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;searchQuery&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;spinner&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;searchUnsplash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;searchQuery&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;pagination&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;total_pages&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;displayResults&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Failed to search Unsplash&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;spinner&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;In this tutorial, we have seen how an interactive application can be built using JavaScript. I hope you learnt a lot from it. &lt;/p&gt;

&lt;p&gt;I will be writing a continuation to this tutorial very soon, and it will contain how I added other features like pagination and increasing the limit of results shown per page etc. &lt;/p&gt;

&lt;p&gt;Also, I'm currently looking for an internship / junior role. Any information on openings will be really appreciated.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
      <category>beginners</category>
    </item>
    <item>
      <title>An Introduction to Web Analytics</title>
      <author>Stephanie Morillo</author>
      <pubDate>Tue, 24 Nov 2020 14:46:00 +0000</pubDate>
      <link>https://dev.to/radiomorillo/an-introduction-to-web-analytics-2cip</link>
      <guid>https://dev.to/radiomorillo/an-introduction-to-web-analytics-2cip</guid>
      <description>&lt;p&gt;If you‚Äôre a developer running your own site, or you have a blog hosted on a blogging platform, you‚Äôre probably aware of web analytics. Content publishers rely on web analytics to understand how audiences are engaging with their content and to spot trends or patterns that will help them improve baseline metrics. For the purposes of this post, we‚Äôll define web analytics and metrics as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Web (or site) analytics&lt;/strong&gt;: the collection, analysis, and reporting of data compiled from a website for the purpose of research and optimization. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Metrics&lt;/strong&gt;: something that you want to measure, often (but not always) correlated with an action a user takes on the site or a page. Well known metrics include ‚Äúpage views‚Äù, ‚Äúunique visits‚Äù, and ‚Äúclick-through rate‚Äù. While the definitions of these metrics are more or less the same across web analytics tools and services, the way they‚Äôre calculated depends on the platform in question.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you‚Äôre unsure about what web analytics are or what metrics you should pay attention to, this post is for you. Resources for additional reading will be available at the end of this post.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-questions-to-guide-how-you-look-at-web-analytics" class="anchor"&gt;
  &lt;/a&gt;
  Use Questions to Guide How You Look at Web Analytics
&lt;/h2&gt;

&lt;p&gt;What makes web analytics useful is its ability to help you optimize your site and content strategy. Without these questions, analytics are an otherwise nice-to-have feature that you might not use. Analytics are only as reliable as the questions you ask and taking action based on your findings.&lt;/p&gt;

&lt;p&gt;I only care about the data in aggregate, meaning, I look at what my total visitors do, not what an individual user did or did not do. I don‚Äôt run ads, I don‚Äôt retarget users on different platforms, and I don‚Äôt personalize my site content. I segment users in my email marketing platform in order to send relevant newsletters to specific subscribers and to archive inactive subscribers.&lt;/p&gt;

&lt;p&gt;Here are some questions I look to my web analytics to answer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What keywords are people using to find my content in organic search?&lt;/li&gt;
&lt;li&gt;How do people find my blog?&lt;/li&gt;
&lt;li&gt;After reading a post, where on my site do people go to next?&lt;/li&gt;
&lt;li&gt;What are the biggest entry points on my site?&lt;/li&gt;
&lt;li&gt;What types of content perform the best?&lt;/li&gt;
&lt;li&gt;Which pages are underperforming?&lt;/li&gt;
&lt;li&gt;How many people are opening my newsletters?&lt;/li&gt;
&lt;li&gt;Which links in my newsletters receive the most clicks?&lt;/li&gt;
&lt;li&gt;Are there trends or patterns among these links that I should be aware of?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Start crafting questions or problem statements to help you maximize the value of your web analytics. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-web-analytics-can-amp-cant-tell-you" class="anchor"&gt;
  &lt;/a&gt;
  What Web Analytics Can &amp;amp; Can‚Äôt Tell You
&lt;/h2&gt;

&lt;p&gt;As a content creator, web analytics is a tool that will help you gauge how well your content is performing. Web analytics can tell you what users do when they land on your post, what they do next, and how they get there. You can use this information to optimize your content calendar for high-performing topics, or to improve your search engine optimization strategy if you notice you get little traffic coming from search engines. &lt;/p&gt;

&lt;p&gt;Web analytics cannot tell you why a user took a certain path, why a bounce rate is so high, or why a blog post performed lower than expected. You can infer by looking at the data over time and identify patterns of behavior, by formulating a hypothesis based on what you see and running an experiment (A/B test), or by conducting user research like usability testing and user interviews.&lt;/p&gt;

&lt;p&gt;Also ‚Äì different platforms may only analyze a portion of the available data, especially if you‚Äôre using it for free (Google Analytics does this for sites using its free version) or paying for a premium service but by tier (Matomo Analytics prices its plans according to a monthly visitor cap). Blogging platforms that have their own native web analytics may give you only a limited set of metrics to look at; for example, Hashnode and DEV Community will show you total pageviews, number of comments, and number of ‚Äúreactions‚Äù, i.e. likes, but that‚Äôs it. &lt;/p&gt;

&lt;p&gt;Cookies (otherwise known as HTML cookies or site cookies) impact the data your analytics tools are able to collect. If you use persistent cookies, you may be required to display a cookie banner on your site (there are exceptions; look at your web analytics provider for more details). Also, blogs hosted on platforms like Hashnode and DEV Community are governed by the platform‚Äôs cookie compliance policies). Users may have ‚Äúdo not track‚Äù settings enabled, and whenever a user clears their cache, they‚Äôre treated as a unique visitor the next time they visit your site. These aren‚Äôt things to lose sleep over but important to keep in mind.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-metrics-and-user-data" class="anchor"&gt;
  &lt;/a&gt;
  Types of Metrics and User Data
&lt;/h2&gt;

&lt;p&gt;Web analytics tools also calculate metrics. Here are some common metrics by analytics tool (this is not an exhaustive list):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Web analytics metrics&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Total &amp;amp; unique visits &lt;/li&gt;
&lt;li&gt;Total &amp;amp; unique page views&lt;/li&gt;
&lt;li&gt;New vs returning visitors&lt;/li&gt;
&lt;li&gt;Traffic sources&lt;/li&gt;
&lt;li&gt;Bounce rate &lt;/li&gt;
&lt;li&gt;Exit rate&lt;/li&gt;
&lt;li&gt;Click-through rate&lt;/li&gt;
&lt;li&gt;Time on page&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Social media analytics metrics&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Total number of impressions&lt;/li&gt;
&lt;li&gt;Number of likes&lt;/li&gt;
&lt;li&gt;Number of comments&lt;/li&gt;
&lt;li&gt;Number of retweets/reposts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Email marketing metrics&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Total number of recipients&lt;/li&gt;
&lt;li&gt;Number of opens&lt;/li&gt;
&lt;li&gt;Open rate &lt;/li&gt;
&lt;li&gt;Number of clicks&lt;/li&gt;
&lt;li&gt;Click-through rate&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can also add your own metrics to these platforms; many companies have metrics that correspond with different funnels and will make sure their analytics includes all the metrics they need to track.&lt;/p&gt;

&lt;p&gt;How about user data? If you‚Äôre using a robust analytics platform, you‚Äôll be able to view the following user data:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Referral sources: the places where users come from and drive traffic to your site&lt;/li&gt;
&lt;li&gt;Device type&lt;/li&gt;
&lt;li&gt;Operating system&lt;/li&gt;
&lt;li&gt;Country: where users are located &lt;/li&gt;
&lt;li&gt;Region&lt;/li&gt;
&lt;li&gt;Browser language&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This data might be way more than you need at this point. But this type of data forms the basis of segmentation. Segmentation is the grouping of audiences by specific characteristics. If you want to run A/B tests for specific subsets of users, or if you want to focus on improving your site‚Äôs UX for certain device types, this type of data will help you target the right users&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-web-analytics-platforms-get-data" class="anchor"&gt;
  &lt;/a&gt;
  How Web Analytics Platforms Get Data
&lt;/h2&gt;

&lt;p&gt;In general, most web analytics platforms will require you to embed a tracking code (usually JavaScript) to your site‚Äôs header or footer. The code will execute on each page on the site. This lets your web analytics capture ‚Äúevents‚Äù on each page, or actions your users do like clicking a link, a page, the time they spend on a page, and so forth. Your web analytics platform logs the data and will often display data as visualizations in a dashboard. Most platforms have default dashboards but you can also create custom dashboards and reports from within your tool. &lt;/p&gt;

&lt;p&gt;Furthermore, web analytics platforms drop cookies in a user‚Äôs browser to track them on the site during their current visit (these are called ‚Äúsession‚Äù cookies) or to remember them in subsequent visits and/or track their movements beyond the site for advertising purposes (these are called ‚Äúpersistent‚Äù cookies). Analytics uses session vs persistent cookies to differentiate between total visits and unique visits, which count only the first time you visited the site. Note: cookies don't track users across devices, so the same user accessing the same page on both their mobile phone and their laptop would count as two unique visits.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-uses-of-web-analytics" class="anchor"&gt;
  &lt;/a&gt;
  Other Uses of Web Analytics
&lt;/h2&gt;

&lt;p&gt;Because of the mechanisms used to collect data, web analytics platforms also power the following types of activities:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Retargeting&lt;/strong&gt;. If you‚Äôve seen an ad on a news website for a product you shopped for on a different site, this is retargeting in action. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;A/B testing&lt;/strong&gt;. Online experiments, or A/B tests, work by serving up a variation of a page that has had a small change made to it. Visitors are randomly assigned to either the ‚Äúcontrol‚Äù group or the ‚Äútreatment‚Äù group; the control group sees the existing experience and the treatment sees the change. On the backend, the analytics platform measures any changes to key metrics on the page and uses statistics to determine which version is the winner.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Personalization&lt;/strong&gt;. Personalization works by serving a different version of a page to a group, or ‚Äúsegment‚Äù of users, based on shared characteristics. These segments are built based on the activity previous site visitors have done and will ‚Äúserve‚Äù them an experience based on which segment they fall into.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These activities may require a separate system to run, but they use web analytics as their data source.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#which-web-analytics-tool-to-use" class="anchor"&gt;
  &lt;/a&gt;
  Which Web Analytics Tool to Use
&lt;/h2&gt;

&lt;p&gt;Google Analytics by far is the most popular web analytics platform for everything from personal sites to large, enterprise sites. It‚Äôs free to use, but with everything, there‚Äôs a catch: GA will only analyze a portion of your data, and user data is sent to and hosted on Google servers. If this is an issue, consider other analytics tools. When looking for an analytics platform, I was looking for one that was robust, that didn‚Äôt share data with third parties, and that was privacy-minded. Here are some platforms that are similar (some are even open source):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Matomo Analytics&lt;/li&gt;
&lt;li&gt;Fathom Analytics&lt;/li&gt;
&lt;li&gt;Simple Analytics&lt;/li&gt;
&lt;li&gt;Plausible Analytics&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note that there‚Äôs nothing wrong with only having access to a slice of your metrics and data. For some people, platforms like Matomo and Google Analytics are too rich and tell them more about their users than they need or want to know. As long as you understand what metrics are valuable to you and what you can and can‚Äôt infer from these metrics, use the platform that is right for your use case.&lt;/p&gt;

&lt;p&gt;I would recommend reading up on all of these options (and there are many more) to find the one that meets your needs. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Web analytics tools work by collecting data on the actions users take on your site in order to improve your site‚Äôs usability, content, or to create personalized experiences. To use them for data-driven decision-making, craft questions that align with your metrics and look at your analytics regularly to spot changes in metrics. Finally, research the differences between analytics tools to identify the best one for you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resources" class="anchor"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.usability.gov/what-and-why/web-analytics.html"&gt;https://www.usability.gov/what-and-why/web-analytics.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://plausible.io/vs-google-analytics"&gt;https://plausible.io/vs-google-analytics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://matomo.org/blog/2020/02/web-analytics-cookies-gdpr/"&gt;https://matomo.org/blog/2020/02/web-analytics-cookies-gdpr/&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.bounteous.com/insights/2019/12/23/how-google-analytics-uses-cookies-identify-users/"&gt;https://www.bounteous.com/insights/2019/12/23/how-google-analytics-uses-cookies-identify-users/&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.stephaniemorillo.co/post/an-introduction-to-web-analytics"&gt;&lt;em&gt;This post originally appeared on my blog.&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I'm Stephanie, a Content Strategist and Technical PM. Visit &lt;a href="https://www.developersguidetocontent.com"&gt;developersguidetocontent.com&lt;/a&gt; to learn more about my work!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>analytics</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Make Your Angular SPA Accessible</title>
      <author>Alula TYC</author>
      <pubDate>Tue, 24 Nov 2020 14:01:47 +0000</pubDate>
      <link>https://dev.to/altsyset/make-your-angular-spa-accessible-16h</link>
      <guid>https://dev.to/altsyset/make-your-angular-spa-accessible-16h</guid>
      <description>&lt;h2&gt;
  &lt;a href="#implementing-the-skip-to-main-content-bypass-block-link-on-angular-project" class="anchor"&gt;
  &lt;/a&gt;
  Implementing the "Skip to Main Content" (Bypass Block) link on Angular project
&lt;/h2&gt;

&lt;p&gt;One of the most important links you can build on your project to help visually impaired users is to implement the "Skip to Main Content" link.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-skip-to-main-content-link" class="anchor"&gt;
  &lt;/a&gt;
  What is the "Skip to Main Content" link
&lt;/h2&gt;

&lt;p&gt;If you are a regular keyboard user you definitely used and love this link. Here is a screenshot of what I am talking about in action.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bAKH-jlw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ujabi9eo8w9z324cs2ar.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bAKH-jlw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ujabi9eo8w9z324cs2ar.PNG" alt="The Skip To Main Content link in action"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To see this screen for yourself, type your search key, and press enter. Then press the tab key. You will see the 'Skip to Main Content' link.&lt;/p&gt;

&lt;p&gt;The main purpose of this link is to help keyboard users and visually impaired users to jump to the main content instead of tabbing over all the links on top of it. In this scenario, users won't have to deal with the search box, the icons around it, all the links below it("All", "Image", "News", etc.). Instead, the keyboard will jump to the first link of the search result.&lt;/p&gt;

&lt;p&gt;This is a very valuable usability asset you can implement in your angular project as follows. Please read the &lt;a href="https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-skip.html"&gt;WCAG standards&lt;/a&gt; on this topic for more.&lt;/p&gt;

&lt;p&gt;You can take a number of approaches to implement this feature. Here I will show one of these approaches you can use.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-one-enable-anchore-scrolling" class="anchor"&gt;
  &lt;/a&gt;
  Step One, Enable Anchore Scrolling.
&lt;/h2&gt;

&lt;p&gt;First enable anchor tags in your angular project by just adding this block on your app-routing.module.ts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;RouterModule.forRoot(routes, {
    anchorScrolling: 'enabled',
  })

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-two-the-link" class="anchor"&gt;
  &lt;/a&gt;
  Step Two, the link.
&lt;/h2&gt;

&lt;p&gt;Implement a simple link on top of your components. In most cases, it will be on the &lt;code&gt;app.component.html&lt;/code&gt; file. It will be something like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;a class="nav-link" [routerLink]="[currentUrl]" [fragment]="'main'" &amp;gt;Skip to Main Content &amp;lt;/a&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We will discuss the &lt;code&gt;[routerLink]&lt;/code&gt; part of this simple anchor link later. But the &lt;code&gt;[fragment]&lt;/code&gt; is just the &lt;code&gt;'#main'&lt;/code&gt; part of the url that will be appended to it, considering we will have a &lt;code&gt;div&lt;/code&gt; or &lt;code&gt;section&lt;/code&gt; with an &lt;code&gt;id&lt;/code&gt; of &lt;code&gt;main&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-three-subscribe-to-the-router-event" class="anchor"&gt;
  &lt;/a&gt;
  Step three, subscribe to the router event.
&lt;/h2&gt;

&lt;p&gt;Every time the user clicks and navigates to different pages and components, the URL changes. Our task will be to listen to these changes by subscribing to this event. That way we can always know the current URL and add it as the &lt;code&gt;[routerLink]&lt;/code&gt; value in the link that you see above. You can do this in the constructor of your app component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;currentUrl: any = ''
constructor(router: Router) {
    router.events.subscribe((e) =&amp;gt; {
      if (e instanceof NavigationEnd) {
        if (e.url != '') {
          this.currentUrl = e.url;
        } else {
          this.currentUrl ='';
        }
      }
    });
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Note: You have to import Router and NavigationEnd from &lt;code&gt;@angular/router&lt;/code&gt; on top of this class as follows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { Router, NavigationEnd, NavigationStart } from "@angular/router";
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#finally-step-four-the-main-section" class="anchor"&gt;
  &lt;/a&gt;
  Finally, step four, the main section.
&lt;/h2&gt;

&lt;p&gt;Finally, make sure you have a &lt;code&gt;section&lt;/code&gt; of a &lt;code&gt;div&lt;/code&gt; with an id of &lt;code&gt;main&lt;/code&gt; so that when the user clicks the link and redirected to the same url with &lt;code&gt;#main&lt;/code&gt;, our app jumps to it.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>a11y</category>
      <category>spa</category>
      <category>keyboard</category>
    </item>
    <item>
      <title>Help Desk Intern to SRE @Google in Five Years</title>
      <author>Dan Tsekhanskiy</author>
      <pubDate>Tue, 24 Nov 2020 13:25:09 +0000</pubDate>
      <link>https://dev.to/tseknet/help-desk-intern-to-sre-google-in-five-years-j8d</link>
      <guid>https://dev.to/tseknet/help-desk-intern-to-sre-google-in-five-years-j8d</guid>
      <description>&lt;p&gt;&lt;em&gt;Five years ago I was a help desk intern. Last week was my first week as an SRE at Google.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Let's start with the understanding that working on the help desk puts you in the perfect position to eventually transition into one of these roles. Help desk affords you the ability to see &lt;em&gt;how&lt;/em&gt; the technologies that the business relies on function, as you're often tasked with troubleshooting when they &lt;em&gt;don't&lt;/em&gt; work. Learning through reverse engineering, especially in IT, is often an overlooked method of gaining a deep understanding of new technologies. Reverse engineering requires you to get your hands dirty and take a deep dive into what you're troubleshooting. This is where learning happens.&lt;/p&gt;

&lt;p&gt;Next, what's SRE? SRE started in 2003 at Google and is often compared to DevOps (coined around 2008). SRE is what you get when you treat operations as if it‚Äôs a software problem.&lt;sup&gt;1&lt;/sup&gt; These two disciplines share the same foundational principles but have subtle differences.&lt;sup&gt;2&lt;/sup&gt; I've found these to involve themes such as code-based configuration, reliability, and &lt;em&gt;service&lt;/em&gt; (rather than &lt;em&gt;server&lt;/em&gt;) management.&lt;/p&gt;

&lt;p&gt;Let's dive right in with themes I've kept in mind throughout my career. If you're interested in the actual positions I've held as a reference, check out my &lt;a href="https://linkedin.com/in/tseknet"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#always-be-learning" class="anchor"&gt;
  &lt;/a&gt;
  Always be Learning
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Throughout my career, I've found one theme to be ever-present: Always be learning.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Regardless of the position, I've always aspired to go above and beyond what was "written on the tin" of the job requirements. Are there tasks that you find mundane and repetitive? Automate them. I've often found the quickest way to learn a new programming language is to find a simple problem and start looking up potential solutions to that problem in a given language. Try to replicate those solutions, and work through the issues you run into along the way.&lt;/p&gt;

&lt;p&gt;Once you've fixed your first problem, odds are you've become at least familiar with new technology, and provided value in the process. Here's where I note that value is subjective. For example, a &lt;a href="https://github.com/TsekNet/mailit"&gt;side project&lt;/a&gt; I worked on to get my feet wet with Go sends friends daily emails of the cutest pictures from Reddit. Did that provide value to anyone other than the person who's day was most definitely improved by receiving cute pictures? Definitely. It helped me get familiar with a programming language that I had never seriously touched before.&lt;/p&gt;

&lt;p&gt;Every toolbox starts with one tool. What's important is you keep adding multipurpose tools to your toolbox. For example, Puppet, Terraform, Git, etc. can be used to solve a wide variety of problems. Notice I did not mention problems &lt;em&gt;for a company&lt;/em&gt; here.&lt;sup&gt;3&lt;/sup&gt; Learning these tools will take some effort, but this is &lt;em&gt;your&lt;/em&gt; toolbox. It's got your name right on the front in big bold letters. You can take it with you wherever you go.&lt;/p&gt;

&lt;p&gt;These tools can be used to automate your company's fancy new rollout or even automate your grandparent's software updates. You'll soon see your toolbox overflowing with tools. Every tool you master will put you in a significantly better place in the job market than you were, or at the very least, grow your toolbox and&lt;br&gt;
help you solve the IT problems you are facing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#passion" class="anchor"&gt;
  &lt;/a&gt;
  Passion
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;It helps if you're passionate about what you do.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I am passionate about all things IT, job-related or not. I've been fortunate to pick a career that allows me to explore my passions, and a company that allows me to explore new ideas and designs that are fueled by my passions.&lt;/p&gt;

&lt;p&gt;I often say that I'd be doing IT-related side projects even if I wasn't in the IT industry. Ever since playing with (and on) my dad's computer at five years old, I've had a passion for all things technology. I enjoy taking things apart (read: breaking things), figuring out how they work, and (sometimes) putting them back together.&lt;/p&gt;

&lt;p&gt;I often work on side projects on GitHub or my home lab (stay tuned for an upcoming post), in addition to my day job.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ask-questions" class="anchor"&gt;
  &lt;/a&gt;
  Ask questions
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Be comfortable not being the smartest person in the room.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Especially since joining Google, it's clear to me that there will always be someone more knowledgeable than you. Reach out to those people.&lt;/p&gt;

&lt;p&gt;I've been lucky to hold positions where curiosity could be endlessly fed by fantastic peers and mentors. Often when troubleshooting issues, even during my internship, if I had questions, I could just turn to a peer and ask away. I've found that people love talking about things they're experts in. If you're fortunate enough to have peers such as these, make sure to thank them early and often.&lt;/p&gt;

&lt;p&gt;Learning when to ask questions is a skill in and of itself (and a good interview question). There's no definitive answer for &lt;em&gt;when&lt;/em&gt; is the right time to reach out. What's certain is you will find yourself reaching out, especially as you learn new technologies, programming languages, etc. Just know that questions are part of the learning process. If you find yourself spending endless cycles on a problem, that's probably a good sign that you could reach out for some help.&lt;/p&gt;

&lt;p&gt;Finally, asking questions is part of the process of how a junior member of a team becomes a senior member. Eventually, that junior member asking questions becomes the senior member fielding them. The cycle continues.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#take-charge" class="anchor"&gt;
  &lt;/a&gt;
  Take Charge
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Set goal. Set aside time. Accomplish goal. Repeat.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I've adhered to the principles of S.M.A.R.T goals&lt;sup&gt;4&lt;/sup&gt; and calendar blocking&lt;sup&gt;5&lt;/sup&gt; to meet those goals. Being intentional with your time is a productivity "hack" I wish I'd learned long ago. If you're serious about an endeavor, set aside time to accomplish it. Remove all other distractions from your life, and focus on achieving what you've set to achieve. Set goals, and keep yourself accountable for achieving your goals.&lt;/p&gt;

&lt;p&gt;Life will always get in the way. Be reasonable with your goals. Everyone is different, and timelines are likely to slip. It's important to be realistic and kind to yourself when goals slip.&lt;/p&gt;

&lt;p&gt;Set aside time to set overarching goals for your career. Some example questions should help you get started:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Do I want to work until retirement?&lt;/li&gt;
&lt;li&gt;Do I want to run my own business?&lt;/li&gt;
&lt;li&gt;Do I want to work from home?&lt;/li&gt;
&lt;li&gt;Do I want to work full time or part-time?&lt;/li&gt;
&lt;li&gt;Do I want to move?&lt;/li&gt;
&lt;li&gt;What do I need to start working on to achieve these goals?&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#whats-next" class="anchor"&gt;
  &lt;/a&gt;
  What's Next?
&lt;/h2&gt;

&lt;p&gt;An unending thirst for knowledge, fantastic mentors, and taking advantage of opportunity have led me to this point in my career. What's next for me? My toolbox still has plenty of room. My career still has plenty of room to grow. What's for certain is I'll continue to ask questions, break things, and share my journey with you along the way. Check out my &lt;a href="https://twitter.com/tseknet"&gt;twitter&lt;/a&gt; if you'd like to follow along.&lt;/p&gt;

&lt;p&gt;Now get out there and take charge of your career üí™&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#footnotes" class="anchor"&gt;
  &lt;/a&gt;
  Footnotes
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://landing.google.com/sre/"&gt;What is Site Reliability Engineering (SRE)?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Site_reliability_engineering"&gt;DevOps vs SRE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://donjones.com/2019/09/05/career-vs-job/"&gt;Career vs. Job&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/SMART_criteria"&gt;SMART Criteria&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tseknet.com/blog/intent"&gt;Be Intentional&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>beginners</category>
      <category>career</category>
      <category>devops</category>
      <category>motivation</category>
    </item>
    <item>
      <title>Calling all Data Nerds</title>
      <author>Adi Polak</author>
      <pubDate>Tue, 24 Nov 2020 13:12:25 +0000</pubDate>
      <link>https://dev.to/azure/calling-out-all-data-nerds-49if</link>
      <guid>https://dev.to/azure/calling-out-all-data-nerds-49if</guid>
      <description>&lt;p&gt;Happy to share that my colleagues are organizing a Data Week and I'm joining them for a panel to share my insights on Career in Data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-data-is-important-for-your-career" class="anchor"&gt;
  &lt;/a&gt;
  Why Data is important for your career?
&lt;/h2&gt;

&lt;p&gt;Well, data is all around us, we use computers that produce logs, we send text, images, and video messages, our e-books are pieces of data. Our social media compiles to data on social media companies servers and Databases. and many more.&lt;/p&gt;

&lt;p&gt;Basically, every bit/byte/signals that a computer produces can be translated and saved as data on disk, or as a Data in memory. After it got saved, we can do great things with it, like helping humanity, calculating the best prices - as Airbnb did for renters, offering new people to follow like Twitter, defend the world from cyber-attacks, and many more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ok-got-it-got-it-many-scenarios-where-data-helps-but-where-can-i-learn-more-about-it-youve-said-something-about-a-data-week-what-is-that" class="anchor"&gt;
  &lt;/a&gt;
  ok. got it, got it, many scenarios where data helps, but where can I learn more about it? you've said something about a data week, what is that?!
&lt;/h3&gt;

&lt;p&gt;Data week is a full week of celebrating everything Data &amp;amp; Data Technologies! Data week includes expert panel discussions on industry trends &amp;amp; the future of data, AMA events with Microsoft Engineers and Product Managers, plus hands-on demonstrations and workshops with the engineers who built (and are still building) the tools! it's a week of Data-Related learning!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/rdma0nDFZMR32/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/rdma0nDFZMR32/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#data-week" class="anchor"&gt;
  &lt;/a&gt;
  Data Week
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;In a nutshell:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Monday - &lt;a href="https://createdata.splashthat.com/"&gt;Create: Data&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Tuesday - Panel Discussions&lt;/li&gt;
&lt;li&gt;Wednesday - Workshops&lt;/li&gt;
&lt;li&gt;Thursday - meet Microsoft Engineers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PFlf0FEJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ykzjaqdopba0bpg4jrgt.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PFlf0FEJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ykzjaqdopba0bpg4jrgt.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#lets-take-a-look-day-by-day" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Let's take a look day by day:&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;Let's take a look at the events, day by day. Each day is unique and exciting and designed for you to skill up and grow in your career.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#monday-dec-7th-create-data-800am-1130am-pst" class="anchor"&gt;
  &lt;/a&gt;
  Monday Dec. 7th - Create: Data 8:00am - 11:30am PST
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#create-data-completely-free-online-event" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a href="https://createdata.splashthat.com/"&gt;Create: Data&lt;/a&gt;, completely FREE online event.
&lt;/h3&gt;

&lt;p&gt;Don't forget to register in the &lt;a href="https://createdata.splashthat.com/"&gt;link!&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this 3 hour event, hear from our keynote speakers &lt;a href="https://twitter.com/arunulag?s=20"&gt;Arun Ulagaratchagan&lt;/a&gt;, CVP(Corporate Vice President) of Power BI Engineering, Microsoft and &lt;a href="https://twitter.com/heddanewman"&gt;Heather Newman&lt;/a&gt; share about why and how to &lt;strong&gt;drive a data culture&lt;/strong&gt; in a world of remote everything. Learn about Apache Spark and OSS insights, Data Pipelines and how to pick the right distributed database from notable community leaders like &lt;a href="https://twitter.com/holdenkarau"&gt;Holden Karau&lt;/a&gt;, Cheryl Adams, &lt;a href="https://twitter.com/jaceklaskowski?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor"&gt;Jacek Laskowski&lt;/a&gt;, &lt;a href="https://twitter.com/tlberglund"&gt;Tim Berglund&lt;/a&gt;, &lt;a href="https://twitter.com/paladique?s=20"&gt;Jasmine Greenaway&lt;/a&gt; and &lt;a href="https://twitter.com/abhi_tweeter?s=20"&gt;Abhishek Gupta&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Our exciting line-up of panelists, &lt;a href="https://twitter.com/EvePardi?s=20"&gt;Eve Pardi&lt;/a&gt;, &lt;a href="https://twitter.com/ruthieyakubu?s=20"&gt;Ruth Yakubu&lt;/a&gt;, &lt;a href="https://twitter.com/adishsh?s=20"&gt;Adi Shacham-Shavit&lt;/a&gt; and &lt;a href="https://twitter.com/AnalyticAnna?s=20"&gt;Anna Hoffman&lt;/a&gt; will also share how data can be used for good before we wrap up with a closing keynote by &lt;a href="https://twitter.com/saveenr?s=20"&gt;Saveen Reddy&lt;/a&gt; and &lt;a href="https://twitter.com/MrSiWhiteley?s=20"&gt;Simon Whiteley&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XrHMUxjw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3xw4pr1iwfk4r6xh9y7l.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XrHMUxjw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3xw4pr1iwfk4r6xh9y7l.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tuesday-dec-8th-panel-discussions-800-1000am-pst" class="anchor"&gt;
  &lt;/a&gt;
  Tuesday, Dec. 8th ‚Äì Panel Discussions 8:00 - 10:00am PST
&lt;/h2&gt;

&lt;p&gt;On Tuesday, we are hosting two and exciting panel discussions:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#women-talks-data-in-the-cloud" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.meetup.com/Microsoft-Reactor-Redmond/events/274630696"&gt;Women talks Data in the Cloud&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/adipolak"&gt;@adipolak&lt;/a&gt;, Tzvia Gitlin Troyna, and Vered Flis will talk about options and careers in the distributed data technologies domain.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ndfDk14L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ohg25yowtlvezm38bicj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ndfDk14L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ohg25yowtlvezm38bicj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#beyond-modern-data-warehouse" class="anchor"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.meetup.com/Microsoft-Reactor-Redmond/events/274631326"&gt;Beyond Modern Data Warehouse&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/MrSiWhiteley"&gt;Simon Whiteley&lt;/a&gt;, &lt;a href="https://twitter.com/ciprianjichici"&gt;Ciprian Jichici&lt;/a&gt;, &lt;a href="https://twitter.com/cathrinew"&gt;Cathrine Wilhelmsen&lt;/a&gt; and&lt;br&gt;
&lt;a href="https://twitter.com/HowardvRooijen"&gt;Howard Van Rooijen&lt;/a&gt; will discuss the pros and cons of data warehouse tools and how best to combine them together to get more insights and value out of our data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oWkAsFXC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/onqo3i7dav8js0r01m43.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oWkAsFXC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/onqo3i7dav8js0r01m43.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#wednesday-dec-9th-workshops" class="anchor"&gt;
  &lt;/a&gt;
  Wednesday, Dec. 9th ‚Äì Workshops
&lt;/h2&gt;

&lt;p&gt;Wednesday is the hands-on day! this is where you skill up, and get hands-on experience with multiple services. &lt;/p&gt;

&lt;p&gt;Every workshop will be given twice, so you can choose the time that works best for you! &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Option A - 8:00am - 10:00 am PT:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://www.meetup.com/Microsoft-Reactor-Redmond/events/274631531"&gt;Near Real-Time Analytics with Azure Synapse Link for Azure Cosmos DB &lt;/a&gt; with &lt;a href="https://twitter.com/abhi_tweeter"&gt;Abhishek Gupta&lt;/a&gt;.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l4h2LQh4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vhza2t7rcq6rbns8wyey.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.meetup.com/Microsoft-Reactor-Redmond/events/274631662"&gt;Ingest &amp;amp; Analyze IoT¬†Data¬†with Azure Synapse&lt;/a&gt; with &lt;a href="https://twitter.com/cmaneu"&gt;Christopher Maneu&lt;/a&gt;. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sHUUF6VV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xo307ryahdwwlyfc4hwk.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Option B - 4:00pm - 6:00 pm PT:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.meetup.com/Microsoft-Reactor-Redmond/events/274631889"&gt;Near Real-Time Analytics with Azure Synapse Link for Azure Cosmos DB&lt;/a&gt;  with Rodrigo Souza.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gIyMcaAO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/49ol5nakq8l4j6r8iijw.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.meetup.com/Microsoft-Reactor-Redmond/events/274632015"&gt;Ingest &amp;amp; Analyze IoT¬†Data¬†with Azure Synapse&lt;/a&gt; with &lt;a href="https://twitter.com/dglover?lang=en"&gt;Dave Glover&lt;/a&gt;.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9al2KHcy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/1fc52bl7x34fe95ml5c4.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#thursday-dec-10th%C2%A0-meet-microsoft-engineers" class="anchor"&gt;
  &lt;/a&gt;
  Thursday, Dec. 10th¬†‚Äì Meet Microsoft Engineers
&lt;/h2&gt;

&lt;p&gt;On this day, you will have two-time slots to learn from the Product Managers leads and Engineering leads more about their products, how they are building it and sessions will follow up with AMA for you to ask questions about career, technology, and everything data related. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g7GMYbZm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/j2tihg66ndmjlt2obmih.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g7GMYbZm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/j2tihg66ndmjlt2obmih.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Option A - 8:00am - 9:30 am PT:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.meetup.com/Microsoft-Reactor-Redmond/events/274632117"&gt;What can you do with a limitless analytics service?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.meetup.com/Microsoft-Reactor-Redmond/events/274633825"&gt;Designing Really Scalable¬†Data¬†Systems&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.meetup.com/Microsoft-Reactor-Redmond/events/274633988"&gt;AMA with Azure Synapse Team&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Option B - 4:00pm - 5:30 pm PT:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Microsoft-Reactor-Redmond/events/274632173"&gt;What can you do with a limitless analytics service?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Microsoft-Reactor-Redmond/events/274633875"&gt;Designing Really Scalable¬†Data¬†Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Microsoft-Reactor-Redmond/events/274634029"&gt;AMA with Azure Synapse Team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#wow-so-many-options-and-ways-to-learn" class="anchor"&gt;
  &lt;/a&gt;
  WOW.. So MANY options and ways to learn.
&lt;/h2&gt;

&lt;p&gt;Mark YOUR calendar, register, and signup for all your favorites sessions, I recommend all of them üòä&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/gfTPmNCC7PKHevwp25/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/gfTPmNCC7PKHevwp25/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#see-you-there" class="anchor"&gt;
  &lt;/a&gt;
  See you there!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--53_Wlw3L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/50cehm5gk7i5dvv6w3dm.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--53_Wlw3L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/50cehm5gk7i5dvv6w3dm.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>database</category>
      <category>news</category>
      <category>career</category>
      <category>showdev</category>
    </item>
    <item>
      <title>The Black Friday üéÅ and Cyber Monday üíù Thread 2020  </title>
      <author>Sarthak Sharma</author>
      <pubDate>Tue, 24 Nov 2020 12:09:11 +0000</pubDate>
      <link>https://dev.to/sarthology/the-black-friday-and-cyber-monday-thread-2020-d8l</link>
      <guid>https://dev.to/sarthology/the-black-friday-and-cyber-monday-thread-2020-d8l</guid>
      <description>&lt;p&gt;What are the Best Black Friday and Cyber Monday deals you came across for fellow developers?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;üö® PLEASE DON'T SPAM&lt;/em&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Well you can also add to this Repo&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vJ70wriM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sarthology"&gt;
        sarthology
      &lt;/a&gt; / &lt;a href="https://github.com/sarthology/DevBlackFriday2020"&gt;
        DevBlackFriday2020
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üéÅ Black Friday and Cyber Monday Deals for Developers and Designers üéäüçæüéâ
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h2&gt;
&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/3650216/100090638-7b54af00-2e79-11eb-8c93-3d3a6593b934.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YoN4J_Np--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/3650216/100090638-7b54af00-2e79-11eb-8c93-3d3a6593b934.gif" alt="Animated Black Friday Facebook Event Cover  "&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;This repo has all the Black Friday and Cyber Monday deals that has to do with Developers and Designers. You have a request submit a PR or DM me &lt;a href="https://twitter.com/sarthology" rel="nofollow"&gt;@sarthology&lt;/a&gt; üòá&lt;/p&gt;
&lt;p&gt;Follow this &lt;a href="https://dev.to/sarthology/the-black-friday-and-cyber-monday-thread-2020-d8l" rel="nofollow"&gt;Post on Dev.to&lt;/a&gt; to see to suggest more deals.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note&lt;/em&gt;&lt;/strong&gt;: No spam please or PR will be rejected&lt;/p&gt;

&lt;div&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/3650216/100118190-9df7bf80-2e9b-11eb-933a-7e9cabc198c8.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C2SOlAbh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/3650216/100118190-9df7bf80-2e9b-11eb-933a-7e9cabc198c8.png"&gt;&lt;/a&gt;&lt;/div&gt;
&lt;h3&gt;
Tools&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Adobe Creative Cloud&lt;/em&gt;&lt;/strong&gt; Get 25% off. üëâüèº &lt;a href="https://www.adobe.com/creativecloud.html" rel="nofollow"&gt;Link üéÅ&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Nucleo Icons&lt;/em&gt;&lt;/strong&gt;: 25% OFF! Enter the code blackfriday25 üëâüèº &lt;a href="https://nucleoapp.com" rel="nofollow"&gt;Link üéÅ&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Designmodo Products&lt;/em&gt;&lt;/strong&gt;: Use coupon code BLACK during checkout and save 30%! üëâüèº &lt;a href="https://designmodo.com/blackfriday/?u=4176" rel="nofollow"&gt;Link üéÅ&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Affinity Designer&lt;/em&gt;&lt;/strong&gt;: Get 30% Off üëâüèº &lt;a href="https://affinity.serif.com/en-us/designer/#buy" rel="nofollow"&gt;Link üéÅ&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/3650216/100120186-b10b8f00-2e9d-11eb-9d43-495dd1b2f492.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KTi7olFE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/3650216/100120186-b10b8f00-2e9d-11eb-9d43-495dd1b2f492.png"&gt;&lt;/a&gt;&lt;/div&gt;
&lt;h3&gt;
Tools&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Git Kraken&lt;/em&gt;&lt;/strong&gt;: Use promo code GKBF20 for $10 off 1 user Pro purchases or GKBF20TEAM for $100 off 10 user Pro purchase üëâüèº &lt;a href="https://www.gitkraken.com/pricing" rel="nofollow"&gt;Link üéÅ&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Tower&lt;/em&gt;&lt;/strong&gt;: All plans are 50% off üëâüèº &lt;a href="https://www.git-tower.com/pricing/mac" rel="nofollow"&gt;Link üéÅ&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;iStat&lt;/em&gt;&lt;/strong&gt;: iStat Menus is 66% off for Black Friday and Cyber Monday! üëâüèº &lt;a href="https://bjango.com/mac/istatmenus/" rel="nofollow"&gt;Link &lt;/a&gt;‚Ä¶&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sarthology/DevBlackFriday2020"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


</description>
      <category>discuss</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>Destructuring Assignment Indepth Syntax Comparison - JavaScript Vs Python</title>
      <author>Sachin üë®üèª‚Äçüíª</author>
      <pubDate>Tue, 24 Nov 2020 11:34:09 +0000</pubDate>
      <link>https://dev.to/devdios/destructuring-assignment-indepth-syntax-comparison-javascript-vs-python-2nl5</link>
      <guid>https://dev.to/devdios/destructuring-assignment-indepth-syntax-comparison-javascript-vs-python-2nl5</guid>
      <description>&lt;p&gt;The destructuring or an unpacking assignment syntax is an expression that makes it possible to unpack values from iterables like array and objects in javascript and list, tuples, dictionaries in Python into distinct variables.This post will look at the difference in syntax used in Python and JavaScript for destructuring or unpacking assignments.&lt;/p&gt;

&lt;p&gt;Unstructuring assignment is quite useful as it allows us to assign values to several variables at once from a single collection, is easy to understand and improves code-readability(if there exist such a term). &lt;/p&gt;

&lt;p&gt;One simple examples includes performing swap operation on two variables,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Python&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; 
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;

&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c1"&gt;# 7 5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// 7 5 &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#arraylist-destructuring" class="anchor"&gt;
  &lt;/a&gt;
  Array/List Destructuring
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Python&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;example_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;second&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;third&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;example_list&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;second&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;third&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

&lt;span class="c1"&gt;# 1 2 3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The above code snippet shows a simple list destructing in Python. Here the assignment of variables depends simply upon the order of items in the list.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;example_array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;second&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;third&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;second&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;third&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;example_array&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;second&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;third&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// 1 2 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Array Destructuring in JavaScript requires variable to be enclosed with "[ ]"&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ignoring-values" class="anchor"&gt;
  &lt;/a&gt;
  Ignoring values
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Python&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;example_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;third&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;example_list&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;third&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# 1 3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The values to ignored are to be replaced with ' _ '&lt;/p&gt;

&lt;p&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;example_array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;third&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;example_array&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;third&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// 1 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The values to be ignored are just empty with commas after them.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In Python, if we try to destructure a collection with more or fewer values than we provide variables, we end up with a &lt;code&gt;ValueError&lt;/code&gt;. Whereas in Javascript it will not show any error&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;Python&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;example_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;second&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;example_list&lt;/span&gt;
&lt;span class="c1"&gt;#ValueError: not enough values to unpack (expected 2)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;example_array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;second&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;third&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fourth&lt;/span&gt;

&lt;span class="c1"&gt;//when destructuring less values&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;second&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;example_array&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;second&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// 1 2&lt;/span&gt;

&lt;span class="c1"&gt;//when destructuring more values&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;second&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;third&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fourth&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;example_array&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;second&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;third&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fourth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// 1 2 3 undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;In JavaScript, When unpacking less number of values, only the initial values are assigned, while unpacking of more number of values, the only the first three variables are assigned a value, and the last remains as undefined.&lt;/p&gt;

&lt;p&gt;In such a scenario, JavaScript allows us to use a default value:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;second&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;third&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fourth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;example_array&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;second&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;third&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fourth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// 1 2 3 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#collecting-values" class="anchor"&gt;
  &lt;/a&gt;
  Collecting Values
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Python&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 1
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# [2, 3, 4, 5]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// [2, 3, 4, 5]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;code&gt;...&lt;/code&gt; is known as "rest" operator in JavaScript &lt;/p&gt;

&lt;p&gt;Be aware that a &lt;code&gt;SyntaxError&lt;/code&gt; will be thrown if a trailing comma is used on the right-hand side of a rest element:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;// SyntaxError: rest element may not have a trailing comma&lt;/span&gt;
&lt;span class="c1"&gt;// Always consider using rest operator as the last element&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#argskwargs-in-python-and-object-destructuring-in-javascript" class="anchor"&gt;
  &lt;/a&gt;
  Args/Kwargs in Python and Object Destructuring in JavaScript
&lt;/h2&gt;

&lt;p&gt;In Python, we can pass a variable number of arguments to a function using special symbols. There are two special symbols:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;*args&lt;/code&gt; (Non Keyword Arguments)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;**kwargs&lt;/code&gt; (Keyword Arguments)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A typical example where one might need something like &lt;code&gt;*args&lt;/code&gt; is given below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;standard&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="n"&gt;two&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;adder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sum:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If we are to add multiple numbers but are unsure of how many numbers we'll have to add&lt;/p&gt;

&lt;p&gt;We can modify adder in two ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;we can put the numbers to be added to a list and pass the list as an argument.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;adder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
        &lt;span class="nb"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sum : "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;But this requires to add maintain a list and remove and add numbers to list accordingly.&lt;/p&gt;

&lt;p&gt;This is where &lt;code&gt;*args&lt;/code&gt; comes into play:&lt;/p&gt;

&lt;p&gt;Python has &lt;code&gt;*args&lt;/code&gt; which allow us to pass the variable number of non keyword arguments to function.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;modifying the adder functions using *args:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;adder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sum:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# args is just a conventional name used in python, we can use any name
# (like num in this example)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;We use *args and **kwargs as an argument when we are unsure about the number of arguments to pass in the functions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;*args&lt;/code&gt; allow to pass mulitple arguments to function while &lt;code&gt;**kwargs&lt;/code&gt; allows to pass multiple keyword arguments to a function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;printSomething&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;printSomething&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Sachin"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# 1
# (2, 3, 4) - args becomes a tuple
# {'name': 'Sachin', 'age': 21} - kwargs becomes a dictionary
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;code&gt;*args&lt;/code&gt; functionality can be replicated in JS using rest operator as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Only the last parameter can be a "rest parameter".&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;myFun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;manyMoreArgs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;b&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;manyMoreArgs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;manyMoreArgs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;myFun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;one&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;two&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;three&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;four&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;five&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;six&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// Console Output:&lt;/span&gt;
&lt;span class="c1"&gt;// a, one&lt;/span&gt;
&lt;span class="c1"&gt;// b, two&lt;/span&gt;
&lt;span class="c1"&gt;// manyMoreArgs, ["three", "four", "five", "six"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Object Destructuring in JS&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;is_verified&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;is_verified&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// here the name of variable should be same as the object's keys&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 42&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;is_verified&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Since the variable names should match the object's key, JS allows using aliases:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;p&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;q&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;p&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;q&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 42 &lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Destructuring of argument passed as Object&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sachin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;profession&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Software Engineer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printDetails&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;profession&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;age&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;job&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;printDetails&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// name Sachin&lt;/span&gt;
&lt;span class="c1"&gt;// age 21&lt;/span&gt;
&lt;span class="c1"&gt;// job Software Engineer&lt;/span&gt;

&lt;span class="c1"&gt;// default age 18&lt;/span&gt;
&lt;span class="c1"&gt;// job as alias to profession&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;With so many rules with quite some similarities and subtle differences, remembering all these can seem to be overwhelming at first. I suggest not to mug up these syntax if you use either Python or JS or both, you can always bookmark this and read it later as and when you need to look up for something. &lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.tecladocode.com/destructuring-in-python/"&gt;Teclado - Destructuring in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"&gt;MDN Web Docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.programiz.com/python-programming/args-and-kwargs"&gt;Programiz - Python Args and Kwargs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading. Stay tuned!!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>python</category>
    </item>
    <item>
      <title>Image downloader with puppeteer and the fetch API</title>
      <author>Caleb David</author>
      <pubDate>Tue, 24 Nov 2020 11:26:07 +0000</pubDate>
      <link>https://dev.to/microworlds/image-downloader-with-puppeteer-and-the-fetch-api-5b8e</link>
      <guid>https://dev.to/microworlds/image-downloader-with-puppeteer-and-the-fetch-api-5b8e</guid>
      <description>&lt;p&gt;In this tutorial, we are going to build a webpage image downloader. Assuming you visit a webpage and saw that the images in that page are cool and you want to have your own copy without downloading them one by one, this simple tool we will build is going to be a life saver for you. This little project is also a good way to practice and hone your webscraping skills.&lt;/p&gt;

&lt;p&gt;We will create a new directory called &lt;code&gt;image-downloader&lt;/code&gt; and navigate into it. Pop open your terminal window and type in the following commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;image-downloader &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;image-downloader
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;I will assume that you have node js and npm installed on your machine. We will then initialize this directory with the standard &lt;code&gt;package.json&lt;/code&gt; file by running &lt;code&gt;npm init -y&lt;/code&gt; and then install two dependencies namely &lt;code&gt;puppeteer&lt;/code&gt; and &lt;code&gt;node-fetch&lt;/code&gt;. Run the following commands to get them installed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save&lt;/span&gt; puppeteer node-fetch &lt;span class="nt"&gt;--verbose&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;You probably just saw a new npm flag &lt;code&gt;--verbose&lt;/code&gt;. When installing puppeteer, what happens behind the scenes is that &lt;code&gt;npm&lt;/code&gt; also installs the chromium browser because it is a dependency of &lt;code&gt;puppeteer&lt;/code&gt;. This file is usually large and we are using the &lt;code&gt;--verbose&lt;/code&gt; flag to see the progress of the installation, nothing fancy, but let's just use it because we can.¬†&lt;/p&gt;

&lt;p&gt;One more thing to do before getting our hands dirty with code is to create a directory where we want all our images to be downloaded. Let's name that directory &lt;code&gt;images&lt;/code&gt;. We will also create &lt;code&gt;index.js&lt;/code&gt; file where all the app's logic will go.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;images &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;touch &lt;/span&gt;index.js
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Actually, it's great to clearly outline our thought process before writing a single line of code.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Get all image tags from the page and extract the &lt;code&gt;href&lt;/code&gt; property from each of these image tags&lt;/li&gt;
&lt;li&gt;Make request to those &lt;code&gt;href&lt;/code&gt; links and store them into the &lt;code&gt;images&lt;/code&gt; directory (Saving images to disk)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#step-one-1-getting-all-image-tags-and-raw-href-endraw-property" class="anchor"&gt;
  &lt;/a&gt;
  Step one 1: Getting all image tags and &lt;code&gt;href&lt;/code&gt; property
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;puppeteer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;puppeteer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;node-fetch&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// Extract all imageLinks from the page&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;extractImageLinks&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;puppeteer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;launch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;headless&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;newPage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;// Get the page url from the user&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;baseURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://stocksnap.io&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;baseURL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;waitUntil&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;networkidle0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;waitForSelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;body&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;imageBank&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;evaluate&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;imgTags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;imageArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

            &lt;span class="nx"&gt;imgTags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;

                &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;srcArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;srcArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;srcArray&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

                &lt;span class="nx"&gt;imageArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                    &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nx"&gt;filename&lt;/span&gt;
                &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;imageArray&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;

        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;imageBank&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now let me explain what is happening here. First, we created an &lt;code&gt;async&lt;/code&gt; function called &lt;code&gt;extractImageLinks&lt;/code&gt;. In that function, we created an instance of a browser page using puppeteer and stored it in the &lt;code&gt;page&lt;/code&gt; constant. Think of this &lt;code&gt;page&lt;/code&gt; as the new page you get after launching your chrome browser. We can now heedlessly control this page from our code. We then get the url of the page we want to download the image from the user and stored it in a variable named &lt;code&gt;baseURL&lt;/code&gt;. We then navigate to that URL using the &lt;code&gt;page.goto()&lt;/code&gt; function. The &lt;code&gt;{waitUntil: 'networkidle0'}&lt;/code&gt; object passed as the second argument to this function is to ensure that we wait for the for the network request to complete before we proceed with parsing the page. &lt;code&gt;page.waitForSelector('body')&lt;/code&gt; is telling puppeteer to wait for the html &lt;code&gt;body&lt;/code&gt; tag to render before we start extracting anything from the page.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;page.evaluate()&lt;/code&gt; function allows us to run JavaScript code in that page instance as if we were in our Google Chrome Devtools. To get all image tags from the page, we call the &lt;code&gt;document.querySelectorAll("img")&lt;/code&gt; function. However, this function returns an &lt;code&gt;NodeList&lt;/code&gt; and not an array. So to convert this to an array, we wrapped the first function with the &lt;code&gt;Array.from()&lt;/code&gt; method. Now we have an array to work with.&lt;/p&gt;

&lt;p&gt;We then store all the image tags in the &lt;code&gt;imgTags&lt;/code&gt; variable and initialized &lt;code&gt;imageArray&lt;/code&gt; variable as a placeholder for all the &lt;code&gt;href&lt;/code&gt; values. Since &lt;code&gt;imgTags&lt;/code&gt; has been converted into an array, we then map through every tag in that array and extract the &lt;code&gt;src&lt;/code&gt; property from each image tag.&lt;/p&gt;

&lt;p&gt;Now time for some little hack, we want to download the image from the webpage maintianing the original filename as it appears in the webpage. For instance, we have this image src &lt;code&gt;https://cdn.stocksnap.io/img-thumbs/960w/green-leaf_BVKZ4QW8LS.jpg&lt;/code&gt;. We wnat to get the &lt;code&gt;green-leaf_BVKZ4QW8LS.jpg&lt;/code&gt; from that URL. One way to do this is to split the string using the &lt;code&gt;"/"&lt;/code&gt; delimeter. We then end up with something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://cdn.stocksnap.io/img-thumbs/960w/green-leaf_BVKZ4QW8LS.jpg`&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// Output&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cdn.stocksnap.io&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;img-thumbs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;960w&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green-leaf_BVKZ4QW8LS.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now the last index of the array after running the &lt;code&gt;split&lt;/code&gt; array method on the image source contains the image's name and the extension as well, awesome!!! &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#note-to-get-the-last-item-from-any-array-we-subtract-raw-1-endraw-from-the-raw-length-endraw-m-of-that-array-like-so" class="anchor"&gt;
  &lt;/a&gt;
  Note: to get the last item from any array, we subtract &lt;code&gt;1&lt;/code&gt; from the  &lt;code&gt;length&lt;/code&gt;m of that array like so:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;61&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;lastItemIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c1"&gt;// This is the index of the last item&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lastItemIndex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Output&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;lastItemIndex&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="c1"&gt;// Output&lt;/span&gt;
&lt;span class="mi"&gt;12&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;So we store the index of the last item in the &lt;code&gt;pos&lt;/code&gt; variable and then store the name of the file in the &lt;code&gt;filename&lt;/code&gt; variable as well. Now we have the source of the file and the file name of the current image in the loop, we then push these values as an object in the &lt;code&gt;imageArray&lt;/code&gt; variable. After the mapping is done, we return the &lt;code&gt;imageArray&lt;/code&gt; because by now it has been populated. We also return the &lt;code&gt;imageBank&lt;/code&gt; variable which now contains the image links (sources) and the filenames.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#saving-images-to-disk" class="anchor"&gt;
  &lt;/a&gt;
  Saving images to disk
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;saveImageToDisk&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createWriteStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;// Run the script on auto-pilot&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;imageLinks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;extractImageLinks&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;imageLinks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;imageLinks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`./images/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
        &lt;span class="nx"&gt;saveImageToDisk&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now let's decipher this little piece. In the anonymous IIFE, we are running the &lt;code&gt;extractImageLinks&lt;/code&gt; to get the array containing the &lt;code&gt;src&lt;/code&gt; and &lt;code&gt;filename&lt;/code&gt;. Since the function is returns an array, we run the &lt;code&gt;map&lt;/code&gt; function on that array and then pass the required parameters (&lt;code&gt;url&lt;/code&gt; and &lt;code&gt;filename&lt;/code&gt;) to &lt;code&gt;saveImageToDisk&lt;/code&gt;. We then use the &lt;code&gt;fetch&lt;/code&gt; API to make a &lt;code&gt;GET&lt;/code&gt; request to that &lt;code&gt;url&lt;/code&gt; and as the response is coming down the wire, we are concurrently piping it into the &lt;code&gt;filename&lt;/code&gt; destination, in this case, a writable stream on our filesystem. This is very efficient because we are not waiting for the image to be fully loaded in memory before saving to disk but instead saving every chunk we get from the response directly.&lt;/p&gt;

&lt;p&gt;Lets's run the code, cross our fingers and checkout our &lt;code&gt;images&lt;/code&gt; directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node index.js  https://stocksnap.io
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We should see some cool images there in. Wooo! You can add this to your portfolio. There are so many improvements that can be done to this little software, such as allowing the user to specify the directory they want to download the image, handling &lt;code&gt;Data URI&lt;/code&gt; images, proper error handling, code refactoring, creating a standalone CLI utility for it. Hint: use the &lt;code&gt;commander&lt;/code&gt; npm package for that, etc. You can go ahead and extend this app and I'll be glad to see what improvements you will make it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#full-code" class="anchor"&gt;
  &lt;/a&gt;
  Full code
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;puppeteer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;puppeteer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;node-fetch&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// Browser and page instance&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;puppeteer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;launch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;headless&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;newPage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Extract all imageLinks from the page&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;extractImageLinks&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;// Get the page url from the user&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;baseURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://stocksnap.io&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;baseURL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;waitUntil&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;networkidle0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;waitForSelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;body&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;imageLinks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;evaluate&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;imgTags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;imageArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

            &lt;span class="nx"&gt;imgTags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;

                &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;srcArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;srcArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;srcArray&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

                &lt;span class="nx"&gt;imageArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                    &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nx"&gt;filename&lt;/span&gt;
                &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;imageArray&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;

        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;imageLinks&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Downloading images...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;imageLinks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;extractImageLinks&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nx"&gt;imageLinks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`./images/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
        &lt;span class="nx"&gt;saveImageToDisk&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Download complete, check the images folder&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})()&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;saveImageToDisk&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createWriteStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#shameless-plug-blush" class="anchor"&gt;
  &lt;/a&gt;
  Shameless plug üòä
&lt;/h4&gt;

&lt;p&gt;If you enjoyed this article and are feeling super pumped, I run üîó &lt;a href="https://www.webscrapingzone.com"&gt;webscrapingzone.com&lt;/a&gt; where I teach advanced webscraping techniques by building &lt;strong&gt;real-world projects&lt;/strong&gt; and how you can &lt;strong&gt;monetize&lt;/strong&gt; your webscraping skills instantly without even being hired. It's still in beta stage but you can join the waiting list and get üí• &lt;strong&gt;50%&lt;/strong&gt; üí• off when the course is released. &lt;/p&gt;

&lt;p&gt;You can follow me on twitter - &lt;a href="https://twitter.com/microworlds"&gt;@microworlds&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for your time üëç&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>webmonetization</category>
      <category>node</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
