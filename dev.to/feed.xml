<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Is Web Scraping Legal?</title>
      <author>Stefan Smiljkovic</author>
      <pubDate>Tue, 30 Nov 2021 08:57:26 +0000</pubDate>
      <link>https://dev.to/shtefcs/is-web-scraping-legal-2i37</link>
      <guid>https://dev.to/shtefcs/is-web-scraping-legal-2i37</guid>
      <description>&lt;h2&gt;
  &lt;a href="#is-web-scraping-legal"&gt;
  &lt;/a&gt;
  Is Web Scraping Legal?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DP8b6MSC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4000/0%2AEqYBMStn7eSa68tU" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DP8b6MSC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4000/0%2AEqYBMStn7eSa68tU" alt="" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ranging from unethical hacking, identity theft, internet scams, social engineering to many more, we hear and see regulations outrightly trying to clamp down all forms of crime and swindling on the net. But the stance of the internet law on the legality of web scraping remains yet controversial.&lt;/p&gt;

&lt;p&gt;Since you might also find yourself scraping data from the web, either now or in the future, for business purposes or personal use, is web scraping legal? You’ll soon find out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#notable-historical-legal-issues-of-web-scraping"&gt;
  &lt;/a&gt;
  Notable Historical Legal Issues of Web Scraping
&lt;/h2&gt;

&lt;p&gt;Most of the past legal face-offs between companies on web scraping ended up leaving traces of mind puzzles. With the court twists involved, if not thoroughly argued, a claimant might even end up guilty despite suing others for scraping their website.&lt;/p&gt;

&lt;p&gt;There have been a few cases where we can draw some light on the legality of web scraping. So a logical analysis of such will help you to understand the legal stance of the subject. Before moving further, let’s take a look at some of these cases.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#linkedin-vs-hiq-data-scraping-legal-faceoff"&gt;
  &lt;/a&gt;
  LinkedIn VS HiQ Data Scraping Legal Face-off
&lt;/h3&gt;

&lt;p&gt;Before the Supreme court granted Linkedin a petition for a review and reopened the case again in June 2021, the company had previously lost its web scraping lawsuit against HiQ in 2019. The Ninth Circuit would’ve probably ruled in favor of LinkedIn if the data scraped by HiQ was private.&lt;/p&gt;

&lt;p&gt;But after maintaining that HiQ didn’t violate the Computer Fraud and Abuse Act (CFAA) by scraping LinkedIn’s publicly available data, it seemed there wasn’t a case for LinkedIn after all. While LinkedIn would later file certiorari, the court ruling was a win, at least, for those who depend on web scraping for their business.&lt;/p&gt;

&lt;p&gt;Nonetheless, does this mean you can scrape a website regardless of the conditions surrounding it? Obviously no. Next is an example of what might happen when you collect the wrong type of data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bidders-edges-obsession-over-ebays-auction-listings"&gt;
  &lt;/a&gt;
  Bidder’s Edge’s Obsession Over eBay’s Auction Listings
&lt;/h3&gt;

&lt;p&gt;Although it occurred earlier than the case we discussed previously, Bidder’s Edge’s 1999 scraping of eBay (which is yet, the first alleged illegal use of web scraping) took a turn from the one you just read.&lt;/p&gt;

&lt;p&gt;There’d been a prior agreement between both parties, with eBay agreeing to allow Bidder’s Edge to list its auctions on its database. This agreement didn’t work out due to technical issues. But eBay still granted them some time lease and allowed Bidder’s Edge to list eBay’s auctions for 90 days, after which it sought to license Bidder’s Edge’s activities. Bidder’s Edge turned down this offer.&lt;/p&gt;

&lt;p&gt;But it would later appear that Bidder’s Edge was a little obsessed with eBay’s products. So it went ahead to list eBay’s products on its website despite stay-off notices. To intensify its efforts blocking Bidder’s Edge’s scraping, eBay blocked the website’s IP from accessing its resources. But the scraper continued to harvest eBay’s data by evasions via proxy servers. Accessing a database this way appeared malicious. And later, in the early days of December 1999, eBay filed a lawsuit against Bidder’s Edge.&lt;/p&gt;

&lt;p&gt;And after claiming that it accessed eBay’s property unauthorized and that its activities infringed on the intellectual property of eBay, the court handed an injunction preventing Bidder’s Edge from further scraping eBay.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#facebooks-web-scraper-clampdown-quest"&gt;
  &lt;/a&gt;
  Facebook’s Web Scraper Clampdown Quest
&lt;/h3&gt;

&lt;p&gt;With a couple of data breach histories, Facebook has faced several backlashes for being careless with users’ data. And when it came to web scraping this social media, Cambridge Analytica didn’t stop on a small number when it swept Facebook massively in 2016 in a bid to identify undecided voters. Although the scraping activity didn’t technically impact the smooth running of Facebook or any of its services, Congress held that Cambridge Analytica misused the collected data. And Facebook would later be fined $5 billion in 2019 by the Federal Trade Commission for its alleged role in violating its users’ privacy.&lt;/p&gt;

&lt;p&gt;Thus, we see a punishment served due to misuse of privately available data rather than the act itself.&lt;/p&gt;

&lt;p&gt;Cambridge Analytica also had its share of the deal. And it was somewhat perceived shady. The company later filed for a Chapter 7 bankruptcy in 2018 after claiming that it had lost many of its political clients.&lt;/p&gt;

&lt;p&gt;From the hard lesson learned, Facebook would later go all out and take legal actions against some web scrapers.&lt;/p&gt;

&lt;p&gt;This perhaps brought to the limelight Facebook’s case in 2020, against two Ukrainian folks that deceptively scraped its users’ data using browser extensions and quiz apps. One would’ve thought this was another example that shows that you could get served for gathering data from the wrong place using the wrong method. Although the court ruled in favor of Facebook in both cases, it didn’t punish the violators beyond bearable. The court, however, held that the activities of these extensions were malicious and recommended a permanent injunction against the defendants.&lt;/p&gt;

&lt;p&gt;“Malicious” was an appropriate description of the activity of these scrapers, as they collected personal data from Facebook users without their discretion.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-is-web-scraping-illegal"&gt;
  &lt;/a&gt;
  When Is Web Scraping Illegal?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o7iX8Y4u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4000/0%2Asd6JFILdrJ_DteGK" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o7iX8Y4u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4000/0%2Asd6JFILdrJ_DteGK" alt="" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As earlier mentioned, the legality of web scraping looks like a dead-end since no regulations are binding it. So it appears that you can scrape the web all you want after all. And looking logically at the past salient cases of data scraping, it’s clear that web scraping isn’t illegal. But your technical approach and how you use the collected data tell a lot. Nonetheless, adequately describing and deciphering the conditions surrounding each scraping activity reveals more about its legality. For instance, as with any policy violation, the law had in the past met screen scraping activities with sanctions due to violation of terms.&lt;/p&gt;

&lt;p&gt;In essence, while we’ve maintained that screen scraping is not illegal, you can make it illegal when you do it wrongly or maliciously. Even if you mean no harm, some tech companies frown at web scraping. And even if they allow you to scrape them, some tell you what and what you shouldn’t do with the data you scrape. Violating such terms might land you a legal injunction. So watch out for red flags. Then read data privacy terms before taking data from any website.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-theft-vs-data-scraping-whats-the-difference"&gt;
  &lt;/a&gt;
  Data Theft VS Data Scraping: What’s the Difference?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AWcrikvF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4000/0%2AXDaymdXtCSVCVxYH" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AWcrikvF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4000/0%2AXDaymdXtCSVCVxYH" alt="" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Data theft is often a consequence of many breaches that happen on the internet. When this happens, it hands the affected website a lowered credibility. Worse, there have even been a few cases where stolen data surfaced on the Dark Web.&lt;/p&gt;

&lt;p&gt;Web scraping in the real sense is wide. But basically, it often involves screen scraping, which is the collection of pre-rendered information from the front end. Such activity is unlikely to affect a website’s technical angle. Plus, data scraped this way are often unprotected, and anyone can collect them.&lt;/p&gt;

&lt;p&gt;But in some cases, a data scraper may also scrape a database directly through data feeds monitoring. Such an approach to data collection, when done formally, is often backed up by an agreement between the scraper and the source. And in cases where there isn’t an agreement between both parties, such data must’ve been available for public use. Otherwise, if you’re unauthorized to connect to a database, it may become shady and hacky when you try to retrieve real-time data from it. You can term such unethical information retrieval data theft.&lt;/p&gt;

&lt;p&gt;Data theft, on the other hand, aims to retrieve confidential information without approval. So it may compromise a websites’ integrity, as it sometimes involves hacking into a database. Nevertheless, it’s still partly correct to say that data theft is a misuse of web scraping. Further, there are laws and regulations binding data theft. So even though you might claim to be scraping data, it’s theft when you forcefully collect confidential data.&lt;/p&gt;

&lt;p&gt;Sometimes, data thieves or hackers exploit a website’s vulnerability to perpetuate data theft. And many of such cases have gone under the hood unpunished. Nonetheless, you need to take care and ensure that you’re not scraping data from where you’re outrightly unauthorized.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yahoos-and-linkedins-cases-the-stolen-and-scraped"&gt;
  &lt;/a&gt;
  Yahoo!’s and LinkedIn’s Cases: The Stolen and Scraped
&lt;/h3&gt;

&lt;p&gt;A notable example of data theft is Yahoo!’s consecutive data breaches of 2013 and 2014. It was indeed a coordinated raid where over 3 billion users’ data got stolen. While it wasn’t the only one that’d occurred before then, the ease of Yahoo!’s database compromise, coupled with the amount of data stolen, left the internet community in awe. Although Yahoo!’s breach resulted in data scraping, it was an obvious example of data theft. Plus, the hackers gained unauthorized access to their databases. And this outright violated the internet privacy rules since the scraped information was confidential.&lt;/p&gt;

&lt;p&gt;In 2021, LinkedIn also got shaded in a supposed data breach after &lt;a href="https://cybernews.com/news/stolen-data-of-500-million-linkedin-users-being-sold-online-2-million-leaked-as-proof-2/"&gt;CyberNews&lt;/a&gt; reported 500 million users’ information auctioned on the Dark Web. To protect its legacy, LinkedIn immediately refuted this information on the &lt;a href="https://news.linkedin.com/2021/june/an-update-from-linkedin"&gt;LinkedIn Pressroom&lt;/a&gt;. Although the company didn’t deny the data leakage, it claimed that the auctioned information was retrieved via web scraping rather than a security breach. And since web scraping isn’t illegal and involves the collection of publicly available data, unlike Yahoo!’s case, we can’t conclude that this was data theft. Besides, according to LinkedIn, there was neither a breach nor unauthorized access to its database after all.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://automatio.co/blog/web-scraping-vs-web-crawling/"&gt;Web Scraping vs Web Crawling&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://automatio.co/blog/web-scraping-vs-web-crawling/"&gt;People sometimes wrongly use the terms web scraping and web crawling synonymously. Although they’re closely related, they’re different actions that need proper delineation — at least, so you can know which one is ideal for your needs at a certain point in time. And understand what the differences are.…&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7rr4wuUd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2Aw3G_MQ557j9-6eEn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7rr4wuUd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2Aw3G_MQ557j9-6eEn.png" alt="" width="512" height="512"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://automatio.co/blog/web-scraping-vs-web-crawling/"&gt;Automatio Blog — Updates, Tutorials and Case StudiesStefan Smiljkovic&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--la1OFOtB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4000/0%2Axif-PxurOgVwrhNp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--la1OFOtB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4000/0%2Axif-PxurOgVwrhNp" alt="" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thus, typically, information gathered during web scraping is readily available and visible to everyone. So in the real sense, no one should reprimand you for scraping the web. But data theft is more creepy. It often requires craftiness. Technically, it involves digital prying. Then subsequent access to a private repository or a database of information not meant to leak to a third party. The retrieval and misuse of such data often follow the leak.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-web-scraping-a-result-of-a-websites-vulnerabilities"&gt;
  &lt;/a&gt;
  Is Web Scraping a Result of a Website’s Vulnerabilities?
&lt;/h2&gt;

&lt;p&gt;Security vulnerabilities, undoubtedly, can result in a data breach. People might use web scraping illegally when they misuse the scraped data or use unethical technical processes to retrieve information. But naturally, it doesn’t have to exploit vulnerabilities. So a website, regardless of its security, seems to have little control over what people can and not scrape.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#can-you-get-blocked-from-scraping-a-website"&gt;
  &lt;/a&gt;
  Can You Get Blocked From Scraping a Website?
&lt;/h2&gt;

&lt;p&gt;A robot.txt file is a popular tool used by companies to keep bots away from accessing specific directories on their website. Before scraping, you can check if a website allows crawling on a particular page by typing &lt;strong&gt;websiteurl/robots.txt *&lt;em&gt;in *&lt;/em&gt;&lt;/strong&gt;your browser search console.&lt;/p&gt;

&lt;p&gt;And where such a file doesn’t serve the purpose, some websites write extra security scripts that block malicious IPs to prevent unauthorized access to their content. Despite such efforts, people still have their way around getting what they want. DOM parsing, coupled with machine learning techniques like natural language processing and computer vision, are technologies that power some data scrapers today. Some of these techniques are smart, and they fool a website’s security wall by adapting the human browsing behavior.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-types-of-websites-can-you-scrape"&gt;
  &lt;/a&gt;
  What Types of Websites Can You Scrape?
&lt;/h2&gt;

&lt;p&gt;You probably know by now that web scraping is only legal when you use it towards a good course. And there are many &lt;a href="https://automatio.co/blog/17-business-ideas-for-web-scraping/"&gt;web scraping business ideas&lt;/a&gt; out there. But as stated earlier, some websites don’t like to be scraped. So, what categories of websites are there on the internet where you can collect data?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-social-media"&gt;
  &lt;/a&gt;
  1. Social Media
&lt;/h3&gt;

&lt;p&gt;Social media websites are among the most dependable sources when it comes to scraping natural languages and sentiments. Social media giants like Facebook and Twitter even offer APIs that let developers connect to them and use their data. Such data is often programmable and only integrable into apps for some solutions, though. So, they might not be explicitly downloadable into CSV or Excel files as you might when scraping a large volume of data from open-source websites.&lt;/p&gt;

&lt;p&gt;That said, some of them also let you scrape and download users’ comments without revealing the identity of those who post them. Twitter, for instance, offers a dedicated API called &lt;a href="https://www.tweepy.org/"&gt;Tweepy&lt;/a&gt; that you can use to grab users’ tweets semantically. For example, using Tweepy, you can collect all tweets that have a particular keyword.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-ecommerce-and-directory-websites"&gt;
  &lt;/a&gt;
  2. E-Commerce and Directory Websites
&lt;/h3&gt;

&lt;p&gt;E-commerce stores and directory websites, no doubt, are the most reliable sources for collecting market and product-related data. Walmart, Amazon, and eBay are some of the top e-commerce websites where people scavenge for product information. While some of these websites don’t state whether they allow scraping or not, some do. So you might want to look out for that to avoid legal consequences. But since these products are available on the client-side, you should be fine scraping them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-news-and-media-websites"&gt;
  &lt;/a&gt;
  3. News and Media Websites
&lt;/h3&gt;

&lt;p&gt;News and media websites are excellent sources of information. And people sometimes resort to scraping them to get SEO insights. If you don’t reproduce or plagiarize their content, you’re safe, and you can scrape news sites and blogs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-job-boards"&gt;
  &lt;/a&gt;
  4. Job Boards
&lt;/h3&gt;

&lt;p&gt;Many companies target popular job boards to recommend the most in-demand skills to their customers. Additionally, since many of these websites contain CV samples, they’re good sources of CV templates for various job types. Examples of job boards that job recommending companies scrape include LinkedIn, Indeed, and Glassdoor. As far as you don’t step beyond the boundary, you shouldn’t have issues collecting data from these websites as well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-search-engines"&gt;
  &lt;/a&gt;
  5. Search Engines
&lt;/h3&gt;

&lt;p&gt;While this may sound overwhelming and laborious, search engines are the best places to search for publicly available data. Content management companies sometimes scrape query results from search engines like Google and Bing for keyword and SEO insights. In terms of legality, search engines are the safest to sweep, as they offer readily-indexed information.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Web scraping is one of the most complex enemies to fight on the internet today. Everyone, including regulatory bodies and even those who frown at it, scrape the web in one way or another. This tool is valuable in many fields, including but not limited to market research, artificial intelligence, SEO, and more. While its legality depends on some key factors, it doesn’t look like there’ll be a strict sanction against using it after all.&lt;/p&gt;

&lt;p&gt;That said, as far as you don’t violate legal terms, it’s a free world out there on the net. So feel free to scrape the web as you want. We even have a handy tool called &lt;a href="https://automatio.co/"&gt;Automatio&lt;/a&gt;, where you can explore the power of web automation to extract data from any website. Scrape responsibly!&lt;/p&gt;

</description>
      <category>scraper</category>
      <category>dataextraction</category>
      <category>webscraping</category>
    </item>
    <item>
      <title>How to Develop an Educational App in 2022?</title>
      <author>Anques Technolabs</author>
      <pubDate>Tue, 30 Nov 2021 08:47:04 +0000</pubDate>
      <link>https://dev.to/anquestechnolab/how-to-develop-an-educational-app-in-2022-30nh</link>
      <guid>https://dev.to/anquestechnolab/how-to-develop-an-educational-app-in-2022-30nh</guid>
      <description>&lt;p&gt;In today’s modern world, the educational space has been completely transformed by smartphone technology. Many people have appreciated and welcomed these innovative changes.&lt;/p&gt;

&lt;p&gt;The app has converted the learning industry, becoming the first unicorn to enter the market and securing a billion-dollar valuation in a short period of time.&lt;/p&gt;

&lt;p&gt;It not only makes education more interactive and engaging, but it also adds a sprinkle of entertainment and fun. Most importantly, the app broadens learning while adhering to key standards of ease, effectiveness, and simplicity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-process-of-creating-an-elearning-application"&gt;
  &lt;/a&gt;
  What is the process of creating an e-learning application?
&lt;/h2&gt;

&lt;p&gt;Before you win and start your &lt;a href="https://play.google.com/store/apps/details?id=com.bizzbrains.elearningapp"&gt;eLearning application&lt;/a&gt; development journey, it’s important to fully understand the various processes involved.&lt;/p&gt;

&lt;p&gt;You can create a blueprint of the product that will cater to the needs of your end-users if you have a clear and precise idea of the concept and each individual phase.&lt;/p&gt;

&lt;p&gt;The following is a representation of a process of the step-by-step process for creating an eLearning app:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1) Analyze and Idea:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The foundation of a successful m-learning app is a strong concept and idea. Only then will it be able to evolve into a high-demand education platform. Consider the subjects that will be taught and how you will structure it to appeal to specific target audiences.&lt;/p&gt;

&lt;p&gt;The research should be followed by a number of brainstorming sessions to assist you in moving on to the next stage of app development. Obtaining critical inputs and insights will also serve as a differentiator between you and your competitors.&lt;/p&gt;

&lt;p&gt;Keep in mind that the app will only be useful if the concept is viable. This necessitates a thorough market analysis in order to test the app’s utility and viability with the target audience. If the outcome is positive, you can begin by developing a timeline for the app’s development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2) App Design:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of the primary reasons eLearning apps have become so popular with students and parents is their simple interface and engaging app design. When creating your e-learning app, make sure the user interface is interactive and has engaging touchpoints.&lt;/p&gt;

&lt;p&gt;The goal should be to provide users with comfort that will keep your audience coming back to you. The idea is to make the design decent enough to keep the user interested and interested in consuming more content in the long run.&lt;/p&gt;

&lt;p&gt;Give importance to the fonts, colors, graphics, and so on. Make certain that these elements do not crowd the design in any way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3) App Development&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With the design UIs completed, the development process can begin. You start with the conceptual phase right away. This is critical because it contributes to the validation of the app concept and the features that you have chosen to include in it.&lt;/p&gt;

&lt;p&gt;This stage consists of several phases and rounds of development and testing. The app must go through all kinds of testing phases, as well as bug fixes and the addition of any key features and functionalities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4) Deployment&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After completing the previous stages successfully, the app can be deployed on the operating platform of your choice. This could include the web, iOS, and Android.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-main-features-of-the-mobile-learning-app"&gt;
  &lt;/a&gt;
  What are the main features of the mobile learning app?
&lt;/h2&gt;

&lt;p&gt;This app has dividends into various categories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;General Features&lt;/li&gt;
&lt;li&gt;Student Panel&lt;/li&gt;
&lt;li&gt;Admin Panel&lt;/li&gt;
&lt;li&gt;Advanced Features&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--83mJ7Gq9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlbs2xw6wg3g7h0fr07k.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--83mJ7Gq9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlbs2xw6wg3g7h0fr07k.jpg" alt="Image description" width="880" height="452"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-general-features-should-your-elearning-application-have"&gt;
  &lt;/a&gt;
  What general features should your e-learning application have?
&lt;/h2&gt;

&lt;p&gt;Consider the following general features that you must incorporate into your e-learning app:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Total Syllabus Coverage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Expert faculties are tasked with curating relevant study material for the subjects available on the application. They ensure that the final version of the content is well-rounded, in-depth, and organized in a way that is simple for students to understand and complete in a reasonable amount of time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Interactive Aids&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;E-learning apps make use of visual and interactive aids, particularly in subjects such as physics, chemistry, and mathematics. These methods, which go beyond the traditional chalk-board methodology, make learning more interesting and appealing. The app’s video lectures emphasize student engagement and visual teaching mechanisms.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Chapter-wise Tests&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As soon as the chapter concludes, the student should assess whether the knowledge gained is clear and concise. Mock tests and sample questions are built into learning apps to help students test and understand their learning curve.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. In-Built Chat&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In-app chats connect students with their personal mentors in the event that they require assistance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Adaptive Learning&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;App learning can only be effective if it is capable of adapting to the needs of the students. This can be accomplished by using interactive and visually taught classes. Of course, the syllabus must be constantly revised and updated to meet the needs and expectations of the students.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Third-party Apps&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To provide additional services to their users, e-learning apps must have the architecture in place to integrate with third-party apps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Logistics Dashboard&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If your E-learning app allows users to print hard copies of their learning materials, a logistics dashboard can come in handy. From a single platform, both the administrator and the user will be able to track the status of the shipment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-features-are-available-on-the-student-panel"&gt;
  &lt;/a&gt;
  What features are available on the student panel?
&lt;/h2&gt;

&lt;p&gt;The Student Panel serves as the app’s front end. The following are the top features visible on the app’s interface.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. User Registration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Students can use the app after registering with a unique username/password, email address, phone number, or social media handles.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Login&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To use the app’s services, students must first log in with their registered username, email address, phone number, and password.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.  Forgot Password&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is a standard feature that allows users who have forgotten their password to create a new one. This can be accomplished through the use of a mobile or email OTP system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Profile Manager&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Students can create their own profiles and fill in details such as school, class, interests, and so on. The Profile Manager also allows you to edit or delete this information based on the needs of the student.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Browse All Courses&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Any mobile learning app must have a Course section. Students can browse the modules and select the subject that they want to study.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Search Courses&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If a student is unable to locate a subject, the search bar can assist in locating it. By entering specific keywords, the results can be filtered to show only those categories that are relevant to the subject.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Course Detail on Click&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Students can learn more about the courses by visiting the ‘Course Description’ section. This typically includes a brief description of the course’s content, chapter titles, an estimated timeline, and the course cost.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. Purchase Button/Page&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Courses must be purchased on any e-learning app. As a result, a purchase button or link should be placed in a convenient and visible location on the app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Payment&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To accept payments, the app should be linked to a variety of payment gateways such as net banking, debit and credit cards, wallets, PayPal, and so on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. Online Reader&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As soon as the payment is successful, users should be able to click on a download button. They can also read the lessons on the app’s interface if an online reader is integrated.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;11. Live Chat Support&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Any tech-based application must have access to live chat. Students can immediately contact the appropriate department to resolve any issues or questions they may have.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;12. Purchase History Dashboard&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The purchase dashboard is a section in which users can view and track all of their app purchases. It typically lists the product as well as the fee paid.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;13. Test&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is a section of the application dedicated to storing various tests and question papers. Students can choose to test their knowledge based on the lessons and chapters they have completed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;14. Shipment Status&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This feature allows students to track the shipment status of their hard copy study material.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.anques.com/hire-dedicated-developers/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d-9mI0rU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1gmdg0rupns76lymytyq.jpg" alt="Image description" width="336" height="280"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Read more from source URL&amp;gt;&amp;gt;&amp;gt; &lt;a href="https://www.anques.com/how-to-develop-an-educational-app-in-2022/"&gt;https://www.anques.com/how-to-develop-an-educational-app-in-2022/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>appdevelopment</category>
      <category>educationapp</category>
      <category>androidapp</category>
      <category>elearningapp</category>
    </item>
    <item>
      <title>Clean Code - Laravel</title>
      <author>Morcos Gad</author>
      <pubDate>Tue, 30 Nov 2021 08:31:42 +0000</pubDate>
      <link>https://dev.to/morcosgad/do-this-laravel-1cn3</link>
      <guid>https://dev.to/morcosgad/do-this-laravel-1cn3</guid>
      <description>&lt;p&gt;Let's get started quickly In some cases, clean code must be used as in the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Don't do this&lt;/span&gt;
&lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'category_id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$category&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'author_id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// Do this&lt;/span&gt;
&lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;whereBelongsTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$category&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;whereBelongsTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'author'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Don't do this&lt;/span&gt;
&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;author_id&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Do this&lt;/span&gt;
&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;author&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;is&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope you enjoyed the code.&lt;/p&gt;

</description>
      <category>php</category>
      <category>laravel</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Login Signup Form with Email Verification</title>
      <author>Naem Azam </author>
      <pubDate>Tue, 30 Nov 2021 08:31:33 +0000</pubDate>
      <link>https://dev.to/naemazam/login-signup-form-with-email-verification-19d3</link>
      <guid>https://dev.to/naemazam/login-signup-form-with-email-verification-19d3</guid>
      <description>&lt;p&gt;Login Signup Form with Email Verification is a Working PHP based Sine Up from with Working OTP generating System, It's Working On Local Host.&lt;/p&gt;

&lt;p&gt;If You Don't Know How to configure XAMPP to send Mail from Localhost in PHP ? You can &lt;a href="https://dev.to/naemazam/how-to-configure-xampp-to-send-mail-from-localhost-in-php--382c"&gt;Read&lt;/a&gt; My Another Blog. &lt;/p&gt;

&lt;p&gt;Design Your Registration Home page Simple&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;require_once&lt;/span&gt; &lt;span class="s2"&gt;"controllerUserData.php"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 
&lt;span class="nv"&gt;$email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_SESSION&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nv"&gt;$password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_SESSION&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$email&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$password&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nv"&gt;$sql&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"SELECT * FROM usertable WHERE email = '&lt;/span&gt;&lt;span class="nv"&gt;$email&lt;/span&gt;&lt;span class="s2"&gt;'"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$run_Sql&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;mysqli_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$con&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$sql&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$run_Sql&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nv"&gt;$fetch_info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;mysqli_fetch_assoc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$run_Sql&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$fetch_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'status'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="nv"&gt;$code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$fetch_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'code'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"verified"&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$code&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                &lt;span class="nb"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Location: reset-code.php'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nb"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Location: user-otp.php'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Location: login-user.php'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$fetch_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt; | Home&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url('https://fonts.googleapis.com/css?family=Poppins:400,500,600,700&amp;amp;display=swap')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;padding-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#6665ee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Poppins'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; 
    &lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nc"&gt;.navbar-brand&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#6665ee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"navbar"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"navbar-brand"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Brand name&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-light"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"logout-user.php"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Logout&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Welcome &lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$fetch_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In Here I make An Email-OTP System Which is Based On PHP, and js. &lt;br&gt;
Visit My &lt;a href="https://github.com/naemazam/Login-Signup-Form-with-Email-Verification#readme"&gt;GitHub&lt;/a&gt; to know more.   &lt;/p&gt;

</description>
      <category>php</category>
      <category>javascript</category>
      <category>otp</category>
      <category>naemazam</category>
    </item>
    <item>
      <title>How to use window.confirm()</title>
      <author>SnowBit</author>
      <pubDate>Tue, 30 Nov 2021 08:23:47 +0000</pubDate>
      <link>https://dev.to/snowbit/how-to-use-windowconfirm-662</link>
      <guid>https://dev.to/snowbit/how-to-use-windowconfirm-662</guid>
      <description>&lt;p&gt;Hello everyone, I am back with a new article on how you can use &lt;code&gt;window.confirm()&lt;/code&gt; Browser API in JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;window.confirm()&lt;/code&gt; let you to ask confirmation before performing a important action; for example: deleting something or posting something&lt;/p&gt;

&lt;p&gt;Let's look it by an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;warn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;confirm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are going to delete this post, are you sure?&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will show you a &lt;strong&gt;confirmation&lt;/strong&gt; message.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0Oe9E_iS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/woc5ihcbqkj6xtkbh23j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0Oe9E_iS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/woc5ihcbqkj6xtkbh23j.png" alt="window.confirm() example" width="880" height="249"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, how you can check whether user has &lt;strong&gt;confirmed&lt;/strong&gt; or not?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;warn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;confirm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are going to delete this post, are you sure?&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;User has confirmed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/aagkRZh64xI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Data Visualization with Chart.js</title>
      <author>Unclebigbay</author>
      <pubDate>Tue, 30 Nov 2021 08:21:41 +0000</pubDate>
      <link>https://dev.to/unclebigbay/data-visualization-with-chartjs-5b2l</link>
      <guid>https://dev.to/unclebigbay/data-visualization-with-chartjs-5b2l</guid>
      <description>&lt;h1&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;What is Chart.js&lt;/li&gt;
&lt;li&gt;Getting Started with Chart.js&lt;/li&gt;
&lt;li&gt;Bar Chart&lt;/li&gt;
&lt;li&gt;Line Chart&lt;/li&gt;
&lt;li&gt;Pie Chart&lt;/li&gt;
&lt;li&gt;Conclusion&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h1&gt;

&lt;p&gt;Before you continue with this tutorial article, you should:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Have working experience with JavaScript&lt;/li&gt;
&lt;li&gt;Know the basics of HTML attributes such as an &lt;strong&gt;id&lt;/strong&gt; and &lt;strong&gt;class&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Have a code editor (I will be using &lt;a href="https://code.visualstudio.com/"&gt;VSCode&lt;/a&gt; )&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;One of the most important features that a developer should be able to implement on a web application is a diagrammatic representation of data, which allows users to have a clear visual of data on a website.&lt;/p&gt;

&lt;p&gt;Whether it's financial data, page view analytics, or statistics of items, which are mostly found on the dashboard.&lt;/p&gt;

&lt;p&gt;In this tutorial article, we'll learn how to make use of *&lt;em&gt;chart.js *&lt;/em&gt; to create a visual representation of data in JavaScript.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h1&gt;

&lt;p&gt;You can check out the demo of what we will be building together in this article &lt;a href="https://unclebigbay.w3spaces.com/data-visualization-with-chartjs-demo.html"&gt;here.&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Or watch the demo video below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yv6-gtgp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637004261612/lnvUD3WAw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yv6-gtgp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637004261612/lnvUD3WAw.gif" alt="chart js bar chart line chart pie chart demo" width="600" height="337"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-chartjs"&gt;
  &lt;/a&gt;
  What is Chart.JS?
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Chart.js&lt;/strong&gt; is an open source JavaScript library that is used for data visualization that supports up to eight different charts including the bar chart, line chart, area chart, pie chart, bubble chart, radar chart, polar chart, and scatter chart.&lt;/p&gt;

&lt;p&gt;For this tutorial, we will be focusing on the bar chart, line chart, and pie chart, and at the end of this article, you will learn how to implement these three charts.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#getting-started-with-chartjs"&gt;
  &lt;/a&gt;
  Getting Started with Chart.js
&lt;/h1&gt;

&lt;p&gt;There are three major ways of adding &lt;strong&gt;chart.js&lt;/strong&gt; to your project:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; &lt;strong&gt;Through Package Manager&lt;/strong&gt; (Highly recommended)&lt;/p&gt;

&lt;p&gt;You can install Chart.js through  &lt;a href="https://www.npmjs.com/package/chart.js"&gt;npm&lt;/a&gt;, &lt;a href="https://yarnpkg.com/package/react-chartjs-2"&gt;yarn&lt;/a&gt;, or any other package manager installer for your Node, React, Vue, Angular, or any other supporting frameworks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; &lt;strong&gt;Through CDNJS&lt;/strong&gt; (Recommended)&lt;/p&gt;

&lt;p&gt;Another way of adding chart.js to a project is through the Content Delivery Network, which means all the built files of chart.js can be accessed directly from the &lt;a href="https://cdnjs.com/libraries/Chart.js"&gt;cdnjs&lt;/a&gt; or &lt;a href="https://www.jsdelivr.com/package/npm/chart.js?path=dist"&gt;jsDelivr&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; &lt;strong&gt;Through GitHub&lt;/strong&gt; (Less recommended)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.chartjs.org/"&gt;Chart.js&lt;/a&gt; is an open source project, which means you can download the latest version of chart.js directly from GitHub &lt;a href="https://github.com/chartjs/Chart.js"&gt;here&lt;/a&gt;, but this method requires you to fork, clone, build and test the chart.js before getting it to work on your machine, this method is way too tedious.&lt;/p&gt;

&lt;p&gt;In this tutorial, we will be making use of the &lt;a href="https://cdnjs.com/libraries/Chart.js"&gt;cdnjs&lt;/a&gt; method to add  &lt;a href="https://www.chartjs.org/"&gt;chart.js&lt;/a&gt; to our project, you can always try out other methods on your own using this &lt;a href="https://www.chartjs.org/docs/2.9.4/getting-started/installation.html"&gt;guide&lt;/a&gt;.&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#how-chartjs-works-in-html"&gt;
  &lt;/a&gt;
  How Chart.js Works in HTML
&lt;/h1&gt;

&lt;p&gt;In this section, I will lay out how chart.js works and explain the minimum things you need to set up a chart with the chart.js library.&lt;/p&gt;

&lt;p&gt;I will break this section down into two parts; &lt;strong&gt;The HTML part&lt;/strong&gt; and &lt;strong&gt;The JavaScript part&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-html-part"&gt;
  &lt;/a&gt;
  The Html Part:
&lt;/h3&gt;

&lt;p&gt;This part involves importing the &lt;strong&gt;chart.js&lt;/strong&gt; cdn link into your html document and setting up a &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; html tag.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; html tag is used to draw graphics on a web page using JavaScript, now you understand why there are two parts to cover when working with chart.js.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Import chart.js cdn in your HTML document.&lt;/p&gt;

&lt;p&gt;You can get the latest version of chart.js from &lt;a href="https://cdnjs.com/libraries/Chart.js"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!-- Chart.js Script --&amp;gt;
&amp;lt;script src="Chart-cdn-goes-here"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Specify where you what to display the chart in your HTML document, also note that it is very important to wrap the canvas tag inside of a container, as the canvas tag needs the parent container to make the chart responsive, we will address this issue later in this guide.&lt;/p&gt;

&lt;p&gt;The canvas &lt;code&gt;id&lt;/code&gt; will be used later to make reference to the canvas element in the JavaScript part.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;section class="chart-wrapper"&amp;gt;
  &amp;lt;!-- chart canvas --&amp;gt;
  &amp;lt;canvas id="chart-name"&amp;gt;&amp;lt;/canvas&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-javascript-part"&gt;
  &lt;/a&gt;
  The JavaScript Part
&lt;/h3&gt;

&lt;p&gt;Welcome to the JavaScript part, there are a couple of things that are common and important when working with any chart in chart.js, this includes;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The canvas reference to display the chart.&lt;/li&gt;
&lt;li&gt;The chart configuration.

&lt;ul&gt;
&lt;li&gt;The chart type.&lt;/li&gt;
&lt;li&gt;The chart labels, the horizontal labels of the chart.&lt;/li&gt;
&lt;li&gt;The chart datasets.&lt;/li&gt;
&lt;li&gt;The chart data, the vertical labels of the chart.&lt;/li&gt;
&lt;li&gt;The chart label, which is the title or name of the chart.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The chart instance, which is needed to initiate a new type of chart.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let me show you the code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// 1. The canvas reference to display the chart.
const chartCanvas = document.getElementById('chart-canva').getContext('2d');

// 2. The chart configuration.
const config = {
  type: 'bar', // chart type
  data: {
    // The chart labels, the horizontal labels of the chart.
    labels: ['label-1', 'label-2', 'label-3', 'label-4', 'label-5'],

    // The chart datasets
    datasets: [
      {
        // The chart data, the horizontal labels of the chart.
        data: [67.7, 63.1, 54.7, 44.1, 40.2],

        // Chart label
        label: 'Chart Label',
      },
    ],
  },
  // Canvas are not responsive by default
  options: {
    responsive: true,
  },
};

// 3. The chart instance, which is needed to initiate a new type of chart.
const newBarChart = new Chart(chartCanvas, config);


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;getContext('2d')&lt;/code&gt; gives us access to the 2D drawing on the canvas HTML tag, this configuration is optional and &lt;code&gt;document.getElementById('chart-canva')&lt;/code&gt; is enough.&lt;/p&gt;

&lt;p&gt;The code above will produce the output below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QpcuxSIG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636950822355/AJ1lpXJUF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QpcuxSIG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636950822355/AJ1lpXJUF.png" alt="Chart.js Basic setup" width="880" height="544"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that's not responsive, the canvas tag is not responsive by default, and we might need a small size chart for our application, the chart.js has a configuration option named &lt;code&gt;responsive&lt;/code&gt;, which you need to set to &lt;code&gt;true&lt;/code&gt; for the chart to resize when the parent container or element resizes, this will make the chart take the width and height of its parent element.&lt;/p&gt;

&lt;p&gt;The methods below do not work 😢&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;canvas width="50vw" height="50vh"&amp;gt;&amp;lt;/canvas&amp;gt;
&amp;lt;canvas style="width: 50vw; height: 50vh;"&amp;gt;&amp;lt;/canvas&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code below demonstrates how to make your charts in chart.js responsive.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
&amp;lt;section class="chart-wrapper"&amp;gt;
   &amp;lt;!-- chart canvas --&amp;gt;
   &amp;lt;canvas id="chart-name"&amp;gt;&amp;lt;/canvas&amp;gt;
&amp;lt;/section&amp;gt;

&amp;lt;style&amp;gt;
   .chart-wrapper {
      position: relative;
      width: 50vw;

      /* align at page center*/
      margin: 0 auto;
   }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The chart wrapper &lt;code&gt;position&lt;/code&gt; should be set to &lt;code&gt;relative&lt;/code&gt; for the chart to be responsive with the container across different sizes.&lt;/p&gt;

&lt;p&gt;Now we have a responsive bar chart.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pbs1Xa3n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636952849365/XYCSw9qup.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pbs1Xa3n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636952849365/XYCSw9qup.png" alt="A responsive bar chart in chart.js" width="880" height="544"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So far, working with chart.js is not as difficult as it seems, right? All you need to get started with any type of chart are what has been demonstrated above, you can go ahead and change the type of chart to &lt;code&gt;line&lt;/code&gt;, &lt;code&gt;pie&lt;/code&gt;, or any other type of &lt;code&gt;chart&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And you should have the corresponding charts displayed on your screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D2lOJ7Uy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636953369020/KmTIn17jl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D2lOJ7Uy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636953369020/KmTIn17jl.png" alt="a bar chart, line chart and pie chart in chart.js" width="880" height="640"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The chart label will be undefined if the label is not set as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SKEldvYj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636953824660/k75J31qet.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SKEldvYj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636953824660/k75J31qet.png" alt="a bar chart with the undefined label" width="880" height="544"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Down to this point, we have learned the concepts to build any type of chart using chart.js and with these concepts at your reach, you will be able to handle any chart in &lt;strong&gt;chart.js&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In the next section, we'll use a real-world use case of charts to visualize data and also add styles to our not-so-cute charts.&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#task"&gt;
  &lt;/a&gt;
  Task
&lt;/h1&gt;

&lt;p&gt;Let's apply what we've learned to a real-world scenario: Our task is to display the most popular technologies from the &lt;a href="https://insights.stackoverflow.com/survey/2020#most-popular-technologies"&gt;2020 Stack Overflow Developer Survey&lt;/a&gt; results using a Bar Chart, Line Chart, and Pie Chart.&lt;/p&gt;

&lt;p&gt;Result of the Most Popular Technologies Survey.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Technology&lt;/th&gt;
&lt;th&gt;Vote Percentage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;JAVASCRIPT&lt;/td&gt;
&lt;td&gt;67.7%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HTML/CSS&lt;/td&gt;
&lt;td&gt;63.1%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SQL&lt;/td&gt;
&lt;td&gt;54.7%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PYTHON&lt;/td&gt;
&lt;td&gt;44.1%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JAVA&lt;/td&gt;
&lt;td&gt;40.2%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;We won't go into detail about the CSS part of the solution because this tutorial is focused on building charts with the chart.js JavaScript library. &lt;/p&gt;

&lt;p&gt;Copy and paste the HTML and CSS code below as a starter kit, most CSS styles are just to make our page look more attractive.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;

&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;link rel="stylesheet" href="./chart.css"&amp;gt;
    &amp;lt;title&amp;gt;Getting Started with chart.js&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;

    &amp;lt;!-- HEADER SECTION --&amp;gt;
    &amp;lt;header&amp;gt;
        &amp;lt;!-- NAVBAR SECTION --&amp;gt;
        &amp;lt;nav&amp;gt;
            &amp;lt;a href="" class="nav-links read-guide"&amp;gt;Read Guide&amp;lt;/a&amp;gt;
            &amp;lt;div class="nav-right"&amp;gt;
                &amp;lt;a href="#bar-chart" class="nav-links"&amp;gt;Bar Chart&amp;lt;/a&amp;gt;
                &amp;lt;a href="#line-chart" class="nav-links"&amp;gt;Line Chart&amp;lt;/a&amp;gt;
                &amp;lt;a href="#pie-chart" class="nav-links"&amp;gt;Pie Chart&amp;lt;/a&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/nav&amp;gt;
        &amp;lt;!-- HERO SECTION --&amp;gt;
        &amp;lt;section class="hero"&amp;gt;
            &amp;lt;h1 class="hero-text"&amp;gt;Getting Started with Chart.js &amp;lt;br /&amp;gt; (DEMO)&amp;lt;/h1&amp;gt;
        &amp;lt;/section&amp;gt;
    &amp;lt;/header&amp;gt;

    &amp;lt;main&amp;gt;
        &amp;lt;!-- Charts goes in here --&amp;gt;
    &amp;lt;/main&amp;gt;

    &amp;lt;footer&amp;gt;
        &amp;lt;h2&amp;gt;Design with 🧡 by &amp;lt;span&amp;gt;UNCLEBIGBAY&amp;lt;/span&amp;gt;&amp;lt;/h2&amp;gt;
    &amp;lt;/footer&amp;gt;


    &amp;lt;!-- Chart.js Script --&amp;gt;
    &amp;lt;script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.6.0/chart.min.js"
        integrity="sha512-GMGzUEevhWh8Tc/njS0bDpwgxdCJLQBWG3Z2Ct+JGOpVnEmjvNx6ts4v6A2XJf1HOrtOsfhv3hBKpK9kE5z8AQ=="
        crossorigin="anonymous" referrerpolicy="no-referrer"&amp;gt;&amp;lt;/script&amp;gt;

    &amp;lt;!-- Bar Chart Script --&amp;gt;
    &amp;lt;script src="./bar-chart.js"&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;!-- Line Chart Script --&amp;gt;
    &amp;lt;script src="./line-chart.js"&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;!-- Pie Chart Script --&amp;gt;
    &amp;lt;script src="./pie-chart.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the following files: &lt;code&gt;chart.css&lt;/code&gt;, &lt;code&gt;bar-chart.js&lt;/code&gt;, &lt;code&gt;line-chart.js&lt;/code&gt;, and &lt;code&gt;pie-chart.js&lt;/code&gt;, we will be writing our code in them very soon.&lt;/p&gt;

&lt;p&gt;Open your &lt;code&gt;chart.css&lt;/code&gt; file and put the CSS code below inside.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@import url('https://fonts.googleapis.com/css2?family=Ubuntu:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&amp;amp;display=swap');

* {
  margin: 0;
  box-sizing: border-box;
}

:root {
  --primary-color: #0b0d60;
  --app-white: #ffffff;
  --bar-chart-bg: #3a0ca3;
  --line-chart-bg: #560bad;
  --pie-chart-bg: #7209b7;
}

html {
  scroll-behavior: smooth;
}

body {
  line-height: 1.3;
  font-family: 'Ubuntu';
  background-color: var(--pie-chart-bg);
}

header {
  padding: 0.9rem;
  background-color: var(--primary-color);
  height: 100vh;
}

/* FIX THE NAVBAR ACROSS ALL SECTIONS */
nav {
  position: fixed;
  left: 0;
  width: 100%;
  z-index: 9;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.nav-links.read-guide {
  opacity: 1;
  font-size: 22px;
  margin-bottom: 0.6rem;
  text-decoration-line: unset;
  opacity: 0.7;
}

.nav-links.read-guide:hover {
  opacity: 0.9;
}

.nav-right {
  display: flex;
  justify-content: space-between;
  width: 100%;
}

.nav-links {
  padding: 0.5rem;
  color: #fff;
  text-decoration: none;
  opacity: 0.9;
  font-size: 1.1em;
  font-weight: 600;
  transition: 0.5s;
  text-decoration-line: underline;
  text-underline-offset: 10px;
}

.nav-links:hover {
  opacity: 1;
  text-underline-offset: 12px;
}

/* HERO SECTION */

.hero {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  text-align: center;
}

.hero-text {
  color: #fff;
  font-size: 48px;
  line-height: 1.5;
}

/* CHART SECTION */

.chart-section {
  height: 100vh;
  padding-top: 70px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.chart-wrapper {
  width: 95%;
  background-color: white;
}

.chart-heading {
  font-size: 38px;
  text-align: center;
  margin-bottom: 2rem;
  color: var(--app-white);
  opacity: 0.8;
}

.chart-section.bar-chart {
  background-color: var(--bar-chart-bg);
}

.chart-section.line-chart {
  background-color: var(--line-chart-bg);
}

.chart-section.pie-chart {
  background-color: var(--pie-chart-bg);
}

/* FOOTER */
footer {
  text-align: center;
  color: var(--app-white);
  padding: 2rem;
  font-size: 12px;
  opacity: 0.8;
}

footer span {
  font-weight: 900;
}

@media (min-width: 900px) {
  header {
    padding: 1rem 0.9rem;
  }

  nav {
    padding: 0 2rem;
    flex-direction: row;
  }

  .nav-links.read-guide {
    margin-bottom: 1rem;
  }

  .nav-right {
    width: 40%;
  }

  /* HERO SECTION */
  .hero {
    height: 80vh;
  }

  .hero-text {
    font-size: 48px;
    line-height: 1.6;
  }

  /* CHART SECTION */
  .chart-wrapper {
    width: 55vw;
  }

  .chart-heading {
    font-size: 48px;
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Save your files, and open the &lt;code&gt;chart.html&lt;/code&gt; on your browser, your starter template should look something like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jHmAQ4ON--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636991057382/CDIArne1Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jHmAQ4ON--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636991057382/CDIArne1Q.png" alt="frame_generic_dark (10).png" width="880" height="575"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#building-bar-chart-in-chartjs"&gt;
  &lt;/a&gt;
  Building Bar Chart in Chart.js
&lt;/h1&gt;

&lt;p&gt;In this section, we will be creating a visual of the survey result in a bar chart using the concept we've learned from the previous section.&lt;/p&gt;

&lt;p&gt;Create a section for the bar chart in the &lt;code&gt;chart.html&lt;/code&gt; file as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!-- BAR CHART SECTION --&amp;gt;
&amp;lt;section class="chart-section bar-chart" id="bar-chart"&amp;gt;
    &amp;lt;h2 class="chart-heading"&amp;gt;Bar Chart&amp;lt;/h2&amp;gt;
    &amp;lt;div class="chart-wrapper"&amp;gt;
        &amp;lt;!-- chart canva --&amp;gt;
        &amp;lt;canvas id="js-bar-chart"&amp;gt;&amp;lt;/canvas&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our bar chart should look something like this at the end of this section.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ljODLR_D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636716604103/1PpHPOMNf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ljODLR_D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636716604103/1PpHPOMNf.png" alt="bar chart built with chart.js" width="880" height="575"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The difference between the above bar chart and the basic bar chart is the different background color of the bars, the dark borders around the bars, the percentage (%) symbol of the data, and the label background color.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OPGB2twp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636994820160/CHfwOx3Ma.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OPGB2twp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636994820160/CHfwOx3Ma.png" alt="frame_generic_dark (6).png" width="880" height="544"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The chart.js library allows us to style anything we can see on the chart through the dataset object and not CSS, I will show you how in a bit.&lt;/p&gt;

&lt;p&gt;The chart label will take the background color of the first data in the data array, which is the JavaScript yellow in the example given above.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Anything you see, you can style - Anonymous&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Another tricky part is adding the percentage (%) symbol to the bar chart data on the vertical labels.&lt;/p&gt;

&lt;p&gt;We won't do this, because it won't work.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
 data: ["67.7%", "63.1%", "54.7%", "44.1%", "40.2%"]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Rather, we will be making use of a callback function to add the percentage (%) symbol to each of the data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-background-color-to-chartjs"&gt;
  &lt;/a&gt;
  Adding Background Color to Chart.js
&lt;/h3&gt;

&lt;p&gt;To add background colors to each of the data been represented on a &lt;strong&gt;chart.js&lt;/strong&gt; chart, pass a &lt;code&gt;backgroundColor&lt;/code&gt; property inside of the dataset as shown in &lt;code&gt;bar-chart.js&lt;/code&gt; below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  // Chart label horizontal
    labels: ['JAVASCRIPT', 'HTML/CSS', 'SQL', 'PYTHON', 'JAVA'],
    datasets: [
      {
        // Chart label
        label: 'Programming languages votes',
        // Chart data
        data: [67.7, 63.1, 54.7, 44.1, 40.2],
        // Chart data background color
        backgroundColor: [
          'yellow',
          'blue',
          'brown',
          'purple',
          'indigo',
          'gray',
        ],
      },
    ],
},
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ensure to import the &lt;code&gt;bar-chart.js&lt;/code&gt; if you're not working with the HTML template.&lt;/p&gt;

&lt;p&gt;The arrangement of the &lt;code&gt;backgroundColor&lt;/code&gt; array must match the arrangement of the &lt;code&gt;data&lt;/code&gt; array and the &lt;code&gt;labels&lt;/code&gt; array.&lt;/p&gt;

&lt;p&gt;This is what I mean.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;JAVASCRIPT -&amp;gt; 67.7 -&amp;gt; yellow&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HTML/CSS -&amp;gt; 63.1 -&amp;gt; blue&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SQL -&amp;gt; 54.7 -&amp;gt; brown&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PYTHON -&amp;gt; 44.1 -&amp;gt; purple&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JAVA -&amp;gt; 40.2 -&amp;gt; indigo&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And you can add &lt;code&gt;borderWidth&lt;/code&gt; and &lt;code&gt;borderColor&lt;/code&gt; to your chart like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    ...

   // Chart border styles
   borderWidth: 0.3,
   borderColor: 'black',
},
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#adding-symbols-to-chartjs-data"&gt;
  &lt;/a&gt;
  Adding Symbols to Chart.js Data
&lt;/h3&gt;

&lt;p&gt;To add any symbol to data in chart.js, we need to define a callback function in the chart configuration option, which is defined as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; options: {
    scales: {
      y: {
        ticks: {
          callback: function (value) {
            return value + '%';
          },
        },
      },
    },
  },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;y&lt;/code&gt; represents the y-axis of the chart which is also the vertical side of the chart, where the chart data is been displayed.&lt;/p&gt;

&lt;p&gt;The callback function gives us access to each of the values in the chart data array before they are been rendered to the UI and it returns the new format we define, which is to append the percentage (%) symbol to the data in this case.&lt;/p&gt;

&lt;p&gt;I have created a gist &lt;a href="https://gist.github.com/unclebay143/b9a044c09954f176b746df2ec0c9bf5c"&gt;here&lt;/a&gt;  for the complete JavaScript code of the bar chart.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#building-line-chart-in-chartjs"&gt;
  &lt;/a&gt;
  Building Line Chart in Chart.js
&lt;/h1&gt;

&lt;p&gt;In this section, we will visualize the survey data in a line chart.&lt;/p&gt;

&lt;p&gt;Our final line chart will look like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gN8NZDng--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636982190819/3wZWOzmE-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gN8NZDng--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636982190819/3wZWOzmE-.png" alt="frame_generic_dark (9).png" width="880" height="538"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create a new section for the line chart with a canvas tag, always remember to wrap the canvas tag with a parent element like below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!-- LINE CHART SECTION --&amp;gt;
&amp;lt;section class="chart-section line-chart" id="line-chart"&amp;gt;
    &amp;lt;h2 class="chart-heading"&amp;gt;Line Chart&amp;lt;/h2&amp;gt;
    &amp;lt;div class="chart-wrapper"&amp;gt;
        &amp;lt;!-- chart canva --&amp;gt;
        &amp;lt;canvas id="js-line-chart"&amp;gt;&amp;lt;/canvas&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, copy and paste the code below into your &lt;code&gt;line-chat.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Grab the bar chart canva
const lineChartContext = document
  .getElementById('js-line-chart')
  .getContext('2d');

// Creating a new chart instance
const newLineChart = new Chart(lineChartContext, {
  // Chart configuration
  type: 'line',
  data: {
    // Chart Label Vertical
    labels: ['JAVASCRIPT', 'HTML/CSS', 'SQL', 'PYTHON', 'JAVA'],
    datasets: [
      {
        // Chart lable
        label: 'Programming languages votes',
        // Chart data
        data: [67.7, 63.1, 54.7, 44.1, 40.2],
        // Chart data background color
        backgroundColor: ['yellow', 'blue', 'brown', 'purple', 'indigo'],
        // Chart border styles
        borderWidth: 0.3,
        borderColor: 'black',
      },
    ],
  },
  options: {
    responsive: true,
    scales: {
      y: {
        ticks: {
          callback: function (value) {
            return value + '%';
          },
        },
      },
    },
  },
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The only differences between the code in &lt;code&gt;bar-chart.js&lt;/code&gt; and the code in &lt;code&gt;line-chart.js&lt;/code&gt; are the variable name and the chart type.&lt;/p&gt;

&lt;p&gt;You should be more familiar with the code structure of the charts by now.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#building-a-pie-chart-in-chartjs"&gt;
  &lt;/a&gt;
  Building a Pie Chart in Chart.js
&lt;/h1&gt;

&lt;p&gt;Finally in this section, we'll represent the survey result in a pie chart.&lt;/p&gt;

&lt;p&gt;Create a new section for the pie chart in your html document like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!-- PIE CHART SECTION --&amp;gt;
&amp;lt;section class="chart-section pie-chart" id="pie-chart"&amp;gt;
    &amp;lt;h2 class="chart-heading"&amp;gt;Pie Chart&amp;lt;/h2&amp;gt;
    &amp;lt;div class="chart-wrapper"&amp;gt;
        &amp;lt;!-- chart canva --&amp;gt;
        &amp;lt;canvas id="js-pie-chart"&amp;gt;&amp;lt;/canvas&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now Create a &lt;code&gt;pie-chart.js&lt;/code&gt; file and copy-paste the code below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Grab the bar chart canva
const pieChartContext = document
  .getElementById('js-pie-chart')
  .getContext('2d');

// Creating a new chart instance
const newPieChart = new Chart(pieChartContext, {
  // Chart configuration
  type: 'pie',
  data: {
    // Chart Label Vertical
    labels: ['JAVASCRIPT', 'HTML/CSS', 'SQL', 'PYTHON', 'JAVA'],
    datasets: [
      {
        // Chart data
        data: [67.7, 63.1, 54.7, 44.1, 40.2],
        label: 'Programming languages votes',
        backgroundColor: ['yellow', 'blue', 'brown', 'purple', 'indigo'],
        borderWidth: 0.3,
        borderColor: 'black',
      },
    ],
  },
  options: {
    responsive: true,
    // Maintain the original canvas aspect ratio (width / height) when resizing.
    maintainAspectRatio: false,
  },
});

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code for the &lt;code&gt;pie chart&lt;/code&gt; above is pretty much the same as the &lt;code&gt;bar chart&lt;/code&gt;, and &lt;code&gt;line chart&lt;/code&gt; implementation.&lt;/p&gt;

&lt;p&gt;But the pie chart needs extra help to become fully responsive across all screen sizes, so we need to set the &lt;code&gt;maintainAspectRatio&lt;/code&gt; to &lt;strong&gt;false&lt;/strong&gt; in the configuration option to make it responsive across all screen sizes.&lt;/p&gt;

&lt;p&gt;Without &lt;code&gt;maintainAspectRatio&lt;/code&gt; property&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BSZzWpRr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636996134569/vxgis9u3v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BSZzWpRr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636996134569/vxgis9u3v.png" alt="frame_generic_dark (11).png" width="880" height="575"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With &lt;code&gt;maintainAspectRatio&lt;/code&gt; set to false&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PPLp9skL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636996283122/zhUrfYRo4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PPLp9skL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636996283122/zhUrfYRo4.png" alt="frame_generic_dark (12).png" width="880" height="576"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Data presentation is an important element to have in a frontend application, and in this post, you learned how to use the chart.js library to create a bar chart, a line chart, and a pie chart.&lt;/p&gt;

&lt;p&gt;With the knowledge gained from this post, you can use chart.js to work with more complex data.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h1&gt;

&lt;p&gt;If you are interested in learning more about charts, the resource below will help you to take data visualization with charts to the next level.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://www.chartjs.org"&gt;Chart.js Official Documentation&lt;/a&gt; &lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>javascript</category>
      <category>chartjs</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Communicating Between JavaScript and Java Through the Cordova Plugins</title>
      <author>Mike</author>
      <pubDate>Tue, 30 Nov 2021 08:11:46 +0000</pubDate>
      <link>https://dev.to/hmscore/communicating-between-javascript-and-java-through-the-cordova-plugins-3oa9</link>
      <guid>https://dev.to/hmscore/communicating-between-javascript-and-java-through-the-cordova-plugins-3oa9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#background%E2%80%8B"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Background​&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Cordova is an open-source cross-platform development framework that allows you to use HTML and JavaScript to develop apps across multiple platforms, such as Android and iOS. So how exactly does Cordova enable apps to run on different platforms and implement the functions? The abundant plugins in Cordova are the main reason, and free you to focus solely on app functions, without having to interact with the APIs at the OS level. HMS Core provides a set of Cordova-related plugins, which enable you to integrate kits with greater ease and efficiency.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction%E2%80%8B"&gt;
  &lt;/a&gt;
  Introduction​
&lt;/h2&gt;

&lt;p&gt;Here, I'll use the Cordova plugin in HUAWEI Push Kit as an example to demonstrate how to call Java APIs in JavaScript through JavaScript-Java messaging. The following implementation principles can be applied to all other kits, except for Map Kit and Ads Kit (which will be detailed later), and help you master troubleshooting solutions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basic-structure-of-cordova%E2%80%8B"&gt;
  &lt;/a&gt;
  Basic Structure of Cordova​
&lt;/h2&gt;

&lt;p&gt;When you call style='mso-bidi-font-weight:normal'&amp;gt;loadUrl in MainActivity, CordovaWebView will be initialized and Cordova starts up. In this case, style='mso-bidi-font-weight:normal'&amp;gt;CordovaWebView will create style='mso-bidi-font-weight:normal'&amp;gt;PluginManager, NativeToJsMessageQueue, as well as ExposedJsApi of JavascriptInterface. style='mso-bidi-font-weight:normal'&amp;gt;ExposedJsApi and NativeToJsMessageQueue will play a role in the subsequent communication.&lt;br&gt;
During the plugin loading, all plugins in the configuration file will be read when the PluginManager object is created, and plugin mappings will be created. When the plugin is called for the first time, instantiation is conducted and related functions are executed.&lt;/p&gt;

&lt;p&gt;A message can be returned from Java to JavaScript in synchronous or asynchronous mode. In Cordova, set async in the method to distinguish the two modes.&lt;br&gt;
In synchronous mode, Cordova obtains data from the header of the NativeToJsMessageQueue queue, finds the message request based on callbackID, and returns the data to the success method of the request.&lt;br&gt;
In asynchronous mode, Cordova calls the loop method to continuously obtain data from the NativeToJsMessageQueue queue, finds the message request, and returns the data to the success method of the request.&lt;br&gt;
In the Cordova plugin of Push Kit, the synchronization mode is used.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Plugin Call&lt;/strong&gt;&lt;br&gt;
You may still be unclear on how the process works, based on the description above, so I've provided the following procedure:&lt;br&gt;
&lt;strong&gt;1. Install the plugin.​&lt;/strong&gt;&lt;br&gt;
Run the cordova plugin add @hmscore/cordova-plugin-hms-push command to install the latest plugin. After the command is executed, the plugin information is added to the plugins directory.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--88oifCn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t0vevmnfzkgv1k4ojw92.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--88oifCn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t0vevmnfzkgv1k4ojw92.png" alt="Image1" width="396" height="95"&gt;&lt;/a&gt;&lt;br&gt;
The plugin.xml file records all information to be used, such as JavaScript and Android classes. During the plugin initialization, the classes will be loaded to Cordova. If a method or API is not configured in the file, it is unable to be used.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Create a message mapping.​&lt;/strong&gt;&lt;br&gt;
The plugin provides the methods for creating mappings for the following messages:&lt;br&gt;
&lt;strong&gt;(1) HmsMessaging&lt;/strong&gt;&lt;br&gt;
In the HmsPush.js file, call the runHmsMessaging API in asynchronous mode to transfer the message to the Android platform. The Android platform returns the result through Promise.&lt;br&gt;
The message will be transferred to the HmsPushMessaging class. The execute method in HmsPushMessaging can transfer the message to a method for processing based on the action type in the message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public void execute(String action, final JSONArray args, final CallbackContext callbackContext)
throws JSONException {
hmsLogger.startMethodExecutionTimer(action);
switch (action) {
case "isAutoInitEnabled":
isAutoInitEnabled(callbackContext);
break;
case "setAutoInitEnabled":
setAutoInitEnabled(args.getBoolean(1), callbackContext);
break;
case "turnOffPush":
turnOffPush(callbackContext);
break;
case "turnOnPush":
turnOnPush(callbackContext);
break;
case "subscribe":
subscribe(args.getString(1), callbackContext);
break;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;(2) HmsInstanceId&lt;/strong&gt;&lt;br&gt;
In the HmsPush.js file, call the runHmsInstance API in asynchronous mode to transfer the message to the Android platform. The Android platform returns the result through Promise.&lt;br&gt;
The message will be transferred to the HmsPushInstanceId class. The execute method in HmsPushInstanceId can transfer the message to a method for processing based on the action type in the message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public void execute(String action, final JSONArray args, final CallbackContext callbackContext) throws JSONException {
if (!action.equals("init"))
hmsLogger.startMethodExecutionTimer(action);

switch (action) {
case "init":
Log.i("HMSPush", "HMSPush initialized ");
break;
case "enableLogger":
enableLogger(callbackContext);
break;
case "disableLogger":
disableLogger(callbackContext);
break;
case "getToken":
getToken(args.length() &amp;gt; 1 ? args.getString(1) : Core.HCM, callbackContext);
break;
case "getAAID":
getAAID(callbackContext);
break;
case "getCreationTime":
getCreationTime(callbackContext);
break;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Similarly, the processing method returns the result to JavaScript. The result will be written to the nativeToJsMessageQueue queue.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;callBack.sendPluginResult(new PluginResult(PluginResult.Status.OK,autoInit));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;(3) localNotification&lt;/strong&gt;&lt;br&gt;
In the HmsLocalNotification.js file, call the run API in asynchronous mode to transfer the message to the Android platform. The Android platform returns the result through Promise.&lt;br&gt;
The message will be transferred to the HmsLocalNotification class. The execute method in HmsLocalNotification can transfer the message to a method for processing based on the action type in the message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public void execute(String action, final JSONArray args, final CallbackContext callbackContext) throws JSONException {
switch (action) {
case "localNotification":
localNotification(args, callbackContext);
break;
case "localNotificationSchedule":
localNotificationSchedule(args.getJSONObject(1), callbackContext);
break;
case "cancelAllNotifications":
cancelAllNotifications(callbackContext);
break;
case "cancelNotifications":
cancelNotifications(callbackContext);
break;
case "cancelScheduledNotifications":
cancelScheduledNotifications(callbackContext);
break;
case "cancelNotificationsWithId":
cancelNotificationsWithId(args.getJSONArray(1), callbackContext);
break;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Call sendPluginResult to return the result. However, for localNotification, the result will be returned after the notification is sent.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Perform message push event callback.​&lt;/strong&gt;&lt;br&gt;
In addition to the method calling, message push involves listening for many events, for example, receiving common messages, data messages, and tokens.&lt;br&gt;
The callback process starts from Android.&lt;br&gt;
In Android, the callback method is defined in HmsPushMessageService.java.&lt;br&gt;
Based on the SDK requirements, you can opt to redefine certain callback methods, such as onMessageReceived, onDeletedMessages, and onNewToken.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eYSDvPkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ue7667rxz6gep128qves.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eYSDvPkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ue7667rxz6gep128qves.png" alt="Image2" width="627" height="530"&gt;&lt;/a&gt;&lt;br&gt;
When an event is triggered, an event notification is sent to JavaScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public static void runJS(final CordovaPlugin plugin, final String jsCode) {
if (plugin == null)
return;
Log.d(TAG, "runJS()");

plugin.cordova.getActivity().runOnUiThread(() -&amp;gt; {
CordovaWebViewEngine engine = plugin.webView.getEngine();
if (engine == null) {
plugin.webView.loadUrl("javascript:" + jsCode);

} else {
engine.evaluateJavascript(jsCode, (result) -&amp;gt; {

});
}
});
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Each event is defined and registered in HmsPushEvent.js.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;exports.REMOTE_DATA_MESSAGE_RECEIVED = "REMOTE_DATA_MESSAGE_RECEIVED";
exports.TOKEN_RECEIVED_EVENT = "TOKEN_RECEIVED_EVENT";
exports.ON_TOKEN_ERROR_EVENT = "ON_TOKEN_ERROR_EVENT";
exports.NOTIFICATION_OPENED_EVENT = "NOTIFICATION_OPENED_EVENT";
exports.LOCAL_NOTIFICATION_ACTION_EVENT = "LOCAL_NOTIFICATION_ACTION_EVENT";
exports.ON_PUSH_MESSAGE_SENT = "ON_PUSH_MESSAGE_SENT";
exports.ON_PUSH_MESSAGE_SENT_ERROR = "ON_PUSH_MESSAGE_SENT_ERROR";
exports.ON_PUSH_MESSAGE_SENT_DELIVERED = "ON_PUSH_MESSAGE_SENT_DELIVERED";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function onPushMessageSentDelivered(result) {
window.registerHMSEvent(exports.ON_PUSH_MESSAGE_SENT_DELIVERED, result);
}
exports.onPushMessageSentDelivered = onPushMessageSentDelivered;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please note that the event initialization needs to be performed during app development. Otherwise, the event listening will fail. For more details, please refer to eventListeners.js in the demo. If the callback has been triggered in Java, but is not received in JavaScript, check whether the event initialization is performed. In doing so, when an event is triggered in Android, JavaScript will be able to receive and process the message. You can also refer to this process to add an event.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary%E2%80%8B"&gt;
  &lt;/a&gt;
  Summary​
&lt;/h2&gt;

&lt;p&gt;The description above illustrates how the plugin implements the JavaScript-Java communications. The methods of most kits can be called in a similar manner. However, Map Kit, Ads Kit, and other kits that need to display images or videos (such as maps and native ads) require a different method, which will be introduced in a later article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references%E2%80%8B"&gt;
  &lt;/a&gt;
  References​
&lt;/h2&gt;

&lt;p&gt;For more details, you can go to:&lt;br&gt;
HMS Core &lt;a href="https://developer.huawei.com/consumer/en/?ha_source=hms1"&gt;official website&lt;/a&gt;&lt;br&gt;
HMS Core Cordova Plugin &lt;a href="https://developer.huawei.com/consumer/en/doc/development/HMS-Plugin-Guides/cordova-intro-0000001050735015?ha_source=hms1"&gt;Development Documentation page&lt;/a&gt;, to find the documents you need&lt;br&gt;
&lt;a href="https://www.reddit.com/r/HMSCore/"&gt;Reddit&lt;/a&gt; to join our developer discussion&lt;br&gt;
&lt;a href="https://github.com/HMS-Core/hms-cordova-plugin"&gt;GitHub&lt;/a&gt; to download Cordova Plugins&lt;br&gt;
&lt;a href="https://stackoverflow.com/questions/tagged/huawei-mobile-services?tab=Votes"&gt;Stack Overflow&lt;/a&gt; to solve any integration problems&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>java</category>
      <category>cordova</category>
    </item>
    <item>
      <title>Postman Hacks</title>
      <author>Abayomi Ogunnusi</author>
      <pubDate>Tue, 30 Nov 2021 08:07:01 +0000</pubDate>
      <link>https://dev.to/drsimplegraffiti/postman-hacks-1k5j</link>
      <guid>https://dev.to/drsimplegraffiti/postman-hacks-1k5j</guid>
      <description>&lt;p&gt;Postman is an API platform that allows you to create and use APIs.&lt;/p&gt;

&lt;p&gt;Postman streamlines collaboration and simplifies each phase of the API lifecycle, allowing you to design better APIs faster. Let's start testing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3orieKKmYyvUdR3RkY/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3orieKKmYyvUdR3RkY/giphy.gif" alt="testing" width="480" height="366"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Table Of Content&lt;br&gt;
🥦 Environment variables&lt;br&gt;
🥦 Generating random names&lt;br&gt;
🥦 Postman Console&lt;br&gt;
🥦 Path variable&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#environment-variables"&gt;
  &lt;/a&gt;
  Environment variables
&lt;/h2&gt;

&lt;p&gt;Duplicating codes and links during API testing is always a hassle. &lt;br&gt;
First, highlight the url and set it as a variable. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YM9webv2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ei3w1ju2hshykhy5vkom.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YM9webv2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ei3w1ju2hshykhy5vkom.PNG" alt="Image description" width="880" height="417"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Now imagine writing this whole baseUrl for every instances of GET, POST, DELETE, PUT and PATCH request. It get tiresome. There is a hack to this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--31kWlc4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3w2imnsyypics4xx96mo.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--31kWlc4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3w2imnsyypics4xx96mo.PNG" alt="Image description" width="880" height="409"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mmQYaV9e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7o58dlx4ftbpu7t7oq3p.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mmQYaV9e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7o58dlx4ftbpu7t7oq3p.PNG" alt="Image description" width="880" height="491"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WirlHULI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uuk0t6jd2jrnq8xc6uk3.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WirlHULI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uuk0t6jd2jrnq8xc6uk3.PNG" alt="Image description" width="880" height="406"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Also, when you can set token as variable with few steps. Highlight the token and set it as a variable.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_k-HhZbN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d3avt157ysmc6y56r0pn.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_k-HhZbN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d3avt157ysmc6y56r0pn.PNG" alt="Image description" width="880" height="355"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CRLO-ZbU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlbb9v3b6q7s3ty7p2e7.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CRLO-ZbU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlbb9v3b6q7s3ty7p2e7.PNG" alt="Image description" width="880" height="483"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K2KJhr2s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4z1o1yhs05sw7taxdck.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K2KJhr2s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4z1o1yhs05sw7taxdck.PNG" alt="Image description" width="878" height="443"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_lJyTReh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fj07fxtjo8prm5tswcto.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_lJyTReh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fj07fxtjo8prm5tswcto.PNG" alt="Image description" width="878" height="392"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#generating-random-names"&gt;
  &lt;/a&gt;
  Generating random names
&lt;/h2&gt;

&lt;p&gt;This is my favorite, ever want to register new users and your brain just ran out of John Doe. Do not worry, help is on the way. This generate random name and email&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qT3rergH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k90kxd2z3kxktkwfizew.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qT3rergH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k90kxd2z3kxktkwfizew.PNG" alt="Image description" width="874" height="388"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#postman-console"&gt;
  &lt;/a&gt;
  Postman Console
&lt;/h2&gt;

&lt;p&gt;Postman also has its own console, where you may see a log of server responses. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qSjPac0V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/umgdx1bcozey5c26eg9z.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qSjPac0V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/umgdx1bcozey5c26eg9z.PNG" alt="Image description" width="782" height="123"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yBF8uKUk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alzi7qz6fuc03vboez26.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yBF8uKUk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alzi7qz6fuc03vboez26.PNG" alt="Image description" width="880" height="283"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#path-variable"&gt;
  &lt;/a&gt;
  Path variable
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aRMZtxeK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1p1gpb7urn2t1swhp6bi.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aRMZtxeK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1p1gpb7urn2t1swhp6bi.PNG" alt="Image description" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This is just a quick overview of what you can do with Postman to test APIs.&lt;br&gt;
Googling what postman can accomplish will provide you with more functionality.&lt;br&gt;
Thank you for taking the time to read this. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Top 8 Best Shyplite Competitors and Alternatives</title>
      <author>jay23232</author>
      <pubDate>Tue, 30 Nov 2021 07:53:36 +0000</pubDate>
      <link>https://dev.to/jay23232/top-8-best-shyplite-competitors-and-alternatives-32mc</link>
      <guid>https://dev.to/jay23232/top-8-best-shyplite-competitors-and-alternatives-32mc</guid>
      <description>&lt;p&gt;&lt;strong&gt;What is Shyplite?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Shyplite is a courier aggregator that connects e-commerce companies with multiple couriers and order management systems. This allows small, yet growing companies to manage complex orders at any stage of their growth. As the business grows larger in size or begins receiving more complicated shipments, it must start looking for &lt;a href="https://www.clickpost.ai/top-5-best-shyplite-competitors-alternatives"&gt;&lt;strong&gt;Shyplite Alternatives and Competitors&lt;/strong&gt;&lt;/a&gt; who will give them an edge over other shipping industries out there so they can continue thriving and maintain profitability when expanding into new markets.&lt;/p&gt;

&lt;p&gt;Hiring the best ecommerce shipping solutions company is essential for finding the best rates and packages that will save your money. This also helps in streamlining your business operations and making it more efficient, saving time as well. You can make sure that you have the capabilities of making informed decisions about shipping costs, services, rates, etc., without having to spend all day calling providers or searching on their websites just to find out what options are available.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best Shyplite Alternatives for eCommerce Business&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1)ClickPost&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Clickpost is the fastest growing integrated logistics company in Asia. They help E-commerce companies process tens of millions of shipments per month while giving their customers cutting edge Logistics Intelligence and helping multiple Unicorns improve post purchase customer experience. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2)ShipRocket&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Shiprocket is a company that has made the shipping process for e-tailers easier than ever before. It provides various services to its users, ranging from printing bulk labels and tracking shipments around the world all in one place! They have gained many happy clients with their helpful service since they were founded in 2014.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3)Vamaship&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4)ShippyPro&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ShippyPro is a web-based shipment management software that helps with downloading, labeling, shipping and managing carriers in an easier way. Shipping is done by Shippipro's contracted carriers or through the user's preferred carrier. It also provides multi-carrier rates and services functionality for eCommerce retailers to make their shipping process easy.&lt;/p&gt;

&lt;p&gt;**5)Shyplite&lt;/p&gt;

&lt;p&gt;6)Shipkaro&lt;/p&gt;

&lt;p&gt;7)Narvar**&lt;/p&gt;

&lt;p&gt;Narvar has been built to create an easy way for shipping information to be collected, stored and displayed. It is a complete shipping solution that allows you to store all your data in one place, providing you with the ability to display this information to your customers from any channel.&lt;/p&gt;

&lt;p&gt;If there are any delays or mistakes made during delivery, Narvar will notify both parties and help solve these problems quickly by being available 24/7. The software also helps you build brand awareness through tools such as social media integration and SMS features. A good feature of this system would be the customer support where they can access FAQs on different topics that can lead them towards their own resolution, live assistance, 24/7 chat support and much more.&lt;/p&gt;

&lt;p&gt;As mentioned above, Narvar is a complete ecommerce shipping solution that will save your time and money. It offers features that help aid communication between customers and business owners with its social media integration, SMS feature and 24/7 customer service. This software has many tools available to help retailers improve their efficiency by tracking orders, automatically adding preferred delivery dates for customers, as well as preventing errors from ever happening in the first place with order management tools.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8)ShipStation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ShipStation is a cloud-based shipping and ecommerce solution for online merchants. This software integrates directly with Shopify, eBay, Amazon, WooCommerce, Magento, 3dcart and others. Shipping charges are calculated automatically based on USPS rates. Users can also set up rules to print labels in bulk or automate shipments through software.&lt;/p&gt;

&lt;p&gt;**9)EasyShip&lt;/p&gt;

&lt;p&gt;10)Shippo&lt;br&gt;
**&lt;br&gt;
Shippo is an online shipper that helps you connect to the best shipping carrier for your needs. It has a marketplace where customers can compare quotes from multiple carriers and choose one with ease. You may start using their services at no cost, but they offer paid plans too depending on your requirements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Top 8 best Shyplite competitors and alternatives are listed above. If you are facing issues in figuring out the best logistics software then you can contact us and get a detailed insight on the best options available in the market that will suit the requirements of you eCommerce business.&lt;/p&gt;

</description>
      <category>shyplitealternatives</category>
      <category>softwares</category>
      <category>logistics</category>
    </item>
    <item>
      <title>Version Control Systems</title>
      <author>Bernard Opiyo</author>
      <pubDate>Tue, 30 Nov 2021 07:46:27 +0000</pubDate>
      <link>https://dev.to/broopiyo/version-control-systems-hkp</link>
      <guid>https://dev.to/broopiyo/version-control-systems-hkp</guid>
      <description>&lt;p&gt;Version Control also known as _revision control, source control or source code management _is a class of systems responsible for managing changes to computer programs, documents and large websites.&lt;br&gt;
Vcs records changes to a file or set of files over time so that you can recall specific versions later.&lt;/p&gt;

&lt;p&gt;Version control systems are most commonly run as stand alone applications.&lt;br&gt;
&lt;strong&gt;Reasons to use version control system&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To be able to manage changes on the source file and also manage and support team development.&lt;/li&gt;
&lt;li&gt;Version control remembers the history and hence you can always return to earlier versions if you have screwed up the current file.&lt;/li&gt;
&lt;li&gt;Version control also allow us to organize and make co-ordinate changes to the code base and supports co-development across system borders.&lt;/li&gt;
&lt;li&gt;You can always return to earlier version since it remembers the history.
*Most Integrated Development Environments(IDE) offer support for one or more version control systems.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Types of version Control systems&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Local Version control systems&lt;br&gt;
This is to copy files into another directory, the approach is common due to its simpleness but its very prone to error. As it is easy to forget which directory you're in and accidentally write to the wrong file or copy over files you don't mean to.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Centralized version control systems which were developed to enable people to collaborate on code and documents with people on different systems that may not share a common file system.The systems include CVS, subversion and perforce have a single server that contains all the versioned files and a number of clients that check out files from that central place.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;3.Distributed systems&lt;br&gt;
Here the client mirror the complete repository and not just the latest version of each file. The user then synchronize local repository with the copy on the server.The disadvantage of distributed system is that the local repository of various users on a project can be very out of sync with each other making the job harder when the versions have to be merged again.Example of this system include Git.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Process of implementing Git&lt;/u&gt;&lt;br&gt;
If having a linux system, Git is most likely already installed on your system. On macOS, git is available through Xcode which is not always the most recent version. On windows you can use WSL.&lt;br&gt;
Downloads for all systems are available on the download section of the main git website.&lt;br&gt;
The Eclipse IDE comes in with built-in support for  Git through the standard plug-in EGit.&lt;/p&gt;

&lt;p&gt;4.Cloud services&lt;br&gt;
These are companies which offer hosting services for open source projects or have a free access for academic accounts. Examples includes Github, Gitlab and SourceForge.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Importance of using Cloud services&lt;/u&gt;&lt;br&gt;
*It ensures that the code is stored safely off-site.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Git and mercurial are systems that are maintained and supported by various hosting services for example vcs provides training in Git.
*Centralized version control systems have asimler concept than the distributed ones.&lt;/li&gt;
&lt;li&gt;It also allows you to check which systems are supported by an IDE before using it.&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title>MiniRx Feature Store vs. NgRx Component Store vs. Akita</title>
      <author>Florian Spier</author>
      <pubDate>Tue, 30 Nov 2021 07:44:29 +0000</pubDate>
      <link>https://dev.to/this-is-angular/minirx-feature-store-vs-ngrx-component-store-vs-akita-4983</link>
      <guid>https://dev.to/this-is-angular/minirx-feature-store-vs-ngrx-component-store-vs-akita-4983</guid>
      <description>&lt;p&gt;&lt;strong&gt;MiniRx "Feature Stores"&lt;/strong&gt; offer &lt;strong&gt;simple yet powerful state management&lt;/strong&gt;.&lt;br&gt;
How does &lt;strong&gt;MiniRx Feature Store&lt;/strong&gt; compare to &lt;strong&gt;@ngrx/component-store&lt;/strong&gt; and &lt;strong&gt;@datorama/akita&lt;/strong&gt;? 10 rounds in the &lt;strong&gt;fighting ring&lt;/strong&gt; will bring clarity!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Disclaimer: I am the maintainer of MiniRx Store, I try to be fair, but it can be difficult from time to time.&lt;br&gt;
To be clear: Component Store and Akita are great state management libraries. It will be an intense fight, but I will make sure that nobody gets hurt!&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-minirx"&gt;
  &lt;/a&gt;
  What is MiniRx?
&lt;/h2&gt;

&lt;p&gt;MiniRx is a full-blown &lt;strong&gt;Redux&lt;/strong&gt; Store powered by &lt;strong&gt;RxJS&lt;/strong&gt;: It includes actions, reducers, meta reducers, memoized selectors, effects and Redux DevTools support.&lt;/p&gt;

&lt;p&gt;The Redux pattern is great to manage state at large scale, but it forces us to write boilerplate code (actions, reducers, dispatch actions). This can be overkill for simple features in your application.&lt;/p&gt;

&lt;p&gt;For that reason, MiniRx &lt;strong&gt;Feature Store&lt;/strong&gt; offers a more simple form of state management: we can &lt;strong&gt;bypass Redux boilerplate&lt;/strong&gt; and interact &lt;strong&gt;directly&lt;/strong&gt; with a corresponding &lt;strong&gt;feature state&lt;/strong&gt; with the &lt;code&gt;FeatureStore&lt;/code&gt; API:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;setState()&lt;/code&gt; update the feature state&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;select()&lt;/code&gt; select state from the feature state object as RxJS Observable&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;effect()&lt;/code&gt; run side effects like API calls and update feature state&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;undo()&lt;/code&gt; easily undo setState actions (requires the UndoExtension)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;get state()&lt;/code&gt; imperatively get the current feature state&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;MiniRx scales nicely with your state management requirements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make hard things simple with the Redux &lt;code&gt;Store&lt;/code&gt; API&lt;/li&gt;
&lt;li&gt;Keep simple things simple with the &lt;code&gt;FeatureStore&lt;/code&gt; API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In most cases you can default to the &lt;code&gt;FeatureStore&lt;/code&gt; API and fall back to the Redux &lt;code&gt;Store&lt;/code&gt; API to implement the really complex features in your application.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#how-does-the-feature-store-work"&gt;
  &lt;/a&gt;
  How does the Feature Store work?
&lt;/h4&gt;

&lt;p&gt;Feature Store uses Redux under the hood:&lt;br&gt;
Behind the scenes a Feature Store is creating a &lt;em&gt;feature reducer&lt;/em&gt; and a corresponding &lt;em&gt;setState&lt;/em&gt; action.&lt;br&gt;
The &lt;em&gt;feature reducer&lt;/em&gt; is registered in the Redux Store and the Feature Store state becomes part of the global state object.&lt;br&gt;
When calling &lt;code&gt;setState()&lt;/code&gt; the Feature Store dispatches its &lt;em&gt;setState&lt;/em&gt; action (with the new state as action payload) and the &lt;em&gt;feature reducer&lt;/em&gt; will update the feature state accordingly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HCQmBPFB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2wgzrqjoz5ikedd3by3h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HCQmBPFB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2wgzrqjoz5ikedd3by3h.png" alt="Image description" width="880" height="808"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See the &lt;code&gt;FeatureStore&lt;/code&gt; source &lt;a href="https://github.com/spierala/mini-rx-store/blob/3.0.0/projects/mini-rx-store/src/lib/feature-store.ts"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;🤓 Learn more about MiniRx on the &lt;a href="https://mini-rx.io"&gt;docs site&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;⭐ &lt;a href="https://github.com/spierala/mini-rx-store"&gt;MiniRx on GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;🚀 See it in action in the &lt;a href="https://angular-demo.mini-rx.io/"&gt;Angular Demo&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;🤓 &lt;a href="https://mini-rx.io/docs/fs-quick-start"&gt;Feature Store docs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;🚀 &lt;a href="https://stackblitz.com/edit/mini-rx-store-basic-tutorial?file=index.ts"&gt;MiniRx Basic Tutorial on StackBlitz&lt;/a&gt;:
See how the Redux API and Feature Store API both add to the global state object&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#minirx-feature-store-vs-ngrx-component-store-vs-akita"&gt;
  &lt;/a&gt;
  MiniRx Feature Store vs. NgRx Component Store vs. Akita
&lt;/h2&gt;

&lt;p&gt;Let's shed some light on &lt;strong&gt;MiniRx Feature Store&lt;/strong&gt; by sending it to the fighting ring together with two other popular state management libraries: &lt;strong&gt;@ngrx/component-store&lt;/strong&gt; and &lt;strong&gt;@datorama/akita&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-competitors"&gt;
  &lt;/a&gt;
  The competitors
&lt;/h2&gt;
&lt;h4&gt;
  &lt;a href="#ngrx-component-store-1301"&gt;
  &lt;/a&gt;
  NgRx Component Store (13.0.1)
&lt;/h4&gt;

&lt;p&gt;Component Store is a library that helps to manage local/component state. It can be used as an alternative to the "Service with a Subject" approach. &lt;br&gt;
It is build on top of RxJS/ReplaySubject (see &lt;a href="https://github.com/ngrx/platform/blob/13.0.1/modules/component-store/src/component-store.ts#L52"&gt;here&lt;/a&gt;). Services which extend &lt;code&gt;ComponentStore&lt;/code&gt; expose state as RxJS Observables (using the &lt;code&gt;select&lt;/code&gt; method). With the methods &lt;code&gt;setState&lt;/code&gt; and &lt;code&gt;patchState&lt;/code&gt; the state can be updated.&lt;/p&gt;

&lt;p&gt;Docs: &lt;a href="https://ngrx.io/guide/component-store"&gt;https://ngrx.io/guide/component-store&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#akita-624"&gt;
  &lt;/a&gt;
  Akita (6.2.4)
&lt;/h4&gt;

&lt;p&gt;Akita describes itself as a "state management pattern": &lt;br&gt;
It offers a set of specialized classes like &lt;code&gt;Store&lt;/code&gt;, &lt;code&gt;Query&lt;/code&gt;, &lt;code&gt;EntityStore&lt;/code&gt; and more. &lt;br&gt;
Akita &lt;code&gt;Store&lt;/code&gt; is build on top of RxJS/BehaviorSubject (see &lt;a href="https://github.com/datorama/akita/blob/v6.2.0/libs/akita/src/lib/store.ts#L49"&gt;here&lt;/a&gt;). &lt;br&gt;
By using the Akita classes we can build a reactive state service which exposes state as RxJS Observables (using &lt;code&gt;select&lt;/code&gt; on a &lt;code&gt;Query&lt;/code&gt; instance). The &lt;code&gt;update&lt;/code&gt; method of &lt;code&gt;Store&lt;/code&gt; is used to update the state.&lt;/p&gt;

&lt;p&gt;Docs: &lt;a href="https://datorama.github.io/akita/"&gt;https://datorama.github.io/akita/&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#minirx-feature-store-300"&gt;
  &lt;/a&gt;
  MiniRx Feature Store (3.0.0)
&lt;/h4&gt;

&lt;p&gt;MiniRx itself is a "hybrid" Store. It uses Redux and RxJS/BehaviorSubject (see &lt;a href="https://github.com/spierala/mini-rx-store/blob/3.0.0/projects/mini-rx-store/src/lib/store-core.ts#L30"&gt;here&lt;/a&gt;) under the hood and exposes the powerful Redux &lt;code&gt;Store&lt;/code&gt; API (which is very similar to &lt;a href="https://ngrx.io/guide/store"&gt;@ngrx/store&lt;/a&gt; and &lt;a href="https://ngrx.io/guide/effects"&gt;@ngrx/effects&lt;/a&gt;). &lt;br&gt;
At the same time MiniRx allows you to bypass the infamous Redux boilerplate with the &lt;code&gt;FeatureStore&lt;/code&gt; API. &lt;br&gt;
You can create a reactive state service by extending &lt;code&gt;FeatureStore&lt;/code&gt;. &lt;br&gt;
RxJS Observables (returned by the &lt;code&gt;select&lt;/code&gt; method) inform about state changes and the state can be changed by calling &lt;code&gt;setState&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Docs: &lt;a href="https://mini-rx.io/docs/fs-quick-start"&gt;https://mini-rx.io/docs/fs-quick-start&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mhhh..., this sounds all very similar, but where are the differences then? It's time to prepare the fighting ring! :)&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#fight"&gt;
  &lt;/a&gt;
  FIGHT!
&lt;/h2&gt;

&lt;p&gt;10 rounds to go! &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#1-basic-setup"&gt;
  &lt;/a&gt;
  1. Basic Setup
&lt;/h3&gt;

&lt;p&gt;What does the basic setup of a &lt;strong&gt;reactive state service&lt;/strong&gt; look like?&lt;/p&gt;

&lt;p&gt;All setups share the same ingredients: A state interface and initial state. &lt;/p&gt;

&lt;p&gt;FYI: The state interface must be object-like: you can not state-manage just a plain &lt;code&gt;number&lt;/code&gt; or &lt;code&gt;string&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;CounterState&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;CounterState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#minirx-feature-store"&gt;
  &lt;/a&gt;
  MiniRx Feature Store
&lt;/h4&gt;

&lt;p&gt;The state service extends &lt;code&gt;FeatureStore&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Injectable&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;providedIn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;CounterStateService&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;FeatureStore&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CounterState&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="na"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;counter&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;decrement&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;MiniRx Feature Store has to provide the initial state and a &lt;em&gt;feature key&lt;/em&gt;: "counter". &lt;br&gt;
The key is used to register the "counter" state in the global state object.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#component-store"&gt;
  &lt;/a&gt;
  Component Store
&lt;/h4&gt;

&lt;p&gt;With Component Store we extend &lt;code&gt;ComponentStore&lt;/code&gt; and provide an initial state:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Injectable&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;providedIn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;CounterStateService&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;ComponentStore&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CounterState&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="na"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;decrement&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Component Store setup looks very similar to Feature Store, however the feature key is not needed because every &lt;code&gt;ComponentStore&lt;/code&gt; instance lives independently.&lt;br&gt;
FYI: The Component Store initial state parameter is optional (see docs &lt;a href="https://ngrx.io/guide/component-store/initialization#lazy-initialization"&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#akita"&gt;
  &lt;/a&gt;
  Akita
&lt;/h4&gt;

&lt;p&gt;With Akita, we create two services: One extends &lt;code&gt;Store&lt;/code&gt; and the other one extends &lt;code&gt;Query&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Injectable&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;providedIn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;StoreConfig&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;counter&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;CounterStateService&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Store&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CounterState&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;decrement&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Injectable&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;providedIn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;CounterQuery&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CounterState&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="na"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;store&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;CounterStateService&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Akita setup is the most boilerplaty. Extending &lt;code&gt;Store&lt;/code&gt; is similar to the other setups. A feature key is provided via the &lt;code&gt;@StoreConfig&lt;/code&gt; decorator.&lt;br&gt;
To access the state you have to extend &lt;code&gt;Query&lt;/code&gt; and provide the &lt;code&gt;Store&lt;/code&gt; instance.&lt;br&gt;
Also, the components have to talk to both the &lt;code&gt;Query&lt;/code&gt; and the &lt;code&gt;Store&lt;/code&gt; instance in order to read and write state.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-bundle-sizes"&gt;
  &lt;/a&gt;
  2. Bundle Sizes
&lt;/h3&gt;

&lt;p&gt;Regarding the basic setup..., let's look at the corresponding bundle sizes (using &lt;a href="https://www.npmjs.com/package/source-map-explorer"&gt;source-map-explorer&lt;/a&gt;). &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#minirx-feature-store"&gt;
  &lt;/a&gt;
  MiniRx Feature Store
&lt;/h4&gt;

&lt;p&gt;combined: 152.39 KB&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#component-store"&gt;
  &lt;/a&gt;
  Component Store
&lt;/h4&gt;

&lt;p&gt;combined: 152.25 KB&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#akita"&gt;
  &lt;/a&gt;
  Akita
&lt;/h4&gt;

&lt;p&gt;combined: 151.61 KB&lt;/p&gt;

&lt;p&gt;Akita is the most lightweight, and MiniRx is almost 1 KB bigger. &lt;br&gt;
But keep in mind that MiniRx Feature Store uses Redux under the hood &lt;br&gt;
and the Redux API is always available. Using the MiniRx Redux API will not add much to the total bundle size.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#21-bundle-sizes-when-adding-redux"&gt;
  &lt;/a&gt;
  2.1. Bundle Sizes when adding Redux
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#minirx-feature-store-store-api-store-effects-using-angular-integration-minirxstoreng"&gt;
  &lt;/a&gt;
  MiniRx Feature Store + Store API (Store + Effects) using &lt;a href="https://mini-rx.io/docs/angular#register-effects"&gt;Angular Integration (mini-rx-store-ng)&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;combined: 156.9 KB&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ngrx-component-store-ngrx-store"&gt;
  &lt;/a&gt;
  NgRx Component Store + NgRx Store
&lt;/h4&gt;

&lt;p&gt;combined: 164.17 KB&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ngrx-component-store-ngrx-store-ngrx-effects"&gt;
  &lt;/a&gt;
  NgRx Component Store + NgRx Store + NgRx Effects
&lt;/h4&gt;

&lt;p&gt;combined: 171.45 KB&lt;/p&gt;

&lt;p&gt;You can review the different setups in this repo and run source-map-explorer yourself: &lt;a href="https://github.com/spierala/mini-rx-comparison"&gt;https://github.com/spierala/mini-rx-comparison&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-local-or-global-state"&gt;
  &lt;/a&gt;
  3. Local or global state
&lt;/h3&gt;

&lt;p&gt;How do the different store solutions relate to local (component state) and global state? What is the store lifespan?&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#minirx-feature-store"&gt;
  &lt;/a&gt;
  MiniRx Feature Store
&lt;/h4&gt;

&lt;p&gt;MiniRx at its heart is a Redux Store with one global state object ("Single source of truth"). Also, MiniRx Feature Stores register a "slice" of state into the global state object.&lt;br&gt;
The focus of MiniRx is clearly global state which has the lifespan of the application.&lt;/p&gt;

&lt;p&gt;But Feature Stores are destroyable... Their state can be removed from the global state object. Therefore, Feature Stores can be used for "Local Component State", which has the lifespan of a component. &lt;/p&gt;

&lt;p&gt;See an example in the &lt;a href="https://angular-demo.mini-rx.io/#/counter"&gt;MiniRx Angular demo&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#component-store"&gt;
  &lt;/a&gt;
  Component Store
&lt;/h4&gt;

&lt;p&gt;Component Stores live independently and are not related to something like a global state (e.g. when using @ngrx/store). &lt;br&gt;
The lifespan of a Component Store can be bound to a component ("Local Component State"), but it can also take the lifespan of the application.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#akita"&gt;
  &lt;/a&gt;
  Akita
&lt;/h4&gt;

&lt;p&gt;The Akita Stores live independently next to each other. There is no real global state. You can use Akita Stores (which are destroyable too) for "Local Component State" following &lt;a href="https://datorama.github.io/akita/docs/angular/local-state"&gt;this guide&lt;/a&gt; from the Akita docs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-redux-devtools"&gt;
  &lt;/a&gt;
  4. Redux DevTools
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#minirx-feature-store"&gt;
  &lt;/a&gt;
  MiniRx Feature Store
&lt;/h4&gt;

&lt;p&gt;MiniRx can use Redux DevTools with the built-in &lt;a href="https://mini-rx.io/docs/ext-redux-dev-tools"&gt;Redux DevTools Extension&lt;/a&gt;. &lt;br&gt;
Every Feature Store state becomes part of the global state object, and it can be inspected with the Redux DevTools.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#component-store"&gt;
  &lt;/a&gt;
  Component Store
&lt;/h4&gt;

&lt;p&gt;There is no official solution for Redux DevTools with Component Store.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#akita"&gt;
  &lt;/a&gt;
  Akita
&lt;/h4&gt;

&lt;p&gt;Akita has a &lt;a href="https://datorama.github.io/akita/docs/enhancers/devtools"&gt;PlugIn for Redux DevTools support&lt;/a&gt;. &lt;br&gt;
FYI: The separate Store states are merged into one big state object to make all state inspectable with the Redux DevTools. See the Akita DevTools source &lt;a href="https://github.com/datorama/akita/blob/master/libs/akita/src/lib/devtools.ts"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-crossstate-selection"&gt;
  &lt;/a&gt;
  5. Cross-state selection
&lt;/h3&gt;

&lt;p&gt;How can we select state from other store instances and pull that state into our current store (state service)?&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#minirx-feature-store"&gt;
  &lt;/a&gt;
  MiniRx Feature Store
&lt;/h4&gt;

&lt;p&gt;Every Feature Store state integrates into the global state object. Therefore, the corresponding feature states can be selected at anytime from the Redux &lt;code&gt;Store&lt;/code&gt;(!) instance using &lt;code&gt;store.select&lt;/code&gt;.&lt;br&gt;
Alternatively you can use RxJS combination operators like &lt;code&gt;combineLatest&lt;/code&gt; or &lt;code&gt;withLatestFrom&lt;/code&gt; to combine state from other Feature Stores with state Observables of your current Feature Store.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#component-store"&gt;
  &lt;/a&gt;
  Component Store
&lt;/h4&gt;

&lt;p&gt;The Component Store &lt;code&gt;select&lt;/code&gt; method also accepts a bunch of Observables to depend on (see docs &lt;a href="https://ngrx.io/guide/component-store/read#combining-selectors"&gt;here&lt;/a&gt;). &lt;br&gt;
Of course these Observables can come from other services. Like this it is straight-forward to depend on (observable) state of other &lt;code&gt;ComponentStore&lt;/code&gt; instances.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#akita"&gt;
  &lt;/a&gt;
  Akita
&lt;/h4&gt;

&lt;p&gt;Akita has &lt;code&gt;combineQueries&lt;/code&gt; to combine state from different &lt;code&gt;Query&lt;/code&gt; instances. &lt;code&gt;combineQueries&lt;/code&gt; is basically RxJS &lt;code&gt;combineLatest&lt;/code&gt;. &lt;br&gt;
See the Akita combineQueries source &lt;a href="https://github.com/datorama/akita/blob/master/libs/akita/src/lib/combineQueries.ts"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gpcHtcsm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6asoiza0ckl0o62s35wc.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gpcHtcsm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6asoiza0ckl0o62s35wc.jpeg" alt="Image description" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-memoized-selectors"&gt;
  &lt;/a&gt;
  6. Memoized Selectors
&lt;/h3&gt;

&lt;p&gt;Memoized selectors can help to improve performance by reducing the number of computations of selected state. &lt;br&gt;
The selectors API (&lt;code&gt;createSelector&lt;/code&gt;) is also great for Composition: Build selectors by combining existing selectors.&lt;/p&gt;

&lt;p&gt;Examples for memoized selectors: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ngrx.io/guide/store/selectors"&gt;NgRx Store selectors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/reduxjs/reselect"&gt;Redux Reselect&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#minirx-feature-store"&gt;
  &lt;/a&gt;
  MiniRx Feature Store
&lt;/h4&gt;

&lt;p&gt;MiniRx comes with memoized selectors out-of-the-box. &lt;br&gt;
You can use the same &lt;code&gt;createFeatureSelector&lt;/code&gt; and &lt;code&gt;createSelector&lt;/code&gt; functions for the Redux &lt;code&gt;Store&lt;/code&gt; API and for the &lt;code&gt;FeatureStore&lt;/code&gt; API.&lt;/p&gt;

&lt;p&gt;Read more in the &lt;a href="https://mini-rx.io/docs/select-feature-state#memoized-selectors"&gt;Feature Store memoized selectors documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Example code of memoized selectors in the MiniRx Angular Demo: &lt;a href="https://github.com/spierala/mini-rx-angular-demo/blob/main/src/app/modules/todo/state/todos-state.service.ts#L29"&gt;Todos State Service&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#component-store"&gt;
  &lt;/a&gt;
  Component Store
&lt;/h4&gt;

&lt;p&gt;There is no official solution for Component Store. &lt;br&gt;
You could add @ngrx/store to use the memoized selectors, but it would probably be overkill to add the NgRx Redux Store just for that reason. Redux Reselect could be a better alternative.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#akita"&gt;
  &lt;/a&gt;
  Akita
&lt;/h4&gt;

&lt;p&gt;No memoized selectors. You could most probably add Redux Reselect.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-effects"&gt;
  &lt;/a&gt;
  7. Effects
&lt;/h3&gt;

&lt;p&gt;Effects are used to trigger side effects like API calls. &lt;br&gt;
We can also handle race-conditions more easily within an Effect by using RxJS flattening operators (&lt;code&gt;switchMap&lt;/code&gt;, &lt;code&gt;mergeMap&lt;/code&gt;, etc.).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#minirx-feature-store"&gt;
  &lt;/a&gt;
  MiniRx Feature Store
&lt;/h4&gt;

&lt;p&gt;MiniRx Feature Store has Effects (&lt;a href="https://mini-rx.io/docs/effects-for-feature-store"&gt;https://mini-rx.io/docs/effects-for-feature-store&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;FYI: Feature Store Effects have their equivalent in the Redux API of MiniRx: &lt;a href="https://mini-rx.io/docs/effects"&gt;https://mini-rx.io/docs/effects&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#component-store"&gt;
  &lt;/a&gt;
  Component Store
&lt;/h4&gt;

&lt;p&gt;Yes, there are Effects: &lt;a href="https://ngrx.io/guide/component-store/effect"&gt;https://ngrx.io/guide/component-store/effect&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#akita"&gt;
  &lt;/a&gt;
  Akita
&lt;/h4&gt;

&lt;p&gt;Yes, there are Effects: &lt;a href="https://datorama.github.io/akita/docs/angular/effects"&gt;https://datorama.github.io/akita/docs/angular/effects&lt;/a&gt;. &lt;br&gt;
Effects come with a separate package (@datorama/akita-ng-effects).&lt;br&gt;
The Effects API is not tied to a &lt;code&gt;Store&lt;/code&gt; instance.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-undo"&gt;
  &lt;/a&gt;
  8. Undo
&lt;/h3&gt;

&lt;p&gt;How can we undo state changes?&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#minirx-feature-store"&gt;
  &lt;/a&gt;
  MiniRx Feature Store
&lt;/h4&gt;

&lt;p&gt;MiniRx has the &lt;a href="https://mini-rx.io/docs/ext-undo-extension"&gt;UndoExtension&lt;/a&gt; to support Undo of state changes. &lt;br&gt;
This is especially helpful if you want to undo optimistic updates (e.g. when an API call fails). Both the &lt;code&gt;FeatureStore&lt;/code&gt; and the Redux &lt;code&gt;Store&lt;/code&gt; API can undo specific state changes.&lt;br&gt;
Feature Store exposes the &lt;code&gt;undo&lt;/code&gt; method. &lt;/p&gt;

&lt;p&gt;Read more in the MiniRx docs: &lt;a href="https://mini-rx.io/docs/update-feature-state#undo-setstate-actions-with-undo"&gt;Undo a setState Action&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#component-store"&gt;
  &lt;/a&gt;
  Component Store
&lt;/h4&gt;

&lt;p&gt;No support for undo.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#akita"&gt;
  &lt;/a&gt;
  Akita
&lt;/h4&gt;

&lt;p&gt;Akita has a State History PlugIn to undo state changes (&lt;a href="https://datorama.github.io/akita/docs/plugins/state-history/"&gt;https://datorama.github.io/akita/docs/plugins/state-history/&lt;/a&gt;). &lt;br&gt;
The API is much bigger than the one of Feature Store. But it seems to be difficult to undo a very specific state change (which is important when undoing optimistic updates).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-immutable-state"&gt;
  &lt;/a&gt;
  9. Immutable State
&lt;/h3&gt;

&lt;p&gt;Immutability is key when using state management: We only want to allow explicit state changes using the corresponding API (e.g. by using &lt;code&gt;setState&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt; or by dispatching an Action in Redux). &lt;br&gt;
Mutating state however, might lead to unexpected behavior and bugs.&lt;br&gt;
Immutable state helps to avoid such accidental state changes.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#minirx-feature-store"&gt;
  &lt;/a&gt;
  MiniRx Feature Store
&lt;/h4&gt;

&lt;p&gt;MiniRx offers the &lt;a href="https://mini-rx.io/docs/ext-immutable"&gt;Immutable State Extension&lt;/a&gt; to enforce immutable data. &lt;br&gt;
When the &lt;code&gt;ImmutableStateExtension&lt;/code&gt; is added to the MiniRx Store both the Redux &lt;code&gt;Store&lt;/code&gt; API and the &lt;code&gt;FeatureStore&lt;/code&gt; API will use immutable data.&lt;br&gt;
The Immutable State Extension "deepfreezes" the global state when state is updated. Mutating state will throw an exception.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#component-store"&gt;
  &lt;/a&gt;
  Component Store
&lt;/h4&gt;

&lt;p&gt;There is nothing in Component Store which can enforce immutability.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#akita"&gt;
  &lt;/a&gt;
  Akita
&lt;/h4&gt;

&lt;p&gt;Akita "deepfreezes" the state object when state is updated (only in DEV mode). See the corresponding source code here: &lt;a href="https://github.com/datorama/akita/blob/v6.2.0/libs/akita/src/lib/store.ts#L181"&gt;https://github.com/datorama/akita/blob/v6.2.0/libs/akita/src/lib/store.ts#L181&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-frameworkagnostic"&gt;
  &lt;/a&gt;
  10. Framework-agnostic
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#minirx-feature-store"&gt;
  &lt;/a&gt;
  MiniRx Feature Store
&lt;/h4&gt;

&lt;p&gt;MiniRx is framework-agnostic. You can use MiniRx with any framework or even without framework.&lt;/p&gt;

&lt;p&gt;See here the MiniRx Svelte Demo: &lt;a href="https://github.com/spierala/mini-rx-svelte-demo"&gt;https://github.com/spierala/mini-rx-svelte-demo&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#component-store"&gt;
  &lt;/a&gt;
  Component Store
&lt;/h4&gt;

&lt;p&gt;Component Store is tied to Angular. Angular is a peer dependency in the &lt;a href="https://github.com/ngrx/platform/blob/13.0.1/modules/component-store/package.json#L25"&gt;package.json&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#akita"&gt;
  &lt;/a&gt;
  Akita
&lt;/h4&gt;

&lt;p&gt;Akita is also framework-agnostic. You can see in this article how Svelte and Akita play together: &lt;a href="https://netbasal.com/supercharge-your-svelte-state-management-with-akita-f1f9de5ef43d"&gt;Supercharge Your Svelte State Management with Akita&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bxnysoyO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sg9baesmy5dexk6jh39m.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bxnysoyO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sg9baesmy5dexk6jh39m.jpeg" alt="Image description" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yes, you made it! I hope that you had fun to watch this fight!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;All competitors showed their skills, none of them went to the ground!&lt;/p&gt;

&lt;p&gt;Who was your favorite?&lt;/p&gt;

&lt;p&gt;Give it a star on GitHub: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;⭐ &lt;a href="https://github.com/spierala/mini-rx-store"&gt;MiniRx on GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;⭐ &lt;a href="https://github.com/ngrx/platform"&gt;NgRx on GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;⭐ &lt;a href="https://github.com/datorama/akita"&gt;Akita on GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#notes"&gt;
  &lt;/a&gt;
  Notes
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-did-we-not-cover"&gt;
  &lt;/a&gt;
  What did we not cover?
&lt;/h3&gt;

&lt;p&gt;For completeness, I want to list a few things that were out of scope for this fight: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Akita: EntityStore, Transactions, Akita Immer, Persist State, CLI&lt;/li&gt;
&lt;li&gt;Component Store: &lt;code&gt;updater&lt;/code&gt; method, &lt;code&gt;tapResponse&lt;/code&gt; operator&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#rxangularstate"&gt;
  &lt;/a&gt;
  @rx-angular/state
&lt;/h4&gt;

&lt;p&gt;Another cool lib which goes into the same direction as NgRx Component Store:&lt;br&gt;
&lt;a href="https://github.com/rx-angular/rx-angular/blob/master/libs/state/README.md"&gt;https://github.com/rx-angular/rx-angular/blob/master/libs/state/README.md&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Maybe see you in the next fight! :)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thanks"&gt;
  &lt;/a&gt;
  Thanks
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#special-thanks-for-reviewing-this-blog-post"&gt;
  &lt;/a&gt;
  Special thanks for reviewing this blog post:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/diePartments"&gt;Michael Rutzer - diePartments&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#articles-which-inspired-me"&gt;
  &lt;/a&gt;
  Articles which inspired me:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;There was once a legendary fight in 2018, organized by &lt;a href="https://twitter.com/orjandesmet"&gt;Orjan de Smet&lt;/a&gt;: &lt;a href="https://ordina-jworks.github.io/angular/2018/10/08/angular-state-management-comparison.html?utm_source=dormosheio&amp;amp;utm_campaign=dormosheio"&gt;NGRX VS. NGXS VS. AKITA VS. RXJS: FIGHT!&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#photos"&gt;
  &lt;/a&gt;
  Photos:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Photo by &lt;a href="https://unsplash.com/@attentieattentie?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Attentie Attentie&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/boxing-ring?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Photo by &lt;a href="https://unsplash.com/@single_lens_reflex?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Dan Burton&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/boxer-break?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Photo by &lt;a href="https://unsplash.com/@matthewapayne?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Matthew Payne&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/boxing-gloves?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>angular</category>
      <category>redux</category>
      <category>webdev</category>
      <category>rxjs</category>
    </item>
    <item>
      <title>How to configure XAMPP to send Mail from Localhost in PHP ?</title>
      <author>Naem Azam </author>
      <pubDate>Tue, 30 Nov 2021 07:21:59 +0000</pubDate>
      <link>https://dev.to/naemazam/how-to-configure-xampp-to-send-mail-from-localhost-in-php--382c</link>
      <guid>https://dev.to/naemazam/how-to-configure-xampp-to-send-mail-from-localhost-in-php--382c</guid>
      <description>&lt;p&gt;As a part of the experiment, developers need to send emails and we all know that sending mail from localhost using PHP can be much more painful if we don’t know how to properly configure XAMPP for it.&lt;br&gt;
To send mail from localhost using XAMPP, we’ve to configure XAMPP after installing it. To configure the XAMPP server to send mail from the localhost, we have to make some changes in two files one is PHP and another one is Sendmail.&lt;/p&gt;

&lt;p&gt;First, go to the XAMPP installation directory and open the XAMPP folder and follow the below steps same: I’ve installed XAMPP in the C directory.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to the (C:xampp\php) and open the PHP configuration setting file then find the [mail function] by scrolling down or simply press ctrl+f to search it directly then find the following lines and pass these values. Remember, there may be a semicolon ; at the starting of each line, simply remove the semicolon from each line which is given below.
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mail&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;For&lt;/span&gt; &lt;span class="nc"&gt;Win32&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;smtp&lt;/span&gt;
&lt;span class="no"&gt;SMTP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;smtp&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gmail&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;smtp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;
&lt;span class="n"&gt;smtp_port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;587&lt;/span&gt;
&lt;span class="n"&gt;sendmail_from&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;your_email_address_here&lt;/span&gt;
&lt;span class="n"&gt;sendmail_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;C:&lt;/span&gt;&lt;span class="se"&gt;\xa&lt;/span&gt;&lt;span class="s2"&gt;mpp\sendmail\sendmail.exe&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; -t"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;That’s all for this file, press ctrl+s to save this file and then close it.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Now, go the (C:\xampp\sendmail) and open the sendmail configuration setting file then find sendmail by scrolling down or press ctrl+f to search it directly then find the following lines and pass these values. Remember, there may be a semicolon ; at the starting of each line, simply remove the semicolon from each line which is given below.
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;smtp_server&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;smtp&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gmail&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;span class="n"&gt;smtp_port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;587&lt;/span&gt;
&lt;span class="n"&gt;error_logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;
&lt;span class="n"&gt;debug_logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;
&lt;span class="n"&gt;auth_username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;your_email_address_here&lt;/span&gt;
&lt;span class="n"&gt;auth_password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;your_password_here&lt;/span&gt;
&lt;span class="n"&gt;force_sender&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;your_email_address_here&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;optional&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;that’s all for this file, press ctrl+s to save this file and then close it. After all changes in the two files, don’t forget to restart your apache server.&lt;br&gt;
Now, you’re done with the required changes in these files. To check the changes you’ve made are correct or not. First, create a PHP file with the .php extension and paste the following codes into your PHP file. After pasting the codes, put your details to the given variables – In the $receiver variable put the receiver email address, in the $subject variable put the email subject and do respectively.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$receiver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"receiver email address here"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$subject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Email Test via PHP using Localhost"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Hi, there...This is a test email send from Localhost."&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$sender&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"From:sender email address here"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;mail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$receiver&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$subject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$sender&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Email sent successfully to &lt;/span&gt;&lt;span class="nv"&gt;$receiver&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Sorry, failed while sending mail!"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After completing these steps, just open this PHP file on your browser. If your mail is sent successfully then there is appears a success message “Email sent successfully to …..” and in the case your mail not sent then there is appears “Sorry, failed while sending mail!”.&lt;/p&gt;

&lt;p&gt;If mail is sent then check the receiver has got your email or not. If yes, then great you did all changes perfectly. If no, check all the changes that you have done earlier are correct or not.&lt;/p&gt;

</description>
      <category>php</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>naemazam</category>
    </item>
  </channel>
</rss>
