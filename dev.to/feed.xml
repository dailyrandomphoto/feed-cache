<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>The Principle of Least Effort</title>
      <author>Matthew Lucas</author>
      <pubDate>Mon, 15 Nov 2021 14:15:32 +0000</pubDate>
      <link>https://dev.to/notmattlucas/the-principle-of-least-effort-ki0</link>
      <guid>https://dev.to/notmattlucas/the-principle-of-least-effort-ki0</guid>
      <description>&lt;p&gt;Start with two restaurants. They’re identical in almost every way — the same kind of location, same style and quality of food, same ambiance, same everything —but there is one key difference. The website of restaurant A has a very simple booking page right there at the front — when you want to book it’s instant. The website of restaurant B is full of mouth-watering snapshots of the menu, but any contact details are buried deep within the site and even then it’s just a phone number.&lt;/p&gt;

&lt;p&gt;Customers are lazy (and hungry), they take the path of least resistance. For restaurant A, since it’s trivial to book, customers are knocking the door down. Sadly, restaurant B, isn’t quite as popular. Because there is a barrier to entry a lot of customers give up and go elsewhere.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-principle-of-least-effort"&gt;
  &lt;/a&gt;
  The principle of least effort
&lt;/h2&gt;

&lt;p&gt;The principle of least effort can be found in a lot of disciplines — evolutionary biology, economics, psychology, software design.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“… animals, people, and even well-designed machines will naturally choose the path of least resistance or “effort”.” — Wikipedia&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The idea was best documented by researchers in the information science field. Their assertion was that someone looking for information will use the most convenient source, not necessarily the best or most comprehensive one. A user will use the tools that they are most familiar with or are nearest to hand as long as the information they receive meets some minimal standard.&lt;/p&gt;

&lt;p&gt;If you have a question, you’re likely to consult a friend with limited knowledge of a subject rather than tracking down an expert (e.g. a mechanic, financial advisor, medical professional, etc). It’s quicker and much less effort, not to mention less expensive.&lt;/p&gt;

&lt;p&gt;This goes some way to explain the scourge of misinformation spread by social media. Facebook, Twitter, Instagram, (Medium?) are very palatable, easy to consume, nagging you to take a look, and are curated by algorithms to suit your very specific tastes. A newspaper takes more effort to consume (and certainly has it’s fair share of issues) but reading an informative book, or even conducting research, takes a lot more effort so we commonly fall into the trap of consuming from the most poisonous source. Information is readily available on Facebook but it’s often the wrong information, hence the epidemic of populism, anti-vaxxers and the like.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#simple-communication"&gt;
  &lt;/a&gt;
  Simple communication
&lt;/h2&gt;

&lt;p&gt;One form of The Principle of Least Effort was popularized by the linguist George Zipf. Without diving deep into the probability, Zipf’s law has implications on the way we communicate.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“… neither speakers nor hearers using a given language want to work any harder than necessary to reach understanding …” — Zipf&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Communication is effort, and we don’t want to use any more energy than necessary doing it. Unfortunately business writing in particular, tends to be over-complex and full of jargon. Rather than trying to impress with your power over the language, keep emails and documentation simple. Keep them short and to the point.&lt;/p&gt;

&lt;p&gt;Rather than presenting a problem — which can be taxing for the reader to understand — present a few solutions. It’s far easier to pick from a couple of simple options than to completely digest and unpick a problem from first principles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#make-it-easy-to-do-the-right-thing"&gt;
  &lt;/a&gt;
  Make it easy to do the right thing
&lt;/h2&gt;

&lt;p&gt;Years ago I worked for an IT consultancy. Every week we had to fill in not one but three separate time-sheets, each for different departments! Guess how often everybody logged them all on time, if at all — never. It was a complete waste signing into three different applications to log the same information in triplicate.&lt;/p&gt;

&lt;p&gt;If something is difficult or time consuming, it won’t get done. If a shortcut is available, it’ll often get used as an alternative to an “official” process. This has implications for interface design, library design, security and more.&lt;/p&gt;

&lt;p&gt;A UI should lead its users to naturally perform the correct action. An API or library should be intuitive to use and should align closely with &lt;a href="https://notmattlucas.com/the-principle-of-least-astonishment-97fb95c0b57"&gt;The Principle of Least Astonishment&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Billion dollar businesses have even been built from this principle. In 2010, connecting to payment systems, such as PayPal, was frustrating and often involved tricky integrations. John and Patrick Collison founded Stripe with the aim of allowing software developers to plug-in with just a few lines of code. Developers flocked to Stripe because of the simplicity it provided, it became the path of least resistance. Stripe is now valued at 95 billion dollars!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further reading
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Principle_of_least_effort"&gt;The Principle of Least Effort — Wikipedia&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.thoughtco.com/principle-of-least-effort-zipfs-law-1691104"&gt;Zipfs Law — Thoughtco&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://unearnedwisdom.com/the-principle-of-least-effort-week-46-of-wisdom/"&gt;The Principle of Least Effort Week 46 of Wisdom — Unearned Wisdom&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.crowdspring.com/marketing-psychology/law-of-least-effort/"&gt;The Law of Least Effort — Crowdspring&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://martinfowler.com/articles/microservices.html#MakeItEasyToDoTheRightThing"&gt;Microservices, make it easy to do the right thing — Martin Fowler&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.britannica.com/topic/Zipfs-law"&gt;Zipfs Law — Britannica&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.forbes.com/sites/tomtaulli/2019/09/20/startup-lessons-how-stripe-created-a-35-billion-giant/?sh=63536d335060"&gt;Startup Lessons: How Stripe Created A $35 Billion Giant&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#a-final-word"&gt;
  &lt;/a&gt;
  A final word
&lt;/h2&gt;

&lt;p&gt;This post was written as part of a series on laws of software development for #PragProWriMo 2021 run by the &lt;a href="https://medium.com/@pragprog"&gt;The Pragmatic Programmers&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>architecture</category>
      <category>psychology</category>
      <category>design</category>
    </item>
    <item>
      <title>Liman Sunucu Sertifikası Ekleme</title>
      <author>Duygu Ölmez</author>
      <pubDate>Mon, 15 Nov 2021 14:02:01 +0000</pubDate>
      <link>https://dev.to/liman/liman-sunucu-sertifikasi-ekleme-597n</link>
      <guid>https://dev.to/liman/liman-sunucu-sertifikasi-ekleme-597n</guid>
      <description>&lt;p&gt;Liman MYS üzerine Sunucu Sertifikaları eklemek için aşağıdaki adımları takip etmek gerekmektedir&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Yetkili bir hesap ile Liman MYS arayüzüne giriş yapılır &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WBtTJ3Ir--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o5jkgis8awhq4arig4d8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WBtTJ3Ir--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o5jkgis8awhq4arig4d8.png" alt="Image description" width="880" height="447"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sistem Ayarları sayfasındaki &lt;code&gt;Sertifika Ekle&lt;/code&gt; sekmesi açılır. Eklenmek istenen SSL sertifikasının bulunduğu sunucu Ip ve port bilgisi doldurularak &lt;code&gt;Al&lt;/code&gt; butonuna basılır.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HPmvcYhY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bek875gbz5enhl0be6w4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HPmvcYhY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bek875gbz5enhl0be6w4.png" alt="Image description" width="880" height="459"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Seritifka bilgileri çekildikten sonra Sertifikayı Onayla butonuna basılır.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cpQZl2hD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/722nv0t0ejn7pa36v8c6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cpQZl2hD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/722nv0t0ejn7pa36v8c6.png" alt="Image description" width="880" height="278"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Crack CSS Interview</title>
      <author>cloudytech147</author>
      <pubDate>Mon, 15 Nov 2021 14:01:38 +0000</pubDate>
      <link>https://dev.to/cloudytech147/crack-css-interview-1jp6</link>
      <guid>https://dev.to/cloudytech147/crack-css-interview-1jp6</guid>
      <description>&lt;p&gt;CSS is one of the three mainstays of Front-End devices, and each web application and page utilizes it to shade and give a design to its skeleton HTML report. Each brilliant and very much planned page you see on the web is only a consequence of CSS code, eliminate CSS and you will get dark and unaligned text with white foundation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1JsWkbpg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/00cone7brfblfvsxwoi7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1JsWkbpg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/00cone7brfblfvsxwoi7.png" alt="css iq" width="653" height="246"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The interviewer may also ask about your experience with any of the CSS frameworks, so there you need to share your experience of working with CSS and one of its frameworks such as Bootstrap. While sharing your experience do not mention those tools on which you have never worked before.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.techgeekbuzz.com/css-interview-questions/"&gt;CSS interview questions&lt;/a&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;What is CSS?&lt;/li&gt;
&lt;li&gt;Give some advantages of CSS.&lt;/li&gt;
&lt;li&gt;What is the latest version of CSS?&lt;/li&gt;
&lt;li&gt;What is the file extension of CSS files?&lt;/li&gt;
&lt;li&gt;What are the different methods to integrate CSS on an HTML page?&lt;/li&gt;
&lt;li&gt;Why do we use the external method more than any other method?&lt;/li&gt;
&lt;li&gt;What is the Embedded style Sheet in CSS&lt;/li&gt;
&lt;li&gt;Give some Advantages of Embedded style sheets in CSS.&lt;/li&gt;
&lt;li&gt;What is the difference between an inline and an embedded style sheet?&lt;/li&gt;
&lt;li&gt;Give some limitations of CSS.&lt;/li&gt;
&lt;li&gt;Name Some frameworks of CSS&lt;/li&gt;
&lt;li&gt;What is the framework?&lt;/li&gt;
&lt;li&gt;What are the components we keep in mind when we use CSS to style HTML?&lt;/li&gt;
&lt;li&gt;What is a selector in CSS?&lt;/li&gt;
&lt;li&gt;What are the type and universal selectors?&lt;/li&gt;
&lt;li&gt;What is the Descendant selector in CSS?&lt;/li&gt;
&lt;li&gt;What are class selectors in CSS?&lt;/li&gt;
&lt;li&gt;What is a property in CSS?&lt;/li&gt;
&lt;li&gt;What is value in CSS?&lt;/li&gt;
&lt;li&gt;What is opacity in CSS?&lt;/li&gt;
&lt;li&gt;What % unit signifies in CSS value?&lt;/li&gt;
&lt;li&gt;What does cm mean in CSS value?&lt;/li&gt;
&lt;li&gt;Is CSS case sensitive?&lt;/li&gt;
&lt;li&gt;Name the format in which we can specify the colour in CSS&lt;/li&gt;
&lt;li&gt;What is a Declaration box in CSS?&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Generally, companies do not organize specific Jobs related to CSS or HTML, however, you can find jobs for JavaScript and its frameworks. CSS is a part of front-end development, and only in the front-end job interviews, you will find these questions.&lt;/p&gt;

</description>
      <category>css</category>
      <category>guide</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Liman Sunucusu DNS Değiştirme</title>
      <author>Duygu Ölmez</author>
      <pubDate>Mon, 15 Nov 2021 13:55:40 +0000</pubDate>
      <link>https://dev.to/liman/liman-sunucusu-dns-degistirme-4nbf</link>
      <guid>https://dev.to/liman/liman-sunucusu-dns-degistirme-4nbf</guid>
      <description>&lt;p&gt;Liman MYS Sunucusunun DNS'ini değiştirmek için aşağıdaki adımları takip etmek gerekmektedir.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Yetkili bir hesap ile Liman MYS arayüzüne giriş yapılır 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GS6G1num--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h9gryu36glvpme551jrn.png" alt="Image description" width="880" height="447"&gt;
&lt;/li&gt;
&lt;li&gt;Sistem Ayarları sayfasındaki &lt;code&gt;DNS Ayarları&lt;/code&gt; sekmesi açılır. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Cvf9wmD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ufu8xk9juhwzul01nghf.png" alt="Image description" width="880" height="458"&gt;
&lt;/li&gt;
&lt;li&gt;Dns ayarları girilerek Kaydet butonuna basılır.&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title>The Best Gojek Clone App Development Guide to Build A Productive Multi-services App</title>
      <author>georgedavid</author>
      <pubDate>Mon, 15 Nov 2021 13:47:40 +0000</pubDate>
      <link>https://dev.to/georgedavid02/the-best-gojek-clone-app-development-guide-to-build-a-productive-multi-services-app-b1b</link>
      <guid>https://dev.to/georgedavid02/the-best-gojek-clone-app-development-guide-to-build-a-productive-multi-services-app-b1b</guid>
      <description>&lt;p&gt;Multiservices apps in the existing market get huge fame among users. Because of its all-in-one purpose and convenience for different services booking, it is still in demand in several market regions across the world. This is why entrepreneurs today have highly searched for a better app development source for their business initiations in the same marketplace online. On that, their most selected stuff would be the Gojek clone app focusing on its mass advantages over others.&lt;/p&gt;

&lt;p&gt;So let’s discuss how you can productively build a new Gojek clone app for business apt to the current market scenario.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#research-on-new-ondemand-multiservices-market-demands"&gt;
  &lt;/a&gt;
  Research On New On-demand Multi-services Market Demands
&lt;/h2&gt;

&lt;p&gt;Before developing your new Gojek clone app for the existing market expectations, it is very much needed to analyze contemporary demands accordingly. For that, you could simply do the following before you go to the development segment. As well as making a new app output so productive, those are the primary things that every developer does constantly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Understanding Customer Pain Points&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Considering customers’ pain points is not only for us as developers but also for all the businesses whether online or offline. Following, you should consider the contemporary on-demand multi-services businesspeople’s primary demands like options for quick app launching online, cost-effectiveness in the development, and proper expert business guidance and support.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User Demands Analysing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As well, analyzing the existing multi-services app user demands is also major for your new app development outputs is so user-centric. That makes both you and your clients have a win-win multi-services app design and interface atmosphere. The foremost user requirement in modern time is an easy-to-use app, seamless performances, and fast details access.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Market Status Research&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Above all, researching the current market status is also essential for your business app development. Taking into consideration, the on-demand multi-services market in the existing scenario holds a high market value compared to others. And this is why energetic entrepreneurs today show their large amount of interest in investing in the achievable marketplace as mentioned.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Captivating Development Support Provisions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In application development, offering clients expected support and options always increase service friendliness in between any kind of market competition. As a result, your business productivity increases greatly in time. For that, you can offer some engaging development side of options as discussed like full app tailoring, expert support, and user-demands-oriented customer guidance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Utilizing Cutting-edge Technology Stacks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And secondly, selecting with the advanced tech stacks would offer you the benefit of providing your new apps’ output in the fastest way to the clients. Taking that into account, utilizing the recommended tech stacks as listed in the following makes your development powerful. As a result, you could achieve entrepreneurs’ pain points promptly in service.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#recommended-programming-languages"&gt;
  &lt;/a&gt;
  Recommended Programming Languages
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Php&lt;/strong&gt; - As we all know, the powerful scripting language can be used to build dynamic and interactive mobile apps. And, it is still recommended by the professional clone app developers in the market.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Swift&lt;/strong&gt; - Utilizing the Swift programming language, you can develop your new multi-services app for the Apple platform. It ensures the benefits such as being safe, fast, and expressive in business operations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GoLang&lt;/strong&gt; - The open-source programming language would be simple, reliable, and efficient in mobile apps or software creations. You can smartly use this for your new multiservice app building for profitable sustain.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#database-management-programs"&gt;
  &lt;/a&gt;
  Database Management Programs
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;MongoDB&lt;/strong&gt; - The NoSQL database management program is now widely used by clone app developers considering its large sets of distributed data. The tool assists to manage document accesses like storing or retrieving information.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt; - It is an advanced and enterprise-class open-source database. It supports both relational and non-relational SQLs. Most of the successful on-demand app-based services today get used to this stable database management system for high reliability. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MySQL&lt;/strong&gt; - This relational database management system is associated with the Php script language. It makes it possible for your new multi-services business app to speedily display real-time information to the users online.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#inbuilding-general-features-of-gojek-clone-app-to-the-latest-marketplace"&gt;
  &lt;/a&gt;
  In-building General Features of Gojek Clone App to the Latest Marketplace
&lt;/h2&gt;

&lt;p&gt;Thirdly, the final part, the general features add-ons. It is necessary to make your new Gojek clone app visible to the audience in an effective way. For that, some of the major and must-included app features are listed below. By in-building those to your new Gojek clone app make it so enhanced for launching services online, as well makes it so relevant to the current on-demand multi-services marketplace.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Smart User Registration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Enable social media integration option. And, offer users simply can log in using their name, email-id or/and mobile number.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Geolocation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Build your Gojek clone app with the Geolocation option. Through that, the service handlers can actively track customers’ locations for on-time presents.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Multi Payment&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Make your app capable of choosing both online and offline payment options.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Schedule Booking&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Include the schedule-based service booking options to the customers. Through this, they can book service handlers for a particular time slot.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Profile Customization&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Allow the service handlers to customize their own profile mentioning their needed things like professional photo update, the field of expertise, experience in services, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rates and Reviews&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Build your multiservice app with customer rates and reviews section. That assists next customers to get to know about the service experiences of others.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Different Service Categorization&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Enable different service categorizing solution options. So that the customers can easily get their needed services from relevant ones.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Smart User Control&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Offer the admin to easily handle their users with a smart user control option. For example, the admin should be able to add or remove any user under demand.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Special and Promotional Options&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Inbuild promotional options such as referral link generation, coupon codes, promo codes, and premier loyalty programs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dedicated Business Details&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The admin panel must be dedicated to business details like reporting, analytics, and other admin-side information for effective reviews.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#altogether"&gt;
  &lt;/a&gt;
  Altogether
&lt;/h2&gt;

&lt;p&gt;In this current market scenario, customers need just a single mobile app to book many services to their doorsteps. Such all-in-one multi-services business apps are now getting trendy day by day. The gigantic growth of the marketplace is consequently alluring entrepreneurs today.  Of them, you can offer a powerful &lt;a href="https://www.spotnrides.com/gojek-clone-script"&gt;Gojek clone app&lt;/a&gt; for their effective business launching online.&lt;/p&gt;

&lt;p&gt;In which, developing your new multiservice app for business with the discussed guidelines uplifts your brand visibility among rivals in a unique way.&lt;/p&gt;

</description>
      <category>software</category>
      <category>development</category>
      <category>android</category>
      <category>programming</category>
    </item>
    <item>
      <title>Is DevOps a legacy practice?</title>
      <author>Pablo Bermejo</author>
      <pubDate>Mon, 15 Nov 2021 13:46:37 +0000</pubDate>
      <link>https://dev.to/peibolsang/is-devops-a-legacy-practice-4g66</link>
      <guid>https://dev.to/peibolsang/is-devops-a-legacy-practice-4g66</guid>
      <description>&lt;p&gt;&lt;em&gt;(Cover picture credits: Sigmund @sigmund via Unsplash)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The idea of this article is expalined in detail in the book &lt;strong&gt;Building Software Platforms. A Guide to SaaS Transition with AWS&lt;/strong&gt; available on &lt;a href="https://leanpub.com/software-platforms"&gt;Leanpub&lt;/a&gt; and &lt;a href="https://www.amazon.com/dp/B09L56CZKD"&gt;Amazon&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;The commoditization of cloud compute and the proliferation (and adoption) of managed cloud services during the first years of the past decade enabled the co-evolution of other software engineering practices that helped teams build and release software faster. This progression eventually led to DevOps, a technique that has helped reduce the dependency on a centralized operations team during the software development lifecycle.&lt;/p&gt;

&lt;p&gt;But things have changed. We just don't &lt;em&gt;do cloud&lt;/em&gt; anymore. I mean, this is what we do 10 years ago when we spun up virtual machines on the cloud and installed Web servers, application containers, and other type of runtimes so we could deploy and run our applications. Under that context, DevOps emerged as a practice that co-evolved with the technology.&lt;/p&gt;

&lt;p&gt;Now, cloud providers offer those runtimes &lt;em&gt;as a service&lt;/em&gt; for us so we don't even need to spin the virtual machine hosts. It means that infrastructure resources are now utilities priced per use and accesible through a new whole set of programmatic APIs and infrastructure-as-code frameworks. This is known as &lt;em&gt;serverless&lt;/em&gt; and it is making the DevOps practice to co-evolve, the same way cloud did in the 2010s.&lt;/p&gt;

&lt;p&gt;To some extent, yes, &lt;strong&gt;DevOps is a legacy practice&lt;/strong&gt;. At least some bits of it, probably the most technical aspect of it related to the automation technologies. Because we know DevOps is much more than that. As &lt;a href="https://twitter.com/editingemily"&gt;Emily Freeman&lt;/a&gt; (author of DevOps for dummies) says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;"DevOps is an engineering culture of collaboration, ownership, and learning with the purpose of accelerating the software development lifecycle from ideation to production."&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#new-guiding-principles"&gt;
  &lt;/a&gt;
  New Guiding Principles
&lt;/h2&gt;

&lt;p&gt;We need new technical guiding principles. &lt;/p&gt;

&lt;p&gt;Let me put you an example. In a serverless context, what is an environment? How would you define your SDLC boxes if we don't have the concept of server instances anymore?&lt;/p&gt;

&lt;p&gt;Using an analogy with operating systems design, a lifecycle automation solution in a serverless architecture has close connections with traditional package managers. Similar to operating systems and other plug-in-based software, a package in this context is a self-contained unit that provisions the specific infrastructure that the application requires for running its business logic. &lt;/p&gt;

&lt;p&gt;The equivalent of a package in the context of cloud-based software would be the combination of the deployable artifacts that compose a given application and the scripts that perform the actual deployment. Therefore, the lifecycle automation management solution is a system that helps in producing the service artifacts, creates the packages, stores them in a central repository, enhances them with metadata, controls their versioning, manages their dependencies, and allows developers to perform &lt;em&gt;a-la-carte&lt;/em&gt; deployments.&lt;/p&gt;

&lt;p&gt;The following principles will help our modern development teams align with this view and come up with an efficient build and release process to build and deploy applications on serverless architectures with confidence.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Include both source code and binary artifacts under version control so that you can keep track of changes over time. We recommend using a distributed system for source code management (e.g., Git) so you can work on changes in parallel as a team before merging them, even when the network is unavailable. Use meaningful commits messages to describe the changes you are making (your future self will be thankful for that). Avoid having multiple long-lived branches and keep the mainline in a releasable state (e.g., favor Trunk-based development over GitFlow or GitOps). Only use short-lived branches for features and fixes that can be merged into the mainline once complete and tested.&lt;/li&gt;
&lt;li&gt;Use tools and platforms that allow developers to collaborate and contribute efficiently to developing the business services (e.g., GitHub). Incentive contribution mechanisms such as Pull Requests and use them as coaching opportunities. In that line, enhance source code repositories with all sorts of documentation that helps developers understand how they can contribute to the project, including Licensing, Notice, and Contributing guidelines.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Attempt small, incremental changes to the source code and integrate them often with the mainline. Write unitary and integration tests for your features and run them locally even before submitting a contribution to the mainline. You can configure the version control system so that the Continuous Integration (CI) pipeline automatically runs build, unit tests, integration tests, and code quality scan upon code commit (i.e., continuous integration).&lt;/p&gt;

&lt;p&gt;Also, you can design a build process for quick feedback and ring-fence the services' unit and integration tests by mocking all external dependencies. Use deployment preview techniques when available and applicable. You should be able to perform an additional quality check of your generated artifacts before deploying them in a natural environment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create &lt;em&gt;infrastructure-as-code&lt;/em&gt; repositories to run deterministic and consistent deployments that spin up the necessary cloud infrastructure to run the services and, at the same time, get all the artifacts deployed. Write fast and straightforward post-deployment tests that are executed automatically upon any deployment to exercise the service and its essential dependencies. You will have to work under the assumption that all the artifacts generated from the mainline are potential release candidates, so you must deploy services often and obtain quick feedback. Also, use auditable and traceable deployments to ensure you know what version of the services is running on each environment every time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It would be most excellent to have multiple deployment environments (e.g., SDLC stages) so you can phase the rollout of the software and ensure it is adequately tested. Configure your infrastructure-as-code repositories so that the CD (Continuous Deploy) pipeline automatically runs deployment, smoke tests, and performance tests upon artifact generation (i.e., continuous deployment).&lt;/p&gt;

&lt;p&gt;If you are working from a feature branch, deploy services on a cloud sandbox. Alternatively, if you are working from the mainline, deploy them through a lifecycle of environments where they can be promoted and tested until they reach the &lt;em&gt;release candidate&lt;/em&gt; status. This process will help you make sure a version of the software is not deployed to a later environment before being deployed and tested at an earlier stage.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;All these principles and the tools supporting them are highly available and accessible in the software development industry, to the point that some are even quite a standard. Despite this industrialization, how do you use those tools and the custom pieces you add on top of them make this solution a good platform capability.&lt;/p&gt;

&lt;p&gt;This new paradigm based on a &lt;em&gt;serviceful&lt;/em&gt; architecture running on serverless computing challenges the traditional concepts of environments since everything is composed of little and independent building blocks, including the infrastructure. &lt;/p&gt;

&lt;p&gt;Providing lifecycle automation management functionalities for the development teams will help them not worry about these new constructs, heavy-lifting all the environment provisioning, and promoting their artifacts from their workstations to production. This type of automation could be considered a core capability of internal software platforms and something you may be interested in building for the developers.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>aws</category>
      <category>cloud</category>
      <category>serverless</category>
    </item>
    <item>
      <title>Liman Eklentilerine Lisans Ekleme</title>
      <author>Duygu Ölmez</author>
      <pubDate>Mon, 15 Nov 2021 13:45:28 +0000</pubDate>
      <link>https://dev.to/liman/liman-eklentilerine-lisans-ekleme-3i1</link>
      <guid>https://dev.to/liman/liman-eklentilerine-lisans-ekleme-3i1</guid>
      <description>&lt;p&gt;Liman MYS üzerine eklenmiş eklentilere lisans ekleme için aşağıdaki adımları takip etmek gerekmektedirç&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Yetkili bir hesap ile Liman MYS arayüzüne giriş yapılır
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I_KP4Ki3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3v40eft97hhj216brl6.png" alt="Image description" width="880" height="447"&gt;
&lt;/li&gt;
&lt;li&gt;Sistem Ayarları sayfasındaki Eklentiler sekmesi açılır.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GjxmD6Uv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4vrhnigf6ribu2vu8mhv.png" alt="Image description" width="880" height="446"&gt;
&lt;/li&gt;
&lt;li&gt;Lisans eklenmek istenen eklentiye sağ tıklanarak &lt;code&gt;Lisans Ekle&lt;/code&gt; seçeneği seçilir.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g8m-vHTO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7dq1brc1r3vpt11s0pzq.png" alt="Image description" width="880" height="355"&gt;
&lt;/li&gt;
&lt;li&gt;Kurum tarafından size iletilen lisans aşağıdaki şekilde açılan kutucuğa yazılır eklenir. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MSwVxPID--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ehvty3xyjbh5qjx4qw4o.png" alt="Image description" width="880" height="210"&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title>The brag list, a great way to improve your performance</title>
      <author>Jelle Smeets</author>
      <pubDate>Mon, 15 Nov 2021 13:44:19 +0000</pubDate>
      <link>https://dev.to/smeetsmeister/the-brag-list-a-great-way-to-improve-your-performance-27kf</link>
      <guid>https://dev.to/smeetsmeister/the-brag-list-a-great-way-to-improve-your-performance-27kf</guid>
      <description>&lt;p&gt;In an ideal world, everyone has your achievements at the top of their mind. In your performance review, your manager knows all the good things you did during the year. As a result, he or she will reward you accordingly. In a more realistic world, this is not always the case. The expectation that everyone remembers every good thing you did is unrealistic. People forget things. Even managers who are there to review you. Maybe some of the things you did were not as visible as others. To help you make sure your good deeds do not go unnoticed, we have the brag list.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-brag-list"&gt;
  &lt;/a&gt;
  What is a brag list?
&lt;/h2&gt;

&lt;p&gt;A brag list is a document where you keep track of all the good things you did. The name sort of explains it, it contains all the things you can brag about. The list can be in any format you want. From my personal experience, I noticed I found it useful to include the date, a title, and a short summary of my role. As a result, I find it easier to remember the details at the end of the year.&lt;/p&gt;

&lt;p&gt;The first time I heard about a brag list was from a coworker. He was using this to keep track of all the things he did during the year. And as a result, he could always summarize pretty well his year-round performance.&lt;/p&gt;

&lt;p&gt;To make sure you will not forget to add things to your list, make it a regular activity. In the same way as a retrospective, it is satisfying to stop and reflect on the last period. You can make it a recurring calendar event to update your brag list every two weeks. Or whatever period works for you.&lt;/p&gt;

&lt;p&gt;Some examples that could be on a brag list:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mentorred an intern.&lt;/li&gt;
&lt;li&gt;Fixed a big security issue.&lt;/li&gt;
&lt;li&gt;Help team X when their project was in need.&lt;/li&gt;
&lt;li&gt;Fixed that important production incident.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8UZAfk8s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vf78xybiy8ble7elmh7h.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8UZAfk8s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vf78xybiy8ble7elmh7h.jpg" alt="Writing a brag list" width="640" height="426"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What writing your brag list could look like&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits"&gt;
  &lt;/a&gt;
  Benefits
&lt;/h2&gt;

&lt;p&gt;All humans are influenced by recency bias. As a result, we will favor recent events over historical events.&lt;/p&gt;

&lt;p&gt;If your performance is only reviewed once or twice a year like mine. You are likely to experience recency bias. As a result, your manager will probably not remember what you did at the beginning of the year. But he is able to recall current events. To make sure you don't lose out on these events, keep your brag list up to date. In the period before your review send it to your manager to remind him or her of all your good things during the year.&lt;/p&gt;

&lt;p&gt;Another benefit of having a brag list is to remind yourself of all the awesome things you did. Just like your manager, you will likely suffer from recency bias. I sometimes look at my brag list, and all of a sudden remember the awesome things I did months ago. As a result of recency bias, I already forgot about those achievements.&lt;/p&gt;

&lt;p&gt;A brag list can be a great way to remind yourself of all the positive things you did. Use it during your performance review to make sure your manager knows as well. You deserve it after all! Did you already use a brag list, or did this post convince you to start one? Let me know in the comments below.&lt;/p&gt;

&lt;p&gt;If you are interested in more of my blog posts I recommend checking my blog post on &lt;a href="https://blog.jellesmeets.nl/articles/are-recruiters-worth-it-in-the-tech-world/"&gt;Recruiters in the tech world&lt;/a&gt; or &lt;a href="https://blog.jellesmeets.nl/newsletter-signup/"&gt;signing up for the newsletter&lt;/a&gt; to never have to miss another post!&lt;/p&gt;

</description>
      <category>career</category>
      <category>beginners</category>
      <category>productivity</category>
      <category>performancereview</category>
    </item>
    <item>
      <title>The Five Dysfunctions of an Engineering Team</title>
      <author>Tyler Hawkins</author>
      <pubDate>Mon, 15 Nov 2021 13:34:46 +0000</pubDate>
      <link>https://dev.to/thawkin3/the-five-dysfunctions-of-an-engineering-team-3a60</link>
      <guid>https://dev.to/thawkin3/the-five-dysfunctions-of-an-engineering-team-3a60</guid>
      <description>&lt;p&gt;Every team has some level of dysfunction. And that’s normal, because teams are made of imperfect human beings. In his book &lt;em&gt;The Five Dysfunctions of a Team&lt;/em&gt;, Patrick Lencioni identifies these five basic dysfunctions:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Absence of Trust&lt;/li&gt;
&lt;li&gt;Fear of Conflict&lt;/li&gt;
&lt;li&gt;Lack of Commitment&lt;/li&gt;
&lt;li&gt;Avoidance of Accountability&lt;/li&gt;
&lt;li&gt;Inattention to Results&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These dysfunctions build upon each other. A team that doesn’t trust each other is afraid to admit their shortcomings and mistakes. Teams like this aren’t vulnerable around each other. This leads to a fear of conflict, where ideas are not openly debated and bad behaviors are not called out for fear of offending someone. Rather than solving underlying problems, the team experiences growing tension manifested by occasionally passive aggressive remarks.&lt;/p&gt;

&lt;p&gt;Because ideas aren’t openly discussed, there is very little buy-in from team members, and so they aren’t fully committed to any agreements. This leads to an avoidance of accountability, since it’s hard to hold someone accountable to a standard that they never really agreed to in the first place. All of this results in an inattention to results where the team fails to accomplish their most meaningful goals.&lt;/p&gt;

&lt;p&gt;In this article, I’d like to examine these dysfunctions in the context of a software engineering team. Because believe it or not, software engineers are flawed human beings too.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#absence-of-trust"&gt;
  &lt;/a&gt;
  Absence of Trust
&lt;/h2&gt;

&lt;p&gt;Software engineers need to be able to trust each other. This includes trusting that your team members are on top of their work and can be relied upon to get their work done on time and correctly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When members of an engineering team don’t trust each other:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Team members hide their mistakes out of fear&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The team lead frequently follows up with team members to make sure the work is being done&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The team lead serves as the gatekeeper who reviews all merge requests before code can be merged&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Team members become protective of areas of the software application in which they’ve worked and don’t like anyone else touching their code&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;But when they do trust each other:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Team members catch their mistakes quickly, discuss them openly, and resolve them speedily&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Each team member shows ownership over their work, reaching out for help when needed while still owning the solution and ensuring that the work gets done&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;All team members review each other’s code, and any team member’s stamp of approval on a merge request is good enough to allow code to be merged&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Any team member can work in any part of the codebase&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#fear-of-conflict"&gt;
  &lt;/a&gt;
  Fear of Conflict
&lt;/h2&gt;

&lt;p&gt;Every software engineering team needs a healthy amount of conflict. You might argue that a team which is perfectly aligned and agrees on all issues has no need for conflict, which is technically true, but I have yet to meet a team like this. After all, engineers are known for being opinionated.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When members of an engineering team have a fear of conflict:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Team members don’t bring up process issues or other efficiency problems&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Team meetings are boring and without much discussion&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Team members allow toxic behaviors to go unchecked&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Low performers bring down the team by making the same mistakes over and over and wasting their team members’ time&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Morale decreases&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;But when conflict is embraced:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Team members always seek to improve the way they do things and look for outdated processes that should be changed&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Team meetings are filled with lively discussion and sometimes heated debate (but always focusing on tangible issues, not general attacks on each other)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Team members call out toxic behavior and don’t tolerate any form of bullying or verbal abuse&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Low performers are held accountable to the team’s standards and are told how their behavior affects the rest of the team&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Morale increases&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#lack-of-commitment"&gt;
  &lt;/a&gt;
  Lack of Commitment
&lt;/h2&gt;

&lt;p&gt;Software engineering teams need to be committed to the goals that they’ve set. But if there’s no honest discussion when goals are made, there’s no buy-in from each team member to actually accomplish these goals.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When members of an engineering team show a lack of commitment:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sprint goals and deadlines are frequently missed&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Team members often work on the wrong things&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Code-quality standards are not followed, and shortcuts are taken &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;But when every team member is committed to accomplishing the team’s goals:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sprint goals and deadlines are generally met (with the occasional delay)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Each team member is working on the most important thing at any given time&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Code-quality standards are agreed upon and followed (and enforced by code formatters, linters, and test suites run in continuous integration pipelines)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#avoidance-of-accountability"&gt;
  &lt;/a&gt;
  Avoidance of Accountability
&lt;/h2&gt;

&lt;p&gt;Software engineering teams need to hold each team member to the standards that they’ve agreed to.&lt;/p&gt;

&lt;p&gt;An avoidance of accountability stems largely from a fear of conflict. It’s important to remember though that when we talk about accountability, we don’t mean punishing someone any time they make a mistake. We also don’t mean you have to be rude about it. You can hold someone accountable while still treating them with respect.&lt;/p&gt;

&lt;p&gt;Holding each other accountable means having an honest and open discussion when someone isn’t pulling their weight or is dragging the team down. These conversations don’t have to wait until tensions have grown until everyone is at their breaking point. They can happen immediately for the smallest behaviors in the form of respectable micro-doses of feedback. Being clear is not being mean.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When members of an engineering team avoid accountability:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Important tasks don’t get done&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Low performers drag the team down&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The team’s overall velocity decreases&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Standards are ignored and code quality decreases&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The team lead or manager is the only one who addresses poor performance or other bad behavior&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;But when team members do hold each other accountable:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Important tasks are completed&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Low performers are encouraged to improve or to move on&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The team’s overall velocity increases&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Standards are upheld and code quality remains high&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;All team members feel comfortable holding one another accountable, not just the team lead&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#inattention-to-results"&gt;
  &lt;/a&gt;
  Inattention to Results
&lt;/h2&gt;

&lt;p&gt;Software engineering teams need to be focused on results. Engineers don’t complete tasks just as busywork — they build things to deliver value to their customers and to solve problems.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When members of an engineering team show an inattention to results:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sprint goals and deadlines are often missed&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lots of work may get done, but it may be the wrong work or low impact work&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Team members don’t show an interest in or ownership of their work&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Each team member seems to be moving in a different direction&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;But when team members show a strong attention to results:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sprint goals and deadlines are generally met (with the occasional delay)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lots of work gets done, and it’s the right work, the most important work&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Each team member shows ownership over their work and pride in doing a good job&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The members of a team are working toward a shared goal and are not simply a collection of individuals but a team&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;All teams exhibit some level of dysfunction, and that’s perfectly normal. But if you want to get better as a team, the first step is having an open and honest conversation about these dysfunctions. Identify your team’s strengths and weaknesses, and make a plan to improve.&lt;/p&gt;

&lt;p&gt;Overcoming the five dysfunctions of a software engineering team is incredibly simple in theory and yet very difficult in practice. And that’s exactly what it takes to get better at this — practice, practice, practice.&lt;/p&gt;

</description>
      <category>leadership</category>
      <category>career</category>
      <category>books</category>
      <category>motivation</category>
    </item>
    <item>
      <title>Getting started with Minimal APIs in .Net 6</title>
      <author>Mohamad Lawand</author>
      <pubDate>Mon, 15 Nov 2021 13:24:40 +0000</pubDate>
      <link>https://dev.to/moe23/getting-started-with-minimal-apis-in-net-6-4mi4</link>
      <guid>https://dev.to/moe23/getting-started-with-minimal-apis-in-net-6-4mi4</guid>
      <description>&lt;h3&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h3&gt;

&lt;p&gt;This week Microsoft has released .Net 6, which is major mile stone. .Net 6 is an LTS release which means its support for the next 3 years.&lt;/p&gt;

&lt;p&gt;Part of this major release Asp.Net Core Minimal API where released. In this video we will take a look at Minimal API discuss what they are how do they work and how we can get started with it.&lt;/p&gt;

&lt;p&gt;You can watch the full video on Youtube&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Ny2q79eD6OI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;You can get the source code on GitHub using the link below&lt;br&gt;
&lt;a href="https://github.com/mohamadlawand087/v52-minimalAPi"&gt;https://github.com/mohamadlawand087/v52-minimalAPi&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So what are we going to cover today:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is Minimal API&lt;/li&gt;
&lt;li&gt;Benefits of Minimal API&lt;/li&gt;
&lt;li&gt;Ingredients&lt;/li&gt;
&lt;li&gt;Code time&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As always you will find the source code in the description down below. Please like, share and subscribe if you like the video. It will really help the channel&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-is-minimal-api"&gt;
  &lt;/a&gt;
  What is Minimal API
&lt;/h3&gt;

&lt;p&gt;It is a fresh new approach to building APIs without all the complex structure of MVC, it could seems like a prototyping tool for some but for other it could look like a stepping stone into the world of APIs.&lt;/p&gt;

&lt;p&gt;Minimal simply means that it contains the essential components needed to build HTTP APIs. Basically with minimal API all you need is a csproj and a program.cs to get started&lt;/p&gt;

&lt;p&gt;Minimal API uses the power of C# 9 and .NET 6.0 it combines Top Level statement and Lambda Attributes of C# and abstracting alot of the pipeline and  configuration of MVC&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#benefit-of-minimal-api"&gt;
  &lt;/a&gt;
  Benefit of Minimal API
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Reduce complexity&lt;/li&gt;
&lt;li&gt;Reduce ceremony for all developers&lt;/li&gt;
&lt;li&gt;Easy to get started: all you need is the Program.cs and your csproj and 3 lines of code to create your first API&lt;/li&gt;
&lt;li&gt;Its powered by .Net 6 and C# 10 so all of the latest improvements and functionalities are supported out of the box&lt;/li&gt;
&lt;li&gt;API without controllers&lt;/li&gt;
&lt;li&gt;Performance: since the application is so simple alot og bootstrapping that is required to build and compile the application is simplified which means the application runs much faster&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#ingredients"&gt;
  &lt;/a&gt;
  Ingredients
&lt;/h3&gt;

&lt;p&gt;dotnet 6 SDK&lt;/p&gt;

&lt;p&gt;First we will create our application&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet new webapi &lt;span class="nt"&gt;-minimal&lt;/span&gt; &lt;span class="nt"&gt;-o&lt;/span&gt; TodoApi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let us open this in Visual Studio Code and we can examin the file structure, as we can see the folder structure is way smaller then normal APIs, no more startup class or controller folders all we have is a Program.cs&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6S3pF0Lp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rgbfygpt0ayefgshlyrz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6S3pF0Lp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rgbfygpt0ayefgshlyrz.png" alt="Image description" width="522" height="394"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let us now Open Program.cs and clear everything from it so we can build a very simple API wi the less then 4 lines of code (Yeah its a crazy world)&lt;/p&gt;

&lt;p&gt;The first thing we will need is to have a Web application builder&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Initialise a web application from our console application&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WebApplication&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;CreateBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;Build&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// Map the default route&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapGet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;"Hello friends"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// run the application&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us run this, inside our terminal&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;dotnet&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With these 3 lines of code we now have a fully working api which can be shipped to production in theory.&lt;/p&gt;

&lt;p&gt;Now let us expand on this implementaion to create our todo API, the first thing we will need is a data type to hold which we will use for the to do, so let us create one&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;Completed&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is to create our in memory database&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ItemRepository&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;Dictionary&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_items&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Dictionary&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;ItemRepository&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;item1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Go to the gym"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;item2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Buy bread"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;item3&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Watch TV "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;_items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;_items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;_items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IEnumerable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetAll&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Values&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Item&lt;/span&gt; &lt;span class="nf"&gt;GetById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Item&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="n"&gt;_items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Item&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we added the repository we will need to register it with our application, we will modify our first 2 lines to the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;builder&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WebApplication&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;CreateBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddSingleton&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemRepository&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Build&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The reason we did this so we can utilise the builder to do some dependency injection instead of us manually injecting the repositories and handeling the life cycle.&lt;/p&gt;

&lt;p&gt;Now that we have finished the setup of our repository and did all of the configuration its time to create the endpoints of our application.&lt;/p&gt;

&lt;p&gt;We will start by creating the GetAll items which basically returns all of the items in our todo list&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapGet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/items"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;FromServices&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;ItemRepository&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetAll&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we will add the get by id&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapGet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/items/{id}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;FromServices&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;ItemRepository&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;NotFound&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we need to create an item&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapPost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/items"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;FromServices&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;ItemRepository&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Item&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Created&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;$"/items/&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we need to update an item&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapPut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/items/{id}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;FromServices&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;ItemRepository&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Item&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;NotFound&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally let us add the delete endpoint&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapDelete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/items/{id}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;FromServices&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;ItemRepository&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;NotFound&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;NoContent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have completed the main endpoints let us see how we can convert our in memory db into an actual SQLite db&lt;/p&gt;

&lt;p&gt;Will start by adding some nuget package&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet add package Microsoft.EntityFrameworkCore.Sqlite 
dotnet add package Microsoft.EntityFrameworkCore.Design
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;first we need to add the connection string, inside our app settings let us add the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"ConnectionStrings"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"DefaultConnection"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"DataSource=app.db;"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside our Program.cs let us create a db context which will utilise the item record&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ApiDbContext&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DbContext&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;virtual&lt;/span&gt; &lt;span class="n"&gt;DbSet&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Items&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;ApiDbContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DbContextOptions&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ApiDbContext&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;base&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then inside our Program.cs let us add the following so we are able to connect to the database&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;connectionString&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Configuration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetConnectionString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"DefaultConnection"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddDbContext&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ApiDbContext&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
                &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseSqlite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connectionString&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us a migration and create the database&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet ef migrations add &lt;span class="s2"&gt;"initial migration"&lt;/span&gt;
dotnet ef database update
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us update our code to the following and remove the old repository implementation&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Replace the recod with a class&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Item&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;completed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;Title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;Completed&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;completed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Title&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;Completed&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapGet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/items"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToListAsync&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapGet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/items/{id}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;FindAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;Item&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;NotFound&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapPost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/items"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Item&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SaveChangesAsync&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Created&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;$"/items/&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapPut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/items/{id}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Item&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;existItem&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;FindAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;existItem&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;NotFound&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="n"&gt;existItem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;existItem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Completed&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Completed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SaveChangesAsync&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;NoContent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapDelete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/items/{id}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;FindAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;Item&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SaveChangesAsync&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;NoContent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;NotFound&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>dotnet</category>
      <category>minimalapi</category>
      <category>dotnet6</category>
      <category>csharp</category>
    </item>
    <item>
      <title>Query in Apache CouchDB: Clouseau</title>
      <author>Jordan Soo Yen Yih</author>
      <pubDate>Mon, 15 Nov 2021 13:14:01 +0000</pubDate>
      <link>https://dev.to/yenyih/query-in-apache-couchdb-clouseau-41ll</link>
      <guid>https://dev.to/yenyih/query-in-apache-couchdb-clouseau-41ll</guid>
      <description>&lt;p&gt;In previous articles, we have talk about how to query with CouchDB Views and Mango Query. Both methods are working very well and able to cover a lot of use cases. Why Clouseau?&lt;/p&gt;

&lt;p&gt;There are still very limited for CouchDB Views and Mango Query when we talk about search, there are a lot of complex searching required which makes the Views function and Mango Index more complex and harder to build, at the same time need to have a great search performance. You are still able to build your own search engine from scratch with Mango and Views. However it is very tough and you have to put a lot of resources to build a good search engine, ton of work like text preprocessing, tokenization, algorithm, ranking and etc...😰&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e62JYe7f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5z4wlkbl16xv63b0qa8x.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e62JYe7f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5z4wlkbl16xv63b0qa8x.gif" alt="out_of_control_gif" width="499" height="499"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#thanks-to-clouseau-brought-couchdb-search-to-the-next-level"&gt;
  &lt;/a&gt;
  Thanks to Clouseau brought CouchDB search to the next level🥳
&lt;/h2&gt;

&lt;p&gt;Start from CouchDB v3, CouchDB can build and query full-text search indexes using an external Java service that embeds Apache Lucene. If you have been already familiar with Elasticsearch, then it is very easy for you to catch up with CouchDB + Clouseau as they are using the same Lucene Syntax.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;To setup Clouseau works together with CouchDB, you may refer to the official docs &lt;a href="https://docs.couchdb.org/en/stable/install/search.html#install-search"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-use"&gt;
  &lt;/a&gt;
  How to use?
&lt;/h2&gt;

&lt;p&gt;It is like Mango Query, create a design document for the search index function, then search with the index function.&lt;/p&gt;

&lt;p&gt;Example Search Index Function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function(document) {
    index("default", document._id);
    if (document.title) {
        index("title", document.title, {"store": true});
    }
    if (document.status) {
        index("status", document.status, { "store": false });
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Design Document in full view:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "_id": "_design/search",
  "_rev": "1-15807c8c7e310b566c0a41997d79b7fd",
  "views": {},
  "language": "javascript",
  "indexes": {
    "posts": {
      "analyzer": "standard",
      "index": "function(doc) {\r\n    index(\"default\", doc._id);\r\n    if (doc.status) {\r\n        index(\"status\", doc.status, { \"store\": false });\r\n    }\r\n    if (doc.title) {\r\n        index(\"title\", doc.title, {\"store\": true});\r\n    }\r\n}"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above search index function allows us to search with document ID, title and status. By default it is searching with document ID if we didn't provide any key. The &lt;em&gt;"store"&lt;/em&gt; with boolean we pass in in the third argument is to indicate whether you want to return the value in the search result, the default value is false.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;GET /YOUR_DATABASE_NAME/_design/search/_search/posts?q=ea885d7d-7af2-4858-b7bf-6fd01bcd4544
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Result:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "total_rows": 1,
  "bookmark": "g2wAAAABaANkABFjb3VjaGRiQDEyNy4wLjAuMWwAAAACYQBuBAD_____amgCRj_6gH-AAAAAYQFq",
  "rows": [
    {
      "id": "ea885d7d-7af2-4858-b7bf-6fd01bcd4544",
      "order": [
        1.6563715934753418,
        1
      ],
      "fields": {
        "title": "Post Two Title"
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let us try to search with post's status:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;GET /YOUR_DATABASE_NAME/_design/search/_search/posts?q=status:submitted
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Result:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "total_rows": 2,
  "bookmark": "g2wAAAABaANkABFjb3VjaGRiQDEyNy4wLjAuMWwAAAACYQBuBAD_____amgCRj_0mliAAAAAYQJq",
  "rows": [
    {
      "id": "c2ec3b79-d9ac-45a8-8c68-0f05cb3adfac",
      "order": [
        1.287682056427002,
        0
      ],
      "fields": {
        "title": "Post One Title"
      }
    },
    {
      "id": "4a2348ca-f27c-427f-a490-e29f2a64fdf2",
      "order": [
        1.287682056427002,
        2
      ],
      "fields": {
        "title": "Post Three Title"
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#analyzers"&gt;
  &lt;/a&gt;
  Analyzers📈
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Analyzers are settings that define how to recognize terms within text. Analyzers can be helpful if you need to &lt;a href="https://docs.couchdb.org/en/stable/ddocs/search.html#ddoc-search-language-specific-analyzers"&gt;index multiple languages&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are 6 analyzers that are supported by the search:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;classic&lt;/strong&gt; - The standard Lucene analyzer, circa release 3.1.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;email&lt;/strong&gt; - Like the &lt;em&gt;standard&lt;/em&gt; analyzer, but tries harder to match an email address as a complete token.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;keyword&lt;/strong&gt; - Input is not tokenized at all.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;simple&lt;/strong&gt; - Divides text at non-letters.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;standard&lt;/strong&gt; - The default analyzer. It implements the Word Break rules from the &lt;a href="http://www.unicode.org/reports/tr29/"&gt;Unicode Text Segmentation algorithm&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;whitespace&lt;/strong&gt; - Divides text at white space boundaries.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Based on your use cases to pick the suitable analyzer for your search index.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#geographical-searches%F0%9F%97%BA"&gt;
  &lt;/a&gt;
  Geographical Searches🗺
&lt;/h2&gt;

&lt;p&gt;Besides that, you can also do geographical searches in CouchDB with Lucene's built-in geospatial capabilities.😍&lt;/p&gt;

&lt;p&gt;Example geographical data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "name":"Aberdeen, Scotland",
    "lat":57.15,
    "lon":-2.15,
    "type":"city"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Example search index for the geographic data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function(doc) {
    if (doc.type &amp;amp;&amp;amp; doc.type == 'city') {
        index('city', doc.name, {'store': true});
        index('lat', doc.lat, {'store': true});
        index('lon', doc.lon, {'store': true});
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;HTTP Request:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;GET /YOUR_DATABASE_NAME/_design/YOUR_DESIGN_DOC_NAME/_search/SEARCH_INDEX_NAME?q=lat:[0+TO+90]&amp;amp;sort="&amp;lt;distance,lon,lat,-74.0059,40.7127,km&amp;gt;"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Abbreviated Result:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "total_rows": 205,
    "bookmark": "g1A...XIU",
    "rows": [
        {
            "id": "city180",
            "order": [
                8.530665755719783,
                18
            ],
            "fields": {
                "city": "New York, N.Y.",
                "lat": 40.78333333333333,
                "lon": -73.96666666666667
            }
        },
        {
            "id": "city177",
            "order": [
                13.756343205985946,
                17
            ],
            "fields": {
                "city": "Newark, N.J.",
                "lat": 40.733333333333334,
                "lon": -74.16666666666667
            }
        },
        {
            "id": "city178",
            "order": [
                113.53603438866077,
                26
            ],
            "fields": {
                "city": "New Haven, Conn.",
                "lat": 41.31666666666667,
                "lon": -72.91666666666667
            }
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  Thank you for reading.
&lt;/h2&gt;

&lt;p&gt;There are more you can do with CouchDB search. Do checkout the official documentation &lt;a href="https://docs.couchdb.org/en/stable/ddocs/search.html"&gt;here&lt;/a&gt; and also &lt;a href="https://lucene.apache.org/core/4_3_0/queryparser/org/apache/lucene/queryparser/classic/package-summary.html#Overview"&gt;Lucene Syntax&lt;/a&gt; as CouchDB search query syntax is using the Lucene Syntax.😊&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ma4Speot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sl9lfxeybit04rvku20.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ma4Speot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sl9lfxeybit04rvku20.gif" alt="thats_all_folk" width="499" height="366"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>database</category>
      <category>beginners</category>
      <category>node</category>
    </item>
    <item>
      <title>Localize (i18n) your Svelte App with Tolgee. You will save a lot of time.</title>
      <author>Jan Cizmar</author>
      <pubDate>Mon, 15 Nov 2021 13:04:22 +0000</pubDate>
      <link>https://dev.to/tolgee_i18n/localize-i18n-your-svelte-app-with-tolgee-you-will-save-a-lot-of-time-1g06</link>
      <guid>https://dev.to/tolgee_i18n/localize-i18n-your-svelte-app-with-tolgee-you-will-save-a-lot-of-time-1g06</guid>
      <description>&lt;p&gt;Localization is tricky part of application development. Using Tolgee open-source tool you can save a lot of time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tolgee-features"&gt;
  &lt;/a&gt;
  Tolgee Features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;All in One localization solution for your Svelte application 🙌&lt;/li&gt;
&lt;li&gt;Out of box in-context localization 🎉&lt;/li&gt;
&lt;li&gt;Automated screenshot generation 📷&lt;/li&gt;
&lt;li&gt;Translation management platform 🎈&lt;/li&gt;
&lt;li&gt;Open-source and self-hosted 🔥&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#svelte-integration"&gt;
  &lt;/a&gt;
  Svelte integration
&lt;/h2&gt;

&lt;p&gt;We have just implemented and documented Svelte integration, so now you can translate your Svelte application in dead simple way.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-started-on-tolgee-for-svelte"&gt;
  &lt;/a&gt;
  Get started on &lt;a href="https://tolgee.io/tolgee-for-svelte"&gt;Tolgee for Svelte&lt;/a&gt;! 🎉
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#or-check-out-svelte-tolgee-example-app"&gt;
  &lt;/a&gt;
  Or check out &lt;a href="https://github.com/tolgee/svelte-example"&gt;Svelte + Tolgee Example app&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;We will be happy for any feedback! 🙏&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Like it? 😊 Please star our projects on Github. It would help a lot 🙏 &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/tolgee/tolgee-js"&gt;Tolgee JS (integrations monorepo) GitHub ⭐&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/tolgee/server"&gt;Tolgee Server (the platform) GitHub ⭐&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Disclaimer: I am founder of Tolgee.&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>javascript</category>
      <category>opensource</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
