<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Cypress Best Practices</title>
      <author>Jordan Powell</author>
      <pubDate>Wed, 10 Nov 2021 18:57:05 +0000</pubDate>
      <link>https://dev.to/cypress/cypress-best-practices-55j0</link>
      <guid>https://dev.to/cypress/cypress-best-practices-55j0</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/PPZSySI5ooc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#organizing-tests-logging-in-controlling-state"&gt;
  &lt;/a&gt;
  Organizing Tests, Logging In, Controlling State
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Anti-Pattern:&lt;/strong&gt; Sharing page objects, using your UI to log in, and not taking shortcuts.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Best Practice:&lt;/strong&gt; Test specs in isolation, programmatically log into your application, and take control of your application's state.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#selecting-elements"&gt;
  &lt;/a&gt;
  Selecting Elements
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Anti-Pattern:&lt;/strong&gt; Using highly brittle selectors that are subject to change.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Best Practice:&lt;/strong&gt; Use &lt;code&gt;data-*&lt;/code&gt; attributes to provide context to your selectors and isolate them from CSS or JS changes&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Selector&lt;/th&gt;
&lt;th&gt;Recommended&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cy.get('button').click()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Never&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Worst - too generic, no context&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cy.get('.btn.btn-large').click()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Never&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Bad. Coupled to styling. Highly subject to change&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cy.get('#main').click()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Sparingly&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Better. But still coupled to styling or JS event listeners.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cy.get('[name=submission]').click()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Sparingly&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Coupled to the name attribute which has HTML semantics.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cy.contains('Submit').click()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Depends&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Much better. But still coupled to text content that may change.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cy.get('[data-cy=submit]').click()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Always&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Best. Isolated from all changes.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#assigning-return-values"&gt;
  &lt;/a&gt;
  Assigning Return Values
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Anti-Pattern:&lt;/strong&gt; Trying to assign the return value of Commands with &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, or &lt;code&gt;var&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Best Practice:&lt;/strong&gt; Use &lt;a href="https://docs.cypress.io/guides/core-concepts/variables-and-aliases"&gt;closures to access and store&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#visiting-external-sites"&gt;
  &lt;/a&gt;
  Visiting External Sites
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Anti-Pattern:&lt;/strong&gt; trying to visit or interact with sites or servers you do not control&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Best Practice:&lt;/strong&gt; Only test what you control. Try to avoid requiring a 3rd party server. When necessary, always use &lt;code&gt;cy.request()&lt;/code&gt; to talk to 3rd party servers via their APIs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#having-tests-rely-on-the-state-of-previous-tests"&gt;
  &lt;/a&gt;
  Having tests rely on the state of previous tests
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Anti-Pattern:&lt;/strong&gt; Coupling multiple tests together&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Best Practice:&lt;/strong&gt; Tests should always be able to be run independently from one another &lt;strong&gt;and still pass.&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#creating-tiny-tests-with-a-single-assertion"&gt;
  &lt;/a&gt;
  Creating "tiny" tests with a single assertion
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Anti-Pattern:&lt;/strong&gt; Acting like you're writing unit tests.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Best Practice:&lt;/strong&gt; Add multiple assertions and don't worry about it&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#using-raw-after-endraw-or-raw-aftereach-endraw-hooks"&gt;
  &lt;/a&gt;
  Using &lt;code&gt;after&lt;/code&gt; or &lt;code&gt;afterEach&lt;/code&gt; hooks
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Anti-Pattern:&lt;/strong&gt; Using &lt;code&gt;after&lt;/code&gt; or &lt;code&gt;afterEach&lt;/code&gt; hooks to clean up state.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Best Practice:&lt;/strong&gt; Clean up state &lt;strong&gt;before&lt;/strong&gt; tests run.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#unnecessary-waiting"&gt;
  &lt;/a&gt;
  Unnecessary Waiting
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Anti-Pattern:&lt;/strong&gt; Waiting for arbitrary time periods using &lt;code&gt;cy.wait(Number)&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Best Practice:&lt;/strong&gt; Use route aliases or assertions to guard Cypress from proceeding until an explicit condition is met&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#web-servers"&gt;
  &lt;/a&gt;
  Web Servers
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Anti-Pattern:&lt;/strong&gt; Trying to start a web server from within Cypress scripts with &lt;code&gt;cy.exec()&lt;/code&gt; or &lt;code&gt;cy.task()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Best Practice:&lt;/strong&gt; Start a web server prior to running Cypress&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#setting-a-global-baseurl"&gt;
  &lt;/a&gt;
  Setting a global baseUrl
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Anti-Pattern:&lt;/strong&gt; Using &lt;code&gt;cy.visit()&lt;/code&gt; without setting a &lt;code&gt;baseUrl&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Best Practice:&lt;/strong&gt; Set a &lt;code&gt;baseUrl&lt;/code&gt; in your &lt;a href="https://docs.cypress.io/guides/references/configuration"&gt;configuration file (cypress.json by default)&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can read our entire Best Practices Guide at &lt;a href="https://docs.cypress.io/guides/references/best-practices"&gt;https://docs.cypress.io/guides/references/best-practices&lt;/a&gt;&lt;/p&gt;

</description>
      <category>testing</category>
      <category>javascript</category>
      <category>e2e</category>
      <category>bestpractices</category>
    </item>
    <item>
      <title>Welcome Thread - v150</title>
      <author>dev.to staff</author>
      <pubDate>Wed, 10 Nov 2021 18:54:58 +0000</pubDate>
      <link>https://dev.to/thepracticaldev/welcome-thread-v150-33go</link>
      <guid>https://dev.to/thepracticaldev/welcome-thread-v150-33go</guid>
      <description>&lt;p&gt;&lt;a href="https://i.giphy.com/media/0N8jZKHBq3smKbyITd/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/0N8jZKHBq3smKbyITd/giphy.gif" alt="Howdy" width="480" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#welcome-to-dev"&gt;
  &lt;/a&gt;
  Welcome to DEV!
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Leave a comment below to introduce yourself! You can talk about what brought you here, what you're learning, or just a fun fact about yourself.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reply to someone's comment, either with a question or just a hello. 👋 &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Great to have you in the community!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>welcome</category>
    </item>
    <item>
      <title>Learn SQL: Microsoft SQL Server - Episode 9: Aggregation in Where Clause</title>
      <author>Goran Kortjie</author>
      <pubDate>Wed, 10 Nov 2021 18:48:00 +0000</pubDate>
      <link>https://dev.to/ifierygod/learn-sql-microsoft-sql-server-episode-9-aggregation-in-where-clause-25bb</link>
      <guid>https://dev.to/ifierygod/learn-sql-microsoft-sql-server-episode-9-aggregation-in-where-clause-25bb</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wr8_7tr4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9tele45r212abw91j336.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wr8_7tr4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9tele45r212abw91j336.png" alt="goran-says-hi" width="398" height="398"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Many times we might need to use aggregated values in our &lt;strong&gt;Where Clause&lt;/strong&gt;, as a way of limiting the result set of aggregated values. You would think it would be as easy as adding a &lt;strong&gt;Where Clause&lt;/strong&gt; in our query statement, however we will see in this episode, this is not the case.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gr3Bf7q_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ix1pr53eupqnfaio6gsb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gr3Bf7q_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ix1pr53eupqnfaio6gsb.gif" alt="skid-12" width="879" height="73"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By using the previous episode as an example, you can check that out on the link below to get up to speed. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It's a quick read so once you're done head on back here! &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IgeY80f2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0me8zjay4n4i68r464ie.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IgeY80f2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0me8zjay4n4i68r464ie.png" alt="skid-cover-4" width="880" height="73"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/ifierygod" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--piBIAdwB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--_sKyIPjI--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/444037/92f14527-35d0-4c0e-9079-d9fae6ffa61b.jpeg" alt="ifierygod"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ifierygod/learn-sql-microsoft-sql-server-episode-8-null-values-in-aggregation-22d2" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Learn SQL: Microsoft SQL Server - Episode 8: NULL values in Aggregation&lt;/h2&gt;
      &lt;h3&gt;Goran Kortjie ・ Nov 6 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#sql&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#database&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#challenge&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
. 

&lt;p&gt;We might want to select all those customers whose order count is less than two times or more than two, three, four, five etc...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zJVC8ca6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8281hpafx5y20o5ahz4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zJVC8ca6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8281hpafx5y20o5ahz4.gif" alt="skid-11" width="880" height="61"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Count&lt;/strong&gt; is in this example the aggregated value. However a &lt;strong&gt;Where Clause&lt;/strong&gt; does not take in an aggregated value. In this episode we are going to discuss how to use aggregated values to select our records.&lt;/p&gt;

&lt;p&gt;Lets move into SMSS and see this in practice.&lt;/p&gt;

&lt;p&gt;In this example we will be using the &lt;strong&gt;Sales.SalesOrderHeader&lt;/strong&gt; table. As we know this table stores the information for every order the customer has placed. There is essentially one record for each sales order, then there are &lt;strong&gt;CustomerID's&lt;/strong&gt; that stores information about the customer who placed this order.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zJVC8ca6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8281hpafx5y20o5ahz4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zJVC8ca6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8281hpafx5y20o5ahz4.gif" alt="skid-11" width="880" height="61"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What we are trying to do here is to find the &lt;strong&gt;CustomerID&lt;/strong&gt; &lt;em&gt;Where&lt;/em&gt; the sales count is more &lt;code&gt;than X / less than X&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;First we will start by using a &lt;strong&gt;SELECT&lt;/strong&gt; statement and select the &lt;strong&gt;CustomerID&lt;/strong&gt; and the &lt;strong&gt;SalesOrderID&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7UaFgAZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4vcyz11kumb2zrzk4mkj.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7UaFgAZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4vcyz11kumb2zrzk4mkj.gif" alt="discussion-1" width="600" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What we need now is the &lt;strong&gt;Count&lt;/strong&gt; of &lt;strong&gt;Sales Orders&lt;/strong&gt;. Therefore we wrap the &lt;strong&gt;salesOrderId&lt;/strong&gt; in the &lt;strong&gt;Count&lt;/strong&gt; function. Notice we are grouping by the &lt;strong&gt;Customer level&lt;/strong&gt;, meaning for each customer give us the count of their &lt;strong&gt;salesOrderId's&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h1NI9FBZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kuug4oqwb2fnr1gwn4xm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h1NI9FBZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kuug4oqwb2fnr1gwn4xm.gif" alt="skid-7" width="879" height="73"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally we need to tell SQL where to group it by and in this case we group it by the &lt;strong&gt;CustomerID&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k0KqS_C6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fxv72b9ai3791f4dulsi.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k0KqS_C6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fxv72b9ai3791f4dulsi.gif" alt="discussion-2" width="600" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To make it easier to understand we could add an &lt;strong&gt;Alias&lt;/strong&gt; to the &lt;strong&gt;Count&lt;/strong&gt; function that wraps around &lt;strong&gt;salesOrderId&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h1NI9FBZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kuug4oqwb2fnr1gwn4xm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h1NI9FBZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kuug4oqwb2fnr1gwn4xm.gif" alt="skid-7" width="879" height="73"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to only select the &lt;em&gt;customers&lt;/em&gt; whose &lt;em&gt;sales order&lt;/em&gt; &lt;em&gt;Count&lt;/em&gt; is less than two, in this scenario, normally we would use the &lt;strong&gt;Where clause&lt;/strong&gt;. However if we try this we will see SSMS throws an error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sJvz4Qpo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8oid9kl767fuu10601z4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sJvz4Qpo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8oid9kl767fuu10601z4.gif" alt="discussion-3" width="600" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Instead of &lt;strong&gt;Where&lt;/strong&gt;, we replace it with &lt;strong&gt;Having&lt;/strong&gt;. Also notice we cannot use an &lt;strong&gt;Alias&lt;/strong&gt; when we use &lt;strong&gt;Having&lt;/strong&gt;, we must use the complete &lt;strong&gt;Count&lt;/strong&gt; function query string containing the &lt;strong&gt;salesOrderId&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kd1QhKW0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tfx32rkh0ly1zixlmb9y.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kd1QhKW0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tfx32rkh0ly1zixlmb9y.gif" alt="discussion-4" width="600" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Voila! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gr3Bf7q_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ix1pr53eupqnfaio6gsb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gr3Bf7q_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ix1pr53eupqnfaio6gsb.gif" alt="skid-12" width="879" height="73"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we can see all the &lt;em&gt;customers&lt;/em&gt; whose &lt;em&gt;sales order&lt;/em&gt; &lt;em&gt;Count&lt;/em&gt; is less than two. We could even change the operator to less than equal to two, which in this case will return customers whose sale orders are two and less than two in the result set.&lt;/p&gt;

&lt;p&gt;Awesome right!🥳&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UIBWAxqG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jpchmuphmj1xueik4m90.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UIBWAxqG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jpchmuphmj1xueik4m90.png" alt="sql" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Keep in mind, for any of the &lt;em&gt;aggregated functions&lt;/em&gt;, such as &lt;strong&gt;MIN&lt;/strong&gt;, &lt;strong&gt;MAX&lt;/strong&gt;, &lt;strong&gt;AVG&lt;/strong&gt; or &lt;strong&gt;SUM&lt;/strong&gt;, you will have to use &lt;strong&gt;HAVING&lt;/strong&gt; if you want to restrict your result set, by those aggregated values.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IgeY80f2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0me8zjay4n4i68r464ie.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IgeY80f2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0me8zjay4n4i68r464ie.png" alt="skid-cover-4" width="880" height="73"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope you enjoyed this episode, happy learning...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---0aaf1vl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s61js9hqsv5datguo9hu.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---0aaf1vl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s61js9hqsv5datguo9hu.gif" alt="meditation" width="640" height="640"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>sql</category>
      <category>database</category>
      <category>datascience</category>
    </item>
    <item>
      <title>Who can be a Programmer?</title>
      <author>Vicki (she/they)</author>
      <pubDate>Wed, 10 Nov 2021 18:41:36 +0000</pubDate>
      <link>https://dev.to/vickilanger/who-can-be-a-programmer-33fm</link>
      <guid>https://dev.to/vickilanger/who-can-be-a-programmer-33fm</guid>
      <description>&lt;h2&gt;
  &lt;a href="#who-can-be-a-programmer"&gt;
  &lt;/a&gt;
  Who can be a programmer?
&lt;/h2&gt;

&lt;p&gt;Everyone! &lt;/p&gt;

&lt;p&gt;Coding is for everyone and anyone regardless of our differences. Coding also doesn’t require you to be a math wizard. That doesn’t mean understanding some math won’t make things easier. At the very least, a basic understanding of addition, subtraction, multiplication, division, and remainders from division will be helpful.&lt;/p&gt;

&lt;p&gt;There are tons of people, just like you, throughout the not-too-distant past and the present who have done and are doing amazing things with code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#people-who-have-done-and-are-doing-cool-things-with-code"&gt;
  &lt;/a&gt;
  People who have done and are doing cool things with code
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--axCiFv7N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sn45pajv2i2monb2cj7x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--axCiFv7N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sn45pajv2i2monb2cj7x.png" alt="photo of Timnit Gebru, an Ethiopian computer scientist wearing a beautiful red scarf" width="500" height="500"&gt;&lt;/a&gt;&lt;br&gt;
Timnit Gebru is a computer scientist who led a team on the ethics of artificial intelligence (AI). She works to remove bias that has been built into programs that make unethical decisions. She helps others make programs that are inclusive.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ibX9Y0Zh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pphqlk0gpnaz8z39xqkm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ibX9Y0Zh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pphqlk0gpnaz8z39xqkm.png" alt="photo of Victoria Chávez, a Latina computer scientist wearing a pretty burgundy shirt standing next to a lion thingy" width="500" height="500"&gt;&lt;/a&gt;&lt;br&gt;
Victoria Chávez took a coding class in school and was hooked. During a hackathon, she built an app, SNAPy, that helped people find out which stores accept food stamps. She’s also helping disabled people have better access to programming.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z9QGw3h3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1v9jyiupbg49pvq219w3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z9QGw3h3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1v9jyiupbg49pvq219w3.png" alt="photo of John Henry Thompson, an Jamaican computer scientist sitting at a table with a laptop" width="500" height="500"&gt;&lt;/a&gt;&lt;br&gt;
John Henry Thompson created a whole language that makes visuals in computer software. He basically made video games, modern cartoons, and web design possible&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MZEkvZJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ggf3g0aijpleowhws8e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MZEkvZJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ggf3g0aijpleowhws8e.png" alt="Photo of Raúl Rojas González, a hispanic computer scientist standing next to one of his robots" width="500" height="500"&gt;&lt;/a&gt;&lt;br&gt;
Raúl Rojas González led a self-driving car company. He has also won a Robot Soccer World Cup competition with a team of small AI robots. He also created a prize for scientific achievement.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UnuQKQqG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgv6xf5c5nq5y9zu7y2y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UnuQKQqG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgv6xf5c5nq5y9zu7y2y.png" alt="Photo of Raj Reddy, an Indian computer scientist wearing smart blazer" width="500" height="500"&gt;&lt;/a&gt;&lt;br&gt;
Raj Reddy has done many things with robotics and AI. He laid the groundwork for us to have the voice assistants like Siri, Google Home, Alexa, and more. He also founded the Robotics Institute at Carnegie Mellon University.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ki3qjQow--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rsfvytdd48m6qr3u12t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ki3qjQow--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rsfvytdd48m6qr3u12t.png" alt='lots of squiggly arrows pointing at the word "you" in the center of a square' width="500" height="500"&gt;&lt;/a&gt;&lt;br&gt;
You are reading this and are about to create so many cool projects. Whether or not you pursue a career with code, you will have learned many new ways to think about things. You will go on to do big things with your life.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Incident Remediation With Jenkins and Terraform</title>
      <author>Scott Lasica</author>
      <pubDate>Wed, 10 Nov 2021 18:38:24 +0000</pubDate>
      <link>https://dev.to/youngshatner/incident-remediation-with-jenkins-and-terraform-4a7i</link>
      <guid>https://dev.to/youngshatner/incident-remediation-with-jenkins-and-terraform-4a7i</guid>
      <description>&lt;p&gt;Experienced DevOps personnel are very familiar with tools like Jenkins to create workflows and Terraform to automate orchestration. But are these the best tools to use when firefighting production cloud incidents?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is Jenkins?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.jenkins.io/"&gt;Jenkins&lt;/a&gt; is an open source automation server for &lt;a href="https://www.fylamynt.com/post/sre-vs-devops"&gt;DevOps&lt;/a&gt;. Jenkins has ~1800 plugins that support many of the tools used in build and deployment scenarios. The plugins cover build management, source code management, administration, platforms and UI. Jenkins was designed specifically for CI/CD (continuous integration / continuous delivery) environments as well as automating other routine development tasks.&lt;/p&gt;

&lt;p&gt;Jenkins still requires scripts to be written for the steps, but gives a framework for integrating the entire chain of build / test / deploy. These "pipeline scripts" are stored in a file called Jenkinsfile, which is stored in your repo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is Terraform?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.terraform.io/"&gt;Terraform&lt;/a&gt; is an open source infrastructure as code (IaC) software tool. Terraform allows you to write code in a higher level language to manage operations in the cloud. Terraform supports ~100 cloud providers, and gives you the ability to create new resources, manage existing ones and destroy those that are no longer needed.&lt;/p&gt;

&lt;p&gt;Terraform has a concept called modules. Terraform modules are like functions in programming languages. They provide a standard interface (input/output) for creating resources. Essentially, modules allow for consistent (and debugged) common actions - again just like you'd create a function that encapsulates many actions to perform a higher level action.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Are Jenkins and Terraform suitable for incident remediation?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To answer this question, we can look at the tools used to respond to and resolve cloud incidents. First, a monitoring tool needs to detect the issue. Popular products in this space include Datadog and New Relic. When inspecting the Datadog plugin for Terraform, you quickly learn that Terraform is simply configuring and deploying Datadog resources. When you get the next step in resolution, you typically use an incident management tool like PagerDuty or Opsgenie. Inspecting the Terraform plugins for those tools reveals the same situation. Terraform is designed primarily for creation, configuration and destruction of cloud resources due to its declarative nature.&lt;/p&gt;

&lt;p&gt;Could Terraform be used to automate portions of a cloud incident &lt;a href="https://www.fylamynt.com/post/whats-a-runbook"&gt;runbook&lt;/a&gt;/workflow? Absolutely, but since this wasn't the intended use case a lot of custom code will need to be written to tie the tools together, requiring not only on-going maintenance but also opens the door to edge-cases and bugs. Facebook's outage in late 2021 is a classic example of this problem. They stated they had written code to check for errors in deployment scripts but that code had a bug in it, and allowed the error to propagate across the entire Facebook/Instagram/WhatsApp footprint cutting it off from the Internet.&lt;/p&gt;

&lt;p&gt;Now take a look at Jenkins. Again, incident response and remediation was never the intended use case for Jenkins. It excels at CI/CD automation, making the lives of developers and DevOps personnel much easier. However, This is even more of a square peg into a round hole type of approach. The pipelines do operate like workflows, but have none of the logic or connections built in for the remediation steps required. You would essentially be writing most of the code required to make this work, and at that point you might as well just ditch Jenkins and wire everything together by hand.&lt;/p&gt;

&lt;p&gt;Fylamynt has created the world's first enterprise ready low code platform for building, running and analyzing SRE cloud workflows. With Fylamynt an &lt;a href="https://www.fylamynt.com/post/who-are-sres-and-what-do-they-do"&gt;SRE&lt;/a&gt; can automate the parts of the runbook that are the most time consuming, allowing them to make decisions where their expertise is needed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://fylamynt.com/"&gt;Try Fylamynt for free -&amp;gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>sre</category>
      <category>devops</category>
      <category>cloudnative</category>
      <category>cloudskills</category>
    </item>
    <item>
      <title>Simple typing test project using Javascript, HTML,CSS</title>
      <author>Lucifer25x</author>
      <pubDate>Wed, 10 Nov 2021 18:23:02 +0000</pubDate>
      <link>https://dev.to/lucifer25x/simple-typing-test-project-using-javascript-htmlcss-3006</link>
      <guid>https://dev.to/lucifer25x/simple-typing-test-project-using-javascript-htmlcss-3006</guid>
      <description>&lt;p&gt;(Project created for beginners)&lt;/p&gt;

&lt;p&gt;Github Source: &lt;a href="https://github.com/Lucifer25x/typing-test"&gt;https://github.com/Lucifer25x/typing-test&lt;/a&gt;&lt;br&gt;
For try: &lt;a href="https://lucifer25x.github.io/typing-test/"&gt;https://lucifer25x.github.io/typing-test/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>github</category>
      <category>opensource</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Python : OS Module </title>
      <author>Anjali Kumawat</author>
      <pubDate>Wed, 10 Nov 2021 18:07:33 +0000</pubDate>
      <link>https://dev.to/anjalikumawat2002/python-os-module-ccb</link>
      <guid>https://dev.to/anjalikumawat2002/python-os-module-ccb</guid>
      <description>&lt;p&gt;The os module is a part of the standard library, or stdlib, within Python 3.&lt;/p&gt;

&lt;p&gt;Python &lt;strong&gt;os&lt;/strong&gt; module provides methods that help us to perform file processing operations. Let’s explore these basic functions one by one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-os"&gt;
  &lt;/a&gt;
  Using os
&lt;/h2&gt;

&lt;p&gt;Before you use the os module, you first need to bring it up by means of the Python import command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import os
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you try to run os without importing it, you will see an error message:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NameError: name 'os' is not defined
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get a list of functions supported by os module, run the below command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print(dir(os))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#files"&gt;
  &lt;/a&gt;
  Files
&lt;/h2&gt;

&lt;p&gt;Some of the methoods of the &lt;strong&gt;os&lt;/strong&gt; module to work with files.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rename-method-"&gt;
  &lt;/a&gt;
  rename() method :
&lt;/h3&gt;

&lt;p&gt;It is used to rename a file or directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.rename(old_filename,new_filename)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.rename(“file.txt”, “user.txt”)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#remove-method-"&gt;
  &lt;/a&gt;
  remove() method :
&lt;/h3&gt;

&lt;p&gt;It is used to delete the file.&lt;br&gt;
&lt;strong&gt;Path&lt;/strong&gt; : This is a path-like object which represents a file system path. This path-like object is either a string or bytes object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.remove(path_of_file)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.remove(“d1/user.txt”)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#directories"&gt;
  &lt;/a&gt;
  Directories
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#cwd-"&gt;
  &lt;/a&gt;
  CWD :
&lt;/h3&gt;

&lt;p&gt;CWD == "Current working directory"&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getcwd-method-"&gt;
  &lt;/a&gt;
  getcwd() method :
&lt;/h3&gt;

&lt;p&gt;returns current directory.&lt;br&gt;
or &lt;br&gt;
To check the path of the current working directory, we will use the getcwd method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print(os.getcwd())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;  The folder where the Python script is running is known as the Current Directory. This is not the path where the Python script is located.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mkdir-method-"&gt;
  &lt;/a&gt;
  mkdir() method :
&lt;/h3&gt;

&lt;p&gt;It is used to create a directory in current directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.mkdir("d1")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This method raises FileExistsError if the directory to be created already exists.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#chdir-method-"&gt;
  &lt;/a&gt;
  chdir() method :
&lt;/h3&gt;

&lt;p&gt;Suppose, we have a folder, for example, info, inside our current directory, we can switch to the info folder, using the chdir function. or It is used to change the current directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.chdir("info")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#rmdir-method-"&gt;
  &lt;/a&gt;
  rmdir() method :
&lt;/h3&gt;

&lt;p&gt;It is used to delete a directory. The directory must be empty before it is deleted.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;os.rmdir("dirname")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#listdir-method-"&gt;
  &lt;/a&gt;
  listdir() method :
&lt;/h3&gt;

&lt;p&gt;Returns a list containing names of files and subdirectories in the specified directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print(os.listdir())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Keep Learning!!&lt;br&gt;
Keep Coding....❤️👩‍💻&lt;/p&gt;

</description>
      <category>programming</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>python</category>
    </item>
    <item>
      <title>Achieving Great Work-Life Balance</title>
      <author>Geoff Stevens</author>
      <pubDate>Wed, 10 Nov 2021 17:53:14 +0000</pubDate>
      <link>https://dev.to/softwaredotcom/achieving-great-work-life-balance-3k3o</link>
      <guid>https://dev.to/softwaredotcom/achieving-great-work-life-balance-3k3o</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-worklife-balance"&gt;
  &lt;/a&gt;
  What is work-life balance? 
&lt;/h2&gt;

&lt;p&gt;Work-life balance means finding a healthy balance between your working and personal life. It means creating clear boundaries between work hours and non-work hours that allow you to achieve both your professional and personal goals.&lt;/p&gt;

&lt;p&gt;Many companies abide by the traditional 9am to 5pm work hours as a way to uphold work-life balance for their employees. With the shift to &lt;a href="https://www.software.com/1000x-system/remote-vs-office"&gt;remote work&lt;/a&gt;, freelancing, and the gig economy, teams are increasingly responsible for ensuring they maintain a healthy work-life balance in less traditional workplaces.&lt;/p&gt;

&lt;p&gt;The stakes are high. Improving work-life balance can boost happiness and productivity, while preventing &lt;a href="https://www.software.com/1000x-system/developer-burnout"&gt;burnout&lt;/a&gt;. Ignoring work-life balance can create &lt;em&gt;innovation zombies&lt;/em&gt;—companies that overwork their employees to increase output, but ultimately sabotage their organization's ability to compete in the marketplace.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-consequences-of-poor-worklife-balance"&gt;
  &lt;/a&gt;
  What are the consequences of poor work-life balance? 
&lt;/h2&gt;

&lt;p&gt;Consequences of poor work-life balance manifest at both the individual and team levels.&lt;/p&gt;

&lt;p&gt;Individuals can experience decreased productivity, lower satisfaction at work, and growing frustration with their current role and responsibilities. Without sufficient time outside of work to explore their own interests, individuals are also more vulnerable to negative changes to their self-image when it is tied too closely to their performance at work.&lt;/p&gt;

&lt;p&gt;Over the long-term, poor work-life balance can lead to &lt;a href="https://www.software.com/1000x-system/developer-burnout"&gt;burnout&lt;/a&gt; and chronic stress.&lt;/p&gt;

&lt;p&gt;Burnout is a severe form of mental and physical exhaustion. One common cause of burnout is overworking for extended periods of time without opportunities to rest, recharge, or pursue interests outside of work. Symptoms of burnout can be mental—negativism, cynicism, and detachment—as well as physical—headaches, fatigue, and sleeplessness.&lt;/p&gt;

&lt;p&gt;Left unchecked, burnout can negatively impact a team's ability to achieve their goals. Teams can experience drops in long-term productivity, growing dissatisfaction, and, ultimately, higher turnover. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#can-you-use-data-sources-and-metrics-to-measure-worklife-balance"&gt;
  &lt;/a&gt;
  Can you use data sources and metrics to measure work-life balance?
&lt;/h2&gt;

&lt;p&gt;Engineers can measure time spent working during and outside their working hours. They can also measure code day length---essentially the time between their first and last line of code each day. Together, code time and code day length can provide insight into how long you are 'online' and at what hours you are connected to work.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--04NJge-g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/stmfp7pgu7qhu4n78buo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--04NJge-g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/stmfp7pgu7qhu4n78buo.png" alt="Work-life balance" width="880" height="435"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's important to remember that different people work according to different schedules based on personal preferences. Unusual coding hours, such as night coding, may not necessarily indicate a poor work-life balance, especially now that more people are working remotely.&lt;/p&gt;

&lt;p&gt;For engineers with flexible schedules, they should be watching for aberrations from their long-term trends. Spikes in weekend coding or code day length can indicate changes to your work schedule that may be unsustainable. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-promote-a-good-worklife-balance-for-development-teams"&gt;
  &lt;/a&gt;
  How to promote a good work-life balance for development teams
&lt;/h2&gt;

&lt;p&gt;Promoting a good work-life balance requires a strong culture of planning, resilience, and development flow.&lt;/p&gt;

&lt;p&gt;First, teams should work to avoid &lt;em&gt;crunch time&lt;/em&gt;—cramming changes and fixes at the last minute to meet deadlines. Crunch time leads to poor work-life balance by requiring developers to work long, arduous hours in a high-stress environment. Reducing crunch time with more consistent and predictable development cycles can greatly reduce big fluctuations in work hours.&lt;/p&gt;

&lt;p&gt;Predictable development cycles require accurate estimations of the time and effort needed to complete sprints and projects. Most importantly, they require the intentional carving out of time for testing, refactoring, and paying down technical debt.&lt;/p&gt;

&lt;p&gt;Second, teams should invest resources into creating self-healing systems and processes. Organizational resilience stems from regularly improving your team's ability to respond to and resolve production failures. Teams can also reduce the chance or severity of failures by adding guardrails, such as shift-left testing, automated CI/CD pipelines, and feature flags. Over the long-term, greater resiliency means less time spent in firefighting mode with fewer emergency calls made to teams to restore service outside work hours.&lt;/p&gt;

&lt;p&gt;Netflix infamously built and deployed &lt;a href="https://github.com/Netflix/chaosmonkey"&gt;Chaos Monkey&lt;/a&gt;, a tool that randomly terminates virtual machine instances in production. By exposing engineers to such random failures, Netflix created a culture of resilience that helped them avoid production downtime and team burnout.&lt;/p&gt;

&lt;p&gt;Third, teams should enable the fast flow of work and fearlessly cut bureaucracy. The goal is to improve daily work so development teams are able to complete their tasks without needing to take time away from their personal lives.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Identify issues by making work visible. Understand bottlenecks in your organization's flow of work to see where to invest in DevOps and better tooling.&lt;/li&gt;
&lt;li&gt;  Provide developers with time to focus during work and complete tasks during work hours. Reaching flow state and staying in flow is key to getting work done. Try to eliminate unnecessary meetings and disruptions.&lt;/li&gt;
&lt;li&gt;  Decrease time spent waiting by removing or shrinking change approval boards and investing in self-service tooling, like automated environments and test data. Wait time works against team velocity and delays productive work, leaving developers feeling they need to "catch up" outside work hours. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#top-tips-for-striking-a-worklife-balance-as-a-software-engineer"&gt;
  &lt;/a&gt;
  Top tips for striking a work-life balance as a software engineer
&lt;/h2&gt;

&lt;p&gt;Software engineers can improve work-life balance by setting aside time for personal interests and disconnecting completely when stepping away from work.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Schedule time for hobbies and activities outside of work. It's easier to step away from work when you have planned events that are just as visible as meetings on your calendar. &lt;/li&gt;
&lt;li&gt;  Plan vacations, both long and short. You need both long weekends &lt;em&gt;and&lt;/em&gt; week-long getaways to fully recharge. &lt;/li&gt;
&lt;li&gt;  When offline, stay offline. Although it's tempting to check emails and notifications while taking time off, staying offline helps create clearer boundaries between life and work. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-finding-a-worklife-balance-could-make-you-a-better-developer"&gt;
  &lt;/a&gt;
  Why finding a work-life balance could make you a better developer
&lt;/h2&gt;

&lt;p&gt;By prioritizing work-life balance, engineering teams benefit from happier and more productive team members. They are more likely to report being satisfied with their role and less likely to leave their organization.&lt;/p&gt;

&lt;p&gt;Strong work-life balance also enables teams to be more agile and responsive to changes in workload. In exceptional situations and for brief periods of time, agile teams are able to temporarily ramp up their team's effort to meet deadlines, without burning out their team in the long-run. Emergencies happen, and teams with poor work-life balance won't have the resources or bandwidth to respond effectively.&lt;/p&gt;

&lt;p&gt;At the individual level, a strong work-life balance boosts energy, productivity, and creativity. By maintaining a strong work-life balance, developers can avoid one of the main risk factors for burnout. They are able to optimize for their long-term goals—career and personal development—rather than sprinting to achieve immediate, but potentially draining, short-term goals.&lt;/p&gt;

&lt;p&gt;Developers can also build valuable personal skills outside of work, which often translate into well-rounded employees who bring fresh ideas and new perspectives into the organization. A richer and more meaningful life outside of work creates a more diverse and engaging workplace for everyone.&lt;/p&gt;

</description>
      <category>productivity</category>
    </item>
    <item>
      <title>Listen to the Season 7 Premiere of DevDiscuss: "Deeply Human Stories in Software with The Changelog"</title>
      <author>dev.to staff</author>
      <pubDate>Wed, 10 Nov 2021 17:52:18 +0000</pubDate>
      <link>https://dev.to/devteam/listen-to-the-season-7-premiere-of-devdiscuss-deeply-human-stories-in-software-with-the-changelog-ip1</link>
      <guid>https://dev.to/devteam/listen-to-the-season-7-premiere-of-devdiscuss-deeply-human-stories-in-software-with-the-changelog-ip1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#were-super-excited-to-share-that-season-7-of-the-devdiscuss-podcast-is-finally-here-and-you-can-listen-right-here-on-dev"&gt;
  &lt;/a&gt;
  We're super excited to share that season 7 of the DevDiscuss podcast is finally here — and you can listen right here on DEV!
&lt;/h2&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devdiscuss/s7-e1-deeply-human-stories-in-software-with-the-changelog"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S7:E1 - Deeply Human Stories in Software with The Changelog&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devdiscuss"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevDiscuss
      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s7-e1-deeply-human-stories-in-software-with-the-changelog" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s7-e1-deeply-human-stories-in-software-with-the-changelog" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s7-e1-deeply-human-stories-in-software-with-the-changelog" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s7-e1-deeply-human-stories-in-software-with-the-changelog" alt="DevDiscuss" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZtvK04RF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j-SdIkjZ--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/235/08786d8b-7ef4-4c00-bc40-f4b3cbca5834.jpg"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-s7-e1-deeply-human-stories-in-software-with-the-changelog"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/devdiscuss/s7-e1-deeply-human-stories-in-software-with-the-changelog"&gt;
      &lt;img id="episode-profile-image" alt="S7:E1 - Deeply Human Stories in Software with The Changelog" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--zTELFWpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--otY2jCJh--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/235/08786d8b-7ef4-4c00-bc40-f4b3cbca5834.jpg"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;×&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Quick refresher since it's been a minute — DevDiscuss is the first original podcast from DEV all about the burning topics that impact all our lives as developers.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Episode Info&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;In the season premiere, we’re talking about deeply human stories in software — with some pretty fantastic guests from &lt;a href="https://changelog.com/"&gt;The Changelog&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hosts"&gt;
  &lt;/a&gt;
  Hosts:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/ben"&gt;@ben&lt;/a&gt;
 — Creator of DEV &amp;amp; Co-Founder of Forem&lt;/li&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/coffeecraftcode"&gt;@coffeecraftcode&lt;/a&gt;
 — Developer Advocate at Forem&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#guests"&gt;
  &lt;/a&gt;
  Guests:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/adamstac"&gt;Adam Stacoviak&lt;/a&gt;, Founder and Editor-in-Chief of Changelog Media.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/jerodsanto"&gt;Jerod Santo&lt;/a&gt;, Managing Editor of Changelog Media&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let us know your thoughts on this show in the comments below — or on Twitter (&lt;a href="https://twitter.com/thepracticaldev"&gt;@thepracticaldev&lt;/a&gt; ).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q0zcTd9r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/qZelsWAXfWpAA/giphy.gif%3Fcid%3Decf05e47ddu6jql6tkj8kvdmj4z5ofal65l38f235ruuinlo%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q0zcTd9r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/qZelsWAXfWpAA/giphy.gif%3Fcid%3Decf05e47ddu6jql6tkj8kvdmj4z5ofal65l38f235ruuinlo%26rid%3Dgiphy.gif%26ct%3Dg" alt="Speakers" width="480" height="480"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devdiscuss"&gt;follow DevDiscuss&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; — or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links"&gt;
  &lt;/a&gt;
  Quick Listening Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s7-e1-deeply-human-stories-in-software-with-the-changelog/id1513053883?i=1000541361862"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/show/4Jae2mPUqx0XnGychucsE4"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cHM6Ly9mZWVkcy5kZXZwb2RzLmRldi9kZXZkaXNjdXNzX3BvZGNhc3QueG1s/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZkaXNjdXNzLzUw?sa=X&amp;amp;ved=0CAQQkfYCahcKEwjQzIevrY70AhUAAAAAHQAAAAAQCg"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devdiscuss/s7e1-deeply-human-stories-in-zND98OeCPQg/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevDiscuss-p1324596/?topicId=167643015"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://devpods.herokuapp.com/podcasts/devdiscuss/episodes/228"&gt;DEV Pods Site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;em&gt;Acknowledgements&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt;
 for producing &amp;amp; mixing the show&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Our season seven sponsors: &lt;a href="https://www.microsoft.com/en-us/dev-community/Event/Register?eventId=DevDiscussPodcast_o7nllI4cp4Vg&amp;amp;ocid=aid3038582"&gt;Microsoft&lt;/a&gt;, &lt;a href="https://developer.newrelic.com/"&gt;New Relic&lt;/a&gt;, &amp;amp; &lt;a href="https://dev.toource=devdiscuss&amp;amp;utm_medium=syndication&amp;amp;utm_campaign=october21"&gt;Vultr&lt;/a&gt;!&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>discuss</category>
      <category>podcast</category>
    </item>
    <item>
      <title>6 Repos github you should marked as web developper!</title>
      <author>CodeOz</author>
      <pubDate>Wed, 10 Nov 2021 17:47:49 +0000</pubDate>
      <link>https://dev.to/codeoz/6-repos-github-you-should-marked-as-web-developper-36eo</link>
      <guid>https://dev.to/codeoz/6-repos-github-you-should-marked-as-web-developper-36eo</guid>
      <description>&lt;p&gt;Today I will share with you some repository Github that will help you to be more efficient for every developper!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  🎨 CSS
&lt;/h2&gt;

&lt;p&gt;A collection of tips to help take your CSS skills pro.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/AllThingsSmitty/css-protips"&gt;https://github.com/AllThingsSmitty/css-protips&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cheatlists"&gt;
  &lt;/a&gt;
  📚 Cheatlists
&lt;/h2&gt;

&lt;p&gt;Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/LeCoupa/awesome-cheatsheets"&gt;https://github.com/LeCoupa/awesome-cheatsheets&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;There is a website that gather all sheets if you prefer: &lt;em&gt;&lt;a href="https://lecoupa.github.io/awesome-cheatsheets/"&gt;https://lecoupa.github.io/awesome-cheatsheets/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#algo"&gt;
  &lt;/a&gt;
  👨‍🔬 Algo
&lt;/h2&gt;

&lt;p&gt;This repository contains JavaScript based examples of many popular algorithms and data structures.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;https://github.com/trekhleb/javascript-algorithms&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#clean-code"&gt;
  &lt;/a&gt;
  🧹 Clean code
&lt;/h2&gt;

&lt;p&gt;Clean code for javascript&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;https://github.com/ryanmcdermott/clean-code-javascript&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-web-works"&gt;
  &lt;/a&gt;
  🌎 How web works
&lt;/h2&gt;

&lt;p&gt;What happens behind the scenes when we type google.com in a browser?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/vasanthk/how-web-works"&gt;https://github.com/vasanthk/how-web-works&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-programming-books"&gt;
  &lt;/a&gt;
  📖 Free programming books
&lt;/h2&gt;

&lt;p&gt;Get free programming ebooks.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;https://github.com/EbookFoundation/free-programming-books&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;I hope you like this reading!&lt;/p&gt;

&lt;p&gt;🎁 You can get my new book &lt;code&gt;Underrated skills in javascript, make the difference&lt;/code&gt; for FREE if you follow me on &lt;a href="https://twitter.com/code__oz"&gt;Twitter&lt;/a&gt; and MP me 😁&lt;/p&gt;

&lt;p&gt;Or get it &lt;a href="https://codeoz.gumroad.com/l/RXLYp"&gt;HERE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🇫🇷🥖 For french developper you can check my &lt;a href="https://www.youtube.com/channel/UCC675U1ZUPFASsK9-FjawtA"&gt;YoutubeChannel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🎁 &lt;a href="https://www.getrevue.co/profile/code__oz"&gt;MY NEWSLETTER&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;☕️ You can &lt;a href="https://www.buymeacoffee.com/CodeoZ"&gt;SUPPORT MY WORKS&lt;/a&gt; 🙏&lt;/p&gt;

&lt;p&gt;🏃‍♂️ You can follow me on 👇&lt;/p&gt;

&lt;p&gt;🕊 Twitter : &lt;a href="https://twitter.com/code__oz"&gt;https://twitter.com/code__oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;👨‍💻 Github: &lt;a href="https://github.com/Code-Oz"&gt;https://github.com/Code-Oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And you can mark 🔖 this article!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Optimizing fonts for the web</title>
      <author>Cheemz</author>
      <pubDate>Wed, 10 Nov 2021 17:33:43 +0000</pubDate>
      <link>https://dev.to/cheemzkun/optimizing-fonts-for-the-web-2ja5</link>
      <guid>https://dev.to/cheemzkun/optimizing-fonts-for-the-web-2ja5</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This post was originally published on my blog page at &lt;a href="https://try.catch.wtf/blog/optimizing-fonts-for-the-web"&gt;try.catch.wtf&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Adding fonts to your site can make it look better. And they come with some side effects leading to degraded performance. In this post, I will share how to use fonts without taking away a huge bite of your lighthouse scores 😤.&lt;/p&gt;

&lt;p&gt;But before we jump into it, let's analyze some of these side effects.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Delayed text rendering&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If a web font has not yet loaded, it can delay text rendering. Resulting in delayed First Contentful Paint (FCP) or even delayed Largest Contentful Paint (LCP) in some cases.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Layout shifts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When fonts are loaded and swapped, they can cause layout shifts. These layout shifts occur when a web font and its fallback font take up different amounts of space on the page.&lt;/p&gt;

&lt;p&gt;What can we do to fix these issues 🤔?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-the-font-ready-to-serve"&gt;
  &lt;/a&gt;
  Getting the font ready to serve
&lt;/h2&gt;

&lt;p&gt;Before we go ahead with anything, let's see how we can optimally serve our font files as fast as possible. If you are using a 3rd party font provider (like Google Fonts), you cannot do much in this case. However, if you are serving the fonts yourself, make sure to serve them (or any static assets) over a CDN and HTTP/2.&lt;/p&gt;

&lt;p&gt;A small font file will always be early to the party 🥳. Downloading multiple font styles (eg. weight, slant) will also hinder the UX. Wouldn't it be great if we could get away without downloading these other styles of the font and use only 1 font to rule them all 😬?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#synthetic-weights"&gt;
  &lt;/a&gt;
  Synthetic weights
&lt;/h3&gt;

&lt;p&gt;SHH 🤫! Designers hate this simple trick 🤬.&lt;/p&gt;

&lt;p&gt;Instead of downloading multiple weights of the same font, we can load a regular variant (400 weight) and rely on the browser to synthetically create other weights. If the browser can create synthetic variants, then why do designers hate this trick? It seems to be working perfectly fine, right?&lt;/p&gt;

&lt;p&gt;In the image below, the red text is the bold variant (500 weight) of &lt;a href="https://indestructibletype.com/Jost.html"&gt;Jost*&lt;/a&gt; font, and the blue text is created synthetically from the regular variant (400 weight). The difference might look subtle, but they can impair the UI and UX.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qOnnDWdP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pug9jmgwwps62vvizo2l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qOnnDWdP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pug9jmgwwps62vvizo2l.png" alt="Jost font synthetic 700 weight vs actual 700 weight" width="548" height="237"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If this doesn't bother you (or your designers), you can go ahead and use synthetic styles.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#variable-fonts"&gt;
  &lt;/a&gt;
  Variable fonts
&lt;/h3&gt;

&lt;p&gt;A variable font has multiple styles like weight, width, slant, optical size, and italics (called axis) of the fonts. The font creator can create several axes, reducing the number of styles you need to download. For this case, we will use the weight axis. If you want to learn more about the other axes or variable fonts, &lt;a href="https://web.dev/variable-fonts/"&gt;web.dev&lt;/a&gt; has a great article on it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9YxmrgnC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nn5a8a9rvodbife2yhgv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9YxmrgnC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nn5a8a9rvodbife2yhgv.png" alt="Jost variable font 700 weight vs actual 700 weight" width="548" height="237"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can use &lt;a href="https://v-fonts.com/"&gt;Variable Fonts&lt;/a&gt; for finding and trying variable fonts&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#font-subsetting"&gt;
  &lt;/a&gt;
  Font subsetting
&lt;/h3&gt;

&lt;p&gt;Font subsetting is the process of taking a font file and reducing the number of characters (or character sets). For example, let's say you have a font with Japanese characters like &lt;code&gt;月&lt;/code&gt;. You are serving a page that is in English. It is unlikely that you will render Japanese characters. So we can remove them from our font and make a profit!&lt;/p&gt;

&lt;p&gt;Let's subset &lt;code&gt;Jost-400-Book.ttf&lt;/code&gt; (&lt;code&gt;88.7 kb&lt;/code&gt;) from &lt;a href="https://indestructibletype.com/Jost.html"&gt;Jost *&lt;/a&gt; using &lt;a href="https://github.com/zachleat/glyphhanger"&gt;glyphhanger&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# install glyphhanger&lt;/span&gt;
npm i &lt;span class="nt"&gt;-g&lt;/span&gt; glyphhanger

&lt;span class="c"&gt;# install fonttools&lt;/span&gt;
pip &lt;span class="nb"&gt;install &lt;/span&gt;fonttools

&lt;span class="c"&gt;# subsetting Jost-400-Book.ttf font to Latin charset&lt;/span&gt;
glyphhanger &lt;span class="nt"&gt;--LATIN&lt;/span&gt; &lt;span class="nt"&gt;--subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Jost-400-Book.ttf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above script results in a &lt;code&gt;Jost-400-Book-subset.ttf&lt;/code&gt; (&lt;code&gt;40.5 kb&lt;/code&gt;) file. Already a reduction of 54% 😱!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There are online tools like &lt;a href="https://www.alphabet-type.com/tools/charset-checker"&gt;Charset checker&lt;/a&gt; to check the charset of fonts. You can use this to verify if the subsetted font matches your required charset or not.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#woff2-compression"&gt;
  &lt;/a&gt;
  WOFF2 compression
&lt;/h3&gt;

&lt;p&gt;WOFF2 is a compressed font format that can compress a TTF font.&lt;/p&gt;

&lt;p&gt;Let's use our subset font &lt;code&gt;Jost-400-Book-subset.ttf&lt;/code&gt; (&lt;code&gt;40.5 kb&lt;/code&gt;) file and compress it to woff2.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# clone woff2&lt;/span&gt;
git clone &lt;span class="nt"&gt;--recursive&lt;/span&gt; https://github.com/google/woff2.git

&lt;span class="c"&gt;# enter into the cloned repo&lt;/span&gt;
&lt;span class="nb"&gt;cd &lt;/span&gt;woff2

&lt;span class="c"&gt;# build&lt;/span&gt;
make clean all

&lt;span class="c"&gt;# convert the font&lt;/span&gt;
./woff2_compress ~/Jost-400-Book-subset.ttf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This results in a &lt;code&gt;Jost-400-Book-subset.woff2&lt;/code&gt; (&lt;code&gt;15.3 kb&lt;/code&gt;) file. A whopping decrease of 62% compared to the subset font (&lt;code&gt;Jost-400-Book-subset.ttf&lt;/code&gt;) and an 82% decrease compared to the original font (&lt;code&gt;Jost-400-Book.ttf&lt;/code&gt;) 😱!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are using &lt;code&gt;glyphhanger&lt;/code&gt; for font subsetting, you can also compress to woff2 directly in a single command!&lt;/p&gt;

&lt;p&gt;&lt;code&gt;glyphhanger --LATIN --subset=Jost-400-Book.ttf --formats=woff2&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#loading-the-fonts"&gt;
  &lt;/a&gt;
  Loading the fonts
&lt;/h2&gt;

&lt;p&gt;Now that we have reduced the font file size, let's see how we can load the font.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@font-face&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Jost&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;font-display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;swap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("/fonts/Jost/Jost-400.woff2")&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;"woff2"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.custom-font&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Jost&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This specifies that a font located at &lt;code&gt;/fonts/Jost/Jost-400.woff2&lt;/code&gt;, of &lt;code&gt;woff2&lt;/code&gt; type, with &lt;code&gt;400&lt;/code&gt; weight, and &lt;code&gt;normal&lt;/code&gt; style is referenced as &lt;code&gt;Jost&lt;/code&gt;. Now we can use our font anywhere by setting &lt;code&gt;font-family: Jost;&lt;/code&gt;. Browsers download fonts only if a styling on the page references them. In this case, the browser will only download the Jost font if the page has an element with class &lt;code&gt;.custom-font&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;@font-face&lt;/code&gt; rule changes a bit when loading variable fonts.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@font-face&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Jost&lt;/span&gt; &lt;span class="n"&gt;VF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300&lt;/span&gt; &lt;span class="m"&gt;800&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* specify weight range of the font */&lt;/span&gt;
  &lt;span class="py"&gt;font-display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;swap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("/fonts/Jost/Jost-VF.woff2")&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;"woff2 supports variations"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="sx"&gt;url("/fonts/Jost/Jost-VF.woff2")&lt;/span&gt;
      &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;"woff2-variations"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.custom-font&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Jost&lt;/span&gt; &lt;span class="n"&gt;VF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;font-display&lt;/code&gt; property tells the browser when to render the font once it is loaded. It accepts the following values:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-auto-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;auto&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;This is browser default.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-swap-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;swap&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The fallback font will be used immediately. Once the custom font downloads, it swaps the font. It can cause 'Flash of Unstyled Text' or &lt;a href="https://css-tricks.com/fout-foit-foft/"&gt;FOUT&lt;/a&gt;. Use &lt;code&gt;swap&lt;/code&gt; only when the font is absolutely necessary. Make sure to deliver the font early enough to prevent layout shifts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zk0EUPM2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w1blqs0bq6mabpobsaxb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zk0EUPM2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w1blqs0bq6mabpobsaxb.png" alt="Timeline" width="880" height="240"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-block-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;block&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Displays invisible text for a. Once the custom font downloads, it swaps the font. It can cause 'Flash of Invisible Text' or &lt;a href="https://css-tricks.com/fout-foit-foft/"&gt;FOIT&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XMWmOEPy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8zyvz79nb6e2zj1nldr7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XMWmOEPy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8zyvz79nb6e2zj1nldr7.png" alt="Success timeline 1" width="880" height="359"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MHZ6y6Lp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ht2ib9b2fgrrx26etah8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MHZ6y6Lp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ht2ib9b2fgrrx26etah8.png" alt="Success timeline 2" width="880" height="264"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-fallback-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;fallback&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Blocks rendering for a short time (100ms). If the font is still not downloaded, use the fallback font. Gives a swap period of about 3 seconds for the custom font to load. If it doesn't load within the swap period, it will not be used.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1N9BMiex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v7pnhddudggjqt4g0rpz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1N9BMiex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v7pnhddudggjqt4g0rpz.png" alt="Success timeline 1" width="880" height="359"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HDuLsYU9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wh4t7ilkthtpx6n6s5kk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HDuLsYU9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wh4t7ilkthtpx6n6s5kk.png" alt="Success timeline 2" width="880" height="264"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kZIZ6RIQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jyqg67n8x05qr7mrot60.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kZIZ6RIQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jyqg67n8x05qr7mrot60.png" alt="Failure timeline" width="880" height="383"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-optional-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;optional&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Like &lt;code&gt;fallback&lt;/code&gt;, it blocks for a while and displays the fallback if the custom font is not yet downloaded. But, the browser decides whether to swap the downloaded custom font depending on the connection speed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preloading"&gt;
  &lt;/a&gt;
  Preloading?
&lt;/h2&gt;

&lt;p&gt;Sometimes, the absence of fonts can make your page unusable. It might be a no-brainer to load them asap because you know you WILL use them. We can &lt;code&gt;preload&lt;/code&gt; fonts by adding a &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; with &lt;code&gt;preload&lt;/code&gt; hint. This way, instead of the font to be discovered via stylesheet and downloaded, the browser will download the font at the earliest.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Preloaded resources are cached on the browsers for future requests.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt;
    &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"preload"&lt;/span&gt;
    &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/fonts/Jost/Jost-400.woff2"&lt;/span&gt;
    &lt;span class="na"&gt;as=&lt;/span&gt;&lt;span class="s"&gt;"font"&lt;/span&gt;
    &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"font/woff2"&lt;/span&gt;
    &lt;span class="na"&gt;crossorigin&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But this comes at a cost 😔. &lt;code&gt;preload&lt;/code&gt;ing resources might obstruct other critical resources for the page. If at all you end up &lt;code&gt;preload&lt;/code&gt;ing fonts, make sure your longest critical chain is short.&lt;/p&gt;

&lt;p&gt;When loading fonts from a 3rd party origin, you can &lt;code&gt;preconnect&lt;/code&gt; to establish an early connection. Below is an example with Google Fonts.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- preconnect origin serving stylesheets --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"preconnect"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.googleapis.com"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class="c"&gt;&amp;lt;!-- preconnect origin serving fonts --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"preconnect"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.gstatic.com"&lt;/span&gt; &lt;span class="na"&gt;crossorigin&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class="c"&gt;&amp;lt;!-- loading stylesheets --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt;
    &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.googleapis.com/css2?family=Jost&amp;amp;display=swap"&lt;/span&gt;
    &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that links with &lt;code&gt;prefetch&lt;/code&gt; and &lt;code&gt;preconnect&lt;/code&gt; hints are executed as the browser sees fit. Whereas &lt;code&gt;preload&lt;/code&gt; is mandatory. Modern web browsers already have good prioritization and do not need &lt;code&gt;preload&lt;/code&gt;s. But if you want some critical resource to be downloaded at the earliest, you can use it sparingly.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;preconnect&lt;/code&gt; for fonts needs a &lt;code&gt;crossorigin&lt;/code&gt; attribute because, unlike stylesheets, font files are served over &lt;a href="https://www.w3.org/TR/css-fonts-3/#font-fetching-requirements"&gt;CORS connection&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;How does all this fix the 2 issues we discussed in the beginning?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Faster text rendering&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A font will render faster if it is downloaded faster. Use variable fonts when needing multiple font styles. Subset and convert fonts to woff2 for the smallest font file size. Serve them over a CDN and HTTP/2 protocol for the fastest and most reliable speeds. &lt;code&gt;preload&lt;/code&gt; fonts when serving them or &lt;code&gt;preconnect&lt;/code&gt; fonts/stylesheets when using 3rd party services. When preloading, make sure your longest critical chain is the smallest possible&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Layout shifts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If the custom font is not a top priority, use &lt;code&gt;font-display: optional&lt;/code&gt;. This guarantees no layout shifts. But if the custom font is a top priority, use &lt;code&gt;font-display: swap&lt;/code&gt; with the above optimizations for the font delivery.&lt;/p&gt;

&lt;p&gt;Hope you find this post helpful! SA-YO-NA-RA! 👋😽&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>frontend</category>
      <category>performance</category>
    </item>
    <item>
      <title>Using GitHub Actions to answer questions about Pull Requests</title>
      <author>Banjo Obayomi</author>
      <pubDate>Wed, 10 Nov 2021 17:27:34 +0000</pubDate>
      <link>https://dev.to/banjtheman/using-github-actions-to-answer-questions-about-pull-requests-e64</link>
      <guid>https://dev.to/banjtheman/using-github-actions-to-answer-questions-about-pull-requests-e64</guid>
      <description>&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/banjtheman/prfaq_action/pull/34#issuecomment-964757256"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Comment for
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#34&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/apps/github-actions"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ND2Q_hEY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/in/15368%3Fv%3D4" alt="github-actions[bot] avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/apps/github-actions"&gt;github-actions[bot]&lt;/a&gt;
        &lt;/strong&gt; commented on &lt;a href="https://github.com/banjtheman/prfaq_action/pull/34#issuecomment-964757256"&gt;&lt;time&gt;Nov 10, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;h2&gt;
&lt;a id="user-content-pr-faq" class="anchor" href="#pr-faq"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;PR FAQ&lt;/h2&gt;
&lt;h3&gt;
&lt;a id="user-content-how-long-was-pr-open" class="anchor" href="#how-long-was-pr-open"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;How long was PR open?&lt;/h3&gt;
&lt;p&gt;The PR was open for 0 days, 0 hours, 0 minutes, 4 seconds&lt;/p&gt;
&lt;h3&gt;
&lt;a id="user-content-who-contributed-to-the-pr" class="anchor" href="#who-contributed-to-the-pr"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Who contributed to the PR?&lt;/h3&gt;
&lt;p&gt;The following users contributed to the PR&lt;br&gt;
banjtheman&lt;/p&gt;
&lt;h3&gt;
&lt;a id="user-content-what-files-changed-in-the-pr" class="anchor" href="#what-files-changed-in-the-pr"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;What files changed in the PR?&lt;/h3&gt;
&lt;p&gt;The following files changed in the PR&lt;br&gt;
templates/prfaq-template.md&lt;/p&gt;
&lt;h3&gt;
&lt;a id="user-content-how-many-lines-of-code-changed-in-the-pr" class="anchor" href="#how-many-lines-of-code-changed-in-the-pr"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;How many lines of code changed in the PR?&lt;/h3&gt;
&lt;p&gt;+5 -5 lines of code changed&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/banjtheman/prfaq_action/pull/34#issuecomment-964757256"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;The Pull Request FAQs (PRFAQs) is a mechanism to automatically capture relevant data points on a finished Pull Request. The PRFAQs currently answers the following questions.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;How long was PR open?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Who contributed to the PR?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What files changed in the PR?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How many lines of code changed in the PR? &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By leveraging existing GitHub Actions I was able to build a workflow to answer the questions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;

&lt;p&gt;The following highlights how this workflow works.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;When a pull request is closed, the workflow is started.&lt;/li&gt;
&lt;li&gt;The workflow downloads the repo using the GitHub Action &lt;a href="https://github.com/actions/checkout"&gt;actions/checkout@v2&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;The workflow uses the GitHub GraphQL API using the template query to get data on the pull request using the GitHub Action &lt;a href="https://github.com/helaili/github-graphql-action"&gt;helaili/github-graphql-action@2.0.1&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;The workflow saves the output as a JSON file&lt;/li&gt;
&lt;li&gt;The workflow uses the &lt;a href="https://github.com/jannekem/run-python-script-action"&gt;jannekem/run-python-script-action@v1&lt;/a&gt; to parse the JSON file to set answers to the questions as environment variables&lt;/li&gt;
&lt;li&gt;The workflow uses the &lt;a href="https://github.com/chuhlomin/render-template"&gt;chuhlomin/render-template@v1.2&lt;/a&gt; to set the answers into the PRFAQs template &lt;/li&gt;
&lt;li&gt;The workflow uses the &lt;a href="https://github.com/peter-evans/create-or-update-comment"&gt;peter-evans/create-or-update-comment@v1&lt;/a&gt; to post the answers as a comment on the Pull Request &lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#submission-category-maintainer-musthaves"&gt;
  &lt;/a&gt;
  Submission Category: Maintainer Must-Haves
&lt;/h3&gt;

&lt;p&gt;While Maintainers can find this information by scrolling through each Pull Request the PRFAQ workflow consolidates the effort into a single comment and provides vital information not found directly such as &lt;a href="https://stackoverflow.com/questions/55861526/how-can-i-track-how-long-pull-requests-have-been-open-on-github"&gt;how long the PR was open for&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yaml-file-and-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File and Link to Code
&lt;/h3&gt;

&lt;p&gt;Here is the GitHub Repo&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/banjtheman"&gt;
        banjtheman
      &lt;/a&gt; / &lt;a href="https://github.com/banjtheman/prfaq_action"&gt;
        prfaq_action
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Create a PRFAQ for merged pull requests
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Here is the Workflow Yaml&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;PRFAQ&lt;/span&gt;

&lt;span class="c1"&gt;# only trigger on pull request closed events&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;types&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;closed&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;PR_NUMBER&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ github.event.pull_request.number }}&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;get_pr_stats&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Checkout repository&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;GitHub GraphQL Action&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;helaili/github-graphql-action@2.0.1&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;query&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;queries/pr_stats.yaml&lt;/span&gt;
          &lt;span class="na"&gt;logLevel&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;debug&lt;/span&gt;
          &lt;span class="na"&gt;outputFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pr_stats.json&lt;/span&gt;
          &lt;span class="na"&gt;pr_num&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ env.PR_NUMBER }}&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Set env variables&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;jannekem/run-python-script-action@v1&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;script&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
            &lt;span class="s"&gt;import json&lt;/span&gt;
            &lt;span class="s"&gt;import datetime&lt;/span&gt;

            &lt;span class="s"&gt;with open("pr_stats.json", "r") as pr_file:&lt;/span&gt;
                &lt;span class="s"&gt;pr_stats = json.load(pr_file)&lt;/span&gt;

                &lt;span class="s"&gt;# Get Time Open&lt;/span&gt;
                &lt;span class="s"&gt;created_at = pr_stats["data"]["repository"]["pullRequest"]["createdAt"]&lt;/span&gt;
                &lt;span class="s"&gt;merged_at = pr_stats["data"]["repository"]["pullRequest"]["closedAt"]&lt;/span&gt;

                &lt;span class="s"&gt;created_at_timesamp = datetime.datetime.strptime(created_at, "%Y-%m-%dT%H:%M:%SZ")&lt;/span&gt;
                &lt;span class="s"&gt;merged_at_timestamp = datetime.datetime.strptime(merged_at, "%Y-%m-%dT%H:%M:%SZ")&lt;/span&gt;
                &lt;span class="s"&gt;timestamp_diff = merged_at_timestamp - created_at_timesamp&lt;/span&gt;

                &lt;span class="s"&gt;days, seconds = timestamp_diff.days, timestamp_diff.seconds&lt;/span&gt;
                &lt;span class="s"&gt;hours = days * 24 + seconds // 3600&lt;/span&gt;
                &lt;span class="s"&gt;minutes = (seconds % 3600) // 60&lt;/span&gt;
                &lt;span class="s"&gt;seconds = seconds % 60&lt;/span&gt;

                &lt;span class="s"&gt;timestamp_open = f" {days} days, {hours} hours, {minutes} minutes, {seconds} seconds"&lt;/span&gt;
                &lt;span class="s"&gt;print(timestamp_open)&lt;/span&gt;
                &lt;span class="s"&gt;set_env("PR_OPEN", timestamp_open)&lt;/span&gt;

                &lt;span class="s"&gt;# Get participants&lt;/span&gt;
                &lt;span class="s"&gt;participants = pr_stats["data"]["repository"]["pullRequest"]["participants"][&lt;/span&gt;
                    &lt;span class="s"&gt;"edges"&lt;/span&gt;
                &lt;span class="s"&gt;]&lt;/span&gt;
                &lt;span class="s"&gt;participants_string = ""&lt;/span&gt;
                &lt;span class="s"&gt;for participant in participants:&lt;/span&gt;
                    &lt;span class="s"&gt;participants_string += participant["node"]["login"] + "  "&lt;/span&gt;

                &lt;span class="s"&gt;print(participants_string)&lt;/span&gt;
                &lt;span class="s"&gt;set_env("PR_USERS", participants_string)&lt;/span&gt;

                &lt;span class="s"&gt;# Lines of code changed&lt;/span&gt;
                &lt;span class="s"&gt;additions = pr_stats["data"]["repository"]["pullRequest"]["additions"]&lt;/span&gt;
                &lt;span class="s"&gt;deletions = pr_stats["data"]["repository"]["pullRequest"]["deletions"]&lt;/span&gt;
                &lt;span class="s"&gt;content_changed = f"+{additions} -{deletions} lines of code"&lt;/span&gt;
                &lt;span class="s"&gt;print(content_changed)&lt;/span&gt;
                &lt;span class="s"&gt;set_env("PR_LOC", content_changed)&lt;/span&gt;

                &lt;span class="s"&gt;# Files that changed&lt;/span&gt;
                &lt;span class="s"&gt;files = pr_stats["data"]["repository"]["pullRequest"]["files"]["edges"]&lt;/span&gt;
                &lt;span class="s"&gt;files_string = ""&lt;/span&gt;
                &lt;span class="s"&gt;for file_path in files:&lt;/span&gt;
                    &lt;span class="s"&gt;files_string += file_path["node"]["path"] + "  "&lt;/span&gt;
                &lt;span class="s"&gt;print(files_string)&lt;/span&gt;
                &lt;span class="s"&gt;set_env("PR_FILES", files_string)&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Render template&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;template&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;chuhlomin/render-template@v1.2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;templates/prfaq-template.md&lt;/span&gt;
          &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
            &lt;span class="s"&gt;pr_open: ${{ env.PR_OPEN }}&lt;/span&gt;
            &lt;span class="s"&gt;pr_users: ${{ env.PR_USERS }}&lt;/span&gt;
            &lt;span class="s"&gt;pr_loc: ${{ env.PR_LOC }}&lt;/span&gt;
            &lt;span class="s"&gt;pr_files: ${{ env.PR_FILES }}&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Create comment&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;peter-evans/create-or-update-comment@v1&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;issue-number&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ env.PR_NUMBER }}&lt;/span&gt;
          &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ steps.template.outputs.result }}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;These are all the Actions I used to build the workflow&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/actions/checkout"&gt;actions/checkout@v2&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/helaili/github-graphql-action"&gt;helaili/github-graphql-action@2.0.1&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jannekem/run-python-script-action"&gt;jannekem/run-python-script-action@v1&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/chuhlomin/render-template"&gt;chuhlomin/render-template@v1.2&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/peter-evans/create-or-update-comment"&gt;peter-evans/create-or-update-comment@v1&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What other questions should this workflow answer? Leave your suggestions in the comments below.&lt;/p&gt;

</description>
      <category>actionshackathon21</category>
      <category>github</category>
      <category>opensource</category>
    </item>
  </channel>
</rss>
