<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Cost reduction techniques: Lesson for travel app development</title>
      <author>Adamo Digital</author>
      <pubDate>Thu, 12 Aug 2021 08:15:59 +0000</pubDate>
      <link>https://dev.to/adamodigitalco/cost-reduction-techniques-lesson-for-travel-app-development-22f3</link>
      <guid>https://dev.to/adamodigitalco/cost-reduction-techniques-lesson-for-travel-app-development-22f3</guid>
      <description>&lt;p&gt;&lt;em&gt;Apparently, the &lt;a href="https://adamodigital.com/travel-hospitality-software-development"&gt;travel software development&lt;/a&gt; market becomes more competitive, which leads to small companies or startups demanding cost reduction techniques to maximize their profits&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Indeed, applying &lt;strong&gt;IT cost reduction strategies&lt;/strong&gt; is now an essential requirement when travel startup demand to set foot in this competitive market. These cost reduction methods can support small businesses in managing their budget more effectively and avoiding the redundant cost that is unnecessary. From that, a business can minimize their development cost, focus on what is vital in the development process, where to hire a dedicated development company, which area they should spend. Therefore, cost-cutting strategies for companies are now needed more than ever. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-applying-costcutting-techniques"&gt;
  &lt;/a&gt;
  Advantages of applying cost-cutting techniques
&lt;/h2&gt;

&lt;p&gt;By applying effective types of cost reduction techniques in &lt;a href="https://adamodigital.com/"&gt;software development&lt;/a&gt;, a business can spend their money to enhance other activities, including marketing, customer services, and employee support.&lt;/p&gt;

&lt;p&gt;As the profit is increased, management may spend more on providing amenities to workers. It will ensure more productivity at work and more cordial relationships between management and workers; also reduce the labor turnover. &lt;/p&gt;

&lt;p&gt;With the money spending on the essential sector, the travel business can create competitive advantages over competitors. Travel app publishers can deliver different practical functions to users and continuously search for improvement based on user feedback. Also, the quality of the app can also be enhanced to reduce the concerns of bugs and lags from mobile travel users. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#factors-affecting-travel-app-development-cost"&gt;
  &lt;/a&gt;
  Factors affecting travel app development cost
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dsr4WYsf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dug2cqqg9kdbc0u6jpem.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dsr4WYsf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dug2cqqg9kdbc0u6jpem.jpg" alt="Cost reduction technique"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;1. The number and complexity of features:&lt;/strong&gt; Definitely, the number of features and their complexity is one of the critical factors that affect &lt;a href="https://adamodigital.com/travel-portal-development"&gt;travel app development&lt;/a&gt; cost. The less time and effort to build the software, the lower the price will be.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Operating systems:&lt;/strong&gt; The travel app development cost depends on the type and number of operating systems, such as IOS, Android, Windows, Linux, etc. For example, developing a native &lt;a href="https://adamodigital.com/our-services"&gt;software solution&lt;/a&gt; for IOS only will be less costly than for IOS and Android. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. UI and UX design:&lt;/strong&gt; UI and UX design is a critical development stage that businesses should focus on. Design size and complexity affect the budget for developing a &lt;a href="https://adamodigital.com/our-portfolio"&gt;software project&lt;/a&gt;. More screens, pages, handcrafted elements, complex animations will lead to more cost of this stage.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Quality assurance:&lt;/strong&gt; In this process, QA engineers will check the system for bugs, errors, and compliance with the project specification. Also, they have to ensure the software provides a consistent user experience on all devices and platforms. Glitches, maintenance, bugs are the problems of the increase in final price.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Third-party API integration:&lt;/strong&gt; In the &lt;a href="https://adamodigital.com/about-us"&gt;software development&lt;/a&gt; process, third-party service integration is necessary to enable functionality. With API integration, engineers are able to save time and effort. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cost-reduction-methods-for-travel-app-publishers"&gt;
  &lt;/a&gt;
  Cost reduction methods for travel app publishers
&lt;/h3&gt;

&lt;p&gt;Most new businesses, when starting developing travel apps, usually pay for services that not necessary. They mostly pay for their tools, vehicles, applications, services, and even excessive fees. That’s why travel app businesses need cost reduction consultants to ensure they are following the correct methods. Bellow are most effective IT cost reduction strategies:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#you-should-start-with-evaluating-your-business-expenses"&gt;
  &lt;/a&gt;
  You should start with evaluating your business expenses
&lt;/h4&gt;

&lt;p&gt;Among cost-saving methods in a company, evaluating the expenses is the most effective one. Travel app publishers can cut down unused services and products, vendors that are bugging down. Businesses need carefully considering which elements are crucial should be invested in &lt;a href="https://adamodigital.com/booking-engines"&gt;travel app development&lt;/a&gt;. The money from redundant services should be spent on organizational growth campaigns to increase business efficiency quickly. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#understand-target-market"&gt;
  &lt;/a&gt;
  Understand target market
&lt;/h4&gt;

&lt;p&gt;Defining a target market is a massive priority for reducing costs. In the tourism industry, rather than spending money to create an app similar to competitors, businesses should focus on finding answers to solve traveler’s problems. From that, businesses can avoid marketing costs, advertisement costs as users have to install the unique app to get the solution. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#hire-remote-contractors-and-freelancers"&gt;
  &lt;/a&gt;
  Hire remote contractors and freelancers
&lt;/h4&gt;

&lt;p&gt;Of course, hiring a freelancer can be a very effective cost reduction strategy for your business. Businesses can avoid the cost of renting office space and co-working offices. Additionally, companies don’t need to provide benefits to freelancers because they are often self-employed. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#automate-as-much-as-possible"&gt;
  &lt;/a&gt;
  Automate as much as possible
&lt;/h4&gt;

&lt;p&gt;Automation is about replacing humans with computers to smaller timeframes for production, meaning fewer person hours and consequently reduced costs. Additionally, applying automation in &lt;a href="https://adamodigital.com/travel-hospitality-software-development"&gt;travel app development&lt;/a&gt; can enable developers to avoid time-consuming tasks and spend more time on other important ones. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#partnering-with-experts"&gt;
  &lt;/a&gt;
  Partnering with experts
&lt;/h4&gt;

&lt;p&gt;Definitely, partnering with &lt;a href="https://adamodigital.com/dedicated-software-development-team"&gt;offshore software development teams&lt;/a&gt; can be a valuable strategy for reducing the cost. These outsourcing software development teams can be highly competitive in pricing, especially in countries like Vietnam. Adamo Digital - a professional &lt;a href="https://adamodigital.com/"&gt;software development company&lt;/a&gt;, will provide full-cycle services in software development, especially in the travel industry with the best price on the market. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#build-a-minimum-viable-product"&gt;
  &lt;/a&gt;
  Build a minimum viable product
&lt;/h4&gt;

&lt;p&gt;In those types of cost reduction techniques, MVP development is a valuable method to reduce the cost of developing a software project and faster receive a working solution. This method is widely used to test ideas, attract investors, and better time-to-market.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Where to develop a mobile app for travel?&lt;/strong&gt; &lt;em&gt;As mentioned above, Vietnam is the ideal place for travel startups who want to develop a mobile or web application due to its competitive price.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>startup</category>
      <category>costreduction</category>
      <category>strategies</category>
    </item>
    <item>
      <title>GitHub's In-Built New Feature: Quickly Open Any Repository In Visual Studio Code</title>
      <author>Yogesh Chavan</author>
      <pubDate>Thu, 12 Aug 2021 08:07:38 +0000</pubDate>
      <link>https://dev.to/myogeshchavan97/github-s-in-built-new-feature-quickly-open-any-repository-in-visual-studio-code-4fkc</link>
      <guid>https://dev.to/myogeshchavan97/github-s-in-built-new-feature-quickly-open-any-repository-in-visual-studio-code-4fkc</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;GitHub has added in-built support to easily open your repository in Visual Studio Code.&lt;/p&gt;

&lt;p&gt;Previously, we either need to use &lt;a href="https://levelup.gitconnected.com/how-to-browse-project-files-on-github-as-if-you-are-browsing-in-your-ide-1022f153af42?source=friends_link&amp;amp;sk=259b3aea4a293b09a21e8871234dfa20"&gt;octotree&lt;/a&gt; extension to browse files or use &lt;a href="https://github.com/conwnet/github1s"&gt;github1s&lt;/a&gt; to view in Visual Studio Code.&lt;/p&gt;

&lt;p&gt;But github1s was opening just a read-only editor where you can't make any modifications to files.&lt;/p&gt;

&lt;p&gt;Now, with GitHub's in-built support, you can quickly open any GitHub repository in Visual Studio Code and get the look and feels of it. &lt;/p&gt;

&lt;p&gt;Almost all the features of Visual Studio Code you can explore in this feature.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-open-repository-in-visual-studio-code"&gt;
  &lt;/a&gt;
  How to Open Repository in Visual Studio Code
&lt;/h2&gt;

&lt;p&gt;Just press . (dot) on your keyboard when browsing any GitHub repository and it will be opened in Visual Studio Code on the browser.&lt;/p&gt;

&lt;p&gt;For example, Suppose, you're on &lt;a href="https://github.com/myogeshchavan97/spotify-music-search-app"&gt;Spotify Music Search App Repository&lt;/a&gt; and you press . (dot), then you'll be redirected to Visual Studio Code with your repository opened in it as shown below:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/mII50cepKg4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;It's so cool 😍.&lt;/p&gt;

&lt;p&gt;Currently, you can't open a terminal to execute the code. But you get the full power and feel of Visual Studio Code and you can even edit the code.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For now, If you want to execute the code in the repository, you can replace the github with githubbox in your GitHub repository URL and it will open CodeSandbox where you can see your code and execute it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For example, the URL &lt;a href="https://github.com/myogeshchavan97/spotify-music-search-app"&gt;https://github.com/myogeshchavan97/spotify-music-search-app&lt;/a&gt; will become &lt;a href="https://githubbox.com/myogeshchavan97/spotify-music-search-app"&gt;https://githubbox.com/myogeshchavan97/spotify-music-search-app&lt;/a&gt; after replacing github with githubbox.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To learn more about the Visual Studio Code Web editor, check out &lt;a href="https://github.com/features/codespaces"&gt;this link&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h3&gt;

&lt;p&gt;Check out my recently published &lt;a href="https://master-redux.yogeshchavan.dev/"&gt;Mastering Redux&lt;/a&gt; course.&lt;/p&gt;

&lt;p&gt;In this course, you will build 3 apps along with food ordering app and you'll learn:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Basic and advanced Redux&lt;/li&gt;
&lt;li&gt;How to manage the complex state of array and objects&lt;/li&gt;
&lt;li&gt;How to use multiple reducers to manage complex redux state&lt;/li&gt;
&lt;li&gt;How to debug Redux application&lt;/li&gt;
&lt;li&gt;How to use Redux in React using react-redux library to make your app reactive.&lt;/li&gt;
&lt;li&gt;How to use redux-thunk library to handle async API calls and much more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and then finally we'll build a complete &lt;a href="https://www.youtube.com/watch?v=2zaPDfCKAvM"&gt;food ordering app&lt;/a&gt; from scratch with stripe integration for accepting payments and deploy it to the production.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3w0DGum"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Taa9-Eif--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/98ae4f4ead57fde8d47fcf7641220b72/raw/c3e4265df4396d639a7938a83bffd570130483b1/banner.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Want to stay up to date with regular content regarding JavaScript, React, Node.js? &lt;a href="https://www.linkedin.com/in/yogesh-chavan97/"&gt;Follow me on LinkedIn&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/myogeshchavan97"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xG4nnUnu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-yellow.png"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>node</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 7, Making Python modules</title>
      <author>Aatmaj</author>
      <pubDate>Thu, 12 Aug 2021 07:36:45 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-7-making-python-modules-kmf</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-7-making-python-modules-kmf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#we-have-learnt-how-to-use-predefined-python-modules-today-we-will-create-our-very-own-python-module-so-put-your-seatbelts-on-for-this-thrilling-python-journey"&gt;
  &lt;/a&gt;
  We have learnt how to use predefined python modules. Today we will create our very own Python module. 🤩 So put your seatbelts on for this thrilling Python journey🚀
&lt;/h2&gt;




&lt;h3&gt;
  &lt;a href="#modules-in-python"&gt;
  &lt;/a&gt;
  Modules in Python
&lt;/h3&gt;

&lt;p&gt;Creating a module in Python is a very easy task. &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZMscObLU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gimh5787334irbtozlp6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZMscObLU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gimh5787334irbtozlp6.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Step I&lt;/strong&gt; Make a python file named mymodule.py &lt;em&gt;(or any other name ending with &lt;code&gt;.py&lt;/code&gt;)&lt;/em&gt; which contains various functions. Do this in Python IDLE or any other IDE.
Here is a sample file-
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hi&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"hi"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"hello"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;printer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Step II&lt;/strong&gt; Save the python file (or copy-paste the file) in the Lib (not libs) folder of the Python source code.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J8SAzllr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0h2lhupyhf1kvi16htj.png" alt="image"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qRxyq5qW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lch7es61p6z5h4omr62o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qRxyq5qW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lch7es61p6z5h4omr62o.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Step III&lt;/strong&gt; In the file in which you want to use the module, write &lt;code&gt;import mymodule&lt;/code&gt; &lt;em&gt;(import the relevant module name)&lt;/em&gt; After that, just use the functions in the module as predefined functions. Simple !!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is the program which uses the functions in our module.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;mymodule&lt;/span&gt;
&lt;span class="n"&gt;mymodule&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Welcome to Python intermediate course!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mymodule&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;mymodule&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We now save it in a file named 'mymoduletester' and run it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yRZj_8FW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/38ckjf3y6kcdx9tiiuhs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yRZj_8FW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/38ckjf3y6kcdx9tiiuhs.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After we run the file, an output is generated in a command line window.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gRr-Dqkw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6nyx30dz7bw9ptrzucz9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gRr-Dqkw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6nyx30dz7bw9ptrzucz9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OUTPUT-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Python 3.10.0a2 (tags/v3.10.0a2:114ee5d, Nov  3 2020, 00:37:42) [MSC v.1927 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
&amp;gt;&amp;gt;&amp;gt; 
= RESTART: C:/Users/aatma/AppData/Local/Programs/Python/Python310/Lib/mymoduletester.py
Welcome to Python intermediate course!
5
hello

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it! We have successfully made our own module and used it in our code!🤓 Cool!😎&lt;/p&gt;

&lt;p&gt;I have used the IDLE for Python over here, but you are free to use any editor you want. We can have the same effect by using the online GDB compiler as shown below.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MWojobPq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/175gnpj0k8xzvqi8kct2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MWojobPq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/175gnpj0k8xzvqi8kct2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;✌️So friends that's all for now. 😊 Hope you all are having fun.😎 Please let me know in the comment section below 👇. And don't forget to like the post if you did. 😍 I am open to any suggestions or doubts. 🤠 Just post in the comments below or gmail me. 😉&lt;br&gt;
Thank you all👍&lt;/p&gt;

&lt;p&gt;Also please visit the &lt;a href="https://github.com/Aatmaj-Zephyr/Learning-Python"&gt;Learning-Python repo&lt;/a&gt; made especially for this course and don't forget to star it too&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>SQL Series : DataTypes</title>
      <author>Uday Yadav</author>
      <pubDate>Thu, 12 Aug 2021 07:34:20 +0000</pubDate>
      <link>https://dev.to/dev117uday/sql-series-datatypes-13pc</link>
      <guid>https://dev.to/dev117uday/sql-series-datatypes-13pc</guid>
      <description>&lt;h2&gt;
  &lt;a href="#data-types"&gt;
  &lt;/a&gt;
  Data Types
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#boolean-data"&gt;
  &lt;/a&gt;
  Boolean Data
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;TRUE&lt;/li&gt;
&lt;li&gt;FALSE&lt;/li&gt;
&lt;li&gt;NULL&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;TRUE&lt;/th&gt;
&lt;th&gt;FALSE&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;TRUE&lt;/td&gt;
&lt;td&gt;FALSE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'true'&lt;/td&gt;
&lt;td&gt;'false'&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'t'&lt;/td&gt;
&lt;td&gt;'f'&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'yes'&lt;/td&gt;
&lt;td&gt;'no'&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'y'&lt;/td&gt;
&lt;td&gt;'n'&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'1'&lt;/td&gt;
&lt;td&gt;'0'&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;booltable&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;SERIAL&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;is_enable&lt;/span&gt; &lt;span class="nb"&gt;BOOLEAN&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;booltable&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_enable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'true'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'y'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'yes'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'t'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'1'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;booltable&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_enable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'false'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'n'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'no'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'f'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'0'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;booltable&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;booltable&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;is_enable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'y'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;booltable&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="n"&gt;is_enable&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#character-data"&gt;
  &lt;/a&gt;
  Character Data
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Character Type&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CHARACTER (N), CHAR (N)&lt;/td&gt;
&lt;td&gt;fixed-length, blank padded&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CHARACTER VARYING (N), VARCHAR(N)&lt;/td&gt;
&lt;td&gt;variable length with length limit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TEXT, VARCHAR&lt;/td&gt;
&lt;td&gt;variable unlimited length, max 1GB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;n is default to 1
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="c1"&gt;-- INPUT&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;CAST&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Uday'&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nb"&gt;character&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;-- OUTPUT&lt;/span&gt;
&lt;span class="nv"&gt;"Uday      "&lt;/span&gt;

&lt;span class="c1"&gt;-- INPUT&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="s1"&gt;'Uday'&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nb"&gt;character&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;-- OUTPUT&lt;/span&gt;
&lt;span class="nv"&gt;"Uday      "&lt;/span&gt;

&lt;span class="c1"&gt;-- INPUT&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="s1"&gt;'uday'&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;-- OUTPUT&lt;/span&gt;
&lt;span class="nv"&gt;"uday"&lt;/span&gt;

&lt;span class="c1"&gt;-- INPUT&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="s1"&gt;'lorem ipsum'&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;-- OUTPUT&lt;/span&gt;
&lt;span class="nv"&gt;"lorem ipsum"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#numeric-data"&gt;
  &lt;/a&gt;
  Numeric Data
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Types&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Integers&lt;/td&gt;
&lt;td&gt;whole number, +ve and -ve&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Fixed-point, floating point&lt;/td&gt;
&lt;td&gt;for fractions of whole nu&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;size (bytes)&lt;/th&gt;
&lt;th&gt;min&lt;/th&gt;
&lt;th&gt;max&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;smallint&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;-32678&lt;/td&gt;
&lt;td&gt;32767&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;-2,147,483,648&lt;/td&gt;
&lt;td&gt;2,147,483,647&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bigint&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;-9223372036854775808&lt;/td&gt;
&lt;td&gt;9223372036854775807&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;size&lt;/th&gt;
&lt;th&gt;range&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;smallserial&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1 to 32767&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;serial&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1 to 2147483647&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bigserial&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;1 to 9223372036854775807&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#fixed-point-data"&gt;
  &lt;/a&gt;
  Fixed Point Data
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;numeric ( precision , scale ) | decimal ( precision , scale )&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;precision : max number of digits to the left and right of the decimal point&lt;/li&gt;
&lt;li&gt;scale : number of digits allowable on the right of the decimal point&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#floating-point-data"&gt;
  &lt;/a&gt;
  Floating Point Data
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Real&lt;/td&gt;
&lt;td&gt;allows precision to six decimal digits&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Double precision&lt;/td&gt;
&lt;td&gt;allows precision to 15 digits points of precision&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;size&lt;/th&gt;
&lt;th&gt;storage type&lt;/th&gt;
&lt;th&gt;Range&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;numeric, decimal&lt;/td&gt;
&lt;td&gt;variable&lt;/td&gt;
&lt;td&gt;fixed point&lt;/td&gt;
&lt;td&gt;131072 digits before decimal point and 16383 digits after the decimal point&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;real&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;floating point&lt;/td&gt;
&lt;td&gt;6 decimal digits precision&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;double precision&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;floating point&lt;/td&gt;
&lt;td&gt;15 decimal digits precision&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;table_numbers&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;col_numeric&lt;/span&gt; &lt;span class="nb"&gt;numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;col_real&lt;/span&gt; &lt;span class="nb"&gt;real&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;col_double&lt;/span&gt; &lt;span class="nb"&gt;double&lt;/span&gt; &lt;span class="nb"&gt;precision&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;table_numbers&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;col_numeric&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;col_real&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;col_double&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;34675&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;34675&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;34675&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2345678910&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2345678910&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2345678910&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;table_numbers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;-- OUTPUT&lt;/span&gt;
&lt;span class="n"&gt;learning&lt;/span&gt;&lt;span class="o"&gt;=#&lt;/span&gt; &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;table_numbers&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="n"&gt;col_numeric&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;col_real&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;col_double&lt;/span&gt;  
&lt;span class="c1"&gt;------------------+----------+-------------&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;90000&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;         &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
     &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;34675&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;34675&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;34675&lt;/span&gt;
     &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;23457&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;234568&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;234567891&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Hierarchical order to SELECT best type : numeric &amp;gt; decimal &amp;gt; float&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#date-time-data"&gt;
  &lt;/a&gt;
  Date Time Data
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;stores&lt;/th&gt;
&lt;th&gt;low&lt;/th&gt;
&lt;th&gt;high&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Date&lt;/td&gt;
&lt;td&gt;date only&lt;/td&gt;
&lt;td&gt;4713 BC&lt;/td&gt;
&lt;td&gt;294276 AD&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Time&lt;/td&gt;
&lt;td&gt;time only&lt;/td&gt;
&lt;td&gt;4713 BC&lt;/td&gt;
&lt;td&gt;5874897 AD&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Timestamp&lt;/td&gt;
&lt;td&gt;date and time&lt;/td&gt;
&lt;td&gt;4713 BC&lt;/td&gt;
&lt;td&gt;294276 AD&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Timestampz&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;date, time and timezone&lt;/td&gt;
&lt;td&gt;4713 BC&lt;/td&gt;
&lt;td&gt;294276 AD&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Interval&lt;/td&gt;
&lt;td&gt;difference btw time&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#date-type"&gt;
  &lt;/a&gt;
  Date type
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;table_dates&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;serial&lt;/span&gt; &lt;span class="k"&gt;primary&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;employee_name&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;hire_date&lt;/span&gt; &lt;span class="nb"&gt;DATE&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;add_date&lt;/span&gt; &lt;span class="nb"&gt;DATE&lt;/span&gt; &lt;span class="k"&gt;DEFAULT&lt;/span&gt; &lt;span class="k"&gt;CURRENT_DATE&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;table_dates&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;employee_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hire_date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'uday'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'2020-02-02'&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="s1"&gt;'another uday'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'2020-02-01'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;table_dates&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;NOW&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#time-type"&gt;
  &lt;/a&gt;
  Time type
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;table_time&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;serial&lt;/span&gt; &lt;span class="k"&gt;primary&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;class_name&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;start_time&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;end_time&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;table_time&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;class_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'maths'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'08:00:00'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'08:55:00'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
           &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'chemistry'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'08:55:00'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'09:00:00'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;table_time&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;-- OUTPUT&lt;/span&gt;

 &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;class_name&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;start_time&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;end_time&lt;/span&gt; 
&lt;span class="c1"&gt;---------+------------+------------+----------&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;maths&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
  &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;chemistry&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;CURRENT_TIME&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;current_time&lt;/span&gt;    
&lt;span class="c1"&gt;-------------------------&lt;/span&gt;
 &lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;163354&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;CURRENT_TIME&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;current_time&lt;/span&gt;  
&lt;span class="c1"&gt;---------------------&lt;/span&gt;
 &lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;96&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;LOCALTIME&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;localtime&lt;/span&gt;    
&lt;span class="c1"&gt;----------------------&lt;/span&gt;
 &lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;717509&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="s1"&gt;'12:10'&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="s1"&gt;'04:30'&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="k"&gt;RESULT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;result&lt;/span&gt;  
&lt;span class="c1"&gt;---------------&lt;/span&gt;
 &lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;-- format : interval 'n type'&lt;/span&gt;
&lt;span class="c1"&gt;-- n = number&lt;/span&gt;
&lt;span class="c1"&gt;-- type : second, minute, hours, day, month, year ....&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;CURRENT_TIME&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;CURRENT_TIME&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;INTERVAL&lt;/span&gt; &lt;span class="s1"&gt;'2 hours'&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="k"&gt;RESULT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;current_time&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="k"&gt;result&lt;/span&gt;       
&lt;span class="c1"&gt;-------------------------+--------------------&lt;/span&gt;
 &lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;241919&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;241919&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;CURRENT_TIME&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;CURRENT_TIME&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;INTERVAL&lt;/span&gt; &lt;span class="s1"&gt;'-2 hours'&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="k"&gt;RESULT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;current_time&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="k"&gt;result&lt;/span&gt;       
&lt;span class="c1"&gt;-------------------------+--------------------&lt;/span&gt;
 &lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;644727&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;644727&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#timestamp-and-timezone"&gt;
  &lt;/a&gt;
  Timestamp and Timezone
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;timestamp&lt;/code&gt; : stores time without time zone&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;timestamptz&lt;/code&gt; : timestamp with time zone , stored using UTC format&lt;/li&gt;
&lt;li&gt;adding timestamp to timestamptz without mentioning the zone will result in server automatically assumes timezone to system's timezone&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Internally, PostgreSQL will store the timezoneaccurately but then OUTPUTting the data, will it be converted according to your timezone&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;pg_timezone_names&lt;/span&gt; 
    &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'posix/Asia/Calcutta'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;TIMEZONE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Asia/Calcutta'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;NOW&lt;/span&gt;&lt;span class="p"&gt;()::&lt;/span&gt;&lt;span class="nb"&gt;TIMESTAMP&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="n"&gt;now&lt;/span&gt;             
&lt;span class="c1"&gt;---------------------------------&lt;/span&gt;
 &lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;971433&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;table_time_tz&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;ts&lt;/span&gt; &lt;span class="nb"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;tstz&lt;/span&gt; &lt;span class="n"&gt;timestamptz&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;table_time_tz&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tstz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'2020-12-22 10:10:10'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'2020-12-22 10:10:10.009+05:30'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;table_time_tz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

         &lt;span class="n"&gt;ts&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;             &lt;span class="n"&gt;tstz&lt;/span&gt;              
&lt;span class="c1"&gt;--------------------------+-------------------------------&lt;/span&gt;
 &lt;span class="mi"&gt;2020&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2020&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;009&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;CURRENT_TIMESTAMP&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;current_timestamp&lt;/span&gt;        
&lt;span class="c1"&gt;--------------------------------------&lt;/span&gt;
 &lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;54762&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Asia/Singapore'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'2020-01-01 00:00:00'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;timezone&lt;/span&gt;       
&lt;span class="c1"&gt;--------------------------&lt;/span&gt;
 &lt;span class="mi"&gt;2020&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#uuid"&gt;
  &lt;/a&gt;
  UUID
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;UUID : Universal Unique Identifier&lt;/li&gt;
&lt;li&gt;PostgreSQL doesn't provide internal function to generate UUID's, use &lt;code&gt;uuid-ossp&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="n"&gt;EXTENSION&lt;/span&gt; &lt;span class="n"&gt;IF&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;EXISTS&lt;/span&gt; &lt;span class="nv"&gt;"uuid-ossp"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;uuid_generate_v1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

           &lt;span class="n"&gt;uuid_generate_v1&lt;/span&gt;           
&lt;span class="c1"&gt;-------------------------------------------&lt;/span&gt;
 &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;d459e0c&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fb3e&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="n"&gt;eb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a638&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;0242&lt;/span&gt;&lt;span class="n"&gt;ac110002&lt;/span&gt;


&lt;span class="c1"&gt;-- pure randomness&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;uuid_generate_v4&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

           &lt;span class="n"&gt;uuid_generate_v4&lt;/span&gt;           
&lt;span class="c1"&gt;-------------------------------------------&lt;/span&gt;
 &lt;span class="mi"&gt;418&lt;/span&gt;&lt;span class="n"&gt;f39e5&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;a46&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;da2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;cea&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;884904&lt;/span&gt;&lt;span class="n"&gt;f45d6f&lt;/span&gt;


&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;products_uuid&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="n"&gt;uuid&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;uuid_generate_v1&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="n"&gt;product_name&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;products_uuid&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'ice cream'&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="s1"&gt;'cake'&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="s1"&gt;'candies'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;products_uuid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

                  &lt;span class="n"&gt;id&lt;/span&gt;                  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;product_name&lt;/span&gt; 
&lt;span class="c1"&gt;-------------------------------------------+--------------&lt;/span&gt;
 &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;cf1dbe0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fb3e&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="n"&gt;eb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a638&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;0242&lt;/span&gt;&lt;span class="n"&gt;ac110002&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;ice&lt;/span&gt; &lt;span class="n"&gt;cream&lt;/span&gt;
 &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;cf1df28&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fb3e&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="n"&gt;eb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a638&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;0242&lt;/span&gt;&lt;span class="n"&gt;ac110002&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;cake&lt;/span&gt;
 &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;cf1df46&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fb3e&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="n"&gt;eb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a638&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;0242&lt;/span&gt;&lt;span class="n"&gt;ac110002&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;candies&lt;/span&gt;

&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;products_uuid_v4&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="n"&gt;uuid&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;uuid_generate_v4&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="n"&gt;product_name&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;products_uuid_v4&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'ice cream'&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="s1"&gt;'cake'&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="s1"&gt;'candies'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;products_uuid_v4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;learning&lt;/span&gt;&lt;span class="o"&gt;=#&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;products_uuid_v4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                  &lt;span class="n"&gt;id&lt;/span&gt;                  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;product_name&lt;/span&gt; 
&lt;span class="c1"&gt;-------------------------------------------+--------------&lt;/span&gt;
 &lt;span class="mi"&gt;83&lt;/span&gt;&lt;span class="n"&gt;b74bed&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;cf8&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;e26&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="n"&gt;b0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c7c7b2e5f3e7&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;ice&lt;/span&gt; &lt;span class="n"&gt;cream&lt;/span&gt;
 &lt;span class="n"&gt;ac563251&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="n"&gt;a95&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;408&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;966&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ed5ecc1f228d&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;cake&lt;/span&gt;
 &lt;span class="mi"&gt;1079&lt;/span&gt;&lt;span class="n"&gt;f6d3&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b0c3&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="n"&gt;ef&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bd2e&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;da4467b63432&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;candies&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#hstore"&gt;
  &lt;/a&gt;
  HSTORE
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;stores data in key-value pairs&lt;/li&gt;
&lt;li&gt;key and VALUES are text string only
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="n"&gt;EXTENSION&lt;/span&gt; &lt;span class="n"&gt;IF&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;EXISTS&lt;/span&gt; &lt;span class="n"&gt;hstore&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;table_hstore&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;SERIAL&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;book_info&lt;/span&gt; &lt;span class="n"&gt;hstore&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;table_hstore&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;book_info&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'Title 1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;' "publisher" =&amp;gt; "ABC publisher" , 
    "paper_cost" =&amp;gt; "100" , "e_cost" =&amp;gt; "5.85" '&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;table_hstore&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;title&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="n"&gt;book_info&lt;/span&gt;                              

  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Title&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;"e_cost"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;"5.85"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"publisher"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;"ABC publisher"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"paper_cost"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;"100"&lt;/span&gt;


&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;book_info&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'publisher'&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;publisher&lt;/span&gt; 
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;table_hstore&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

   &lt;span class="n"&gt;publisher&lt;/span&gt;   
&lt;span class="c1"&gt;--------------------&lt;/span&gt;
 &lt;span class="n"&gt;ABC&lt;/span&gt; &lt;span class="n"&gt;publisher&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#json"&gt;
  &lt;/a&gt;
  Json
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;PostgreSQL supports both 

&lt;ul&gt;
&lt;li&gt;JSON&lt;/li&gt;
&lt;li&gt;BSON or JSONB ( Binary JSON )&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;JSONB has full support for indexing
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;table_json&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;SERIAL&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;docs&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;table_json&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'[1,2,3,4,5,6]'&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="s1"&gt;'{"key":"value"}'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;table_json&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'[{"key":"value"},{"key2":"value2"}]'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;table_json&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;                &lt;span class="n"&gt;docs&lt;/span&gt;                 
&lt;span class="c1"&gt;---------+-------------------------------------&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"value"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"value"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;"key2"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;"value2"&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;


&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;table_json&lt;/span&gt; &lt;span class="k"&gt;alter&lt;/span&gt; &lt;span class="k"&gt;column&lt;/span&gt; &lt;span class="n"&gt;docs&lt;/span&gt; &lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;jsonb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;table_json&lt;/span&gt; &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;docs&lt;/span&gt; &lt;span class="o"&gt;@&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'2'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;        &lt;span class="n"&gt;docs&lt;/span&gt;        
&lt;span class="c1"&gt;---------+--------------------&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;


&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;index&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;table_json&lt;/span&gt; &lt;span class="k"&gt;USING&lt;/span&gt; &lt;span class="n"&gt;GIN&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt; &lt;span class="n"&gt;jsonb_path_ops&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#network-address-data-types"&gt;
  &lt;/a&gt;
  Network Address Data Types
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Storage Size&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;cidr&lt;/td&gt;
&lt;td&gt;7 or 19 bytes&lt;/td&gt;
&lt;td&gt;IPv4 and IPv6 networks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;inet&lt;/td&gt;
&lt;td&gt;7 or 19 bytes&lt;/td&gt;
&lt;td&gt;IPv4 and IPv6 hosts and networks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;macaddr&lt;/td&gt;
&lt;td&gt;6 bytes&lt;/td&gt;
&lt;td&gt;MAC addresses&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;macaddr8&lt;/td&gt;
&lt;td&gt;8 bytes&lt;/td&gt;
&lt;td&gt;MAC addresses ( EUI 64-bit )&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;It is better to use these types instead of plain text types of store network address, because  these types offer input error checking and specialised operators and functions&lt;/li&gt;
&lt;li&gt;Supports indexing and advance operations
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;table_netaddr&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;SERIAL&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="n"&gt;inet&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;table_netaddr&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'148.77.50.74'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'110.158.172.66'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'176.103.251.175'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'84.84.14.58'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'141.122.225.161'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'78.44.113.33'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'81.236.254.9'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'82.116.85.21'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'54.64.79.223'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'162.240.78.253'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;table_netaddr&lt;/span&gt; &lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;ip&lt;/span&gt;        
&lt;span class="c1"&gt;---------+-----------------&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;148&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;77&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;74&lt;/span&gt;
  &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;110&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;158&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;172&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt;
  &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;176&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;103&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;251&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;175&lt;/span&gt;
  &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;84&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;84&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;
  &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;141&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;122&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;225&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;161&lt;/span&gt;


&lt;span class="k"&gt;SELECT&lt;/span&gt; 
       &lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
       &lt;span class="n"&gt;set_masklen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;inet_24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
       &lt;span class="n"&gt;set_masklen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cidr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;cidr_24&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;set_masklen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cidr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;cidr_27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;set_masklen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cidr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;cidr_28&lt;/span&gt; 
&lt;span class="k"&gt;FROM&lt;/span&gt; 
     &lt;span class="n"&gt;table_netaddr&lt;/span&gt; &lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;inet_24&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;cidr_24&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;cidr_27&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;cidr_28&lt;/span&gt; 

 &lt;span class="mi"&gt;148&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;77&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;74&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;148&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;77&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;148&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;77&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;148&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;77&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;148&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;77&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;
 &lt;span class="mi"&gt;110&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;158&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;172&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;110&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;158&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;172&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;110&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;158&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;172&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;110&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;158&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;172&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;110&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;158&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;172&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>database</category>
      <category>postgres</category>
      <category>programming</category>
    </item>
    <item>
      <title>What You Need to Know About VPS Hosting 2021</title>
      <author>Brand Soft Tech</author>
      <pubDate>Thu, 12 Aug 2021 07:26:32 +0000</pubDate>
      <link>https://dev.to/brandsofttech/what-you-need-to-know-about-vps-hosting-3171</link>
      <guid>https://dev.to/brandsofttech/what-you-need-to-know-about-vps-hosting-3171</guid>
      <description>&lt;p&gt;There is no doubt that VPS Hosting 2021 or Virtual Private Server is one of the newest forms of web hosting which has emerged in recent years. In a nutshell, VPS is a type of bridge between dedicated and shared hosting services. As you may know, VPS provide excellent features such as: flexibility, isolation, high level of isolation, dedicated server architecture, separate disk space and bandwidth and easy management. Furthermore, you can get a free VPS today and use it for a reasonable period.&lt;/p&gt;

&lt;p&gt;When it comes to hosting facilities, VPS are very much similar to shared hosting but with added security and privacy. In other words, you can enjoy the benefits of a dedicated hosting but with better features at a lower cost. In simple terms, as a VPS host you can enjoy dedicated resources, separate from other users on the same physical machine. So, in short, you will enjoy more flexibility, separate space and bandwidth as compared with shared hosting.&lt;/p&gt;

&lt;p&gt;Now, as you are aware of all these advantages of VPS hosting, you must be curious to know how VPS will benefit you and your website. To understand the exact benefits, let us have a look at how VPS can improve website performance. &lt;br&gt;
The main reason why VPS hosting is popular among web developers and website owners is because it offers them a great deal of security and reliability. As you might know, VPS offers a lot of advantages over physical dedicated servers. Below you will find some of the most important benefits that VPS hosting provides:&lt;/p&gt;

&lt;p&gt;Flexibility is the main advantage offered by VPS server hosting plans. As already mentioned above, you can easily and affordably separate physical hardware devices such as CPU and RAM from other users on the same server. In other words, you can use as much storage space as you want and you will not be bothered about using up all the available storage space. In this way, you can save a lot of money for expanding your business.&lt;/p&gt;

&lt;p&gt;Another great advantage offered by VPS server hosting is that it provides a great level of isolation and durability &lt;a href="https://www.rfdtv.com/story/44438648/which-vps-technologies-can-be-used-for-transmission&amp;lt;br&amp;gt;%0A"&gt;&lt;/a&gt;&lt;a href="https://www.rfdtv.com/story/44438648/which-vps-technologies-can-be-used-for-transmission"&gt;https://www.rfdtv.com/story/44438648/which-vps-technologies-can-be-used-for-transmission&lt;/a&gt;&lt;br&gt;
. Each individual subscriber can install and configure his own application and websites. Moreover, he can even install or remove third party applications. &lt;/p&gt;

&lt;p&gt;Thus, you do not need to take care of various compatibility issues when it comes to different operating systems, software and storage space. Since you have complete control over everything, you can improve your website loading speed and fix several technical problems that visitors often encounter.&lt;/p&gt;

&lt;p&gt;With VPS hosting, you get the benefits of managed support, which allows you to avail of professional technical assistance at the most affordable price. When it comes to dedicated hosting, you often need to spend a large amount of money just to obtain excellent level of managed support. However, thanks to managed support provided by VPS hosting providers, you do not have to spend such large sums of money anymore.&lt;/p&gt;

&lt;p&gt;When it comes to shared hosting, you are sharing the same physical server with many other users. This will limit your storage space and bandwidth &lt;a href="https://www.ktvn.com/story/44452960/how-does-the-streaming-transmission-technology-works&amp;lt;br&amp;gt;%0A"&gt;&lt;/a&gt;&lt;a href="https://www.ktvn.com/story/44452960/how-does-the-streaming-transmission-technology-works"&gt;https://www.ktvn.com/story/44452960/how-does-the-streaming-transmission-technology-works&lt;/a&gt;&lt;br&gt;
. And so, you will need a huge amount of money to upgrade to a better hosting package. But in VPS, there is no need for upgrading. You can enjoy excellent level of web performance hosting and also enjoy unlimited resources provided by a powerful VPS server.&lt;/p&gt;

&lt;p&gt;Finally, VPS hosting also provides you with virtual private servers. With virtual private servers, you can separate your data from other users in your VPS. And because each computer in your VPS is utilizing its own resource, you can enjoy superior level of internet connectivity. &lt;/p&gt;

&lt;p&gt;Final Words&lt;/p&gt;

&lt;p&gt;Thus, you can increase your website performance hosting and fix multiple technical problems that visitors often encounter. Therefore, it's really a smart choice if you need a reliable web hosting service and if you want to enhance your website's features. To get an idea about different hosting options, you can always search on the Internet.&lt;/p&gt;

</description>
      <category>vpshosting</category>
      <category>vpstechnologies</category>
      <category>vpshost</category>
    </item>
    <item>
      <title>How Does React Work? Brief History - PART 1</title>
      <author>Adam Płócieniak</author>
      <pubDate>Thu, 12 Aug 2021 07:19:16 +0000</pubDate>
      <link>https://dev.to/hotjar/how-does-react-work-brief-history-part-1-1d12</link>
      <guid>https://dev.to/hotjar/how-does-react-work-brief-history-part-1-1d12</guid>
      <description>&lt;p&gt;&lt;em&gt;The article’s goal is to shed some light on the framework internals and historical insights standing behind the implementation decision made by the React Team at the time. I assume you are already aware of basic JavaScript / React and JSX concepts. So let’s kick off with some history first.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It’s&lt;/strong&gt; &lt;strong&gt;2013&lt;/strong&gt;. The React framework is born (version &lt;a href="https://github.com/facebook/react/blob/master/CHANGELOG.md#030-may-29-2013"&gt;0.3.0&lt;/a&gt; is rolled out to the public) and it’s immediately loved by the community. It stands out with its simplicity, one-way-data-binding, and - what’s obvious - declarative API powered by original, attractive to the community syntax extension, JSX.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9sl4Fsoa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/22vfqxaoii2y7eh2l978.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9sl4Fsoa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/22vfqxaoii2y7eh2l978.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;center&gt;&lt;em&gt;React’s JSX representation of an example app&lt;/em&gt;&lt;/center&gt;
&lt;br&gt;

&lt;p&gt;The following months and years bring new releases; bugs are fixed, features and improvements are added. The community grows, the tooling ecosystem supporting its development flourishes. &lt;a href="https://reactnative.dev/"&gt;React Native&lt;/a&gt; is embraced by mobile native developers, which brings even more popularity to the framework. But there is one thing around the framework that does not change at all. Its internal logic (so-called &lt;strong&gt;Reconciliation Algorithm&lt;/strong&gt;) is responsible for all of the “magic” - starting from when an application's state changes until direct DOM updates are performed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EcDjyfWI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sl95fqs7tlego1qjyhzp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EcDjyfWI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sl95fqs7tlego1qjyhzp.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;center&gt;&lt;em&gt;Input and output of the Reconciliation algorithm&lt;/em&gt;&lt;/center&gt;
&lt;br&gt;

&lt;p&gt;Briefly, here’s how it works:&lt;/p&gt;

&lt;p&gt;(1) Every state change (e.g., clicking “Buy product” from the &lt;a href="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u95tpve85arsv6ic2ulh.png"&gt;example application&lt;/a&gt;) forces building a so-called &lt;a href="https://reactjs.org/docs/faq-internals.html#what-is-the-virtual-dom"&gt;Virtual DOM&lt;/a&gt;, representing the current state of the application. It's a structure of components.&lt;/p&gt;

&lt;p&gt;(2) Then, the newly created Virtual DOM tree is compared with a previously generated Virtual DOM tree representing the application’s state already displayed to a user. Discrepancies between those Virtual DOM structures are simple information, what we should change, e.g.:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;update attribute X for A element,&lt;/li&gt;
&lt;li&gt;remove element B,&lt;/li&gt;
&lt;li&gt;or append element C as a child of element A.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(3) The information is utilized by separate modules - renderers (for browsers, it’s react-dom) which applies the minimal set of changes necessary to update UI (the DOM nodes for browsers). &lt;/p&gt;

&lt;p&gt;And that’s how React works, briefly.&lt;/p&gt;

&lt;p&gt;But how is the Virtual DOM built? If we had to write the function responsible for that on our own, it might look like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XuB6s4jG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u4pz63acgu3wik90ehko.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XuB6s4jG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u4pz63acgu3wik90ehko.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;center&gt;&lt;em&gt;High-Level Pseudocode of React’s Reconciliation Algorithm&lt;/em&gt;&lt;/center&gt;
&lt;br&gt;

&lt;p&gt;The &lt;code&gt;render&lt;/code&gt; function drills down through the entire &lt;strong&gt;React Elements&lt;/strong&gt; structure (Virtual DOM) and &lt;strong&gt;reconciles&lt;/strong&gt; (or works on) every element.&lt;/p&gt;

&lt;p&gt;Let’s stop for a moment here. What is a React Element? A React Element is a simple building block for our application. It’s what we return from our components, like &lt;code&gt;&amp;lt;Loader /&amp;gt;&lt;/code&gt; in our &lt;a href="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u95tpve85arsv6ic2ulh.png"&gt;example application&lt;/a&gt;. It’s worth mentioning that React Elements are not DOM Elements. Whenever I refer to an “element” below in the article, I mean React Element. If we talk about DOM elements, I will explicitly use the “DOM” to avoid misunderstanding. &lt;/p&gt;

&lt;p&gt;Back to the &lt;strong&gt;reconciliation&lt;/strong&gt;. Reconciling here means doing some element-related work. For component elements, it includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Invoking the &lt;code&gt;render()&lt;/code&gt; method (for class-based components) or calling functional component’s function reference with given props,&lt;/li&gt;
&lt;li&gt;managing internal state,&lt;/li&gt;
&lt;li&gt;invoking Lifecycle Methods (e.g., &lt;code&gt;getDerrivedState&lt;/code&gt;),&lt;/li&gt;
&lt;li&gt;marking changes that need to be applied later on,&lt;/li&gt;
&lt;li&gt;and many more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By calling &lt;code&gt;render(&amp;lt;App /&amp;gt;)&lt;/code&gt; (I recommend getting familiar with our &lt;a href="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u95tpve85arsv6ic2ulh.png"&gt;example application&lt;/a&gt; specified above, we will use this structure later on), we re-create the tree structure from top to bottom, using &lt;code&gt;render&lt;/code&gt; function:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting from &lt;code&gt;render(App)&lt;/code&gt;, we work on the &lt;code&gt;App&lt;/code&gt; component,&lt;/li&gt;
&lt;li&gt;then we have some work to do with its child (&lt;code&gt;Content&lt;/code&gt;),&lt;/li&gt;
&lt;li&gt;then with its child’s children: &lt;code&gt;Loader&lt;/code&gt;, &lt;code&gt;Product&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;and so on, until we reach the last leaf of the structure of the elements.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;It’s 2016&lt;/strong&gt;. Everyone is celebrating the framework's 3rd birthday (version &lt;a href="https://github.com/facebook/react/blob/master/CHANGELOG.md#1500-april-7-2016"&gt;15.0.0&lt;/a&gt; is released), but its parents (&lt;a href="https://reactjs.org/community/team.html"&gt;React Core Team&lt;/a&gt; with its lead, &lt;a href="https://reactjs.org/community/team.html#sebastian-markbage"&gt;Sebastian Markbåge&lt;/a&gt; - we will talk about him later in the article) are slightly worried about the future of the framework. But is there a reason to be concerned?&lt;/p&gt;

&lt;p&gt;It appears that the React has some “innate heart disease”, which limits its organic growth. Let’s have a brief look:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XuB6s4jG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u4pz63acgu3wik90ehko.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XuB6s4jG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u4pz63acgu3wik90ehko.png" alt="image"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F3b7tF5S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qh50bbazr5smdhhhob7c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F3b7tF5S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qh50bbazr5smdhhhob7c.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;center&gt;&lt;em&gt;High-Level pseudocode of React’s core algorithm function vs. Fibonacci function&lt;/em&gt;&lt;/center&gt;
&lt;br&gt;

&lt;p&gt;What’s common among &lt;code&gt;render()&lt;/code&gt; and &lt;code&gt;fib()&lt;/code&gt; functions?&lt;/p&gt;

&lt;p&gt;You’re right. It's a &lt;strong&gt;recursion&lt;/strong&gt;. The heart of the React framework relies strongly on recursion. But is it a problem at all?&lt;/p&gt;

&lt;p&gt;Web browsers are equipped with a single thread. We can do one operation at a time, so React operates in a limited environment. Although computing &lt;code&gt;fib(4)&lt;/code&gt; is not a challenge at all, computing &lt;code&gt;fib(4000)&lt;/code&gt; definitely is. Same for the Reconciliation Algorithm - building a Virtual DOM based on a thousand elements is a real challenge. Synchronous code execution blocks the main thread, so JavaScript’s event loop has to wait until the end of execution. During that time, none of the following activities can be performed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;User input (e.g., handling user click event callback)&lt;/li&gt;
&lt;li&gt;Animations, layout calculations, repaints&lt;/li&gt;
&lt;li&gt;Handle incoming data (HTTP, WebSocket)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is a brilliant talk about event loop &lt;a href="https://www.youtube.com/watch?v=8aGhZQkoFbQ"&gt;here&lt;/a&gt;, so if you are not familiar with it or need a refresher, it’s definitely worth watching.&lt;/p&gt;

&lt;p&gt;Let’s talk now about the JS Stack; how does it look for both the &lt;code&gt;fib&lt;/code&gt; and &lt;code&gt;render&lt;/code&gt; functions?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2svvgCbb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lnzfdehu9062vzyhc7rf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2svvgCbb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lnzfdehu9062vzyhc7rf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;center&gt;&lt;em&gt;Fibonacci function stack frames vs. Render function stack frames&lt;/em&gt;&lt;/center&gt;
&lt;br&gt;

&lt;p&gt;The JS Stack grows as we move deeper in the structure, so the process simply can’t be paused because there is no straightforward way to do that in a recursion. &lt;strong&gt;We reconcile all of the elements in one shot or none at all&lt;/strong&gt;. What’s more, React's computation output is pushed onto the JS stack, so it's ditched immediately after the &lt;code&gt;render&lt;/code&gt; function returns. There is no way to reuse this work later on if it’s needed.&lt;/p&gt;

&lt;p&gt;Imagine a case of a heavy application with a massive number of components. We are in the middle of the Reconciliation Algorithm, and a user clicks a button. Such action is critical from a UX standpoint and should be handled immediately. But what happens?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Clicking dispatches a DOM event. &lt;/li&gt;
&lt;li&gt;The event callback lands in a queue and waits (until the JS Stack is empty) to be processed.&lt;/li&gt;
&lt;li&gt;But the JS stack is “overwhelmed” by heavy React-related work, so the event callback waits…, waits, and waits for its turn until the Reconciliation Algorithm is done.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/QBd2kLB5qDmysEXre9/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/QBd2kLB5qDmysEXre9/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;center&gt;&lt;em&gt;(&lt;a href="https://i.giphy.com/media/QBd2kLB5qDmysEXre9/giphy.gif"&gt;source&lt;/a&gt;)&lt;/em&gt;&lt;/center&gt;
&lt;br&gt;

&lt;p&gt;There is an excellent &lt;a href="https://en.wikipedia.org/wiki/Sierpi%C5%84ski_triangle"&gt;Sierpinski triangle&lt;/a&gt; example &lt;a href="https://github.com/adasq/react-fiber-vs-stack-demo"&gt;application&lt;/a&gt; on Github. It is a more tangible showcase of the problem. Keep in mind that it’s 2016, so the application is built on top of React 15.x. Here is how the application looks like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NxNKbvVH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aw9vj90yygensayk763p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NxNKbvVH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aw9vj90yygensayk763p.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;center&gt;&lt;em&gt;Sierpinski triangle example application view&lt;/em&gt;&lt;/center&gt;
&lt;br&gt;

&lt;p&gt;Each dot is a component displaying a number. Among state updates, there are a lot of other computations, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;animations (layout computations, painting), &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/claudiopro/react-fiber-vs-stack-demo/blob/master/stack.html#L93-L99"&gt;deliberate delays&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;a whole bunch of artificial and pointless &lt;a href="https://github.com/claudiopro/react-fiber-vs-stack-demo/blob/master/stack.html#L134-L139"&gt;state changes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of these simulate a heavy application. And &lt;a href="https://claudiopro.github.io/react-fiber-vs-stack-demo/stack.html"&gt;here&lt;/a&gt; is the application. Pretty sluggish, huh? Here’s how the top of the JS Stack looks like (I recommend watching this &lt;a href="https://youtu.be/Jb4X4hyaUCs"&gt;short video&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5gCncPgM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wijrareaznmkbphhtapp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5gCncPgM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wijrareaznmkbphhtapp.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;center&gt;&lt;em&gt;React 15.x JS Stack&lt;/em&gt;&lt;/center&gt;
&lt;img src="https://i.giphy.com/media/KSJ8UkuKHLmvK/giphy.gif" alt=""&gt;&lt;center&gt;&lt;em&gt;(&lt;a href="https://i.giphy.com/media/KSJ8UkuKHLmvK/giphy.gif"&gt;source&lt;/a&gt;)&lt;/em&gt;&lt;/center&gt;
&lt;br&gt;

&lt;p&gt;A synchronous and time-consuming function (in the Sierpinski’s triangle example, for my equipment, each “Task” takes ~300ms) reconciles the entire application from the top to the bottom of the elements tree, no matter what. &lt;/p&gt;

&lt;p&gt;The framework here is relentless. It overwhelms the main thread, which can’t perform any other types of work (animations, user’s input). It introduces a significant impact on the browser’s performance. It’s hard to build on the top of such architecture, isn’t it?&lt;/p&gt;

&lt;p&gt;And this is a huge limitation for the React Team. &lt;/p&gt;

&lt;p&gt;Of course, this is an example application built to show the problem. But we can quickly observe such pitfalls when the number of components grows in our real-world applications. Long and heavy lists are a perfect example here. It’s also why the helper libraries, like &lt;a href="https://github.com/bvaughn/react-virtualized"&gt;react-virtualized&lt;/a&gt; (or its lightweight version, &lt;a href="https://github.com/bvaughn/react-window"&gt;react-window&lt;/a&gt;), emerged and gained noticeable popularity by supporting the framework. Those libraries are &lt;a href="https://reactjs.org/docs/optimizing-performance.html#virtualize-long-lists"&gt;officially recommended&lt;/a&gt; on React docs pages.&lt;/p&gt;

&lt;p&gt;It’s also worth noticing that React is clever enough, and implements caching, exposes the keys API, introduces some trade-offs to reinforce performance which is a real deal, but still - it’s not enough to move forward (If you are interested in in-depth details of the algorithm, visit official docs &lt;a href="https://reactjs.org/docs/implementation-notes.html"&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;In the next part, I will explain what approach the React Team took to address those limitations.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>fiber</category>
    </item>
    <item>
      <title>Astro recipe collection website - Part 1 Setup collections</title>
      <author>Chris Bongers</author>
      <pubDate>Thu, 12 Aug 2021 07:03:59 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/astro-recipe-collection-website-part-1-setup-collections-245k</link>
      <guid>https://dev.to/dailydevtips1/astro-recipe-collection-website-part-1-setup-collections-245k</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Note: Update 12-08-2021: Rewrite collections to Astro dynamic routing&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My wife is a &lt;a href="https://www.chefnicoleshort.com/"&gt;chef&lt;/a&gt; for those who don't know, so she has many recipes.&lt;br&gt;
I thought it would be cool to convert these to a digital cookbook.&lt;/p&gt;

&lt;p&gt;And what better to use than Astro?&lt;/p&gt;

&lt;p&gt;What we'll learn today:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dynamic routing in Astro&lt;/li&gt;
&lt;li&gt;Pagination collections&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By the end of the article, we will have a functional website that doesn't look pretty yet, but we know how the dynamic routes in Astro work.&lt;/p&gt;

&lt;p&gt;In another article, we'll work on the following extra elements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Latest five recipes on the homepage&lt;/li&gt;
&lt;li&gt;Category filtered pages&lt;/li&gt;
&lt;li&gt;Styling our recipe website&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-the-data-set"&gt;
  &lt;/a&gt;
  Setting up the data set
&lt;/h2&gt;

&lt;p&gt;Let's start by setting up a new Astro project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;astro-recipe &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
npm init astro@next
npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note: This article uses the next version of Astro as this will be the new way of using collections. This article will be updated once this is merged.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then we'll go ahead and create our sets of data.&lt;/p&gt;

&lt;p&gt;Before we create anything, let me explain the architecture and routing of Astro. By default, Astro will render all pages inside the &lt;code&gt;pages&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;We always have an &lt;code&gt;index.astro&lt;/code&gt; file as our starting homepage in our default installation.&lt;/p&gt;

&lt;p&gt;What we want to add next are single recipe pages. In my case, I want them to have the following structure:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;domain.com/recipe/recipe-slug
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To achieve this structure, we need to place a &lt;code&gt;recipe&lt;/code&gt; folder inside the &lt;code&gt;pages&lt;/code&gt; folder in Astro.&lt;/p&gt;

&lt;p&gt;Inside that folder, we can create our recipe markdown files.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WDvraFiU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628754991888/IANxJKhL7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WDvraFiU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628754991888/IANxJKhL7.png" alt="Astro dynamic routing structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Markdown files can have Frontmatter keys. This is a special set of data that sits on the top of your file in &lt;code&gt;---&lt;/code&gt; instances.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: You can see the &lt;code&gt;---&lt;/code&gt; as a code fence, which can evaluate the code inside&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An example of a recipe will be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;---
layout: '../../layouts/recipe.astro'
title: Classic Roast Chicken
meal_type: Dinner
course: Roast
diet: Healthy
main_ingredient: Meat and chicken
date: 2021-08-05
image: /images/classic-roast-chicken.jpg
---

# Markdown flavored recipe content
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Do you see all the content between the three dashes? This is what defines our variables.&lt;br&gt;
This will be useful later on.&lt;/p&gt;

&lt;p&gt;In our case, we defined some types to later filter on and an image to make it more appealing.&lt;/p&gt;

&lt;p&gt;Another important thing to note is that we defined the layout.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../../layouts/recipe.astro&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This tells Astro what file to render this markdown in.&lt;/p&gt;

&lt;p&gt;We can create the &lt;code&gt;recipe.astro&lt;/code&gt; in a &lt;code&gt;layout&lt;/code&gt; folder.&lt;br&gt;
The file will have the following content.&lt;/p&gt;

&lt;p&gt;Below you will see the part where we can retrieve the content from the Astro props.&lt;br&gt;
This is Astro's way of parsing data from the markdown file to the layout file we associated it with.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="o"&gt;--------&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Astro&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;--------&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;!--&lt;/span&gt;&lt;span class="na"&gt;HTML&lt;/span&gt; &lt;span class="na"&gt;Content&lt;/span&gt;&lt;span class="err"&gt;--&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"wrapper"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"500px"&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"img"&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;alt&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;article&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"article"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;slot&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;article&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;footer&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"footer"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"posts"&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/recipes"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;All Recipes&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;footer&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A super basic rendering, as it will show the title, an image, and the content.&lt;/p&gt;

&lt;p&gt;Now we can run Astro.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and visit your URL, which looks similar to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://localhost:3000/recipe/classic-roast-chicken
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will render the following view:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BY6a9o89--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628162264577/lum4jP5tj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BY6a9o89--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628162264577/lum4jP5tj.png" alt="Astro collection single page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-main-recipe-collection-page"&gt;
  &lt;/a&gt;
  Creating the main recipe collection page
&lt;/h2&gt;

&lt;p&gt;It's pretty cool that we have individual pages, but we have no way to show them on one big overview page.&lt;/p&gt;

&lt;p&gt;Let's go ahead and create such an overview page.&lt;br&gt;
We'll use a pagination collection, where our page shows five recipes per page.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: Click here for more information on the &lt;a href="https://astro-docs-git-wip-fbr-pikapkg.vercel.app/core-concepts/routing#dynamic-routes"&gt;Astro Dynamic Routing&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To create a collection page in Astro, we must create a file that's wrapped in brackets. Since our collection should be &lt;code&gt;recipes&lt;/code&gt;, we must first make a &lt;code&gt;recipes&lt;/code&gt; folder in our &lt;code&gt;pages&lt;/code&gt; folder.&lt;br&gt;
Inside that we can create a &lt;code&gt;[...page].astro&lt;/code&gt; folder.&lt;br&gt;
The three dots will make sure we can use the blank URL and paginated URLs.&lt;/p&gt;

&lt;p&gt;Let's start by making this file a collection of our recipe files.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="o"&gt;--------&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getStaticPaths&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;paginate&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;allRecipes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Astro&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fetchContent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./../recipe/*.md&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localeCompare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;paginate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;allRecipes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;pageSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Astro&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;--------&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the bare minimum. We need to have a pagination recipe overview.&lt;br&gt;
We use the &lt;code&gt;getStaticPaths&lt;/code&gt; as this is the default export function for dynamic routing in Astro.&lt;br&gt;
Inside this function, we define all our recipes sorted by date.&lt;/p&gt;

&lt;p&gt;Then we return a paginate object containing these recipes and the amount per page.&lt;br&gt;
Astro will now take care of the logic and page creation for us.&lt;/p&gt;

&lt;p&gt;To render these recipes, we can use the following HTML&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Pagination Example&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;All recipes&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    {page.data.map((recipe) =&amp;gt; (
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"{recipe.url}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;{recipe.title}&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    ))}
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code will render the following screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9OzSGJ5K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628163425639/A8VqRMQ-9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9OzSGJ5K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628163425639/A8VqRMQ-9.png" alt="Astro collection render"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pretty good, but how do we now get to the following page with five more recipes?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;footer&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h4&amp;gt;&lt;/span&gt;Page {page.current} / {page.last}&lt;span class="nt"&gt;&amp;lt;/h4&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nav"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"prev"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;{page.url.prev&lt;/span&gt; &lt;span class="err"&gt;||&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="na"&gt;#&lt;/span&gt;&lt;span class="err"&gt;'}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Prev&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
     |
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"next"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;{page.url.next&lt;/span&gt; &lt;span class="err"&gt;||&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="na"&gt;#&lt;/span&gt;&lt;span class="err"&gt;'}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Next&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yes! The Astro dynamic routing keeps track of all the logic for us, using several amazing properties on our collection.&lt;/p&gt;

&lt;p&gt;We want to show which page the user is on now and the total page count. And display navigation links.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VpuglFRU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628163599739/mvRYJd-qF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VpuglFRU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628163599739/mvRYJd-qF.png" alt="Astro pagination"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that's it for today's article. In the following article, we start working on how to show the last five recipes on our homepage.&lt;/p&gt;

&lt;p&gt;If you want to check out today's code, you can find that on the following &lt;a href="https://github.com/rebelchris/astro-recipe-website/tree/part-1-setup"&gt;GitHub repo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>astro</category>
    </item>
    <item>
      <title>Web Designer Roadmap-2021</title>
      <author>Coder Boy</author>
      <pubDate>Thu, 12 Aug 2021 06:35:33 +0000</pubDate>
      <link>https://dev.to/codingninjaa/web-designer-roadmap-2021-1aei</link>
      <guid>https://dev.to/codingninjaa/web-designer-roadmap-2021-1aei</guid>
      <description>&lt;h2 id="what-is-a-web-designer"&gt;What is a Web Designer?&lt;/h2&gt;
&lt;p&gt;Are you both creative and technically inclined? You may want to consider a career as a web designer!&lt;/p&gt;
&lt;p&gt;Web designers build or redesign websites. They understand what it takes to make a website functional and easy to use, but also understand what is needed to make it aesthetically appealing to the user.&lt;/p&gt;
&lt;p&gt;Web design is a rapidly growing industry, as digital media has become part of everyone's lives and people rely on the web for their communications, information, shopping, social life, and more.&lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/web-designers-roadmap-2021/&amp;amp;ved=2ahUKEwjqlebL7qryAhUF7HMBHVCiCxQQFnoECBoQAQ&amp;amp;usg=AOvVaw2Oo-ikwNXhEKOFAMaulAH4"&gt;Web Designer Roadmap&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;









</description>
      <category>webdev</category>
    </item>
    <item>
      <title>The Developers Guide To Scaling Rails Apps</title>
      <author>DevGraph</author>
      <pubDate>Thu, 12 Aug 2021 06:27:05 +0000</pubDate>
      <link>https://dev.to/devgraph/the-developers-guide-to-scaling-rails-apps-3kln</link>
      <guid>https://dev.to/devgraph/the-developers-guide-to-scaling-rails-apps-3kln</guid>
      <description>&lt;p&gt;By Ravi Duddukuru&lt;/p&gt;

&lt;p&gt;From Airbnb to Zendesk, a ton of really great apps were built using the Ruby programming language and the Rails web framework. Albeit a less popular option than other front-end frameworks such as React, Angular, and Vuejs, Rails still holds substantial merit in modern software development.&lt;/p&gt;

&lt;p&gt;Ruby on Rails (RoR) is open-source, well-documented, fiercely maintained, and constantly extended with new Gems — community-created open-source libraries, serving as “shortcuts” for standardized configuration and distribution of Ruby code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rubygems.org/gems/rails/versions/4.2.6"&gt;Rails&lt;/a&gt; is arguably the biggest RoR gem of them all — a full-stack server-side web application framework that is easy to customize and scale.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-rails-a-quick-refresher"&gt;
  &lt;/a&gt;
  What is Rails? A Quick Refresher
&lt;/h2&gt;

&lt;p&gt;Rails was built on the premises of Model-View-Controller (MVC) architecture.&lt;/p&gt;

&lt;p&gt;This means each Rails app has three interconnected layers, accountable for a respective set of actions:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Model: A data layer, housing the business logic of the app&lt;/li&gt;
&lt;li&gt;Controller: The “brain center”, handling application functions&lt;/li&gt;
&lt;li&gt;View: Defines graphical user interfaces (GUIs) and UI performance&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In essence, the model layer establishes the required data structure and contains codes needed to process the incoming data in HTML, PDF, XML, RSS, and other formats. The model layer then communicates updates to the View, which updates the GUI. The controller, in turn, interacts both with models and views. For instance, when receiving an update from a view, it notifies the model on how to process it. At the same time, it can update the view too on how to display the result for the user.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kjKoSZDv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53rjyu4frzxjplxyegp7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kjKoSZDv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53rjyu4frzxjplxyegp7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
(Basic Rails app architecture. Image source: &lt;a href="https://medium.com/the-renaissance-developer/ruby-on-rails-http-mvc-and-routes-f02215a46a84"&gt;Medium&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The underlying MVC architecture lends several important advantages to Rails:&lt;/p&gt;

&lt;p&gt;• Parallel development capabilities — one developer can work on View, while others handle the model subsystem. The above also makes Ruby on Rails a popular choice for rapid application development (RAD) methodology.&lt;/p&gt;

&lt;p&gt;• Reusable code components — controllers, views, and models can be packaged to share and reuse across several features with relative ease. When done right, this results in cleaner, more readable code, as well as faster development timelines. Also, Ruby on Rails is built on the DRY principle (don’t repeat yourself), prompting more frequent code reuse for monotonous functions. &lt;/p&gt;

&lt;p&gt;• Top security — the framework has a host of built-in security-centric features such as protection against SQL injections and XSS attacks, among others. Moreover, there’s plenty of community-shipped gems addressing an array of common and emerging cybersecurity threats.&lt;/p&gt;

&lt;p&gt;• Strong scalability potential — there’s a good reason why jumbo-sized web apps such as GitHub, Twitch, and Fiverr are built on Rails. Because it scales well when the overall app architecture and deployment strategy are done right. In fact, one of the oldest Rails apps, Shopify, scales to &lt;a href="https://shopify.engineering/write-fast-code-ruby-rails"&gt;processing millions of requests per minute&lt;/a&gt; (RPM).&lt;/p&gt;

&lt;p&gt;In spite of this, many Rails guides still make the arbitrary claim that &lt;a href="https://blog.engineyard.com/5-tips-to-scale-your-ruby-on-rails-application?__hstc=246083099.02435147c8312a5a70348baf53225dcd.1624856368348.1628688292983.1628744259081.56&amp;amp;__hssc=246083099.2.1628744259081&amp;amp;__hsfp=1414547400"&gt;Rails apps are hard to scale&lt;/a&gt;. Are these true? Not entirely, as this post will showcase.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-common-problems-with-scaling-rails-apps"&gt;
  &lt;/a&gt;
  3 Common Problems With Scaling Rails Apps
&lt;/h2&gt;

&lt;p&gt;The legacy lore once told that scaling Rails apps is like passing a camel through the eye of a needle — exasperating and exhausting. &lt;/p&gt;

&lt;p&gt;To better understand where these concerns are coming from, let’s first recap what scalability is for web apps. &lt;/p&gt;

&lt;p&gt;Scalability indicates the application’s architectural capability to handle more user requests per minute (RPM) in the future. &lt;/p&gt;

&lt;p&gt;The keyword here is “architecture”, as your choices of infrastructure configuration, connectivity, and overall layout are determinants to the entire system’s ability to scale. The framework(s) or programming languages you use will only have a marginal (if any) impact on the scalability. &lt;/p&gt;

&lt;p&gt;In the case of RoR, developers, in fact, get a slight advantage as the framework promotes clean, modular code that is easy to integrate with more database management systems. Moreover, adding &lt;a href="https://www.devgraph.com/2020/10/09/what-is-a-load-balancer-definition-explanation/?utm_source=EngineYard"&gt;load balancers&lt;/a&gt; for processing a higher number of requests is relatively easy too. &lt;/p&gt;

&lt;p&gt;Yet, the above doesn’t fully eradicate scaling issues on Rails. Let’s keep it real: any app is hard to scale when the underlying infrastructure is subpar.  &lt;/p&gt;

&lt;p&gt;Specifically, Ruby scaling issues often pop up due to:&lt;/p&gt;

&lt;p&gt;• Poor database querying&lt;br&gt;
• Inefficient indexing&lt;br&gt;
• Lack of logging and monitoring &lt;br&gt;
• Subpar database engine selection &lt;br&gt;
• Sluggish caching&lt;br&gt;
• Overly complex and spaghetti code&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#overengineered-app-architecture"&gt;
  &lt;/a&gt;
  Over-Engineered App Architecture
&lt;/h3&gt;

&lt;p&gt;RoR supports multi-threading. This means the Rails framework can handle concurrent processing of different parts of code. &lt;/p&gt;

&lt;p&gt;On the one hand, multi-threading is an advance since it enables you to use CPU time wiser and ship high-performance apps. &lt;/p&gt;

&lt;p&gt;At the same time, however, the cost of context switching between different threads in highly complex apps can get high. Respectively, performance starts lagging at some point.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-to-cope"&gt;
  &lt;/a&gt;
  &lt;em&gt;How to Cope&lt;/em&gt;
&lt;/h4&gt;

&lt;p&gt;By default, Ruby on Rails prioritizes clean, reusable code. Making your Rails app architecture overly complex (think too custom) indeed can lead to performance and scalability issues. &lt;/p&gt;

&lt;p&gt;This was the case with Twitter circa 2007. &lt;/p&gt;

&lt;p&gt;The team developed a Twitter UI prototype on Rails and then decided to further code the back-end on Rails too. And they decided to build a fully custom, novel back-end from scratch rather than modifying some tested components. Unsurprisingly, their product behaved weirdly and times and scaling it was challenging, as the team admitted in a &lt;a href="https://www.slideshare.net/Blaine/scaling-twitter/6-Its_Easy_Really1_Realize_Your"&gt;presentation&lt;/a&gt;. They ended up with a ton of issues when partitioning databases because their code was overly complex and bloated.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ULu9gSZY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6tawbkouk9zyqhe24972.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ULu9gSZY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6tawbkouk9zyqhe24972.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Image Source: &lt;a href="https://www.slideshare.net/Blaine/scaling-twitter/28-MemCache"&gt;SlideShare&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Interestingly, at the same time, another high-traffic Rails web app called Penny Arcade was doing just fine. Why? Because it had no funky overly-custom code, had clearly mapped dependencies, and hailed well with connected databases. &lt;/p&gt;

&lt;p&gt;Remember: Ruby supports multi-processing within apps. In some cases, &lt;a href="https://naturaily.com/blog/multiprocessing-in-ruby"&gt;multi-process apps&lt;/a&gt; can perform better than multi-thread ones. But the trick with processes is that they consume more memory and have more complex dependencies. If you inadvertently kill a parent process, children processes will not get informed about the termination and thus, turn into sluggish “zombie” processes. This means they’ll keep running and consume resources. So watch out for those!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#suboptimal-database-setup"&gt;
  &lt;/a&gt;
  Suboptimal Database Setup
&lt;/h3&gt;

&lt;p&gt;In the early days, Twitter had intensive write workloads and poorly organized read patterns, which were non-compatible with database sharding. &lt;/p&gt;

&lt;p&gt;At present, a lot of Rails developers are still skimming on coding proper database indexes and triple-checking all queries for redundant requests. Slow database queries, lack of caching, and tangled database indexes can throw any good Rails app off the rails (pun intended).&lt;/p&gt;

&lt;p&gt;Sometimes, complex database design is also part of deliberate decisions, as was the case with one of &lt;a href="https://resources.engineyard.com/penny-pop-case-study?__hstc=246083099.02435147c8312a5a70348baf53225dcd.1624856368348.1628688292983.1628744259081.56&amp;amp;__hssc=246083099.2.1628744259081&amp;amp;__hsfp=1414547400"&gt;our clients, PennyPop&lt;/a&gt;. To store app data, the team set up an API request to the Rails application. The app itself then stores the data inside DynamoDB and sends a response back to the app. Instead of ActiveRecord, the team created their own data storage layer to enable communication between the app and DynamoDB. &lt;/p&gt;

&lt;p&gt;But the issue they ran into is that DynamoDB has limits on how much information can be stored in one key. This was a technical deal-breaker, but the dev team came up with an interesting workaround — compressing the value of the key to a payload of base64 encoded data. Doing so has allowed the team to exchange bigger records between the app and the database without compromising the user experience or app performance. &lt;/p&gt;

&lt;p&gt;Sure, the above operation requires more CPU. But since they are using &lt;a href="https://www.engineyard.com/?__hstc=246083099.02435147c8312a5a70348baf53225dcd.1624856368348.1628688292983.1628744259081.56&amp;amp;__hssc=246083099.2.1628744259081&amp;amp;__hsfp=1414547400"&gt;Engine Yard&lt;/a&gt; to help manage and optimize other infrastructure, these costs remain manageable.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-to-cope"&gt;
  &lt;/a&gt;
  &lt;em&gt;How to Cope&lt;/em&gt;
&lt;/h4&gt;

&lt;p&gt;Granted, there are many approaches to improving Rails database performance. Deliberate caching and database partitioning (sharding) is one of the common routes as your app grows more complex. &lt;/p&gt;

&lt;p&gt;What’s even better is that you have a ton of great solutions for resolving RoR database issues, such as:&lt;/p&gt;

&lt;p&gt;• Redis — an open-source in-memory data structure store for Rails apps.&lt;/p&gt;

&lt;p&gt;• ActiveRecord — a database querying tool standardizing access to popular databases with built-in caching capabilities.&lt;/p&gt;

&lt;p&gt;• Memcached — distributed memory caching system for Ruby on Rails.&lt;/p&gt;

&lt;p&gt;The above three tools can help you sufficiently shape up your databases to tolerate extra-high loads. &lt;/p&gt;

&lt;p&gt;Moreover, you can:&lt;/p&gt;

&lt;p&gt;• Switch to UUIDs over standard IDs for principle keys as your databases grow more complex. &lt;/p&gt;

&lt;p&gt;• Try other ORM alternatives to ActiveRecord when your DBs get extra-large. Some good ones include Sequel, DataMapper, and ORM Adapter. &lt;/p&gt;

&lt;p&gt;• Use database profiling gems to diagnose and detect speed and performance issues early on. Popular ones are rack-mini-profiler, bullet, rails_panel, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#insufficient-server-bandwidth"&gt;
  &lt;/a&gt;
  Insufficient Server Bandwidth
&lt;/h3&gt;

&lt;p&gt;The last problem is basic but still pervasive. You can’t accelerate your Rails apps to millions of RPMs if you lack resources.&lt;/p&gt;

&lt;p&gt;Granted, with cloud computing, provisioning extra instances is a matter of several clicks. Yet, you still need to understand and account for:&lt;/p&gt;

&lt;p&gt;• Specific apps/subsystems requirements for extra resources&lt;/p&gt;

&lt;p&gt;• &lt;a href="https://www.devgraph.com/2021/05/26/cloud-cost-optimization-10-lessons-learned-from-scanning-45k-aws-accounts/"&gt;Cloud computing costs&lt;/a&gt; (aka the monetary tradeoff for speed)&lt;/p&gt;

&lt;p&gt;Ideally, you need tools to constantly scan your systems and identify cases of slow performance, resources under (and over)-provisioning, as well as overall performance benchmarks for different apps. &lt;/p&gt;

&lt;p&gt;Not having such is like driving without a speedometer: You rely on a hunch to determine if you are going too slow or deadly fast.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-to-cope"&gt;
  &lt;/a&gt;
  &lt;em&gt;How to Cope&lt;/em&gt;
&lt;/h4&gt;

&lt;p&gt;One of the &lt;a href="https://blog.engineyard.com/10-lessons-learned-from-building-engine-yards-container-platform-on-kubernetes?__hstc=246083099.02435147c8312a5a70348baf53225dcd.1624856368348.1628688292983.1628744259081.56&amp;amp;__hssc=246083099.2.1628744259081&amp;amp;__hsfp=1414547400"&gt;lessons we learned when building and scaling Engine Yard&lt;/a&gt; on Kubernetes was that the container platform sets no default resource limits for hosted containers. Respectively, your apps can consume unlimited CPU and memory, which can create “noisy neighbor” situations, where some apps rack up too many resources and drag down the performance of others. &lt;/p&gt;

&lt;p&gt;The solution: Orchestrate your containers from the get-go. Use Kubernetes Scheduler to right-size nodes for the pods, limit maximum resource allocation, plus define pod preemption behavior. &lt;/p&gt;

&lt;p&gt;Moreover, if you are running containers, always set up your own logging and monitoring since there are no out-of-the-box solutions available. Adding Log Aggregation to Kubernetes provides extra visibility into your apps’ behavior. &lt;/p&gt;

&lt;p&gt;In our case, we use:&lt;/p&gt;

&lt;p&gt;• Fluent Bit for distributed log collection&lt;/p&gt;

&lt;p&gt;• Kibana + Elasticsearch for log analysis&lt;/p&gt;

&lt;p&gt;• Prometheus + Grafana for metrics alerting and visualization&lt;/p&gt;

&lt;p&gt;To sum up: The key to ensuring scalability is weeding out the lagging modules and optimizing different infrastructure and architecture elements individually for a greater cumulative good.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scaling-rails-apps-two-main-approaches"&gt;
  &lt;/a&gt;
  Scaling Rails Apps: Two Main Approaches
&lt;/h2&gt;

&lt;p&gt;Similar to others, Rails apps scale in two ways — vertically and horizontally. &lt;/p&gt;

&lt;p&gt;Both approaches have their merit in respective cases.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vertical-scaling"&gt;
  &lt;/a&gt;
  Vertical Scaling
&lt;/h3&gt;

&lt;p&gt;Vertical scaling, i.e., provisioning more server resources to an app, can increase the number of RPMs. The baseline premises are the same as for other frameworks. You add extra processors, RAM, etc., until it is technically feasible and makes financial sense. Understandably, vertical scaling is a temp “patch” solution. &lt;/p&gt;

&lt;p&gt;Scaling Rails apps vertically makes sense to accommodate linear or predictable growth since cost control will be easy too. Also, vertical scaling is a good option for upgrading database servers. After all, slow databases can be majorly accelerated when placed on better hardware. &lt;/p&gt;

&lt;p&gt;Hardware is the obvious limitation to vertical scaling. But even if you are using cloud resources, still scaling Rails apps vertically can be challenging. &lt;/p&gt;

&lt;p&gt;For example, if you plan to implement Vertical Pod Autoscaling (VPA) on Kubernetes, it accounts for several limitations. &lt;/p&gt;

&lt;p&gt;During our experiments with scaling Ruby apps, we found that: &lt;/p&gt;

&lt;p&gt;• VPA is a rather disruptive method since it busts the original pod and then recreates its vertically scaled version. This can cause much havoc.&lt;/p&gt;

&lt;p&gt;• You cannot pair VPA with Horizontal Pod Autoscaling.&lt;/p&gt;

&lt;p&gt;So it’s best to prioritize horizontal scaling whenever you can.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#horizontal-scaling"&gt;
  &lt;/a&gt;
  Horizontal Scaling
&lt;/h3&gt;

&lt;p&gt;Horizontal scaling, i.e., redistributing your workloads across multiple servers, is a more future-proof approach to scaling Rails apps. &lt;/p&gt;

&lt;p&gt;In essence, you convert your apps in a three-tier architecture featuring:&lt;/p&gt;

&lt;p&gt;• Web server and load balancer for connected apps &lt;br&gt;
• Rails app instances (on-premises or in the cloud)&lt;br&gt;
• Database instances (also local or cloud-based)&lt;/p&gt;

&lt;p&gt;The main idea is to distribute loads across different machines to obtain optimal performance equitably. &lt;/p&gt;

&lt;p&gt;To effectively reroute Rails processes across server instances, you must select the optimal web server and load balancing solution. Then right-size instances to the newly decoupled workloads. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#load-balancing"&gt;
  &lt;/a&gt;
  &lt;em&gt;Load balancing&lt;/em&gt;
&lt;/h4&gt;

&lt;p&gt;Load balancers are the key structural element for scale-out architecture. Essentially, they perform a routing function and help optimally distribute incoming traffic across connected instances. &lt;/p&gt;

&lt;p&gt;Most cloud computing services come with native software load balancing solutions (think &lt;a href="https://aws.amazon.com/elasticloadbalancing/"&gt;Elastic Load Balancing&lt;/a&gt; on AWS). Such solutions also support dynamic host port mapping. This helps establish a seamless pairing between registered web balancers and container instances.  &lt;/p&gt;

&lt;p&gt;When it comes to Rails apps, the two most common options are using a combo of web servers and app servers (or a fusion service) to ensure optimal performance.&lt;/p&gt;

&lt;p&gt;• Web servers transfer the user request to your website and then pass it to a Rails app (if applicable). Essentially, they filter out unnecessary requests for CSS, SSL, or JavaScript components (which the server can handle itself), thus reducing the number of requests to the Rails app to bare essentials. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Examples of Rails web servers: Ngnix and Apache.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;• App servers are programs that maintain your app in memory. So that when an incoming request from a web server apps appears, it gets routed straight to the app for handling. Then the response is bounced back to the web server and, subsequently, the user. When paired with a web server in production, such a setup lets you render requests to multiple apps faster.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Examples of app servers for Rails: Unicorn, Puma, Thin, Rainbows.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally, there are also “fusion” services such as Passenger App (Phusion Passenger). This service integrates with popular web servers (Ngnix and Apache) and brings in an app server layer — available for standalone and combo use with web servers. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RRKfru4c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hut91n76xb1v9ba7drtv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RRKfru4c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hut91n76xb1v9ba7drtv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Image Source: &lt;a href="https://www.phusionpassenger.com/library/indepth/integration_modes.html"&gt;Phusion Passenger&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Passenger is an excellent choice if you want to roll out unified app server settings for a bunch of apps in one go without fiddling with a separate app server setup for each.&lt;/p&gt;

&lt;p&gt;In a nutshell, the main idea behind using web and app servers is to span different rails processes optimally across different instances. &lt;/p&gt;

&lt;p&gt;Pro tip: What we found when building our product is that AWS Elastic Load Balancer often doesn’t suffice. A major drawback is that ELB can’t handle multiple vhosts.&lt;/p&gt;

&lt;p&gt;In our case, we went on with configuring an NGINX-based load balancer and configured auto-scaling on it to support ELB. As an alternative, you can also try HAProxy.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#app-instances"&gt;
  &lt;/a&gt;
  &lt;em&gt;App Instances&lt;/em&gt;
&lt;/h4&gt;

&lt;p&gt;The next step of scale-out architecture is configuring communication between different app instances, where your Rails workloads will be allocated. &lt;/p&gt;

&lt;p&gt;App servers (Unicorn, Puma, etc.) help ensure proper communication between web servers and subsequently increase the throughput of requests processed per second. On Rails, you can allocate an app server to handle multiple app instances, which in turn can have separate “worker” processes or threads (depending on which type of app server service you are using).  &lt;/p&gt;

&lt;p&gt;It’s important, however, to ensure that different app servers can communicate well with the webserver. Rack interface comes in handy here as it helps homogenize communication standards between standalone app servers. &lt;/p&gt;

&lt;p&gt;When it comes to configuring the right instances for containers, keep in mind the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You have four variables to min/max CPU and min/max memory to regulate pod size
&lt;/li&gt;
&lt;li&gt;Limit the resources using [minimum requirement + 20%] formula &lt;/li&gt;
&lt;li&gt;Use average CPU utilization and average memory utilization as scaling metrics &lt;/li&gt;
&lt;li&gt;Mind the timing. Pods and clusters take 4 to 12 minutes to scale up on Kubernetes.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;P.S. If you don’t want to do the above guesswork every time you are building a new pod/cluster, Engine Yard comes with a predictive cluster scaling feature, which helps you scale your infrastructure just-in-time without ballooning the costs.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#database-scaling"&gt;
  &lt;/a&gt;
  &lt;em&gt;Database Scaling&lt;/em&gt;
&lt;/h4&gt;

&lt;p&gt;Transferring databases to a separate server, used by all app instances, is one of the sleekest moves you can do to &lt;a href="https://blog.engineyard.com/5-tips-to-scale-your-ruby-on-rails-application?utm_source=EngineYard&amp;amp;utm_medium=Interlink"&gt;scale Rails apps&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First of all, this can be a nice exercise in segregating your data and implementing database replication for improving business continuity. Secondly, doing so can reduce the querying time since the request will not have to travel through multiple database instances where different bits of data are stored. Instead, it will go straight to a consolidated repository. &lt;/p&gt;

&lt;p&gt;Thus, consider setting up a dedicated MySQL or PostgreSQL server for your relational databases. Then scrub them clean and ensure optimal instance size to save costs. &lt;/p&gt;

&lt;p&gt;For example, AWS RDC lets you select among 18 types of database instances and codify fine-grain provisioning. Choosing to host your data in a cheaper cloud region can drive substantial cost savings (up to 40% at times!). &lt;/p&gt;

&lt;p&gt;Here’s how on-demand hourly costs differ across AWS regions:&lt;/p&gt;

&lt;p&gt;US East (Ohio)&lt;/p&gt;

&lt;p&gt;• db.t3.small — $0.034 per hour&lt;br&gt;
• db.t3.xlarge — $0.272 per hour&lt;br&gt;
• db.t3.2xlarge — $0.544 per hour&lt;/p&gt;

&lt;p&gt;US West (LA)&lt;/p&gt;

&lt;p&gt;• db.t3.small — $0.0408 per hour&lt;br&gt;
• db.t3.xlarge —$0.3264 per hour&lt;br&gt;
• db.t3.2xlarge — $0.6528 per hour&lt;/p&gt;

&lt;p&gt;Europe (Frankfurt)&lt;/p&gt;

&lt;p&gt;• db.t3.small — $0.04 per hour&lt;br&gt;
• db.t3.large — $0.16 per hour&lt;br&gt;
• db.t3.2xlarge — $0.64 per hour&lt;/p&gt;

&lt;p&gt;Asia Pacific (Seoul) &lt;/p&gt;

&lt;p&gt;• db.t3.small —$0.052 per hour&lt;br&gt;
• db.t3.large — $0.208 per hour&lt;br&gt;
• db.t3.2xlarge — $0.832 per hour&lt;/p&gt;

&lt;p&gt;Another pro tip: opt for reserved instances over on-demand when you can to further slash the hourly costs.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#caching"&gt;
  &lt;/a&gt;
  &lt;em&gt;Caching&lt;/em&gt;
&lt;/h4&gt;

&lt;p&gt;Database caching implementation is another core step to accelerating your Rails apps, especially when it comes to database performance. Given the fact that RoR comes with a native query caching feature that caches the result set returned by each query, it’s a shame not to profit from this! &lt;br&gt;
Caching can help you speed up those slow queries. But prior to implementing, investigate! Once you’ve found the “offenders”, consider trying out &lt;a href="https://guides.rubyonrails.org/caching_with_rails.html"&gt;different strategies&lt;/a&gt; such as:&lt;/p&gt;

&lt;p&gt;• Low-level caching — works best for any type of caching to retrieve database queries. &lt;br&gt;
• Redis cache store — lets you store keys and value pairs up to 512 MB in memory, plus provides native data replication. &lt;br&gt;
• Memcache store — another easy-to-implement in-memory datastore with values limited at 1 MB. Supports multi-thread architecture, unlike Redis.&lt;/p&gt;

&lt;p&gt;Ultimately, caching improves data availability and, by proxy, your application’s querying speed and performance.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#database-sharding"&gt;
  &lt;/a&gt;
  &lt;em&gt;Database sharding&lt;/em&gt;
&lt;/h4&gt;

&lt;p&gt;Lastly, at some point in your database scaling journey, you’ll inevitably face the decision to shard your relational databases. &lt;/p&gt;

&lt;p&gt;Data sharding means slicing your DB records horizontally or vertically into smaller chunks (shards) and storing them on a cluster of database nodes. The definitive advantage is that querying should now happen faster since a large database gets split in two and has twice more memory, I/O, and CPU to run. &lt;/p&gt;

&lt;p&gt;The tradeoff, however, is that sharding can significantly affect your app’s logic. The scope of each query is now limited to either DB 1 or DB 2 — there’s no commingling. Respectively, when adding new app functions, you need to carefully consider how to access data across shards, how sharing relates to the infrastructure, and what’s the best way to scale out the supporting infrastructure without affecting the app’s logic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-conclude-is-there-an-easier-solution-to-scaling-rails-apps"&gt;
  &lt;/a&gt;
  To Conclude: Is There An Easier Solution to Scaling Rails Apps?
&lt;/h2&gt;

&lt;p&gt;Scaling Rails apps is a careful balancing act of ensuring optimal instance allocation, timely resource, provisioning, and careful container orchestration. Keeping tabs on all the relevant metrics across a portfolio of apps and sub-services isn’t an easy task when done manually. And it shouldn’t be.&lt;/p&gt;

&lt;p&gt;You can try Engine Yard Kontainers (EYK) — our &lt;a href="https://support.cloud.engineyard.com/hc/en-us/articles/360058885853-Introduction-to-Engine-Yard-Kontainers"&gt;NoOps PaaS autoscaling services&lt;/a&gt; for containerized apps. In essence, we act as your invisible DevOps team. You code your apps and deploy them to EYK, and we take over auto-scaling implementation, container orchestration, and other infrastructure right-sizing tasks from there.&lt;/p&gt;

&lt;p&gt;Learn more about &lt;a href="https://www.engineyard.com/"&gt;Engine Yard&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>webdev</category>
      <category>database</category>
    </item>
    <item>
      <title>Frontend Development 2021</title>
      <author>jobpick.in</author>
      <pubDate>Thu, 12 Aug 2021 06:13:30 +0000</pubDate>
      <link>https://dev.to/jobpick/frontend-development-2021-5p</link>
      <guid>https://dev.to/jobpick/frontend-development-2021-5p</guid>
      <description>&lt;p&gt;&lt;strong&gt;Frontend Development&lt;/strong&gt;&lt;br&gt;
Every business, brand, and idea has a website. As a result, building websites, called front-end development, is one of the simplest and most profitable ways to enter the world of software development.&lt;/p&gt;

&lt;p&gt;In a website building, Front-end plays a first and foremost role. As a result of good Front-end development, the website can reach more people and serve the purpose. Front-end development helps optimizes navigation on a website which makes easier for visitor to find what they are looking for on the site. It calls for a clean, well-structed and carefully planned layout.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For 2021 :&lt;/strong&gt;&lt;br&gt;
Front-end web development has become more difficult in recent years. There's a lot more to it than HTML, CSS, and JavaScript. There are several technologies to master, as well as numerous activities. You will certainly become a good front-end web developer if you have the passion ,discipline and patience.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9NunaTo0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5na2t5kbzyf4t51t78zc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9NunaTo0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5na2t5kbzyf4t51t78zc.png" alt="jobpick.in"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Frontend and Backend&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are two paths towards becoming a web developer: the back-end or the front-end.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Front-end developers&lt;/strong&gt;, on the other hand, get to build everything a user touches and interacts with on the screen, such as layouts, information, engagement, etc. Front-end developers are both creative and tech-savvy, and act as the bridge between designers and back-end programmers.&lt;/p&gt;

&lt;p&gt;A frontend must provide a good user experience and should be convenient for the end user to operate. It should be able to perform proper validation of any data sent by the user and should be responsive.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Back-end developers&lt;/strong&gt; build server-side software. They’re responsible for all the performance, stability, security and speed of your site or app, all of which power the front-end or user-facing side.&lt;/p&gt;

&lt;p&gt;So frontend or backend it depends on need.&lt;/p&gt;

&lt;p&gt;If you just need to provide information, frontend development is more important because you don’t need a backend to display simple content.&lt;/p&gt;

&lt;p&gt;If you only need to serve data, an API will suffice, which means backend development is more important (since no frontend is required).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Static and Dynamic Site&lt;/strong&gt;&lt;br&gt;
A static site that only displays text or images and has no interaction between the site and the user, does not require back-end development.&lt;/p&gt;

&lt;p&gt;A dynamic site that requires interaction between the site and the user (such as filling in and submitting a form), does require back-end development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Frameworks&lt;/strong&gt; :&lt;/p&gt;

&lt;p&gt;Framework will help you a lot with development. The framework will give you the basic structure, some guidelines, and even some pre-build elements. Besides, almost every company uses any framework so it will be much easier to get your dream job.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3 most popular&lt;/strong&gt; front-end frameworks in the market right now: React, Angular and Vue.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow these steps :&lt;/strong&gt; &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Learn the basics of how websites work, front-end vs back-end, and using a code editor&lt;/li&gt;
&lt;li&gt; Learn basic HTML, CSS, and JavaScript&lt;/li&gt;
&lt;li&gt; Learn tools: package managers, build tools, version control&lt;/li&gt;
&lt;li&gt; Learn Sass, responsive design, JavaScript frameworks&lt;/li&gt;
&lt;li&gt; Learn back-end basics: servers and databases, programming languages&lt;/li&gt;
&lt;li&gt; Maintain an active Github profile&lt;/li&gt;
&lt;li&gt; Develop your own projects&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are plenty of free learning sources available for learning Frontend Development as well as backend development .&lt;/p&gt;

&lt;p&gt;In the interim, find open source projects or help your friends with their sites ,use this opportunity to learn to manage expectations.&lt;/p&gt;

&lt;p&gt;So that was it from this article😇.Hope you find this article helpful. Please share your thoughts/comments/feedback either in comment section or you can DM us at &lt;a href="https://twitter.com/job_pick"&gt;twiter&lt;/a&gt; , &lt;a href="https://jobpick.in/"&gt;jobpick.in&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>How Much Does a Smart Mirror Cost?</title>
      <author>Vercon Smart mirror</author>
      <pubDate>Thu, 12 Aug 2021 06:12:18 +0000</pubDate>
      <link>https://dev.to/timguo41667585/how-much-does-a-smart-mirror-cost-39hp</link>
      <guid>https://dev.to/timguo41667585/how-much-does-a-smart-mirror-cost-39hp</guid>
      <description>&lt;p&gt;Someone says a smart mirror is a two-way mirror with an inbuilt display behind the glass. is that true? It was partially right to a point, but not all correct.&lt;/p&gt;

&lt;p&gt;The Smart mirror is a combination of two-way mirrors, hidden computer components, and interactive screens. However, these are only the combination of hardware, the smart software or solution is the heart for smart mirrors.&lt;/p&gt;

&lt;p&gt;So, do you think mirrors that meet the above conditions belong to the smart ones? not really, let's discuss the false and truly magic mirrors.&lt;/p&gt;

&lt;p&gt;False Intelligent Mirror&lt;br&gt;
When you search for a smart mirror on Amazon, the first thing you see is all kinds of glass mirrors. they are not just traditional glass mirrors, there are no exceptions to adding extra features. Such as Led Lighting mirror, music mirror, Bluetooth mirror, mirror with LCD display or screen... Do these belong to the smart mirror' category? or is it a truly smart mirror concept? &lt;/p&gt;

&lt;p&gt;Compared with a basic glass mirror, these functional mirrors made big progress, providing more humanized functions to users. It was a smarter mirror in a certain stage of mirrors’ developing progress.&lt;/p&gt;

&lt;p&gt;Today, we have entered into a modern information society. All aspects of life have broken through the traditional concept of intelligence. Smartphones, smart Television, smart lights… smart products are everywhere. These smart products are invariably engaged with smart hardware and solution.&lt;/p&gt;

&lt;p&gt;So, do you think the above mirrors are still smart? or we should call it a false smart mirror.&lt;/p&gt;

&lt;p&gt;Truly Smart Mirror &lt;/p&gt;

&lt;p&gt;A truly smart mirror was invented in 2016, quite a young product, and a new mirror when we look back. &lt;/p&gt;

&lt;p&gt;Technology and smartphones have become major trends nowadays, especially when Apple and Android smartphones become popular.&lt;/p&gt;

&lt;p&gt;The real smart mirrors have a smart system in common. Android is the mainstream system due to its open-source character. The smart mirror system provides a friendly interface and displays various content on the mirror screen. &lt;/p&gt;

&lt;p&gt;Let’s discuss the two types of smart mirrors below&lt;/p&gt;

&lt;p&gt;Smart TV Mirror&lt;br&gt;
Smart mirror with TV also called mirror tv or tv mirror, which has been widely used in luxury hotels or resorts for years. The TV mirror is a two-way mirror with a television built-in behind. Basically, it’s the combination of television and a two-way glass mirror.&lt;/p&gt;

&lt;p&gt;The new arrival television mirror is loaded with an Android system, which provides an easy and friendly interface, WiFi capabilities.&lt;/p&gt;

&lt;p&gt;Don’t forget the drawback of tv mirrors, you have to control them via remote controller, which underlines the touch screen smart mirror’s advantages.&lt;/p&gt;

&lt;p&gt;The cost of a smart mirror tv is around 400 ~ 600 dollars.&lt;/p&gt;

&lt;p&gt;Smart Touchscreen Mirror&lt;br&gt;
The ultimate smart mirror for sale now, which works with a hidden touch screen behind the two-way mirror, all controlled by a microcomputer and smart components.&lt;/p&gt;

&lt;p&gt;As a true sense of magic mirror, it covers all the features of the above mirrors. Such as backlit Led light, Auto defog and water resistance, temperature displaying… &lt;/p&gt;

&lt;p&gt;With the accomplishment of smart technology, the touch screen mirrors are far greater than these. Thanks to the WiFi and Bluetooth connection with the Internet, it allows the digital mirrors to display all the information and media you want to know.&lt;/p&gt;

&lt;p&gt;Imagine that when you wake up, the bathroom mirror says “good morning” to you, displaying the latest weather, news, traffic to office, meeting, emails… how cool is that!!&lt;/p&gt;

&lt;p&gt;Smart mirror systems are also compatible with various smart applications. Such as YouTube, Spotify, Netflix, Amazon, ESPN… We always watch videos or news while we brush our teeth, with our smartphones. &lt;/p&gt;

&lt;p&gt;It’s time to forget about the tiny smartphone screen now. The smart bathroom mirror is integrated with a 21.5-inch touch screen. It supports touch control like your phone, in large size of the screen. Free your hands and enjoy a comfortable and relaxed morning, get ready for the day. &lt;/p&gt;

&lt;p&gt;Don’t forget the bathroom smart mirror with inbuilt speakers, and listen to the latest online music. Have a bath and make yourself feel like in a bowl, that’s the essence of the bathroom.&lt;/p&gt;

&lt;p&gt;Nowadays, more and more smart devices are compatible with each other. Certainly, the smart mirrors connect. Through the Bluetooth connection, the smart scale, smart wear, and other health care products can connect with your bathroom mirror. Display your BMI, skin quality, blood pressure, steps on the mirror screen. Such a helpful mirror for modern life.&lt;/p&gt;

&lt;p&gt;The cost of a smart touchscreen mirror is from 1000 to 5000 dollars, some even higher, but we believe that price is not a realistic one.&lt;/p&gt;

&lt;p&gt;How to Choose the Right One for You&lt;/p&gt;

&lt;p&gt;How to choose the right magic mirror for you? It's a question to be resolved before buying a smart mirror.&lt;/p&gt;

&lt;p&gt;Firstly, of course, we have to measure the dimension of mirrors and vanity cabinets.&lt;/p&gt;

&lt;p&gt;The most popular dimension mirror is below, with different costs. To ensure the mirror’s dimensions match our home decor projects. &lt;/p&gt;

&lt;p&gt;60 x 80 cm / 23.6” x 31.5”, about 1000 dollars.&lt;/p&gt;

&lt;p&gt;70 x 90 cm / 27.6” x 35.4”, around 1200 dollars.&lt;/p&gt;

&lt;p&gt;70 x 100 cm / 27.6” x 39.4”, around 1400 dollars.&lt;/p&gt;

&lt;p&gt;80 x 120 cm / 31.5” x 47.3”, around 1800 dollars.&lt;/p&gt;

&lt;p&gt;90 x 150 cm / 35.4” x 59.1”, around 2000 dollars.&lt;/p&gt;

&lt;p&gt;Secondly, how large of a touch screen do you need? &lt;/p&gt;

&lt;p&gt;Many would raise a question, isn’t a bigger display screen better? Not really, to provide comfortable visual effects, we have to keep our distance from the screen. &lt;/p&gt;

&lt;p&gt;It’s easy to understand if you hold your smartphone screen to your eyeball, not too far, not too close. To measure the dimension of your sink, which is related to your mirror size closely. &lt;/p&gt;

&lt;p&gt;There are a few sizes of touch screens for smart mirrors:&lt;/p&gt;

&lt;p&gt;7 ~ 10-inch screen: suitable for small mirrors such as 50 x 70 cm, or even smaller.&lt;/p&gt;

&lt;p&gt;15.6 inches screen: suitable for mirrors from 60 x 80 cm to 70 x 90 cm.&lt;/p&gt;

&lt;p&gt;21.5 inches screen: The most popular size, up to 80 x 120 cm mirror.&lt;/p&gt;

&lt;p&gt;32 inches screen and larger: suitable for mirrors from 90 x 150 cm or bigger.&lt;/p&gt;

&lt;p&gt;The regular sink's depth is about 50cm, in this case, you can choose any size of mirror screen 15.6 inches. While you have a large sink, you have to consider the mirror screen from 21.5 inches at least. &lt;/p&gt;

&lt;p&gt;Where to buy these mirrors?&lt;br&gt;
It’s interesting that we seldom see this new generation mirror anywhere nearby. Plenty of us google where to buy a smart mirror?&lt;/p&gt;

&lt;p&gt;Purchase from Online&lt;/p&gt;

&lt;p&gt;Amazon and Wayfair are always the best options for us. Sorry to disappoint you, when you search for smart mirrors on Amazon, 99% of the search results are false ones as we discussed. &lt;/p&gt;

&lt;p&gt;The reason for such an awkward result is because the online companies didn’t set the rules. Most consumers get used to the featured mirror as a smart one, that’s not right. On the other hand, the real smart mirrors are quite a few, leading to less traffic on the searching.&lt;/p&gt;

&lt;p&gt;Based on such circumstances, the Alexa or Google AR could not define or recognize which mirror belongs to real smart ones, which are not. It’s understandable that most non-smart mirrors are listed on the top of searches.&lt;/p&gt;

&lt;p&gt;There are some truly smart mirrors listed, such as HiMirror, Electric Mirror (recently disappeared), Capstone, Vercon, Ad Notom…&lt;/p&gt;

&lt;p&gt;Buying smart from online: from $1500 up to $3000.&lt;/p&gt;

&lt;p&gt;Visit Construction Materials Stores&lt;br&gt;
Home depot is always the best place to find new mirrors, Lowes also catches up with Homedepot in this field. Frustratingly, there are a quite few stores that displayed smart mirrors, but with a small screen.&lt;/p&gt;

&lt;p&gt;As per the marketing analyst, the big stores worry high-price products have less fluidity. Most of them are still under the testing stage, to see how the market reacts with this high-price mirror.&lt;/p&gt;

&lt;p&gt;Cost of buying a smart mirror from retailers: starts from $800 for limited models and sizes.&lt;/p&gt;

&lt;p&gt;Buying From Overseas Suppliers&lt;br&gt;
With the rapid development of international logistics, DHL, FedEx, and TNT… all provide door-to-door delivery for single purchasing. On the other hand, the delivery rate is also not out of reach.&lt;/p&gt;

&lt;p&gt;The biggest concern comes from various considerable quality suppliers. After all, this industry is still under development, not all the factories are trusted quality products.&lt;/p&gt;

&lt;p&gt;Cost of purchasing a smart mirror from overseas: factory cost plus overseas shipping around $1200.&lt;/p&gt;

&lt;p&gt;Conclusions of smart mirror cost&lt;/p&gt;

&lt;p&gt;Smart mirrors keep growing in the past years, becoming the most trending mirror for luxury and smart home or hospitality solutions. As this industry develops, smart mirror prices definitely become more affordable to all families. &lt;/p&gt;

</description>
      <category>smartmirror</category>
      <category>smarthome</category>
      <category>smartbathroom</category>
      <category>mirror</category>
    </item>
    <item>
      <title>You Too Can Write Clickbait Headings. Here's How</title>
      <author>Jon Randy</author>
      <pubDate>Thu, 12 Aug 2021 05:37:38 +0000</pubDate>
      <link>https://dev.to/jonrandy/you-too-can-write-clickbait-headings-here-s-how-1652</link>
      <guid>https://dev.to/jonrandy/you-too-can-write-clickbait-headings-here-s-how-1652</guid>
      <description>&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  🚀
&lt;/h1&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
