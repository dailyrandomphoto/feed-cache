<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>My next project.</title>
      <author>Abhiraj Bhowmick</author>
      <pubDate>Fri, 24 Sep 2021 12:04:37 +0000</pubDate>
      <link>https://dev.to/abhirajb/my-next-project-34c1</link>
      <guid>https://dev.to/abhirajb/my-next-project-34c1</guid>
      <description>&lt;p&gt;No, I won't talk about an app or website I am working on.&lt;/p&gt;

&lt;p&gt;My next project will be (is) &lt;a href="https://github.com/visualway"&gt;Visualway&lt;/a&gt;&lt;br&gt;
Visualway is a non-profit startup/organization which will create apps and services to ease one's workflow.&lt;/p&gt;

&lt;p&gt;You might have read my blogs on CSS, JS and HTML.&lt;br&gt;
&lt;em&gt;shit i messed up the order&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But I created this organization to not only improve myself as a developer and diversify in frameworks and languages but also really help others too.&lt;/p&gt;

&lt;p&gt;You can follow us on Twitter right now.&lt;br&gt;
&lt;a href="https://twitter.com/visualwayorg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--opAxX3tY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Twitter-1DA1F2%3Fstyle%3Dfor-the-badge%26logo%3Dtwitter%26logoColor%3Dwhite" alt="twitter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So I have already released a note-taking app on React under VW. You can read all about it below. &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/visualway" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MOQ7OZVB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--adZG1_NO--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/4732/2e16d3a6-d647-41eb-9de8-08fc8b3594c8.png" alt="Visualway"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I3Zc_2Z4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--UdQa_QBS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/685929/957550ef-dba4-424d-b0ee-bd5b3f9d2872.jpeg" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/visualway/introducing-noteture-4bhb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Introducing Noteture&lt;/h2&gt;
      &lt;h3&gt;Abhiraj Bhowmick for Visualway ・ Sep 22 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Before I end this post, I would like to ask you, my readers, to help me in this journey. If you are a dev or writer, hit me up on email or twitter (sadly there won't be any money involved). &lt;/p&gt;

&lt;p&gt;Or maybe you can follow us on Twitter and star the repo, so you don't miss my progress along this journey. &lt;/p&gt;

&lt;p&gt;Ciao.&lt;br&gt;
Visualway - &lt;a href="https://dev.to/visualway"&gt;https://dev.to/visualway&lt;/a&gt;&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>CTR as been added to Binance Smart BlockChain.</title>
      <author>Cryptourism.io</author>
      <pubDate>Fri, 24 Sep 2021 12:03:21 +0000</pubDate>
      <link>https://dev.to/cryptourism/ctr-as-been-added-to-binance-smart-blockchain-246d</link>
      <guid>https://dev.to/cryptourism/ctr-as-been-added-to-binance-smart-blockchain-246d</guid>
      <description>&lt;p&gt;Is with extreme pleasure I am announcing the acceptance of CTR Token to the Binance Smart Chain. After hard work and determination the team achieved a main goal of using Binance’s Blockchain and be recognized as a credible token in the cryptocurrency space increasing security, cheap transfers and transactions in a couple of seconds.&lt;/p&gt;

&lt;p&gt;All this will guarantee the use of one the most advanced Blockchain’s in the World.&lt;/p&gt;

&lt;p&gt;Is NOW OFFICIAL and we are getting stronger!&lt;br&gt;
Check our Airdrop Referral Program until it last since only 3% are allocated for the Bounty Campaign.&lt;/p&gt;

&lt;p&gt;Visit us today at &lt;a href="https://cryptourism.io/"&gt;https://cryptourism.io/&lt;/a&gt; to be part of the first Decentralized Tourism Investment.&lt;/p&gt;

</description>
      <category>bitcoin</category>
      <category>crypto</category>
      <category>ico</category>
      <category>cryptourism</category>
    </item>
    <item>
      <title>Using Python to Capitalize the first letter of a string</title>
      <author>hrishikesh1990</author>
      <pubDate>Fri, 24 Sep 2021 11:43:47 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/using-python-to-capitalize-the-first-letter-of-a-string-29me</link>
      <guid>https://dev.to/hrishikesh1990/using-python-to-capitalize-the-first-letter-of-a-string-29me</guid>
      <description>&lt;p&gt;In this short tutorial, we look at how you could use Python to Capitalize the first letter. We also look at all the other methods that can be used to change cases.&lt;/p&gt;

&lt;p&gt;This tutorial is a part of our initiative at &lt;a href="https://flexiple.com/"&gt;Flexiple&lt;/a&gt;, to write short curated tutorials around often used or interesting concepts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#how-do-you-capitalize-the-first-letter-of-a-string"&gt;How do you capitalize the first letter of a string?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-upper-lower-and-tittle"&gt;Using upper(), lower() and tittle()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts-python-capitalize-first-letter"&gt;Closing thoughts - Python capitalize first letter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While using Python you would deal with a lot of strings and sometimes you might want to display them in a particular case. This may not be a problem if the string is hardcoded, however, while using dynamic data e.g.: Displaying the user name on the top of the screen. The data for this might contain strings in various cases so it is important to fail-proof such instances.&lt;/p&gt;

&lt;p&gt;This article is a tutorial about the same.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-you-capitalize-the-first-letter-of-a-string"&gt;
  &lt;/a&gt;
  How do you capitalize the first letter of a string?
&lt;/h2&gt;

&lt;p&gt;The first letter of a string can be capitalized using the &lt;code&gt;capitalize()&lt;/code&gt; function. This method returns a string with the first letter capitalized. If you are looking to capitalize the first letter of the entire string the &lt;code&gt;title()&lt;/code&gt; function should be used.&lt;/p&gt;

&lt;p&gt;The following is the syntax to use python to capitalize first letter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here “string” refers to the string you are looking to capitalize&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-python-capitalize-first-letter"&gt;
  &lt;/a&gt;
  Code - Python capitalize first letter
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;flexiple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"join are freelance community"&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flexiple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flexiple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output of the code is as follows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;Join&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;freelance&lt;/span&gt; &lt;span class="n"&gt;community&lt;/span&gt;
&lt;span class="n"&gt;join&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;freelance&lt;/span&gt; &lt;span class="n"&gt;community&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see above, the first letter of the first string was capitalized. After which I have again printed the original string to show you that the original string has not been changed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-upper-lower-and-tittle"&gt;
  &lt;/a&gt;
  Using upper(), lower() and tittle():
&lt;/h2&gt;

&lt;p&gt;Apart from using Python to capitalize the first letter it can also be used to change other cases.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;upper()&lt;/code&gt; method for example returns a string with all the characters in the upper case and the &lt;code&gt;lower()&lt;/code&gt; method does the opposite.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;title()&lt;/code&gt; method is used to capitalize the first letter of all the words in a string.&lt;/p&gt;

&lt;p&gt;The syntax is similar to capitalize, you can see the implementation in the code section below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;flexiple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"join are freelance community"&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flexiple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flexiple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flexiple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flexiple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output of this code is as follows&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;ARE&lt;/span&gt; &lt;span class="n"&gt;FREELANCE&lt;/span&gt; &lt;span class="n"&gt;COMMUNITY&lt;/span&gt;
&lt;span class="n"&gt;join&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;freelance&lt;/span&gt; &lt;span class="n"&gt;community&lt;/span&gt;
&lt;span class="n"&gt;Join&lt;/span&gt; &lt;span class="n"&gt;Are&lt;/span&gt; &lt;span class="n"&gt;Freelance&lt;/span&gt; &lt;span class="n"&gt;Community&lt;/span&gt;
&lt;span class="n"&gt;join&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;freelance&lt;/span&gt; &lt;span class="n"&gt;community&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see in each method the case is changed accordingly and I have again printed the string to show that the original string has not changed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts-python-capitalize-first-letter"&gt;
  &lt;/a&gt;
  Closing Thoughts - Python capitalize first letter
&lt;/h2&gt;

&lt;p&gt;Learning to use Python to capitalize the first letter of a string may not be a very important topic but this is something that developers are expected to know.&lt;/p&gt;

&lt;p&gt;Practicing and being aware of the various methods would help you when you face such cases.&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Will the promise resolve? 🌎</title>
      <author>Ingo Steinke</author>
      <pubDate>Fri, 24 Sep 2021 10:54:11 +0000</pubDate>
      <link>https://dev.to/ingosteinke/will-the-promise-resolve-2dh9</link>
      <guid>https://dev.to/ingosteinke/will-the-promise-resolve-2dh9</guid>
      <description>&lt;p&gt;Thank goodness it's Friday! and not just any other Friday...&lt;br&gt;
Just a short post to state that it is possible to work AND campaign on the same day, but it is impossible to save humanity without changing anything.&lt;/p&gt;

&lt;p&gt;I support sustainable development, environmentalism, and Developers For Future, which is why I made this nerdy T-shirt that I will wear at the Fridays for Future protests today.&lt;/p&gt;

&lt;p&gt;This is the pseudo code written on my shirt:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;climateAction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;election&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;election&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;strike&lt;/span&gt;

&lt;span class="nx"&gt;Will&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt; &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;devsForFuture&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;developers4Future&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;globalClimateStrike&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--efcdVxUH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fnmplteyedjaztb85tun.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--efcdVxUH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fnmplteyedjaztb85tun.jpg" alt="Ingo Steinke sitting at his desk in front of a keyboard wearing a t-shirt with pseudo-code: climateAction = async election =&amp;gt; await Promise.resolve(election) || strike() Will the promise resolve? #devsForFuture #developers4future climateStrike"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>devlive</category>
      <category>motivation</category>
      <category>sustainability</category>
    </item>
    <item>
      <title>Make your own API under 30 lines of code</title>
      <author>Shreyas Pahune</author>
      <pubDate>Fri, 24 Sep 2021 10:31:03 +0000</pubDate>
      <link>https://dev.to/shreyazz/make-your-own-api-under-30-lines-of-code-4doh</link>
      <guid>https://dev.to/shreyazz/make-your-own-api-under-30-lines-of-code-4doh</guid>
      <description>&lt;h1&gt;
  &lt;a href="#make-your-own-api-under-30-lines-of-code"&gt;
  &lt;/a&gt;
  Make your own API under 30 lines of code
&lt;/h1&gt;

&lt;p&gt;Hey readers 👋🏻, in this blog we are going to discuss about making our own API in just 30 lines of code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#topics-covered-"&gt;
  &lt;/a&gt;
  Topics Covered :
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;What is an API.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tech used to make one.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to code it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to deploy it (FOR FREE).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Those who all know what APIs are and don't want to know anything else then 'How to code it', you can skip to that part directly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#what-is-an-api-"&gt;
  &lt;/a&gt;
  What is an API :
&lt;/h3&gt;

&lt;p&gt;API stands for &lt;strong&gt;Application Programming Interface&lt;/strong&gt;, which is a way for computer to talk to each other. APIs are just like website, except the UI part, it sends a &lt;strong&gt;request&lt;/strong&gt; to a server and in return the server send a &lt;strong&gt;response&lt;/strong&gt; . &lt;/p&gt;

&lt;p&gt;Most APIs which we use are &lt;strong&gt;RESTFUL APIs&lt;/strong&gt;, which means they follow a set of protocols/rules .&lt;/p&gt;

&lt;p&gt;You all already know what URLs are, but APIs use &lt;strong&gt;URIs&lt;/strong&gt; which stands for &lt;strong&gt;Uniform Resource Identifiers&lt;/strong&gt; and they help to differentiate between data on a server.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RUQdIL7E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hk7ihl7yd6zormxja38h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RUQdIL7E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hk7ihl7yd6zormxja38h.png" alt="api"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There can me many more end points, like here in the above image the end point is &lt;code&gt;/names&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;There are many requests we can make to the server but most common ones are :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GET: Reading the data.&lt;/li&gt;
&lt;li&gt;POST: Creating new data.&lt;/li&gt;
&lt;li&gt;PATCH: Updating new data.&lt;/li&gt;
&lt;li&gt;DELETE: Delete new data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have talked a lot about requesting, let's talk about responses.&lt;/p&gt;

&lt;p&gt;There is a thing called status code, which tells you about the response you got from the server. The responses can be divided into 3 levels.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2** Level (200-300) : Everything was fine, the response is fetched.&lt;/li&gt;
&lt;li&gt;4** Level (400-500): There was something with our request, and the data is not fetched.&lt;/li&gt;
&lt;li&gt;5** Level (500+):  Server has failed to send the data.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#tech-used-to-make-an-api"&gt;
  &lt;/a&gt;
  Tech used to make an API:
&lt;/h3&gt;

&lt;p&gt;I have used :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JavaScript&lt;/li&gt;
&lt;li&gt;Node.JS

&lt;ul&gt;
&lt;li&gt;Express JS&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Replit (for deployment)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-to-code-an-api"&gt;
  &lt;/a&gt;
  How to code an API:
&lt;/h3&gt;

&lt;p&gt;This is going to be the most important part of the blog.&lt;/p&gt;

&lt;p&gt;In this blog, I am going to make an API which returns the details of devices available at an electronic shop.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPhone 13&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;White&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OnePlus 9&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Blue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Oneplus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPhone 12&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Purple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above is an object which we want the API to return.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;By this point I am assuming that you all have initialized npm and installed express &lt;/p&gt;

&lt;p&gt;npm init -y (Initializes NPM)&lt;/p&gt;

&lt;p&gt;npm i express (Install Express)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#steps-"&gt;
  &lt;/a&gt;
  Steps :
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Step 1: We have to import express in our project.

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;const express = require('express');&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Step 2 : Initialize a variable to call the main &lt;code&gt;express()&lt;/code&gt; method.

&lt;ul&gt;
&lt;li&gt; &lt;code&gt;const app = express();&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Step 3: Setup a port.

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;const PORT = 8080;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Step 4: Use a &lt;a href="https://en.wikipedia.org/wiki/Middleware"&gt;middleware&lt;/a&gt; to parse the data into json.

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;app.use(express.json());&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Step 5: Add the Product Object to the file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Till now the code looks like :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPhone 13&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;White&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OnePlus 9&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Blue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Oneplus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPhone 12&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Purple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Step 6: Make the server listen to our port / Start the server.

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;app.listen(PORT, () =&amp;gt; console.log('server is 🟢'))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;.listen()&lt;/code&gt; is a function, which starts the server and listens at the port assigned.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The code is 👇🏻&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPhone 13&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;White&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OnePlus 9&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Blue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Oneplus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPhone 12&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Purple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`API 🟢`&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Step 7: Make a function which handles &lt;code&gt;GET&lt;/code&gt; Requests.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For this we have an in-built function called as &lt;code&gt;.get(resource-link, callBack-Function)&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/products&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Here we are setting the resource-link as &lt;code&gt;/products&lt;/code&gt; which means the user can get the data when he heads to &lt;code&gt;www.xyz.com/products&lt;/code&gt;. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In the callback function, we have 2 parameters one is for request and another is for response. &lt;/li&gt;
&lt;li&gt;Now as a server, when a user sends get request we have to respond to that and send data.&lt;/li&gt;
&lt;li&gt;In agreement to the above point, we are sending the data using &lt;code&gt;res&lt;/code&gt;  (response parameter).&lt;/li&gt;
&lt;li&gt;To send the data we use &lt;code&gt;.send()&lt;/code&gt; method, and additionally we are also sending the &lt;code&gt;status code&lt;/code&gt; using &lt;code&gt;.status()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;That's It!! Your API is ready 🎉&lt;/strong&gt; and right now you can start your &lt;code&gt;localhost&lt;/code&gt; server and head on to &lt;code&gt;http://localhost:3000/products&lt;/code&gt; and you will be able to see the data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-deploy-your-api-for-free-"&gt;
  &lt;/a&gt;
  How to deploy your API for FREE :
&lt;/h3&gt;

&lt;p&gt;If we do not deploy our API, then what is the use of it?&lt;/p&gt;

&lt;p&gt;Deployment in simple terms is making your API go live for 27x7, you can use it whenever you like.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;By this point I am assuming that you all have a Replit Account &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The steps are really simple :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Step 1: Make a new project in replit account under the section of Node.JS&lt;/li&gt;
&lt;li&gt;Copy Paste the code you just wrote in your text editor / IDE.&lt;/li&gt;
&lt;li&gt;On the right hand side, you'll see a package section.

&lt;ul&gt;
&lt;li&gt;Go inside it and download express.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Run the code.&lt;/li&gt;
&lt;li&gt;You'll see a URI on the right hand side of the screen like this 👇🏻&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oYPPmzpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c26ht9dpznkwx8dx7wwm.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oYPPmzpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c26ht9dpznkwx8dx7wwm.PNG" alt="link"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now head on to the link and write &lt;code&gt;/products&lt;/code&gt; or the any endpoint which you created and you'll be able to see the data in json format.&lt;/p&gt;




&lt;p&gt;Thank you so much for reading the whole blog 👏🏻, I really appreciate it.&lt;/p&gt;

&lt;p&gt;Till then...good bye !&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Resources For Front - End Developers</title>
      <author>SumantaGitWeb</author>
      <pubDate>Fri, 24 Sep 2021 10:22:09 +0000</pubDate>
      <link>https://dev.to/sumanta_thefrontdev/resources-for-front-end-developers-57lb</link>
      <guid>https://dev.to/sumanta_thefrontdev/resources-for-front-end-developers-57lb</guid>
      <description>&lt;p&gt;&lt;b&gt;Hello!!&lt;/b&gt;&lt;br&gt;
Hope You all are doing great..&lt;/p&gt;

&lt;p&gt;Today I am here with my first post which is some useful resources for &lt;strong&gt;Front - End Developers.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So Here are they:&lt;/p&gt;

&lt;p&gt;1) Tailwind CSS&lt;br&gt;
It Says : "A utility-first CSS framework packed with classes like flex, pt-4, text-center and rotate-90 that can be composed to build any design, directly in your markup."&lt;/p&gt;

&lt;p&gt;2) Alpine JS&lt;br&gt;
It Says : "Your new, lightweight, JavaScript framework."&lt;/p&gt;

&lt;p&gt;3) UnSplash&lt;br&gt;
It Says : "The internet’s source of freely-usable images.&lt;br&gt;
Powered by creators everywhere."&lt;/p&gt;

&lt;p&gt;4) UnDraw&lt;br&gt;
It Says : "Open-source illustrations for any idea you can imagine and create."&lt;/p&gt;

&lt;p&gt;5) GSAP(Green Sock Animation Platform)&lt;br&gt;
It Says : "Professional-grade JavaScript animation for the modern web"&lt;/p&gt;

&lt;p&gt;6) Three JS&lt;br&gt;
It Says : "Three.js is a cross-browser JavaScript library and application programming interface used to create and display animated 3D computer graphics in a web browser using WebGL. The source code is hosted in a repository on GitHub."&lt;/p&gt;

&lt;p&gt;7) Anime JS&lt;br&gt;
It Says : "Anime.js (/ˈæn.ə.meɪ/) is a lightweight JavaScript animation library with a simple, yet powerful API.&lt;br&gt;
It works with CSS properties, SVG, DOM attributes and JavaScript Objects."&lt;/p&gt;

</description>
      <category>webdev</category>
    </item>
    <item>
      <title>How to pick an open-source project to contribute to?</title>
      <author>Pragati Verma</author>
      <pubDate>Fri, 24 Sep 2021 09:47:05 +0000</pubDate>
      <link>https://dev.to/pragativerma18/how-to-pick-an-open-source-project-to-contribute-to-4kak</link>
      <guid>https://dev.to/pragativerma18/how-to-pick-an-open-source-project-to-contribute-to-4kak</guid>
      <description>&lt;p&gt;Contributing to the open-source community and projects can be intimidating even for seasoned developers, let alone newcomers. One of the major problems I’ve had as an early-career developer has been figuring out how to find the project that aligns with my interests as well as the skills that I want to practice. &lt;/p&gt;

&lt;p&gt;Having figured that out, I am here to help beginners understand what they need to consider when determining what open source project to work on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#determine-your-goals"&gt;
  &lt;/a&gt;
  Determine your goals
&lt;/h2&gt;

&lt;p&gt;The starting point would be sitting down and jotting down a list of goals that you hope to accomplish through contributing to an open-source project. If any of your goals seem vague, sit down with them and flesh them out until they are explicit and actionable. The more explicit your goals are, the easier it is to judge if you can meet them. &lt;/p&gt;

&lt;p&gt;Beware that you don't start thinking of this as a competition or contest, and want to contribute only because others are doing it, or you have heard a lot about it, or want some swags or benefits out of it apart from the networking and learning involved. &lt;/p&gt;

&lt;p&gt;Moreover, don't think that these skills necessarily have to be technical skills, in fact, open-source is much more than that. You can contribute to open-source with all kinds of skills ranging from documentation to graphic design, to QA and testing, to project management.&lt;/p&gt;

&lt;p&gt;Here are some questions to consider as you plan to contribute to a possible open-source project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What skills do I possess to contribute to a project?&lt;/li&gt;
&lt;li&gt;What skills do I wish to bring to a project?&lt;/li&gt;
&lt;li&gt;What are my passions/hobbies?&lt;/li&gt;
&lt;li&gt;How much time am I prepared to devote to a project?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When I decided I wanted to work on an open-source project, I knew that I wanted to work on my frontend skills and build new features on a React or Vue application. That's why I chose React Native and then Adobe Docs as my projects during the MLH Fellowship.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To know more about my journey at the MLH Fellowship, &lt;a href="https://itispragativerma.medium.com/my-journey-at-the-mlh-fellowship-a1145e260c09"&gt;read this&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/pragativerma18" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kl_m4K1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--JR-0Kc_W--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/242611/68277387-0fa0-4c79-ad6f-4be3ddc940b7.jpeg" alt="pragativerma18"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pragativerma18/my-journey-at-the-mlh-fellowship-428d" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;My Journey at the MLH Fellowship&lt;/h2&gt;
      &lt;h3&gt;Pragati Verma ・ Apr 30 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#mlhgrad&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#computerscience&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#finding-potential-projects"&gt;
  &lt;/a&gt;
  Finding potential projects
&lt;/h2&gt;

&lt;p&gt;Finding potential projects isn't that hard, you just have to keep looking, or perhaps learn to look at the right place. Here are some good places to look for interesting projects:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-technology"&gt;
  &lt;/a&gt;
  Using technology
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href="https://up-for-grabs.net/"&gt;Up for Grabs&lt;/a&gt;&lt;/strong&gt; - You can search for projects by name, by label, or by tag. A tag can be the language that the project uses.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href="https://goodfirstissue.dev/"&gt;Good First Issues&lt;/a&gt;&lt;/strong&gt; - You can browse by language&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.firsttimersonly.com/"&gt;First Timers Only&lt;/a&gt;&lt;/strong&gt;- Compilation of resources for beginners&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/MunGell/awesome-for-beginners"&gt;Awesome For Beginners&lt;/a&gt;&lt;/strong&gt; - Collection of beginner-friendly projects, sorted according to the programming languages.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#participate-in-open-source-programs"&gt;
  &lt;/a&gt;
  Participate in Open Source Programs
&lt;/h3&gt;

&lt;p&gt;Participating in open-source programs is the easiest and the quickest way to familiarize yourself with the open-source community, and projects. &lt;/p&gt;

&lt;p&gt;These are some of the best beginner-friendly open-source programs -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fellowship.mlh.io/programs/prep"&gt;MLH Fellowship Prep Program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gssoc.girlscript.tech/"&gt;GirlScript Summer Of Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#by-interest"&gt;
  &lt;/a&gt;
  By interest
&lt;/h3&gt;

&lt;p&gt;You can also search for projects based on your interests. The easiest method to do this is to first determine what interests you, then search the Internet (or GitHub) for open source projects relating to your interests. You may occasionally come across specific interest groups that work on open source projects, for example - &lt;a href="https://djangogirls.org/en/"&gt;Django Girls&lt;/a&gt;, &lt;a href="https://www.womenwhocode.com/"&gt;Women Who Code&lt;/a&gt;, etc.&lt;/p&gt;

&lt;p&gt;Once you've compiled a list of prospective projects to which you can help by contributing, you can begin narrowing down your options. Good potential initiatives will fit within the above-mentioned goals and have the following characteristics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A free and open-source license &lt;/li&gt;
&lt;li&gt;Indicators of ongoing development (ensure that it hasn't been inactive for a very long time)&lt;/li&gt;
&lt;li&gt;Guidelines for contributor activity (look for Contributing guidelines, code of conduct, wiki, etc in the GitHub repository).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's discuss these characteristics in a little bit more detail to get a deeper understanding of what to look for in these potential projects to find the most suitable one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#understanding-open-source-licenses"&gt;
  &lt;/a&gt;
  Understanding Open source licenses
&lt;/h2&gt;

&lt;p&gt;Open source licenses are often overlooked, but they are an essential component of any open-source project as they govern what you can and cannot do with an open-source project. Before you start contributing to a possible project, it's important looking at the license it is utilizing if it has one.&lt;/p&gt;

&lt;p&gt;While there are many different types of open-source licenses to choose from, there are two main categories: &lt;strong&gt;copyleft&lt;/strong&gt; and &lt;strong&gt;permissive&lt;/strong&gt;. Anyone who works on these licensed projects must be able to read, alter, and share the source code under both types of licenses. However, the two licenses differ in terms of what the user can do with the work and whether the derivative work should be under the same terms as the original work or under different terms.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dA5AEZ0u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://janelia-flyem.github.io/images/open_licenses.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dA5AEZ0u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://janelia-flyem.github.io/images/open_licenses.png" alt="Open Source Lincenses"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Copyleft License&lt;/strong&gt;: A copyleft license prevents a derivative work from being relicensed under a more restrictive license. For example - The GNU Public License (GPL), the GNU Lesser General Public License (LGPL), and the Mozilla Public License.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Permissive License&lt;/strong&gt;: A permissive license permits the creator of a derivative work to change the derivative work's license. It also permits a creator to incorporate a work released under a permissive license into a proprietary work, with the derivative remaining proprietary.&lt;/p&gt;

&lt;p&gt;A permissive license does not obligate the creator of a derivative work to make the derivative work available under a free or open-source license. The Apache License and the MIT License are two popular permissive licenses.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Read more about Open-Source Licenses &lt;a href="https://snyk.io/learn/open-source-licenses/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#determining-signs-of-active-development"&gt;
  &lt;/a&gt;
  Determining signs of active development
&lt;/h2&gt;

&lt;p&gt;Next, look at the history of your possible project to see if it is still active, both in terms of discussion and development activity. &lt;/p&gt;

&lt;p&gt;Some questions to consider while calculating activity levels are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do those who ask questions get answers?&lt;/li&gt;
&lt;li&gt;Is the project welcoming to existing contributors?&lt;/li&gt;
&lt;li&gt;What is the tone of the project's participants (i.e., are they pleasant, or does communication appear cold and uptight?)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#contributor-guidelines"&gt;
  &lt;/a&gt;
  Contributor Guidelines
&lt;/h2&gt;

&lt;p&gt;Finally, find out if your proposed project currently has any guidelines in place for contributors. This is not needed, but it can help you determine whether the project is designed with other contributors in mind, and it can help you determine whether your first contribution will go easily or whether there will be some hiccups along the way. &lt;/p&gt;

&lt;p&gt;Here are some questions to get you started:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Is there any information on how to get the project started? (Look for a readme or wiki)&lt;/li&gt;
&lt;li&gt;Are there any concerns that you can begin to help with? (Look for Open Issues)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;After you've evaluated and analyzed the projects based on the above metrics, it's time to prioritize your potential projects. When you've narrowed your selection of projects down to a few finalists, you can put them to the test by selecting an issue and generating a pull request for each.&lt;/p&gt;

&lt;p&gt;And to ensure that you make meaningful and effective contributions, you can refer to this article on &lt;a href="https://dev.to/pragativerma18/open-source-best-practices-902"&gt;Open Source Best Practices&lt;/a&gt;.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/pragativerma18" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kl_m4K1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--JR-0Kc_W--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/242611/68277387-0fa0-4c79-ad6f-4be3ddc940b7.jpeg" alt="pragativerma18"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pragativerma18/open-source-best-practices-902" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Open Source Best Practices&lt;/h2&gt;
      &lt;h3&gt;Pragati Verma ・ May 15 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#computerscience&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;I hope this advice has given you a better sense of what to look for in an open-source project. These questions are not written in stone; you can refer to them on a frequent basis to determine whether you're on the correct track towards your objectives.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sQnfl9gQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://octodex.github.com/images/hubot.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sQnfl9gQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://octodex.github.com/images/hubot.jpg" alt="Octocat"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is all that I learned along my journey in open-source. I hope that the practices mentioned above take you closer to your next &lt;strong&gt;(effective)&lt;/strong&gt; open-source contribution and help you fulfill your chance to give back to the community, one commit at a time!&lt;/p&gt;

&lt;p&gt;If you find this insightful, do let me know your views in the comments. Also, any kind of feedback is welcome. In case you want to connect with me, follow the links below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/pragativerma18/"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://github.com/PragatiVerma18/"&gt;GitHub&lt;/a&gt; | &lt;a href="https://twitter.com/pragati_verma18"&gt;Twitter&lt;/a&gt; | &lt;a href="http://medium.com/@itispragativerma"&gt;Medium&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>hacktoberfest</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Improve your JS skills with theses tips #2
</title>
      <author>CodeOz</author>
      <pubDate>Fri, 24 Sep 2021 09:46:23 +0000</pubDate>
      <link>https://dev.to/codeoz/improve-your-js-skills-with-theses-tips-2-3bg2</link>
      <guid>https://dev.to/codeoz/improve-your-js-skills-with-theses-tips-2-3bg2</guid>
      <description>&lt;p&gt;In this article I will share with you some news tips about JS that can improve your skills!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dont-use-raw-delete-endraw-to-remove-property"&gt;
  &lt;/a&gt;
  Don't use &lt;code&gt;delete&lt;/code&gt; to remove property
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;delete&lt;/code&gt; is very bad to remove a property from an object (bad performance), moreover it will create a lot of &lt;strong&gt;side projects&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;But what you should do if you need to remove a property?&lt;/p&gt;

&lt;p&gt;You need to use &lt;strong&gt;Functional approach&lt;/strong&gt; and create a new object without this property. You can manage to do this with a function like this 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;removeProperty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;propertyToRemove&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// We split the property to remove from the target in another object&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;propertyToRemove&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;newTarget&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;newTarget&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;66&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;totoWithoutB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;removeProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;toto&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;b&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// { a: 55 }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A very simple snippet that will help you a lot!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-a-property-to-an-object-only-if-it-exists"&gt;
  &lt;/a&gt;
  Add a property to an object only if it exists
&lt;/h3&gt;

&lt;p&gt;Sometimes we need to add a property to an object if this property is defined. We can make something like this 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;toto&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;other&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;other&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;other&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// The condition is not important&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;condition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;other&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;❌ It's not very good code anyway...&lt;/p&gt;

&lt;p&gt;✅ You can use something more elegant!👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// The condition is not important&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;condition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;other&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="na"&gt;other&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;other&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;toto&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the condition is true, you add the property to your object (it work thanks to the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; operator)&lt;/p&gt;

&lt;p&gt;I could also make this 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// The condition is not important&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;condition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;toto&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;other&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="na"&gt;other&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;other&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#use-template-literal-string"&gt;
  &lt;/a&gt;
  Use template literal string
&lt;/h3&gt;

&lt;p&gt;When we learn strings in javascript and we need to concat them with variable we code something like 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;toto&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello from &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// hello from toto!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;❌ It can become garbage if you add other variables and string!&lt;/p&gt;

&lt;p&gt;You can use template literal string&lt;/p&gt;

&lt;p&gt;You just need to replace simple or double quotes by back-tick. &lt;/p&gt;

&lt;p&gt;And wrap all variables by &lt;code&gt;${variable}&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;toto&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`hello from &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;toto&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!`&lt;/span&gt; &lt;span class="c1"&gt;// hello from toto!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#shortcircuits-conditionals"&gt;
  &lt;/a&gt;
  Short-circuits conditionals
&lt;/h3&gt;

&lt;p&gt;If you have to execute a function just if a condition is true, like 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;toto&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can use a &lt;strong&gt;short-circuit&lt;/strong&gt; just like 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;condition&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks to the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; (AND) operator, if the condition is true, it will execute &lt;em&gt;toto&lt;/em&gt; function&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#set-default-value-for-variable"&gt;
  &lt;/a&gt;
  Set default value for variable
&lt;/h3&gt;

&lt;p&gt;If you need to set a default value to a variable&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;toto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//undefined&lt;/span&gt;

&lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;default value&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;toto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//default value&lt;/span&gt;

&lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;toto&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;new value&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;toto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//default value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks to the &lt;code&gt;||&lt;/code&gt; (OR) operator, if the first value is undefined or false, it will assign the default value after the (&lt;code&gt;||&lt;/code&gt;)!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-console-timer"&gt;
  &lt;/a&gt;
  Use console timer
&lt;/h3&gt;

&lt;p&gt;If you need to know the execution time of a function for example you can &lt;strong&gt;console timer&lt;/strong&gt;. It will give you back the time before and after the execution of your function very fastly!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;100000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// some code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timeEnd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// x ms&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;I hope you like this reading!&lt;/p&gt;

&lt;p&gt;🎁 You can get my new book &lt;code&gt;Underrated skills in javascript, make the difference&lt;/code&gt; for FREE if you follow me on &lt;a href="https://twitter.com/code__oz"&gt;Twitter&lt;/a&gt; and MP me 😁&lt;/p&gt;

&lt;p&gt;Or get it &lt;a href="https://codeoz.gumroad.com/l/RXLYp"&gt;HERE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🎁 &lt;a href="https://www.getrevue.co/profile/code__oz"&gt;MY NEWSLETTER&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;☕️ You can &lt;a href="https://www.buymeacoffee.com/CodeoZ"&gt;SUPPORT MY WORKS&lt;/a&gt; 🙏&lt;/p&gt;

&lt;p&gt;🏃‍♂️ You can follow me on 👇&lt;/p&gt;

&lt;p&gt;🕊 Twitter : &lt;a href="https://twitter.com/code__oz"&gt;https://twitter.com/code__oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;👨‍💻 Github: &lt;a href="https://github.com/Code-Oz"&gt;https://github.com/Code-Oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And you can mark 🔖 this article!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Let's scroll to infinity!</title>
      <author>Simon Bundgaard-Egeberg</author>
      <pubDate>Fri, 24 Sep 2021 09:42:54 +0000</pubDate>
      <link>https://dev.to/itminds/let-s-scroll-to-infinity-5cc</link>
      <guid>https://dev.to/itminds/let-s-scroll-to-infinity-5cc</guid>
      <description>&lt;p&gt;The feed exercise. At this point in time, most apps have some kind of infinite scrollable feed to keep users interested.&lt;/p&gt;

&lt;p&gt;The project I will be developing on here is written in Elixir, and uses the Phoenix Framework and liveview to create a webapp.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-why"&gt;
  &lt;/a&gt;
  The why
&lt;/h3&gt;

&lt;p&gt;Jascrafts is a project based knitting app I have created for my wife. When finishing a project, the users (my wife and her friends), can add some data about the project they finished, and optionally add an image. Furthermore, they can choose to share the picture on a feed, that the other users can see.&lt;/p&gt;

&lt;p&gt;As the use of the feed grew, it was apparent that I could not just pull out all projects and show them, since that list would be long. And I hate the pages solution where you have to click a next page button.&lt;/p&gt;

&lt;p&gt;Therefore: the infinite scroll! Luckily, Elixir is a very pragmatic language, and adding such a feature should not be too difficult.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-behind-end"&gt;
  &lt;/a&gt;
  The behind end
&lt;/h3&gt;

&lt;p&gt;The first query I had looked something like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight elixir"&gt;&lt;code&gt;&lt;span class="k"&gt;defp&lt;/span&gt; &lt;span class="n"&gt;feed_query&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="no"&gt;ProjectDetail&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="ss"&gt;where:&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_public&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="ss"&gt;join:&lt;/span&gt; &lt;span class="n"&gt;sp&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;assoc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:project&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="ss"&gt;order_by:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;desc:&lt;/span&gt; &lt;span class="n"&gt;sp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;finished_at&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="ss"&gt;preload:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:project&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When rendering this on the front-end, there is nothing more than a simple loop and renders each element as it comes into view.&lt;/p&gt;

&lt;p&gt;The basic idea of the back-end pagination is to fetch a pages worth of data, + 1 element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight elixir"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="n"&gt;feed&lt;/span&gt;&lt;span class="p"&gt;(%&lt;/span&gt;&lt;span class="no"&gt;Jascrafts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;Feed&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;Pagination&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="ss"&gt;page:&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="ss"&gt;pr_page:&lt;/span&gt; &lt;span class="n"&gt;pr_page&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;feed_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pr_page&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;Repo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;has_next_page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Enum&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;pr_page&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="ss"&gt;page:&lt;/span&gt; &lt;span class="no"&gt;Enum&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;take&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pr_page&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="ss"&gt;has_next:&lt;/span&gt; &lt;span class="n"&gt;has_next_page&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;defp&lt;/span&gt; &lt;span class="n"&gt;feed_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pr_page&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="no"&gt;ProjectDetail&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="ss"&gt;where:&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_public&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="ss"&gt;join:&lt;/span&gt; &lt;span class="n"&gt;sp&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;assoc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:project&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="ss"&gt;order_by:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;desc:&lt;/span&gt; &lt;span class="n"&gt;sp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;finished_at&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="ss"&gt;offset:&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;pr_page&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="ss"&gt;limit:&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;pr_page&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="ss"&gt;preload:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:project&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First, let's take a look on the feed query, this now has an offset and limit. The offset part &lt;code&gt;page -1 * pr_page&lt;/code&gt; will make sure we only take out data from a specific point in our database. The limit is set to &lt;code&gt;pr_page + 1&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Let's assume I have a &lt;code&gt;pr_page&lt;/code&gt; of 12. If I can fetch &lt;code&gt;&amp;gt; 12&lt;/code&gt; elements out, I know that there is at least one more page of data, even if that next page only has 1 element. If I get &lt;code&gt;&amp;lt;= 12&lt;/code&gt; elements out, I know that I am on the last page.&lt;/p&gt;

&lt;p&gt;With that logic we can compose this knowledge in the feed function. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-ahead-end"&gt;
  &lt;/a&gt;
  The ahead end
&lt;/h3&gt;

&lt;p&gt;Now this is where it gets sticky. If you don't know, a Phoenix app is server rendered.&lt;/p&gt;

&lt;p&gt;Our object here is to listen to front-end events of a page end, and when we are within a specific scroll position, fetch more elements. But I don't want too much of this logic on the front-end.&lt;/p&gt;

&lt;p&gt;Liveview hooks is the way to go. To set up a hook, we need a bit of javascript to create the frontend listener.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hexdocs.pm/phoenix_live_view/js-interop.html#client-hooks"&gt;JavaScript interoperability&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;Hooks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;scrollAt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;scrollTop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollTop&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollTop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;scrollHeight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollHeight&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;clientHeight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scrollTop&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scrollHeight&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;clientHeight&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;Hooks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;InfiniteScroll&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;mounted&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pending&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scroll&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pending&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;scrollAt&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pending&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pushEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;load-more&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{});&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;updated&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pending&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cy24rBSs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vtw1sy75kltxgcikfzfc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cy24rBSs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vtw1sy75kltxgcikfzfc.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Above picture shows the container of my feed in the rendered HTML. Notice the data-page field. This is what glues it together with above JavaScript, and when the &lt;code&gt;scrollAt&lt;/code&gt; position hits 90%, it will trigger the &lt;code&gt;load-more&lt;/code&gt; and push that event over the liveview web socket connection.&lt;/p&gt;

&lt;p&gt;To receive this event on the back-end, we need to implement a &lt;code&gt;handle_event&lt;/code&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight elixir"&gt;&lt;code&gt;&lt;span class="nv"&gt;@impl&lt;/span&gt; &lt;span class="no"&gt;Phoenix&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;LiveView&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="n"&gt;handle_event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"load-more"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="ss"&gt;assigns:&lt;/span&gt; &lt;span class="n"&gt;assigns&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:noreply&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;page:&lt;/span&gt; &lt;span class="n"&gt;assigns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;defp&lt;/span&gt; &lt;span class="n"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(%{&lt;/span&gt;&lt;span class="ss"&gt;assigns:&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="ss"&gt;page:&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;pr_page:&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;has_next:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="ss"&gt;page:&lt;/span&gt; &lt;span class="n"&gt;projects&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;has_next:&lt;/span&gt; &lt;span class="n"&gt;has_next&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Feed&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;feed&lt;/span&gt;&lt;span class="p"&gt;(%&lt;/span&gt;&lt;span class="no"&gt;Pagination&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;page:&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;pr_page:&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="n"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;projects:&lt;/span&gt; &lt;span class="n"&gt;projects&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;has_next:&lt;/span&gt; &lt;span class="n"&gt;has_next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;defp&lt;/span&gt; &lt;span class="n"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;socket&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A lot of stuff here, and some of it I will leave to the reader to understand. The important part is that the handle event function triggers on the load-more event that is being sent via the JS snippet we wrote earlier. &lt;/p&gt;

&lt;p&gt;Now that we are back in Elixir land, we can do all the smart things we want. In this case, we fetch an additional page of data, and send it back over the LiveView socket connection. &lt;/p&gt;

&lt;p&gt;The cool thing about this is that the infinite scroll trigger has nothing to do with data. At this point, for any infinite scrollable list I would be inclined to create, all that I needed to do, was to implement the &lt;code&gt;handle_event("load-more")&lt;/code&gt; function, and do the specific use-case stuff there.&lt;/p&gt;

</description>
      <category>elixir</category>
      <category>phoenix</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Deploy a Data Only Helium Hotspot with balena, Raspberry Pi and RAK LoRa concentrator</title>
      <author>Marc Pous</author>
      <pubDate>Fri, 24 Sep 2021 09:20:29 +0000</pubDate>
      <link>https://dev.to/mpous/deploy-a-data-only-helium-hotspot-with-balena-raspberry-pi-and-rak-lora-concentrator-51il</link>
      <guid>https://dev.to/mpous/deploy-a-data-only-helium-hotspot-with-balena-raspberry-pi-and-rak-lora-concentrator-51il</guid>
      <description>&lt;p&gt;Find here a step-by-step tutorial to build, deploy and manage a &lt;code&gt;Helium data-only Hotspot&lt;/code&gt; using balena. Note that this is a balena version based on the Nebra helium light hotspot.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  Disclaimer
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;This Helium Hotspot is going to transfer LoRa data to Helium OUIs BUT it's not going to perform proof-of-coverage or anything else to retrieve tokens. &lt;br&gt;
Read more information about the milestones and what's possible to get &lt;a href="https://docs.helium.com/mine-hnt/light-hotspots"&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#hardware"&gt;
  &lt;/a&gt;
  Hardware
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Raspberry Pi 0/2/3/4 or &lt;a href="https://www.balena.io/fin/"&gt;balenaFin&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;SD card in case of the RPi 0/2/3/4&lt;/li&gt;
&lt;li&gt;Power supply and (optionally) ethernet cable&lt;/li&gt;
&lt;li&gt;LoRa concentrator (SX1302 SPI based) (e.g. &lt;a href="https://www.rakwireless.com/en-us/products/lpwan-gateways-and-concentrators/rak2287"&gt;RAK2287&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#software"&gt;
  &lt;/a&gt;
  Software
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A balenaCloud account (&lt;a href="https://dashboard.balena-cloud.com/"&gt;sign up here&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://balena.io/etcher"&gt;balenaEtcher&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#deploy-the-fleet"&gt;
  &lt;/a&gt;
  Deploy the fleet
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#oneclick-deploy-using-balena-deploy"&gt;
  &lt;/a&gt;
  One-click deploy using &lt;a href="https://www.balena.io/docs/learn/deploy/deploy-with-balena-button/"&gt;Balena Deploy&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Running this project is as simple as deploying it to a balenaCloud application. You can do it in just one click by using the button below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashboard.balena-cloud.com/deploy?repoUrl=https://github.com/mpous/helium-data-hotspot"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CIT57v9v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.balena.io/deploy.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow instructions, click Add a Device and flash an SD card with that OS image dowloaded from balenaCloud. Enjoy the magic 🌟Over-The-Air🌟!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#device-variables"&gt;
  &lt;/a&gt;
  Device Variables
&lt;/h2&gt;

&lt;p&gt;Once the device is online and the services &lt;code&gt;packet-forwarder&lt;/code&gt; and &lt;code&gt;gatewayrs&lt;/code&gt; are downloaded and installed go to &lt;code&gt;Device Variables&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;VARIANT&lt;/code&gt;: This is used to define your hardware. During the test is being used a Raspberry Pi 4 with RAK2287 LoRa concentrator and the &lt;code&gt;VARIANT&lt;/code&gt; is defined  &lt;code&gt;DIY-RAK2287&lt;/code&gt;. You can find here &lt;a href="https://github.com/NebraLtd/helium-hardware-definitions"&gt;the list of hardware compatible&lt;/a&gt;. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;REGION_OVERRIDE&lt;/code&gt;: This is used to define your LoRa region (e.g. &lt;code&gt;EU868&lt;/code&gt;). You can find here &lt;a href="https://github.com/NebraLtd/hm-pktfwd"&gt;the list of LoRa regions compatible&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At that moment the hotspot should be running showing some errors on connecting to the Blockchain on the balenaCloud Logs.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#run-the-helium-hotspot"&gt;
  &lt;/a&gt;
  Run the Helium Hotspot
&lt;/h2&gt;

&lt;p&gt;To check that everything is running properly, go to the Terminal and select the &lt;code&gt;gatewayrs&lt;/code&gt; service, then introduce.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;helium_gateway key info
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you will get something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "address": &amp;lt;hotspot address&amp;gt;,
  "name": &amp;lt;hotspot name&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#join-the-helium-blockchain-with-your-dataonly-hotspot"&gt;
  &lt;/a&gt;
  Join the Helium blockchain with your data-only hotspot
&lt;/h2&gt;

&lt;p&gt;To join the Helium blockchain, at the moment (summer 2021) you only can use the &lt;a href="https://docs.helium.com/wallets/cli-wallet/"&gt;Helium CLI&lt;/a&gt;. The Helium app is still not compatible with the data-only hotspots. Install the &lt;a href="https://docs.helium.com/wallets/cli-wallet/"&gt;Helium CLI&lt;/a&gt; wallet and follow these steps:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-helium-wallet"&gt;
  &lt;/a&gt;
  Create a Helium wallet
&lt;/h3&gt;

&lt;p&gt;Install the Helium wallet CLI or use the wallet key from your mobile application. In case that you need to create a wallet from scratch, just type and follow the instructions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;helium-wallet create basic
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then to see &lt;code&gt;YOUR_WALLET&lt;/code&gt; of the Helium wallet type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;helium-wallet info
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#add-the-hotspot-from-balenacloud"&gt;
  &lt;/a&gt;
  Add the hotspot from balenaCloud
&lt;/h3&gt;

&lt;p&gt;Go to your device on balenaCloud and type on the HostOS terminal (before change &lt;code&gt;YOUR_WALLET&lt;/code&gt; by your public Helium wallet ID):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;root@d83bf778fc69:/etc/helium_gateway# helium_gateway add --owner YOUR_WALLET --payer YOUR_WALLET
{
  "address": "YOUR_ADDRESS",
  "fee": 65000,
  "mode": "dataonly",
  "owner": "YOUR_WALLET",
  "payer": "YOUR_WALLET",
  "staking fee": 1000000,
  "txn": "YOUR_TXN"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remember that to confirm all the commands you will need to add &lt;code&gt;--commit&lt;/code&gt; at the end of the command.&lt;/p&gt;

&lt;p&gt;Then go to your computer where you installed the Helium wallet CLI software. Copy your &lt;code&gt;txn&lt;/code&gt; from the previous JSON response and type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;MacBookPro-Marc-Pous-2827:helium-wallet-v1.6.6-x86-64-macos marcpous$ ./helium-wallet hotspots add YOUR_TXN --commit
Password: [hidden]
+-------------+-----------------------------------------------------+
| Key         | Value                                               |
+-------------+-----------------------------------------------------+
| Address     | YOUR_ADDRESS                                        |
+-------------+-----------------------------------------------------+
| Payer       | YOUR_WALLET                                         |
+-------------+-----------------------------------------------------+
| Fee         | 65000                                               |
+-------------+-----------------------------------------------------+
| Staking fee | 1000000                                             |
+-------------+-----------------------------------------------------+
| Hash        | YOUR_HASH                                           |
+-------------+-----------------------------------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will need to have some Data Credits to be able to do this operation (1065000 DCs).&lt;/p&gt;

&lt;p&gt;Finally you will need to assert the location of the data-only Helium hotspot. Cpy your&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;MacBookPro-Marc-Pous-2827:helium-wallet-v1.6.6-x86-64-macos marcpous$ ./helium-wallet hotspots assert --gateway YOUR_ADDRESS --lat=YOUR_LAT --lon=YOUR_LON --mode dataonly --commit
Password: [hidden]
+------------------+-----------------------------------------------------+
| Key              | Value                                               |
+------------------+-----------------------------------------------------+
| Address          | YOUR_ADDRESS                                        |
+------------------+-----------------------------------------------------+
| Location         | LOCATION_HASH                                       |
+------------------+-----------------------------------------------------+
| Payer            | YOUR_WALLET                                         |
+------------------+-----------------------------------------------------+
| Nonce            | 1                                                   |
+------------------+-----------------------------------------------------+
| Fee (DC)         | 55000                                               |
+------------------+-----------------------------------------------------+
| Staking Fee (DC) | 500000                                              |
+------------------+-----------------------------------------------------+
| Gain (dBi)       | 1.2                                                 |
+------------------+-----------------------------------------------------+
| Elevation        | 0                                                   |
+------------------+-----------------------------------------------------+
| Hash             | YOUR_HASH                                           |
+------------------+-----------------------------------------------------+

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now that should have worked.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#backup-your-gatewaykeybin-file"&gt;
  &lt;/a&gt;
  Backup your gateway_key.bin file
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;DISCLAIMER: It's very important that at this point you backup the gateway_key of your hotspot. If you loose this key, you will not be able to use this hotspot anymore.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Follow this instructions to backup your &lt;code&gt;gateway_key.bin&lt;/code&gt; file of your hotspot.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open an SSH session to the "host-os" on balenaCloud Terminal.&lt;/li&gt;
&lt;li&gt;Type this command and keep note of the &lt;code&gt;(YOUR INSTANCE)_miner-storage&lt;/code&gt;: &lt;code&gt;ls /var/lib/docker/volumes&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Type this command to get a link to download the gateway key (note to replace the &lt;code&gt;YOUR INSTANCE&lt;/code&gt; part with the container number that you got from the previous command) &lt;code&gt;curl -F "file=@/var/lib/docker/volumes/(YOUR INSTANCE)_miner-storage/_data#/gateway_key.bin" https://file.io&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Use the outputted file.io link to securely download your swarm key. The link only works one time.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#restore-your-gatewaykeybin-file-on-your-new-file"&gt;
  &lt;/a&gt;
  Restore your gateway_key.bin file on your new file
&lt;/h2&gt;

&lt;p&gt;Follow this instructions to restore your &lt;code&gt;gateway_key.bin&lt;/code&gt; key into your new hotspot.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open an SSH session to the "host-os" on balenaCloud Terminal.&lt;/li&gt;
&lt;li&gt;Type this command and keep note of the &lt;code&gt;(YOUR INSTANCE)_miner-storage&lt;/code&gt; information: &lt;code&gt;ls /var/lib/docker/volumes&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Navigate to where the swarm_key is stored &lt;code&gt;cd /var/lib/docker/volumes/(YOUR INSTANCE)_miner-storage/_data#/&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Remove the original &lt;code&gt;gateway_key.bin&lt;/code&gt; file &lt;code&gt;rm gateway_key.bin&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Upload your &lt;code&gt;gateway_key.bin&lt;/code&gt; that you wish to restore onto file.io and do &lt;code&gt;curl -LJO [FILE.IO UPLOAD LINK]&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Reboot miner and you will see it restored and working :)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#attributions"&gt;
  &lt;/a&gt;
  Attributions
&lt;/h2&gt;

&lt;p&gt;Thank you to Nebra for developing and balenifying the Helium Hotspot, Helium developers community, Travis and Joseph from balena to work on the dbus + conman issues.&lt;/p&gt;

</description>
      <category>lora</category>
      <category>balena</category>
      <category>helium</category>
      <category>blockchain</category>
    </item>
    <item>
      <title>How to Build Messaging App like WhatsApp</title>
      <author>WebClues Infotech</author>
      <pubDate>Fri, 24 Sep 2021 09:09:50 +0000</pubDate>
      <link>https://dev.to/idrishwebclues/how-to-build-messaging-app-like-whatsapp-5g4i</link>
      <guid>https://dev.to/idrishwebclues/how-to-build-messaging-app-like-whatsapp-5g4i</guid>
      <description>&lt;p&gt;If there is one common thing you would find in a colleague, friend, family, and anyone you know or don’t know is the presence of the WhatsApp application in android as well as iOS smartphones. People use WhatsApp for Personal as well as Business chats.&lt;/p&gt;

&lt;p&gt;One survey revealed that approx 20% of daytime people spend on chatting apps like WhatsApp to talk about various kinds of different things. One survey revealed that more than 60% of people prefer chatting over a call due to reasons like it gives an individual time to think before replying, Maintains a record for future reference, is instantaneous, etc.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MQjb9xKs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/81d89equqwkfhz2bfiso.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MQjb9xKs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/81d89equqwkfhz2bfiso.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-app-like-whatsapp-is-in-demand"&gt;
  &lt;/a&gt;
  Why app like WhatsApp is in demand?
&lt;/h2&gt;

&lt;p&gt;As mentioned above messaging app like WhatsApp is common ground among most individuals these days and is not an easy feat to achieve. This feat was achieved because of the Simplicity, Speed, Addition of advanced features, and finding of all the people on the platform that are in your real-life contact easily.&lt;/p&gt;

&lt;p&gt;WhatsApp has about 2 Billion active monthly users worldwide which is about 30% of the total population of the world. Each day about 100 billion messages are being sent on WhatsApp.&lt;/p&gt;

&lt;p&gt;Since the beginning of the Covid-19 pandemic the use of chatting apps like WhatsApp has drastically increased due to various reasons like people staying at home more often, managing businesses online, people socializing online with video calls, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-leverage-the-demand-for-apps-like-whatsapp"&gt;
  &lt;/a&gt;
  How to leverage the demand for apps like WhatsApp
&lt;/h2&gt;

&lt;p&gt;There is a huge demand for alternatives to an app like WhatsApp after it was sold to Facebook for $19 billion fearing Facebook will use the personal data of users to earn money from advertisements. Even though WhatsApp launched end-to-end encryption between messages shared among 2 users under the parent company Facebook the recent WhatsApp policy changes determine otherwise.&lt;/p&gt;

&lt;p&gt;Facebook recently updated its user data policy giving access to Facebook the WhatsApp user's data for targeted advertising. Due to these policy changes, other messaging apps like Signal saw a huge surge in demand overnight and more than doubled their user base within the span of days.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r6FJsnDp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qp0rkr4is5qggp6oglya.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r6FJsnDp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qp0rkr4is5qggp6oglya.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even though there was a huge demand for alternatives for WhatsApp the use of WhatsApp almost stays the same at the time of writing this blog (15th September 2021). Most chatting apps are still not able to fulfill the base requirement of ease of use, simple and speed.&lt;/p&gt;

&lt;p&gt;So there is a huge demand for a chatting app like WhatsApp in the market and you can develop it by &lt;a href="https://www.webcluesinfotech.com/hire-mobile-app-developer/"&gt;hiring dedicated developers&lt;/a&gt; from companies like &lt;strong&gt;WebClues Infotech&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If you feel hiring a developer is not a good option then you can choose to hire a professional agency itself that will take care of your complete &lt;a href="https://www.webcluesinfotech.com/cost-to-develop-a-chat-app/"&gt;chat app development&lt;/a&gt; work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps-to-create-an-app-like-whatsapp"&gt;
  &lt;/a&gt;
  Steps to create an app like Whatsapp
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. Understand the Market&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Understanding the present market is the most important thing before developing any product. So be it a chat app or any other app development find out the expectations of the present market, present large competitors, expected future competitors, etc.&lt;/p&gt;

&lt;p&gt;Understanding the acceptance capability of the market after launch is important by analyzing past failed messaging apps that were launched in the competition with WhatsApp. A wise man once said you learn important things in business and life by learning from the failure than from the success of others.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Define the App Structure&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Each app requires a different app structure to experience it efficiently and effectively. So defining the app structure for messaging apps like WhatsApp is important, to begin with. A messaging app like WhatsApp should have a simple user flow like&lt;/p&gt;

&lt;p&gt;Mobile No. Registration &amp;gt; Main Screen &amp;gt; Different Features Screen&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uKCZKLuL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cddcox98136o3jr6ivlk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uKCZKLuL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cddcox98136o3jr6ivlk.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Decide on the Must-have Features&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;WhatsApp is in an advanced stage of messaging app. So directly building an app that is highly advanced is thought that needs detailed attention. If you have the resources to launch an app that is highly advanced at the beginning of the launch then definitely go for it. If not, then decide on the important must-have features first.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Must-have features in app like WhatsApp&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;• Ease in Registration&lt;/strong&gt;&lt;br&gt;
The ease a user expects while using the app for the first time drives further usage of the app. So the ease in registration should be the primary aspect that needs consideration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;• Profile Customization&lt;/strong&gt;&lt;br&gt;
The profile customization of individual users is important as it allows them to manage the information shared with another user including profile picture, name, bio, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;• Advanced Messaging&lt;/strong&gt;&lt;br&gt;
The advanced messaging feature includes end-to-end encryption, disappearing messages, sticker chats, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;• Media Files Charing&lt;/strong&gt;&lt;br&gt;
Most chatting apps have become more than just text chats as they allow sharing of media files like images, videos, contact, location, and documents.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;• Voice and Video Calls&lt;/strong&gt;&lt;br&gt;
In the past few years, voice and video chat have become so common that it is no longer an advanced feature of the messaging app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;• Push Notification&lt;/strong&gt;&lt;br&gt;
Different types of applications use push notifications for different purposes and chat apps like WhatsApp use it for notifying the user of the conversation going on be it individually or in groups.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Decide on the App Design in connection with the logo&lt;/strong&gt;&lt;br&gt;
The design of the app should be prepared considering the logo of the app if decided and if not develop both of it together. Consider WhatsApp, the logo and app design has a similar color combination of Green and white theme.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Hire Dedicated Developer or Professional Agency&lt;/strong&gt;&lt;br&gt;
Based on the level of app you want to develop you can choose the option of hiring dedicated developers on a part-time or full-time basis or hiring a professional agency to develop the chat app.&lt;br&gt;
You can get both the requirements fulfilled in one place i.e. &lt;strong&gt;&lt;a href="https://webcluesinfotech.com/get-quote/"&gt;WebClues Infotech&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The above features and steps only include the basic understanding of How to make a chat app so to get further more understanding as well as the technology stack that should be used to develop chat app like WhatsApp you can read &lt;a href="https://www.webcluesinfotech.com/cost-to-develop-an-app-like-airbnb/"&gt;How Much Does it Cost to Develop an App like Airbnb&lt;/a&gt;?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;One thing I understand about being a developer is if you have a good plan to market your chat app like WhatsApp then there is a huge demand for such an app because people are willing to shift if the app offers a better user experience than WhatsApp.&lt;/p&gt;

</description>
      <category>messageappdevelopment</category>
      <category>chatappdevelopment</category>
      <category>whatsappdevelopment</category>
      <category>messagingapp</category>
    </item>
    <item>
      <title>Schemaless SQL database for strong and lasting back end </title>
      <author>Nicolas Penot</author>
      <pubDate>Fri, 24 Sep 2021 08:53:28 +0000</pubDate>
      <link>https://dev.to/siodb/schemaless-sql-database-for-strong-and-lasting-back-end-5d26</link>
      <guid>https://dev.to/siodb/schemaless-sql-database-for-strong-and-lasting-back-end-5d26</guid>
      <description>&lt;h2&gt;
  &lt;a href="#benefits-of-the-solution"&gt;
  &lt;/a&gt;
  Benefits of the solution
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Schemaless structures maintain in the code&lt;/li&gt;
&lt;li&gt;Your documents stored as relational tables transparently&lt;/li&gt;
&lt;li&gt;Performance and efficiency of relational database&lt;/li&gt;
&lt;li&gt;Easier to maintain in the long term&lt;/li&gt;
&lt;li&gt;Consume much fewer resources (cheaper in the cloud)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Single document - code side&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;doc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dwain.jonhson@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="na"&gt;firstname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Dwain&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="na"&gt;lastname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jonhson&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dwainjonhson&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;users&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dwainjonhson&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="cm"&gt;/*
      {
         trid : 2,   // auto id generation
         email: "dwain.jonhson@gmail.com",
         firstname: "Dwain",
         lastname: "Jonhson",
         username: "dwainjonhson"
      }
  */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Single document - Database side&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;TRID&lt;/span&gt;   &lt;span class="n"&gt;EMAIL&lt;/span&gt;                       &lt;span class="n"&gt;FIRST_NAME&lt;/span&gt;     &lt;span class="n"&gt;LAST_NAME&lt;/span&gt;     &lt;span class="n"&gt;USERNAME&lt;/span&gt;
&lt;span class="c1"&gt;------ --------------------------- -------------- ------------- --------------&lt;/span&gt;
     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;dwain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jonhson&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;gmail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;     &lt;span class="n"&gt;Dwain&lt;/span&gt;          &lt;span class="n"&gt;Jonhson&lt;/span&gt;       &lt;span class="n"&gt;dwainjonhson&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Nested documents - code side&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;doc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dwain.jonhson@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="na"&gt;firstname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Dwain&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="na"&gt;lastname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jonhson&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dwainjonhson&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="na"&gt;phones&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;
           &lt;span class="na"&gt;alias&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;home&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="na"&gt;number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;+1-202-555-0143&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
         &lt;span class="p"&gt;},{&lt;/span&gt;
           &lt;span class="na"&gt;alias&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mobile&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="na"&gt;number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;+1-202-555-0156&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
         &lt;span class="p"&gt;}]&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;users&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dwainjonhson&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="cm"&gt;/*
      {
         trid : 2,   // auto id generation
         email: "dwain.jonhson@gmail.com",
         firstname: "Dwain",
         lastname: "Jonhson",
         username: "dwainjonhson"
         phones: [{
           trid : 1,   // auto id generation
           alias: "home",
           number: "+1-202-555-0143" 
         },{
           trid : 2,    // auto id generation
           alias: "mobile",
           number: "+1-202-555-0156" 
         }]
      }
  */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Nested documents - database side&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;TRID&lt;/span&gt;   &lt;span class="n"&gt;EMAIL&lt;/span&gt;                       &lt;span class="n"&gt;FIRST_NAME&lt;/span&gt;     &lt;span class="n"&gt;LAST_NAME&lt;/span&gt;     &lt;span class="n"&gt;USERNAME&lt;/span&gt;
&lt;span class="c1"&gt;------ --------------------------- -------------- ------------- --------------&lt;/span&gt;
     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;dwain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jonhson&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;gmail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;     &lt;span class="n"&gt;Dwain&lt;/span&gt;          &lt;span class="n"&gt;Jonhson&lt;/span&gt;       &lt;span class="n"&gt;dwainjonhson&lt;/span&gt;

&lt;span class="c1"&gt;-- Nested phone documents automatically organized in table with the proper relationship.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;users_phones&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;TRID&lt;/span&gt;   &lt;span class="n"&gt;USERD_TRID&lt;/span&gt;   &lt;span class="k"&gt;ALIAS&lt;/span&gt;             &lt;span class="n"&gt;NUMBER&lt;/span&gt;
&lt;span class="c1"&gt;----------- ----------- ----------------- ------------------------&lt;/span&gt;
     &lt;span class="mi"&gt;1&lt;/span&gt;           &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;home&lt;/span&gt;              &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;202&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;555&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;0143&lt;/span&gt;
     &lt;span class="mi"&gt;2&lt;/span&gt;           &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;mobile&lt;/span&gt;            &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;202&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;555&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;0156&lt;/span&gt;      
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Push your document in the database without any worries about restructuring them later. Made all the modifications that you didn't predict because wasn't part of the initial requirements. And do this afterward with the comfort of SQL. Finally, reduce the cloud cost due to the resource consumption involved with traditional NoSQL databases. &lt;/p&gt;

&lt;p&gt;This concept allows you to code fast with your data objects as documents (like Mongodb) while benefiting transparently from the relational databases (like PostgreSQL) .&lt;/p&gt;

&lt;p&gt;Any questions? Please comment below :)&lt;/p&gt;

</description>
      <category>database</category>
      <category>sql</category>
      <category>mongodb</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
