<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to deploy/update new Ghost version 4 to Heroku</title>
      <author>Lovekesh Kumar</author>
      <pubDate>Sun, 18 Apr 2021 18:02:52 +0000</pubDate>
      <link>https://dev.to/thelovekesh/how-to-deploy-update-new-ghost-version-4-to-heroku-dhg</link>
      <guid>https://dev.to/thelovekesh/how-to-deploy-update-new-ghost-version-4-to-heroku-dhg</guid>
      <description>&lt;p&gt;Ghost has currently rolled out its newer V4 publicly. The newer version of Ghost comes with fancy and new powerful features. After the launch of v4, many users who are using v3 on Heroku are in great trouble and don't know that how to trouble this problem and update to the latest version 4.&lt;/p&gt;

&lt;p&gt;Well, the problem has been solved with the brand new &lt;code&gt;ghost-v4-on-heroku&lt;/code&gt; repo. Anyone can deploy the latest ghost v4 on Heroku by simply clicking on a button.&lt;/p&gt;

&lt;p&gt;You can visit any of the links to deploy Ghost version 4 on Heroku or you can update your pre-deployed Ghost version 3 to version 4.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thelovekesh/ghost-v4-on-heroku"&gt;GitHub Repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://heroku.com/deploy?template=https://github.com/thelovekesh/ghost-v4-on-heroku"&gt;Deploy on Heroku&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#problems-or-need-help"&gt;
  &lt;/a&gt;
  Problems or need help?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ask.codebulbs.com/"&gt;Ask Question&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thelovekesh/ghost-v4-on-heroku/issues/new/"&gt;Open an Issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thelovekesh/ghost-v4-on-heroku/discussions"&gt;Use GitHub Discussions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#you-can-perform-some-more-actions-"&gt;
  &lt;/a&gt;
  You can perform some more actions ;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thelovekesh/ghost-v4-on-heroku/"&gt;Star the repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thelovekesh/ghost-v4-on-heroku/fork"&gt;Fork the repo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>heroku</category>
      <category>ghost</category>
      <category>ghostblog</category>
      <category>ghostv4</category>
    </item>
    <item>
      <title>TIL: IntersectionObserver Class in JavaScript</title>
      <author>Jim Reevior</author>
      <pubDate>Sun, 18 Apr 2021 17:24:42 +0000</pubDate>
      <link>https://dev.to/hirozed/til-intersectionobserver-class-in-javascript-53e2</link>
      <guid>https://dev.to/hirozed/til-intersectionobserver-class-in-javascript-53e2</guid>
      <description>&lt;p&gt;Okay, this was a few days ago, but ü§∑üèª‚Äç‚ôÇÔ∏è.&lt;/p&gt;

&lt;p&gt;Over the last week, I've been devouring &lt;a href="https://www.udemy.com/course/the-complete-javascript-course/"&gt;The Complete JavaScript Course&lt;/a&gt; as a way to 1. Get over my fear of JavaScript (that's a post for a later time) and 2. Ensure my current carrer as a WordPress developer doesn't stay stuck in the pre-Gutenberg world (that's also another tale for another time).  The course itself was fantastic, and has put me in a better place mentally and emotionally to take on JS/Gutenberg projects.&lt;/p&gt;

&lt;p&gt;There was one section that I wanted to write about today.  It's a feature that I‚Äôd never heard of before and would solve some past issues I've seen at work regarding components of a websites sliding into view and triggering an action.&lt;/p&gt;

&lt;p&gt;It‚Äôs the ‚ú® IntersectionObserver ‚ú® class.&lt;/p&gt;

&lt;p&gt;The JavaScript &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver"&gt;IntersectionObserver&lt;/a&gt; class (which is part of the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API"&gt;Intersection Observer API&lt;/a&gt;) can be used to indicate when a portion of a website scrolls a specified distance down the page or within reach of an element:&lt;/p&gt;

&lt;p&gt;From there, you can do wonderful things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set the navigation bar to stick to the top of the page when scrolling past a certain point.&lt;/li&gt;
&lt;li&gt;Lazy load images when or before the come into view.&lt;/li&gt;
&lt;li&gt;Ease sections into view on scroll.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://assets.hirozed.xyz/viewport.png"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7UA7P4tX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.hirozed.xyz/viewport.png" class="article-body-image-wrapper"&gt;&lt;img alt="Screen capture of browser to illustrate the nav reaching a portion of the page." src="https://res.cloudinary.com/practicaldev/image/fetch/s--7UA7P4tX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.hirozed.xyz/viewport.png" width="80%"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Below is an example of a sticky navigation from the class‚Äôs Github repository:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/jonasschmedtmann/complete-javascript-course/blob/master/13-Advanced-DOM-Bankist/final/script.js#L137-L156"&gt;The Complete JavaScript Course - section 13: Advanced DOM and Events&lt;/a&gt; credit &lt;a href="https://codingheroes.io/"&gt;Jonas Schmedtmann&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Sticky navigation: Intersection Observer API&lt;/span&gt;

&lt;span class="c1"&gt;// Get the first section of content based on the .header class&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;header&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.header&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Get the height of the navigation bar&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;navHeight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getBoundingClientRect&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Add or remove the sticky class to the nav bar,&lt;/span&gt;
&lt;span class="c1"&gt;// based on the entries retrieved from the IntersectionObserver class.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stickyNav&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// There is only one header, so we don't need to loop,&lt;/span&gt;
  &lt;span class="c1"&gt;// and can deconstruct the array.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// This is where the magic happens.&lt;/span&gt;
  &lt;span class="c1"&gt;// When the header is past the viewport, add the sticky class.&lt;/span&gt;
  &lt;span class="c1"&gt;// Else, when it comes back into view, remove the class.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isIntersecting&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sticky&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sticky&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Calling the IntersectionObserver class.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;headerObserver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;IntersectionObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stickyNav&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Declaring null uses the entire viewport.&lt;/span&gt;
  &lt;span class="na"&gt;threshold&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;//  The percentage of the header to come into view.&lt;/span&gt;
  &lt;span class="na"&gt;rootMargin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`-&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;navHeight&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// The offset based on the nav bar's height.&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Get some popcorn, the fun is about to start.&lt;/span&gt;
&lt;span class="nx"&gt;headerObserver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I also want to point out &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect"&gt;&lt;code&gt;getBoundingClientRect&lt;/code&gt;&lt;/a&gt;. This function provides the size of an element and where it's located in relation to the viewport.  In the example above, Jonas only uses the height value, but you can grab the size and the distance from the viewport as well.&lt;/p&gt;

&lt;p&gt;Learning about the Intersection Observer API was an unexpected and exciting piece of the huge amount of information I downloaded into my brain. I can see using the API as a much more reliable method for detecting when sections of the site come into and out of view, and replacing a placeholder with a higher quality image.  Causing text to zoom in when the container div scrolls into view.  The possibilities are endless!&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Week 2 of my 100daysofcode Challenge</title>
      <author>Jean Pierre Chreim</author>
      <pubDate>Sun, 18 Apr 2021 17:14:07 +0000</pubDate>
      <link>https://dev.to/jpchreim/week-2-of-my-100daysofcode-challenge-3jab</link>
      <guid>https://dev.to/jpchreim/week-2-of-my-100daysofcode-challenge-3jab</guid>
      <description>&lt;p&gt;It has been 2 weeks since I started the 100 days of code challenge in which I decided to study and code for at least an hour per day. Allow me to enroll  my achievements for the last week.&lt;/p&gt;

&lt;p&gt;I've completed the basic course in Responsive WEB Design and, surprisingly, I've found that I can acquire a certificate from FreeCodeCamp if I managed to submit 4 projects. From my point of view, this certificate is a great opportunity because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;FreeCodeCamp is a well known site, and a certificate from it will bring a  value to my profile.&lt;/li&gt;
&lt;li&gt;We should constantly practice what we learned, as learning without practicing isn't enough.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first project was a tribute page, I didn't encounter any difficulties in doing it, and that's because I've planned everything  before coding.&lt;/p&gt;

&lt;p&gt;In the second project, I had to create a form which  users should submit their information. Unluckily, I couldn't manage to finish it as I had to return my laptop to the dealer because of a camera issue and didn't take any backup of the projects that I'm working on. Thanks to that, I found out the importance of creating GitHub repositories for each project, and to keep it updated.&lt;/p&gt;

&lt;p&gt;This issue didn't stop me from continuing my 100daysofcode journey, so I took a break from these projects, until my laptop returns, and I started with JavaScript which I hardly know how to practice it.&lt;/p&gt;

&lt;p&gt;I've learned the fundamentals, and then jumped to Object manipulating. It wasn't something new as my first programming language was Java, an OOP, but I was surprised with how easy JS is with objects.&lt;/p&gt;

&lt;p&gt;I'm currently on challenge number 92 out of 111 on FreeCodeCamp, after that I'll start with ES6, something I heard quite a little about but never had the opportunity to know what is it and why/when we use it.&lt;br&gt;
How about you? Are you doing the 100daysofcode challenge? If so, where did you reach?&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>webdev</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>Weekly Digest 15/2021</title>
      <author>Marco Biedermann</author>
      <pubDate>Sun, 18 Apr 2021 17:09:48 +0000</pubDate>
      <link>https://dev.to/worldindev/weekly-digest-15-2021-50m</link>
      <guid>https://dev.to/worldindev/weekly-digest-15-2021-50m</guid>
      <description>&lt;p&gt;Welcome to my Weekly Digest #15 of this year.&lt;/p&gt;

&lt;p&gt;This weekly digest contains a lot of interesting and inspiring articles, videos, tweets, podcasts, and designs I consumed during this week.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Remember ‚Üí You can receive these articles directly in your inbox via our &lt;a href="https://worldindev.ck.page"&gt;newsletter&lt;/a&gt;&lt;/em&gt; ‚úâÔ∏è &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#interesting-articles-to-read"&gt;
  &lt;/a&gt;
  Interesting articles to read
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#comprehensive-guide-to-using-redux-in-react-native"&gt;
  &lt;/a&gt;
  Comprehensive guide to using Redux in React Native
&lt;/h3&gt;

&lt;p&gt;Using hooks with Redux makes it simple to manage state internally in React Native applications with many components.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.logrocket.com/comprehensive-guide-to-using-redux-in-react-native/"&gt;Comprehensive guide to using Redux in React Native - LogRocket Blog&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-test-400-react-components-without-breaking-a-sweat"&gt;
  &lt;/a&gt;
  How to test 400 React components without breaking a sweat
&lt;/h3&gt;

&lt;p&gt;Your organization‚Äôs development experience can be detrimental to your ability to ship code to your clients. There is a very delicate balance that needs to be found between testing your code and design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/kenshoos-engineering-blog/how-to-test-400-react-components-without-breaking-a-sweat-aa304a5cc72b"&gt;How to test 400 React components without breaking a sweat&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#seven-mistakes-to-avoid-in-your-technical-interviews"&gt;
  &lt;/a&gt;
  Seven Mistakes To Avoid In Your Technical Interviews
&lt;/h3&gt;

&lt;p&gt;It‚Äôs no secret that the technical interview process leaves something to be desired; it‚Äôs often riddled with anxiety and stress. In this article, we‚Äôll take a look at seven of the most common mistakes candidates make in their technical interviews and explore ways you can avoid them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.smashingmagazine.com/2021/04/mistakes-technical-interviews/"&gt;Seven Mistakes To Avoid In Your Technical Interviews - Smashing Magazine&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#overcoming-7-main-problems-of-learning-to-code-for-people-who-dont-have-a-developer-job"&gt;
  &lt;/a&gt;
  Overcoming 7 main problems of learning to code for people who don‚Äôt have a developer job
&lt;/h3&gt;

&lt;p&gt;If you don‚Äôt have a job as a developer, learning how to code becomes a much bigger challenge for a simple reason ‚Äî developers can learn to code on the job.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://zellwk.com/blog/7-challenges-of-learning-code/"&gt;Overcoming 7 main problems of learning to code for people who don't have a developer job&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#generating-sudokus-in-css"&gt;
  &lt;/a&gt;
  Generating Sudokus in CSS
&lt;/h3&gt;

&lt;p&gt;Challenging ourselves to solve logical problems with only CSS and HTML can force us to spend quality time with some of the newish, programing-like features of CSS, such as custom properties and logical functions. It still wasn‚Äôt clear how these could be used to build a Sudoku solver using only CSS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://css-tricks.com/generating-and-solving-sudokus-in-css/"&gt;Generating (and Solving!) Sudokus in CSS | CSS-Tricks&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#some-great-videos-i-watched-this-week"&gt;
  &lt;/a&gt;
  Some great videos I watched this week
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#mocking-apis-during-development-in-react"&gt;
  &lt;/a&gt;
  Mocking APIs During Development in React
&lt;/h3&gt;

&lt;p&gt;In this video, we'll use MSW (Mock Service Worker) to mock HTTP requests both on the browser but also on the server during SSR (Server Side Rendering) in Next.js&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/HkWciooQVvA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/leighchalliday"&gt;Leigh Halliday&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cracking-enigma-in-2021"&gt;
  &lt;/a&gt;
  Cracking Enigma in 2021
&lt;/h3&gt;

&lt;p&gt;Enigma is known as the WWII cipher, but how does it hold up in 2021? Dr. Mike Pound implemented it and shows how it stacks up against his laptop.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/RzWB5jL5RX0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/computer_phile"&gt;Computerphile&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#new-in-chrome-90"&gt;
  &lt;/a&gt;
  New in Chrome 90
&lt;/h3&gt;

&lt;p&gt;Chrome 90 is rolling out now! There‚Äôs a new value for the CSS overflow property. The Feature Policy API has been renamed to Permission Policy. And there‚Äôs a new way to implement and use Shadow DOM directly in HTML. Plus there‚Äôs plenty more.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/h3MONldIoNM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/ChromiumDev"&gt;Google Chrome Developers&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#particle-systems-with-image-textures"&gt;
  &lt;/a&gt;
  Particle Systems with Image Textures
&lt;/h3&gt;

&lt;p&gt;It's time to expand beyond grayscale particles! In this video, Shiffman demonstrates how to make a fire or smoke-like effect by using image textures and additive blending with a particle system.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/pUhv2CA0omA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/shiffman"&gt;Daniel Shiffman&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-storybook-stories-with-testing-library"&gt;
  &lt;/a&gt;
  Using Storybook stories with Testing Library
&lt;/h3&gt;

&lt;p&gt;Did you know that you can import your stories from Storybook and run them as tests? Jimmy recently learned about this cool idea and he's going to show some examples he put together that showcase some of the benefits of doing so. He'll be using React, Jest, and Testing Library for these examples, but many of the concepts will apply to other frameworks and setups as well.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/k6NG96awIJ0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/JimmyDCleveland"&gt;Jimmy Cleveland&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-git-bisect-to-quickly-find-the-origin-of-a-bug"&gt;
  &lt;/a&gt;
  Using git bisect to quickly find the origin of a bug
&lt;/h3&gt;

&lt;p&gt;git bisect is a really useful command for locating the origin commit of a bug or behavior.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/aulaZBVS16g"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/JimmyDCleveland"&gt;Jimmy Cleveland&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#useful-github-repositories"&gt;
  &lt;/a&gt;
  Useful GitHub repositories
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#reacthottoast"&gt;
  &lt;/a&gt;
  react-hot-toast
&lt;/h3&gt;

&lt;p&gt;Add beautiful notifications to your React app with react-hot-toast. Lightweight. Smoking hot by default.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/timolins"&gt;
        timolins
      &lt;/a&gt; / &lt;a href="https://github.com/timolins/react-hot-toast"&gt;
        react-hot-toast
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Smoking hot React Notifications üî• 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://react-hot-toast.com/" rel="nofollow"&gt;&lt;img alt="react-hot-toast - Try it out" src="https://res.cloudinary.com/practicaldev/image/fetch/s--0uqBiz-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/timolins/react-hot-toast/raw/main/assets/header.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d29f5a4b5aa933272131e96cb46c3951b3c6acf0bdc6774f5514ed841b84a09e/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f72656163742d686f742d746f617374"&gt;&lt;img src="https://camo.githubusercontent.com/d29f5a4b5aa933272131e96cb46c3951b3c6acf0bdc6774f5514ed841b84a09e/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f72656163742d686f742d746f617374" alt="NPM Version"&gt;&lt;/a&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/46192653af7d39ad7fd68841e70c458163c1e397c2689fc075ff765755d10fb0/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f72656163742d686f742d746f617374"&gt;&lt;img src="https://camo.githubusercontent.com/46192653af7d39ad7fd68841e70c458163c1e397c2689fc075ff765755d10fb0/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f72656163742d686f742d746f617374" alt="minzipped size"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://github.com/timolins/react-hot-toast/workflows/CI/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZdTOI5vk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/timolins/react-hot-toast/workflows/CI/badge.svg" alt="Build Status"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div&gt;&lt;strong&gt;Smoking hot  Notifications for React.&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt; Lightweight, customizable and beautiful by default.&lt;/div&gt;
&lt;br&gt;
&lt;div&gt;
&lt;a href="https://react-hot-toast.com/" rel="nofollow"&gt;Website&lt;/a&gt;
&lt;span&gt; ¬∑ &lt;/span&gt;
&lt;a href="https://react-hot-toast.com/docs" rel="nofollow"&gt;Documentation&lt;/a&gt;
&lt;span&gt; ¬∑ &lt;/span&gt;
&lt;a href="https://twitter.com/timolins" rel="nofollow"&gt;Twitter&lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div&gt;
  Cooked by &lt;a href="https://twitter.com/timolins" rel="nofollow"&gt;Timo Lins&lt;/a&gt; üë®‚Äçüç≥
&lt;/div&gt;
&lt;br&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
üî• &lt;strong&gt;Hot by default&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
üî© &lt;strong&gt;Easily Customizable&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
‚è≥ &lt;strong&gt;Promise API&lt;/strong&gt; - &lt;em&gt;Automatic loader from a promise&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
üïä &lt;strong&gt;Lightweight&lt;/strong&gt; - &lt;em&gt;less than 5kb including styles&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
‚úÖ &lt;strong&gt;Accessible&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
ü§Ø &lt;strong&gt;Headless Hooks&lt;/strong&gt; - &lt;em&gt;Create your own with &lt;a href="https://react-hot-toast.com/docs/use-toaster" rel="nofollow"&gt;&lt;code&gt;useToaster()&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;h4&gt;
With yarn&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;yarn add react-hot-toast&lt;/pre&gt;

&lt;/div&gt;
&lt;h4&gt;
With NPM&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;npm install react-hot-toast&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Getting Started&lt;/h2&gt;
&lt;p&gt;Add the Toaster to your app first. It will take care of rendering all notifications emitted. Now you can trigger &lt;code&gt;toast()&lt;/code&gt; from anywhere!&lt;/p&gt;
&lt;div class="highlight highlight-source-js js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s1"&gt;toast&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;Toaster&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react-hot-toast'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-en"&gt;notify&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;toast&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'Here is your toast.'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-v"&gt;App&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;
    &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;button&lt;/span&gt; &lt;span class="pl-c1"&gt;onClick&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-en"&gt;notify&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;Make me a toast&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;button&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;Toaster&lt;/span&gt; &lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/timolins/react-hot-toast"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#headless-ui"&gt;
  &lt;/a&gt;
  Headless UI
&lt;/h3&gt;

&lt;p&gt;A set of completely unstyled, fully accessible UI components, designed to integrate beautifully with Tailwind CSS.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/tailwindlabs"&gt;
        tailwindlabs
      &lt;/a&gt; / &lt;a href="https://github.com/tailwindlabs/headlessui"&gt;
        headlessui
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Completely unstyled, fully accessible UI components, designed to integrate beautifully with Tailwind CSS.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h3&gt;

  Headless UI
&lt;/h3&gt;
&lt;p&gt;
  A set of completely unstyled, fully accessible UI components, designed to integrate
  beautifully with Tailwind CSS.
&lt;/p&gt;




&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;For full documentation, visit &lt;a href="https://headlessui.dev" rel="nofollow"&gt;headlessui.dev&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Packages&lt;/h2&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;Downloads&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tailwindlabs/headlessui/tree/main/packages/%40headlessui-react"&gt;&lt;code&gt;@headlessui/react&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@headlessui/react" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a8b86fb1651520735aa06cac28ae83195fdf0a7a25db2b7a82207e4985776677/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40686561646c65737375692f72656163742e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@headlessui/react" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/efa8c6e3c68a7ae65b20f5322b4ed813b6cf28cb3a4a1de42652063646562220/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f40686561646c65737375692f72656163742e737667" alt="npm downloads"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tailwindlabs/headlessui/tree/main/packages/%40headlessui-vue"&gt;&lt;code&gt;@headlessui/vue&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@headlessui/vue" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6aabdab22506d6bbc799408b337c8695a258eb16acb4f26c55972685af953a71/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40686561646c65737375692f7675652e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@headlessui/vue" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8b0f4f42b50460671316cecd7c72765d76201bf2c333d20c3734170918acfc29/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f40686561646c65737375692f7675652e737667" alt="npm downloads"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h2&gt;
Community&lt;/h2&gt;
&lt;p&gt;For help, discussion about best practices, or any other conversation that would benefit from being searchable:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/tailwindlabs/headlessui/discussions"&gt;Discuss Headless UI on GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For casual chit-chat with others using the library:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://discord.gg/7NF8GNe" rel="nofollow"&gt;Join the Tailwind CSS Discord Server&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/tailwindlabs/headlessui"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#free-python-books"&gt;
  &lt;/a&gt;
  Free Python Books
&lt;/h3&gt;

&lt;p&gt;A list of Python books in English that are free to read online or download.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pamoroso"&gt;
        pamoroso
      &lt;/a&gt; / &lt;a href="https://github.com/pamoroso/free-python-books"&gt;
        free-python-books
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Python books free to read online or download
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/pamoroso/free-python-books/blob/master/free-python-books-logo.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ugl9dMKQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/pamoroso/free-python-books/raw/master/free-python-books-logo.jpg" alt="Free Python Books project logo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Free Python Books&lt;/h1&gt;
&lt;p&gt;A list of Python books in English that are free to read online or download.&lt;/p&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#how-the-list-got-started"&gt;How the list got started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#whats-in-the-list"&gt;What's in the list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#why-free-books"&gt;Why free books?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#acknowledgments"&gt;Acknowledgments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#how-to-contribute"&gt;How to contribute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#list-of-free-python-books"&gt;List of free Python books&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#introductory"&gt;Introductory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#intermediate"&gt;Intermediate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#advanced"&gt;Advanced&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#ai-and-machine-learning"&gt;AI and Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#computer-science"&gt;Computer Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#software-engineering-and-best-practices"&gt;Software Engineering and best practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#gui"&gt;GUI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#tools"&gt;Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#web-development"&gt;Web development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#data-science"&gt;Data science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#science"&gt;Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#jupyter-notebook"&gt;Jupiter Notebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#engineering"&gt;Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#cryptography"&gt;Cryptography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#games"&gt;Games&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#lists-of-free-python-books"&gt;Lists of free Python books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
How the list got started&lt;/h2&gt;
&lt;p&gt;I had been learning Python for a few weeks when, in January, 2019, I stumbled upon &lt;a href="https://www.reddit.com/r/learnpython/comments/amyryp/what_would_you_suggest_a_person_new_to/" rel="nofollow"&gt;a Reddit post in r/learnpython&lt;/a&gt; seeking suggestions on how to become a better programmer.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.reddit.com/r/learnpython/comments/amyryp/what_would_you_suggest_a_person_new_to/efps9cs/" rel="nofollow"&gt;One of the comments&lt;/a&gt; asked for good books or websites about algorithms and data structures. I had collected links to useful Python learning resources among which the free ebook &lt;a href="https://interactivepython.org/runestone/static/pythonds/index.html#problem-solving-with-algorithms-and-data-structures-using-python" rel="nofollow"&gt;Problem Solving with Algorithms and Data Structures using Python&lt;/a&gt;, so I‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pamoroso/free-python-books"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#dupeguru"&gt;
  &lt;/a&gt;
  dupeGuru
&lt;/h3&gt;

&lt;p&gt;dupeGuru is a cross-platform (Linux, OS X, Windows) GUI tool to find duplicate files in a system. It‚Äôs written mostly in Python 3 and has the peculiarity of using multiple GUI toolkits, all using the same core Python code. On OS X, the UI layer is written in Objective-C and uses Cocoa. On Linux &amp;amp; Windows, it‚Äôs written in Python and uses Qt5.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/arsenetar"&gt;
        arsenetar
      &lt;/a&gt; / &lt;a href="https://github.com/arsenetar/dupeguru"&gt;
        dupeguru
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Find duplicate files
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
dupeGuru&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://dupeguru.voltaicideas.net/" rel="nofollow"&gt;dupeGuru&lt;/a&gt; is a cross-platform (Linux, OS X, Windows) GUI tool to find duplicate files in
a system. It is written mostly in Python 3 and has the peculiarity of using
&lt;a href="http://www.hardcoded.net/articles/cross-toolkit-software" rel="nofollow"&gt;multiple GUI toolkits&lt;/a&gt;, all using the same core Python code. On OS X, the UI layer
is written in Objective-C and uses Cocoa. On Linux, it is written in Python and uses Qt5.&lt;/p&gt;
&lt;p&gt;The Cocoa UI of dupeGuru is hosted in a separate repo: &lt;a href="https://github.com/arsenetar/dupeguru-cocoa"&gt;https://github.com/arsenetar/dupeguru-cocoa&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Current status&lt;/h2&gt;
&lt;p&gt;Still looking for additional help especially with regards to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OSX maintenance: reproducing bugs &amp;amp; cocoa version, building package with Cocoa UI.&lt;/li&gt;
&lt;li&gt;Linux maintenance: reproducing bugs, maintaining PPA repository, Debian package.&lt;/li&gt;
&lt;li&gt;Translations: updating missing strings, transifex project at &lt;a href="https://www.transifex.com/voltaicideas/dupeguru-1" rel="nofollow"&gt;https://www.transifex.com/voltaicideas/dupeguru-1&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Documentation: keeping it up-to-date.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Contents of this folder&lt;/h2&gt;
&lt;p&gt;This folder contains the source for dupeGuru. Its documentation is in &lt;code&gt;help&lt;/code&gt;, but is also
&lt;a href="http://dupeguru.voltaicideas.net/help/en/" rel="nofollow"&gt;available online&lt;/a&gt; in its built form. Here's how this‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/arsenetar/dupeguru"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dribbble-shots"&gt;
  &lt;/a&gt;
  dribbble shots
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#vpn-mobile-app"&gt;
  &lt;/a&gt;
  VPN Mobile App
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FBVaj34N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/1343667/screenshots/15473026/media/6d558b7955d74bb27e12e1a31d97217d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FBVaj34N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/1343667/screenshots/15473026/media/6d558b7955d74bb27e12e1a31d97217d.png" alt="https://cdn.dribbble.com/users/1343667/screenshots/15473026/media/6d558b7955d74bb27e12e1a31d97217d.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15473026-VPN-Mobile-App"&gt;Sulton handaya&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fitness-amp-workout-app"&gt;
  &lt;/a&gt;
  Fitness &amp;amp; Workout App
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4mpraDnI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/653699/screenshots/15489025/media/d7af516032094ebd13ef3fb0f337b95a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4mpraDnI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/653699/screenshots/15489025/media/d7af516032094ebd13ef3fb0f337b95a.png" alt="https://cdn.dribbble.com/users/653699/screenshots/15489025/media/d7af516032094ebd13ef3fb0f337b95a.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15489025-Fitness-Workout-App"&gt;Gregory Riaguzov&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#typefacedirectory-launch"&gt;
  &lt;/a&gt;
  typeface.directory ‚Äî Launch
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LIfC9zXZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/9548/screenshots/15489793/media/5b367521489b0143a13f6b936af610a5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LIfC9zXZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/9548/screenshots/15489793/media/5b367521489b0143a13f6b936af610a5.png" alt="https://cdn.dribbble.com/users/9548/screenshots/15489793/media/5b367521489b0143a13f6b936af610a5.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15489793-typeface-directory-Launch"&gt;Jason Reynolds&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#job-finder"&gt;
  &lt;/a&gt;
  Job Finder
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lzsM2JD5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/4347686/screenshots/15487142/media/da7016fb4c7cb8b95b04fc53659a8654.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lzsM2JD5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/4347686/screenshots/15487142/media/da7016fb4c7cb8b95b04fc53659a8654.png" alt="https://cdn.dribbble.com/users/4347686/screenshots/15487142/media/da7016fb4c7cb8b95b04fc53659a8654.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15487142-Job-Finder"&gt;Vetrick Wilsen&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tweets"&gt;
  &lt;/a&gt;
  Tweets
&lt;/h2&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i8RS6OXv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EzCAtc2VoAAmOHd.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i-iGSZtE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/877525007185858562/7G9vGTca_normal.jpg" alt="Wes Bos profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Wes Bos
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/wesbos"&gt;@wesbos&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Wow I just learned in VS code you don't need to type var(-- to see your CSS variables, just -- and it will wrap it in var(). 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:24 PM - 15 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1382746620039557122" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1382746620039557122" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1382746620039557122" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lnOQin28--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1382337808363323397/pu/img/3gVLQ3Blv6BSIYPj.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--JkYP1OI0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1055142255722344448/xhqy_EUP_normal.jpg" alt="StackBlitz profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        StackBlitz
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @stackblitz
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      ü§Ø Browsers are awesome! (2):&lt;br&gt;&lt;br&gt;With `BarcodeDetector` you decode linear and two-dimensional (e.g. QR Code) codes directly in a browser! 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      14:20 PM - 14 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1382337979767742464" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1382337979767742464" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1382337979767742464" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tPRA-sp5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EywvXKHWQAo9aws.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--4wWk_AHl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/573206276819140608/gKAusMeX_normal.jpeg" alt="Sebastien Lorber üá´üá∑ profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Sebastien Lorber üá´üá∑
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/sebastienlorber"&gt;@sebastienlorber&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Can we make this happen? 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      08:55 AM - 12 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1381531326298398730" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1381531326298398730" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1381531326298398730" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--frHKhIA7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1382647198337409028/pu/img/lCuE9aYzBMRp2xtb.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--o4RXk78J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1226492305370161154/amstP2k2_normal.jpg" alt="Hakim El Hattab profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Hakim El Hattab
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @hakimel
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Adding auto-scrolled keyboard navigation was surprisingly painless with:&lt;br&gt;&lt;br&gt;scrollIntoView({behavior: 'smooth', block: 'nearest'});&lt;br&gt;+&lt;br&gt;scroll-padding: 2em;&lt;br&gt;&lt;br&gt;‚ù§Ô∏è 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      10:56 AM - 15 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1382649102496899073" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1382649102496899073" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1382649102496899073" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a-rLwYPg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1382312686676013063/pu/img/UhK34PLFqd_B3cnB.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--w-t4xsHf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/989873176002916353/C8r0x7TC_normal.jpg" alt="Andreas Weiland profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Andreas Weiland
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @aweiland
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      is this not the most beautiful thing ever! (by Calvin Smith) 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      12:40 PM - 14 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1382312922806894593" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1382312922806894593" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1382312922806894593" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;





&lt;h2&gt;
  &lt;a href="#picked-pens"&gt;
  &lt;/a&gt;
  Picked Pens
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#snappy-fruits"&gt;
  &lt;/a&gt;
  Snappy fruits
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/pavlovsk/embed/ExZExYW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/scriptype"&gt;Mustafa Enes&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-raging-sea"&gt;
  &lt;/a&gt;
  The Raging Sea
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/aderaaij/embed/XWpMONO?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/ardennl"&gt;Arden&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pure-css-range-rover-truck"&gt;
  &lt;/a&gt;
  Pure CSS Range Rover Truck
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/jh3y/embed/MWWowEb?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/jh3yy"&gt;Jhey&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#podcasts-worth-listening"&gt;
  &lt;/a&gt;
  Podcasts worth listening
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#the-css-podcast-nmatch-notation"&gt;
  &lt;/a&gt;
  The CSS Podcast: N-match Notation
&lt;/h3&gt;

&lt;p&gt;Welcome back to The CSS Podcast, where we cover all things CSS from accessibility to c-index. Today, Una and Adam will discuss a micro syntax for pseudo-class notification when working with nth-child.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/0QWnb3VbNTRPWiAEc3gUYA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hasty-treat-css-nesting-1"&gt;
  &lt;/a&gt;
  Hasty Treat - CSS Nesting 1
&lt;/h3&gt;

&lt;p&gt;In this Hasty Treat, Scott and Wes talk about CSS nesting ‚Äî what it is, when to use it, and why.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/1HPJKEbZVgQrRNMGaxvgmp"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dev-tools-tabs-explained-plus-tips-amp-tricks"&gt;
  &lt;/a&gt;
  Dev Tools Tabs Explained ‚Äî Plus Tips &amp;amp; Tricks
&lt;/h3&gt;

&lt;p&gt;In this episode of Syntax, Scott and Wes talk about dev tools tabs, what each tab does and how you can use them.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/5lIyuwrAUDWXppXhgrgpAC"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#event-tracking-amp-appcues"&gt;
  &lt;/a&gt;
  Event Tracking &amp;amp; Appcues
&lt;/h3&gt;

&lt;p&gt;Marie &amp;amp; Chris talk about the brand new event tracking feature in Appcues. We‚Äôre still pretty stoked we can even afford Appcues since it‚Äôs super pricey software for our company. The fact that they just released event tracking dashboards makes it feel much more affordable though because this unlocks super valuable information for us instantly.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/2Pvqi1aczkppaKVPhNoCeL"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;Thank you for reading, talk to you next week, and stay safe! üëã&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Subscribe to our &lt;a href="https://worldindev.ck.page"&gt;newsletter&lt;/a&gt; to receive our weekly recap directly on your email!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Or join us on &lt;a href="https://discord.gg/aWS2YKk6"&gt;Discord&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>css</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>LeetCode String to Integer (atoi)</title>
      <author>Alkesh Ghorpade</author>
      <pubDate>Sun, 18 Apr 2021 16:39:47 +0000</pubDate>
      <link>https://dev.to/_alkesh26/leetcode-string-to-integer-atoi-3ph0</link>
      <guid>https://dev.to/_alkesh26/leetcode-string-to-integer-atoi-3ph0</guid>
      <description>&lt;h3&gt;
  &lt;a href="#problem-statement"&gt;
  &lt;/a&gt;
  Problem statement
&lt;/h3&gt;

&lt;p&gt;Implement the myAtoi(string s) function, which converts a string to a 32-bit signed integer&lt;br&gt;
(similar to C/C++'s atoi function).&lt;/p&gt;

&lt;p&gt;Problem statement taken from: &lt;a href="https://leetcode.com/problems/string-to-integer-atoi"&gt;&lt;/a&gt;&lt;a href="https://leetcode.com/problems/string-to-integer-atoi"&gt;https://leetcode.com/problems/string-to-integer-atoi&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: s = "42"
Output: 42
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: s = "      -142"
Output: 142
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example 3:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: s = "871 and words"
Output: 871
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example 4:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: s = "Words and then number 987"
Output: 0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example 5:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: s = "-91283472332"
Output: -2147483648
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Constraints:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- 0 &amp;lt;= s.length &amp;lt;= 200
- s consists of English letters (lower-case and upper-case), digits (0-9), ' ', '+', '-', and '.'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#explanation"&gt;
  &lt;/a&gt;
  Explanation
&lt;/h3&gt;

&lt;p&gt;The problem is simple, but we need to think of few edge cases.&lt;br&gt;
Below are the observations from the above examples -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ignore all leading whitespace.&lt;/li&gt;
&lt;li&gt;Check if &lt;strong&gt;+&lt;/strong&gt; or &lt;strong&gt;-&lt;/strong&gt; symbol is used.&lt;/li&gt;
&lt;li&gt;Read the numbers till the next non-digit character or string end is reached.&lt;/li&gt;
&lt;li&gt;If the integer is out on 32-bit signed integer range &lt;strong&gt;[-2^31, 2^31 - 1]&lt;/strong&gt; we return either of
these limits based on integer sign.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#algorithm"&gt;
  &lt;/a&gt;
  Algorithm
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- Initialize intMax = 2^31 - 1 and intMin = -2^31
- Initialize length to string length
- Initialize positive = true and set i = 0

// Remove all leading whitespace.
- Loop while i &amp;lt; length &amp;amp;&amp;amp; s[i] == ' '
  - i++

// we use this for maintaining the sign of integer
- Set flag = 1

- if i &amp;lt; length &amp;amp;&amp;amp; s[i] == '+' || s[i] == '-'
  - Set flag to -1 if s[i] == [-]
  - i++

// if the string starts with a word
- if s[i] &amp;lt; '0' || s[i] &amp;gt; '9'
  - return 0

- Set num = 0

- Loop while i &amp;lt; length &amp;amp;&amp;amp; s[i] &amp;gt;= '0' &amp;amp;&amp;amp; s[i] &amp;lt;= '9'

  // first we verify for integer overflow and return INT_MAX or INT_MIN based on flag
  - if num &amp;gt; INT_MAX/10 || (num == INT_MAX/10 &amp;amp;&amp;amp; s[i] - '0' &amp;gt; 7))
    - return INT_MAX or INT_MIN if flag = 1 or flag = -1

  - set num = num*10 + s[i] - '0'

- return num * flag
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h5&gt;
  &lt;a href="#c-solution"&gt;
  &lt;/a&gt;
  C++ solution
&lt;/h5&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;myAtoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;isPositive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;'-'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="n"&gt;isPositive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;'+'&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="sc"&gt;'0'&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="sc"&gt;'0'&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="sc"&gt;'0'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="sc"&gt;'9'&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;INT_MAX&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;INT_MAX&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="sc"&gt;'0'&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;isPositive&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;INT_MAX&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;INT_MIN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="sc"&gt;'0'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;isPositive&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h5&gt;
  &lt;a href="#golang-solution"&gt;
  &lt;/a&gt;
  Golang solution
&lt;/h5&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;myAtoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;rune&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;intMax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;intMin&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;31&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;31&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;' '&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;'-'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;'-'&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="sc"&gt;'0'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="sc"&gt;'9'&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;digit&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="sc"&gt;'0'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intMax&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;digit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;intMin&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;digit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;intMax&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;intMin&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;digit&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h5&gt;
  &lt;a href="#javascript-solution"&gt;
  &lt;/a&gt;
  Javascript solution
&lt;/h5&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;myAtoi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;intMin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;intMax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;positive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;positive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;9&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;positive&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;intMin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;intMin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;intMax&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;intMax&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let's dry-run our algorithm to see how the solution works.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;s = "      -142"

Step 1: intMax = 2^31 - 1
        intMin = -2^31.

Step 2: length = s.length
        = 10

Step 3: length != 0
        10 != 0
        so we won't return 0

Step 4: i = 0

Step 5: while s[i] == ' '
          i++

        so i will be 6 after this loop

Step 6: flag = 1

Step 7: if i &amp;lt; length &amp;amp;&amp;amp; s[i] == '+' or s[i] == '-'
          s[i] == '-'
          flag = -1

Step 8: if s[i] &amp;lt; '0' || s[i] &amp;gt; '9'
          s[i] = '4'
          so we won't return 0

Step 9: num = 0

Step 10: while i &amp;lt; length &amp;amp;&amp;amp; s[i] &amp;gt;= '0' &amp;amp;&amp;amp; s[i] &amp;lt;= '9'
           i = 7
           s[i] = '1'
           num = num * 10 + s[i] - '0'
               = 0 * 10 + '1' - '0'
               = 1

           i = 8
           s[i] = '4'
           num = num * 10 + s[i] - '0'
               = 1 * 10 + '4' - '0'
               = 14

           i = 9
           s[i] = '2'
           num = num * 10 + s[i] - '0'
               = 14 * 10 + '2' - '0'
               = 142

num = num * flag
    = 142 * -1
    = -142

We return -142
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>cpp</category>
      <category>javascript</category>
      <category>go</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>Excelize 2.4.0 is Released ‚Äì New support 152 formula functions</title>
      <author>xuri</author>
      <pubDate>Sun, 18 Apr 2021 16:32:14 +0000</pubDate>
      <link>https://dev.to/xuri/excelize-2-4-0-is-released-new-support-152-formula-functions-23nc</link>
      <guid>https://dev.to/xuri/excelize-2-4-0-is-released-new-support-152-formula-functions-23nc</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f_rS1swf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://xuri.me/excelize/images/excelize.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f_rS1swf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://xuri.me/excelize/images/excelize.svg" width="440" alt="github.com/360EntSecGroup-Skylar/excelize"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Excelize is a library written in pure Go providing a set of functions that allow you to write to and read from XLSX / XLSM / XLTM files. Supports reading and writing spreadsheet documents generated by Microsoft Excel‚Ñ¢ 2007 and later. Supports complex components by high compatibility, and provided streaming API for generating or reading data from a worksheet with huge amounts of data.&lt;/p&gt;

&lt;p&gt;GitHub: &lt;a href="https://github.com/xuri/excelize"&gt;github.com/xuri/excelize&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are pleased to announce the release of version 2.4.0. Featured are a handful of new areas of functionality and numerous bug fixes.&lt;/p&gt;

&lt;p&gt;A summary of changes is available in the &lt;a href="https://github.com/360EntSecGroup-Skylar/excelize/releases/tag/v2.4.0"&gt;Release Notes&lt;/a&gt;. A full list of changes is available in the &lt;a href="https://github.com/360EntSecGroup-Skylar/excelize/compare/v2.3.2...v2.4.0"&gt;changelog&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#release-notes"&gt;
  &lt;/a&gt;
  Release Notes
&lt;/h2&gt;

&lt;p&gt;The most notable changes in this release are:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#compatibility"&gt;
  &lt;/a&gt;
  Compatibility
&lt;/h3&gt;

&lt;p&gt;Upgrade requirements Go language version is 1.15 or later.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#notable-features"&gt;
  &lt;/a&gt;
  Notable Features
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;New API &lt;a href="https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2@v2.4.0#File.GetCellRichText"&gt;&lt;code&gt;GetCellRichText&lt;/code&gt;&lt;/a&gt; support to get the rich text of cell by given worksheet&lt;/li&gt;
&lt;li&gt;Now support to set and get: print scaling, print black and white, and specified the first printed page number of the worksheet by &lt;a href="https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2@v2.4.0#File.SetPageLayout"&gt;&lt;code&gt;SetPageLayout&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2@v2.4.0#File.GetPageLayout"&gt;&lt;code&gt;GetPageLayout&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Now support to change and get tab color of the worksheet by &lt;a href="https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2@v2.4.0#File.SetSheetPrOptions"&gt;&lt;code&gt;SetSheetPrOptions&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2@v2.4.0#File.GetSheetPrOptions"&gt;&lt;code&gt;GetSheetPrOptions&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2@v2.4.0#File.SetCellHyperlink"&gt;&lt;code&gt;SetCellHyperlink&lt;/code&gt;&lt;/a&gt; now support to set hyperlink display &amp;amp; tooltips text, related issue #790&lt;/li&gt;
&lt;li&gt;Support &lt;code&gt;ShowError&lt;/code&gt; option when adding the pivot table&lt;/li&gt;
&lt;li&gt;Support setting formula for cell in streaming API, related issue #625&lt;/li&gt;
&lt;li&gt;The formula calculation engine now supports not equal operator&lt;/li&gt;
&lt;li&gt;The nested formula function now supports cell references as arguments&lt;/li&gt;
&lt;li&gt;Support to specifies that each data marker in the series has a different color&lt;/li&gt;
&lt;li&gt;New support 152 formula functions: ATAN, AVERAGE, AVERAGEA, BESSELI, BESSELJ, BIN2DEC, BIN2HEX, BIN2OCT, BITAND, BITLSHIFT, BITOR, BITRSHIFT, BITXOR, CHAR, CHOOSE, CLEAN, CODE, COLUMN, COLUMNS, COMPLEX, CONCAT, CONCATENATE, COUNT, COUNTBLANK, CUMIPMT, CUMPRINC, DATE, DATEDIF, DB, DDB, DEC2BIN, DEC2HEX, DEC2OCT, DOLLARDE, DOLLARFR, EFFECT, ENCODEURL, EXACT, FALSE, FIND, FINDB, FISHER, FISHERINV, FIXED, FV, FVSCHEDULE, GAMMA, GAMMALN, HARMEAN, HEX2BIN, HEX2DEC, HEX2OCT, HLOOKUP, IF, IFERROR, IMABS, IMAGINARY, IMARGUMENT, IMCONJUGATE, IMCOS, IMCOSH, IMCOT, IMCSC, IMCSCH, IMDIV, IMEXP, IMLN, IMLOG10, IMLOG2, IMPOWER, IMPRODUCT, IMREAL, IMSEC, IMSECH, IMSIN, IMSINH, IMSQRT, IMSUB, IMSUM, IMTAN, IPMT, IRR, ISTEXT, ISPMT, KURT, LARGE, LEFT, LEFTB, LEN, LENB, LOOKUP, LOWER, MAX, MID, MIDB, MIN, MINA, MIRR, N, NOMINAL, NORM.DIST, NORMDIST, NORM.INV, NORMINV, NORM.S.DIST, NORMSDIST, NORM.S.INV, NORMSINV, NOT, NOW, NPER, NPV, OCT2BIN, OCT2DEC, OCT2HEX, PDURATION, PERCENTILE.INC, PERCENTILE, PERMUT, PERMUTATIONA, PMT, POISSON.DIST, POISSON, PPMT, PROPER, QUARTILE, QUARTILE.INC, REPLACE, REPLACEB, REPT, RIGHT, RIGHTB, ROMAN, ROW, ROWS, SHEET, SKEW, SMALL, STDEV, STDEV.S, STDEVA, SUBSTITUTE, T, TODAY, TRIM, TRUE, UNICHAR, UNICODE, UPPER, VAR.P, VARP, VLOOKUP&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#improve-the-compatibility"&gt;
  &lt;/a&gt;
  Improve the Compatibility
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Now set the empty string for the cell when &lt;a href="https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2@v2.4.0#File.SetCellValue"&gt;&lt;code&gt;SetCellValue&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;nil&lt;/code&gt;, resolve issue #756&lt;/li&gt;
&lt;li&gt;Remove useless internal XML omitempty tag on style pattern fill color&lt;/li&gt;
&lt;li&gt;Fix compatibility issue of Google Sheets offline browser extension #769&lt;/li&gt;
&lt;li&gt;Use absolute reference in the auto filters defined name to make it compatible with OpenOffice, resolve issue #776&lt;/li&gt;
&lt;li&gt;Handle end element event in the worksheet row/column iterator XML SAX parser, faster row/column iterate and fix inconsistent read rows count of the file in some case&lt;/li&gt;
&lt;li&gt;Improves compatibility for worksheet relative XML path&lt;/li&gt;
&lt;li&gt;Avoid duplicate rich text string items #787&lt;/li&gt;
&lt;li&gt;Improves compatibility for absolute XML path, Windows-style directory separator, and inline namespace&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#bug-fixes"&gt;
  &lt;/a&gt;
  Bug Fixes
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Fix round precision issue #764&lt;/li&gt;
&lt;li&gt;Add missing fields and change the order of the fields of workbook fields, prevent generate the corrupted file in some case, resolve issue #766&lt;/li&gt;
&lt;li&gt;Fix hyperbolic cotangent calculation incorrect&lt;/li&gt;
&lt;li&gt;Correct adjust calculation chain in duplicate rows, resolve issue #774&lt;/li&gt;
&lt;li&gt;Correct adjust defined name in the workbook when deleting a worksheet, resolve issue #775&lt;/li&gt;
&lt;li&gt;Fix cyclomatic complexity issue of internal function &lt;code&gt;newFills&lt;/code&gt; and &lt;code&gt;parseToken&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Fix custom row height check issue&lt;/li&gt;
&lt;li&gt;Fix unmerge all cells cause corrupted file, resolve issue #782&lt;/li&gt;
&lt;li&gt;Fix part of auto filter rules missing after saved&lt;/li&gt;
&lt;li&gt;Fix &lt;a href="https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2@v2.4.0#File.UpdateLinkedValue"&gt;&lt;code&gt;UpdateLinkedValue&lt;/code&gt;&lt;/a&gt; which returns an error when has chart sheet or dialog sheet&lt;/li&gt;
&lt;li&gt;Fix incorrect default column from &lt;a href="https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2@v2.4.0#File.GetColWidth"&gt;&lt;code&gt;GetColWidth&lt;/code&gt;&lt;/a&gt; in some case&lt;/li&gt;
&lt;li&gt;Fix can't add timelines and slicers for a pivot table in generated spreadsheet, resolve issue #804&lt;/li&gt;
&lt;li&gt;Fix incorrect SetDefinedName's &lt;code&gt;localSheetId&lt;/code&gt; attribute to use &lt;code&gt;sheetIndex&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Fix missing cell locked or hidden protection in some case, resolve issue #809&lt;/li&gt;
&lt;li&gt;Fix streaming data writer result missing after call normal API, resolve issue #813&lt;/li&gt;
&lt;li&gt;Fix the negative values series missing chart color issue&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#performance"&gt;
  &lt;/a&gt;
  Performance
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Faster numeric precision process&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#miscellaneous"&gt;
  &lt;/a&gt;
  Miscellaneous
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The dependencies module has been updated&lt;/li&gt;
&lt;li&gt;Unit tests and godoc updated&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://xuri.me/excelize"&gt;Documentation website&lt;/a&gt; with multilingual: Arabic, German, Spanish, English, French, Russian, Chinese, Japanese, and Korean, which has been updated&lt;/li&gt;
&lt;li&gt;Welcome join &lt;a href="https://join.slack.com/t/xuri/shared_invite/zt-eriqdkeo-wV04zcCdBiiZveFgY86Wzw"&gt;the Slack channel&lt;/a&gt; or &lt;a href="https://t.me/excelize"&gt;Telegram Group&lt;/a&gt; to meet other members of our community&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>go</category>
      <category>excel</category>
      <category>xlsx</category>
    </item>
    <item>
      <title>My 100DaysofCode</title>
      <author>DHANUSH N</author>
      <pubDate>Sun, 18 Apr 2021 16:29:07 +0000</pubDate>
      <link>https://dev.to/dhanushxeno/my-100daysofcode-journey-56je</link>
      <guid>https://dev.to/dhanushxeno/my-100daysofcode-journey-56je</guid>
      <description>&lt;p&gt;Self teaching and progressing can be a difficult task, but thanks to internet for making it easy.&lt;/p&gt;

&lt;p&gt;So people who dont know what is 100DaysOfCode&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Coding a minimum of an hour each day for 100 days.&lt;/li&gt;
&lt;li&gt;Tweeting your progress with the #100DaysOfCode hashtag&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So I started this 100DaysOfCode when I was an employee and not as a student. When I was a student I was not aware that this kind of challenge exists even though I would code a lot during college days. I joined twitter on April 2014 but didn't but was not a regular user. During 2020, COVID crisis, at quarantine when I logged into twitter I found this hashtag #100DaysOfCode randomly on a post, then I checked with few people whom I know and came to know about this challenge.&lt;/p&gt;

&lt;p&gt;So I started and tried myself to be consistent and did various tech oriented codes of my interest. I see few projects get inspired learn them and start creating projects. This challenge made me to learn more technologies which I am usually passionate about. &lt;/p&gt;

&lt;p&gt;Below is the list of codes over my #100DaysOfCode journey along with their twitter links. If you have any doubts on any of the below projects feel free to reach out to me. Also the below may help anyone who thinks what to do in the 100Days of Codes as it covers various technologies&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#100daysofcode-journey"&gt;
  &lt;/a&gt;
  100DaysOfCode Journey
&lt;/h1&gt;

&lt;p&gt;Day 1 - Created a Deno App&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1300131201538166784?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1300131201538166784?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 2 - Was learning to make a 3D Rubixs Cube&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1300504677407010816?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1300504677407010816?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 3 - Created a 3D Rubixs Cube in Codepen&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1300868535254528000?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1300868535254528000?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 4 - Solved hackerrank puzzles &amp;amp; few freecodecamp tutorials&lt;br&gt;
 &lt;a href="https://twitter.com/Dhanush_Xen/status/1301233408983531526?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1301233408983531526?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 5 - Created a chessboard using HTML &amp;amp; JS only&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1301575456181813248?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1301575456181813248?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 6 - Created a static chess board with pieces &amp;amp; hosted using http server in local&lt;br&gt;&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1301953698382270464?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1301953698382270464?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 7 - Tried an animation in codepen&lt;br&gt;
 &lt;a href="https://twitter.com/Dhanush_Xen/status/1302190818455769090?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1302190818455769090?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 8 - Learnt some react &amp;amp; created my first penguin&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1302625180397654019?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1302625180397654019?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 9 - Created a digital dice using python&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1302990119155105792?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1302990119155105792?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 10 - Machine Precision in Computer Science &lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1303381540106199041?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1303381540106199041?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 11 - RPA &amp;amp; Converted HTML to XML using C#&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1303768054493372416?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1303768054493372416?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 12 - Trying out few js codes&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1304126435464863744?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1304126435464863744?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 13 - Animation in codepen&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1304426888815734784?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1304426888815734784?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 14 - Chrome extension to share quote or image&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1304861281489313792?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1304861281489313792?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 15 - Chrome extension to download bulk images&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1305216127061032960?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1305216127061032960?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 16 - Deployed app in vercel &amp;amp; updated github readme&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1305535526959607808?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1305535526959607808?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 17 - Earned problem solving basic skill in Hackerrank&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1305898978744000513?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1305898978744000513?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 18 -  Started learning Phaser.js&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1306269500929531904?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1306269500929531904?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 19 -  Color a winged horse using Phaser.js&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1306626168020320256?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1306626168020320256?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 20 - Using github CLI &amp;amp;  some python code&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1306977617740926976?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1306977617740926976?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 21 - Face detection image &amp;amp; video using python&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1307275760952995842?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1307275760952995842?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 22 - Solved hackerrank problems (4th star in 10DaysOfJS) &amp;amp; game development&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1307719185099665408?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1307719185099665408?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 23 - TDD using Jest in Node JS &amp;amp; spent time reading ML Models&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1308090768368652288?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1308090768368652288?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 24 - Completed some more hackerrank problems(10DaysOfJS) &amp;amp; started with web design&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1308446632686485504?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1308446632686485504?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 25 - A simple android app using java to open a blog site via an app&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1308785292145426436?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1308785292145426436?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 26 - Created a game using phaser js&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1309172861379125248?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1309172861379125248?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 27 - Created a twitter bot using python&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1309530116997836801?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1309530116997836801?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 28 - Spent some time in web designing&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1309856830097555458?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1309856830097555458?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 29 - Text to speech and also convert into mp3 audio file using python&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1310254229064278016?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1310254229064278016?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 30 - Coded bouncing disco balls in codepen using html &amp;amp; js&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1310650204727599104?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1310650204727599104?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 31 - Created a blackboard using html, css &amp;amp; js&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1310963860816396294?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1310963860816396294?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 32 - Made the blackboard suitable for mobile devices too&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1311327949916839936?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1311327949916839936?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 33 - A smiling animation in codepen&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1311712673638227970?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1311712673638227970?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 34 - Contributed to hacktoberfest&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1312035011453878274?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1312035011453878274?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 35 - ML Math &amp;amp; Flying spaceship using codepen&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1312420213883772930?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1312420213883772930?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 36 - Spent some time in web designing&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1312763979190554624?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1312763979190554624?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 37 - Worked in Docker&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1313165051486896128?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1313165051486896128?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 38 &amp;amp; 39 - Learning to configure YAML files&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1313528170117644289?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1313528170117644289?s=20&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1313890727756099584?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1313890727756099584?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 40 - Configuring Log management tools ELK Stack&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1314254242450862081?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1314254242450862081?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 41 - Explored Node Js Streams&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1314593489946959872?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1314593489946959872?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 42 - Created a desktop app using python&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1314998873924857856?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1314998873924857856?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 43 - Extra features for desktop application using python&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1315311047918534658?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1315311047918534658?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 44 - Explored winston npm for Node Js&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1315701437830111232?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1315701437830111232?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 45 - Explored some more log npm packages  &amp;amp; worked on log management tools &lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1316064954710073344?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1316064954710073344?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 46 - Structured &amp;amp; unstructured logs&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1316425788783173632?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1316425788783173632?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 47 - More exploration and implemented logging&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1316742465525698561?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1316742465525698561?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 48 - Worked on Node JS File Streams&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1317147874749157377?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1317147874749157377?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 49 - Web designing for a site &amp;amp; getting ip using node js&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1317488651337486338?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1317488651337486338?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 50 &amp;amp; 51 - Exploring about logging implementation in real time systems&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1318246939318644738?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1318246939318644738?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 52 - Fancy text using html &amp;amp; css using codepen&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1318579044472872960?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1318579044472872960?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 53 - CSS Blend mode for images&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1318963227846348800?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1318963227846348800?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 54 - Kibana Visualization for logging&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1319305233298698241?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1319305233298698241?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 55 -Music player using codepen&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1319665113222307840?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1319665113222307840?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 56 - Explored some ML Libraries&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1320052868129255424?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1320052868129255424?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 57 - ML &amp;amp; HTML Tags&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1320400651294142464?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1320400651294142464?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 58 - Flip card using html &amp;amp; css in codepen&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1320740544499175429?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1320740544499175429?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 59 - Color ranger using codepen&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1321112952078954498?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1321112952078954498?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 60 - MongoDb queries in Node Js&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1321499674612699136?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1321499674612699136?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 61 - NLP in ML&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1321830128612110336?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1321830128612110336?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 62 - Date functions in js&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1322234911537782784?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1322234911537782784?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 63 - Plot google map using python&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1322582917013336064?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1322582917013336064?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 64 &amp;amp; 65 - Css Flexboxes&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1323257560862920705?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1323257560862920705?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 66 &amp;amp; 67 - Data Science Project for birth rate analysis&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1324007881813884928?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1324007881813884928?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 68 - Revised React Concepts via freeCodeCamp&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1324402616277688320?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1324402616277688320?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 69 to 74 - Working on React in creating interactive UI&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1326530382364176384?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1326530382364176384?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 75 - Completed Managing packages with Node Js via freeCodeCamp&lt;br&gt;
 &lt;a href="https://twitter.com/Dhanush_Xen/status/1326930754534735872?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1326930754534735872?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 76 to 80 - Worked on various web concepts&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1328406556484935680?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1328406556484935680?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 81 to 84 - Created an AIML application &amp;amp; worked on some css &amp;amp; node js concepts&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1329815167698235395?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1329815167698235395?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 85 to 86 - Happy birthday music karaoke in codepen&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1330515927532666880?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1330515927532666880?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 87 to 88 - Explored end to end encryption&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1331249427928018948?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1331249427928018948?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 89 &amp;amp; 90 - Transactions in Node js &amp;amp; Started with Adobe photoshop&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1332014551806529538?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1332014551806529538?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 91&amp;amp; 92 - Using Adobe photoshop &amp;amp; XD created my first poster&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1332713038395314176?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1332713038395314176?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 93 &amp;amp; 94 - More exploration in Adobe photoshop &amp;amp; XD and solved hackerrank problems&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1333466635823312896?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1333466635823312896?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 95 &amp;amp; 96 - React concepts&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1334152549255954434?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1334152549255954434?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 97 to 99 - Solved few coding problems &amp;amp; some designing using Adobe XD&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1335226724670324738?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1335226724670324738?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 100 - Solved some more complex problems &amp;amp; decided to start learning AWS&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1335603956928548864?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1335603956928548864?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's stay in touch:&lt;br&gt;
Twitter: &lt;a href="https://twitter.com/Dhanush_Xen"&gt;https://twitter.com/Dhanush_Xen&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>Programming in Clojure (Part 1 Basics)</title>
      <author>Mark Mahoney</author>
      <pubDate>Sun, 18 Apr 2021 16:20:22 +0000</pubDate>
      <link>https://dev.to/markm208/programming-in-clojure-part-1-basics-51gl</link>
      <guid>https://dev.to/markm208/programming-in-clojure-part-1-basics-51gl</guid>
      <description>&lt;p&gt;This 7 part series of posts will cover programming in Clojure. Clojure is an awesome functional programming language that runs on Java's Virtual Machine (JVM). It is sometimes called a &lt;em&gt;LISP&lt;/em&gt; or LISt Processer. Through a series of code 'playbacks' I will guide you through the basics of the language. &lt;/p&gt;

&lt;p&gt;I am expecting that the reader already has some programming experience in another language but Clojure is so different than most imperative programming languages that it doesn't really matter where you are coming from as long as you know the basics (variables, if statements, loops, and functions). If you are looking for a complete beginners guide to programming you can find some of my other &lt;a href="https://markm208.github.io/"&gt;programming content here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I will cover basic flow, data structures, immutability, functions, closures, tail recursion, lazy sequences, macros, and concurrency. Clojure is a functional programming language, the function is king and data is immutable. This may be a different paradigm than you are used to but there are some compelling reasons to use it. Clojure's immutability is particularly good for programs that want to take advantage of modern hardware on laptops and mobile phones (multiple processors sharing a single memory). &lt;/p&gt;

&lt;p&gt;Simply watching an experienced artist paint is not enough to say that you have learned how to become a painter. Watching an experienced artist is an important &lt;em&gt;part&lt;/em&gt; of the learning process but you can only call yourself a painter after struggling to make your own paintings first. There are lot of similarities between learning to paint and learning to program. The only way to truly learn to program is to practice! Clojure runs on the JVM and it can be difficult to set up a programming environment. So, I recommend using a web-based IDE. There is no easier way to start programming in Clojure than using &lt;a href="https://replit.com/"&gt;replit&lt;/a&gt;. I recommend using it to write your first programs in Clojure.&lt;/p&gt;

&lt;p&gt;So, let's get started. You will be asked to follow along with the programs below. Just click on the links and a code playback will load (you might want to open each one in a new tab). Then click on the comments on the left hand side of the screen or hit the play button to drive the development of the code. You can download the code at any point or copy/paste it into a repl on replit. There are some controls in the top right hand side of the screen to make the text bigger or to switch to blog mode (which is good for small screens).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#introduction-to-clojure"&gt;
  &lt;/a&gt;
  Introduction to Clojure
&lt;/h3&gt;

&lt;p&gt;These first few programs show how to print to the screen, perform basic arithmetic, and store some data.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cljbook/chapter1/01/playback.html"&gt;Hello World!!!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cljbook/chapter1/02/playback.html"&gt;Readers/evaluators and simple arithmetic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cljbook/chapter1/03/playback.html"&gt;Dog age converter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This program shows how to use the Java capability that it built-in to the JVM.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cljbook/chapter1/04/playback.html"&gt;Java interoperability&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These programs show some basic data structures in Clojure and how they are immutable.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cljbook/chapter1/05/playback.html"&gt;Clojure data structures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/cljbook/chapter1/06/playback.html"&gt;Efficient immutability (more with data structures)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#call-to-action"&gt;
  &lt;/a&gt;
  Call to Action
&lt;/h3&gt;

&lt;p&gt;Problem 1&lt;br&gt;
Write a Clojure program that prompts the user for the length and width of a wooden board in inches. Then display the number of whole square feet are in the board. For example, if the height is 27 inches and the width is 34 inches, then the number of square feet is 6.375.&lt;/p&gt;

&lt;p&gt;Problem 2&lt;br&gt;
Write a program that creates an empty list and use &lt;code&gt;def&lt;/code&gt; to store a reference to it called &lt;code&gt;empty-list&lt;/code&gt;. Use &lt;code&gt;cons&lt;/code&gt; to add your name to it and store it in a new list called &lt;code&gt;my-name&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Use &lt;code&gt;conj&lt;/code&gt; to add all of your siblings to a list called &lt;code&gt;me-and-my-siblings&lt;/code&gt; (if you don't have any you can use some of mine or make some up).&lt;/p&gt;

&lt;p&gt;Print all the names in &lt;code&gt;me-and-my-siblings&lt;/code&gt;. Print the third name on the list &lt;code&gt;me-and-my-siblings&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Create a map with all of your siblings' names as keys and their ages as values. Use &lt;code&gt;assoc&lt;/code&gt; to add my name/age to the map (my age is 48). Use the map to print your age.&lt;/p&gt;

&lt;p&gt;Problem 3&lt;br&gt;
Create a map with the number of days in each of the months called &lt;code&gt;days-in-months&lt;/code&gt;. Use the integers 1-12 as the keys and the number of days in the months as the values. Create a second map from the first that has 29 days for February. Call this one &lt;code&gt;days-in-months-leapyear&lt;/code&gt;. Make sure to do this efficiently (use &lt;code&gt;assoc&lt;/code&gt; to create a new value for February). Create another map with month names as the strings.&lt;/p&gt;

&lt;p&gt;Prompt the user for a month number, day number, and year and create two new variables, &lt;code&gt;short-string&lt;/code&gt; and &lt;code&gt;long-string&lt;/code&gt;. Short string will be in this format month/day/year and long string will be in this format "MonthName dayNumber, Year". Print out both of the strings and the number of days in the month you were born. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#comments-and-feedback"&gt;
  &lt;/a&gt;
  Comments and Feedback
&lt;/h3&gt;

&lt;p&gt;You can find all of these code playbacks in my free 'book', &lt;a href="https://markm208.github.io/cljbook/"&gt;An Animated Introduction to Clojure&lt;/a&gt;. I am always looking for feedback so please feel free to comment here or to send me a message. You can follow me on twitter &lt;a href="https://twitter.com/markm208"&gt;@markm208&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>clojure</category>
    </item>
    <item>
      <title>AdaptiveAvgPool2d in PyTorch</title>
      <author>Ambarish Ganguly</author>
      <pubDate>Sun, 18 Apr 2021 16:15:04 +0000</pubDate>
      <link>https://dev.to/ambarishg/adaptiveavgpool2d-in-pytorch-1dke</link>
      <guid>https://dev.to/ambarishg/adaptiveavgpool2d-in-pytorch-1dke</guid>
      <description>&lt;p&gt;I had trouble understanding the &lt;code&gt;AdaptiveAvgPool2d&lt;/code&gt; function in PyTorch.  The following examples helped me to teach myself better. Hopefully, somebody may benefit from this.    &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#example-1"&gt;
  &lt;/a&gt;
  Example 1
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;torch&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;torch.nn&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;

&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AdaptiveAvgPool2d&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;4.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="nb"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output will be equal to torch.mean(input)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#example-2-with-a-3-x-3-x-3-tensor"&gt;
  &lt;/a&gt;
  Example 2 with a 3 x 3 x 3  tensor
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;5.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;5.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mf"&gt;5.&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;7.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;7.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;7.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a 3 x 3  x 3 array&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="nb"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AdaptiveAvgPool2d&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BPMAjts1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgj93iaxv1pj74s030uq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BPMAjts1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgj93iaxv1pj74s030uq.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's investigate why the 1st element is 2.5   &lt;/p&gt;

&lt;p&gt;We take a 2 x 2 tensor out of the 3 x 3 x 3 tensor and take the mean and see that it is 2.5&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;x2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gxE3X7d_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t8rxef2kvh1vw7cie79e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gxE3X7d_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t8rxef2kvh1vw7cie79e.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example-3"&gt;
  &lt;/a&gt;
  Example 3
&lt;/h2&gt;

&lt;p&gt;We see that the 6th element is 4.5. How is this calculated?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5wfLhFD7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ih0u38c6uuikwqlaojvd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5wfLhFD7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ih0u38c6uuikwqlaojvd.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We take the mean of the following section&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K7if4W58--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kg7za5rzu6m32ptcguql.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K7if4W58--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kg7za5rzu6m32ptcguql.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;x3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt; &lt;span class="mf"&gt;4.0&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;5.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;5.&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#example-4-with-a-4-x-3-x-3-tensor"&gt;
  &lt;/a&gt;
  Example 4   with a 4 x 3 x 3 tensor
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;5.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;5.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mf"&gt;5.&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;7.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;7.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;7.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;8.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;8.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;8.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="nb"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a 4 x 3 x 3 tensor &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rMyZ4UOC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hrpawg4zi1yw56np15bc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rMyZ4UOC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hrpawg4zi1yw56np15bc.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AdaptiveAvgPool2d&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eQ0MPbr_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1qn2m7q67e96hy39937.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eQ0MPbr_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1qn2m7q67e96hy39937.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let us explore why the first element is &lt;strong&gt;2.3333&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;x4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                 &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G-QXASyJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4lck8u8gkwepfyur9el3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G-QXASyJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4lck8u8gkwepfyur9el3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>deeplearning</category>
      <category>pytorch</category>
    </item>
    <item>
      <title>Boolean Values</title>
      <author>Randy Rivera</author>
      <pubDate>Sun, 18 Apr 2021 16:11:21 +0000</pubDate>
      <link>https://dev.to/rthefounding/boolean-values-2a13</link>
      <guid>https://dev.to/rthefounding/boolean-values-2a13</guid>
      <description>&lt;h4&gt;
  &lt;a href="#understanding-boolean-values"&gt;
  &lt;/a&gt;
  Understanding Boolean Values
&lt;/h4&gt;

&lt;p&gt;Another data type is the Boolean. Booleans may only be one of two values: true or false. &lt;/p&gt;

&lt;p&gt;Note: Boolean values are never written with quotes. The strings "true" and "false" are not Boolean and have no special meaning in JavaScript.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Example:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function welcomeToBooleans() {
  return true;
}
welcomeToBooleans(); // will display true

function welcomeToBooleans() {
 return false; 
}
welcomeToBooleans(); // will display false
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>devops</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>BaseCamp Community Intro + Resourcesüéâ</title>
      <author>Suraj Vishwakarma</author>
      <pubDate>Sun, 18 Apr 2021 15:54:28 +0000</pubDate>
      <link>https://dev.to/basecampxd/basecamp-community-intro-resources-51pm</link>
      <guid>https://dev.to/basecampxd/basecamp-community-intro-resources-51pm</guid>
      <description>&lt;h1&gt;
  &lt;a href="#basecamp-community"&gt;
  &lt;/a&gt;
  BaseCamp Community
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h2&gt;

&lt;p&gt;When I started my programming journey as a newbie, I literally had no idea about "How to kickstart in the right way?". Having a roadmap is good but sometimes it may not be enough. We need more engagement and discussion.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D4U_Q8oh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j523v1n8pma1b0viztvd.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D4U_Q8oh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j523v1n8pma1b0viztvd.gif" alt="Confused"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After finding a way for myself, I am here, writing code and blog on a regular basis. To solve this problem of getting started in the right direction and helping them with the right tool and resources regarding coding, getting started, open sources, joining the different community, etc. Me and my friend &lt;a href="https://dev.to/mindninjax"&gt;Risabh Singh&lt;/a&gt; have started BaseCamp Community to help the newbies who are passionate about learning to code and becoming better programmers eventually.&lt;/p&gt;

&lt;p&gt;We are currently in starting phases where we are creating videos on YouTube to teach open sources contribution through GitHub. We have repositories on GitHub, where new developers can contribute easily and learn Github working and contributing on GitHub.&lt;/p&gt;

&lt;p&gt;Now we are writing blogs.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#dev-blog"&gt;
  &lt;/a&gt;
  Dev Blog
&lt;/h2&gt;

&lt;p&gt;BaseCamp is now on dev.to to help reach more people through our blogs &amp;amp; share our knowledge. We have a lot of ideas already. here are some we have decided to get started with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Dev Discuss -A healthy discussion on developing community as well as off-topic.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open Source -Introduction to open source and encouraging people to join open source. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Languages -We will focus on the different programming languages to help newbie developers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Resources and Roadmap -Series of resources and roadmap for the different professions from web development(Frontend/Backend/Full Stack) to mobile development.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Much More......&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#connect-with-us"&gt;
  &lt;/a&gt;
  Connect with Us
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Twitter - &lt;a href="https://twitter.com/basecampXD"&gt;@basecampXD&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;YouTube - &lt;a href="https://www.youtube.com/channel/UCJzWrm8hN4cYt2-rgbryVHQ"&gt;@Basecamp&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;GitHub - &lt;a href="https://github.com/Basecamp-Community"&gt;@Basecamp-Community&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h1&gt;

&lt;p&gt;As you get excited about BaseCamp, we are going to start with some resources to set up for you for future projects and learning.&lt;/p&gt;

&lt;p&gt;Let's start with the resources list&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#notion"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1PFlEFh8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mj8kzcpevc9zn4yww2p1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1PFlEFh8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mj8kzcpevc9zn4yww2p1.png" alt="Notion"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A new tool that blends your everyday work apps into one. It's the all-in-one workspace for you and your team.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#trello"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.notion.so/"&gt;Trello&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--86b2oUuh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3knatu1i6fopz6eqllwo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--86b2oUuh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3knatu1i6fopz6eqllwo.png" alt="Trello"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Collaborate, manage projects and reach new productivity peaks. From high rises to the home office, the way your team works is unique‚Äîaccomplish it all with Trello.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#freecodecamp"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.freecodecamp.org/"&gt;freeCodeCamp&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qnhaqytZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3idj6nt6nko4a34wui33.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qnhaqytZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3idj6nt6nko4a34wui33.png" alt="freeCodeCamp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;freeCodeCamp is a non-profit organization that consists of an interactive learning web platform, an online community forum, chat rooms, online publications. They accomplish this by creating thousands of videos, articles, and interactive coding.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#replit"&gt;
  &lt;/a&gt;
  &lt;a href="https://replit.com/"&gt;Replit&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wVc_N7jM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pc8xkyxgojwilsy4p8bn.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wVc_N7jM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pc8xkyxgojwilsy4p8bn.PNG" alt="Replit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Replit is a simple yet powerful online IDE, Editor, Compiler, Interpreter, and REPL. Code, compile, run, and host in 50+ programming languages.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#graphicmaker"&gt;
  &lt;/a&gt;
  &lt;a href="https://designs.ai/graphicmaker/"&gt;Graphicmaker&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_bMmtxbk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rah4zv7g96e65tfgw8u9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_bMmtxbk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rah4zv7g96e65tfgw8u9.png" alt="Graphicmaker"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Get beautiful and customizable SVG, PNG, and Vector illustrations that match your brand identity. Brought to you by Designs.ai.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#heroku"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.heroku.com/"&gt;Heroku&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XoBjsaCC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/484urjx43pa6g5nizalo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XoBjsaCC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/484urjx43pa6g5nizalo.png" alt="Heroku"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Heroku is a platform as a service (PaaS) that enables developers to build, run, and operate applications entirely in the cloud.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h1&gt;
  &lt;a href="#last-note"&gt;
  &lt;/a&gt;
  Last Note
&lt;/h1&gt;

&lt;p&gt;Thank you for reading and always remember that you are amazing. &lt;/p&gt;

&lt;p&gt;Make sure to follow us on &lt;a href="https://dev.to/basecampxd"&gt;dev.to&lt;/a&gt; to stay updated with our latest blog posts.&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Deploying Jupyter Notebook as a Web Page</title>
      <author>Parth Doshi</author>
      <pubDate>Sun, 18 Apr 2021 15:52:27 +0000</pubDate>
      <link>https://dev.to/parthketandoshi/deploying-jupyter-notebook-as-a-web-page-44jp</link>
      <guid>https://dev.to/parthketandoshi/deploying-jupyter-notebook-as-a-web-page-44jp</guid>
      <description>&lt;p&gt;I am writing this post to demonstrate how I deployed a Jupyter Notebook as an HTML Web-page. When provided with a problem statement for which I decided to implement the solution in Python, I was exploring different ways to share my Python Script displaying the code snippets with its output when I found out this method. &lt;/p&gt;

&lt;p&gt;You can check out the final output here üëáüèª&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#production-application-test-project-webpage"&gt;
  &lt;/a&gt;
  &lt;a href="https://parthketandoshi.github.io/Production-Application-Test/"&gt;Production Application Test - Project Webpage&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#problem-statement-source-intercom"&gt;
  &lt;/a&gt;
  Problem Statement üìÑ (Source: &lt;a href="https://www.intercom.com/blog/how-we-hire-engineers-part-1/"&gt;Intercom&lt;/a&gt;)
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;We have some customer records in a text file, one customer per line, JSON formatted lines. We want to invite any customer within 100km of our Dublin office for some food and drinks on us. Write a program that will read the full list of customers and output the names and user ids of matching customers (within 100km), sorted by User ID (ascending).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You must use the first formula from &lt;a href="https://en.wikipedia.org/wiki/Great-circle_distance"&gt;this Wikipedia article&lt;/a&gt; to calculate distance. Don't forget, you'll need to convert degrees to radians.&lt;/li&gt;
&lt;li&gt;The GPS coordinates for our Dublin office are 53.339428 and -6.257664.&lt;/li&gt;
&lt;li&gt;You can find the Customer list &lt;a href="https://gist.github.com/shadab16/ebf141802f90a51c42350ca2dd98ec7c"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#implementation-%F0%9F%8F%97"&gt;
  &lt;/a&gt;
  Implementation üèó
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://colab.research.google.com"&gt;Google Colaboratory ‚öóÔ∏è&lt;/a&gt; to implement the Python Script&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://python-visualization.github.io/folium/"&gt;Folium üó∫&lt;/a&gt; to render Maps and Markers for Office and Customer Locations&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://urllib3.readthedocs.io/en/latest/"&gt;URLlib Module üìÅ&lt;/a&gt; to fetch and process customer data&lt;/li&gt;
&lt;li&gt;Built-in &lt;a href="https://docs.python.org/3/library/json.html"&gt;JSON Package üßæ&lt;/a&gt; to process the data after initial pre-processing&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pandas.pydata.org"&gt;Pandas üìä&lt;/a&gt; to work with the processed customer data&lt;/li&gt;
&lt;li&gt;Built-in &lt;a href="https://docs.python.org/3/library/unittest.html"&gt;UnitTest Library üìã&lt;/a&gt; to implement basic unit-testing&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pages.github.com"&gt;GitHub Pages üíª&lt;/a&gt; for hosting the generated Web-page&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#deployment"&gt;
  &lt;/a&gt;
  Deployment üöÄ
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#jupyter-notebook-to-html"&gt;
  &lt;/a&gt;
  Jupyter Notebook to HTML
&lt;/h4&gt;

&lt;p&gt;I used &lt;a href="https://nbconvert.readthedocs.io/en/latest/"&gt;&lt;strong&gt;jupyter nbconvert&lt;/strong&gt;&lt;/a&gt; to convert the ipynb script to html&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;jupyter nbconvert &amp;lt;input-file&amp;gt; --to &amp;lt;output-format&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://nbconvert.readthedocs.io/en/latest/usage.html#supported-output-formats"&gt;Supported output formats&lt;/a&gt; are HTML, PDF, LaTeX and many more. &lt;/p&gt;

&lt;p&gt;Additional &lt;a href="https://nbconvert.readthedocs.io/en/latest/config_options.html"&gt;Configuration Options&lt;/a&gt; can be used to enrich the experience of converting notebooks to other forms. One option which I used was changing the theme of the notebook which is set to &lt;em&gt;Light&lt;/em&gt; by default. It can be done using HTMLExporter.theme CLI flag.&lt;/p&gt;

&lt;p&gt;Usage Eample:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;jupyter nbconvert script.ipynb --to html --HTMLExporter.theme=dark 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;After generating the HTML file, I made changes to the HTML code like adding a navbar to navigate to sections and changing the background colour jp-Notebook class from Black to Grey20 colour (#333333). I hosted it using GitHub Pages directly from its GitHub Repository.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#github-repository"&gt;
  &lt;/a&gt;
  GitHub Repository üì•
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ParthKetanDoshi"&gt;
        ParthKetanDoshi
      &lt;/a&gt; / &lt;a href="https://github.com/ParthKetanDoshi/Production-Application-Test"&gt;
        Production-Application-Test
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>python</category>
      <category>jupyter</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
  </channel>
</rss>
