<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>‚ùåAMAZON updates its Terms of Service: PROHIBITS using AWS in case of a Zombie Apocalypseüßü‚Äç‚ôÇÔ∏è</title>
      <author>Dotnetsafer</author>
      <pubDate>Wed, 08 Sep 2021 18:32:40 +0000</pubDate>
      <link>https://dev.to/dotnetsafer/amazon-updates-its-terms-of-service-prohibits-using-aws-in-case-of-a-zombie-apocalypse-3ga7</link>
      <guid>https://dev.to/dotnetsafer/amazon-updates-its-terms-of-service-prohibits-using-aws-in-case-of-a-zombie-apocalypse-3ga7</guid>
      <description>&lt;p&gt;Who reads the terms of service? Yes, those hundreds of pages in which they explain the conditions of use of a service. Well, let‚Äôs start with someone who has read them to them. If not, this article would not have existed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--voydGTTW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2Avm1ONaSN0_-nniykMjQ0wA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--voydGTTW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2Avm1ONaSN0_-nniykMjQ0wA.png" alt="aws"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just recently, AWS has updated its terms of service and well, the usual. What you can and cannot do, but the funny thing is point &lt;strong&gt;42.10&lt;/strong&gt;, which in a nutshell, says that they prohibit the use of their Lumberyard services in case of a zombie apocalypse.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q7KCK5cq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/562/1%2AXK70IkaRqtokUKLp8NC1Cw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q7KCK5cq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/562/1%2AXK70IkaRqtokUKLp8NC1Cw.png" alt="aws"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You do not believe it? See for yourself by reading the &lt;a href="https://aws.amazon.com/es/aispl/service-terms/"&gt;AWS Terms of Service.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The official information specifies:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚Äú&lt;strong&gt;Lumberyard&lt;/strong&gt; is a cross-platform game engine where you can create games for most modern platforms for free: PC, Mac, iOS / Android, all consoles, including VR glasses.‚Äù&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Sure, for many of us, it reminds us of the typical nonsense like ‚Äúdon‚Äôt wash your cat‚Äù in the washing machine instructions, but here‚Ä¶ Just read it again and think about it!&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚Äú‚Ä¶of a widespread viral infection transmitted via bites or contact with bodily fluids that causes human corpses to reanimate and seek to consume living human flesh, blood, brain or nerve tissue and is likely to result in the fall of organized civilization.‚Äù&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And why, if this happens, the restriction ‚Äúwill not apply‚Äù?&lt;/p&gt;

&lt;p&gt;As I said before, it is difficult to understand what is written in this paragraph of the ‚ÄúAmazon‚Äù document. But it looks really creepy and raises a lot of questions‚Ä¶&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m6EqWYRr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/400/1%2A1kfennSKzOCfdkShx8j13A.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m6EqWYRr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/400/1%2A1kfennSKzOCfdkShx8j13A.gif" alt="meme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Internet users have already begun to debate this problem and the comments are very weird‚Ä¶&lt;/p&gt;

&lt;p&gt;People who laugh from irony, ironically claiming that it is a joke&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U3c-7eJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/616/1%2AIQbNQrz1Xs2bS-toywTKrg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U3c-7eJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/616/1%2AIQbNQrz1Xs2bS-toywTKrg.png" alt="aws"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some already proposing new Zombies tax rates&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uhVsPbFU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/688/1%2AVBEwjqfTE6hHYvnJC1xd_w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uhVsPbFU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/688/1%2AVBEwjqfTE6hHYvnJC1xd_w.png" alt="aws"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Others congratulating the intern&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BCp1qDLH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/637/1%2A3kmO0g5km6HE5tL8tmGTnw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BCp1qDLH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/637/1%2A3kmO0g5km6HE5tL8tmGTnw.png" alt="aws"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Others that give a lot to think about what happened ‚Äúthe last time‚Äù&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bvJTpcUX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/614/1%2AzuZy39uNntszwAmjgD3pxA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bvJTpcUX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/614/1%2AzuZy39uNntszwAmjgD3pxA.png" alt="aws"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And others that we will never know what he had written&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xhkC72wX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AK5drKdJBxuRLU5zsHx9c3g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xhkC72wX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AK5drKdJBxuRLU5zsHx9c3g.png" alt="aws"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To finish I leave this important information:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;‚ÄúWhen zombies are hungry, they won‚Äôt stop until they find food for them, which means you need to disappear from the city as quickly as possible.‚Äù&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>productivity</category>
      <category>discuss</category>
      <category>learning</category>
      <category>programming</category>
    </item>
    <item>
      <title>Integrating Firebase with React Native</title>
      <author>Aman Mittal</author>
      <pubDate>Wed, 08 Sep 2021 18:21:15 +0000</pubDate>
      <link>https://dev.to/jscrambler/integrating-firebase-with-react-native-jpa</link>
      <guid>https://dev.to/jscrambler/integrating-firebase-with-react-native-jpa</guid>
      <description>&lt;p&gt;Firebase is a Backend as a Service (&lt;em&gt;BaaS&lt;/em&gt;) that provides an advantage to mobile developers who use React Native for developing mobile applications. As a React Native developer, by using Firebase you can start building an MVP (minimum viable product), keeping the costs low and prototyping the application pretty fast.&lt;/p&gt;

&lt;p&gt;In this tutorial, we will learn how to get started by integrating Firebase in a React Native application. We will also create a small application from scratch with the help of Firebase &amp;amp; React Native to see how they work together.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://console.firebase.google.com/"&gt;Firebase&lt;/a&gt; is a platform that got acquired by Google and has a healthy and active community. Most users in this community are web and mobile developers as Firebase can help with mobile analytics, push notification, crash reporting, and out-of-the-box it also provides email as well as social authentication.&lt;/p&gt;

&lt;p&gt;To get started, you will need a target mobile OS, whether you choose to go with iOS or Android or both. Please refer to the &lt;a href="https://reactnative.dev/docs/getting-started"&gt;React Native official documentation&lt;/a&gt; if you are setting up a React Native development environment for the first time. You will need SDK tools and Android Studio especially to set up a developer environment for Android. For iOS, you need Xcode installed on your macOS. You will also need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://nodejs.org"&gt;Nodejs&lt;/a&gt; (&lt;code&gt;&amp;gt;= 12.x.x&lt;/code&gt;) and npm/yarn installed&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/react-native-cli"&gt;react-native-cli&lt;/a&gt; (&lt;code&gt;&amp;gt;= 2.0.1&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Or use npx&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;React Native is distributed as two npm packages, &lt;code&gt;react-native-cli&lt;/code&gt;, and &lt;code&gt;react-native&lt;/code&gt;. We are going to use the &lt;code&gt;react-native-cli&lt;/code&gt; to generate an app. Begin by installing it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; react-native-cli
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let‚Äôs create a new React Native project called ‚ÄúrnFirebaseDemo‚Äù:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;react-native init rnFirebaseDemo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the above command is done running, traverse into the project directory using &lt;code&gt;cd rnFirebaseDemo&lt;/code&gt;. Now, let‚Äôs check if everything is working correctly and our React Native application has been properly initialized by running one of the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# For iOS&lt;/span&gt;
Yarn run run-ios

&lt;span class="c"&gt;# For Windows/Unix users&lt;/span&gt;
yarn run android
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command will run the default screen as shown below in an iOS simulator or Android emulator but it will take a few moments since we are running it for the first time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DkxumIGB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/JJiLnvt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DkxumIGB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/JJiLnvt.png" alt="ss1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configuring-a-firebase-project"&gt;
  &lt;/a&gt;
  Configuring a Firebase Project
&lt;/h2&gt;

&lt;p&gt;To start a new Firebase app with a frontend framework or a library, you need the API keys. To obtain these API keys, you need access to a Firebase project. A new Firebase project is created from the &lt;a href="https://console.firebase.google.com/"&gt;Firebase console&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FuzC5odx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/jICRUYU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FuzC5odx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/jICRUYU.png" alt="ss-new-1"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Initially, you can create a free tier Firebase project known as Spark Plan. To know about pricing and more information on Firebase plans, take a look &lt;a href="https://firebase.google.com/pricing"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now, click on the &lt;strong&gt;Add project&lt;/strong&gt; button and then enter the name of the Firebase project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NZXyUj7O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/XsRCTiO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NZXyUj7O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/XsRCTiO.png" alt="ss-new-2"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Then, click the Continue on the step 2 screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V5NAnbiC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/IpPWQCn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V5NAnbiC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/IpPWQCn.png" alt="ss-new-3"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;On the step 3 screen, you can leave everything as default and press the &lt;strong&gt;Create project&lt;/strong&gt; button to create a new Firebase project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3VvDsVJD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/UN0M6Cp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3VvDsVJD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/UN0M6Cp.png" alt="ss-new-4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When the loading finishes, press the button and you‚Äôll be welcomed by the main dashboard screen of the Firebase project.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sv9_nRM---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/vAgO7E6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sv9_nRM---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/vAgO7E6.png" alt="ss-new-5"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#adding-firebase-to-a-react-native-project"&gt;
  &lt;/a&gt;
  Adding Firebase to a React Native project
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://rnfirebase.io/"&gt;react-native-firebase library&lt;/a&gt; is the officially recommended collection of packages that brings React Native support for all Firebase services on both Android and iOS apps.&lt;/p&gt;

&lt;p&gt;To add it to our existing React Native application, we need to install the following dependency:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add @react-native-firebase/app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To connect the iOS app with your Firebase project‚Äôs configuration, you need to generate, download, and add a &lt;code&gt;GoogleService-Info.plist&lt;/code&gt; file to the iOS bundle.&lt;/p&gt;

&lt;p&gt;From the Firebase dashboard screen, click on Project Overview &amp;gt; Settings and in the General tab, go to Your Apps section. Click on the &lt;strong&gt;Add app&lt;/strong&gt; button. A modal appears as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MbR1Y41B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/BmWaBAL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MbR1Y41B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/BmWaBAL.png" alt="ss6-new"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Select iOS in the modal and then, in step 1, enter your app details and click the &lt;strong&gt;Register app&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--trfaVotL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/S6n7uJA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--trfaVotL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/S6n7uJA.png" alt="ss7-new"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;In step 2, download the &lt;code&gt;GoogleService-Info.plist&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Then, using Xcode, open the projects &lt;code&gt;/ios/{projectName}.xcworkspace&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Right-click on the project name and "Add files" to the project:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4RNYPb6K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/63gRVx0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4RNYPb6K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/63gRVx0.png" alt="ss8-new"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select the downloaded &lt;code&gt;GoogleService-Info.plist&lt;/code&gt; file from your computer, and ensure the "Copy items if needed" checkbox is enabled.&lt;/p&gt;

&lt;p&gt;To allow Firebase on iOS to use the credentials, the Firebase iOS SDK must be configured during the bootstrap phase of your application. Open the &lt;code&gt;/ios/{projectName}/AppDelegate.m&lt;/code&gt; file and, at the top of the file, add:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="cp"&gt;#import &amp;lt;Firebase.h&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Within the same file, add the following at the top of the &lt;code&gt;didFinishLaunchingWithOptions&lt;/code&gt; function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BOOL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UIApplication&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt; &lt;span class="n"&gt;didFinishLaunchingWithOptions&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NSDictionary&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;launchOptions&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;FIRApp&lt;/span&gt; &lt;span class="n"&gt;defaultApp&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;FIRApp&lt;/span&gt; &lt;span class="n"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; 
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// ‚Ä¶ the rest of the function body remains the same&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, rebuild the iOS app. Execute the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;ios/ 
pod &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--repo-update&lt;/span&gt; 
&lt;span class="nb"&gt;cd&lt;/span&gt; .. 
npx react-native run-ios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To connect the Android app to your Firebase project‚Äôs configuration, you need to generate, download and add a &lt;code&gt;google-services.json&lt;/code&gt; file to the iOS bundle.&lt;/p&gt;

&lt;p&gt;From the Firebase dashboard screen, click on Project Overview &amp;gt; Settings and in the General tab, go to the ‚ÄúYour Apps‚Äù section. Click on the Add app button and then click the button with the Android icon in the modal.&lt;/p&gt;

&lt;p&gt;In Step 1, enter the details of your app and then click the button ‚ÄúRegister app‚Äù.&lt;/p&gt;

&lt;p&gt;The "Android package name" in the image below, must match your local projects package name which can be found inside of the &lt;code&gt;manifest&lt;/code&gt; tag within the &lt;code&gt;/android/app/src/main/AndroidManifest.xml&lt;/code&gt; file within your project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7F-02qou--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/sGZcpgj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7F-02qou--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/sGZcpgj.png" alt="ss11"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;In step 2, download the &lt;code&gt;google-services.json&lt;/code&gt; file and place it inside of your React Native project at the following location: &lt;code&gt;/android/app/google-services.json&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To allow Firebase on Android to use the credentials, the google-services plugin must be enabled on the project. This requires modification to two files in the Android directory. Add the &lt;code&gt;google-services&lt;/code&gt; plugin as a dependency inside of your &lt;code&gt;/android/build.gradle&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="n"&gt;buildscript&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;dependencies&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ... other dependencies&lt;/span&gt;
    &lt;span class="c1"&gt;// Add the line below &lt;/span&gt;
    &lt;span class="n"&gt;classpath&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;google&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gms&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;services:&lt;/span&gt;&lt;span class="mf"&gt;4.3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly, execute the plugin by adding the following to your &lt;code&gt;/android/app/build.gradle&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="n"&gt;apply&lt;/span&gt; &lt;span class="nl"&gt;plugin:&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;android&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;application&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;
&lt;span class="n"&gt;apply&lt;/span&gt; &lt;span class="nl"&gt;plugin:&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;google&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;google&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;- Add this line&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, rebuild the android app. Execute the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx react-native run-android
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The package is used to configure and install Firebase SDK in a React Native project. To use any of the Firebase features such as Auth, Firestore, Storage, or Realtime Database, you have to install the individual packages from the React Native Firebase library.&lt;/p&gt;

&lt;p&gt;In this tutorial, let‚Äôs install and configure the Realtime Database. Open the terminal window and execute the following series of commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add @react-native-firebase/database

&lt;span class="c"&gt;# after successful installation, for ios&lt;/span&gt;
&lt;span class="nb"&gt;cd &lt;/span&gt;ios/

pod &lt;span class="nb"&gt;install

&lt;/span&gt;cd..
npx react-native run-ios

&lt;span class="c"&gt;# for android, just rebuild the app&lt;/span&gt;
npx react-native run-android
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#building-app-screens"&gt;
  &lt;/a&gt;
  Building app screens
&lt;/h2&gt;

&lt;p&gt;When we open the project in a code editor, its structure looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b-p1SgC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/TdKzipp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b-p1SgC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/TdKzipp.png" alt="ss2"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;We need to make some modifications before we can really start building our app. Create an &lt;code&gt;src&lt;/code&gt; directory inside the root folder. This is where our app components and screens will live. Further, within the &lt;code&gt;src&lt;/code&gt; directory, we will create two folders: &lt;code&gt;screens&lt;/code&gt; and &lt;code&gt;components&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;screen&lt;/code&gt; directory will contain all the UI-related components that we need to display to the end-user, whereas the &lt;code&gt;components&lt;/code&gt; folder will contain any other component that will be used or re-used to display the user interface.&lt;/p&gt;

&lt;p&gt;Let us create our first screen, the Home screen, inside &lt;code&gt;screens/&lt;/code&gt; with a new file &lt;code&gt;Home.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;View&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-native&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;View&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="nx"&gt;Screen&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/View&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our next screen is going to be &lt;code&gt;Add Item&lt;/code&gt;. Create a new file called &lt;code&gt;AddItem.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;View&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-native&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;AddItem&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;View&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Add&lt;/span&gt; &lt;span class="nx"&gt;Item&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/View&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our last screen is going to be a list of items that we need to display. In the same directory, create a new file called &lt;code&gt;List.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;  &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;View&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-native&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;List&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;View&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/View&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#adding-reactnavigation"&gt;
  &lt;/a&gt;
  Adding react-navigation
&lt;/h2&gt;

&lt;p&gt;To navigate between different screens, we need to add the &lt;code&gt;react-navigation&lt;/code&gt; library. We are going to use the &lt;code&gt;5.0.0&lt;/code&gt; version.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add @react-navigation/native react-native-reanimated react-native-gesture-handler react-native-screens react-native-safe-area-context @react-native-community/masked-view @react-navigation/stack
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, add the following line at the top of the &lt;code&gt;index.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-native-gesture-handler&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is to run the command below and link the libraries we just installed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;ios/
pod &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After adding this package, let us run the build process again:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx react-native run-ios
&lt;span class="c"&gt;# OR&lt;/span&gt;

npx react-native run-android
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, to see it in action, let us add the Home component as our first screen. Add the following code in &lt;code&gt;App.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;NavigationContainer&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@react-navigation/native&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;createStackNavigator&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@react-navigation/stack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./src/screens/Home&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// we will use these two screens later in the Navigator&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;AddItem&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./src/screens/AddItem&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;List&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./src/screens/List&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Stack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createStackNavigator&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;NavigationContainer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Navigator&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Screen&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Home&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Stack.Navigator&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/NavigationContainer&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this stage, if we go to the simulator, we will see the following result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vVDQgpGh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/IMXVJ9n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vVDQgpGh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/IMXVJ9n.png" alt="ss4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Home Screen is showing up. We will add two other screens as routes to &lt;code&gt;AppNavigator&lt;/code&gt; in order to navigate to them through the Home Screen.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;NavigationContainer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Navigator&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Screen&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Home&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Screen&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;AddItem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;AddItem&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Screen&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;List&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;List&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Stack.Navigator&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/NavigationContainer&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, our stack has three routes: a Home route, an AddItem route, and a ListItem route. The Home route corresponds to the &lt;code&gt;Home&lt;/code&gt; screen component, the AddItem corresponds to the &lt;code&gt;AddItem&lt;/code&gt; screen and the ListItem route corresponds to the &lt;code&gt;ListItem&lt;/code&gt; component.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#navigating-between-the-screens"&gt;
  &lt;/a&gt;
  Navigating between the screens
&lt;/h2&gt;

&lt;p&gt;Previously, we defined a stack navigator with three routes but we didn't hook them up in order to navigate between them. Well, this is an easy task too. The &lt;code&gt;react-navigation&lt;/code&gt; library provides us with a way to manage navigation from one screen to another and back. To make this work, we will modify &lt;code&gt;Home.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;View&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-native&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;navigation&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;View&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="nx"&gt;Screen&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt;
          &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Add an Item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;onPress&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;navigation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;navigate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;AddItem&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt;
          &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;List of Items&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;onPress&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;navigation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;navigate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;List&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/View&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above, we are adding a &lt;code&gt;Button&lt;/code&gt; component from the &lt;code&gt;react-native&lt;/code&gt; API. &lt;code&gt;react-navigation&lt;/code&gt; passes a navigation prop in the form of &lt;code&gt;navigation.navigate()&lt;/code&gt; to every screen in the stack navigator. We have to use the same screen name on the &lt;code&gt;onPress&lt;/code&gt; function to navigate as we defined in &lt;code&gt;App.js&lt;/code&gt; under &lt;code&gt;AppNavigator&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can also customize the back button manually with your own styling on both screens &lt;code&gt;AddItem&lt;/code&gt; and &lt;code&gt;List&lt;/code&gt; but, for our demonstration, we are going to use the default styling.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j-cMAcRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/oB1OSRS.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j-cMAcRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/oB1OSRS.gif" alt="ss5"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-database-with-firebase"&gt;
  &lt;/a&gt;
  Creating a Database with Firebase
&lt;/h2&gt;

&lt;p&gt;Go to the &lt;a href="https://firebase.google.com/"&gt;Firebase&lt;/a&gt; Console, and click the Realtime Database from the menu bar. If you are creating a realtime database for the first time in your Firebase project, click the &lt;strong&gt;Create Database&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;Then, when asked for rules, enable test mode. For the example app we‚Äôre building in this demo, we will enable the database in the test mode.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-data-from-the-app-to-firebase"&gt;
  &lt;/a&gt;
  Adding Data from the App to Firebase
&lt;/h2&gt;

&lt;p&gt;In this section, we will edit &lt;code&gt;AddItem.js&lt;/code&gt; which represents an input field and a button. The user can add an item to the list and it will get saved to Firebase data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;View&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;TouchableHighlight&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;StyleSheet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;TextInput&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Alert&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-native&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;database&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@react-native-firebase/database&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;addItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/items&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;AddItem&lt;/span&gt; &lt;span class="p"&gt;(){&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onChangeText&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‚Äò‚Äô&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="kd"&gt;const&lt;/span&gt;  &lt;span class="nx"&gt;handleSubmit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;addItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;Alert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Item saved successfully&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;View&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Add&lt;/span&gt; &lt;span class="nx"&gt;Item&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TextInput&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;itemInput&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;onChangeText&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;onChangeText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TouchableHighlight&lt;/span&gt;
          &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="nx"&gt;underlayColor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;white&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;onPress&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buttonText&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Add&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/TouchableHighlight&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/View&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;styles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;StyleSheet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;main&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;flexDirection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;column&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;justifyContent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#6565fc&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;marginBottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;textAlign&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;itemInput&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;marginRight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;borderWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;borderColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;white&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;borderRadius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;white&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;buttonText&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#111&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;alignSelf&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;button&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;flexDirection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;row&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;white&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;borderColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;white&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;borderWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;borderRadius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;marginBottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;marginTop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;alignSelf&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stretch&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;justifyContent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above, we are adding a Firebase database instance from &lt;code&gt;config.js&lt;/code&gt; and &lt;code&gt;db&lt;/code&gt; and then pushing any item that the user adds through &lt;code&gt;addItem&lt;/code&gt; and &lt;code&gt;handleSubmit()&lt;/code&gt;. You will get an alert message when you press the &lt;strong&gt;Add&lt;/strong&gt; button to add the item from the input value as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o1_ot2gK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://imgur.com/qi5UQec.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o1_ot2gK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://imgur.com/qi5UQec.gif" alt="ss8"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;To verify that the data is there in the database, go to your Firebase console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RJm21uei--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/KZDYCIo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RJm21uei--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/KZDYCIo.png" alt="ss9"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fetching-items-from-the-database"&gt;
  &lt;/a&gt;
  Fetching Items from the Database
&lt;/h2&gt;

&lt;p&gt;To fetch data from the Firebase database, we are going to use the same reference to &lt;code&gt;db&lt;/code&gt; in &lt;code&gt;List.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;View&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;StyleSheet&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-native&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ItemComponent&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../components/ItemComponent&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;database&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@react-native-firebase/database&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;itemsRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/items&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;List&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;itemsArray&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setItemsArray&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;
  &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;itemsRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;value&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;snapshot&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;snapshot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;setItemsArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;View&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;itemsArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ItemComponent&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;itemsArray&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;No&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;)}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/View&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;styles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;StyleSheet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;justifyContent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#ebebeb&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the &lt;code&gt;ItemComponent&lt;/code&gt;, we create a new file inside &lt;code&gt;components/ItemComponent.js&lt;/code&gt;. This is a non-screen component. Only the &lt;code&gt;List&lt;/code&gt; will use it to &lt;code&gt;map&lt;/code&gt; and display each item.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;  &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;View&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;StyleSheet&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-native&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;ItemComponent&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;View&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;itemsList&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;View&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;itemtext&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/View&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;})}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/View&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;styles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;StyleSheet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;itemsList&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;flexDirection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;column&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;justifyContent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;space-around&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;itemtext&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;fontWeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bold&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;textAlign&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This step concludes the integration of a Firebase database with our React Native app. You can now add the new data items and fetch them from the database as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GVX40tEZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/0Nr4d4J.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GVX40tEZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/0Nr4d4J.gif" alt="ss9"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this tutorial, we‚Äôve shown you how to integrate Firebase with a React Native application. You don‚Äôt need a complete server that creates an API and further uses a database to prototype or build an MVP of your application.&lt;/p&gt;

&lt;p&gt;You can find the complete code inside &lt;a href="https://github.com/amandeepmittal/react-native-examples/tree/master/rnFirebaseDemo"&gt;this Github repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Finally, don't forget to pay special attention if you're developing commercial React Native apps that contain sensitive logic. You can protect them against code theft, tampering, and reverse engineering by following &lt;a href="https://blog.jscrambler.com/how-to-protect-react-native-apps-with-jscrambler/?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=integrating-firebase-react-native"&gt;our guide&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>firebase</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Starting my Journey in OpenSource  </title>
      <author>Luigi Zaccagnini</author>
      <pubDate>Wed, 08 Sep 2021 17:27:30 +0000</pubDate>
      <link>https://dev.to/luigizaccagnini/starting-my-journey-in-opensource-1m4n</link>
      <guid>https://dev.to/luigizaccagnini/starting-my-journey-in-opensource-1m4n</guid>
      <description>&lt;p&gt;Hello readers, welcome to my first post! I am Luigi Zaccagnini and I am a software developer currently located in Ontario, Canada. I started programming seven years ago while I was in high school with the goal of creating awesome software. I am also currently a student at Seneca College taking a course on OpenSource development. I am taking this course because I want to learn more about different aspects of programming (Emulators, Tools, Frameworks, etc.) and want to gain experience working on professional code. OpenSource has always attracted me because a lot of the software I use is OpenSource and it is awesome! I haven‚Äôt fully committed to continually contributing to OpenSource software but, started when &lt;a href="https://github.com/humphd"&gt;David Humphrey&lt;/a&gt; introduced me to &lt;a href="https://github.com/Seneca-CDOT/telescope"&gt;Telescope&lt;/a&gt; a couple of years ago. My goal for this term is to learn new things, explore topics that interest me and improve my programming skills. I mainly work with web technologies as that is my comfort space but, I would like to try to also work on emulators and other interesting softwares. The first project I researched was a tool called &lt;a href="https://github.com/khanhas/spicetify-cli"&gt;Spicetify&lt;/a&gt;. Spicetify is a command-line tool that allows you to customize your Spotify client. I picked this project because I use Spotify very frequently and would like the ability to change and add functionality. Now that I shared everything about me, I would like to hear from you! Comment some of your favourite OpenSource projects and tell me what got you into OpenSource? If you haven‚Äôt tried or researched OpenSource find one project that interests you and share it!&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>javascript</category>
      <category>github</category>
    </item>
    <item>
      <title>nano, a small and friendly text editor.</title>
      <author>Barbara (dev)</author>
      <pubDate>Wed, 08 Sep 2021 17:13:47 +0000</pubDate>
      <link>https://dev.to/barbara/nano-a-small-and-friendly-text-editor-lc6</link>
      <guid>https://dev.to/barbara/nano-a-small-and-friendly-text-editor-lc6</guid>
      <description>&lt;p&gt;When we want to do simple changes in a file, we don't want to open an integrated development environment. For example when we have to edit a configuration file or search something within a file, we want to do this quickly, ideally keeping our hands on the keyboard. Always - no mouse support or graphical user interface needed.&lt;/p&gt;

&lt;p&gt;Beside nano there are other well known command line text editors like &lt;a href="https://www.vim.org/"&gt;vi&lt;/a&gt; or &lt;a href="https://www.gnu.org/software/emacs/"&gt;emacs&lt;/a&gt;. Nano is a superset of &lt;a href="https://en.wikipedia.org/wiki/Pico_(text_editor)"&gt;pico&lt;/a&gt; written in C for Unix-like systems as a free software. It was released in 1999 and is part of the GNU project since 2001.&lt;/p&gt;

&lt;p&gt;The reasons why we want to have a closer look on &lt;a href="https://www.nano-editor.org/"&gt;nano&lt;/a&gt; today are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it is one of the most common used command line text editors&lt;/li&gt;
&lt;li&gt;it is included in most of the Linux distributions by default&lt;/li&gt;
&lt;li&gt;Mr. Robots fsociety uses it ;) &lt;/li&gt;
&lt;li&gt;it has a &lt;em&gt;shortcut bar&lt;/em&gt; at the bottom of the screen, displaying some available commands&lt;/li&gt;
&lt;li&gt;it offers features like syntax highlighting, line numbers, regular expression search and replace, that pico does not have.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h3&gt;

&lt;p&gt;Install nano.&lt;br&gt;
If we are on Mac OS X nano is installed by default. If nano is not installed on your Linux distribution we can install it with &lt;code&gt;sudo apt-get -y install nano&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once it is installed type &lt;code&gt;nano&lt;/code&gt; in the terminal and we are using the command line editor. When we click &lt;code&gt;ctrl+g&lt;/code&gt; the help text will be displayed. &lt;code&gt;ctrl&lt;/code&gt; is displayed as &lt;code&gt;^&lt;/code&gt; (caret symbol) in nano.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P0yRumcn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ixqrqctgl20lc0uie7zf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P0yRumcn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ixqrqctgl20lc0uie7zf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#navigating"&gt;
  &lt;/a&gt;
  Navigating
&lt;/h3&gt;

&lt;p&gt;We can use the arrow keys to navigate around. But if we don't want to move the fingers away from the letters, we can use the following commands.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;command&lt;/th&gt;
&lt;th&gt;explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+b&lt;/td&gt;
&lt;td&gt;move forward one char&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+f&lt;/td&gt;
&lt;td&gt;move backward one char&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+p&lt;/td&gt;
&lt;td&gt;move one line up&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+n&lt;/td&gt;
&lt;td&gt;move one line down&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+a&lt;/td&gt;
&lt;td&gt;move to the beginning of a line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+e&lt;/td&gt;
&lt;td&gt;move to the end of a line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+y&lt;/td&gt;
&lt;td&gt;move to the beginning of a page&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+v&lt;/td&gt;
&lt;td&gt;move to the end of a page&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+space&lt;/td&gt;
&lt;td&gt;move forward one word&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#editing"&gt;
  &lt;/a&gt;
  Editing
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;command&lt;/th&gt;
&lt;th&gt;explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+c&lt;/td&gt;
&lt;td&gt;Cancel current command&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+x&lt;/td&gt;
&lt;td&gt;Exit. You will be asked if you want to save changes. The shortcut bar at the bottom will display the available commands&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+o&lt;/td&gt;
&lt;td&gt;Writing out.  You will be asked to type a filename for the new file. The shortcut bar at the bottom will display the available commands&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+r&lt;/td&gt;
&lt;td&gt;Insert content from another file into current buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+k&lt;/td&gt;
&lt;td&gt;Kut. Cut (Delete) current line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+u&lt;/td&gt;
&lt;td&gt;Uncut. Pastes the line who was cut&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+6&lt;/td&gt;
&lt;td&gt;set a mark&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#search-and-replace"&gt;
  &lt;/a&gt;
  Search and Replace
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;command&lt;/th&gt;
&lt;th&gt;explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+w&lt;/td&gt;
&lt;td&gt;"Where is ...?" You will be asked, what to search for&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;alt+r&lt;/td&gt;
&lt;td&gt;Find and replace. First you will be asked what to search for and then for the replacement text.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;You can find the entire nano manual &lt;a href="https://www.nano-editor.org/dist/v2.2/nano.html"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>linux</category>
      <category>productivity</category>
      <category>beginners</category>
      <category>tooling</category>
    </item>
    <item>
      <title>TO Do List {Day -25}</title>
      <author>Al Siam</author>
      <pubDate>Wed, 08 Sep 2021 16:56:29 +0000</pubDate>
      <link>https://dev.to/alsiamworld/to-do-list-day-25-3mk8</link>
      <guid>https://dev.to/alsiamworld/to-do-list-day-25-3mk8</guid>
      <description>&lt;h1&gt;
  &lt;a href="#100daysofcode-day-25"&gt;
  &lt;/a&gt;
  100daysofcode {Day -25}
&lt;/h1&gt;

&lt;p&gt;A to-do list has been created and the special feature of this to-do list is that it will not remove items after reloading or exiting the browser. Because I used local storage to store inventory items. It hasn't been designed yet but I'll update it soon. Check quickly ..&lt;/p&gt;

&lt;p&gt;Preview: &lt;a href="https://smart-todo-lists.netlify.app"&gt;https://smart-todo-lists.netlify.app&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Code: &lt;a href="https://github.com/alsiamworld/todo-list"&gt;https://github.com/alsiamworld/todo-list&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CWk9Th0m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hdmppvvnxqrz25mgrn4b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CWk9Th0m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hdmppvvnxqrz25mgrn4b.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to wait for a function to finish with all its inside expressions, in router in mongoose?</title>
      <author>Rishav Raj</author>
      <pubDate>Wed, 08 Sep 2021 16:28:04 +0000</pubDate>
      <link>https://dev.to/rishavraj221/how-to-wait-for-a-function-to-finish-with-all-its-inside-expressions-in-router-in-mongoose-5213</link>
      <guid>https://dev.to/rishavraj221/how-to-wait-for-a-function-to-finish-with-all-its-inside-expressions-in-router-in-mongoose-5213</guid>
      <description>&lt;div class="ltag__stackexchange--container"&gt;
  &lt;div class="ltag__stackexchange--title-container"&gt;
    
      &lt;div class="ltag__stackexchange--title"&gt;
        &lt;h1&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Gn-iPj_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackoverflow-logo-b42691ae545e4810b105ee957979a853a696085e67e43ee14c5699cf3e890fb4.svg" alt=""&gt;
            &lt;a href="https://stackoverflow.com/questions/69106315/how-to-wait-for-a-function-to-finish-with-all-its-inside-expressions-in-router" rel="noopener noreferrer"&gt;
               How to wait for a function to finish with all its inside expressions, in router in mongoose?
            &lt;/a&gt;
        &lt;/h1&gt;
        &lt;div class="ltag__stackexchange--post-metadata"&gt;
          &lt;span&gt;Sep  8 '21&lt;/span&gt;
            &lt;span&gt;Comments: 1&lt;/span&gt;
            &lt;span&gt;Answers: 0&lt;/span&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;a class="ltag__stackexchange--score-container" href="https://stackoverflow.com/questions/69106315/how-to-wait-for-a-function-to-finish-with-all-its-inside-expressions-in-router" rel="noopener noreferrer"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y9mJpuJP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-up-eff2e2849e67d156181d258e38802c0b57fa011f74164a7f97675ca3b6ab756b.svg" alt=""&gt;
        &lt;div class="ltag__stackexchange--score-number"&gt;
          0
        &lt;/div&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wif5Zq3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-down-4349fac0dd932d284fab7e4dd9846f19a3710558efde0d2dfd05897f3eeb9aba.svg" alt=""&gt;
      &lt;/a&gt;
    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--body"&gt;
    
&lt;p&gt;I just want to change the value of a key of all the objects inside an array&lt;/p&gt;
&lt;p&gt;What I want actually -&lt;/p&gt;
&lt;p&gt;The object which I queried from the database is -&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  _id: 61389277fa5c742caf959885
  title: 'What is GRE?',
  forumTab: 'GRE',
  askedAt: 2021-09-08T10:37:43.979Z,
  askedBy: {
    _id: 60f0a6a9b4259f7ef9c49cc8,
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I‚Ä¶&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--btn--container"&gt;
    
      &lt;a href="https://stackoverflow.com/questions/69106315/how-to-wait-for-a-function-to-finish-with-all-its-inside-expressions-in-router" rel="noopener noreferrer"&gt;Open Full Question&lt;/a&gt;
    
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>mongodb</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Will the Real Senior Dev Please Stand Up? (2021 Edition)</title>
      <author>Conor Bronsdon</author>
      <pubDate>Wed, 08 Sep 2021 16:23:35 +0000</pubDate>
      <link>https://dev.to/linearb/will-the-real-senior-dev-please-stand-up-2021-edition-1k4j</link>
      <guid>https://dev.to/linearb/will-the-real-senior-dev-please-stand-up-2021-edition-1k4j</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was written exclusively for devinterrupted.com by Tomasz Waraksa&lt;/em&gt;&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
A year ago I wrote an article for &lt;a href="https://dzone.com/"&gt;Dzone&lt;/a&gt; titled &lt;a href="https://dzone.com/articles/the-rise-and-fall-of-a-senior-developer-8"&gt;The Rise and Fall of a Senior Developer&lt;/a&gt;. Filled with personal anecdotes and stories from my years as a software engineer, the article was a critique of industry practices surrounding the somewhat controversial issue of ranking programmers‚Äô seniority. I realized that I might sound like an elitist dinosaur patronizing the upcoming generation of software engineers. A sort of ‚Äúback in my day we did things differently‚Äù mentality that every generation seems to age into.&lt;/p&gt;

&lt;p&gt;So you can imagine my surprise when the article became not only my most popular submission, but caught the eye of &lt;a href="https://dzone.com/users/4248382/linearb.html"&gt;Dan Lines&lt;/a&gt;, host of the &lt;a href="https://open.spotify.com/show/7icMkauSvLflWCpQrfafIv"&gt;Dev Interrupted podcast&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In a follow-up to my article from last year, I‚Äôd like to share some of the takeaways from &lt;a href="https://open.spotify.com/episode/4lAKfoOnzMZe7ANVaKW7YS"&gt;my discussion with Dan&lt;/a&gt; and discuss whether or not some of these hiring practices have changed in the past year.&lt;/p&gt;

&lt;p&gt;The rise of remote work is truly changing the landscape of hiring developers and finding talent. But are companies better able to find The True Senior Software Developers in 2021?&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/4lAKfoOnzMZe7ANVaKW7YS"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-senior-developer"&gt;
  &lt;/a&gt;
  What is a ‚Äúsenior‚Äù developer?
&lt;/h3&gt;

&lt;p&gt;There is no objective measure of a senior developer. Everything is dependent upon the specific work environment a developer finds themselves in. A humorous analogy could be the movie &lt;a href="https://www.imdb.com/title/tt0387808/"&gt;Idiocracy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Seniority is determined very differently in an environment where your superiors have less knowledge and experience than yourself. Likewise, in a highly technical environment filled with experienced individuals, for instance, Tesla‚Äôs autonomous car team, you might discover seniority is determined by different standards.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;My most pragmatic answer is to say that it really depends on where you are and that hopefully your organization isn‚Äôt being run completely incompetently.&lt;/p&gt;

&lt;p&gt;To me a senior is someone who has mastered their domain beyond a majority of their team. That‚Äôs probably the safest way for a manager to define how to find a senior developer: quantify the average level of knowledge on their team, and seek somebody who is above that average.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#being-good-at-your-job-doesnt-make-you-senior"&gt;
  &lt;/a&gt;
  Being good at your job doesn‚Äôt make you senior
&lt;/h3&gt;

&lt;p&gt;Not everyone hired at a company can be a senior developer but that‚Äôs a good thing because you don‚Äôt want everybody to be at the high end of the spectrum. You need a team which is properly varied and has people with all levels of skills to fill in all the niches and gaps in your development process.&lt;/p&gt;

&lt;p&gt;Very often, companies just need someone who is good at React or proficient in TypeScript, able to adapt well to a team, understand a project, pick up tasks and implement them efficiently. That‚Äôs a good developer ‚Äî not a senior developer. Those are things that you would expect from any member of a team because that‚Äôs what you pay people for.&lt;/p&gt;

&lt;p&gt;I believe that when you‚Äôre looking for a senior developer, you should be evaluating well above average. Unfortunately, it seems many companies advertise for senior developers, in the hope that they will somehow filter out the noise and get the most talented people, simply because they made it clear they were searching for senior candidates.&lt;/p&gt;

&lt;p&gt;Of course every developer that shows up to an interview is going to say &lt;strong&gt;‚Äú&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;I am a senior developer, a god amongst men.‚Äù&lt;/em&gt;&lt;/strong&gt; Why? Because that‚Äôs what everyone wants to hear!&lt;/p&gt;

&lt;p&gt;That‚Äôs probably a reason why seemingly 90% of advertisements for developer positions are for seniors, while the reality is that on a team there are only a few seniors.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#experience-isnt-everything"&gt;
  &lt;/a&gt;
  Experience isn‚Äôt everything
&lt;/h3&gt;

&lt;p&gt;Though a year has gone ‚Äî and you, dear reader, find yourself with another year of experience ‚Äî that‚Äôs not an indication that you have magically become a senior developer. My belief that experience matters but is in no way an indicator of being a senior developer hasn‚Äôt changed. Let‚Äôs be honest, somebody can be a lazy bum for ten years and by sheer luck navigate through corporate realities and get away with it. As I said before:&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;&lt;em&gt;‚Äú10 years of JavaScript is just as good of an indicator of me being a senior programmer as 10 years jail time for armed robbery is an indicator of me being a law professor.‚Äù&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;Years of experience are needed, but I would never use them as the sole indicator of being a senior.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-are-we-today"&gt;
  &lt;/a&gt;
  Where are we today?
&lt;/h3&gt;

&lt;p&gt;Now that we have recapped, where are we today?&lt;/p&gt;

&lt;p&gt;The rise in remote work is changing the hiring landscape and the development process. Companies are beginning to shift more teams to &lt;a href="https://linearb.io/blog/asynchronous-development/"&gt;asynchronous development&lt;/a&gt; or hybrid models. These changes might be well-received by individuals but what will the long term impact be on hiring practices?&lt;/p&gt;

&lt;p&gt;It‚Äôs my opinion that companies are way too focused on the hottest frameworks, coolest tricks and fancy techniques, while forgetting the bigger picture, the concepts and principles behind software engineering and languages.&lt;/p&gt;

&lt;p&gt;In the interview process applicants will claim to be Angular senior developers because they have an understanding of how to set up Vuex state store or fetch data from REST service using Axios, but having no idea about observer pattern, how asynchronous JavaScript actually works and are ignorant about prototype inheritance.&lt;/p&gt;

&lt;p&gt;All these fancy things, they come and go very fast. But fundamental knowledge stays with us much longer, and if needed, allows us to learn all these transient frameworks, fads and fashions.&lt;/p&gt;

&lt;p&gt;Companies need to train themselves to filter out the noise. Don‚Äôt hire for passing fads. Look to hire developers with strong fundamentals because those are difficult to teach. If a candidate is good at something, even if it‚Äôs not the particular framework or language you are looking for, you should not dismiss them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-reallife-example"&gt;
  &lt;/a&gt;
  A real-life example
&lt;/h3&gt;

&lt;p&gt;When I arrived in Ireland, I began applying for jobs and got interviewed by two gentlemen who started grilling me at the whiteboard. At some point during the interview I interrupted and said, ‚ÄúGuys, I think you have the wrong person here. I came to Ireland with a background as a .NET with a specialty in C sharp.‚Äù They wanted someone proficient in Python and I had never worked with it professionally.&lt;/p&gt;

&lt;p&gt;What they said next completely blew me away:&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;&lt;em&gt;‚ÄúWe understand you don‚Äôt know much Python but we like your way of thinking, we see you are a brilliant C sharp programmer.‚Äù&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;Then they allowed me to take the test assignment for the interview in my preferred language of C sharp. Once I finished, they brought in a colleague from another floor who was a C sharp expert, he looked at my work, gave his approval, and they hired me on the spot.&lt;/p&gt;

&lt;p&gt;After about half a year, I was actually teaching Python to junior developers on the team.&lt;/p&gt;

&lt;p&gt;I was taken by this honest approach to logic and hiring. They recognized an expertise in me even if it wasn‚Äôt exactly what they were looking for.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#theres-no-replacing-good-fundamentals"&gt;
  &lt;/a&gt;
  There‚Äôs no replacing good fundamentals
&lt;/h3&gt;

&lt;p&gt;It‚Äôs possible that the past year, and the continued evolution it has brought to remote work and remote dev teams, has caused more companies to jump at the chance to hire senior developers who claim they are experienced just because they put ‚Äúmanaged remote dev teams for x years‚Äù on their resume.&lt;/p&gt;

&lt;p&gt;But when I watch events like this &lt;a href="https://devinterrupted.com/video/the-new-leaders-of-remote-engineering-panel/"&gt;remote engineering panel&lt;/a&gt;, it is my hope that more people in the industry are adequately identifying &lt;a href="https://dzone.com/articles/the-rise-and-fall-of-a-senior-developer-8"&gt;The True Senior Software Developers &lt;/a&gt;, by avoiding the pitfalls of buzzwords and fad languages to hire exceptional individuals.&lt;/p&gt;

&lt;p&gt;While the fads and fashions of 2021 won‚Äôt be around forever, good fundamentals aren‚Äôt going anywhere (remote work might not be either.) Stick to hiring principles with an emphasis on expertise, but avoid having so narrow a view as to overlook talented individuals, and remember to always give honest feedback.&lt;/p&gt;

&lt;p&gt;Not everyone is a senior developer, but if we‚Äôre honest with ourselves and our abilities, we can all take the steps to get there!&lt;/p&gt;

&lt;p&gt;If you‚Äôre interested in this topic, you can find more content like this on my blog at &lt;a href="https://letsdebug.it"&gt;https://letsdebug.it &lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Also consider checking out &lt;a href="https://open.spotify.com/show/7icMkauSvLflWCpQrfafIv?si=2N49oFDHQSWy1__PfdM8Rw&amp;amp;dl_branch=1"&gt;Dev Interrupted&lt;/a&gt;, a weekly podcast featuring a wide array of software engineering leaders and experts, exploring topics from dev team metrics to accelerating delivery.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you haven't already heard&lt;/strong&gt;, Dev Interrupted is partnering with Dzone to host &lt;strong&gt;INTERACT&lt;/strong&gt;: An interactive, community-driven, digital conference on September 30th - by engineering leaders, for engineering leaders. 1 day, 10 speakers, 100s of engineers and engineering leaders, all free.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2QYQCtGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/2400/0%2AnHzak-kDc0MzrG55.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2QYQCtGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/2400/0%2AnHzak-kDc0MzrG55.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#register-now"&gt;
  &lt;/a&gt;
  &lt;a href="https://devinterrupted.com/event/interact/"&gt;Register Now&lt;/a&gt;
&lt;/h1&gt;




&lt;h2&gt;
  &lt;a href="#join-the-dev-interrupted-community"&gt;
  &lt;/a&gt;
  Join the Dev Interrupted Community
&lt;/h2&gt;

&lt;p&gt;If you haven‚Äôt already joined the best developer discord out there, WYD?&lt;/p&gt;

&lt;p&gt;Look, I know we talk about it a lot but we love our developer discord community. With over 1600 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No salespeople allowed. &lt;a href="https://discord.gg/tpkmwM6c3g"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kVKeQRJY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uzfiwx02tx41bdz6sri8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kVKeQRJY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uzfiwx02tx41bdz6sri8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>hiring</category>
      <category>angular</category>
      <category>devops</category>
    </item>
    <item>
      <title>Ingl√™s de Entrevista</title>
      <author>Daniane P. Gomes</author>
      <pubDate>Wed, 08 Sep 2021 16:04:59 +0000</pubDate>
      <link>https://dev.to/danianepg/ingles-de-entrevista-18a9</link>
      <guid>https://dev.to/danianepg/ingles-de-entrevista-18a9</guid>
      <description>&lt;p&gt;&lt;em&gt;Imagem por &lt;a href="https://unsplash.com/@wocintechchat?utm_source=medium&amp;amp;utm_medium=referral"&gt;Cristina&lt;/a&gt;&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;"Passar em entrevistas √© uma &lt;em&gt;skill&lt;/em&gt;". &lt;/p&gt;

&lt;p&gt;Esse √© o mantra de um amigo que tem quase como hobby fazer entrevistas de emprego na TI.&lt;/p&gt;

&lt;p&gt;Falar com pessoas recrutadoras (ou com qualquer outro ser humano desconhecido) sempre me deixou nervosa, ansiosa e transpirante. Ainda mais quando as entrevistas n√£o s√£o feitas no meu idioma nativo. &lt;/p&gt;

&lt;p&gt;Nos √∫ltimos anos pude "gastar" o ingl√™s pois me expus a uma boa quantidade de entrevistas de emprego para pa√≠ses como Holanda/Pa√≠ses Baixos, Alemanha, Reino Unido e Portugal (sim, tamb√©m precisa falar ingl√™s para trabalhar em Portugal).&lt;/p&gt;

&lt;p&gt;E fato √© que quanto mais entrevistas fiz, melhor preparada me senti para as pr√≥ximas, pois notava que as perguntas come√ßavam a se repetir ou eram muito semelhantes.&lt;/p&gt;

&lt;p&gt;Com isso, deixo aqui um compilado de perguntas em ingl√™s comuns nas ditas "screening interviews": o primeiro contato (telefone ou reuni√£o presencial) com pessoas recrutadoras.  Adiciono uma breve explica√ß√£o do que suponho que √© esperado das recrutadoras e exemplos de poss√≠veis respostas. As quest√µes t√©cnicas e espec√≠ficas de cada tecnologia geralmente s√£o feitas s√≥ ap√≥s este primeiro contato e n√£o ser√£o abordadas (talvez num futuro pr√≥ximo).&lt;/p&gt;

&lt;p&gt;Dessa forma, √© poss√≠vel pensar nas respostas e "ensaiar" antes para se preparar e diminuir a ansiedade no momento de uma entrevista real.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-talk-about-yourself"&gt;
  &lt;/a&gt;
  1. "Talk about yourself"
&lt;/h3&gt;

&lt;p&gt;"Fale sobre voc√™".&lt;/p&gt;

&lt;p&gt;Fa√ßa um resumo sobre a sua carreira, destaque as coisas importantes que j√° realizou. N√£o √© comum na Europa as pessoas come√ßarem a trabalhar na √°rea antes de terminar a faculdade, ent√£o √© o momento de deixar claro se foi uma faculdade noturna por exemplo, pois pode gerar confus√£o para as pessoas recrutadoras o tempo de experi√™ncia que voc√™ diz ter.&lt;/p&gt;

&lt;p&gt;Exemplo: &lt;em&gt;I've been working as a Software Engineer for the past 18 years, mainly with Java and Spring framework. I took night classes during my time in University so I could work during the day. I'm Java 8 certified and I'm currently learning more about cloud providers such as AWS.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-describe-your-most-recent-projects"&gt;
  &lt;/a&gt;
  2. "Describe your most recent projects"
&lt;/h3&gt;

&lt;p&gt;"Descreva seus projetos mais recentes" &lt;/p&gt;

&lt;p&gt;Descreva vers√µes de linguagens, inclua &lt;em&gt;buzzwords&lt;/em&gt;, fale sobre o volume de dados e acessos da sua aplica√ß√£o. √â uma diferencial trabalhar com tecnologias recentes ou aplica√ß√µes que suportam grandes cargas de dados ou acessos. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;"I've developed from scratch a cloud-native application using Java, Spring Framework and Angular 11. The application had AWS as a cloud provider and many services such as Lambdas, RDS, ECS, etc, were used"&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-describe-your-dream-job"&gt;
  &lt;/a&gt;
  3. "Describe your dream job"
&lt;/h3&gt;

&lt;p&gt;"Descreva seu emprego dos sonhos".&lt;/p&gt;

&lt;p&gt;O que √© importante pra voc√™, as tecnologias que gostaria de trabalhar, o que te entusiasma. A recrutadora vai tentar entender se  a vaga combina com voc√™ e tentar te enquadrar em poss√≠veis vagas que possam surgir.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"I would like to work with state of the art technology: cloud native applications, with the programming languages I'm good at. It's important to me that we use the best practices know in the industry: solid pipeline and processes, code reviews, time for research, high test coverage, etc. I also want a good work-life balance and a healthy and diverse environment."&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-how-many-hours-per-week-do-you-spend-coding-how-long-do-you-spend-on-frontendbackend"&gt;
  &lt;/a&gt;
  4. "How many hours per week do you spend coding? How long do you spend on frontend/backend?"
&lt;/h3&gt;

&lt;p&gt;"Quantas horas por semana voc√™ passa codificando? Quanto tempo em frontend/backend".&lt;/p&gt;

&lt;p&gt;Essa √© uma pergunta bem simples e que n√£o tem "pegadinha", por√©m na primeira vez que perguntaram eu n√£o sabia exatamente. Precisei "calcular" durante a entrevista, o que me tirou um pouco o foco e me deixou nervosa. √â sempre bom ter essas informa√ß√µes de prontid√£o.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"I work mostly with backend, so roughly 24 hours with Java, 8 with Angular and the other 8 I spend in meetings, code reviews, etc"&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-why-do-you-want-to-live-in-the-netherlandsgermanyuk"&gt;
  &lt;/a&gt;
  5. "Why do you want to live in The Netherlands/Germany/UK?"
&lt;/h3&gt;

&lt;p&gt;"Por que voc√™ quer morar nos Pa√≠ses Baixos/Alemanha/Reino Unido?"&lt;/p&gt;

&lt;p&gt;Se voc√™ est√° tentando mudar de pa√≠s, essa pergunta vai aparecer. As recrutadoras querem entender seus motivos e se voc√™ conhece o pa√≠s para deseja ir. Querem evitar de deslocar voc√™ do outro lado do mundo, pagar as despesas e no primeiro mes ter decep√ß√µes e querer voltar. Pense nos seus motivos - n√£o tem certo ou errado - e expresse-os.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"I want to live in The Netherlands because it's a country that not only accepts but embraces diversity. The Netherlands has a history of tolerance and it seems to be very open-minded both legally and culturally, which matches my own values. And yes, I'm aware of the weather."&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Perceba aqui que usei &lt;strong&gt;"I want"&lt;/strong&gt; e n√£o &lt;strong&gt;"I would like"&lt;/strong&gt; pra refor√ßar o efeito de certeza do que quero.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-do-you-have-any-experience-as-a-leader"&gt;
  &lt;/a&gt;
  6. "Do you have any experience as a leader?"
&lt;/h3&gt;

&lt;p&gt;"Voc√™ tem alguma experi√™ncia como l√≠der?"&lt;/p&gt;

&lt;p&gt;Experi√™ncias de lideran√ßa geralmente s√£o esperadas em posi√ß√µes mais s√™nior. Mesmo que voc√™ n√£o esteja se canditando a Team/Tech Lead a empresa quer saber se voc√™ tem esse potencial e como se sente nessa posi√ß√£o.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"When we have interns I'm responsible for mentoring them and offer them the support needed to perform their activities."&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-what-is-your-salary-expectation"&gt;
  &lt;/a&gt;
  7. "What is your salary expectation?"
&lt;/h3&gt;

&lt;p&gt;"Qual sua expectativa salarial?"&lt;/p&gt;

&lt;p&gt;Acredito que a inten√ß√£o √© saber se a pessoa est√° informada sobre os valores pagos pelo mercado e verificar se as expectativas est√£o de acordo com o que a empresa pode pagar. √â claro que todo mundo quer pedir 400k por ano pra trabalhar remoto mais benef√≠cios, mas √© importante pedir valores de acordo com a experi√™ncia e faixa salarial de mercado para ser levade a s√©rio. O &lt;a href="https://www.glassdoor.nl/Salaries/index.htm?countryRedirect=true"&gt;Glassdor&lt;/a&gt; ajuda ter uma boa ideia sobre o assunto.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"I've seen the market value is around x to y. With my experience I believe it's fair to ask for y"&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-tell-me-about-the-weaknesses-you-think-you-have-in-your-cv"&gt;
  &lt;/a&gt;
  8. "Tell me about the weaknesses you think you have in your CV"
&lt;/h3&gt;

&lt;p&gt;"Me fale sobre os pontos fracos que voc√™ acha que tem no seu curr√≠culo"&lt;/p&gt;

&lt;p&gt;N√£o precisa maquiar os defeitos. Pode falar das inseguran√ßas! Se a empresa n√£o for uma usina nuclear de t√≥xica, eles v√£o entender que procuram profissionais com potencial e n√£o a perfei√ß√£o na terra.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"I'm often very insecure about my general knowledge. I have many years of experience and yet there are things I don't know because I've never worked with. I would like to be more comfortable with NoSQL and more programming languages other than Java."&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-how-do-you-keep-yourself-up-to-date"&gt;
  &lt;/a&gt;
  9. "How do you keep yourself up to date?"
&lt;/h3&gt;

&lt;p&gt;"Como voc√™ se mant√©m atualizado"&lt;/p&gt;

&lt;p&gt;√â hora de fazer propaganda daqueles cursos online que voc√™ posta na sua timeline do Linkedin e mostrar que a busca por conhecimento n√£o parou depois do "hello world".&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"I try to attend every Java meetup, I just complete another AWS training and I'm preparing for the xyz certification".&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-why-are-you-a-good-fit-for-this-position"&gt;
  &lt;/a&gt;
  10. "Why are you a good fit for this position?"
&lt;/h3&gt;

&lt;p&gt;"Por que voc√™ acha que √© adequado para essa vaga?"&lt;/p&gt;

&lt;p&gt;N√£o √© o momento de ser humilde! Tamb√©m n√£o √© o momento de ser mentiroso. Pense no que voc√™ √© bom e deixe a recrutadora saber.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"I have good knowledge and experience, so I can deliver the tasks fast. I'm not an asshole, so the team will enjoy working with me. I'm creative, so I can bring different perspectives to your business. And even after all these years I still have the passion. Give me a healthy, fair environment and room to learn that I'm sure we will be a good match."&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Essas s√£o as perguntas que pude lembrar. √â importante deixar claro que as respostas s√£o baseadas em exemplos reais e formuladas da forma que &lt;strong&gt;eu&lt;/strong&gt; acredito ser a melhor para comunicar meu trabalho. N√£o se trata de uma receita de sucesso ou caga√ß√£o de regra: s√£o apenas exemplos para inspirar o exerc√≠cio de reflex√£o nas duas pessoas que v√£o me ler (e pra mim tamb√©m, que vou voltar aqui quando estiver buscando novo emprego). &lt;/p&gt;

&lt;p&gt;:)&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Python lazy loading of an attribute</title>
      <author>Tib</author>
      <pubDate>Wed, 08 Sep 2021 16:04:07 +0000</pubDate>
      <link>https://dev.to/thibaultduponchelle/python-lazy-loading-of-an-attribute-aij</link>
      <guid>https://dev.to/thibaultduponchelle/python-lazy-loading-of-an-attribute-aij</guid>
      <description>&lt;p&gt;&lt;em&gt;(Image from &lt;a href="https://unsplash.com/@a_d_s_w"&gt;Adrian Swancar&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It's not something complex but it's very useful anyway to do not wait or stress your infrastructure... for nothing!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lazy-loading-and-caching-of-an-attribute"&gt;
  &lt;/a&gt;
  Lazy loading (and caching) of an attribute
&lt;/h2&gt;

&lt;p&gt;The idea is to have an empty attribute that will get its value only when accessed the first time. To illustrate, I used a class &lt;strong&gt;Gift&lt;/strong&gt; with an attribute &lt;strong&gt;price&lt;/strong&gt; that is slow to compute:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Gift&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;_price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;what&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;what&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;what&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;costly_computation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Costly computation"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="nb"&gt;property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;price&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;costly_computation&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_price&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The costly computation will only affect when accessing the attribute, and it will happen only one time (first access) üòÉ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#see-it-in-action"&gt;
  &lt;/a&gt;
  See it in action
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; from gift import *
&amp;gt;&amp;gt;&amp;gt; g = Gift("Sunglasses")
&amp;gt;&amp;gt;&amp;gt; g.price
Costly computation
# ...
# ... freezes a bit
# ...
10
&amp;gt;&amp;gt;&amp;gt; g.price
10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's all üòô&lt;/p&gt;

</description>
      <category>python</category>
    </item>
    <item>
      <title>Key Ways to Build a Q&amp;A Website</title>
      <author>Codica</author>
      <pubDate>Wed, 08 Sep 2021 15:52:01 +0000</pubDate>
      <link>https://dev.to/codicacom/key-ways-to-build-a-q-a-website-192d</link>
      <guid>https://dev.to/codicacom/key-ways-to-build-a-q-a-website-192d</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was originally posted on &lt;a href="https://www.codica.com/blog/how-to-build-question-and-answer-website/"&gt;Codica Blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A question within socials is likely to start the debate that will go on and on with a little pay-off. Luckily, there are websites to ask questions that can save you a huge amount of time.&lt;/p&gt;

&lt;p&gt;To stay in the game, Q&amp;amp;A websites have qualities that other research tools don‚Äôt.&lt;/p&gt;

&lt;p&gt;What are those? Read our text below to find out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q&amp;amp;A platforms overview&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To put it short, a question and answer website is an online platform that serves as a knowledge repository driven by user-written topics. Unlike socials, it should provide the most accurate answer in return for a higher rating.&lt;/p&gt;

&lt;p&gt;Practically, the most upvoted comment lets readers know that the problem is solved. So now, let's dive a bit deeper into the peculiarities of question and answer websites:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Evergreen content&lt;/strong&gt;
The content on Q&amp;amp;A websites remains continually relevant, regardless of passing time. Backlinko &lt;a href="https://backlinko.com/evergreen-content-study"&gt;found&lt;/a&gt; that a post on Reddit is far more likely to become evergreen when compared to other platforms.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NVCdzXM1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0oe7repo42xxbo9n34vn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NVCdzXM1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0oe7repo42xxbo9n34vn.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even if users deactivate their Reddit or Quora accounts, their content remains live. However, future visitors won't see who it came from.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Accurate answers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The purpose of Q&amp;amp;A websites is to solve problems, not voice opinions. So If your answer is unreadable or unhelpful, an algorithm will likely filter it out.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Acting anonymously&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are many reasons people stay anonymous. Mostly they don't feel right about asking particular questions openly. But others would like to talk privately about what goes on behind closed doors.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fan engagement&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Willing to spend time involved with beloved celebs are closely related to Internet activity. For example, with &lt;a href="https://play.google.com/store/apps/details?id=com.google.android.apps.cameos&amp;amp;hl=uk&amp;amp;gl=US"&gt;Cameos on Google&lt;/a&gt; well-known people can see questions Google users would like to ask. Once a question is chosen, a user can reply by recording themselves on video.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Marketing tool&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Users ask questions trying to find a solution to all kinds of issues. Therefore, a business will likely find its potential clients and identify how to help them.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Unreal names and bios&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fake profiles are a drawback of any platform that involves user-generated content. For a limited number of people, you can use checkmarks. On Quora, they are available for high-profile writers and public figures as you see below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PxUNAnsn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yegwzpd7utr9s4lacji6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PxUNAnsn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yegwzpd7utr9s4lacji6.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Building a Q&amp;amp;A platform: a step-by-step guide&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Functionality a question and answer website needs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Registration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Apart from email sign-up, allow visitors to register via Google or Facebook accounts.&lt;/p&gt;

&lt;p&gt;Ask a user to pick topics they'd like to contribute to or know more about. Enable them to edit subscriptions anytime like on Quora:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DmlJR7Mv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07cwaoogyj7rmxh575fm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DmlJR7Mv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07cwaoogyj7rmxh575fm.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Search&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Allow visitors to find information by keywords narrowing the results with topics.&lt;/p&gt;

&lt;p&gt;Build a predictive search functionality ‚Äî autosuggestions that pop up once you start typing. If a question already exists, you'd easily check the answers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_Bno500P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/805d7r247na116dnxzvs.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Bno500P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/805d7r247na116dnxzvs.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Activity feed&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Make two feeds for different types of content:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Recent activities&lt;/strong&gt; for questions that are trending.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Subscriptions for&lt;/strong&gt; those question categories or people you follow.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let users scroll content filtered by date range and users who wrote certain keywords.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Posting a question&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Add a preview layer for potentially irreversible actions such as question posting. Prevent users from altering the meaning of their texts afterward.&lt;/p&gt;

&lt;p&gt;Before hitting "Submit," allow them to attach imagery or set a current mood emoji.&lt;/p&gt;

&lt;p&gt;There are several ways of making  a question slightly more entertaining:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;A poll.&lt;/strong&gt; Select the most suitable answer.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Checkbox.&lt;/strong&gt; Choose several possible answers. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Image poll.&lt;/strong&gt; Pick images from the list.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Dropdown.&lt;/strong&gt; Choose an option based on your previous answer.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Submitting answers&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let registered users post their suggestions on a question page in the comment section.&lt;/p&gt;

&lt;p&gt;As a side note, building hyperlinks is a good way to show where the information originally comes from.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Profile&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let users follow each other. A profile may display a short bio, the activity within a website, and topics a person is subscribed to.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ranks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let readers vote or downvote answers by selecting thumbs up/down. Since reputation points act as a scoreboard, the most upvoted answer will become visible on top of a comment section.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Business models used on websites to ask questions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Donation.&lt;/strong&gt; The community can be grateful for your project and improve it with money. Make it easier by integrating &lt;a href="https://www.codica.com/blog/best-payment-solutions-for-online-marketplaces/"&gt;popular gateways&lt;/a&gt; like PayPal, Stripe, and Dwolla.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Profile upgrades.&lt;/strong&gt; Make question pages customizable with mood status, extra images attachment, dropdown questions, etc. For instance, joining &lt;a href="https://www.reddit.com/premium"&gt;Reddit Premium&lt;/a&gt; gives you ad-free and more unique usage in return for a monthly payment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Self-service ad platform.&lt;/strong&gt; Enable users to run ads and view analytics by accessing a self-service toolset. With &lt;a href="https://q.quoraforbusiness.com/business"&gt;ads on Quora&lt;/a&gt;, for example, you can initiate promotion of any type:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ib-FsoAE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r0ac64asuwinf80pkiie.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ib-FsoAE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r0ac64asuwinf80pkiie.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ready-made vs. custom solution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When it comes to the development approach, you have next options to choose from: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Ready-made solutions;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.codica.com/services/custom-software-development/"&gt;Custom software development&lt;/a&gt;. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are many solutions to launch your Q&amp;amp;A website quickly, without coding from your side. Besides, out-of-the-box solutions are noted for their cost-effectiveness and integration with third-party platforms.&lt;/p&gt;

&lt;p&gt;Custom development, in its turn, can be pricey. However, it offers undeniable benefits that will reduce costs in the long run. You can also expect higher data protection and there's no need for license fees.&lt;/p&gt;

&lt;p&gt;In time, you will need to scale your business to stay afloat. And fortunately, custom software will enable a set of functions tailored to your business needs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Internet helps bring many's concerns to light. A Q&amp;amp;A platform, in its turn, can find you a solution to a problem. On top of that, the quality of the content is valued far more than the speed at which the information shares.&lt;/p&gt;

&lt;p&gt;To see more statistics and insights about Q&amp;amp;A platforms, check our full article: Question and Answer Website Development: Functionality and Best Practices.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>custom</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>‚ö° Must read Tech news/tools of the day - Digest #8</title>
      <author>Hackertab üñ•Ô∏è</author>
      <pubDate>Wed, 08 Sep 2021 15:36:51 +0000</pubDate>
      <link>https://dev.to/hackertab/must-read-tech-news-tools-of-the-day-digest-8-p07</link>
      <guid>https://dev.to/hackertab/must-read-tech-news-tools-of-the-day-digest-8-p07</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DJyfm8Xt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/kVzXltq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DJyfm8Xt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/kVzXltq.png" alt="articleImg"&gt;&lt;/a&gt;Each day we handpick the best web content across different websites eg: Hackernews, Github, Reddit... to help you stay updated with the hottest trends!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#level-up-your-skills-with-these-github-repositories"&gt;
  &lt;/a&gt;
  Level up your üöÄ skills with these Github repositories:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bHVT2yX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://www.prodapt.com/wp-content/uploads/github.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bHVT2yX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://www.prodapt.com/wp-content/uploads/github.png" alt="Github"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  üìô &lt;a href="https://github.com/TheAlgorithms/Python"&gt;Python&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;üë§ TheAlgorithms | ‚≠ê +117,148 stars All Algorithms implemented in Python&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mlforbeginners"&gt;
  &lt;/a&gt;
  üìô &lt;a href="https://github.com/microsoft/ML-For-Beginners"&gt;ML-For-Beginners&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;üë§ microsoft | ‚≠ê +17,717 stars 12 weeks, 25 lessons, 50 quizzes, classic Machine Learning for all&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#age"&gt;
  &lt;/a&gt;
  üìô &lt;a href="https://github.com/FiloSottile/age"&gt;age&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;üë§ FiloSottile | ‚≠ê +7,808 stars A simple, modern and secure encryption tool (and Go library) with small explicit keys, no config options, and UNIX-style composability.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#hottest-devto-posts-"&gt;
  &lt;/a&gt;
  üéâ üî• Hottest Devto posts :
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#single-page-application-quiz-in-react"&gt;
  &lt;/a&gt;
  üìù &lt;a href="https://dev.to/godspowercuche/single-page-application-quiz-in-react-3k9p-temp-slug-5390722"&gt;Single Page Application Quiz in React&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;üë§ ShubhamTiwari909 | üëç +31 reactions &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uYViZZ9a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--WzZNbWxW--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fonn8jeaktu9i8idei2i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uYViZZ9a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--WzZNbWxW--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fonn8jeaktu9i8idei2i.png" alt=""&gt;&lt;/a&gt;Hello Guys Today i am going to show you how to create a single page application quiz in react. Hope...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#15-web-developer-interview-questions"&gt;
  &lt;/a&gt;
  üìù &lt;a href="https://dev.to/godspowercuche/15-web-developer-interview-questions-5111-temp-slug-5884585"&gt;15 web developer interview questions...&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;üë§ YusufAdel | üëç +30 reactions &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PrHniaMV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.hackertab.dev/null" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PrHniaMV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.hackertab.dev/null" alt=""&gt;&lt;/a&gt;Advanced Interview Questions The following will cover the senior web developer interview...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tell-me-about-a-time-you-had-to-learn-something-quickly-facebook-behavioral-interview-jedi-series"&gt;
  &lt;/a&gt;
  üìù &lt;a href="https://dev.to/godspowercuche/tell-me-about-a-time-you-had-to-learn-something-quickly-facebook-behavioral-interview-jedi-series-1klb-temp-slug-6810045"&gt;‚úÖ Tell Me About A Time You Had To Learn Something Quickly | Facebook Behavioral Interview (Jedi) Series üî•&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;üë§ The Interview Sage | üëç +28 reactions &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ELhxieLP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--g3AxC5vM--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j90znnz9cecnttoh0nki.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ELhxieLP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--g3AxC5vM--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j90znnz9cecnttoh0nki.png" alt=""&gt;&lt;/a&gt;Before we discuss this question, let us recap what the Behavioral Interview Round at Facebook...&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#keep-an-eye-on-these-cool-products-too"&gt;
  &lt;/a&gt;
  üëÄ Keep an eye on these cool products too:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#leaksid"&gt;
  &lt;/a&gt;
  üîß &lt;a href="https://www.producthunt.com/posts/leaksid?utm_campaign=producthunt-api&amp;amp;utm_medium=api-v2&amp;amp;utm_source=Application%3A+Hackertab+%28ID%3A+42881%29"&gt;LeaksID&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;üî∫ +173 | üí¨ +156 Enrich private docs with dynamic invisible anti-leak marks &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SIaG-w4m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://ph-files.imgix.net/a2e440cb-6de5-4c91-be10-961e2e5cbe62.gif%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SIaG-w4m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://ph-files.imgix.net/a2e440cb-6de5-4c91-be10-961e2e5cbe62.gif%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" alt="LeaksID"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flomo"&gt;
  &lt;/a&gt;
  üîß &lt;a href="https://www.producthunt.com/posts/flomo-5b7b6b01-32ba-43f8-a5df-59f07f5a6ae8?utm_campaign=producthunt-api&amp;amp;utm_medium=api-v2&amp;amp;utm_source=Application%3A+Hackertab+%28ID%3A+42881%29"&gt;flomo&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;üî∫ +899 | üí¨ +105 The minimal memo taking tool to empower better thinking &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kpzG3CwW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ph-files.imgix.net/67f68d5f-3e5f-41fa-bbfe-86bc151b2ebf.png%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kpzG3CwW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ph-files.imgix.net/67f68d5f-3e5f-41fa-bbfe-86bc151b2ebf.png%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" alt="flomo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#meisternote"&gt;
  &lt;/a&gt;
  üîß &lt;a href="https://www.producthunt.com/posts/meisternote?utm_campaign=producthunt-api&amp;amp;utm_medium=api-v2&amp;amp;utm_source=Application%3A+Hackertab+%28ID%3A+42881%29"&gt;MeisterNote&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;üî∫ +150 | üí¨ +67 Stunning online documentation - write, organize, collaborate &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7fI_Lxjj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://ph-files.imgix.net/75ea9d7b-d3fd-4373-882f-52756b97c01b.gif%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7fI_Lxjj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://ph-files.imgix.net/75ea9d7b-d3fd-4373-882f-52756b97c01b.gif%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" alt="MeisterNote"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;üôå Wrap Up! That was all for this week.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#follow-hackertab-on-twitter-for-more-tips-hackertabdev"&gt;
  &lt;/a&gt;
  Follow Hackertab on Twitter for more tips: @hackertabdev
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L6HrjVwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/sYGs3ep.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L6HrjVwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/sYGs3ep.png" alt="Hackertab"&gt;&lt;/a&gt;&lt;a href="https://hackertab.dev"&gt;Hackertab&lt;/a&gt; turns your New Tab page into a geeky one that keeps you as a developer updated with the best tools, news, jobs and events.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Python challenge_4</title>
      <author>Mahmoud EL-kariouny</author>
      <pubDate>Wed, 08 Sep 2021 15:36:01 +0000</pubDate>
      <link>https://dev.to/mahmoudessa/python-challenge4-310f</link>
      <guid>https://dev.to/mahmoudessa/python-challenge4-310f</guid>
      <description>&lt;h2&gt;
  &lt;a href="#type-check"&gt;
  &lt;/a&gt;
  Type check
&lt;/h2&gt;

&lt;p&gt;level of challenge = 2/10&lt;/p&gt;

&lt;p&gt;Write a function named only_ints that takes two parameters.&lt;/p&gt;

&lt;p&gt;Your function should return True if both parameters are integers, and False otherwise.&lt;/p&gt;

&lt;p&gt;For example, calling only_ints(1, 2) should return True, while calling only_ints("a", 1) should return False.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#my-solution"&gt;
  &lt;/a&gt;
  My solution
&lt;/h4&gt;

&lt;p&gt;def only_ints(num_1, num_2):&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if type(num_1) == int and type(num_2) == int:
    return True
else: 
    return False
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;print(only_ints("tito", 2)) &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#another-solution"&gt;
  &lt;/a&gt;
  Another solution
&lt;/h4&gt;

&lt;p&gt;def only_ints(a, b):&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;return type(a) == int and type(b) == int
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>python</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
