<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Technical Leadership: Beyond Problem Solving w/ Pat Kua</title>
      <author>Conor Bronsdon</author>
      <pubDate>Thu, 08 Jul 2021 19:26:50 +0000</pubDate>
      <link>https://dev.to/linearb/technical-leadership-beyond-problem-solving-w-pat-kua-2222</link>
      <guid>https://dev.to/linearb/technical-leadership-beyond-problem-solving-w-pat-kua-2222</guid>
      <description>&lt;p&gt;The skills you use as a software engineer and the skills you need as a technical team leader are not the same. &lt;/p&gt;

&lt;p&gt;This week on &lt;a href="https://devinterrupted.com/podcast/technical-leadership-beyond-problem-solving/"&gt;Dev Interrupted&lt;/a&gt; Pat Kua, a former CTO turned engineering-leadership-coach, speaker and author, walks us through techniques to overcome the unique challenges that engineers face when taking on a leadership role.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#listen-to-the-full-episode"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Listen to the full episode&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/2mWD7WZ0DtLmYeWNCTpjfV"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Episode Highlights include:&lt;/strong&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;How to identify team multipliers&lt;/li&gt;
&lt;li&gt;How to know if youâ€™re doing a good job&lt;/li&gt;
&lt;li&gt;The different skills you need to be a great technical leader&lt;/li&gt;
&lt;li&gt;Tactics for staying focused on your goals and saying no to meeting requests&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#join-the-dev-interrupted-discord-server"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Join the Dev Interrupted Discord Server&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With over 1200 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.gg/tpkmwM6c3g"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" alt="Join the Dev Interrupted Discord Community!"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>leadership</category>
      <category>management</category>
      <category>culture</category>
      <category>programming</category>
    </item>
    <item>
      <title>Practice what's new in Java</title>
      <author>Jean-Michel Fayard ðŸ‡«ðŸ‡·ðŸ‡©ðŸ‡ªðŸ‡¬ðŸ‡§ðŸ‡ªðŸ‡¸ðŸ‡¨ðŸ‡´</author>
      <pubDate>Thu, 08 Jul 2021 19:18:04 +0000</pubDate>
      <link>https://dev.to/jmfayard/practice-what-s-new-in-java-1j09</link>
      <guid>https://dev.to/jmfayard/practice-what-s-new-in-java-1j09</guid>
      <description>&lt;p&gt;You have read about the new features that have arrived in Java world but didn't have the opportunity to learn them yet? I have a challenge for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-new-in-java-world"&gt;
  &lt;/a&gt;
  What's new in Java world
&lt;/h2&gt;

&lt;p&gt;I won't describe what's new in Java world because this article is hard to surpass:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/awwsmm" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Oj_t1Q27--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--15KZDeA3--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/101393/56bf0c89-b8ca-4157-9c3b-79031045a21f.png" alt="awwsmm"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/awwsmm/20-reasons-to-move-on-from-java-8-1dio" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;20 Reasons to Move On from Java 8&lt;/h2&gt;
      &lt;h3&gt;Andrew (he/him) ãƒ» Nov 23 '19 ãƒ» 31 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#java&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#news&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#how-to-practice-it"&gt;
  &lt;/a&gt;
  How to practice it?
&lt;/h2&gt;

&lt;p&gt;But reading about what's new is not enough.&lt;/p&gt;

&lt;p&gt;Alas, your project at work may be stuck with Java 11 or even Java 8.&lt;/p&gt;

&lt;p&gt;In a previous article, I shared the tip that if you want to learn more about a programming language - or here its evolution - you should write unit tests about them.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/jmfayard" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NjlhV-kq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--oLH1L0EP--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/17066/64e291f5-65fd-452a-88d9-a2f0c071f807.jpg" alt="jmfayard"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/jmfayard/unit-test-your-knowledge-13j" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Unit test your learning  ðŸ’¡ &lt;/h2&gt;
      &lt;h3&gt;Jean-Michel Fayard ðŸ‡«ðŸ‡·ðŸ‡©ðŸ‡ªðŸ‡¬ðŸ‡§ðŸ‡ªðŸ‡¸ðŸ‡¨ðŸ‡´ ãƒ» May 28 ãƒ» 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;This is exactly what I've started to do here:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/jmfayard"&gt;
        jmfayard
      &lt;/a&gt; / &lt;a href="https://github.com/jmfayard/java16-playground"&gt;
        java16-playground
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Life is too short for Java 8
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
java16-playground&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Life is too short for Java 8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Playground project demonstrating the new features from Java 8 to Java 16&lt;/p&gt;
&lt;p&gt;See article: &lt;a href="https://dev.to/jmfayard/practice-what-s-new-in-java-1j09" rel="nofollow"&gt;Practice what's new in Java&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Contributions welcome, &lt;a href="https://github.com/jmfayard/java16-playground/issues"&gt;see open issues&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Reference: &lt;a href="https://dev.to/awwsmm/20-reasons-to-move-on-from-java-8-1dio" rel="nofollow"&gt;https://dev.to/awwsmm/20-reasons-to-move-on-from-java-8-1dio&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/jmfayard/java16-playground"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;If you look in the &lt;strong&gt;src/main/test&lt;/strong&gt; folder, you will find snippets like this one:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RecordJava14&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="nf"&gt;Employee&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;department&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Test&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;createRecord&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;patrik&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Employee&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Patrick"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Marketing"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;assertThat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;patrik&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;()).&lt;/span&gt;&lt;span class="na"&gt;isEqualTo&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Employee[name=Patrick, age=36, department=Marketing]"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;assertThat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;patrik&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;()).&lt;/span&gt;&lt;span class="na"&gt;isEqualTo&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Patrick"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Employee&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Patrick"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Marketing"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;assertThat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clone&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;isEqualTo&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;patrik&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This gives you a view of the features of modern Java that are already covered:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mkMM-uRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/124977195-7e7b6480-e030-11eb-9920-cc7cbf9fcfab.png" class="article-body-image-wrapper"&gt;&lt;img alt="java16-playground_â€“_README_md__java16-playground_" src="https://res.cloudinary.com/practicaldev/image/fetch/s--mkMM-uRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/124977195-7e7b6480-e030-11eb-9920-cc7cbf9fcfab.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#your-challenge"&gt;
  &lt;/a&gt;
  Your challenge
&lt;/h2&gt;

&lt;p&gt;If you want to learn more about modern Java, I challenge you to pick one of the remaining issues and implement it. &lt;/p&gt;

&lt;p&gt;â€‹ &lt;a href="https://github.com/jmfayard/java16-playground/issues"&gt;https://github.com/jmfayard/java16-playground/issues&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(of course, you can also create a new issue)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mlrRWmK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/124977238-8a672680-e030-11eb-9b46-1cf87c497170.png" class="article-body-image-wrapper"&gt;&lt;img alt="Issues_Â·_jmfayard_java16-playground" src="https://res.cloudinary.com/practicaldev/image/fetch/s--mlrRWmK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459464/124977238-8a672680-e030-11eb-9b46-1cf87c497170.png"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Topological sort</title>
      <author>Ricardo Borges</author>
      <pubDate>Thu, 08 Jul 2021 18:52:01 +0000</pubDate>
      <link>https://dev.to/ricardo_borges/topological-sort-16gg</link>
      <guid>https://dev.to/ricardo_borges/topological-sort-16gg</guid>
      <description>&lt;p&gt;Topological sort is an ordering of the vertices of a directed acyclic graph, in a way that if there is an edge from a vertex A to B, then A comes before B. For example, let's say there is a set of projects and some of them depend on other projects:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3O_rfP60--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dje4crtui/image/upload/v1625769510/data%2520structures/top_sort_q7iaub.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3O_rfP60--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dje4crtui/image/upload/v1625769510/data%2520structures/top_sort_q7iaub.png" alt="graph"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this example project B and C depends on project A, and project D depends on projects B and C. Therefore, project A must be executed first, then projects B and C, and finally project D. Resulting in this order: [A, B, C, D] or [A, C, B, D].&lt;/p&gt;

&lt;p&gt;Note that we start from node A because it doesn't have dependencies and repeat it, that is after A is done, B and C haven't dependencies anymore, so we can choose either one to be the next. That's why this algorithm works only on acyclic graphs.&lt;/p&gt;

&lt;p&gt;We can use a modified depth-first search for this algorithm, &lt;a href="https://ricardoborges.dev/data-structures-in-typescript-graph"&gt;here I talk more about DPS&lt;/a&gt;. The steps are the following:&lt;/p&gt;

&lt;p&gt;1 - For every unvisited node visit it and its adjacent nodes (DPS)&lt;br&gt;
2 - After visiting a node and its adjacent add it at the beginning of a list (you can use a stack instead), this list will be in the topological order.&lt;/p&gt;

&lt;p&gt;Here's an implementation in TypeScript, I'm using &lt;a href="https://ricardoborges.dev/data-structures-in-typescript-graph"&gt;this implementation of a graph&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;topSort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;visited&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;order&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// set node as visited&lt;/span&gt;
  &lt;span class="nx"&gt;visited&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// for each of node's unvisited adjacent call topSort&lt;/span&gt;
  &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;adjacent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;visited&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;topSort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;visited&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;order&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="c1"&gt;// add node at the beginning of the order list&lt;/span&gt;
  &lt;span class="nx"&gt;order&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unshift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// topological order list&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="c1"&gt;// map to keep track of visited nodes&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;visited&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// For every unvisited node visit it and its adjacent nodes&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;entry&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;graph&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;visited&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;topSort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;visited&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;order&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are other problems that topological sorting can resolve, like the order that courses have to be selected during college, since they may have other courses as a prerequisite. Or even the order of steps of a recipe, in which some must be taken before others.&lt;/p&gt;

&lt;p&gt;There are a lot of explanations for this algorithm on the internet, here I tried to explain it in a little different way, I hope this helped you to make sense of it or if you haven't heard about topological sorting before, at least this may be an introduction of it.&lt;/p&gt;

</description>
      <category>graph</category>
      <category>typescript</category>
      <category>algorithms</category>
      <category>datastructures</category>
    </item>
    <item>
      <title>Top 7 hidden features in Microsoft edge</title>
      <author>Ziddah Edem</author>
      <pubDate>Thu, 08 Jul 2021 18:37:55 +0000</pubDate>
      <link>https://dev.to/ziddahedem/top-7-hidden-features-in-microsoft-edge-3fc8</link>
      <guid>https://dev.to/ziddahedem/top-7-hidden-features-in-microsoft-edge-3fc8</guid>
      <description>&lt;p&gt;Are you stuck with Mozilla firefox and Chrome? You may have given up on Microsoft web browsers after the bad experiencing of Internet Explorer, the ultimate rubbish that drove many people to alternatives like Google Chrome and Mozilla Firefox.&lt;/p&gt;

&lt;p&gt;Checkout the full article &lt;a href="https://www.wpcodevo.com/blogs/top-7-hidden-features-in-microsoft-edge"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now hear me out. In this day and age, Microsoft Edge is packed with a lot of features that can help ease your everyday life on the internet. When I say a lot of features doesnâ€™t mean poor performance. Even though Microsoft Edge has so many features compared to its counterpart, its performance is a no brainer.&lt;/p&gt;

&lt;p&gt;Rather than upgrading Internet Explorer, Microsoft decided to build Edge from scratch. Though some of its features are borrowed from other popular web browsers like Chrome and Mozilla Firefox,  it has a few unique features as well. It was initially launched in 2015 with Windows 10 but was rebuilt four years later using the same open-source Chromium code that Google Chrome uses.&lt;/p&gt;

&lt;p&gt;If downloading Chrome or Firefox is the first thing you do on your new computer, Iâ€™m going to give you a few convincing reasons why you must stick with Microsoft Edge since itâ€™s comes pre-installed with Windows.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-organize-your-research-or-information-with-collections"&gt;
  &lt;/a&gt;
  1. Organize your research or Information with Collections
&lt;/h2&gt;

&lt;p&gt;Collections allow you to easily collect information from different websites, organize it, export it into various files or just come back to your research at a later time and pick up right where you left off.  Today it can be difficult to do this â€“ especially across a large number of different websites and multiple devices.&lt;/p&gt;

&lt;p&gt;In order to access the collection feature, you can use &lt;strong&gt;ctrl&lt;/strong&gt; + &lt;strong&gt;shift&lt;/strong&gt; + Y or click on the button at the right corner.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6YexDgS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/djcpnkwcz59rqyuw34cb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6YexDgS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/djcpnkwcz59rqyuw34cb.png" alt="Microsoft Edge Collection"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In my case, I donâ€™t have any collections yet, you might also have the same empty collection. Now the first thing you must do is to rename the new collection to any name of your choice.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rIDTDbof--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9gtwrwov4lp470znz2co.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rIDTDbof--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9gtwrwov4lp470znz2co.png" alt="Microsoft Edge Collection"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can now easily add any website to your collection once you are on any website by clicking on add current page or add the links of the website by dragging them over to the collection area and they will automatically be added to your collection.&lt;/p&gt;

&lt;p&gt;Letâ€™s say you are on a website and you find a list of highlighted text you want to keep somewhere for future reference. You can simply highlight the text and drag it to your collection and it will be added to your collection.&lt;/p&gt;

&lt;p&gt;You can also add an image that may be of a place you would want to visit by dragging it to your collection.&lt;/p&gt;

&lt;p&gt;To delete something from the collection, right-click on the item and click delete. You can also rearrange the items in the collection by dragging them to your preferred position.&lt;/p&gt;

&lt;p&gt;You can create as many collections for different topics as you want by clicking the back button on your current collection and select start new collection.&lt;/p&gt;

&lt;p&gt;There are a couple of hidden features in the collection. When you click on the three dots in your currently open collection, you can export and send your collection to Exel, OneNote, Word and even Pinterest.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vQQdMXem--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4pbmn9vg42zd83d3760r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vQQdMXem--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4pbmn9vg42zd83d3760r.png" alt="Microsoft Edge Collections"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#read-and-annotate-pdf-files"&gt;
  &lt;/a&gt;
  Read and Annotate PDF Files
&lt;/h2&gt;

&lt;p&gt;Just like many other browsers, Microsoft Edge comes with a built-in PDF reader but with Edge, you can also annotate the PDF files with ink and highlighting.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OmwqsMLe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sfv45nnahm2puyoeriwb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OmwqsMLe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sfv45nnahm2puyoeriwb.png" alt="Microsoft PDF reader"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With read aloud, you can let Edge read the document to you. This works for all true PDFs but not for scanned  PDFs. In the Beta version of Edge, you can select different natural voices but they will be available to everyone soon.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-websites-as-apps"&gt;
  &lt;/a&gt;
  Create Websites as Apps
&lt;/h2&gt;

&lt;p&gt;Microsoft Edge allows you to create web apps for the websites that you visit. Now I use this for a few websites that I visit every day that donâ€™t have apps. Now, this allows you to open the pages directly from your desktop without having to open your browser.&lt;/p&gt;

&lt;p&gt;To create a web app, start by navigating to the website. Click the ellipsis icon at the top-left of your browser and select Settings &amp;gt; Apps &amp;gt; Install this site as an app. Save this app with your preferred name. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wNABOu_Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i6708twph4fcygvc2zjn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wNABOu_Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i6708twph4fcygvc2zjn.png" alt="Microsoft Web App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once this is completed the tap is going to close and a new window is going to open for that website. You can pin it to your taskbar or you can launch it from the start menu.&lt;/p&gt;

&lt;p&gt;For managing the web apps youâ€™ve installed, click on the ellipsis and navigate to Settings &amp;gt; Apps &amp;gt; Manage Apps. Here, you can uninstall the app, pin it to your Start Menu or Desktop, or view site permissions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-capture-and-annotate-the-web"&gt;
  &lt;/a&gt;
  Web Capture and Annotate the Web
&lt;/h2&gt;

&lt;p&gt;With the new web capture feature, you can create annotate screenshots.  With Web Capture, you can not only capture the visible portion of the webpage, but you can scroll further down the page to include as much content from the webpage as you want.&lt;/p&gt;

&lt;p&gt;Letâ€™s say you are on a website that you would want to capture as a screenshot, you can either click on the ellipsis and click select Web capture or you can use the shortcut &lt;strong&gt;Ctrl&lt;/strong&gt; + &lt;strong&gt;Shift&lt;/strong&gt; + &lt;strong&gt;S&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v-_jRuyn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wfalstvtvqazpmo7hj2c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v-_jRuyn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wfalstvtvqazpmo7hj2c.png" alt="Microsoft Web Capture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is going to bring up a little toolbar, you can either capture a certain area of the web page or if you want you can create a screenshot of the full page. And that is it, now you have the scrollable screenshot. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BVNqL8OE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/db9783m9iker5h7aupwr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BVNqL8OE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/db9783m9iker5h7aupwr.png" alt="Microsoft Web Capture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can annotate this by using the pen tool. Once you are done, save it, copy it or share it with others. &lt;/p&gt;

&lt;p&gt;Checkout the full article &lt;a href="https://www.wpcodevo.com/blogs/top-7-hidden-features-in-microsoft-edge"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;No 6 is the most interesting of all(You can solve Maths equations with Microsoft Edge)&lt;/p&gt;

</description>
      <category>developer</category>
      <category>designer</category>
      <category>microsoft</category>
      <category>browser</category>
    </item>
    <item>
      <title>Name 3 Writing Tips You Wish You Had When You First Started Blogging  </title>
      <author>Michael Tharrington (he/him)</author>
      <pubDate>Thu, 08 Jul 2021 18:11:45 +0000</pubDate>
      <link>https://dev.to/michaeltharrington/name-3-writing-tips-you-wish-you-had-when-you-first-started-blogging-3ph3</link>
      <guid>https://dev.to/michaeltharrington/name-3-writing-tips-you-wish-you-had-when-you-first-started-blogging-3ph3</guid>
      <description>&lt;p&gt;If you could travel back in time to when you first started blogging and give yourself 3 writing tips, what would they be?&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>beginners</category>
      <category>writing</category>
    </item>
    <item>
      <title>How to Replace All Occurrences of a String</title>
      <author>Boyan Iliev</author>
      <pubDate>Thu, 08 Jul 2021 17:33:02 +0000</pubDate>
      <link>https://dev.to/boiliev/how-to-replace-all-occurrences-of-a-string-24mi</link>
      <guid>https://dev.to/boiliev/how-to-replace-all-occurrences-of-a-string-24mi</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;One of the main data types in JavaScript is &lt;code&gt;strings&lt;/code&gt;. These data types are used for storing and manipulating &lt;strong&gt;text&lt;/strong&gt;. And luckily for us, there are quite a few methods that help us in manipulating these data types.&lt;/p&gt;

&lt;p&gt;These methods are one of the many built-in methods of JavaScript. This is because JS has some built-in objects. Some of them are: &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Math&lt;/code&gt; and &lt;code&gt;String&lt;/code&gt;. And for each object, some properties and methods are associated with them.&lt;/p&gt;

&lt;p&gt;In this post we are going to see &lt;strong&gt;How to Replace All Occurrences of a String&lt;/strong&gt; with the &lt;code&gt;replaceAll()&lt;/code&gt; method.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-raw-replaceall-endraw-method"&gt;
  &lt;/a&gt;
  &lt;code&gt;replaceAll()&lt;/code&gt; Method
&lt;/h1&gt;

&lt;p&gt;In order to use this method, we first have to create our string. Let's add randomly &lt;code&gt;!&lt;/code&gt; inside this strong so that we can remove it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let intro = 'My! n!ame! i!s Bo!yan!';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now to remove it, we have to write the strings name, then add the &lt;code&gt;replaceAll&lt;/code&gt; method next to it, and pass in the first argument which element we want to be replaced or removed. An important thing is to remember that you have to save the new string into a new variable. It should look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let newIntro = intro.replaceAll('!', '')
console.log(newIntro);

&amp;lt;- My name is Boyan
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if you want to replace the elements, just pass in the second argument as what you want it replaced with. Let's replace the whitespace with &lt;code&gt;-&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let newerIntro =newIntro.replaceAll(' ', '-');
console.log(newerIntro)

&amp;lt;- My-name-is-Boyan
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;This is pretty much it to the &lt;code&gt;replaceAll()&lt;/code&gt; method. It is the main method used, if not the only method, that replaces all occurrences of a string.&lt;/p&gt;

&lt;p&gt;I hope that this post has helped you and I would love to hear some feedback in the comments below.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>developer</category>
      <category>codenewbie</category>
      <category>methods</category>
    </item>
    <item>
      <title>DuckEngine - A 2D Game Library for the web</title>
      <author>ksplat</author>
      <pubDate>Thu, 08 Jul 2021 17:08:11 +0000</pubDate>
      <link>https://dev.to/ksplatdev/duckengine-a-2d-game-library-for-the-web-3o7n</link>
      <guid>https://dev.to/ksplatdev/duckengine-a-2d-game-library-for-the-web-3o7n</guid>
      <description>&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ngW_xHp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9upykoiouvkcolskt4cp.png" alt="DuckEngine"&gt;
&lt;/h1&gt;

&lt;p&gt;A 2D Game Library for the web.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ksplatdev/DuckEngine"&gt;https://github.com/ksplatdev/DuckEngine&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Collision Physics&lt;/li&gt;
&lt;li&gt;Sprites &amp;amp; Sprite sheets&lt;/li&gt;
&lt;li&gt;Many Game Objects&lt;/li&gt;
&lt;li&gt;Particle System&lt;/li&gt;
&lt;li&gt;Scenes&lt;/li&gt;
&lt;li&gt;Cameras&lt;/li&gt;
&lt;li&gt;Cutscenes&lt;/li&gt;
&lt;li&gt;Mobile Scaling&lt;/li&gt;
&lt;li&gt;Keyboard and Mouse input&lt;/li&gt;
&lt;li&gt;And a lot more&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#demos"&gt;
  &lt;/a&gt;
  Demos
&lt;/h2&gt;

&lt;p&gt;All demos are bundled with parcel-bundler and are all on codesandbox.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#space-shooter-game"&gt;
  &lt;/a&gt;
  &lt;a href="https://codesandbox.io/s/duckengine-space-shooter-64wkg?file=/src/scene.js"&gt;Space Shooter Game&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#test-template"&gt;
  &lt;/a&gt;
  &lt;a href="https://codesandbox.io/s/duckengine-test-7gfbt?file=/src/scene.js"&gt;Test Template&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#particle-test"&gt;
  &lt;/a&gt;
  &lt;a href="https://codesandbox.io/s/duckengine-particle-test-dhcr1?file=/src/scene.js"&gt;Particle Test&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#tilemap-test"&gt;
  &lt;/a&gt;
  &lt;a href="https://codesandbox.io/s/duckengine-tilemap-test-ryqqz?file=/src/scene.js"&gt;Tilemap test&lt;/a&gt;
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#download"&gt;
  &lt;/a&gt;
  Download
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#github"&gt;
  &lt;/a&gt;
  Github
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Download the &lt;a href="https://github.com/ksplatdev/DuckEngine/releases/latest"&gt;latest release&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Set up webpack or parcel. (or any other bundler)&lt;/li&gt;
&lt;li&gt;Import DuckEngine.&lt;/li&gt;
&lt;li&gt;Read the &lt;a href="https://ksplatdev.github.io/DuckEngine/"&gt;docs&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#npm"&gt;
  &lt;/a&gt;
  NPM
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Run &lt;code&gt;npm install duckengine&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Set up webpack or parcel. (or any other bundler)&lt;/li&gt;
&lt;li&gt;Import DuckEngine.&lt;/li&gt;
&lt;li&gt;Read the &lt;a href="https://ksplatdev.github.io/DuckEngine/"&gt;docs&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#license"&gt;
  &lt;/a&gt;
  License
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/ksplatdev/DuckEngine/blob/main/LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>gamedev</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Top tips and tricks for performance improvement of ASP.NET Core application.</title>
      <author>Alexis Gilbert</author>
      <pubDate>Thu, 08 Jul 2021 17:00:06 +0000</pubDate>
      <link>https://dev.to/alexisdevs/top-tips-and-tricks-for-performance-improvement-of-asp-net-core-application-20ob</link>
      <guid>https://dev.to/alexisdevs/top-tips-and-tricks-for-performance-improvement-of-asp-net-core-application-20ob</guid>
      <description>&lt;p&gt;Performance is the key of any web application to get significant long-term success. When it comes to building high-performing applications, High performance &lt;strong&gt;.Net Core Applications&lt;/strong&gt; are always on the top of the charts of the competition.&lt;/p&gt;

&lt;p&gt;In this blog, I am going to talk about top &lt;em&gt;.Net Core Tips and Tricks&lt;/em&gt; which can lead to optimizing the performance of your application dynamically.&lt;/p&gt;

&lt;p&gt;ASP.NET core development technology is an open-source cross-platform technology that allows you to build top-notch web applications that can give your competitors a nudge on the edge.&lt;/p&gt;

&lt;p&gt;However, for that, you would need to optimize this robust technology thoroughly by implementing the best practices.&lt;/p&gt;

&lt;p&gt;And to take you to this precise goal I have curated this list of Top .Net Core Tips and tricks to facilitate your development process.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#performing-io-operations"&gt;
  &lt;/a&gt;
  Performing I/O Operations
&lt;/h1&gt;

&lt;p&gt;The I/O process should be processed Asynchronously, as the I/O process generally means some kind of implementation process like file uploading or retrieving. &lt;/p&gt;

&lt;p&gt;If you are doing the process synchronously the main path will be blocked and due to that other background activities will be stopped.&lt;/p&gt;

&lt;p&gt;Instead of that, make a practice of doing it asynchronously with the help of FlushAysnc or ReadAsync.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#asynchronous-programming"&gt;
  &lt;/a&gt;
  Asynchronous Programming
&lt;/h1&gt;

&lt;p&gt;In c# 5.0 Asynchronous programming was introduced and quickly it became quite popular among the developer community.&lt;/p&gt;

&lt;p&gt;While writing a code end to end Asynchronous programming is advisable however it also depends upon the architecture of the program.&lt;/p&gt;

&lt;p&gt;You can understand it better with the example.&lt;/p&gt;

&lt;p&gt;[HttpGet]&lt;br&gt;
[Route("GetPosts")]&lt;br&gt;&lt;br&gt;
public async Task &amp;lt; IActionResult &amp;gt; GetPosts()&lt;br&gt;
{&lt;br&gt;
  try {&lt;br&gt;
    var posts = await postRepository.GetPosts();&lt;br&gt;
    if (posts == null) {&lt;br&gt;
      return NotFound();&lt;br&gt;
    }&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;return Ok(posts);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;}&lt;br&gt;
  catch (Exception) {&lt;br&gt;
    return BadRequest();&lt;br&gt;
  }&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;Now, this programming can be implemented through a repository level by Asynchronous programming through this method.&lt;/p&gt;

&lt;p&gt;public async Task &amp;lt; List &amp;lt; PostViewModel &amp;gt;&amp;gt; GetPosts()&lt;br&gt;
{&lt;br&gt;
  if (db != null) {&lt;br&gt;
    return await(from p in db.Post&lt;br&gt;&lt;br&gt;
                       from c in db.Category&lt;br&gt;&lt;br&gt;
                       where p.CategoryId == c.Id&lt;br&gt;&lt;br&gt;
                       select new PostViewModel&lt;br&gt;&lt;br&gt;
                       {&lt;br&gt;
        PostId = p.PostId,&lt;br&gt;
        Title = p.Title,&lt;br&gt;
        Description = p.Description,&lt;br&gt;
        CategoryId = p.CategoryId,&lt;br&gt;
        CategoryName = c.Name,&lt;br&gt;
        CreatedDate = p.CreatedDate&lt;br&gt;
      }).ToListAsync();&lt;br&gt;
  }&lt;/p&gt;

&lt;p&gt;return null;&lt;br&gt;
}&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#avoid-tastresult-or-taskwait"&gt;
  &lt;/a&gt;
  Avoid TAST.RESULT or TASK.WAIT
&lt;/h1&gt;

&lt;p&gt;While implementing Asynchronous programming, experts say to avoid Task.wait or Task.result and make a practice to utilize await the reason is,&lt;/p&gt;

&lt;p&gt;The developer should wait for the compilation of the task. Waitblock the thread while your current task is still going on.&lt;/p&gt;

&lt;p&gt;Often both the blocks and thread can create the Deadlocks.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#data-access-optimization"&gt;
  &lt;/a&gt;
  Data access optimization
&lt;/h1&gt;

&lt;p&gt;By optimizing the data access logic you can turn your application into one of the high-performance .Net Core applications.&lt;/p&gt;

&lt;p&gt;For that follow the below steps,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reduce the usage of http round calls(which obviously applies to most of the technologies)
-Try gathering all the data with minimal calls
-To try not to increase the load on the server, try not to fetch data in advance if not necessary&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#optimize-your-custom-code"&gt;
  &lt;/a&gt;
  Optimize your custom code
&lt;/h1&gt;

&lt;p&gt;We can optimize middleware custom code and the business logic, refactoring for optimum performance can advantage us in many ways.&lt;/p&gt;

&lt;p&gt;Make sure long-running tasks are asynchronous and not bothering other recurring tasks.&lt;br&gt;
Take the example of real-time chat communication as inspiration for asynchronous communication.&lt;/p&gt;

&lt;p&gt;Apart from these are some of the bonus tips&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Entity Framework Core Query Optimization&lt;/li&gt;
&lt;li&gt;Use Dapper for database operations
-Always prefer the latest version of ASP.Net core
-Prefer minification and bundling&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, to conclude things these were some of the standard tips and tricks that every .Net Core developer should know before commencing their project.&lt;/p&gt;

&lt;p&gt;If you are still struggling with your project and want to build a robust web application in .Net Core &lt;a href="https://www.bacancytechnology.com/dot-net-core-developer"&gt;&lt;strong&gt;Hire.Net Core Developer&lt;/strong&gt;&lt;/a&gt; from a leading software development company by just scheduling a call for free!&lt;/p&gt;

</description>
      <category>csharp</category>
      <category>devops</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Code-on-Canvas. Develop and Design at the same time.</title>
      <author>Koen Bok</author>
      <pubDate>Thu, 08 Jul 2021 16:45:07 +0000</pubDate>
      <link>https://dev.to/koen/code-on-canvas-develop-and-design-at-the-same-time-258l</link>
      <guid>https://dev.to/koen/code-on-canvas-develop-and-design-at-the-same-time-258l</guid>
      <description>&lt;p&gt;Code plus canvas are a match made in heaven. Code lets you express any complex idea, using logic, state, etc. And a canvas for visual design lets you compose, layout, and experiment quickly with different interfaces â€” &lt;a href="https://www.framer.com/developers?utm_source=dev.to&amp;amp;utm_medium=link&amp;amp;utm_campaign=developers"&gt;Framer lets you combine both&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Is-nojnY61M"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.framer.com/developers?utm_source=dev.to&amp;amp;utm_medium=link&amp;amp;utm_campaign=developers"&gt;Framer&lt;/a&gt; is a no-code tool for interactive design. It has a performant free-form canvas for direct manipulation like many other design tools. But the canvas was made in React, so it can render any React Component, including the ones you code yourself right inside the tool. You can even add custom UI for your component props and instantly share your components with anyone.&lt;/p&gt;

&lt;p&gt;Code in Framer lets you extend the tools capabilities. By using Code Components (React components) or Code Overrides (Higher-Order Components) you can create advanced interactions on top of your designs, share state, load real data from an API, and pretty much anything else you can think of. Itâ€™s a truly &lt;a href="https://www.framer.com/developers?utm_source=dev.to&amp;amp;utm_medium=link&amp;amp;utm_campaign=developers"&gt;hackable design tool&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And with a major update to the editor and compiler to build components, the experience just got a whole lot smoother. The editor now uses swc and wasm to instantly preview your changes (or show errors). Itâ€™s a pretty nice way to build components directly in Framer, but of course you can also use external code from npm or other tools like CodeSandbox.&lt;/p&gt;

&lt;p&gt;Framer code is fully built on &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules"&gt;ES modules&lt;/a&gt;. That means that every module you make in Framer automatically becomes an ES module. That way itâ€™s instantly shareable across your projects and your team memberâ€™s. But itâ€™s technically even how theyâ€™re rendered on the canvas.&lt;/p&gt;

&lt;p&gt;Because we integrated ES modules fully in the in-app editor, you can import any http based ES module and use it in Framer directly, even from npm. No more &lt;code&gt;yarn install&lt;/code&gt;, just import the full http URL where the ES module lives:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import _ from "lodash" // Old way (need to install)
import _ from "https://jspm.dev/lodash" // ESM way
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#get-started"&gt;
  &lt;/a&gt;
  Get started
&lt;/h3&gt;

&lt;p&gt;Youâ€™ll be able to pioneer new ideas faster than ever before, create custom code solutions to uplevel your whole team, and share with the whole world with a simple link. &lt;/p&gt;

&lt;p&gt;Explore our all-new &lt;a href="https://www.framer.com/developers?utm_source=dev.to&amp;amp;utm_medium=link&amp;amp;utm_campaign=developers"&gt;Framer for Developers site&lt;/a&gt; to get started. Find cool examples or start playing immediately with our code playground. And finally, join us on Discord for help or questions from a community of 6,000.&lt;/p&gt;

</description>
      <category>ux</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to Build a Bookmark app using Tailwind, React and Strapi</title>
      <author>Shada </author>
      <pubDate>Thu, 08 Jul 2021 16:44:17 +0000</pubDate>
      <link>https://dev.to/strapi/how-to-build-a-bookmark-app-using-tailwind-react-and-strapi-1pki</link>
      <guid>https://dev.to/strapi/how-to-build-a-bookmark-app-using-tailwind-react-and-strapi-1pki</guid>
      <description>&lt;p&gt;This tutorial will build a Bookmarking app using React and style it with Tailwind CSS, and the backend will be built using Strapi.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-strapi-headless-cms"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is Strapi Headless CMS?&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://strapi.io/"&gt;Strapi&lt;/a&gt; is an open-source headless content management system (CMS) based on Nodejs used to develop APIs (RESTful and GraphQL APIs) and build the APIs content. The APIs can be built from the Strapi admin panel and also from Strapi's APIs. In addition, the content of the APIs can be added from the UI and through using the Strapi APIs.&lt;/p&gt;

&lt;p&gt;These API endpoints can then be consumed from clients (mobile, desktop, web). The APIs are created in Strapi in the form of collection or single-type. A collection in Strapi contains the endpoints:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;POST &lt;code&gt;/endpoints&lt;/code&gt;: This endpoint adds new content.&lt;/li&gt;
&lt;li&gt;GET &lt;code&gt;/endpoints&lt;/code&gt;: Returns all data.&lt;/li&gt;
&lt;li&gt;GET &lt;code&gt;/endpoints/:id&lt;/code&gt;: Returns data by its &lt;code&gt;id&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;DELETE &lt;code&gt;/endpoints/:id&lt;/code&gt;: Deletes a specific content.&lt;/li&gt;
&lt;li&gt;PUT &lt;code&gt;/endpoints/:id&lt;/code&gt;: Edits a specific content.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Strapi is both a server and a database. By default, it is powered by &lt;a href="https://koajs.com/"&gt;Koajs&lt;/a&gt;, a minimalistic web framework created by the team at &lt;a href="https://expressjs.com/"&gt;Expressjs&lt;/a&gt;, and the database is &lt;a href="https://www.sqlite.org/"&gt;SQLite&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What do we mean by Headless CMS?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A headless CMS is a CMS with only a backend. The CMS provides only the backend to the users, not the frontend. CMS like WordPress is "headful" because we can build our backend - APIs and their content on it and build the frontend on it. The frontend is the HTML page the displays content that users will see.&lt;/p&gt;

&lt;p&gt;A CMS has:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A backend.&lt;/li&gt;
&lt;li&gt;a UI editor to develop and build APIs and their content.&lt;/li&gt;
&lt;li&gt;The frontend from which the APIs are consumed will be designed in the CMS, and this is what the users load to view the data in the APIs, e.g., blog or news website.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Headless CMS removes the last part. It does not provide any frontend for the users. It only provides the backend with the APIs for the users to use. So the "head" is chopped off, hence the term "headless."&lt;/p&gt;

&lt;p&gt;So the "headless" is what Strapi gives us. It separates our content from the tech stack of our website and provides the content as data over an API. So we build the backend and the frontend separately without depending on each other.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tailwind-headless-ui"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Tailwind - Headless UI&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;Typically, during website design, CSS classes are created for each HTML element to style them. These CSS classes are mostly inline initially, but later on, they are extracted and held in CSS files. That's a general practice.&lt;br&gt;
Now, this will ultimately lead to huge CSS files with our styling. So Tailwind does away with CSS files. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But what is Tailwind?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tailwindcss.com/"&gt;Tailwind&lt;/a&gt; is a utility-first CSS framework that lets us design websites without the need for CSS. Instead, the framework comes packed with CSS classes that we can bring together to design and style our HTML elements without leaving them there.&lt;/p&gt;

&lt;p&gt;According to &lt;a href="https://tailwindcss.com/"&gt;tailwindcss&lt;/a&gt;:&lt;br&gt;
A utility-first CSS framework packed with classes like &lt;code&gt;flex&lt;/code&gt;, &lt;code&gt;pt-4&lt;/code&gt;, &lt;code&gt;text-center&lt;/code&gt;, and &lt;code&gt;rotate-90&lt;/code&gt; that can be composed to build any design directly in your markup.&lt;/p&gt;

&lt;p&gt;Unlike other CSS frameworks like Bootstrap, Foundation, Bulma, Material Design, etc. does not contain components like &lt;code&gt;Buttons&lt;/code&gt;, &lt;code&gt;Cards&lt;/code&gt;, &lt;code&gt;BottomSheets&lt;/code&gt;, etc. Instead, Tailwind only has low-level CSS classes. You then use these classes to build your components.&lt;/p&gt;

&lt;p&gt;We will build a bookmarking app to demonstrate how we can use Tailwind CSS framework and Reactjs to design and develop the app and learn how to consume our Strapi APIs from Reactjs.&lt;/p&gt;

&lt;p&gt;The bookmark app will let users store links to websites, notes, save social media posts, etc., for easy retrieval. Just like the bookmark feature of most modern browsers, it allows users to store.&lt;/p&gt;

&lt;p&gt;We will start by scaffolding a Strapi project.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#scaffolding-a-strapi-project"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Scaffolding a Strapi project&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;Create a central folder &lt;code&gt;strapi-tailwind&lt;/code&gt;: &lt;code&gt;mkdir strapi-tailwind&lt;/code&gt;. Move into the folder: &lt;code&gt;cd strapi-tailwind&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This &lt;code&gt;strapi-tailwind&lt;/code&gt; folder will contain our Strapi backend and our Reactjs frontend.&lt;/p&gt;

&lt;p&gt;Now run the below command to generate a Strapi project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    npx create-strapi-app strapi-api --quickstart
    # OR
    yarn create strapi-app strapi-api ---quickstart
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command will create a Strapi project in &lt;code&gt;strapi-app&lt;/code&gt; folder.&lt;br&gt;
Strapi will serve the project on &lt;code&gt;localhost:1337&lt;/code&gt;. It will launch the Strapi admin UI panel on &lt;code&gt;localhost:1337/admin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Fill in your details and click on the "LET'S START" button. Then, we will begin to build our bookmark collection.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#build-the-bookmark-collections"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Build the Bookmark collections&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;In our app, a bookmark will have a title, content, and synopsis. The Bookmark model will be this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    Bookmark {
        title
        content
        synopsis
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;title&lt;/code&gt; field will be the title of the bookmark. The &lt;code&gt;content&lt;/code&gt; will be the content of the bookmark, and it can be links, notes, etc. Finally, the &lt;code&gt;synopsis&lt;/code&gt; holds a preview of the bookmark's content.&lt;/p&gt;

&lt;p&gt;On the Strapi admin UI, click on the"&amp;gt; CREATE YOUR FIRST CONTENT-TYPE" button. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QgQBFasy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470902072_Screenshot%2B2021-05-30%2Bat%2B09.01.09.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QgQBFasy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470902072_Screenshot%2B2021-05-30%2Bat%2B09.01.09.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A modal will show up, type in &lt;code&gt;bookmark&lt;/code&gt; and click on the &lt;code&gt;Continue&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mPvlHxqf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470915319_Screenshot%2B2021-05-30%2Bat%2B09.01.22.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mPvlHxqf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470915319_Screenshot%2B2021-05-30%2Bat%2B09.01.22.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Insert the fields:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Select &lt;code&gt;Text&lt;/code&gt; field, type in "title".&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Text&lt;/code&gt; field, type in "content" and select "Long text".&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Text&lt;/code&gt; field, type in "synopsis"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oGEtdh8U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470927868_Screenshot%2B2021-05-30%2Bat%2B09.01.32.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oGEtdh8U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470927868_Screenshot%2B2021-05-30%2Bat%2B09.01.32.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wAeTgNqU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470939433_Screenshot%2B2021-05-30%2Bat%2B09.06.44.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wAeTgNqU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470939433_Screenshot%2B2021-05-30%2Bat%2B09.06.44.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XazUEEMO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470954106_Screenshot%2B2021-05-30%2Bat%2B09.09.57.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XazUEEMO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470954106_Screenshot%2B2021-05-30%2Bat%2B09.09.57.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on the &lt;code&gt;Finish&lt;/code&gt; button. On the page that appears click on the "Save" button on the top-right section of the page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ka1vLo8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470974578_Screenshot%2B2021-05-30%2Bat%2B09.10.04.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ka1vLo8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470974578_Screenshot%2B2021-05-30%2Bat%2B09.10.04.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Acv8JsyQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470974596_Screenshot%2B2021-05-30%2Bat%2B09.16.28.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Acv8JsyQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470974596_Screenshot%2B2021-05-30%2Bat%2B09.16.28.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will now have the below endpoints in our Bookmark collection:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;POST &lt;code&gt;/bookmarks&lt;/code&gt;: Create a new bookmark&lt;/li&gt;
&lt;li&gt;GET &lt;code&gt;/bookmarks&lt;/code&gt;: Get all bookmarks&lt;/li&gt;
&lt;li&gt;GET &lt;code&gt;/bookmarks/:id&lt;/code&gt;: Get a bookmark&lt;/li&gt;
&lt;li&gt;DELETE &lt;code&gt;/bookmarks/:id&lt;/code&gt;: Delete a bookmark&lt;/li&gt;
&lt;li&gt;PUT &lt;code&gt;/bookmarks/:id&lt;/code&gt;: Update a bookmark.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#seed-the-database"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Seed the database&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;Let's insert some content in our &lt;code&gt;Bookmark&lt;/code&gt; collection. First, click on the &lt;code&gt;Bookmarks&lt;/code&gt; item on the sidebar, click on the &lt;code&gt;+ Add New Bookmarks&lt;/code&gt; button on the top-right page.&lt;/p&gt;

&lt;p&gt;Type in the below data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    "title" -&amp;gt; Become a qualified dev

    "content" -&amp;gt; https://raddevon.com/5-projects-to-become-qualified-as-a-web-developer/?ck_subscriber_id=1287376433

    "synopsis" -&amp;gt; https://raddevon.com/5-projects-to-become-qua...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ci_Y1-kR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622471029112_image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ci_Y1-kR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622471029112_image.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See that we are bookmarking a link so we can retrieve it easily.&lt;/p&gt;

&lt;p&gt;Click on the "Save" button on the top-right section of the page, then click on the "Publish" button.&lt;/p&gt;

&lt;p&gt;Let's add another data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    "title" -&amp;gt; A Shadaya post

    "content" -&amp;gt; When they hit their 30s, the pressure won't be about iphones, clothes, cars, it will be about who got a lovely home, a stable marriage &amp;amp; a happy family. Jealous, bitterness &amp;amp; regrets for the "woke" ones &amp;amp; happiness, joy &amp;amp; fulfilment for the "lame" ones.

    "synopsis" -&amp;gt; When they hit their 30s, the pressure won't be about iphones...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a post from social media we want to bookmark.&lt;/p&gt;

&lt;p&gt;Click on the "Save" button and then on the "Publish" button. This time let's bookmark a Twitter post link:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    "title" -&amp;gt; Twitter post

    "content" -&amp;gt; https://twitter.com/Drwhales_/status/1388404654342610944

    "synopsis" -&amp;gt; https://twitter.com/Drwhales_/status/138...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Click on "Save" and on "Publish".&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#allow-access"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Allow access&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;Like this, only authenticated users can access our bookmark endpoints, but we want everybody to access them without restriction.&lt;/p&gt;

&lt;p&gt;To do that, click on the &lt;code&gt;Settings&lt;/code&gt; item on the sidebar. Then on &lt;code&gt;Roles&lt;/code&gt; on the right and &lt;code&gt;Public&lt;/code&gt;. &lt;br&gt;
Scroll down to "Permissions," and on the &lt;code&gt;BOOKMARK&lt;/code&gt; section, check the &lt;code&gt;Select all&lt;/code&gt;&lt;br&gt;
Click on the &lt;code&gt;Save&lt;/code&gt; button on the top-right. This will save these changes.&lt;br&gt;
Our &lt;code&gt;Bookmark&lt;/code&gt; collection endpoints are now openly accessible by the Public.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GDtzNyQo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470743645_Screenshot%2B2021-05-31%2Bat%2B15.18.44.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GDtzNyQo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470743645_Screenshot%2B2021-05-31%2Bat%2B15.18.44.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--291X3UKf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470743665_Screenshot%2B2021-05-31%2Bat%2B15.18.51.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--291X3UKf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470743665_Screenshot%2B2021-05-31%2Bat%2B15.18.51.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we build our frontend.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#building-the-react-app"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Building the React app&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;First, we scaffold a Reactjs app. Run the below command to do that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    npx create-react-app strapi-tailwind
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Move into the folder &lt;code&gt;cd strapi-tailwind&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Install the dependencies:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;axios&lt;/code&gt;: HTTP library, we will use it to make HTTP requests to the collection's endpoints.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;react-router-dom&lt;/code&gt;: React library for adding routing system to React apps.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    yarn add axios react-router-dom
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#setup-tailwind"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Setup Tailwind&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;Let's set up Tailwind in our project.&lt;/p&gt;

&lt;p&gt;Install the dependencies:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    yarn add --dev tailwindcss@npm:@tailwindcss/postcss7-compat postcss@^7 autoprefixer@^9
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We installed the PostCSS because create-react-app does not support PostCSS 8 yet.&lt;/p&gt;

&lt;p&gt;Next, we install Craco:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    yarn add @craco/craco
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This dependency helps us configure Tailwind.&lt;/p&gt;

&lt;p&gt;Next, we will update the &lt;code&gt;scripts&lt;/code&gt; in our &lt;code&gt;package.json&lt;/code&gt; to use &lt;code&gt;craco&lt;/code&gt; instead of &lt;code&gt;react-scripts&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Next create a &lt;code&gt;craco.config.js&lt;/code&gt; file in the root folder and paste the below code in it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    // craco.config.js
    module.exports = {
      style: {
        postcss: {
          plugins: [require("tailwindcss"), require("autoprefixer")],
        },
      },
    };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Initialize Tailwind in our project by running the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    npx tailwind init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command will create a &lt;code&gt;tailwind.config.js&lt;/code&gt; in our root folder. Open it and paste the below code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    module.exports = {
      purge: ["./src/**/*.{js,jsx,ts,tsx}", "./public/index.html"],
      darkMode: false, // or 'media' or 'class'
      theme: {
        extend: {},
      },
      variants: {
        extend: {},
      },
      plugins: [],
    };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we include Tailwind in our CSS. Paste the below CSS code in your &lt;code&gt;src/index.css&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    @tailwind base;
    @tailwind components;
    @tailwind utilities;

    ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are good to go.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#build-components"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Build components&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;Our app will have a single route &lt;code&gt;/&lt;/code&gt;, this index route will render the bookmarks in the system.&lt;br&gt;
The page will look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aQ2TksUf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470489837_Screenshot%2B2021-05-31%2Bat%2B07.56.07.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aQ2TksUf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470489837_Screenshot%2B2021-05-31%2Bat%2B07.56.07.png" alt="List of bookmarks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tamSyHyN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470489857_Screenshot%2B2021-05-31%2Bat%2B07.56.14.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tamSyHyN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470489857_Screenshot%2B2021-05-31%2Bat%2B07.56.14.png" alt="Adding a new bookmark"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kh6Ym5Ay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470489890_Screenshot%2B2021-05-31%2Bat%2B07.57.29.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kh6Ym5Ay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470489890_Screenshot%2B2021-05-31%2Bat%2B07.57.29.png" alt="Editing a bookmark"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8-mG4CKA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470489876_Screenshot%2B2021-05-31%2Bat%2B07.57.13.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8-mG4CKA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622470489876_Screenshot%2B2021-05-31%2Bat%2B07.57.13.png" alt="Viewing a bookmark"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will have a&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;copy icon to copy the content of the bookmark when pressed.&lt;/li&gt;
&lt;li&gt;delete icon to delete the bookmark.&lt;/li&gt;
&lt;li&gt;view icon to view the bookmark. This will pop up a dialog that displays the title and content of the bookmark.&lt;/li&gt;
&lt;li&gt;edit icon to edit a bookmark. This icon will popup a dialog with input boxes filled with&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will have the components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Header&lt;/code&gt;: This will contain the header of our app and will display on every page.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;BookmarkCard&lt;/code&gt;: This component will display a bookmark title and synopsis on the index page.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;AddBookmarkDialog&lt;/code&gt;: This is a dialog where new bookmarks are added to the system.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;EditBookmarkDialog&lt;/code&gt;: This is a dialog where an existing bookmark will be edited.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ViewBookmarkDialog&lt;/code&gt;: This is a dialog that will display a bookmark's content.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;BookmarkList&lt;/code&gt;: This component displays all the bookmarks in our system.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The above components will reside in a &lt;code&gt;components&lt;/code&gt; folder. Let's begin to create them:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    mkdir src/components
    cd src/components

    mkdir Header
    touch Header/index.js

    mkdir BookmarkCard
    touch BookmarkCard/index.js

    mkdir AddBookmarkDialog
    touch AddBookmarkDialog/index.js

    mkdir EditBookmarkDialog
    touch EditBookmarkDialog/index.js

    mkdir ViewBookmarkDialog
    touch ViewBookmarkDialog/index.js

    mkdir BookmarkList
    touch BookmarkList/index.js

    mkdir CloseIcon
    touch CloseIcon/index.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's start with the &lt;code&gt;Header&lt;/code&gt; component:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Header&lt;/strong&gt;&lt;br&gt;
This component will hold a simple UI of the header section. Paste the below code to &lt;code&gt;src/components/Header/index.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    export default function Header() {
      return (
        &amp;lt;section class="p-4 text-2xl font-bold bg-red-600 text-white mb-4"&amp;gt;
          &amp;lt;div&amp;gt;Bookmarks&amp;lt;/div&amp;gt;
        &amp;lt;/section&amp;gt;
      );
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See how we styled our header by applying Tailwind utility classes. We didn't use React's own &lt;code&gt;className&lt;/code&gt;, everything is done in the &lt;code&gt;class&lt;/code&gt; attribute.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;p-4&lt;/code&gt; applies padding of 4px to all the corners(top, bottom, left, and right). The &lt;code&gt;text-2xl&lt;/code&gt; gives it a font size of 1.5rem. The &lt;code&gt;font-bold&lt;/code&gt; sets the text to be bold. The &lt;code&gt;bg-red-600&lt;/code&gt; sets the background color of the header to be red in color with a darker opacity. The &lt;code&gt;text-white&lt;/code&gt; sets the text color to be white. The &lt;code&gt;mb-4&lt;/code&gt; sets the bottom margin of the header to be 4px.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CopyIcon&lt;/strong&gt;&lt;br&gt;
We will add a &lt;code&gt;CopyIcon&lt;/code&gt; component. This component will render an svg icon representation of the copy symbol.&lt;/p&gt;

&lt;p&gt;Paste the below code to &lt;code&gt;src/components/CloseIcon/index.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    export default function CloseIcon() {
      return (
        &amp;lt;svg
          width="12px"
          height="10px"
          xmlns="http://www.w3.org/2000/svg"
          style={{ cursor: "pointer" }}
          fill="white"
        &amp;gt;
          &amp;lt;path
            d="M10.0719417,0.127226812 C10.1612888,0.127226812 10.2403266,0.161591074 10.3090551,0.230319596 L10.3090551,0.230319596 L10.8245191,0.745783513 C10.8932476,0.814512036 10.9276118,0.893549837 10.9276118,0.982896916 C10.9276118,1.07224399 10.8932476,1.1512818 10.8245191,1.22001032 L10.8245191,1.22001032 L6.77297267,5.27155671 L10.8245191,9.3231031 C10.8932476,9.39183162 10.9276118,9.47086942 10.9276118,9.5602165 C10.9276118,9.64956358 10.8932476,9.72860138 10.8245191,9.79732991 L10.8245191,9.79732991 L10.3090551,10.3127938 C10.2403266,10.3815223 10.1612888,10.4158866 10.0719417,10.4158866 C9.98259466,10.4158866 9.90355686,10.3815223 9.83482834,10.3127938 L9.83482834,10.3127938 L5.92809485,6.40509433 C4.98802554,7.34516364 3.68545904,8.64773014 2.02039535,10.3127938 C1.95166683,10.3815223 1.87262903,10.4158866 1.78328195,10.4158866 C1.69393487,10.4158866 1.61489707,10.3815223 1.54616855,10.3127938 L1.03070463,9.79732991 C0.961976106,9.72860138 0.927611845,9.64956358 0.927611845,9.5602165 C0.927611845,9.47086942 0.961976106,9.39183162 1.03070463,9.3231031 L5.08225102,5.27155671 L1.03070463,1.22001032 C0.961976106,1.1512818 0.927611845,1.07224399 0.927611845,0.982896916 C0.927611845,0.893549837 0.961976106,0.814512036 1.03070463,0.745783513 L1.54616855,0.230319596 C1.61489707,0.161591074 1.69393487,0.127226812 1.78328195,0.127226812 C1.87262903,0.127226812 1.95166683,0.161591074 2.02039535,0.230319596 L5.92761184,4.13822681 L9.83482834,0.230319596 C9.88637473,0.178773204 9.94372009,0.146556709 10.0068644,0.133670111 Z"
            fillRule="nonzero"
          &amp;gt;&amp;lt;/path&amp;gt;
        &amp;lt;/svg&amp;gt;
      );
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We render an svg code of the copy symbol above. We made the icon to be 12px wide and 10px high. Also, we used the styling &lt;code&gt;style={{ cursor: "pointer" }}&lt;/code&gt; to make the cursor transform to a hand icon when the mouse cursor hovers above the copy icon, it gives the users hint that the copy icon is clickable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BookmarkCard&lt;/strong&gt;&lt;br&gt;
This component will receive a bookmark in its props and then proceed to display its title and synopsis.&lt;/p&gt;

&lt;p&gt;Paste the below code on &lt;code&gt;src/components/BookmarkCard/index.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import axios from "axios";
    import ViewBookmarkDialog from "./../ViewBookmarkDialog";
    import EditBookmarkDialog from "./../EditBookmarkDialog";
    import { useState } from "react";

    export default function BookmarkCard({ bookmark }) {
      const { id, title, content, synopsis } = bookmark;
      const [edit, setEdit] = useState(false);
      const [view, setView] = useState(false);
      const [showCopy, setShowCopy] = useState(false);
      var timeout;

      function copyBookmark() {
        navigator.clipboard.writeText(content).then(
          function () {
            /* clipboard successfully set */
            setShowCopy(true);
            clearTimeout(timeout);
            timeout = setTimeout(() =&amp;gt; {
              setShowCopy(false);
            }, 1000);
          },
          function () {
            /* clipboard write failed */
            setShowCopy(false);
          }
        );
      }

      function viewBookmark() {
        setView(true);
      }
      function editBookmark() {
        setEdit(true);
      }

      async function deleteBookmark() {
        if (window.confirm("Do you want to delete this bookmark?")) {
          await axios.delete("http://localhost:1337/bookmarks/" + id);
          window.location.reload();
        }
      }

      return (
        &amp;lt;div
          style={{ width: "600px" }}
          class="border border-gray-200 rounded-md m-3 p-4 shadow-md bg-white hover:shadow-xl"
        &amp;gt;
          {showCopy ? &amp;lt;Message /&amp;gt; : null}
          &amp;lt;div class="py-2"&amp;gt;
            &amp;lt;h4 class="text-xl font-bold"&amp;gt;{title}&amp;lt;/h4&amp;gt;
          &amp;lt;/div&amp;gt;
          &amp;lt;div&amp;gt;{synopsis}&amp;lt;/div&amp;gt;
          &amp;lt;div class="py-2 my-3 flex"&amp;gt;
            &amp;lt;span
              class="cursor-pointer inline mx-1 text-white font-bold py-2 px-4 rounded"
              onClick={copyBookmark}
            &amp;gt;
              &amp;lt;CopyIcon /&amp;gt;
            &amp;lt;/span&amp;gt;
            &amp;lt;span
              class="cursor-pointer inline mx-1 text-white font-bold py-2 px-4 rounded"
              onClick={deleteBookmark}
            &amp;gt;
              &amp;lt;DeleteIcon /&amp;gt;
            &amp;lt;/span&amp;gt;
            &amp;lt;span
              class="cursor-pointer inline mx-1 text-white font-bold py-2 px-4 rounded"
              onClick={viewBookmark}
            &amp;gt;
              &amp;lt;ViewIcon /&amp;gt;
            &amp;lt;/span&amp;gt;
            &amp;lt;span
              class="cursor-pointer inline mx-1 text-white font-bold py-2 px-4 rounded"
              onClick={editBookmark}
            &amp;gt;
              &amp;lt;EditIcon /&amp;gt;
            &amp;lt;/span&amp;gt;
          &amp;lt;/div&amp;gt;
          {view ? (
            &amp;lt;ViewBookmarkDialog
              bookmark={bookmark}
              closeModal={() =&amp;gt; setView(false)}
            /&amp;gt;
          ) : null}
          {edit ? (
            &amp;lt;EditBookmarkDialog
              bookmark={bookmark}
              closeModal={() =&amp;gt; setEdit(false)}
            /&amp;gt;
          ) : null}
        &amp;lt;/div&amp;gt;
      );
    }

    function DeleteIcon() {
      return (
        &amp;lt;svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="#e73d52"
        &amp;gt;
          &amp;lt;path d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z" /&amp;gt;
        &amp;lt;/svg&amp;gt;
      );
    }

    function CopyIcon() {
      return (
        &amp;lt;svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="#e73d52"
        &amp;gt;
          &amp;lt;path d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z" /&amp;gt;
        &amp;lt;/svg&amp;gt;
      );
    }

    function ViewIcon() {
      return (
        &amp;lt;svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="#e73d52"
        &amp;gt;
          &amp;lt;path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z" /&amp;gt;
        &amp;lt;/svg&amp;gt;
      );
    }

    function EditIcon() {
      return (
        &amp;lt;svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="#e73d52"
        &amp;gt;
          &amp;lt;path d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z" /&amp;gt;
        &amp;lt;/svg&amp;gt;
      );
    }

    function Message() {
      return (
        &amp;lt;div class="z-50 fixed flex p-3 bg-blue-200 rounded-md border-2 border-blue-600 font-bold opacity-90"&amp;gt;
          &amp;lt;div class="mr-2"&amp;gt;
            &amp;lt;svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="#e73d52"
            &amp;gt;
              &amp;lt;path d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z" /&amp;gt;
            &amp;lt;/svg&amp;gt;
          &amp;lt;/div&amp;gt;
          &amp;lt;div&amp;gt;
            &amp;lt;span class="text-red-600"&amp;gt;Copied!&amp;lt;/span&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      );
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See the component destructures the passed in bookmark object from its props.&lt;br&gt;
Next, we destructured the bookmark's &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;content&lt;/code&gt;, and &lt;code&gt;synopsis&lt;/code&gt; from the &lt;code&gt;bookmark&lt;/code&gt; object.&lt;/p&gt;

&lt;p&gt;We have states &lt;code&gt;edit&lt;/code&gt;, &lt;code&gt;view&lt;/code&gt; and &lt;code&gt;showCopy&lt;/code&gt;,the &lt;code&gt;edit&lt;/code&gt; and &lt;code&gt;view&lt;/code&gt; states toggles the &lt;code&gt;EditBookmarkDialog&lt;/code&gt; and &lt;code&gt;ViewBookmarkDialog&lt;/code&gt; visibility respectively. The &lt;code&gt;showCopy&lt;/code&gt; toggles a message component when a bookmark's content is copied.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;timeout&lt;/code&gt; will hold a &lt;code&gt;setTimeout&lt;/code&gt; id, we will use this to clear out timeouts.&lt;br&gt;
The UI of this component displays the title and the synopsis of the bookmark. We used several Tailwind classes to design this component.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;cursor-pointer&lt;/code&gt;: This makes the mouse take the shape of a hand.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;rounded-md&lt;/code&gt;: This makes the element's border-radius to be &lt;code&gt;0.25rem&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;inline&lt;/code&gt;: This makes the element to be an inline element.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;flex&lt;/code&gt;: This sets &lt;code&gt;display:flex;&lt;/code&gt; on the element.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;hover: shadow-xl&lt;/code&gt;: This sets the box-shadow to be deeper when the element is hovered with a mouse.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;border&lt;/code&gt;: The border width is 1px&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;border-gray-200&lt;/code&gt;: The border color is darker gray.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;py-2&lt;/code&gt;: This sets the top and bottom padding of the element to be 2px.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;m-3&lt;/code&gt;: This sets the margin of the element to be 3px.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;shadow-md&lt;/code&gt;: This sets the box-shadow of the element to be &lt;code&gt;0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;z-50&lt;/code&gt;: The element has a z-index of 50. This controls the stack order of elements.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;fixed&lt;/code&gt;: Makes the element a positioned element, in this case, a fixed element.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;opacity-90&lt;/code&gt;: Makes the element have an opacity of 0.9&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, we have icons to copy, delete, edit, and view the bookmark. We used svg code to display the icons. Each icon has its component:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;DeleteIcon&lt;/code&gt; - has svg code that renders a delete icon.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ViewIcon&lt;/code&gt; - has svg code that renders an eye icon that denotes viewing an item.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;CopyIcon&lt;/code&gt; - this renders an svg code that renders a copy icon.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;EditIcon&lt;/code&gt; - renders svg code that renders an edit icon.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We enclosed each icon in &lt;code&gt;span&lt;/code&gt; element with an &lt;code&gt;onClick&lt;/code&gt; attribute. The &lt;code&gt;copyBookmark&lt;/code&gt; function triggered by the copy icon, uses the Clipboard API to copy the contents of the bookmark.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;viewBookmark&lt;/code&gt; sets the &lt;code&gt;view&lt;/code&gt; state to true which causes the &lt;code&gt;ViewBookmarkDialog&lt;/code&gt; to show up. The &lt;code&gt;bookmark&lt;/code&gt; and a &lt;code&gt;closeModal&lt;/code&gt; function are sent to the component so the component can respectively access the bookmark and close itself using the &lt;code&gt;closeModal&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;editBookmark&lt;/code&gt; function sets the &lt;code&gt;edit&lt;/code&gt; state to true which displays the &lt;code&gt;EditBookmarkDialog&lt;/code&gt; component.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;deleteBookmark&lt;/code&gt; function deletes the current bookmark from the db. It makes a DELETE HTTP request to &lt;code&gt;localhost:1337/bookmarks/+id&lt;/code&gt;. The &lt;code&gt;id&lt;/code&gt; will be the id of the bookmark, after the request the page is reloaded.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AddBookmarkDialog&lt;/strong&gt;&lt;br&gt;
This component is where we add new bookmarks. Paste the below code to &lt;code&gt;src/components/AddBookmarkDialog/index.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import axios from "axios";
    import { useRef } from "react";
    import CloseIcon from "./../CloseIcon";

    export default function AddBookmarkDialog({ closeModal }) {
      const formRef = useRef();

      async function addBookmark() {
        var { title, content } = formRef.current;
        title = title.value;
        content = content.value;

        await axios.post("http://localhost:1337/bookmarks", {
          title,
          content,
          synopsis: content.slice(0, 100) + "...",
        });
        window.location.reload();
      }

      return (
        &amp;lt;div class="modal fixed -top-0 left-0 w-full h-full flex flex-col z-0 items-center"&amp;gt;
          &amp;lt;div
            class="modal-backdrop opacity-70 bg-gray-50 fixed w-full h-full z-10"
            onClick={closeModal}
          &amp;gt;&amp;lt;/div&amp;gt;
          &amp;lt;div class="modal-content z-20 w-2/5 mt-5 bg-white shadow-md"&amp;gt;
            &amp;lt;div class="modal-header flex justify-between items-center bg-red-600 p-3 text-white"&amp;gt;
              &amp;lt;h3 class="text-white font-bold"&amp;gt;Add Bookmark&amp;lt;/h3&amp;gt;
              &amp;lt;span
                style={{ padding: "10px", cursor: "pointer" }}
                onClick={closeModal}
              &amp;gt;
                &amp;lt;CloseIcon /&amp;gt;
              &amp;lt;/span&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div className="modal-body content m-2 p-5 z-50"&amp;gt;
              &amp;lt;form ref={formRef}&amp;gt;
                &amp;lt;div class="w-full"&amp;gt;
                  &amp;lt;div class="pl-2"&amp;gt;
                    &amp;lt;span&amp;gt;TITLE&amp;lt;/span&amp;gt;
                  &amp;lt;/div&amp;gt;

                  &amp;lt;input
                    type="text"
                    class="border-gray-200 border-2 w-full m-2 p-2 rounded-md"
                    placeholder="Type in title.."
                    name="title"
                  /&amp;gt;
                &amp;lt;/div&amp;gt;
                &amp;lt;div class="w-full"&amp;gt;
                  &amp;lt;div class="pl-2 mt-3"&amp;gt;
                    &amp;lt;span&amp;gt;CONTENT&amp;lt;/span&amp;gt;
                  &amp;lt;/div&amp;gt;
                  &amp;lt;textarea
                    type="text"
                    class="border-gray-200 border-2 w-full m-2 p-2 rounded-md"
                    placeholder="Type in content.."
                    name="content"
                  &amp;gt;&amp;lt;/textarea&amp;gt;
                &amp;lt;/div&amp;gt;
              &amp;lt;/form&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div className="modal-footer flex justify-between p-4 bg-gray-200"&amp;gt;
              &amp;lt;button
                class="bg-gray-600 hover:bg-gray-700 text-white font-bold py-1 px-3 rounded"
                onClick={closeModal}
              &amp;gt;
                Cancel
              &amp;lt;/button&amp;gt;
              &amp;lt;button
                class="bg-red-600 hover:bg-red-700 text-white font-bold py-1 px-3 rounded"
                onClick={addBookmark}
              &amp;gt;
                Add
              &amp;lt;/button&amp;gt;
            &amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      );
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See it has input boxes where the title and content of the bookmark are to be typed. The &lt;code&gt;Add&lt;/code&gt; button calls the &lt;code&gt;addBookmark&lt;/code&gt; function, this function retrieves the values of the bookmark's title and content from the input boxes. &lt;/p&gt;

&lt;p&gt;Then it makes a POST HTTP request to &lt;code&gt;localhost:1337/bookmarks&lt;/code&gt; with the synopsis, title, and content retrieved from the UI as payload. The synopsis is generated by slicing off 100 words from the content to get a preview of the content. This request adds the bookmark to our Strapi backend. The page is reloaded which displays the newly added bookmark on the UI.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BookmarkList&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This component gets the list of bookmarks from the Strapi endpoint &lt;code&gt;localhost:1337/bookmarks&lt;/code&gt; and displays them.&lt;/p&gt;

&lt;p&gt;Add the below code to &lt;code&gt;src/components/BookmarkList/index.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import BookmarkCard from "./../BookmarkCard";
    import axios from "axios";
    import { useEffect, useState } from "react";
    import AddBookmarkDialog from "./../AddBookmarkDialog";

    export default function BookmarkList(params) {
      const [bookmarks, setBookmarks] = useState([]);
      const [showAddBookmarkDialog, setShowAddBookmarkDialog] = useState(false);

      useEffect(async () =&amp;gt; {
        const data = await axios.get("http://localhost:1337/bookmarks");
        setBookmarks(data?.data);
      }, []);

      return (
        &amp;lt;div class="flex flex-col flex-wrap justify-center"&amp;gt;
          &amp;lt;div class="m-2 p-2"&amp;gt;
            &amp;lt;button
              onClick={() =&amp;gt; setShowAddBookmarkDialog(true)}
              class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded"
            &amp;gt;
              Add Bookmark
            &amp;lt;/button&amp;gt;
          &amp;lt;/div&amp;gt;
          &amp;lt;div&amp;gt;
            {bookmarks
              ?.sort((a, b) =&amp;gt; b.created_at.localeCompare(a.created_at))
              .map((bookmark, i) =&amp;gt; (
                &amp;lt;BookmarkCard bookmark={bookmark} key={i} /&amp;gt;
              ))}
          &amp;lt;/div&amp;gt;
          {showAddBookmarkDialog ? (
            &amp;lt;AddBookmarkDialog closeModal={() =&amp;gt; setShowAddBookmarkDialog(false)} /&amp;gt;
          ) : null}
        &amp;lt;/div&amp;gt;
      );
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have a state, &lt;code&gt;bookmarks&lt;/code&gt;. This is an array state that will hold the bookmarks fetched from our Strapi backend.&lt;/p&gt;

&lt;p&gt;We use the &lt;code&gt;useEffect&lt;/code&gt; hook to call the localhost:1337/bookmarks endpoint. The returned bookmarks are set to the &lt;code&gt;bookmarks&lt;/code&gt; state. The &lt;code&gt;bookmarks&lt;/code&gt; are then rendered using the &lt;code&gt;Array#map&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Add Bookmark&lt;/code&gt; button displays the &lt;code&gt;AddBookmarkDialog&lt;/code&gt; component when clicked.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;EditBookmarkDialog&lt;/strong&gt;&lt;br&gt;
This component is where we can edit a selected bookmark. Paste the below code in &lt;code&gt;src/components/EditBookmarkDialog/index.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import axios from "axios";
    import { useRef } from "react";
    import CloseIcon from "../CloseIcon";

    export default function EditBookmarkDialog({ closeModal, bookmark }) {
      const formRef = useRef();

      async function editBookmark() {
        var { title, content } = formRef.current;
        title = title.value;
        content = content.value;

        await axios.put("http://localhost:1337/bookmarks/" + bookmark?.id, {
          title,
          content,
          synopsis: content.slice(0, 100) + "...",
        });
        window.location.reload();
      }

      return (
        &amp;lt;div class="modal fixed -top-0 left-0 w-full h-full flex flex-col z-0 items-center"&amp;gt;
          &amp;lt;div
            class="modal-backdrop opacity-70 bg-gray-50 fixed w-full h-full z-10"
            onClick={closeModal}
          &amp;gt;&amp;lt;/div&amp;gt;
          &amp;lt;div class="modal-content z-20 w-2/5 mt-5 bg-white shadow-md"&amp;gt;
            &amp;lt;div class="modal-header flex justify-between items-center bg-red-600 p-3 text-white"&amp;gt;
              &amp;lt;h3 class="text-white font-bold"&amp;gt;Edit Bookmark&amp;lt;/h3&amp;gt;
              &amp;lt;span
                style={{ padding: "10px", cursor: "pointer" }}
                onClick={closeModal}
              &amp;gt;
                &amp;lt;CloseIcon /&amp;gt;
              &amp;lt;/span&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div className="modal-body content m-2 p-5 z-50"&amp;gt;
              &amp;lt;form ref={formRef}&amp;gt;
                &amp;lt;div class="w-full"&amp;gt;
                  &amp;lt;div class="pl-2"&amp;gt;
                    &amp;lt;span&amp;gt;TITLE&amp;lt;/span&amp;gt;
                  &amp;lt;/div&amp;gt;
                  &amp;lt;input
                    type="text"
                    class="border-gray-200 border-2 w-full m-2 p-2 rounded-md"
                    placeholder="Type in title..."
                    defaultValue={bookmark?.title}
                    name="title"
                  /&amp;gt;
                &amp;lt;/div&amp;gt;
                &amp;lt;div class="w-full"&amp;gt;
                  &amp;lt;div class="pl-2 mt-3"&amp;gt;
                    &amp;lt;span&amp;gt;CONTENT&amp;lt;/span&amp;gt;
                  &amp;lt;/div&amp;gt;
                  &amp;lt;textarea
                    type="text"
                    class="border-gray-200 border-2 w-full m-2 p-2 rounded-md"
                    placeholder="Type in content..."
                    defaultValue={bookmark?.content}
                    name="content"
                  &amp;gt;&amp;lt;/textarea&amp;gt;
                &amp;lt;/div&amp;gt;
              &amp;lt;/form&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div className="modal-footer flex justify-between p-4 bg-gray-200"&amp;gt;
              &amp;lt;button
                class="bg-gray-600 hover:bg-gray-700 text-white font-bold py-1 px-3 rounded"
                onClick={closeModal}
              &amp;gt;
                Cancel
              &amp;lt;/button&amp;gt;
              &amp;lt;button
                class="bg-red-600 hover:bg-red-700 text-white font-bold py-1 px-3 rounded"
                onClick={editBookmark}
              &amp;gt;
                Save
              &amp;lt;/button&amp;gt;
            &amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      );
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The selected bookmark to edit is sent via the component props. It is destructured to &lt;code&gt;bookmark&lt;/code&gt;.&lt;br&gt;
The title and content of the bookmark are set in the input boxes. Here the user can then modify their contents.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Save&lt;/code&gt; button calls the &lt;code&gt;editBookmark&lt;/code&gt; function, this function collects the values of the bookmark's from the input boxes. It generates a synopsis from the content, then makes an HTTP PUT request to &lt;code&gt;localhost:1337/bookmarks/+id&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;synopsis&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt;, and &lt;code&gt;content&lt;/code&gt; are sent as payload. The &lt;code&gt;id&lt;/code&gt; will be the id of the bookmark, this enables Strapi to edit the bookmark with the sent payload.&lt;/p&gt;

&lt;p&gt;Finally, the page is reloaded so we see the updated bookmark.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ViewBookmarkDialog&lt;/strong&gt;&lt;br&gt;
The component is used to view a bookmark. Paste the below code in the &lt;code&gt;src/components/ViewBookmarkDialog/index.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import CloseIcon from "./../CloseIcon";

    export default function ViewBookmarkDialog({ closeModal, bookmark }) {
      return (
        &amp;lt;div class="modal fixed -top-0 left-0 w-full h-full flex flex-col z-0 items-center"&amp;gt;
          &amp;lt;div
            class="modal-backdrop opacity-70 bg-gray-50 fixed w-full h-full z-10"
            onClick={closeModal}
          &amp;gt;&amp;lt;/div&amp;gt;
          &amp;lt;div class="modal-content z-20 w-2/5 mt-5 bg-white shadow-md"&amp;gt;
            &amp;lt;div class="modal-header flex justify-between items-center bg-red-600 p-3 text-white"&amp;gt;
              &amp;lt;h3 class="text-white font-bold"&amp;gt;View Bookmark&amp;lt;/h3&amp;gt;
              &amp;lt;span
                style={{ padding: "10px", cursor: "pointer" }}
                onClick={closeModal}
              &amp;gt;
                &amp;lt;CloseIcon /&amp;gt;
              &amp;lt;/span&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div className="modal-body content m-2 p-5 z-50"&amp;gt;
              &amp;lt;div class="w-full"&amp;gt;
                &amp;lt;div class="pl-2"&amp;gt;
                  &amp;lt;span&amp;gt;TITLE&amp;lt;/span&amp;gt;
                &amp;lt;/div&amp;gt;

                &amp;lt;input
                  type="text"
                  class="border-gray-200 border-2 w-full m-2 p-2 rounded-md"
                  placeholder="Type in title.."
                  defaultValue={bookmark?.title}
                  disabled={true}
                /&amp;gt;
              &amp;lt;/div&amp;gt;
              &amp;lt;div class="w-full"&amp;gt;
                &amp;lt;div class="pl-2 mt-3"&amp;gt;
                  &amp;lt;span&amp;gt;CONTENT&amp;lt;/span&amp;gt;
                &amp;lt;/div&amp;gt;

                &amp;lt;textarea
                  type="text"
                  class="border-gray-200 border-2 w-full m-2 p-2 rounded-md"
                  placeholder="Type in content.."
                  disabled={true}
                  defaultValue={bookmark?.content}
                &amp;gt;&amp;lt;/textarea&amp;gt;
              &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div className="modal-footer flex justify-between p-4 bg-gray-200"&amp;gt;
              &amp;lt;button
                class="bg-gray-600 hover:bg-gray-700 text-white font-bold py-1 px-3 rounded"
                onClick={closeModal}
              &amp;gt;
                Close
              &amp;lt;/button&amp;gt;
            &amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      );
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This component destructures the &lt;code&gt;bookmark&lt;/code&gt; object and &lt;code&gt;closeModal&lt;/code&gt; function from its props. It displays the title and the content from the bookmark object. The &lt;code&gt;closeModal&lt;/code&gt; function closes the component.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;App.js&lt;/strong&gt;&lt;br&gt;
We will add routing to our &lt;code&gt;App&lt;/code&gt; component, paste the below code to &lt;code&gt;src/App.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import "./App.css";
    import { BrowserRouter, Route, Switch } from "react-router-dom";
    import Header from "./components/Header";
    import BookmarkList from "./components/BookmarkList";

    function App() {
      return (
        &amp;lt;&amp;gt;
          &amp;lt;Header /&amp;gt;
          &amp;lt;div class="container bg-gray-100"&amp;gt;
            &amp;lt;head&amp;gt;
              &amp;lt;title&amp;gt;Bookmark&amp;lt;/title&amp;gt;
              &amp;lt;link rel="icon" href="/favicon.ico" /&amp;gt;
            &amp;lt;/head&amp;gt;

            &amp;lt;main class="flex justify-center mx-86"&amp;gt;
              &amp;lt;BrowserRouter&amp;gt;
                &amp;lt;Switch&amp;gt;
                  &amp;lt;Route exact path="/"&amp;gt;
                    &amp;lt;BookmarkList /&amp;gt;
                  &amp;lt;/Route&amp;gt;
                  &amp;lt;Route path="*"&amp;gt;
                    &amp;lt;BookmarkList /&amp;gt;
                  &amp;lt;/Route&amp;gt;{" "}
                &amp;lt;/Switch&amp;gt;
              &amp;lt;/BrowserRouter&amp;gt;
            &amp;lt;/main&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/&amp;gt;
      );
    }

    export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have a single route which is the &lt;code&gt;/&lt;/code&gt; index route. We used the &lt;code&gt;Route&lt;/code&gt; component from &lt;code&gt;react-touter-dom&lt;/code&gt; to render the &lt;code&gt;BookmarkList&lt;/code&gt; component when the index route &lt;code&gt;/&lt;/code&gt; is navigated.&lt;/p&gt;

&lt;p&gt;We see that the &lt;code&gt;Header&lt;/code&gt; component is outside the &lt;code&gt;BrowserRouter&lt;/code&gt;, this makes it render on every page in our routing system.&lt;/p&gt;

&lt;p&gt;See that the &lt;code&gt;div&lt;/code&gt; element below the &lt;code&gt;Header&lt;/code&gt; is set to have &lt;code&gt;container&lt;/code&gt; in its &lt;code&gt;class&lt;/code&gt; attribute. We want the &lt;code&gt;div&lt;/code&gt; element to center its content. To do that we have to go to the &lt;code&gt;tailwind.config.js&lt;/code&gt; file and make an addition to the &lt;code&gt;theme.extend&lt;/code&gt; object.&lt;/p&gt;

&lt;p&gt;Add the below code to &lt;code&gt;tailwind.config.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    module.exports = {
      purge: ["./src/**/*.{js,jsx,ts,tsx}", "./public/index.html"],
      darkMode: false, // or 'media' or 'class'
      theme: {
        extend: {
          container: {
            center: true,
          },
        },
      },
      variants: {
        extend: {},
      },
      plugins: [],
    };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;div.container&lt;/code&gt; will center its content.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#testing-the-app"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Testing the app&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;Make sure your Strapi backend is running and your Reactjs is running too if not, start your Reactjs server with the below command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    yarn start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To start the Strapi server run the below command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    yarn develop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Add bookmark&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2TkaHtl7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622471238682_Screenshot%2B2021-05-31%2Bat%2B15.25.09.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2TkaHtl7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622471238682_Screenshot%2B2021-05-31%2Bat%2B15.25.09.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8kly2Kp7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622471250233_Screenshot%2B2021-05-31%2Bat%2B15.25.17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8kly2Kp7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622471250233_Screenshot%2B2021-05-31%2Bat%2B15.25.17.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;View bookmark&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wdhqyeNu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622471569573_Screenshot%2B2021-05-31%2Bat%2B15.26.21.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wdhqyeNu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622471569573_Screenshot%2B2021-05-31%2Bat%2B15.26.21.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Copy bookmark&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_NPxLQej--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622471261609_Screenshot%2B2021-05-31%2Bat%2B15.25.59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_NPxLQej--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622471261609_Screenshot%2B2021-05-31%2Bat%2B15.25.59.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Edit bookmark&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c1eRlzgM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622471587527_Screenshot%2B2021-05-31%2Bat%2B15.26.30.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c1eRlzgM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622471587527_Screenshot%2B2021-05-31%2Bat%2B15.26.30.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dJOpZdtx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622471601669_Screenshot%2B2021-05-31%2Bat%2B15.26.36.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dJOpZdtx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622471601669_Screenshot%2B2021-05-31%2Bat%2B15.26.36.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Delete bookmark&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h4WnGCIU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622471615143_Screenshot%2B2021-05-31%2Bat%2B15.26.43.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h4WnGCIU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622471615143_Screenshot%2B2021-05-31%2Bat%2B15.26.43.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nmgu7Otg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622471625680_Screenshot%2B2021-05-31%2Bat%2B15.26.47.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nmgu7Otg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_208E889A506E206117114FEBF5C46A437A791A95FE2653C1619BD678CD1A856B_1622471625680_Screenshot%2B2021-05-31%2Bat%2B15.26.47.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can get the source code of the backend and frontend of this app below.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Source code&lt;/strong&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/strapi-prjs/strapi-bookmark-tailwind"&gt;Frontend&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/strapi-prjs/strapi-bookmark-api"&gt;Backend&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://tailwindcss.com/docs/border-radius"&gt;&lt;strong&gt;Border Radius&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codingthesmartway.com/tailwind-css-for-absolute-beginners/"&gt;Tailwind CSS For Absolute Beginners&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.joshbritz.co/posts/the-sexiness-of-headless-ui/"&gt;The Sexiness of Headless UI Components&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;This was my very first time using Tailwind CSS, and I must say it blew my mind. It made my job very fast and easy. The fantastic thing is that I built this app without writing a single line of CSS code !!&lt;/p&gt;

&lt;p&gt;Let's recap, we started by learning about Headless CMS and headless UI, then we proceeded to learn about Strapi and Tailwind CSS. They are examples of Headless CMS and Headless UI, respectively. Later on, we demonstrated how to use both Strapi and Tailwind CSS by building a Bookmarking app.&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>react</category>
      <category>strapi</category>
    </item>
    <item>
      <title>Strings in GO</title>
      <author>iyiola-dev</author>
      <pubDate>Thu, 08 Jul 2021 16:34:37 +0000</pubDate>
      <link>https://dev.to/iyioladev/strings-in-go-3d5a</link>
      <guid>https://dev.to/iyioladev/strings-in-go-3d5a</guid>
      <description>&lt;p&gt;The Strings and Strconv library&lt;/p&gt;

&lt;p&gt;Unlike other programming languages like Dart, Java, or Javascript, you can easily add a method to a String or convert a string to int without a package/library. In golang that is not very easy without a library. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-strconv-library"&gt;
  &lt;/a&gt;
  THE STRCONV LIBRARY
&lt;/h3&gt;

&lt;p&gt;The first one we will be talking about will be the strconv library.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://golang.org/pkg/strconv/"&gt;link to the docs&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The most common use of the strconv library/package is converting &lt;code&gt;string to int&lt;/code&gt; or &lt;code&gt;int to String&lt;/code&gt; and few other things will start by importing the package like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"strconv"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So for converting int to string or vice versa there are 2 commands :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Itoa: used to convert int to string.&lt;/li&gt;
&lt;li&gt;Atoi: used to convert string to int.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first one we will use is &lt;code&gt;Itoa&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;    &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;64&lt;/span&gt;
    &lt;span class="n"&gt;letter&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;strconv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Itoa&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"letter is a %T"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;letter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you run this  you should see something like &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;letter is a string&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The next thing is &lt;code&gt;Atoi&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;    &lt;span class="n"&gt;letter&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"4"&lt;/span&gt;
    &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;strconv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Atoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;letter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%T is a number"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you run this you should see something like &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;int is a number&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Of course, there are a lot more other things you can do with this package. you can check the docs for more functions.&lt;/p&gt;

&lt;p&gt;### THE STRINGS PACKAGE &lt;/p&gt;

&lt;p&gt;&lt;a href="https://golang.org/pkg/strings/"&gt;Link to the official documentation&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;You can do many things with this package, but we will only be treating a few for this article.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;Replace&lt;/code&gt; function&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;Split&lt;/code&gt; function&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;ToLower&lt;/code&gt; function&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;ToUpper&lt;/code&gt; function&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;Contains&lt;/code&gt; function&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#the-raw-replace-endraw-function"&gt;
  &lt;/a&gt;
  The &lt;code&gt;Replace&lt;/code&gt; function
&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;Replace&lt;/code&gt; function accepts 4 arguments: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The string &lt;/li&gt;
&lt;li&gt;The string to be replaced&lt;/li&gt;
&lt;li&gt;What should the string  it should be replaced with&lt;/li&gt;
&lt;li&gt;The number of replacement occurrences &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;NB: for the number of occurrences, the string should be replaced if the number is a negative integer. It will replace all occurrences, but then instead of passing a negative integer, one can use the &lt;code&gt;ReplaceAll&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;So I am going to show 2 examples with different cases of how this is used below.&lt;/p&gt;

&lt;p&gt;1.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"The boy is stupid stupid"&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"stupid"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"wise"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This replaces the first occurrence of &lt;code&gt;stupid&lt;/code&gt; with &lt;code&gt;wise&lt;/code&gt; because we specified that it should be done only once with the integer &lt;code&gt;1&lt;/code&gt;. If we replace it with &lt;code&gt;2&lt;/code&gt; it will change both stupid to wise.&lt;/p&gt;

&lt;p&gt;2.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;    &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"The boy is stupid stupid"&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"stupid"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"wise"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This should show &lt;code&gt;The boy is wise wise&lt;/code&gt; as a result when you run it.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-split-function"&gt;
  &lt;/a&gt;
  The Split Function
&lt;/h4&gt;

&lt;p&gt;The split function takes in 2 arguments the strings to be separated and what should be used as the string to separate them then it returns a slice containing the strings separated. If there is no result it will return the slice with only one element which is the string. An example will be shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"season 03,season02,season01"&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%q&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;","&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The result when this runs will be &lt;code&gt;["season 03" "season02" "season01"]&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-tolower-function"&gt;
  &lt;/a&gt;
  The ToLower Function
&lt;/h4&gt;

&lt;p&gt;The ToLower function as the name suggests turns a string to lower case. It accepts only one argument, the string to be turned. An example will be shown below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;    &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"The Boy is Foolish"&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToLower&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;when this runs the result will be &lt;code&gt;the boy is foolish&lt;/code&gt; which means the case has been changed to lowercase.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-toupper-function"&gt;
  &lt;/a&gt;
  The ToUpper Function
&lt;/h4&gt;

&lt;p&gt;The ToUpper function as the name suggests turns a string to uppercase. It accepts only one argument, the string to be turned. An example will be shown below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"the boy is foolish"&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToUpper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;when this runs the result will be &lt;code&gt;THE BOY IS FOOLISH&lt;/code&gt; which means the case has been changed to uppercase.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-contains-function"&gt;
  &lt;/a&gt;
  The Contains Function
&lt;/h4&gt;

&lt;p&gt;The contains functions check if a substring is part of a string provided, so it takes 2 arguments, the string to be checked and the substring, then it returns a bool. An example is provided below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"trinkets"&lt;/span&gt;
&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"rin"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This returns a boolean of true because the word rin can be found in trinkets otherwise it would have returned false.&lt;/p&gt;

&lt;p&gt;A whole lot more can be done with the &lt;code&gt;Strconv&lt;/code&gt; and the &lt;code&gt;Strings&lt;/code&gt; package check out the docs for more&lt;/p&gt;

</description>
      <category>go</category>
    </item>
    <item>
      <title> Build Gmail Clone using HTML &amp; CSS </title>
      <author>Christopher Glikpo</author>
      <pubDate>Thu, 08 Jul 2021 16:22:50 +0000</pubDate>
      <link>https://dev.to/cglikpo/build-gmail-clone-using-html-css-36ak</link>
      <guid>https://dev.to/cglikpo/build-gmail-clone-using-html-css-36ak</guid>
      <description>&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;In this video,we will build gmail clone using html and css.This  tutorial is target towards beginners who want to improve their design skills by cloning website using html and css.&lt;br&gt;
Download the starter file via &lt;a href="https://github.com/learnwithchristopherglikpo/gmail_clone"&gt;github&lt;/a&gt; in order to follow along with the video.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ve9I2tcl_d0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you like my work, please consider&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/cglikpo"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c23TxQOF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jm11knj7d8zwcvo150q2.png" alt="Buy me a coffee"&gt;&lt;/a&gt;&lt;br&gt;
so that I can bring more projects, more articles for you&lt;/p&gt;

&lt;p&gt;If you want to learn more about Web Development, feel free to &lt;a href="https://www.youtube.com/c/ChristopherGlikpo"&gt;follow me on Youtube!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
