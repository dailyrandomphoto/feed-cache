<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>CoinSwitch Kuber App Review in Hindi 2021</title>
      <author>Deepak6967</author>
      <pubDate>Sun, 25 Apr 2021 17:23:11 +0000</pubDate>
      <link>https://dev.to/deepak6967/coinswitch-kuber-app-review-in-hindi-2021-2cf1</link>
      <guid>https://dev.to/deepak6967/coinswitch-kuber-app-review-in-hindi-2021-2cf1</guid>
      <description>&lt;p&gt;‡§π‡•á‡§≤‡•ã ‡§¶‡•ã‡§∏‡•ç‡§§‡•ã‡§Ç, ‡§Ü‡§ú ‡§π‡§Æ ‡§á‡§∏ ‡§Ü‡§∞‡•ç‡§ü‡§ø‡§ï‡§≤ ‡§Æ‡•á‡§Ç ‡§π‡§Æ ‡§¨‡§æ‡§§ ‡§ï‡§∞‡§®‡•á ‡§µ‡§æ‡§≤‡•á ‡§π‡•à‡§Ç coinswitch kuber App ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç, ‡§Ü‡§™‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¨‡§§‡§æ ‡§¶‡•á ‡§ï‡•Ä coin switch 2017 ‡§Æ‡•á‡§Ç ‡§∏‡•ç‡§•‡§æ‡§™‡§ø‡§§ ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§•‡§æ, ‡§≤‡•á‡§ï‡§ø‡§® ‡§á‡§∏‡•á ‡§≠‡§æ‡§∞‡§§ ‡§Æ‡•á‡§Ç June 2020 ‡§ï‡•ç‡§∞‡§ø‡§™‡•ç‡§ü‡•ã‡§ï‡§∞‡•á‡§Ç‡§∏‡•Ä ‡§è‡§ï‡•ç‡§∏‡§ö‡•á‡§Ç‡§ú ‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§è‡§™‡•ç‡§≤‡§ø‡§ï‡•á‡§∂‡§® ‡§ï‡•á ‡§§‡•ã‡§∞ ‡§™‡§∞ ‡§≤‡•â‡§®‡•ç‡§ö ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§•‡§æ ‡§î‡§∞ ‡§á‡§∏ ‡§è‡§™‡•ç‡§≤‡•Ä‡§ï‡•á‡§∂‡§® ‡§ï‡•ã ‡•ß ‡§Æ‡§ø‡§≤‡§ø‡§Ø‡§® ‡§∏‡•á ‡§≠‡•Ä ‡§ú‡§Ø‡§æ‡§¶‡§æ ‡§¨‡§æ‡§∞ ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cryptocurrency-%E0%A4%95%E0%A5%8D%E0%A4%AF%E0%A4%BE-%E0%A4%B9%E0%A5%88"&gt;
  &lt;/a&gt;
  Cryptocurrency ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?
&lt;/h3&gt;

&lt;p&gt;Cryptocurrency ‡§è‡§ï digital money ‡§π‡•à ‡§ï‡•ç‡§Ø‡•Ç‡§Ç‡§ï‡§ø ‡§Ø‡•á ‡§ï‡•á‡§µ‡§≤ Online ‡§π‡•Ä ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•à ‡§á‡§∏‡§ï‡§æ ‡§ï‡•ã‡§à ‡§´‡§ø‡§ú‡§ø‡§ï‡§≤ ‡§™‡•ç‡§∞‡§æ‡§∞‡•Ç‡§™ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à ‡§¶‡•Å‡§∏‡§∞‡•á currencies ‡§ú‡•à‡§∏‡•á ‡§ï‡•Ä ‡§≠‡§æ‡§∞‡§§ ‡§Æ‡•á‡§Ç Rupees, USA ‡§Æ‡•á‡§Ç Dollar, Europe ‡§Æ‡•á‡§Ç Euro ‡§á‡§§‡•ç‡§Ø‡§æ‡§¶‡§ø ‡§á‡§®‡§ï‡§æ ‡§´‡§ø‡§ú‡§ø‡§ï‡§≤ ‡§™‡•ç‡§∞‡§æ‡§∞‡•Ç‡§™ ‡§π‡•ã‡§§‡§æ ‡§π‡•à ‡§á‡§® currencies ‡§ï‡•ã ‡§∏‡§∞‡§ï‡§æ‡§∞ ‡§™‡•Ç‡§∞‡•á ‡§¶‡•á‡§∂ ‡§Æ‡•á‡§Ç ‡§≤‡§æ‡§ó‡•Ç ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à‡§Ç ‡§î‡§∞ ‡§á‡§∏‡•ç‡§§‡§Æ‡§æ‡§≤ ‡§Æ‡•á‡§Ç ‡§≤‡§æ‡§Ø‡•Ä ‡§ú‡§æ‡§§‡•Ä ‡§π‡•à‡§Ç ‡§†‡•Ä‡§ï ‡§â‡§∏‡•Ä ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§á‡§® currencies ‡§ï‡•ã ‡§≠‡•Ä ‡§™‡•Å‡§∞‡•á ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§Æ‡•á‡§Ç ‡§á‡§∏‡•ç‡§§‡§Æ‡§æ‡§≤ ‡§Æ‡•á‡§Ç ‡§≤‡§æ‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à. ‡§≤‡•á‡§ï‡§ø‡§® ‡§á‡§® Cryptocurrencies ‡§ï‡•á ‡§ä‡§™‡§∞ Government ‡§ï‡§æ ‡§ï‡•ã‡§à ‡§≠‡•Ä ‡§π‡§æ‡§• ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§§‡§æ ‡§π‡•à ‡§ï‡•ç‡§Ø‡•Ç‡§Ç‡§ï‡§ø ‡§Ø‡•á Decentrallized Currency ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡§Ç&lt;/p&gt;

&lt;p&gt;Digital money ( Cryptocurrency ) ‡§¨‡•ç‡§≤‡•â‡§ï‡§ö‡•á‡§® ‡§§‡§ï‡§®‡•Ä‡§ï ‡§™‡§∞ ‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§π‡•à‡§Ç ‡§ï‡•ç‡§∞‡§ø‡§™‡•ç‡§ü‡•ã‡§ï‡•ã‡§∞‡•ç‡§∞‡•á‡§Ç‡§∏‡•Ä ‡§è‡§ï‡•ç‡§∏‡§ö‡•á‡§Ç‡§ú ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§ø‡§∏‡•Ä ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡§æ‡§∞‡•ç‡§Æ ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§™‡•ú‡§§‡•Ä ‡§π‡•à | Coinswitch Kuber App ‡§â‡§®‡•ç‡§π‡•Ä ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡§æ‡§∞‡•ç‡§Æ ‡§Æ‡•á‡§Ç ‡§∏‡•á ‡§è‡§ï ‡§π‡•à&lt;/p&gt;

&lt;p&gt;Read Also:- &lt;a href="https://smartphonescompare.in/article/bhaarat-mein-jald-launch-hone-vaala-hai-oppo-a74-5g/"&gt;‡§≠‡§æ‡§∞‡§§ ‡§Æ‡•á‡§Ç ‡§ú‡§≤‡•ç‡§¶ Oppo A74 5G ‡§≤‡•â‡§®‡•ç‡§ö ‡§π‡•ã‡§®‡•á ‡§µ‡§æ‡§≤‡§æ ‡§π‡•à&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#coinswitch-kuber-app-%E0%A4%95%E0%A5%8D%E0%A4%AF%E0%A4%BE-%E0%A4%B9%E0%A5%88"&gt;
  &lt;/a&gt;
  Coinswitch Kuber App ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?
&lt;/h3&gt;

&lt;p&gt;‡§Ø‡§π ‡§è‡§ï cryptocurrency exchange app ‡§π‡•à‡§Ç ‡§á‡§∏‡§ï‡•Ä ‡§Æ‡§¶‡§¶ ‡§∏‡•á ‡§π‡§Æ ‡§Ü‡§∏‡§æ‡§®‡•Ä ‡§∏‡•á ‡§ï‡§ø‡§∏‡•Ä ‡§≠‡•Ä cryptocurrency ‡§ï‡•ã ‡§ñ‡§∞‡•Ä‡§¶ ‡§Ø‡§æ ‡§¨‡•á‡§ö ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏‡§ï‡•Ä ‡§∏‡§¨‡§∏‡•á ‡§Ö‡§ö‡•ç‡§õ‡•Ä ‡§¨‡§æ‡§§ ‡§Ø‡§π ‡§π‡•à ‡§ï‡§ø ‡§á‡§∏‡§Æ‡•á‡§Ç ‡§π‡§Æ ‡§Æ‡§ø‡§®‡§Æ‡§Æ ‡•ß‡•¶‡•¶ ‡§∞‡•Ç‡§™‡§Ø‡•á ‡§∏‡•á ‡§ü‡•ç‡§∞‡•á‡§°‡§ø‡§Ç‡§ó ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#coinswitch-kuber-app-%E0%A4%95%E0%A5%88%E0%A4%B8%E0%A5%87-download-%E0%A4%95%E0%A4%B0%E0%A5%87%E0%A4%82"&gt;
  &lt;/a&gt;
  Coinswitch Kuber App ‡§ï‡•à‡§∏‡•á Download ‡§ï‡§∞‡•á‡§Ç?
&lt;/h3&gt;

&lt;p&gt;‡§á‡§∏ App ‡§ï‡•ã ‡§¨‡•ú‡•Ä ‡§Ü‡§∏‡§æ‡§®‡•Ä ‡§∏‡•á ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à ‡§ï‡•ç‡§Ø‡•Å‡§ï‡•Ä Coinswitch App playstore ‡§™‡§∞ ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•à ‡§ú‡§ø‡§∏‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ ‡§π‡§Æ‡•á‡§Ç ‡§Ö‡§®‡•ç‡§Ø ‡§ï‡§ø‡§∏‡•Ä ‡§≠‡•Ä ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§™‡§∞ ‡§®‡§π‡•Ä‡§Ç ‡§ú‡§æ‡§®‡§æ ‡§™‡•ú‡§§‡§æ ‡§π‡•à | ‡§π‡§Æ‡§®‡•á Coinswitch Kuber App ‡§ï‡•Ä official ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§ï‡§æ ‡§≤‡§ø‡§Ç‡§ï ‡§¶‡§ø‡§Ø‡§æ ‡§π‡•à ‡§µ‡§π‡§æ‡§Å ‡§Ü‡§™ Android ‡§Ø‡§æ IOS ‡§¶‡•ã‡§®‡•ã‡§Ç ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•ã&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;‡§Ö‡§ó‡§∞ ‡§Ü‡§™‡§ï‡•ã ‡§Ø‡§π ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§™‡§∏‡§Ç‡§¶ ‡§Ü‡§Ø‡•Ä ‡§π‡•à‡•§ ‡§§‡•ã ‡§≤‡•á‡§ñ  ‡§™‡•Ç‡§∞‡§æ ‡§™‡•ù‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§ø‡§ö‡•á ‡§¶‡§ø‡§è ‡§ó‡§Ø‡•á ‡§≤‡§ø‡§Ç‡§ï ‡§™‡§∞ ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡•á&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#coinswitch-kuber"&gt;
  &lt;/a&gt;
  &lt;a href="https://smartphonescompare.in/article/coinswitch-kuber-app-review-in-hindi-2021/"&gt;CoinSwitch Kuber&lt;/a&gt;
&lt;/h3&gt;

</description>
      <category>coinswitch</category>
      <category>cryptocurrency</category>
      <category>review</category>
    </item>
    <item>
      <title>Weekly Digest 16/2021 ‚Äì Top of the week</title>
      <author>Marco Biedermann</author>
      <pubDate>Sun, 25 Apr 2021 17:16:27 +0000</pubDate>
      <link>https://dev.to/worldindev/weekly-digest-16-2021-top-of-the-week-h14</link>
      <guid>https://dev.to/worldindev/weekly-digest-16-2021-top-of-the-week-h14</guid>
      <description>&lt;p&gt;Welcome to my Weekly Digest #16, which is the last one for April.&lt;/p&gt;

&lt;p&gt;This weekly digest contains a lot of interesting and inspiring articles, videos, tweets, podcasts, and designs I consumed during this week.&lt;/p&gt;




&lt;p&gt;¬†&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#giveaway"&gt;
  &lt;/a&gt;
  üéâ Giveaway
&lt;/h2&gt;

&lt;p&gt;We are giving away any course you need on Udemy. Any price any course.&lt;br&gt;
To enter you have to do the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;üëç React to this post&lt;/li&gt;
&lt;li&gt;‚úâÔ∏è Subscribe to our &lt;a href="https://worldindev.ck.page"&gt;newsletter&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You will receive &lt;a href="https://dev.to/worldindev"&gt;our articles&lt;/a&gt; directly to your &lt;a href="https://worldindev.ck.page"&gt;inbox&lt;/a&gt; üì¨.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;PS: We will send a &lt;a href="https://dev.to/worldindev/25-udemy-courses-worth-your-money-time-2e5j"&gt;list of 25 additional Udemy courses&lt;/a&gt; in our Newsletter exclusively.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#interesting-articles-to-read"&gt;
  &lt;/a&gt;
  Interesting articles to read
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#how-i-built-my-blog"&gt;
  &lt;/a&gt;
  How I Built My Blog
&lt;/h3&gt;

&lt;p&gt;An in-depth look at the technical stack behind this very blog! We'll see how Josh uses Next's API routes to implement my hit and like counters, how he uses MDX to add interaction and customization, and how he organizes his codebase, among others.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.joshwcomeau.com/blog/how-i-built-my-blog/"&gt;How I Built My Blog&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-remember-javascript"&gt;
  &lt;/a&gt;
  How to remember JavaScript
&lt;/h3&gt;

&lt;p&gt;JavaScript contains many things ‚Äî lots of different methods and ways to do things. How do you remember them all?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://zellwk.com/blog/remember-javascript/"&gt;How to remember JavaScript&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#devtools-for-css-layouts-2021-edition"&gt;
  &lt;/a&gt;
  DevTools for CSS layouts 2021 edition
&lt;/h3&gt;

&lt;p&gt;As someone who loves and works with CSS on an almost daily basis, DevTools are something near and dear to your heart. Recently, Chen has been seeing updates from both the Webkit and Chrome team about updates to layout-related DevTools features&lt;/p&gt;

&lt;p&gt;&lt;a href="https://chenhuijing.com/blog/devtools-for-css-layouts-2021-edition/"&gt;DevTools for CSS layouts 2021 edition&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#best-tailwind-css-components-and-template-collections"&gt;
  &lt;/a&gt;
  Best Tailwind CSS components and template collections
&lt;/h3&gt;

&lt;p&gt;Discover seven of the best free Tailwind component and template collections that you can use to rapidly build custom user interfaces.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.logrocket.com/best-tailwind-css-components-and-template-collections/"&gt;Best Tailwind CSS components and template collections - LogRocket Blog&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-actually-test-uis"&gt;
  &lt;/a&gt;
  How to actually test UIs
&lt;/h3&gt;

&lt;p&gt;Testing techniques used by leading engineering teams&lt;/p&gt;

&lt;p&gt;&lt;a href="https://storybook.js.org/blog/how-to-actually-test-uis/"&gt;How to actually test UIs&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-improve-css-performance"&gt;
  &lt;/a&gt;
  How to Improve CSS Performance
&lt;/h3&gt;

&lt;p&gt;Learn the most common speed issues caused by CSS and how to avoid them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://calibreapp.com/blog/css-performance"&gt;How to Improve CSS Performance | Calibre&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#some-great-videos-i-watched-this-week"&gt;
  &lt;/a&gt;
  Some great videos I watched this week
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#reveal-testing-weakspots-in-your-javascript-code-with-jest-coverage"&gt;
  &lt;/a&gt;
  Reveal testing weakspots in your JavaScript code with Jest Coverage
&lt;/h3&gt;

&lt;p&gt;If you've ever been stuck on what tests to write for your code, Jest's coverage reports can be a great tool for showing what sections of your codebase are not tested yet. It becomes even more powerful when used in combination with Continuous Integration (CI), as it can be automated and even block pull requests from merging, which we'll show in this video.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/fQpvuRVDp-8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/JimmyDCleveland"&gt;Jimmy Cleveland&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#visual-regression-testing-with-storybooks-chromatic"&gt;
  &lt;/a&gt;
  Visual Regression Testing with Storybook's Chromatic
&lt;/h3&gt;

&lt;p&gt;When building a design system or component UI it becomes more and more difficult to catch visual bugs as the project scales. This is especially true when changing one component affects other components that use it, and QA doesn't know to check every component it's related to.&lt;/p&gt;

&lt;p&gt;Visual regression testing is an extra layer of security there, and Storybook's Chromatic is the most polished one I have tried. So let's set a new project up and show off some of the features Chromatic offers.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/jz-vpFBilhs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/JimmyDCleveland"&gt;Jimmy Cleveland&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-use-typescript-with-react-but-should-you"&gt;
  &lt;/a&gt;
  How to use TypeScript with React... But should you?
&lt;/h3&gt;

&lt;p&gt;Learn how to set up React with TypeScript. Compare the pros and cons of using TypeScript in a React project.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ydkQlJhodio"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/fireship_dev"&gt;Fireship&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thinking-on-ways-to-solve-split-text"&gt;
  &lt;/a&gt;
  Thinking on ways to solve split text
&lt;/h3&gt;

&lt;p&gt;In today‚Äôs GUI challenge, Adam Argyle will be responding to your comments for the first 30 minutes after the episode releases. Connect with us here, ask questions, or submit your own code!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3hvN7bkjZBk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/argyleink"&gt;Adam Argyle&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-slow-is-javascript-really-javascript-vs-c"&gt;
  &lt;/a&gt;
  How Slow is JavaScript Really? JavaScript vs C++
&lt;/h3&gt;

&lt;p&gt;Is JavaScript really that slow? Or is that just a leftover impression from the old days?&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/WLwTlC1R2sY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/iced_coffee_dev"&gt;Simon&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conducting-tech-interviews"&gt;
  &lt;/a&gt;
  Conducting tech interviews
&lt;/h3&gt;

&lt;p&gt;In this episode Jake and Surma chat about interviewing for web dev roles, drawing on their good and bad experiences as candidates, and mistakes they've made as interviewers. Covering prep, probing questions, coding tasks, and rating candidates.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/hFyQn5F5pc0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/jaffathecake"&gt;Jake Archibald&lt;/a&gt; and &lt;a href="https://twitter.com/DasSurma"&gt;Surma&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#useful-github-repositories"&gt;
  &lt;/a&gt;
  Useful GitHub repositories
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#gittips"&gt;
  &lt;/a&gt;
  git-tips
&lt;/h3&gt;

&lt;p&gt;Most commonly used git tips and tricks.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/git-tips"&gt;
        git-tips
      &lt;/a&gt; / &lt;a href="https://github.com/git-tips/tips"&gt;
        tips
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Most commonly used git tips and tricks.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h2&gt;
git-tips&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Collection of &lt;code&gt;git-tips&lt;/code&gt;, want to add your tips? Checkout &lt;a href="https://raw.githubusercontent.com/git-tips/tips/master/./contributing.md"&gt;contributing.md&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://git.io/git-tips" rel="nofollow"&gt;English&lt;/a&gt; | &lt;a href="https://github.com/521xueweihan/git-tips"&gt;‰∏≠Êñá&lt;/a&gt; | &lt;a href="https://github.com/Imangazaliev/git-tips"&gt;–†—É—Å—Å–∫–∏–π&lt;/a&gt; | &lt;a href="https://github.com/mingrammer/git-tips"&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt; | &lt;a href="https://github.com/hprobotic/git-tips"&gt;Ti·∫øng Vi·ªát&lt;/a&gt; | &lt;a href="https://github.com/isotai/git-tips"&gt;Êó•Êú¨Ë™û&lt;/a&gt; | &lt;a href="https://github.com/amarduwal/git-tips"&gt;‡§®‡•á‡§™‡§æ‡§≤‡•Ä&lt;/a&gt; | &lt;a href="https://github.com/mbiesiad/tips"&gt;Polski&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;strong&gt;Tools:&lt;/strong&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/git-tip" rel="nofollow"&gt;git-tip&lt;/a&gt; - A handy CLI to make optimum use of these tips. (&lt;a href="https://github.com/djoudi5/docker-git-tip"&gt;Here in Docker container&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;P.S: All these commands are tested on &lt;code&gt;git version 2.7.4 (Apple Git-66)&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/git-tips/tips/master/#everyday-git-in-twenty-commands-or-so"&gt;Everyday Git in twenty commands or so&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/git-tips/tips/master/#show-helpful-guides-that-come-with-git"&gt;Show helpful guides that come with Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/git-tips/tips/master/#search-change-by-content"&gt;Search change by content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/git-tips/tips/master/#show-changes-over-time-for-specific-file"&gt;Show changes over time for specific file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/git-tips/tips/master/#remove-sensitive-data-from-history-after-a-push"&gt;Remove sensitive data from history, after a push&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/git-tips/tips/master/#sync-with-remote-overwrite-local-changes"&gt;Sync with remote, overwrite local changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/git-tips/tips/master/#list-of-all-files-till-a-commit"&gt;List of all files till a commit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/git-tips/tips/master/#git-reset-first-commit"&gt;Git reset first commit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/git-tips/tips/master/#reset-preserve-uncommitted-local-changes"&gt;Reset: preserve uncommitted local changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/git-tips/tips/master/#list-all-the-conflicted-files"&gt;List all the conflicted files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/git-tips/tips/master/#list-of-all-files-changed-in-a-commit"&gt;List of all files changed in a commit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/git-tips/tips/master/#unstaged-changes-since-last-commit"&gt;Unstaged changes since last commit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/git-tips/tips/master/#changes-staged-for-commit"&gt;Changes staged for commit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/git-tips/tips/master/#show-both-staged-and-unstaged-changes"&gt;Show both staged and unstaged changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/git-tips/tips/master/#list-all-branches-that-are-already-merged-into-master"&gt;List all branches that are already merged&lt;/a&gt;‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/git-tips/tips"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#the-endless-acid-banger"&gt;
  &lt;/a&gt;
  The Endless Acid Banger
&lt;/h3&gt;

&lt;p&gt;An algorithmic human-computer techno jam&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/vitling"&gt;
        vitling
      &lt;/a&gt; / &lt;a href="https://github.com/vitling/acid-banger"&gt;
        acid-banger
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The Endless Acid Banger
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
The Endless Acid Banger&lt;/h1&gt;
&lt;p&gt;An algorithmic human-computer techno jam&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/vitling/acid-banger/blob/main/preview.png?raw=true"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JMZ5HxvP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vitling/acid-banger/raw/main/preview.png%3Fraw%3Dtrue" alt="Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Built in Typescript with the WebAudio API.&lt;/p&gt;
&lt;p&gt;Live version running at &lt;a href="https://www.vitling.xyz/toys/acid-banger" rel="nofollow"&gt;www.vitling.xyz/toys/acid-banger&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Support&lt;/h2&gt;
&lt;p&gt;You can support my work by &lt;a href="https://github.com/sponsors/vitling"&gt;Sponsoring me on GitHub&lt;/a&gt; or &lt;a href="https://music.vitling.xyz" rel="nofollow"&gt;buying&lt;/a&gt; &lt;a href="https://edgenetwork.bandcamp.com/album/edge001-spaceport-lounge-music" rel="nofollow"&gt;my music&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
License &amp;amp; Intended use&lt;/h2&gt;
&lt;p&gt;This is an art project, not a software tool for music creation. I consider it to be finished, and as such I will likely not be accepting feature requests or feature-driven PRs. Please feel encouraged to fork the project and do something else with it if you would like - I love to see further creative work built on top of it.&lt;/p&gt;
&lt;p&gt;This work is licensed under a &lt;a href="http://creativecommons.org/licenses/by/4.0/" rel="nofollow"&gt;Creative Commons Attribution 4.0 International License&lt;/a&gt;. I am aware that this is an unusual choice for code, but it reflects its status as an art project. IANAL, so I'm not sure how this stands up legally, but in my mind this‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/vitling/acid-banger"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#transitioncss"&gt;
  &lt;/a&gt;
  transition.css
&lt;/h3&gt;

&lt;p&gt;46 pre-built drop-in CSS transitions&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/argyleink"&gt;
        argyleink
      &lt;/a&gt; / &lt;a href="https://github.com/argyleink/transition.css"&gt;
        transition.css
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      :octocat: Drop-in CSS transitions
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5d0376ffe733ef1f724b7e2aa984e2cce49ca973b5dd714e79a4e076b3899478/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f7472616e736974696f6e2e6373732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/5d0376ffe733ef1f724b7e2aa984e2cce49ca973b5dd714e79a4e076b3899478/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f7472616e736974696f6e2e6373732e737667" alt="Total Downloads"&gt;&lt;/a&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/f990863490f558917db1bd21e0191a693b04c80a417dc420a935e3d79c856f93/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f7472616e736974696f6e2e6373732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/f990863490f558917db1bd21e0191a693b04c80a417dc420a935e3d79c856f93/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f7472616e736974696f6e2e6373732e737667" alt="Latest Release"&gt;&lt;/a&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1c97d1e08583205b01ad64d641350141dbbc07ad65c17509807dfd2c2cd42b13/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f7472616e736974696f6e2e6373732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/1c97d1e08583205b01ad64d641350141dbbc07ad65c17509807dfd2c2cd42b13/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f7472616e736974696f6e2e6373732e737667" alt="License"&gt;&lt;/a&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/477e2359f2215e57f8fbcf1866e97f8595bda06d5cf4db213b7181058083a164/68747470733a2f2f6170692e6e65746c6966792e636f6d2f6170692f76312f6261646765732f35386430656366352d363234312d343230392d616133352d6366303939383365306233372f6465706c6f792d737461747573"&gt;&lt;img src="https://camo.githubusercontent.com/477e2359f2215e57f8fbcf1866e97f8595bda06d5cf4db213b7181058083a164/68747470733a2f2f6170692e6e65746c6966792e636f6d2f6170692f76312f6261646765732f35386430656366352d363234312d343230392d616133352d6366303939383365306233372f6465706c6f792d737461747573" alt="Netlify Status"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://codepen.io/argyleink/pen/zYqYpEB" rel="nofollow"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2EFEeRTv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/argyleink/transition.css/raw/main/gif/kitchen-sink.gif%3Fraw%3Dtrue"&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;46 pre-built transitions!&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hands on at &lt;a href="https://codepen.io/argyleink/pen/RwrzGJb" rel="nofollow"&gt;Codepen&lt;/a&gt; or preview all @ &lt;a href="https://transition.style" rel="nofollow"&gt;transition.style&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;



&lt;h2&gt;
Basics&lt;/h2&gt;
&lt;p&gt;Import the CSS and set an attribute on some HTML: &lt;a href="https://codepen.io/argyleink/pen/QWNRXEG" rel="nofollow"&gt;try on Codepen&lt;/a&gt;&lt;br&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/argyleink/transition.css/blob/main/gif/wipe-up.gif?raw=true"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AyKA5EOF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/argyleink/transition.css/raw/main/gif/wipe-up.gif%3Fraw%3Dtrue"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;link&lt;/span&gt; &lt;span class="pl-c1"&gt;rel&lt;/span&gt;="&lt;span class="pl-s"&gt;stylesheet&lt;/span&gt;" &lt;span class="pl-c1"&gt;href&lt;/span&gt;="&lt;span class="pl-s"&gt;https://unpkg.com/transition-style&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt; &lt;span class="pl-c1"&gt;transition-style&lt;/span&gt;="&lt;span class="pl-s"&gt;in:wipe:up&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  üëç
&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;h4&gt;
NPM&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;npm i transition-style&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;import from &lt;strong&gt;CSS&lt;/strong&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-css js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;@import&lt;/span&gt; &lt;span class="pl-s"&gt;"transition-style"&lt;/span&gt;;&lt;/pre&gt;

&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;or import from &lt;strong&gt;JS&lt;/strong&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-js js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'transition-style'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h4&gt;
CDN&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;https://unpkg.com/transition-style&lt;/code&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;Individual Category Bundles&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Circles&lt;/strong&gt; &lt;code&gt;https://unpkg.com/transition-style/transition.circles.min.css&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Squares&lt;/strong&gt; &lt;code&gt;https://unpkg.com/transition-style/transition.squares.min.css&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Polygons&lt;/strong&gt; &lt;code&gt;https://unpkg.com/transition-style/transition.polygons.min.css&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Wipes&lt;/strong&gt; &lt;code&gt;https://unpkg.com/transition-style/transition.wipes.min.css&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Import category bundles from NPM too &lt;code&gt;import "transition-style/transition.circles.min.css"&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;h3&gt;
üëâ The Hackpack&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;https://unpkg.com/transition-style/transition.hackpack.min.css&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;More options, more control, smaller import&lt;/strong&gt;&lt;br&gt;
by importing only the custom properties and base styles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;compose custom transition combinations&lt;/li&gt;
&lt;li&gt;create multi-part transitions&lt;/li&gt;
&lt;li&gt;use classes or CSS-in-JS that leverage transition.css custom props&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://codepen.io/argyleink/pen/MWyJxLx" rel="nofollow"&gt;The Hackpack Sandbox&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Custom properties ship with each &lt;code&gt;.min.css&lt;/code&gt; as well&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/argyleink/transition.css/blob/main/gif/opposing-corner-fold.gif?raw=true"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zbx1NuhU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/argyleink/transition.css/raw/main/gif/opposing-corner-fold.gif%3Fraw%3Dtrue"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;&lt;br&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;After &lt;code&gt;transition.css&lt;/code&gt; has been added to your project, add an attribute to an element and watch‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/argyleink/transition.css"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#jsencrypt"&gt;
  &lt;/a&gt;
  JSEncrypt
&lt;/h3&gt;

&lt;p&gt;A Javascript library to perform OpenSSL RSA Encryption, Decryption, and Key Generation.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/travist"&gt;
        travist
      &lt;/a&gt; / &lt;a href="https://github.com/travist/jsencrypt"&gt;
        jsencrypt
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A Javascript library to perform OpenSSL RSA Encryption, Decryption, and Key Generation.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Website&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://travistidwell.com/jsencrypt" rel="nofollow"&gt;http://travistidwell.com/jsencrypt&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Introduction&lt;/h1&gt;
&lt;p&gt;When browsing the internet looking for a good solution to RSA Javascript
encryption, there is a whole slew of libraries that basically take the fantastic
work done by Tom Wu @ &lt;a href="http://www-cs-students.stanford.edu/~tjw/jsbn/" rel="nofollow"&gt;http://www-cs-students.stanford.edu/~tjw/jsbn/&lt;/a&gt; and then
modify that code to do what they want.&lt;/p&gt;
&lt;p&gt;What I couldn't find, however, was a simple wrapper around this library that
basically uses the library &lt;a href="https://github.com/travist/jsencrypt/pull/6"&gt;practically&lt;/a&gt; untouched, but adds a wrapper to provide parsing of
actual Private and Public key-pairs generated with OpenSSL.&lt;/p&gt;
&lt;p&gt;This library is the result of these efforts.&lt;/p&gt;
&lt;h1&gt;
How to use this library.&lt;/h1&gt;
&lt;p&gt;This library should work hand-in-hand with openssl.  With that said, here is how to use this library.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Within your terminal (Unix based OS) type the following.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;openssl genrsa -out rsa_1024_priv.pem 1024
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;This generates a private key, which you can see by doing the following...&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;cat rsa_1024_priv.pem
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;You can then copy and paste this in the Private Key‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/travist/jsencrypt"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dribbble-shots"&gt;
  &lt;/a&gt;
  dribbble shots
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#sidebar-navigation-web-app"&gt;
  &lt;/a&gt;
  Sidebar Navigation Web App
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OIussAs7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/1259559/screenshots/15501941/media/82ada084b98855816211d20e88e63fc8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OIussAs7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/1259559/screenshots/15501941/media/82ada084b98855816211d20e88e63fc8.jpg" alt="https://cdn.dribbble.com/users/1259559/screenshots/15501941/media/82ada084b98855816211d20e88e63fc8.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15501941-Sidebar-Navigation-Web-App"&gt;Golo&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mobile-banking-dashboard"&gt;
  &lt;/a&gt;
  Mobile Banking - Dashboard
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l1HwzyWN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/1756963/screenshots/15514410/media/3209aa9eed69e15f709c36471b39c11e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l1HwzyWN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/1756963/screenshots/15514410/media/3209aa9eed69e15f709c36471b39c11e.png" alt="https://cdn.dribbble.com/users/1756963/screenshots/15514410/media/3209aa9eed69e15f709c36471b39c11e.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15514410--Mobile-Banking-Dashboard"&gt;Wildan Wari&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#icons"&gt;
  &lt;/a&gt;
  Icons
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p-qlCjR8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/594158/screenshots/15521114/media/0d6ad2a24cafb45edc49c1c227ead4e6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p-qlCjR8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/594158/screenshots/15521114/media/0d6ad2a24cafb45edc49c1c227ead4e6.png" alt="https://cdn.dribbble.com/users/594158/screenshots/15521114/media/0d6ad2a24cafb45edc49c1c227ead4e6.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15521114-Icons"&gt;Zaib Ali&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#doku-digital-wallet-app"&gt;
  &lt;/a&gt;
  Doku - Digital Wallet App
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ywIG-Nab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/2713351/screenshots/15531167/media/e2c3796cbcb6031a5412a3db8fee595f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ywIG-Nab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/2713351/screenshots/15531167/media/e2c3796cbcb6031a5412a3db8fee595f.png" alt="https://cdn.dribbble.com/users/2713351/screenshots/15531167/media/e2c3796cbcb6031a5412a3db8fee595f.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15531167-Doku-Digital-Wallet-App"&gt;Regi Pangestu&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#avatar-maker-app-concept"&gt;
  &lt;/a&gt;
  Avatar Maker App Concept
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A6lmwyEJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/1787150/screenshots/15532934/media/4c2d04bbf1731795866b337889bec622.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A6lmwyEJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/1787150/screenshots/15532934/media/4c2d04bbf1731795866b337889bec622.png" alt="https://cdn.dribbble.com/users/1787150/screenshots/15532934/media/4c2d04bbf1731795866b337889bec622.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15532934-Avatar-Maker-App-Concept"&gt;Sajjad Mohammadi Nia&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tweets"&gt;
  &lt;/a&gt;
  Tweets
&lt;/h2&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EE6gYS4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EzhihOPUYAY_FCM.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i-iGSZtE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/877525007185858562/7G9vGTca_normal.jpg" alt="Wes Bos profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Wes Bos
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/wesbos"&gt;@wesbos&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Firefox dev tools always complains if you dont have a favicon. (I think Chrome silences this).&lt;br&gt;&lt;br&gt;Quick lil fix if you want to silence the error. I often find myself using this instead of having to add another file to little HTML demos. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      20:20 PM - 21 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1384965228413210631" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1384965228413210631" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1384965228413210631" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q2xo1G0i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1196896675270418432/uFha-1kq_normal.jpg" alt="Beth Griggs profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Beth Griggs
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @bethgriggs_
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Happy &lt;a href="https://twitter.com/nodejs"&gt;@nodejs&lt;/a&gt; Major Release Day üéâ&lt;br&gt;&lt;br&gt;$ nvm install 16&lt;br&gt;&lt;br&gt;&lt;a href="https://t.co/daAlK8WKFX"&gt;nodejs.medium.com/node-js-16-ava‚Ä¶&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:13 PM - 20 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1384540641007448065" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1384540641007448065" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1384540641007448065" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NB3niS2k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/ExUNDTnW8AsV4AU.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--L_gjgLSM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1172219571350200320/qtHgizZO_normal.jpg" alt="Erik Kroes üèî profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Erik Kroes üèî
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/erikkroes"&gt;@erikkroes&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Styling with Javascript 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      09:39 AM - 25 Mar 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1375019614384627716" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1375019614384627716" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1375019614384627716" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5_v3j3nq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1384575236671254530/pu/img/pqjuuRla6zqxfJjD.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--YFnfaMM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1362053856247623680/q23Y_71D_normal.jpg" alt="‚Äî profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        ‚Äî
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @0xca0a
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      this is an old example i found by digging through my old codesandboxes, never published it i think. ü§î you learn how to tie scroll offset to shaders, and how to make a draggable minimap.&lt;br&gt;&lt;br&gt;fullscreen ‚Üí &lt;a href="https://t.co/A5oCHPef0a"&gt;qf8d0.csb.app&lt;/a&gt;&lt;br&gt;sandbox ‚Üí &lt;a href="https://t.co/tUJJfwBXPw"&gt;codesandbox.io/s/qf8d0&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      18:34 PM - 20 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1384576200803295234" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1384576200803295234" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1384576200803295234" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8-v3vSDj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EzwqDp7VgAAQQnZ.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--NuBM9PDy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1385883291744575488/KOKJ3k8L_normal.jpg" alt="Addy Osmani profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Addy Osmani
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/addyosmani"&gt;@addyosmani&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Tip: You can name capture groups for Regular Expressions in JavaScript. Define a named capture in angle brackets &amp;lt;&amp;gt; and they get returned under .groups. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      18:57 PM - 24 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1386031624232456194" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1386031624232456194" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1386031624232456194" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qCgtgXQL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1385938559710998530/pu/img/7kNObsLgVnHLwU9H.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--c2mJOxmp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/892351529348411392/FLQyLnoc_normal.jpg" alt="Jared Palmer profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Jared Palmer
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/jaredpalmer"&gt;@jaredpalmer&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      ü§Ø Life altering &lt;a href="https://twitter.com/code"&gt;@code&lt;/a&gt; trick: keyboard mapping Emmet inward and outward html/jsx selection 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      12:48 PM - 24 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1385938591323414529" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1385938591323414529" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1385938591323414529" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;





&lt;h2&gt;
  &lt;a href="#picked-pens"&gt;
  &lt;/a&gt;
  Picked Pens
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#tuggable-lamp"&gt;
  &lt;/a&gt;
  Tuggable Lamp
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/jh3y/embed/mdRaNgM?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/jh3yy"&gt;Jhey&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#buttoggle"&gt;
  &lt;/a&gt;
  Buttoggle
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/jh3y/embed/XWpoJVr?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/cobra_winfrey"&gt;Adam Kuhn&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#podcasts-worth-listening"&gt;
  &lt;/a&gt;
  Podcasts worth listening
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#the-css-podcast-paths-shapes-clipping-and-masking"&gt;
  &lt;/a&gt;
  The CSS Podcast: Paths, shapes, clipping and masking
&lt;/h3&gt;

&lt;p&gt;Paths, shapes, clipping, masking, oh my! There‚Äôs so much you can do with CSS shapes ‚Äî from creating transition effects to creating interesting and organic typographic layouts. In this episode, we dive into how to wrangle shape effects in CSS.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/5EhdwEHCBeg0qB5ilqf5Ys"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#container-queries"&gt;
  &lt;/a&gt;
  Container Queries
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/2N13ulWkrrUZHzd4jG8UMe"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hasty-treat-container-queries-are-here"&gt;
  &lt;/a&gt;
  Hasty Treat - Container Queries Are Here
&lt;/h3&gt;

&lt;p&gt;In this Hasty Treat, Scott and Wes talk about CSS container queries, what they are and how to use them.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/5CAuIRwTenIRtPuvS8EGcP"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#matt-pinner-software-engineer-at-amazon"&gt;
  &lt;/a&gt;
  Matt Pinner - Software Engineer at Amazon
&lt;/h3&gt;

&lt;p&gt;Matt and David talk about building your community, finding passion in your freelance work, and utilizing your professional experience to grow your career.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/6BlXeGzq4vV7yULDB3vixO"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;Thank you for reading, talk to you next week, and stay safe! üëã&lt;/p&gt;




&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;Make sure to subscribe to our &lt;a href="https://worldindev.ck.page"&gt;newsletter&lt;/a&gt; üíå to receive our weekly recap directly on your email and react to this post to automatically participate in our giveaway üéÅ&lt;/p&gt;

&lt;p&gt;If you would like to join our discussions, you can find us on &lt;a href="https://discord.gg/aWS2YKk6"&gt;Discord&lt;/a&gt; üì£.&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

</description>
      <category>css</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>I hid a playable version of üèìpongüèì inside a 24px by 24px image üòé [steganography]</title>
      <author>InHuOfficial</author>
      <pubDate>Sun, 25 Apr 2021 17:08:54 +0000</pubDate>
      <link>https://dev.to/inhuofficial/i-fit-the-whole-of-pong-into-a-24px-by-24px-image-steganography-g2h</link>
      <guid>https://dev.to/inhuofficial/i-fit-the-whole-of-pong-into-a-24px-by-24px-image-steganography-g2h</guid>
      <description>&lt;p&gt;Sometimes you just have to set yourself silly challenges to help you learn. And this is one of those.&lt;/p&gt;

&lt;p&gt;I wanted to see how tiny I could make an image and hide an entire game inside it!&lt;/p&gt;

&lt;p&gt;So I set about writing my own (very rudimentary) steganography library.&lt;/p&gt;

&lt;p&gt;If you aren't familiar with steganography it is the practice of hiding text, images or audio within an image or video.&lt;/p&gt;

&lt;p&gt;This is normally done with clever bit flipping - but I am too smol brained for that!&lt;/p&gt;

&lt;p&gt;Instead I realised I could use the alpha channel to encrypt data. &lt;/p&gt;

&lt;p&gt;As the alpha channel on an image (the transparency) has 255 options that gives lots of ways to encrypt the data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demonstration"&gt;
  &lt;/a&gt;
  Demonstration
&lt;/h2&gt;

&lt;p&gt;In the fiddle below there are 3 stages for encryption and a fourth for decryption.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-grab-the-image-we-want-to-encode-our-data-into"&gt;
  &lt;/a&gt;
  Step 1 - grab the image we want to encode our data into
&lt;/h3&gt;

&lt;p&gt;In the first step we simply load an image in.&lt;/p&gt;

&lt;p&gt;I have already included the InHu logo (which is large enough to contain the whole of jQuery!) but you can choose your own image if you want.&lt;/p&gt;

&lt;p&gt;You can also change the text you want encrypting by entering it in the textarea (by default it is a code-golfed version of pong!)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-resize-the-image-as-small-as-possible"&gt;
  &lt;/a&gt;
  Step 2 - resize the image as small as possible.
&lt;/h2&gt;

&lt;p&gt;In the second step you choose the "depth" we can encode.&lt;/p&gt;

&lt;p&gt;This is essentially how visible the transparency is (how much information we store per pixel). &lt;/p&gt;

&lt;p&gt;A low number (e.g. 2) will require a larger image to encrypt the data but the transparency will be much lower.&lt;/p&gt;

&lt;p&gt;A high number (e.g. 16) will require a smaller image but you may see the transparency,&lt;/p&gt;

&lt;p&gt;So high numbers for smaller images but more likelihood of being noticed.&lt;/p&gt;

&lt;p&gt;I recommend setting this to "8" as it is not noticeable on most images but still results in small image outputs.&lt;/p&gt;

&lt;p&gt;There is also a checkbox for using the full ASCII table if you want to use special characters. I would leave this unchecked at first.&lt;/p&gt;

&lt;p&gt;Once you have entered your preferences click "Calculate the smallest image size we can use".&lt;/p&gt;

&lt;p&gt;This will then resize the original image to the minimum size possible to contain the information.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-encode-the-data"&gt;
  &lt;/a&gt;
  Step 3 - encode the data
&lt;/h2&gt;

&lt;p&gt;Click the "Encode" button to generate the final image.&lt;/p&gt;

&lt;p&gt;Here you can see if there are any visible differences between the two images. If there are then you can go back a step and lower the number a bit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-4-decode-the-image"&gt;
  &lt;/a&gt;
  Step 4 - decode the image
&lt;/h2&gt;

&lt;p&gt;If you click "Decode" you should see a fully playable version of pong appear below (assuming you haven't changed the text in the textarea! If you have then you should see your text repeated below)&lt;/p&gt;

&lt;p&gt;Controls are Q and A for player 1 and P and L for player 2. Have fun!&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/phm5v9fg//embedded/result,js,html//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#want-to-see-the-whole-of-paradise-lost-in-an-image"&gt;
  &lt;/a&gt;
  Want to see the whole of paradise lost in an image?
&lt;/h2&gt;

&lt;p&gt;I will warn you - the processing on this takes quite a while! You might not want to do this if you are on a mobile!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://jsfiddle.net/phm5v9fg/1/"&gt;View the whole of paradise lost as part of a JS fiddle here (It takes a while to load so I didn't include it inline in the article)&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;A fun experiment indeed - there are loads of things we could do better - character maps instead of adding each character would reduce large files size significantly. Ironically though it made pong larger!&lt;/p&gt;

&lt;p&gt;Obviously for those of you who know about steganography, this is normally done with bit flipping, but I though the opacity channel was an interesting alternative as instead of a max of 3 bits per pixel (red, green and blue) we get up to 255 bits of information per channel (obviously we can't use all 255 and maintain a reasonable image), but I decided 16 bits was the max!&lt;/p&gt;

&lt;p&gt;It was fun trying to work out how to have a flexible base for encoding (it works for base2,3,4,5,6....14,15,16...etc.), there are probably much better ways to do it though!&lt;/p&gt;

&lt;p&gt;Anyway, I hope you enjoyed this silly post!&lt;/p&gt;

&lt;p&gt;p.s. &lt;a href="https://codegolf.stackexchange.com/a/10900/25162"&gt;the original Pong code was taken from this stack overflow answer&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>codepen</category>
    </item>
    <item>
      <title>Excellent web extension for developers</title>
      <author>Shahin Alam</author>
      <pubDate>Sun, 25 Apr 2021 17:05:14 +0000</pubDate>
      <link>https://dev.to/shahinalam02/excellent-web-extension-for-developers-im9</link>
      <guid>https://dev.to/shahinalam02/excellent-web-extension-for-developers-im9</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hey-developers"&gt;
  &lt;/a&gt;
  Hey developers,
&lt;/h1&gt;

&lt;p&gt;Today I will share some excellent web extension which enhances your work faster as a new web developer. We likely already have a collection of favourite Chrome extensions you use daily. Extensions that make life simpler make you more productive or perform an imperative task better than a dedicated tool. This list may build on that collection.&lt;br&gt;
In this list, I only add the google chrome extension if you are using  Firefox or any other browser. Maybe you can't find those extensions. In my personal opinion, use google chrome.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Githunt&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GWC_pUZq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9shfwbqfp2ulz3p11mt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GWC_pUZq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9shfwbqfp2ulz3p11mt.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Githunt is useful if you spend a lot of time on GitHub looking for new projects to work on. Rather than depending on GitHub‚Äôs trending projects feed, this Chrome developer extension brings it to the fore by highlighting all trending projects in a new tab area in your browser. You can search for projects in different languages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Size: 1.17MiB&lt;br&gt;
User: 5,000+ &lt;br&gt;
Offered by: roadmap.sh&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Fonts Ninja&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kZ1Kkx-P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwrdvlshj4b4j7jmdy7k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kZ1Kkx-P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwrdvlshj4b4j7jmdy7k.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fonts Ninja is a very useful Chrome extension for developers who need to identify fonts used on web pages. It‚Äôs fast, effective and identifies individual fonts within a page in seconds. Just Navigate the cursor to the font, then a small popup window in the browser you can see the family, size, weight, and colour.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Size: 1.45MiB&lt;br&gt;
User: 400,000+&lt;br&gt;
Offered by: fonts.ninja&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.ColorPick Eyedropper&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D4AaXZ8M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjemyk7d1t6ftcdh0atb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D4AaXZ8M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjemyk7d1t6ftcdh0atb.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ColorPick Eyedropper is a very neat zoomed selector for web pages. It‚Äôs a useful Chrome developer extension because it can quickly identify any colour on any web page and zooms in, so you can even select a border 1px wide. While you may not use it every day, it‚Äôs an excellent tool to keep on hand.ColorPick Eyedropper is a very neat zoomed selector for web pages. It‚Äôs a valuable Chrome developer extension because it can quickly identify any colour on any web page and zooms in, so you can even select a border 1px wide. While you may not use it every day, it‚Äôs an excellent tool to keep on hand.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Size: 1.47MiB&lt;br&gt;
User: 1,000,000+&lt;br&gt;
Offered by: vidsbee.com&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. CSS Viewer&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ChHjXFR6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tpq09a31etdoi0r16okd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ChHjXFR6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tpq09a31etdoi0r16okd.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CSS Viewer is another simple but very effective Chrome extension for web developers. As its name implies, this addon shows you the CSS properties of a given page wherever you hover your mouse. A small popup window appears showing you the CSS data that makes up the element you‚Äôre pointing at.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Size: 1.47MiB&lt;br&gt;
User: 1,000,000+&lt;br&gt;
Offered by: vidsbee.com&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Web Developer&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CoIXr31A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kb3fkd5mt0qcbnxv5559.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CoIXr31A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kb3fkd5mt0qcbnxv5559.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Web Developer is a suite of tools contained within a single Chrome extension. While titled ‚ÄòWeb Developer‚Äô, we think this tool is suitable for general devs, including a range of useful tools that any dev can use.&lt;br&gt;
Once installed, Web Developer is accessible using the small cog icon in the toolbar. Once selected, you should see a small dropdown box appear with a range of options organized into tabs. Select a tab to access the tools within. A lot is going on here, but each tool is genuinely useful.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Size: 1.1MiB&lt;br&gt;
User: 1,000,000+&lt;br&gt;
Offered by: chrispederick.com&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>discuss</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Understanding Compiler Design</title>
      <author>Saksham_ka</author>
      <pubDate>Sun, 25 Apr 2021 16:52:03 +0000</pubDate>
      <link>https://dev.to/sakshamak/understanding-compiler-design-lcd</link>
      <guid>https://dev.to/sakshamak/understanding-compiler-design-lcd</guid>
      <description>&lt;p&gt;Every one of us has used a compiler once in our programming journey or must have read about it. Ever thought about how a compiler works?&lt;/p&gt;

&lt;p&gt;Today I will be discussing the design structure of a compiler.&lt;/p&gt;

&lt;p&gt;A code basically has to pass through a different number of levels to get itself converted from high-level language to assembly language, and these are all hidden in a compiler.&lt;/p&gt;

&lt;p&gt;Here is a basic diagram of a compiler :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LRYaZRRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tqvf8lq9seufgast5sei.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LRYaZRRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tqvf8lq9seufgast5sei.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we can see a compiler consists of a total of 6 different levels, where the first four are grouped together and are called frontend, and the bottom two are grouped and called backend.&lt;/p&gt;

&lt;p&gt;The frontend part checks for any kind of errors in the code like syntax, grammar, or lexical errors whereas the backend part simplifies and generates the program by grouping the code snippets.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-internal-processes-in-brief"&gt;
  &lt;/a&gt;
  The Internal Processes in brief.
&lt;/h2&gt;

&lt;p&gt;When we write a code in any language and compiles it, the first thing a compiler does is to check for any kind of errors in the code for which it passes through the frontend or analytic part.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#lexical-analysis"&gt;
  &lt;/a&gt;
  Lexical Analysis
&lt;/h3&gt;

&lt;p&gt;When a high-level language code is passed through lexical analysis it generates a stream of tokens, but before that, we should talk about preprocessors, the task of a preprocessor is to filter out a stream of characters by removing the header files and then passing it to the lexical analysis. (A stream of characters is nothing but just the keyboard characters we type in the code: int a = 23; or printf(" Hello World! ");)&lt;/p&gt;

&lt;p&gt;but what is a token?&lt;/p&gt;

&lt;p&gt;let's take a small code&lt;br&gt;
&lt;br&gt;
 &lt;code&gt;a = 10;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Here a, =, 10, ; are all tokens. So total number of tokens here is 5.&lt;/p&gt;

&lt;p&gt;So basically a token is the important part of a code. Why I said important? Because comments and characters such as white space or newline or tabs are not considered as tokens. And then these tokens are passed in the symbol table. The role of the symbol table is to get the record of the properties of tokens or variables such as type, size, scope, etc. The symbol table is connected to all the stages in the compiler as we can see in the diagram for future use.&lt;/p&gt;

&lt;p&gt;After converting all the code to tokens, it is sent to the syntax analysis department.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax-analysis"&gt;
  &lt;/a&gt;
  Syntax Analysis
&lt;/h3&gt;

&lt;p&gt;When the code comes here, it is checked that if a code is syntactically correct or not. A parser is used here and the output that comes is called a parse tree as it comes in the form of a tree as shown:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--epz3O9Cc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mmctp0qy902ieunot2sq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--epz3O9Cc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mmctp0qy902ieunot2sq.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
If there is a syntax error then an error is produced at this stage.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#semantic-analysis"&gt;
  &lt;/a&gt;
  Semantic Analysis
&lt;/h3&gt;

&lt;p&gt;Here the analyzer checks the parse tree and finds semantic errors. Note that this part doesn't care about the syntax but checks whether the value of the variable is as per the type declared or the limit of a particular data type is not exceeded or whether variables are declared properly or not&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#intermediate-code-generator"&gt;
  &lt;/a&gt;
  Intermediate Code Generator
&lt;/h3&gt;

&lt;p&gt;This part is the middle man between frontend and backend, it generates a code that can be understood by the backend i.e. a machine-independent code (independent of OS). It creates a 3-address code which means that the code is divided into 3 variable statement which means that maximum of 3 addresses can be there in one statement if there is 4 or 5 then it is divided into 2 3 lines of code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;a = b + c * d;
// this is converted as
x = c * d;
a = b + x;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This 3-addressed code is sent to the next level i.e. optimization of code&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-optimisation"&gt;
  &lt;/a&gt;
  Code Optimisation
&lt;/h3&gt;

&lt;p&gt;From here the backend part begins and code optimization is the first stage of the backend. As the name suggests, this part optimizes the code. There is not much to say about it as you all know what is optimisation. + sign is much easier to process than * hence a code like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;x = 4 * y 
// can be converted to 
x = y + y + y + y 
// or 
z = y + y; 
x = z + z;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#code-generation"&gt;
  &lt;/a&gt;
  Code generation
&lt;/h3&gt;

&lt;p&gt;Here the code generator takes an optimized version of the intermediate code and links it with the target machine language. It translates the intermediate code into a sequence of re-locatable machine code. The machine code generated works the same way the intermediate code would do.&lt;/p&gt;

&lt;p&gt;Like the Symbol Table, there is an error handler that is linked to all the phases which is responsible for handling the errors detected by the frontend&lt;/p&gt;

&lt;p&gt;And at last, the code is converted to the assembly code or machine code.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Converting Lodash to fp-ts</title>
      <author>Timothy Ecklund</author>
      <pubDate>Sun, 25 Apr 2021 16:47:42 +0000</pubDate>
      <link>https://dev.to/gnomff_65/converting-lodash-to-fp-ts-4k0p</link>
      <guid>https://dev.to/gnomff_65/converting-lodash-to-fp-ts-4k0p</guid>
      <description>&lt;p&gt;TLDR; I have started &lt;a href="https://github.com/tecklund/lodash-to-fp-ts"&gt;a project&lt;/a&gt; to provide examples of how to convert from Lodash to fp-ts and I could use your help! Please consider chipping in, all PRs are welcome!&lt;/p&gt;

&lt;p&gt;Lodash is the single most downloaded package on npm. It deserves its place at the top - it provides a massive suite of functionality that is performant and has a clear, consistent interface. Lodash is, without a doubt, a fantastic &lt;em&gt;Javascript&lt;/em&gt; library.&lt;/p&gt;

&lt;p&gt;However, Lodash was written before the advent of Typescript and has significant holes when it comes to typed functional programming. Let me hit you with an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="c1"&gt;// just to make things a little nicer to read&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;b&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;c&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a[0].b.c&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ohno&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a[0].b.d&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 3&lt;/span&gt;
&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ohno&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What type is &lt;code&gt;result&lt;/code&gt;? Why, it's the &lt;code&gt;any&lt;/code&gt; type! Not only are we missing type information on the result, we are also missing type information on the path we provided - if someone renames &lt;code&gt;c&lt;/code&gt; to &lt;code&gt;d&lt;/code&gt; we won't know until it gets all the way to production and explodes. On top of &lt;em&gt;that&lt;/em&gt; we have to remember to check for undefined everywhere it might exist. Hope you never forget!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1L8gNm1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/47i1c5roxb0jqb8okpvm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1L8gNm1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/47i1c5roxb0jqb8okpvm.gif" alt="dogsandcats"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is a better way! Let's look at how to do this using libraries that were designed from the ground up for typescript (fp-ts and monocle-ts):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Op&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;monocle-ts/lib/Optional&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;Op&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;readonly&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}[]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="nx"&gt;Op&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;Op&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;Op&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;b&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;Op&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;c&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;opt&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getOption&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// { _tag: 'Some', value: 3 }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Aw yeah. This is a technique known as &lt;code&gt;Optics&lt;/code&gt; and it provides type safety through and through. Notice that we are providing a type with &lt;code&gt;id&lt;/code&gt; - any calls to &lt;code&gt;prop&lt;/code&gt; that don't align with the type will error. Finally, we're safe from Dave a few desks down who is constantly renaming things. We also have a strong return type - &lt;code&gt;Option&amp;lt;number&amp;gt;&lt;/code&gt;. &lt;code&gt;Option&lt;/code&gt; will force us to remember to add error handling in case our object is malformed, and &lt;code&gt;number&lt;/code&gt; because we know that &lt;code&gt;c&lt;/code&gt; is a number. &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UxHy5VI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n1omno7mne11i94f4523.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UxHy5VI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n1omno7mne11i94f4523.gif" alt="phew"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's another example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;mutable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mutable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt;
&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mutable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// { a: 1, b: 2, c: 3 }&lt;/span&gt;
&lt;span class="c1"&gt;// { a: 1, b: 2, c: 3 }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Mutation! Noooooo! :(&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XesYEsKb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xv4f903ef70uw8fh2pi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XesYEsKb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xv4f903ef70uw8fh2pi.png" alt="mutant"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's try again, this time with a library that is consistently immutable:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fp-ts-std/Record&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;mutable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mutable&lt;/span&gt;&lt;span class="p"&gt;)({&lt;/span&gt;&lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt;
&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mutable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// { a: 1, b: 2, c: 3 }&lt;/span&gt;
&lt;span class="c1"&gt;// { a: 0, b: 2 }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Oh thank goodness, we're safe. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bbHkMvJ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xknfex9tfu6pexdm1dsu.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bbHkMvJ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xknfex9tfu6pexdm1dsu.gif" alt="safe"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In my opinion, the biggest hurdle to widespread adoption of fp-ts is a lack of good examples. Almost everyone is familiar with Lodash - why not provide a set of examples that would help everyone transition?&lt;/p&gt;

&lt;p&gt;Well I've started &lt;a href="https://github.com/tecklund/lodash-to-fp-ts"&gt;doing just that&lt;/a&gt;. I hope as people see the conversion is simple, and the benefits provided are significant, fp-ts will become even more widespread. Wouldn't that be a wonderful world?&lt;/p&gt;

&lt;p&gt;Working through all the Lodash functions can take a long time, however, and I am (&lt;em&gt;gasp&lt;/em&gt;) sometimes wrong. If you are reading this and have a few minutes, please take a crack at helping me with this project. PRs are very welcome!&lt;/p&gt;

</description>
      <category>fpts</category>
      <category>javascript</category>
      <category>typescript</category>
    </item>
    <item>
      <title>SSH over HTTP Proxy</title>
      <author>abdennour</author>
      <pubDate>Sun, 25 Apr 2021 16:37:40 +0000</pubDate>
      <link>https://dev.to/abdennour/ssh-over-http-proxy-41c2</link>
      <guid>https://dev.to/abdennour/ssh-over-http-proxy-41c2</guid>
      <description>&lt;h2&gt;
  &lt;a href="#story"&gt;
  &lt;/a&gt;
  story
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;nc -X connect&lt;/code&gt; is the popular way to communicate with SSH over proxy. However, it's broken when your client is MacOS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  solution
&lt;/h2&gt;

&lt;p&gt;Install corkscrew&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;brew &lt;span class="nb"&gt;install &lt;/span&gt;corkscrew
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;SSH now:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ssh &lt;span class="nt"&gt;-4&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-o&lt;/span&gt; &lt;span class="s2"&gt;"ProxyCommand corkscrew ip.http.proxy port-http-proxy %h %p"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  user@ip-machine-in-other-network
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;.i.e: in following example my HTTP_PROXY is &lt;code&gt;192.168.1.15:3128&lt;/code&gt;. And i want to login into &lt;code&gt;10.11.6.23&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ssh &lt;span class="nt"&gt;-4&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-o&lt;/span&gt; &lt;span class="s2"&gt;"ProxyCommand corkscrew 192.168.1.15 3128 %h %p"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  user@10.11.6.23
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note  : &lt;code&gt;-4&lt;/code&gt; is to force ipv4 over other options (ipv6)&lt;/p&gt;

</description>
      <category>squid</category>
      <category>httpproxy</category>
      <category>nowindows</category>
      <category>macos</category>
    </item>
    <item>
      <title>Theming with React, Less and CSS variables</title>
      <author>Kailash Sankar</author>
      <pubDate>Sun, 25 Apr 2021 15:32:43 +0000</pubDate>
      <link>https://dev.to/ksankar/theming-with-react-less-and-css-variables-2pbg</link>
      <guid>https://dev.to/ksankar/theming-with-react-less-and-css-variables-2pbg</guid>
      <description>&lt;p&gt;The styles written in less are compiled to generate a CSS file, so Less variables get converted to their values in the output. To switch a theme dynamically in the browser we'll need to change the color values on the fly, this is where CSS variables come in.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties"&gt;CSS variables&lt;/a&gt; can be declared and used in less files, we can change the variable value or swap variable definition in the browser and it's as easy as changing an element's class name.&lt;/p&gt;

&lt;p&gt;Let's set up a basic react page to understand theming. The task can be broken down in to&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Theme Context and Wrapper&lt;/li&gt;
&lt;li&gt;Header &lt;/li&gt;
&lt;li&gt;Card with some text/images&lt;/li&gt;
&lt;li&gt;Theme toggle button&lt;/li&gt;
&lt;li&gt;light and dark theme variables&lt;/li&gt;
&lt;li&gt;CSS for the above components&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Create a theme &lt;a href="https://reactjs.org/docs/context.html"&gt;context&lt;/a&gt; and a wrapper component to make them available to the app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;LIGHT_THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;light-theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DARK_THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dark-theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ThemeContext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createContext&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// wrapper to make theme and changeTheme available &lt;/span&gt;
&lt;span class="c1"&gt;// down the tree&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;ThemeWrapper&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setTheme&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;LIGHT_THEME&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;applyTheme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newTheme&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// TODO: apply new theme on app&lt;/span&gt;
    &lt;span class="nx"&gt;setTheme&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newTheme&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ThemeContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;applyTheme&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ThemeContext.Provider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The card component&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Card&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ThemeContext&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;card&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;Applied&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Theme toggle button&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;ToggleTheme&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;applyTheme&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ThemeContext&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;altTheme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;LIGHT_THEME&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;DARK_THEME&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;LIGHT_THEME&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;applyTheme&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;altTheme&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;toggle-theme&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Go&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;altTheme&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&amp;gt;&lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The parent App wraps children with ThemeWrapper&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;light-theme&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;header&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;Theme&lt;/span&gt; &lt;span class="nx"&gt;Sandbox&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ThemeWrapper&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ToggleTheme&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
         &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Card&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ThemeWrapper&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// mount to html&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rootElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rootElement&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;HTML just needs a root element&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"root"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's define some essential colors for our two themes. I mixed a few palettes from &lt;a href="https://colorhunt.co"&gt;colorhunt&lt;/a&gt; to get these.&lt;/p&gt;

&lt;p&gt;We'll define two colors each for font, background, and border - a primary and a secondary. The themes will be defined as classes and to apply a theme we just need to apply the corresponding class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.light-theme&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--primary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#02475e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="py"&gt;--secondary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#194350&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--primaryBackground&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f9f3f3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--secondaryBackground&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#d8e3e7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--primaryBorder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--secondaryBorder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#333&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.dark-theme&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--primary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f9f3f3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--secondary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#dddddd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--primaryBackground&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#151515&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--secondaryBackground&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#301b3f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--primaryBorder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#3c415c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--secondaryBorder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#b4a5a5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Write styles for the rest of the items using the above variables&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#app&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primaryBackground&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.toggle-theme&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--secondary&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--secondaryBackground&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--secondaryBorder&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the app component, I have specified "light-theme" as the class, so the variables defined by our light theme would be available to the components below. Changing the theme would just mean switching the class assigned to the App component. Let's add that action to ThemeWrapper&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;applyTheme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newTheme&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newTheme&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;setTheme&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newTheme&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output,&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/kailash-sankar/embed/bGgzeQw?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Now that it's working, time to prettify the page a bit. Change the button to a switch, add some icons, font and tweak the styles to get:&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/kailash-sankar/embed/qBRgYVW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Theme Context is not required to do theming if the requirement is only to change the CSS variables. But a context is useful to have the theme selection available everywhere, there might be external components where you have to pass in the theme or for taking actions based on a theme(styled-components).&lt;/p&gt;

&lt;p&gt;That's all folks :)&lt;/p&gt;

</description>
      <category>react</category>
      <category>less</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Free ultimate React resources. Zero to Hero in React</title>
      <author>devintro</author>
      <pubDate>Sun, 25 Apr 2021 15:32:15 +0000</pubDate>
      <link>https://dev.to/devintro/free-ultimate-react-resources-zero-to-hero-in-react-486g</link>
      <guid>https://dev.to/devintro/free-ultimate-react-resources-zero-to-hero-in-react-486g</guid>
      <description>&lt;p&gt;&lt;em&gt;This guide was originally published at -&amp;gt; &lt;a href="https://bit.ly/devintrodev"&gt;Devintro.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Delivered by Facebook in 2013, React is a JavaScript library for building present day applications. React is utilized for taking care of the view layer and can be utilized for advancement of both web and mobile applications.&lt;/p&gt;

&lt;p&gt;[You should know HTML, CSS, JavaScript, Adv. JavaScript]&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-you-should-learn-react"&gt;
  &lt;/a&gt;
  Why you should learn React?
&lt;/h3&gt;

&lt;p&gt;React gets a good deal on advancement since it's segment based. You can separate an interface into reusable parts that permit you to construct dynamic UIs. Also on an average React Devs in US make $100k a year, that‚Äôs freaking big.&lt;/p&gt;

&lt;p&gt;So you‚Äôve got a brief idea what is react and why you should learn it. This post will cover 200+ Free resources for you to learn React and become a pro. This post will contain various type of resources like YouTube videos, eBook, Courses and MORE.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#youtube-react-courses-and-react-projects"&gt;
  &lt;/a&gt;
  üì∫ YouTube: React Courses and React Projects
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=w7ejDZ8SWv8"&gt;React JavaScript Crash Course&lt;/a&gt;  by Traversy Media (1.5 Hours)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Ke90Tje7VS0"&gt;React JS - React Tutorial for Beginner&lt;/a&gt;  by Mosh (2.25 Hours)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=4UZrsTqkcW4"&gt;Full React Course 2020&lt;/a&gt;  by FreeCodeCamp (10 Hours)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=-cMqr9HpZ-Y"&gt;React JS tutorial for Beginners&lt;/a&gt;  by Clever Programmer (12 Hours)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=a_7Z7C_JCyo"&gt;Code 15 React Projects&lt;/a&gt;  by FreeCodeCamp (9 Hours)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=nvHeB32ICDM"&gt;ReactJS Crash Course&lt;/a&gt;  by Hitesh Choudhary (1.2 hours)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=15YB__vYpuA"&gt;React Crash Course 2020 - Learn React in 1 video + Projects üî•&lt;/a&gt;  by Codedamn&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=fSp2C7QPH8M"&gt;ReactJS Full Course&lt;/a&gt;  by Edureka (4 Hours )&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A free, 5-part video course with interactive code examples that will help you learn React&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://www.youtube.com/watch?v=Vcyen7QxyBM"&gt;Part 1 - Intro to React&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.youtube.com/watch?v=SxuN26-_fls"&gt;Part 2 - React Starter&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.youtube.com/watch?v=1CqzaPTblcQ"&gt;Part 3 - React Router&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.youtube.com/watch?v=M4bqyGj-rYw"&gt;Part 4 - React Redux&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.youtube.com/watch?v=gaUZnevOwZo"&gt;Part 5 - What‚Äôs next?&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PLoYCgNOIyGABj2GQSlDRjgvXtqfDxKm5b"&gt;React Course PlayList &lt;/a&gt; by LearnCodeAcdemy&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=9U3IhLAnSxM"&gt;Beginners guide to React&lt;/a&gt;  by Colt Steele&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=CVpUuw9XSjY"&gt;React Redux tutorial by DevEd&lt;/a&gt;  on Youtube&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PLN3n1USn4xlmyw3ebYuZmGp60mcENitdM"&gt;React Hooks Playlis&lt;/a&gt; t by Ben Awad on Youtube&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=khJlrj3Y6Ls&amp;amp;feature=youtu.be"&gt;Build a COVID-19 Tracker Application - React JS&lt;/a&gt;  Project by JavaScript Mastery&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=pCA4qpQDZD8&amp;amp;feature=youtu.be"&gt;Build A Todo App With REACT | React Project For Beginners&lt;/a&gt;  By DevEd&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PLN3n1USn4xlmyw3ebYuZmGp60mcENitdM"&gt;React Hooks Playlist &lt;/a&gt; by Ben Awad&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;4 Days React Bootcamp&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://www.youtube.com/watch?v=8GXXGJRDMdQ"&gt;Day 1&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.youtube.com/watch?v=NHfRLQuHjsU"&gt;Day 2&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.youtube.com/watch?v=Xa3DGGP4mLM"&gt;Day 3&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.youtube.com/watch?v=alZur1g2Cnw"&gt;Day 4&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#%F0%9F%95%B8react-courses"&gt;
  &lt;/a&gt;
  üï∏React Courses
&lt;/h2&gt;

&lt;p&gt;Egghead.io have many react courses covering a lot about React. Most them are free but if you are thinking about going in Depth many are paid too.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://egghead.io/q/react"&gt;Egghead.io React Courses&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://egghead.io/courses/start-learning-react"&gt;Egghead.io Start learning React small course&lt;/a&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://egghead.io/courses/the-beginner-s-guide-to-react"&gt;Beginners guide to React&lt;/a&gt;  by Kent C Dodds&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.pluralsight.com/courses/react-js-getting-started"&gt;Pluralsight React JS course&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://scrimba.com/learn/learnreact"&gt;Scrimba Learn React course&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#free-reactjs-ebooks"&gt;
  &lt;/a&gt;
  üìöFree ReactJS eBooks
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://flaviocopes.com/page/ebooks/"&gt;The React handbook&lt;/a&gt;  by Flavio Copes and also some other eBook for free by Just subscribing&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://vasanthk.gitbooks.io/react-bits/"&gt;React Gibooks by Vasanth&lt;/a&gt;  - This has literally any things to learn about on the web&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://reactjs.org/tutorial/tutorial.html"&gt;React DOCS&lt;/a&gt;  by FaceBook&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.reactenlightenment.com/"&gt;React Enlightment&lt;/a&gt;  - This online guide is straight to the Point and this is the major thing I love about this guide.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#react-cheatsheets"&gt;
  &lt;/a&gt;
  üî∞React CheatSheets
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://devhints.io/react"&gt;React Cheatsheet&lt;/a&gt;  by DevHints&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.freecodecamp.org/news/react-cheatsheet-with-real-world-examples/"&gt;React Cheatsheet with Real World Examples&lt;/a&gt;  By FreeCodeCamp&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://react-typescript-cheatsheet.netlify.app/"&gt;React and TypeScript Cheatsheet website&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.wrappixel.com/react-cheat-sheet/"&gt;React Cheatsheet&lt;/a&gt;  by Wrappixels&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#%E2%9C%8Dreact-blogs-articles-tutorials"&gt;
  &lt;/a&gt;
  ‚úçReact Blogs / Articles / Tutorials
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://code.tutsplus.com/categories/react"&gt;TutsPlus React Code Tutorials&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://joshwcomeau.com/"&gt;Josh Comeau‚Äôs Blog&lt;/a&gt;  - He posts on React topics a lot&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://rahulism.hashnode.dev/"&gt;RAHULISM blog&lt;/a&gt;  - He posts about beginner focused topics on React and JavaScript&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://kentcdodds.com/blog/"&gt;Kent C Dodds Blog&lt;/a&gt;  - He is the guy behind the best selling course of React (EpicReact.dev)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://flaviocopes.com/tags/react/"&gt;Flavio Copes React tutorials&lt;/a&gt;  - He has posted a lot about React topics, you can check them, they are so easy to understand&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://amanhimself.dev/blog/"&gt; Aman Mittal‚Äôs Blog&lt;/a&gt;  - His tutorials are just way amazing and very easy to understand.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.tutorialspoint.com/reactjs/index.htm"&gt;TutorialsPoint&lt;/a&gt;  -  React tutorials&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://ihatetomatoes.net/react-tutorial-for-beginners/"&gt;Ihatetomatoes&lt;/a&gt;  - They have an amazing blog as well as an Amazing YouTube channel.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#message"&gt;
  &lt;/a&gt;
  üëÄMessage
&lt;/h3&gt;

&lt;p&gt;Above are some of the resources that will get to you all with React for Beginners and definitely get you a &lt;strong&gt;JOB&lt;/strong&gt;. There are many resources, but I would ask you to see only those you find easy to understand. If you start with **everything **at some point you‚Äôll get confused.&lt;/p&gt;

&lt;p&gt;I‚Äôll also be posting about React Advanced courses resources laterüòÅ&lt;/p&gt;

&lt;p&gt;Originally at -&amp;gt;  &lt;a href="https://bit.ly/devintrodev"&gt;Devintro.com&lt;/a&gt; &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What is ACID? Baby don't hurt me. No more.</title>
      <author>Klim Markelov</author>
      <pubDate>Sun, 25 Apr 2021 15:31:02 +0000</pubDate>
      <link>https://dev.to/tutelaris/what-is-acid-baby-don-t-hurt-me-no-more-2jlb</link>
      <guid>https://dev.to/tutelaris/what-is-acid-baby-don-t-hurt-me-no-more-2jlb</guid>
      <description>&lt;p&gt;Hello, ultra devs! üëãüèª‚ö°Ô∏è&lt;br&gt;
A lot of developers currently use relational databases such as &lt;em&gt;MySQL&lt;/em&gt;, &lt;em&gt;PostgreSQL&lt;/em&gt;, and so on. And they are probably familiar with transactions. But what the &lt;strong&gt;"transaction"&lt;/strong&gt; is and what properties does it have?&lt;/p&gt;

&lt;p&gt;Today I would like to talk about transaction properties that were combined into the cool and scary word &lt;strong&gt;ACID&lt;/strong&gt; and reveal the truth about each letter in this word üëÜüèª&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-is-acid"&gt;
  &lt;/a&gt;
  What is ACID?
&lt;/h3&gt;

&lt;p&gt;ACID is an acronym of the following words:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;em&gt;Atomicity&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Consistency&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Isolation&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Durability&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If we have a certain operation in a database that satisfies these properties, we can call this operation &lt;strong&gt;"transaction"&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Ok, that's nice, but these words are just words without an explanation. Let's dig deeper into each of them! üöú&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#atomicity"&gt;
  &lt;/a&gt;
  Atomicity
&lt;/h3&gt;

&lt;p&gt;Atomicity is a nice property that guarantees, that &lt;em&gt;transaction&lt;/em&gt; is &lt;strong&gt;atomic&lt;/strong&gt; and cannot be broken into smaller parts. If something happens inside that &lt;em&gt;transaction&lt;/em&gt;, it will be reverted for all affected fields described inside this &lt;em&gt;transaction&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Imagine we have the following query:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;START&lt;/span&gt; &lt;span class="n"&gt;TRANSACTION&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;posts&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'body'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'draft'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;posts&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'draft'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="n"&gt;posts_statistics&lt;/span&gt; &lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;posts_amount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'draft'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;COMMIT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This &lt;em&gt;transaction&lt;/em&gt; basically inserts the post and increments the &lt;code&gt;post_statistics.posts_amount&lt;/code&gt; field for draft posts.&lt;br&gt;
If an &lt;code&gt;UPDATE&lt;/code&gt; of the &lt;code&gt;posts_statistics&lt;/code&gt; fails, the whole &lt;em&gt;transaction&lt;/em&gt; will be rolled back and the post won't be inserted in the &lt;code&gt;posts&lt;/code&gt; table as well. So, these two operations (actually three, &lt;code&gt;SELECT&lt;/code&gt; is also an operation) are highly coupled and can be considered atomic.&lt;/p&gt;

&lt;p&gt;One more nice property of &lt;strong&gt;atomicity&lt;/strong&gt; is that all clients won't see the change in tables until the &lt;em&gt;transaction&lt;/em&gt; gets committed. So, if we execute the &lt;em&gt;transaction&lt;/em&gt; described above and during the transaction execution, we execute the following query &lt;code&gt;SELECT COUNT(id) FROM posts WHERE status = 'draft'&lt;/code&gt; from another client, we will see a different value than the &lt;code&gt;@counter&lt;/code&gt; variable has.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#consistency"&gt;
  &lt;/a&gt;
  Consistency
&lt;/h3&gt;

&lt;p&gt;This is a very ambiguous and unclear letter. You might hear about it in &lt;strong&gt;CAP theorem&lt;/strong&gt; (leave a comment if you wanna read about &lt;strong&gt;CAP theorem&lt;/strong&gt; and types of consistencies there üòå) or in &lt;strong&gt;Consistent hashing&lt;/strong&gt;. This &lt;strong&gt;Consistency&lt;/strong&gt; is more about data consistency on the application level. Basically, it means, that before committing the transaction system needs to make sure to satisfy all invariants that were set up beforehand and were valid at the moment of starting the transaction.&lt;/p&gt;

&lt;p&gt;Imagine the situation when you buy something on dev.to shop. You reached the point when you need to pay for a cool T-shirt. You filled out all the credentials and clicked &lt;strong&gt;Pay&lt;/strong&gt;. In order to satisfy &lt;strong&gt;consistency&lt;/strong&gt; property, the sum value of your amount of money and dev.to's amount of money should be the same at the moment of the beginning of the transaction and the moment of committing it.&lt;/p&gt;

&lt;p&gt;This sum value can be considered an invariant for this &lt;em&gt;transaction&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#isolation"&gt;
  &lt;/a&gt;
  Isolation
&lt;/h3&gt;

&lt;p&gt;This property is very useful for the database to prevent so-called &lt;strong&gt;race conditions&lt;/strong&gt;. You may wonder what is "race condition".&lt;/p&gt;

&lt;p&gt;Imagine, you have multiple clients trying to access the same data and change it at the same time. Let's say, they concurrently insert posts using &lt;em&gt;transaction&lt;/em&gt; that is described in the &lt;strong&gt;Atomicity&lt;/strong&gt; chapter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;START&lt;/span&gt; &lt;span class="n"&gt;TRANSACTION&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;posts&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'body'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'draft'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;posts&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'draft'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="n"&gt;posts_statistics&lt;/span&gt; &lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;posts_amount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'draft'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;COMMIT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's say initially we have 42 posts (just because 42). Since they do it at the same time, here is what might happen:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tZIQg5A9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/he0id64gssv60df4d7dj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tZIQg5A9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/he0id64gssv60df4d7dj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Basically, they added their posts, but the total number of posts should be equal to 44, but they ended up with 43.&lt;/p&gt;

&lt;p&gt;So, in an ideal world &lt;strong&gt;isolation property&lt;/strong&gt; ensures that concurrent transactions look like they get executed one after another or &lt;em&gt;serially&lt;/em&gt;. Therefore it is also known as &lt;strong&gt;serializability&lt;/strong&gt;. In practice, the implementation of this property rarely serializable and some databases use so-called &lt;strong&gt;Weak isolation&lt;/strong&gt; (please, leave a comment if you wanna read about it).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#durability"&gt;
  &lt;/a&gt;
  Durability
&lt;/h3&gt;

&lt;p&gt;The last, but the very important property is &lt;strong&gt;Durability&lt;/strong&gt;. This property means that once a transaction got successfully committed, it will remain committed and won't be forgotten even if the data gets corrupted due to the power or the database crash.&lt;/p&gt;

&lt;p&gt;We can distinguish durability based on the database architecture:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Single-node database;&lt;/li&gt;
&lt;li&gt;Replication database (you can read more about replication &lt;a href="https://dev.to/tutelaris/introduction-to-mysql-replication-97c"&gt;here&lt;/a&gt;).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For &lt;em&gt;single-node database&lt;/em&gt;, &lt;strong&gt;durability&lt;/strong&gt; makes sure that the data won't be corrupted by writing on the disk and has a recovery mechanism in case of disk corruption.&lt;/p&gt;

&lt;p&gt;For &lt;em&gt;replication database&lt;/em&gt;, &lt;strong&gt;durability&lt;/strong&gt; makes sure that the data got written in a certain amount of replicas, so in case of a crash, it will be propagated to other replicas.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;Today we've learned about &lt;em&gt;transaction&lt;/em&gt; properties that are aggregated into the &lt;strong&gt;ACID&lt;/strong&gt; word.&lt;/p&gt;

&lt;p&gt;ACID is an acronym of the following words:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Atomicity ‚Äì ensures that all &lt;em&gt;transactions&lt;/em&gt; are &lt;strong&gt;atomic&lt;/strong&gt; and cannot be broken down into small parts;&lt;/li&gt;
&lt;li&gt;Consistency ‚Äì ensures that the &lt;em&gt;transaction&lt;/em&gt; does not violate &lt;strong&gt;application invariants&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;Isolation ‚Äì ensures that &lt;strong&gt;race conditions&lt;/strong&gt; do not happen;&lt;/li&gt;
&lt;li&gt;Durability ‚Äì ensures that once the &lt;em&gt;transaction&lt;/em&gt; is committed, it is committed forever.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That's it! Thank you for your attention! I hope you liked this post üòå&lt;/p&gt;

</description>
      <category>acid</category>
      <category>database</category>
      <category>transactions</category>
    </item>
    <item>
      <title>Go: pointer to array index expressions</title>
      <author>Weerasak Chongnguluam</author>
      <pubDate>Sun, 25 Apr 2021 15:30:47 +0000</pubDate>
      <link>https://dev.to/iporsut/go-pointer-to-array-index-expressions-47p</link>
      <guid>https://dev.to/iporsut/go-pointer-to-array-index-expressions-47p</guid>
      <description>&lt;p&gt;‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤ pointer to array ‡∏Å‡πá‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ index expressions ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á element ‡∏Ç‡∏≠‡∏á array ‡∏ó‡∏µ‡πà pointer ‡∏ô‡∏±‡πâ‡∏ô‡∏ä‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏î‡πâ&lt;/p&gt;

&lt;p&gt;‡πÄ‡∏≠‡∏≤‡∏à‡∏£‡∏¥‡∏á‡πÜ‡∏Å‡πá‡πÑ‡∏°‡πà‡∏Ñ‡πà‡∏≠‡∏¢‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô array ‡∏ï‡∏£‡∏á‡πÜ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏£‡∏≤‡∏°‡∏±‡∏Å‡∏à‡∏∞‡πÉ‡∏ä‡πâ slice ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á make, append ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ underlying array ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡πÄ‡∏≠‡∏á ‡πÅ‡∏ï‡πà‡∏Å‡πá‡∏£‡∏π‡πâ‡πÑ‡∏ß‡πâ‡∏™‡∏±‡∏Å‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏Å‡πá‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£ :D&lt;/p&gt;

&lt;p&gt;‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á pointer to array ‡πÄ‡∏ä‡πà‡∏ô&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;ptrToArr&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%T&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ptrToArr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏±‡πà‡∏á‡∏£‡∏±‡∏ô‡∏Å‡πá‡∏à‡∏∞‡πÑ‡∏î‡πâ type ‡∏Ç‡∏≠‡∏á ptrToArr ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ go run main.go
*[4]int
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‡∏ó‡∏µ‡∏ô‡∏µ‡πâ‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á element ‡∏Ç‡∏≠‡∏á &lt;code&gt;arr&lt;/code&gt; ‡∏ú‡πà‡∏≤‡∏ô &lt;code&gt;ptrToArr&lt;/code&gt; ‡πÅ‡∏ö‡∏ö‡πÅ‡∏£‡∏Å‡∏ñ‡∏∂‡∏á‡πÉ‡∏ä‡πâ operator pointer indirect &lt;code&gt;*&lt;/code&gt; ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á &lt;code&gt;arr&lt;/code&gt; ‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡πÉ‡∏ä‡πâ &lt;code&gt;[]&lt;/code&gt; ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ptrToArr&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ptrToArr&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ptrToArr&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ptrToArr&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ ‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö ‡∏Ñ‡∏£‡∏≠‡∏ö &lt;code&gt;*ptrToArr&lt;/code&gt; ‡πÑ‡∏°‡πà‡∏á‡∏±‡πâ‡∏ô‡∏°‡∏±‡∏ô‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô &lt;em&gt;(ptrToArr[0]) ‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞ compile ‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÑ‡∏õ‡πÉ‡∏ä‡πâ `&lt;/em&gt;` ‡∏Å‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô element ‡∏ó‡∏µ‡πà 0 ‡∏ã‡∏∂‡πà‡∏á‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ pointer&lt;/p&gt;

&lt;p&gt;‡∏ó‡πà‡∏≤‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏Ñ‡∏∑‡∏≠ Go ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö pointer to array Go ‡∏¢‡∏≠‡∏°‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ indexing expressions ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ pointer indirect &lt;code&gt;*&lt;/code&gt; ‡∏Å‡πà‡∏≠‡∏ô ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏µ‡πâ‡πÄ‡∏£‡∏≤‡πÄ‡∏•‡∏¢‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÅ‡∏Ñ‡πà‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ptrToArr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ptrToArr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ptrToArr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ptrToArr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö for range ‡πÑ‡∏î‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ö array, slice ‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏±‡∏ô&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;ptrToArr&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô‡∏ß‡πà‡∏≤‡∏°‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á element ‡∏Ç‡∏≠‡∏á array ‡∏ó‡∏µ‡πà‡∏°‡∏±‡∏ô‡∏ä‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á index ‡∏ô‡∏±‡πâ‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏±‡∏ô&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;ptrToArr&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;ptrToArr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ô‡∏Å‡πá‡∏à‡∏∞‡πÑ‡∏î‡πâ&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="k"&gt;go&lt;/span&gt;
&lt;span class="m"&gt;2&lt;/span&gt;
&lt;span class="m"&gt;4&lt;/span&gt;
&lt;span class="m"&gt;6&lt;/span&gt;
&lt;span class="m"&gt;8&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#%E0%B8%82%E0%B8%AD%E0%B8%9D%E0%B8%B2%E0%B8%81-buy-me-a-coffee"&gt;
  &lt;/a&gt;
  ‡∏Ç‡∏≠‡∏ù‡∏≤‡∏Å Buy Me a Coffee
&lt;/h2&gt;

&lt;p&gt;‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡πà‡∏≤‡∏ô‡πÉ‡∏î‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏ä‡∏≠‡∏ö‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ï‡πà‡∏≤‡∏á‡πÜ‡∏Ç‡∏≠‡∏á‡∏ú‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡πÅ‡∏ü‡πÄ‡∏•‡πá‡∏Å‡πÜ‡∏ô‡πâ‡∏≠‡∏¢‡πÜ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏ú‡∏°‡πÑ‡∏î‡πâ‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏≤‡∏á Buy Me a Coffee ‡∏Ñ‡∏•‡∏¥‡πä‡∏Å‡∏ó‡∏µ‡πà‡∏£‡∏π‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/weerasak"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;‡∏™‡πà‡∏ß‡∏ô‡∏ó‡πà‡∏≤‡∏ô‡πÉ‡∏î‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï ‡∏´‡∏£‡∏∑‡∏≠ Paypal ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏ú‡∏°‡πÑ‡∏î‡πâ‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏≤‡∏á PromptPay ‡πÇ‡∏î‡∏¢‡∏î‡∏π QR Code ‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏û‡∏¥‡∏ô‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà Page DevDose ‡∏Ñ‡∏£‡∏±‡∏ö &lt;a href="https://web.facebook.com/devdoseth"&gt;https://web.facebook.com/devdoseth&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏£‡∏±‡∏ö üôè&lt;/p&gt;

</description>
      <category>go</category>
    </item>
    <item>
      <title>My first Dev.to post.</title>
      <author>Andrew James Okpainmo</author>
      <pubDate>Sun, 25 Apr 2021 15:30:42 +0000</pubDate>
      <link>https://dev.to/okpainmo/my-first-dev-to-post-3hnc</link>
      <guid>https://dev.to/okpainmo/my-first-dev-to-post-3hnc</guid>
      <description>&lt;p&gt;Hey, I am Andrew Okpainmo. I am a Front end web developer. This is my first post on Dev.to. I am so glad you are reading this post. &lt;br&gt;
I came on Dev.to to start out my developer blogging career. I have been coding for some years now, and I believe that I have got some good knowledge that will be of much good to fellow developers on Dev.to. &lt;br&gt;
I am an aspiring full-stack Js developer, but for now, I build websites with frontend web development technologies. &lt;br&gt;
I am always open to help, at least that's one primary reason why we are all here. anytime soon, I will be rolling out some good articles. &lt;br&gt;
It's great being on Dev.to, and I hope to really make some good impact.&lt;br&gt;
If you are interested in how to get your Gulp workflow up and running so well. Then check out my next article. It's going to be the most definitive article about setting up Gulp that you've ever read.&lt;br&gt;
I'll be sharing how to set gulp for your project in 2021. Thanks to all the troubles I faced while setting mine up.&lt;br&gt;
you can't miss it.&lt;br&gt;
Cheers.&lt;/p&gt;

</description>
      <category>firstpost</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
