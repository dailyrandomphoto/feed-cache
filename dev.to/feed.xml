<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Top các phần mềm diệt virus tốt nhất cho Windows 2022</title>
      <author>Joney</author>
      <pubDate>Tue, 18 May 2021 10:56:26 +0000</pubDate>
      <link>https://dev.to/jonynguyen/top-cac-phan-mem-diet-virus-tot-nhat-cho-windows-2022-5459</link>
      <guid>https://dev.to/jonynguyen/top-cac-phan-mem-diet-virus-tot-nhat-cho-windows-2022-5459</guid>
      <description>&lt;p&gt;Như các bạn đã biết thì đối với máy tính sử dụng hệ điều hành windows 10, windows 8/8.1 hay windows 7 thì việc sử dụng các loại phần mềm như tường lửa, diệt virus nhằm bảo về máy tính của mình là điều cần thiết phải thực hiện. Và nếu không biết tìm kiếm những phần mềm nào thì trong chuyên mục của &lt;a href="https://dev.to/"&gt;&lt;b&gt;dev.to&lt;/b&gt;&lt;/a&gt; mình xin được chia sẻ đến mọi người về top các phần mềm diệt virus tốt nhất cho Windows 2022&lt;/p&gt;

&lt;h2&gt;10 phần mềm diệt virus tốt nhất cho Windows 2022&lt;/h2&gt;

&lt;h3&gt;1. Bitdefender Antivirus Plus&lt;/h3&gt;

&lt;p&gt;Bitdefender Antivirus Plus&lt;/p&gt;

&lt;p&gt;Ưu điểm:&lt;/p&gt;

&lt;p&gt;Giành được điểm số nổi bật trong các bài kiểm tra độc lập tại phòng thí nghiệm và kiểm tra khả năng bảo vệ web&lt;br&gt;
Bảo vệ ransomware nhiều lớp&lt;br&gt;
Có tính năng chống theo dõi (Do Not Track)&lt;br&gt;
Có trình quản lý mật khẩu&lt;br&gt;
Có tính năng Banking protection (bảo vệ các giao dịch tài chính trực tuyến, như mua sắm hay thanh toán qua ngân hàng)&lt;br&gt;
Cung cấp một mạng riêng ảo (VPN)&lt;br&gt;
Nhiều tính năng bổ sung tập trung vào bảo mật.&lt;br&gt;
Nhược điểm:&lt;/p&gt;

&lt;p&gt;Truy cập VPN không giới hạn yêu cầu đăng ký riêng&lt;br&gt;
Nếu tất cả các biện pháp bảo vệ thời gian thực bị vô hiệu hóa, những tính năng dành riêng cho ransomware đã bỏ qua một mẫu không phổ biến.&lt;/p&gt;

&lt;h3&gt;2. Kaspersky Anti-Virus&lt;/h3&gt;

&lt;p&gt;Ưu điểm:&lt;/p&gt;

&lt;p&gt;Giành được điểm số hoàn hảo và gần như hoàn hảo từ 4 phòng thử nghiệm độc lập&lt;br&gt;
Đạt điểm hoàn hảo trong bài kiểm tra bảo vệ chống phishing&lt;br&gt;
Điểm số tốt trong các bài kiểm tra chặn &lt;a href="https://bloghotro.com/phan-mem/"&gt;phần mềm&lt;/a&gt; và URL độc hại&lt;br&gt;
Có hỗ trợ qua điện thoại hoặc trò chuyện trực tiếp&lt;br&gt;
Nhược điểm:&lt;/p&gt;

&lt;p&gt;Các tính năng quét bổ sung chồng chéo lẫn nhau đáng kể&lt;/p&gt;

&lt;h3&gt;3. Webroot SecureAnywhere AntiVirus&lt;/h3&gt;

&lt;p&gt;Webroot SecureAnywhere AntiVirus&lt;/p&gt;

&lt;p&gt;Ưu điểm:&lt;/p&gt;

&lt;p&gt;Đạt điểm số hoàn hảo trong bài kiểm tra bảo vệ chống phần mềm độc hại&lt;br&gt;
Khả năng chống phishing rất tốt&lt;br&gt;
Có tính năng bảo vệ chống ransomware&lt;br&gt;
Không tiêu tốn nhiều tài nguyên hệ thống.&lt;br&gt;
Quét nhanh, kích thước nhỏ&lt;br&gt;
Sở hữu nhiều tính năng tiên tiến&lt;br&gt;
Nhược điểm:&lt;/p&gt;

&lt;p&gt;Kết quả thử nghiệm hạn chế do kỹ thuật phát hiện không giống bình thường&lt;br&gt;
Đã bỏ lỡ một mẫu ransomware được sửa đổi thủ công đặc biệt trong thử nghiệm.&lt;/p&gt;

&lt;h3&gt;4. McAfee AntiVirus Plus&lt;/h3&gt;

&lt;p&gt;McAfee AntiVirus Plus&lt;/p&gt;

&lt;p&gt;Ưu điểm:&lt;/p&gt;

&lt;p&gt;Bảo vệ cho mọi thiết bị Windows, macOS, Android và iOS trong gia đình&lt;br&gt;
Điểm số tốt trong các bài kiểm tra thực tế&lt;br&gt;
Đạt điểm xuất sắc trong bài kiểm tra chống phishing&lt;br&gt;
Bao gồm tính năng bảo vệ Ransom Guard, PC Boost và nhiều tính năng bổ sung khác.&lt;br&gt;
Nhược điểm:&lt;/p&gt;

&lt;p&gt;Ransom Guard đã bỏ lỡ một số mẫu ransomware trong thực tế&lt;br&gt;
Tính năng tăng tốc web PC Boost vẫn chỉ hoạt động trong Chrome&lt;br&gt;
Việc quét toàn bộ rất chậm trên Windows&lt;br&gt;
Phiên bản Mac ít tính năng hơn Windows hoặc Android&lt;br&gt;
Vẫn còn ít tính năng cho iOS&lt;/p&gt;

&lt;h3&gt;5. ESET NOD32 Antivirus&lt;/h3&gt;

&lt;p&gt;ESET NOD32 Antivirus&lt;/p&gt;

&lt;p&gt;Ưu điểm:&lt;/p&gt;

&lt;p&gt;Đạt điểm rất tốt từ các phòng thí nghiệm độc lập&lt;br&gt;
Điểm số tốt trong các bài kiểm tra thực tế&lt;br&gt;
Thành phần HIPS chặn được các cuộc tấn công exploit&lt;br&gt;
Trình quét UEFI tìm thấy phần mềm độc hại trong firmware&lt;br&gt;
Khả năng điều khiển thiết bị toàn diện&lt;br&gt;
Nhược điểm:&lt;/p&gt;

&lt;p&gt;Khả năng bảo vệ chống phishing chỉ ở mức chấp nhận được&lt;br&gt;
Khả năng điều khiển thiết bị quá phức tạp đối với hầu hết người dùng.&lt;/p&gt;

&lt;h3&gt;6. Norton AntiVirus Plus&lt;/h3&gt;

&lt;p&gt;Norton AntiVirus Plus&lt;/p&gt;

&lt;p&gt;Ưu điểm:&lt;/p&gt;

&lt;p&gt;Điểm số xuất sắc trong các bài kiểm tra thử nghiệm độc lập và kiểm tra riêng&lt;br&gt;
Có khả năng bảo vệ dữ liệu chống lại ransomware&lt;br&gt;
Bao gồm sao lưu trực tuyến, tường lửa, bảo vệ chống tấn công exploit, quản lý mật khẩu và các tính năng bổ sung khác.&lt;br&gt;
Nhược điểm:&lt;/p&gt;

&lt;p&gt;Tính năng Data Protector (Bảo vệ dữ liệu) khá kém khi thử nghiệm&lt;br&gt;
Đắt tiền&lt;br&gt;
Không có mức giá tốt khi mua nhiều giấy phép&lt;/p&gt;

&lt;h3&gt;7. Trend Micro Antivirus+ Security&lt;/h3&gt;

&lt;p&gt;Trend Micro Antivirus+ Security&lt;/p&gt;

&lt;p&gt;Ưu điểm:&lt;/p&gt;

&lt;p&gt;Điểm số tuyệt vời trong các bài kiểm tra chặn URL độc hại và chống phishing&lt;br&gt;
Bảo vệ ransomware nhiều lớp&lt;br&gt;
Tính năng Pay Guard bảo vệ các giao dịch trực tuyến&lt;br&gt;
Nhiều tính năng bổ sung&lt;br&gt;
Nhược điểm:&lt;/p&gt;

&lt;p&gt;Đạt điểm khá kém trong bài kiểm tra bảo vệ chống lại phần mềm độc hại thực tế&lt;br&gt;
Pay Guard không bảo vệ một cách nhất quán&lt;br&gt;
Bộ lọc thư rác chỉ hoạt động với Outlook&lt;br&gt;
Không có giấy phép chung cho nhiều thiết bị.&lt;/p&gt;

&lt;h3&gt;8. Emsisoft Anti-Malware&lt;/h3&gt;

&lt;p&gt;Emsisoft Anti-Malware&lt;/p&gt;

&lt;p&gt;Ưu điểm:&lt;/p&gt;

&lt;p&gt;Đạt điểm tốt trong bài kiểm tra bảo vệ chống phần mềm độc hại&lt;br&gt;
Khả năng phát hiện hành vi đáng ngờ đã chặn thành công ransomware&lt;br&gt;
Cloud Console cho phép quản lý từ xa đầy đủ&lt;br&gt;
Có tiện ích mở rộng mới có thể phát hiện phishing.&lt;br&gt;
Nhược điểm:&lt;/p&gt;

&lt;p&gt;Hầu như không có điểm số ghi lại từ các phòng thí nghiệm độc lập&lt;br&gt;
Tính năng bảo vệ chống phishing không dành cho tất cả các trình duyệt&lt;br&gt;
Cloud Console có thể quá phức tạp đối với một số người&lt;/p&gt;

&lt;h3&gt;9. F-Secure Anti-Virus&lt;/h3&gt;

&lt;p&gt;F-Secure Anti-Virus&lt;/p&gt;

&lt;p&gt;Ưu điểm:&lt;/p&gt;

&lt;p&gt;Đạt điểm số tốt trong các bài kiểm tra phòng thí nghiệm độc lập và các bài kiểm tra thực tế&lt;br&gt;
Tính năng DeepGuard dựa trên hành vi phát hiện phần mềm độc hại hoàn toàn mới, bao gồm cả ransomware&lt;br&gt;
Khả năng bảo vệ mạng tiên tiến&lt;br&gt;
Giao diện hợp lý, đơn giản&lt;br&gt;
Không tốn kém&lt;br&gt;
Nhược điểm:&lt;/p&gt;

&lt;p&gt;Khả năng bảo vệ chống lại ransomware thất bại trước một mẫu thực tế trong quá trình thử nghiệm&lt;br&gt;
Không có thành phần chống phishing&lt;/p&gt;

&lt;h3&gt;10. Malwarebytes Premium&lt;/h3&gt;

&lt;p&gt;Malwarebytes Premium&lt;/p&gt;

&lt;p&gt;Ưu điểm:&lt;/p&gt;

&lt;p&gt;Đạt điểm số tuyệt vời về khả năng bảo vệ chống malware và kiểm tra chặn URL độc hại trong các bài kiểm tra thực tế&lt;br&gt;
Bao gồm khả năng bảo vệ chống lại các cuộc tấn công exploit, ransomware, phát hiện dựa trên hành vi&lt;br&gt;
Nhược điểm:&lt;/p&gt;

&lt;p&gt;Điểm kiểm tra phòng thí nghiệm độc lập ít và khá kém&lt;br&gt;
Khả năng bảo vệ chống phishing không hiệu quả&lt;br&gt;
Kết quả phát hiện ransomware khá rối&lt;/p&gt;

&lt;p&gt;Kết luận: Trên đây là tổng hợp pop các &lt;a href="https://bloghotro.com/phan-mem-diet-virus/"&gt;phần mềm diệt virus&lt;/a&gt; tốt nhất cho Windows 2021, mọi người có thể tham khảo nhiều hơn nữa các dạng phần mềm này tại blog hỗ trợ thông qua địa chỉ website bloghotro.com để có thêm nhiều thông tin hơn nữa nhé&lt;/p&gt;

</description>
      <category>bloghotro</category>
    </item>
    <item>
      <title>I made a website to make programmers laugh: ProgrammerHumor.io</title>
      <author>ProgrammerHumor.io</author>
      <pubDate>Tue, 18 May 2021 10:48:59 +0000</pubDate>
      <link>https://dev.to/prgrmmrhumor_io/i-made-a-website-to-make-programmers-laugh-programmerhumor-io-p3e</link>
      <guid>https://dev.to/prgrmmrhumor_io/i-made-a-website-to-make-programmers-laugh-programmerhumor-io-p3e</guid>
      <description>&lt;p&gt;Created a website for programmers to spend their free time on, and get a good laugh out of it too. &lt;/p&gt;

&lt;p&gt;Here, check it out: &lt;a href="https://programmerhumor.io"&gt;https://programmerhumor.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OcttZvcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xxwyko50osmzhizosm3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OcttZvcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xxwyko50osmzhizosm3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wZ-avdwT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g16bqzpl9xpi3h7kf2nj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZ-avdwT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g16bqzpl9xpi3h7kf2nj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4vQNpYAD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vuxc2g52i2b8qom6062t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4vQNpYAD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vuxc2g52i2b8qom6062t.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>codenewbie</category>
      <category>funny</category>
      <category>ocr</category>
    </item>
    <item>
      <title>Ways To lose Weight That Actually work
</title>
      <author>Harshith</author>
      <pubDate>Tue, 18 May 2021 10:22:46 +0000</pubDate>
      <link>https://dev.to/harshith/ways-to-lose-weight-that-actually-work-7fg</link>
      <guid>https://dev.to/harshith/ways-to-lose-weight-that-actually-work-7fg</guid>
      <description>&lt;p&gt;The number of fad diets, weight loss programmes and body-shaping products is almost infinite. These days, it seems that everyone wants to lose weight but not everyone knows how. In this article, we look at some of the most common weight loss myths you may be following but actually making your goals even harder to achieve.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-fad-diets"&gt;
  &lt;/a&gt;
  1. Fad Diets
&lt;/h2&gt;

&lt;p&gt;Fad diets come and go, but they never seem to go away. Dieting is one of the most-studied topics in the world and has been for a long time. The reason that there are so many fad diets is because there’s always a new way to sell dieting.When we hear about a diet and what it contains, we automatically go to our cupboards, pantry and fridge as our first thoughts. We may even go online to research which diet is the best one for us. When you’ve been on a diet before many times, you stop being vigilant and start looking for shortcuts to your goals.&lt;br&gt;
If there’s one thing we’ve always learned in nutrition, it’s a never-ending list of diet risks and dangers. Eating certain foods can be healthy, but eating them in excess, or common diet risks, can be dangerous.&lt;br&gt;
The real risks of diets are rooted in the lifestyle we lead. If your diet is based on food from a certain region or not, it’s not only your indulgence in a carb-heavy breakfast that could be making you ill.&lt;br&gt;
For example, northern European countries have very healthy populations primarily because their diet isn’t focused on carbs. This is because the lack of grains in the northern diet results in a high-fat, moderate (30%+) protein intake.&lt;br&gt;
One of the biggest mistakes people make is substituting regular, high-fat foods with ‘fat’. If people knowingly replaced fine dining with low-fat takeaways and eventually ended up gaining weight, it would be a recipe for disaster. Anyone struggling to lose weight or who needs to build muscle should keep these two concepts in mind.&lt;br&gt;
There is no simple answer for how to get or stay thin. Dieting is highly complicated and is nowhere close to one-size-fits-all. Different diets work for different people. Weight loss can be easy or hard depending on your level of fitness.&lt;br&gt;
It’s common to hear people say that weight loss is like ‘playing the piano with one hand.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-not-drinking-enough-water"&gt;
  &lt;/a&gt;
  2. Not Drinking Enough Water
&lt;/h2&gt;

&lt;p&gt;It’s amazing how many people don’t drink enough water. According to The Institute of Medicine, men should drink roughly 3 liters of water a day (about 13 cups), and women should drink 2.2 liters (about 9 cups).Drinking water is so important for reducing your risk of many health problems. However, some people believe that only tap water is healthy. This is not true; most bottled water is not enough and many water filters do not remove chlorine from tap water. The Institute of Medicine also states that the quality of tap water impacts your risk of health problems more than water quality treatment systems.&lt;br&gt;
According to a 2017 study published by the American Journal of Clinical Nutrition, when people are told to limit how much water they drink, they are less likely to drink as much as they should. What is more concerning is that many people believe that if they drink five glasses of water a day, they will be well-hydrated. While that may be true for a portion of the population, the vast majority of people in the western world do not drink five glasses of water a day. In fact, the World Health Organization (WHO) recommends only drinking around 2.7 liters (about 9 cups) of water a day. Once again, drinking enough water can have more impact on your health than what you’re drinking.&lt;br&gt;
You may be reluctant to try a different kind of food because you’ve heard it can make you more susceptible to food poisoning. One of the biggest myths about food poisoning is the following: Some foods will make you more likely to get food poisoning because you have more bacteria and germs in your body. This belief has led to the widespread use of limiting your diet to foods and drinks that you think will kill the germs causing food poisoning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-eating-too-many-calories"&gt;
  &lt;/a&gt;
  3. Eating Too Many Calories
&lt;/h2&gt;

&lt;p&gt;There are two main reasons why people gain weight. The first one is eating too many calories. If you eat more calories than your body burns, then the excess calories will be stored as fat. The second one is eating the wrong types of calories. If you eat more calories from fat than your body needs, then the extra fat will be stored as fat.&lt;br&gt;
There is no doubt that your diet plays a major role in your weight. In fact, the extra weight you gain is partly controlled by your food choices. However, the issue lies in over-reliance on one-size-fits-all diets and not following a range of dietary approaches.&lt;br&gt;
If you are interested in weight cycling, then the actual fat storage may be stored in different places. Alternatively, if you are trying to lose weight, then your body needs a higher supply of energy than when you are at your ideal weight.&lt;br&gt;
If you are trying to lose body fat, the more consistent you are with eating foods that will help you maintain or help you lose body fat, the more sustainable your weight loss will be.&lt;br&gt;
Fad diets and weight loss programmes almost always cause more harm than good. In an ideal world, a healthy diet should be simple, tasty and nutritious. Good body composition is made easier when we eat the foods that our bodies need to function properly.&lt;br&gt;
Fad diets and weight loss programmes flood the market with foods that you can’t process well at home and are not suited for your lifestyle. These foods are high in simple carbs, simple sugars, saturated fats, refined carbs and salt. They do not suit the daily diet of a healthy individual.&lt;br&gt;
The foods that can be eaten to suit your lifestyle are whole, unprocessed carbohydrates, like oats, buckwheat, buckwheat bran, peanut butter, bananas, and sometimes fruit. Some people also eat yogurt and fresh fruit. No matter which way you choose to approach your diet, you need to be realistic about the foods you can eat and what you can and can’t include.&lt;br&gt;
Check your health and BP with this devise -- &lt;a href="https://amzn.to/3hypEeE"&gt;https://amzn.to/3hypEeE&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-not-staying-active"&gt;
  &lt;/a&gt;
  4. Not Staying Active
&lt;/h2&gt;

&lt;p&gt;Best all in one Home GYM Kit at amazon -- &lt;a href="https://amzn.to/33Qp3Nd"&gt;https://amzn.to/33Qp3Nd&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I’ve noticed that I’m much more productive when I stay active. Studies have shown that staying active throughout the day can make you more productive. I used to be someone who would just sit at my desk all day and work, but now I try to move around as much as I can. &lt;br&gt;
Stretching is crucial too. Even though a lot of us don’t realise it, we are actually doing more in our daily lives if we stretch. Getting out of your chair, walking around or even just taking a short walk can help to reduce your risk of an adverse injury. Here are a few examples of exercises that you can try.&lt;br&gt;
Aesthetics can increase our self-confidence and reduce our feelings of fatness.&lt;br&gt;
Fad diets and ‘quick-fix’ diets don’t work. Around 80% of weight-loss diets fail, while a 2014 study proved that there are no quick-fix diet trends. The reality is that most sustainable weight-loss methods are long-term. If we want to lose weight and keep it off, we need to make sustainable changes that will contribute to our long-term wellbeing.&lt;br&gt;
I used to be terrified of food. I was always rushing to the kitchen for a burger when I could easily get a salad for dinner. I wouldn’t skip breakfast, try new foods or enjoy anything that didn’t taste good. Whenever I went on vacation, I didn’t bring my charger, the fridge or even my favourite coffee back with me. I was a strict vegan during vacation and would stay in bed for days before eating anything at all.&lt;br&gt;
Now, I’m not vegan anymore. I hate to say that as I still enjoy a lot of food when I’m out. I’ve curtailed my meat consumption a lot and now I have to look for alternatives if I’m really hungry. Here are some suggestions:&lt;br&gt;
I used to believe that I was lazy and needed to diet to change that. This was probably because I used to go to bed much earlier than most of my peers and skip lunch all the time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-using-diet-pills-and-other-products"&gt;
  &lt;/a&gt;
  5. Using Diet Pills and Other Products
&lt;/h2&gt;

&lt;p&gt;Some Good recommended pills &lt;br&gt;
1) &lt;a href="https://amzn.to/33SLYYl"&gt;https://amzn.to/33SLYYl&lt;/a&gt;&lt;br&gt;
2) &lt;a href="https://amzn.to/3hA7NUS"&gt;https://amzn.to/3hA7NUS&lt;/a&gt;&lt;br&gt;
or find yourself (not suggested ) at &lt;a href="https://amzn.to/33VJUPg"&gt;https://amzn.to/33VJUPg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are a lot of diet pills and other products out there that promise to help you lose weight, but they are not the answer. Sure, there are some safe and effective products that you can use to help you lose weight, but only if you use them in conjunction with a good diet and exercise program and you’re realistic about your expectations. &lt;br&gt;
Our goal is to help men with body image issues to rely less on products that promise quick fixes and gain sustainable “moderation” back into their lifestyles. Visit our Weight Loss Page for more of our articles on the latest science-backed techniques for sustainable fat loss.&lt;br&gt;
Obesity is almost always a diet-related disease, but that doesn’t mean diets can’t help. One essential component of a good diet and exercise program is ensuring that carbohydrate intake is high enough to help your body burn fat while avoiding refined carbohydrates.&lt;br&gt;
Most low-carb diets are high in highly processed carbohydrates which are easily processed, become difficult to digest and cause spikes in insulin levels. Very high protein diets also often provide more refined carbohydrates than most people need, this is why ‘keto’ is gradually being mainstreamed by many professionals, in order to provide an ‘energy-rich’ diet in an easier to manage format.&lt;br&gt;
There is nothing wrong with taking the time to learn what foods are naturally good for you and learn how your body needs to digest them, so that you can control the amounts you eat and know exactly what you’re putting into your body.&lt;br&gt;
Diet it or lose it is a catchphrase often used to promote a pretty unrealistic and poor-formatted ultra-lean (or as most people would call it) body image ideal.&lt;br&gt;
There is a lot of bias and misinformation in the body positive movement, and many are even promoting one cause or another. This could lead you to think that body positive people praise weight loss and think that people should ditch diets and live solely on vegetables, fruits and grass-fed meats.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#gift-for-my-followers"&gt;
  &lt;/a&gt;
  Gift FOR my FOllowers
&lt;/h1&gt;

&lt;p&gt;Free Ebook of 100 tips to lose weight &lt;br&gt;
Direct Download link --&lt;a href="https://drive.google.com/file/d/1rdBasp6jmKzyAFHZNIRSekkr-MkQYlQp/view?usp=sharing"&gt;https://drive.google.com/file/d/1rdBasp6jmKzyAFHZNIRSekkr-MkQYlQp/view?usp=sharing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--btcT-sLv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7wbwj6d79aob6c7bjbdw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--btcT-sLv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7wbwj6d79aob6c7bjbdw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Thank you&lt;/p&gt;

</description>
      <category>weight</category>
      <category>lose</category>
      <category>how</category>
      <category>to</category>
    </item>
    <item>
      <title>Loading Javascript The Right Way!</title>
      <author>Vivek Alhat</author>
      <pubDate>Tue, 18 May 2021 10:15:16 +0000</pubDate>
      <link>https://dev.to/vivekalhat/loading-javascript-the-right-way-4lb4</link>
      <guid>https://dev.to/vivekalhat/loading-javascript-the-right-way-4lb4</guid>
      <description>&lt;p&gt;Javascript is one of the most important parts of web development. You can add functionality to your website using javascript. In order to use the javascript in a web application, you need to import it inside an HTML file. There are two primary ways to insert javascript into your website. These are :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Internal Javascript&lt;/li&gt;
&lt;li&gt;External Javascript&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#internal-javascript"&gt;
  &lt;/a&gt;
  Internal Javascript
&lt;/h2&gt;

&lt;p&gt;In this approach, you can write javascript code directly inside an HTML file. You need to use a script tag to do so.&lt;br&gt;
e.g: &lt;code&gt;&amp;lt;script&amp;gt; JS goes here &amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#external-javascript"&gt;
  &lt;/a&gt;
  External Javascript
&lt;/h2&gt;

&lt;p&gt;In this approach, you can write javascript inside a separate file. The extension of this file is &lt;code&gt;.js&lt;/code&gt;. In order to use this file, you need to import it inside the HTML. You can do this by using a script tag.&lt;/p&gt;

&lt;p&gt;e.g: &lt;code&gt;&amp;lt;script src="script.js"&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Now the main question is where should we actually import the javascript file?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can place the javascript file either in the head section of the HTML or at the end of the body tag. The way you place the javascript file can affect the code execution.&lt;/p&gt;

&lt;p&gt;Let's see this with the help of an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// index.html

&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8" /&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge" /&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /&amp;gt;
    &amp;lt;script src="script.js"&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;title&amp;gt;Ecdysis&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
     &amp;lt;p id="text"&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// script.js

document.getElementById("text").innerHTML = "This is a paragraph tag";  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;HTML is parsed in the top to bottom manner. In the above example, we have written javascript to change the text of paragraph tag with id &lt;em&gt;text&lt;/em&gt;. The above code won't work and it will return an error because HTML is executed in a top to bottom manner. As soon as control reaches the javascript file, the javascript will be executed before the P tag is actually rendered in the browser.&lt;/p&gt;

&lt;p&gt;We can solve this error in two ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Placing javascript at the end of the HTML&lt;/li&gt;
&lt;li&gt;Using Async and Defer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When we place javascript at the end of the HTML, it is executed after the entire HTML code is rendered in the browser. After the P tag is rendered then javascript is executed without getting any error.&lt;/p&gt;

&lt;p&gt;Another method is to use async and defer. In this method, javascript will be in the head section only but we can add async or defer keywords inside the script tag to execute the JS without any error.&lt;/p&gt;

&lt;p&gt;e.g: &lt;code&gt;&amp;lt;script src="script.js" defer&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In async, when the javascript is encountered while parsing HTML the browser loads JS in parallel while parsing HTML. As soon as JS is completely loaded browser stops rendering HTML then it executes javascript code. After executing the javascript, it continues parsing HTML.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--72JZfO2c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c46clny4yrogs84krtfo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--72JZfO2c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c46clny4yrogs84krtfo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In defer, the browser loads javascript in parallel while parsing HTML but javascript code is executed after parsing the entire HTML code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--85yIQcD7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0kmgu998nqas7yzrnpfr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--85yIQcD7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0kmgu998nqas7yzrnpfr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So by using async or defer, we can execute javascript safely by placing it inside the head section.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The best practice is to put all the javascript files in the head section of the HTML.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>es6</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>What Are The Most Important Things to Keep in Mind When Building a Portfolio Website? ⚡</title>
      <author>Anastasia 🏄🏻‍♀️</author>
      <pubDate>Tue, 18 May 2021 10:01:12 +0000</pubDate>
      <link>https://dev.to/coffeestasia/what-are-the-most-important-things-to-keep-in-mind-when-building-a-portfolio-website-3g8g</link>
      <guid>https://dev.to/coffeestasia/what-are-the-most-important-things-to-keep-in-mind-when-building-a-portfolio-website-3g8g</guid>
      <description>&lt;p&gt;What a perfect developer portfolio should include? What advice would you give to Bootcamp graduates and seasoned developers?  &lt;/p&gt;

&lt;p&gt;You are welcome to showcase your portfolios 🙌&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>career</category>
      <category>100daysofcode</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Solution: Find Duplicate File in System</title>
      <author>seanpgallivan</author>
      <pubDate>Tue, 18 May 2021 09:52:00 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-find-duplicate-file-in-system-1ofi</link>
      <guid>https://dev.to/seanpgallivan/solution-find-duplicate-file-in-system-1ofi</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/find-duplicate-file-in-system/discuss/1215552"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-609-medium-find-duplicate-file-in-system"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/find-duplicate-file-in-system/"&gt;Leetcode Problem #609 (&lt;em&gt;Medium&lt;/em&gt;): Find Duplicate File in System&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given a list &lt;code&gt;paths&lt;/code&gt; of directory info, including the directory path, and all the files with contents in this directory, return &lt;em&gt;all the duplicate files in the file system in terms of their paths&lt;/em&gt;. You may return the answer in &lt;strong&gt;any order&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A group of duplicate files consists of at least two files that have the same content.&lt;/p&gt;

&lt;p&gt;A single directory info string in the input list has the following format:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;"root/d1/d2/.../dm f1.txt(f1_content) f2.txt(f2_content) ... fn.txt(fn_content)"&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It means there are &lt;code&gt;n&lt;/code&gt; files (&lt;code&gt;f1.txt, f2.txt ... fn.txt&lt;/code&gt;) with content (&lt;code&gt;f1_content, f2_content ... fn_content&lt;/code&gt;) respectively in the directory &lt;code&gt;"root/d1/d2/.../dm"&lt;/code&gt;. Note that &lt;code&gt;n &amp;gt;= 1&lt;/code&gt; and &lt;code&gt;m &amp;gt;= 0&lt;/code&gt;. If &lt;code&gt;m = 0&lt;/code&gt;, it means the directory is just the root directory.&lt;/p&gt;

&lt;p&gt;The output is a list of groups of duplicate file paths. For each group, it contains all the file paths of the files that have the same content. A file path is a string that has the following format:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;"directory_path/file_name.txt"&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;paths = ["root/a 1.txt(abcd) 2.txt(efgh)","root/c 3.txt(abcd)","root/c/d 4.txt(efgh)","root 4.txt(efgh)"]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[["root/a/2.txt","root/c/d/4.txt","root/4.txt"],["root/a/1.txt","root/c/3.txt"]]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;paths = ["root/a 1.txt(abcd) 2.txt(efgh)","root/c 3.txt(abcd)","root/c/d 4.txt(efgh)"]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[["root/a/2.txt","root/c/d/4.txt"],["root/a/1.txt","root/c/3.txt"]]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= paths.length &amp;lt;= 2 * 10^4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= paths[i].length &amp;lt;= 3000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= sum(paths[i].length) &amp;lt;= 5 * 10^5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;paths[i]&lt;/code&gt; consist of English letters, digits, &lt;code&gt;'/'&lt;/code&gt;, &lt;code&gt;'.'&lt;/code&gt;, &lt;code&gt;'('&lt;/code&gt;, &lt;code&gt;')'&lt;/code&gt;, and &lt;code&gt;' '&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;You may assume no files or directories share the same name in the same directory.&lt;/li&gt;
&lt;li&gt;You may assume each given directory info represents a unique directory. A single blank space separates the directory path and file info.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;The order to group duplicate files, we should use a &lt;strong&gt;map&lt;/strong&gt; to store the file paths by content value. For each string (&lt;strong&gt;pStr&lt;/strong&gt;) in &lt;strong&gt;paths&lt;/strong&gt;, we can iterate through the string up to the first space to find the &lt;strong&gt;path&lt;/strong&gt;. Then we can iterate through the remainder of &lt;strong&gt;pStr&lt;/strong&gt; and use two more pointers (&lt;strong&gt;j, k&lt;/strong&gt;) to mark the indexes around the filename (&lt;strong&gt;file&lt;/strong&gt;) and contents (&lt;strong&gt;cont&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;When we find a &lt;strong&gt;')'&lt;/strong&gt;, we've found the end of a complete entry, so we should add it to our content map (&lt;strong&gt;contMap&lt;/strong&gt;) by merging &lt;strong&gt;path&lt;/strong&gt; and &lt;strong&gt;file&lt;/strong&gt; (with a &lt;strong&gt;'/'&lt;/strong&gt; between) and storing the result in &lt;strong&gt;contMap&lt;/strong&gt; under &lt;strong&gt;cont&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Once we've added all files to &lt;strong&gt;contMap&lt;/strong&gt;, we can iterate through its values and add any groups that are larger than &lt;strong&gt;1&lt;/strong&gt; (indicating duplicates) to our answer array (&lt;strong&gt;ans&lt;/strong&gt;) before we &lt;strong&gt;return ans&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N + C)&lt;/strong&gt; where &lt;strong&gt;N&lt;/strong&gt; is the total number of files and &lt;strong&gt;C&lt;/strong&gt; is the number of different keys in &lt;strong&gt;contMap&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Space Complexity: O(N)&lt;/strong&gt; for &lt;strong&gt;N&lt;/strong&gt; files in &lt;strong&gt;contMap&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Python is much faster when using &lt;strong&gt;split()&lt;/strong&gt; as opposed to direct iteration through the strings.&lt;/p&gt;

&lt;p&gt;Java is faster when using a &lt;strong&gt;StringBuilder&lt;/strong&gt; to compile the &lt;strong&gt;path + file&lt;/strong&gt; before entry into &lt;strong&gt;contMap&lt;/strong&gt;.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;findDuplicate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;paths&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;contMap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;pStr&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;paths&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pStr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pStr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;pStr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pStr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pStr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;pathfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;pStr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                    &lt;span class="nx"&gt;cont&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pStr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;contMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cont&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                    &lt;span class="nx"&gt;contMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cont&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;pathfile&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;contMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cont&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pathfile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;contMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;findDuplicate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;paths&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;]]:&lt;/span&gt;
        &lt;span class="n"&gt;contMap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pStr&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;paths&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;sep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pStr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
                &lt;span class="n"&gt;parts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'('&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;cont&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="n"&gt;contMap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;cont&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;'/'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;parts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;contMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;findDuplicate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;paths&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;contMap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="nc"&gt;StringBuilder&lt;/span&gt; &lt;span class="n"&gt;pathfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;StringBuilder&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;pStr&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;paths&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;pathfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setLength&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pStr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;charAt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="sc"&gt;' '&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++;&lt;/span&gt;
            &lt;span class="n"&gt;pathfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;append&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pStr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;substring&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)).&lt;/span&gt;&lt;span class="na"&gt;append&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;'/'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;pLen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;pStr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pStr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;charAt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;'('&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;pathfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;append&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pStr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;substring&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
                    &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pStr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;charAt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;')'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;cont&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pStr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;substring&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(!&lt;/span&gt;&lt;span class="n"&gt;contMap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;containsKey&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cont&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;
                        &lt;span class="n"&gt;contMap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cont&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;());&lt;/span&gt;
                    &lt;span class="n"&gt;contMap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cont&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pathfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
                    &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                    &lt;span class="n"&gt;pathfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setLength&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pLen&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;contMap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;values&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;findDuplicate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;paths&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;unordered_map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;contMap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;pStr&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;paths&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pStr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="sc"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pStr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;pStr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pStr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;'('&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pStr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;')'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;pathfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="sc"&gt;'/'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;pStr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                        &lt;span class="n"&gt;cont&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pStr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cont&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;contMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                        &lt;span class="n"&gt;contMap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;cont&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                    &lt;span class="n"&gt;contMap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;cont&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pathfile&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;kv&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;contMap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;second&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;second&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>This is me, I'm a "developer" </title>
      <author> 🐤🥇 Jasper de Jager</author>
      <pubDate>Tue, 18 May 2021 09:40:23 +0000</pubDate>
      <link>https://dev.to/jmdejager/this-is-me-i-m-a-developer-ep3</link>
      <guid>https://dev.to/jmdejager/this-is-me-i-m-a-developer-ep3</guid>
      <description>&lt;h2&gt;
  &lt;a href="#this-is-me"&gt;
  &lt;/a&gt;
  This is me
&lt;/h2&gt;

&lt;p&gt;Look out 'cause here I come. I'm not scared to be seen. I make no apologies, this is me&lt;br&gt;
I'm Jasper, a 33-year-old developer from the Netherlands. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n3msyApr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41kdte5y0i1wpzyqy83r.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n3msyApr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41kdte5y0i1wpzyqy83r.jpg" alt="This is me"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Web development is my hobby, and it also happens to be the way I make a living. Learning new stuff and mostly understanding how stuff works is what makes me tick. A lot of developers are like that I guess. So why did I quote the word developer in the title?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-struggles"&gt;
  &lt;/a&gt;
  My struggles
&lt;/h2&gt;

&lt;p&gt;For a while now I have been feeling like I'm not showing my full potential and that feeling sucks. I always felt apart from the rest of the developers I've studied/worked with. Make no mistake, I can surely hold my own in a programming contest. I'm definitely a good programmer, but that's not all I am and, as I realized, not the only thing I want to be. I'm trying to break out of the standard developer role, and it is hard. Recently the company I work for was taken over by a bigger company. This can be a good thing, opportunities to grow and too finally break out of the traditional developer role. Up until now a lot changed in the company, all sorts of collaborations are starting to happen, except in the development department. I'm convinced developers can really make a difference and I think it would be a shame if they could never show their true potential because they are overlooked too easily.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-developer-stigma"&gt;
  &lt;/a&gt;
  The developer stigma
&lt;/h2&gt;

&lt;p&gt;Companies that have a development team often recognize their potential in writing code but (some?/ most?) developers can be so much more than that! I for example would love to apply my skills in other areas than just development. Invite me to a brainstorm about whatever, and I'm certain I can wow people with my ability to think outside the box and research new stuff in any area. The only problem is that developers often get overlooked. Sure I'd make mistakes when doing something I've never done (doesn't everyone) but developers can learn, and they learn fast!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#make-a-change"&gt;
  &lt;/a&gt;
  Make a change
&lt;/h2&gt;

&lt;p&gt;A lot of developers showed that applying the basic skill set of a developer in other areas works and I think we'll see a lot more of this shift in mentality in the coming years. I certainly hope this article can help people see the full potential of this kind of developer. I'm still struggling to become the developer I want to be. It is not easy to break through the developer stereotype, but I try to do what I can to change it and that's all I can do right now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#youre-the-best"&gt;
  &lt;/a&gt;
  You're the best
&lt;/h2&gt;

&lt;p&gt;Here at dev.to I feel heard. I think most of the blogging developers are a lot like me. This is the reason why I post this story here and only here. It isn't the positive story you are used from me, but I'd like to hear from all of you if you've also experienced something like this. In the meantime I'll keep moving forward to become the developer I want to be. I want to turn this into something positive and show everyone developers can do so much more than writing code!&lt;/p&gt;

&lt;p&gt;If you're reading this: thanks for hearing me out 😘&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@kevinbosc?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Kevin Bosc&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/struggle?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>healthydebate</category>
      <category>discuss</category>
      <category>devjournal</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Workflow Creation with Litmus 2.0 Beta</title>
      <author>Amit Kumar Das</author>
      <pubDate>Tue, 18 May 2021 09:24:12 +0000</pubDate>
      <link>https://dev.to/litmus-chaos/workflow-creation-with-litmus-2-0-beta-29nc</link>
      <guid>https://dev.to/litmus-chaos/workflow-creation-with-litmus-2-0-beta-29nc</guid>
      <description>&lt;p&gt;With Litmus 2.0 announced, you are no longer confined to perform Chaos Engineering with a terminal in your hand. You now have a control plane to create, schedule and analyze chaos workflows with our upgraded Litmus Portal.&lt;/p&gt;

&lt;p&gt;The new Litmus Portal makes chaos engineering fun and hassle free. With a single click, you can re-run a workflow without configuring it again. Don't want to create a new workflow from scratch, just save one of the existing workflow as a predefined template and much more. In this blog we will go through all the new features that are added to the Portal with the 2.0 update.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#before-moving-ahead-lets-know-about-litmus"&gt;
  &lt;/a&gt;
  Before moving ahead, let's know about Litmus. ❓
&lt;/h3&gt;

&lt;p&gt;Litmus is a complete framework to perform chaos engineering in a cloud-native ecosystem.&lt;br&gt;
It is a toolkit to orchastrate chaos on Kubernetes. It allows SRE to inject chaos in the environment and find the bugs and vulnerabilities in the system. Fixing these vulnerebilities will ultimately make the system resilient.&lt;/p&gt;

&lt;p&gt;Chaos experiments are hosted on &lt;a href="//hub.litmuschaos.io"&gt;ChaosHub&lt;/a&gt;. It is a public marketplace where different vendors share their chaos experiments so that their users can use them to increase the resilience of the applications in production.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#new-upgrades-with-litmus-20"&gt;
  &lt;/a&gt;
  New Upgrades with Litmus 2.0 🚀
&lt;/h1&gt;



&lt;h2&gt;
  &lt;a href="#workflow-creation"&gt;
  &lt;/a&gt;
  Workflow Creation ✍️
&lt;/h2&gt;



&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Choose a workflow&lt;/strong&gt; 🎟️&lt;/p&gt;

&lt;p&gt;With the new Litmus Portal, you can choose workflows from 4 different ways.&lt;/p&gt;

&lt;p&gt;a. &lt;strong&gt;Create a new workflow from one of the pre-defined chaos experiment.&lt;/strong&gt; With this option, you can select the pre-defined experiments that executes chaos operations on real-world applications like &lt;code&gt;sock-shop&lt;/code&gt;. Currently there are 3 pre-defined experiments available &lt;code&gt;sock-shop-chaos&lt;/code&gt;,&lt;code&gt;kube-proxy-chaos&lt;/code&gt; and the new &lt;code&gt;podtato-head-chaos&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dox_yZOu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmn2nwcrhhc6ic0te8f3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dox_yZOu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmn2nwcrhhc6ic0te8f3.png" alt="Screenshot from 2021-05-10 19-37-59"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;b. &lt;strong&gt;Create a new workflow by cloning and existing workflow.&lt;/strong&gt; With this option, you can save an existing workflow as a template from the scheduled workflows. This options saves some time if you don't want to schedule a workflow from scratch.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dgyJcjur--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fu78vfocsdz6khvqp8nl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dgyJcjur--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fu78vfocsdz6khvqp8nl.png" alt="Screenshot from 2021-05-10 19-56-20"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;c. &lt;strong&gt;Create a new workflow using experiments from MyHub.&lt;/strong&gt; With this option, you can create custom experiments from the connected MyHubs. By default , the public Chaos Hub is already installed. You can connect a MyHub with the &lt;a href="https://dev.to/amityt/custom-workflow-with-myhub-using-litmus-portal-359a"&gt;following steps&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mWz_iqjW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvcjlzg10r3rfj3vf5jk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mWz_iqjW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvcjlzg10r3rfj3vf5jk.png" alt="Screenshot from 2021-05-10 19-56-28"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;d. &lt;strong&gt;Import workflow using YAML.&lt;/strong&gt; With this option, you can upload a workflow manifest and tune it according to the use-case and schedule it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BT7DInXD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iev5m18507dyl40zmndw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BT7DInXD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iev5m18507dyl40zmndw.png" alt="Screenshot from 2021-05-10 19-56-35"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Tune Workflow&lt;/strong&gt; 🎯&lt;/p&gt;

&lt;p&gt;A lot of new changes are added in the tune workflow section, these include:&lt;/p&gt;

&lt;p&gt;a. &lt;strong&gt;Workflow Visualisation&lt;/strong&gt; 👀 - Now visualize your workflow even before scheduling it. This feature gives a breif idea about the sturcture of the workflow. You can view the experiments if they are parallel or serial.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zkVOADJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kxmahuufltbppbybcgba.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zkVOADJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kxmahuufltbppbybcgba.png" alt="Screenshot from 2021-05-10 19-57-16"&gt;&lt;/a&gt;&lt;br&gt;
b. &lt;strong&gt;Experiments Table&lt;/strong&gt; 📋 - This table give valuable information about the experiments present in the workflow. It also shows the target applications of each experiments where chaos will be injected.&lt;br&gt;
c. &lt;strong&gt;Sequencing Experiments&lt;/strong&gt; 🔧 - This is one of the major feature we added with the 2.0 update, with this you can tune the sequence of the workflow by dragging and dropping the experiment as shown below. This allows you to sequence your experiments parallel and serial manner. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R2athIPE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media3.giphy.com/media/qQvEywXjVRuz8Nj2rI/giphy.gif%3Fcid%3D790b761117e521344cc388c6ccc40a68efac4300866e0f4c%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R2athIPE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media3.giphy.com/media/qQvEywXjVRuz8Nj2rI/giphy.gif%3Fcid%3D790b761117e521344cc388c6ccc40a68efac4300866e0f4c%26rid%3Dgiphy.gif%26ct%3Dg" alt="Sequencing Experiment"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
d. &lt;strong&gt;Tune Experiments&lt;/strong&gt; 🔥 - Our prior focus with the 2.0 update was to make the experiment tuning step hassle free for the user, hence we added the Kubernetes Object integration in this step. With this you can get the cluster details like the available namespaces and the application labels according to the resourse type. This allows you to target the application to inject chaos in a much simpler way.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZnuYyex_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hug37g3nne338h7y8lsb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZnuYyex_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hug37g3nne338h7y8lsb.png" alt="Screenshot from 2021-05-10 20-09-37"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;e. &lt;strong&gt;Probes Integration&lt;/strong&gt; ⌚ - Now you can add probes directly from the portal. The probe properties are available dynamically in the portal. Select one probe and add it in your chaos engine to enhance your chaos testing.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aNAikIjQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bu02pdr745jh3yqtofm7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aNAikIjQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bu02pdr745jh3yqtofm7.png" alt="Screenshot from 2021-05-10 20-10-26"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;f. &lt;strong&gt;Reliability Score&lt;/strong&gt; 💯 - The look and feel of the reliability score page is also upgraded, it now gives a clearer idea about the weights of the expeiments.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oGxzNs0l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/63qqrnzagfoqnrol45y0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oGxzNs0l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/63qqrnzagfoqnrol45y0.png" alt="Screenshot from 2021-05-10 20-35-31"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So these were the new changes we have added in the workflow creation steps. Stay tuned, a lot of new features will be available in the coming releases. &lt;/p&gt;

&lt;p&gt;Make sure to try the Litmus Portal 2.0 and give your valuable feedback and suggestion. Don’t forget to checkout our &lt;a href="https://litmuschaos.io/"&gt;Litmus website&lt;/a&gt; and the &lt;a href="https://github.com/litmuschaos/litmus"&gt;Litmus repo&lt;/a&gt;. Do leave a star if you find it interesting. 😊&lt;/p&gt;

&lt;p&gt;Further, feel free to put forward any queries or concerns you have. I would love to address them. I would love to invite you to our slack community for keeping up to date and interacting with our community members, contributors &amp;amp; maintainers.&lt;br&gt;
To join our slack please follow the following steps!&lt;br&gt;
Step 1: Join the Kubernetes slack using the following link: &lt;a href="https://slack.k8s.io/"&gt;https://slack.k8s.io/&lt;/a&gt;&lt;br&gt;
Step 2: Join the #litmus channel on the Kubernetes slack or use this link after joining the Kubernetes slack: &lt;a href="https://slack.litmuschaos.io/"&gt;https://slack.litmuschaos.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>litmuschaos</category>
      <category>chaosengineering</category>
      <category>testing</category>
    </item>
    <item>
      <title>5 reasons why EVERY PROGRAMMER should have a BLOG!</title>
      <author>Tuomo Kankaanpää</author>
      <pubDate>Tue, 18 May 2021 09:20:41 +0000</pubDate>
      <link>https://dev.to/tumee/5-reasons-why-every-programmer-should-have-a-blog-1mh</link>
      <guid>https://dev.to/tumee/5-reasons-why-every-programmer-should-have-a-blog-1mh</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/IEV7AKtLmwI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;When you hear a word "blog" you might be thinking something like "That's so 2000, no one reads blogs anymore!".&lt;/p&gt;

&lt;p&gt;I would argue that it's not exactly accurate. If you are a programmer without your own blog, I think you should definitely start one right away!&lt;/p&gt;

&lt;p&gt;Having a blog has a bunch of benefits. In this article I will list five reasons why you should have a blog as a programmer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-a-blog-will-make-you-a-better-programmer"&gt;
  &lt;/a&gt;
  1. A blog will make you a better programmer
&lt;/h2&gt;

&lt;p&gt;When you write what you know and that way teach others, it will also make you better in the thing you write about. Because if you are teaching someone you must know your stuff.&lt;/p&gt;

&lt;p&gt;Let's say for example that you write an article about &lt;a href="https://tuomokankaanpaa.com/blog/react-fragments-what-why-how"&gt;React fragments&lt;/a&gt;. You might be familiar with them and you know how to use them.&lt;/p&gt;

&lt;p&gt;But when you have to write an article about React fragments, you need to actually understand how they work, why would you use them and how to use them.&lt;/p&gt;

&lt;p&gt;If you know all that stuff, great! Writing that article should be easy. In this case there can still be aspects that you might not have known, or use cases or properties you find out while browsing through documentation, something you would not be doing if you weren't doing a research for your article.&lt;/p&gt;

&lt;p&gt;But if you e.g. know everything about fragments except why would one use them, why are they better than wrapper divs, you must do your research and understand the why. This way you almost accidentally get better with fragments.&lt;/p&gt;

&lt;p&gt;It goes without saying that I just used React fragments as an example for this, but the same goes on any other concept that you might write about.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-you-help-others"&gt;
  &lt;/a&gt;
  2. You help others
&lt;/h2&gt;

&lt;p&gt;Since you are reading this, I assume you are a programmer. And as a programmer I am 99.9% sure that you have read blog posts. If you aren't, at least you are reading one right now!&lt;/p&gt;

&lt;p&gt;You know the feeling when you have a problem and you find an article that solves your problem right then and there. It is a great feeling!&lt;/p&gt;

&lt;p&gt;But let me tell you, even better feeling is to write an article yourself and then get feedback that it helped someone else to solve their problem or make their life easier. That is even greater feeling!&lt;/p&gt;

&lt;p&gt;I love to help others and it is just so gratifying to know that something I put out there is helping other people and possibly making someone's life even a little bit easier.&lt;/p&gt;

&lt;p&gt;We often forget when reading blog posts or watching videos, that someone took the time to write that article or shoot that video. I always try to leave a comment or like on articles &amp;amp; videos that are helpful or provide value.&lt;/p&gt;

&lt;p&gt;If you are enjoying this article, please do check out my &lt;a href="https://dev.to/newsletter"&gt;newsletter&lt;/a&gt;. It is the best way to show me that the content I put out there is appreciated.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-you-become-a-better-communicator"&gt;
  &lt;/a&gt;
  3. You become a better communicator
&lt;/h2&gt;

&lt;p&gt;When you are starting out, your articles most likely aren't that good. And this is totally fine! I read the first articles I ever wrote and they are quite terrible. Not to say that my articles now are exceptionally good, but I can see that they have at least improved over time.&lt;/p&gt;

&lt;p&gt;If you have never written articles before, it is natural that you don't know how to write articles. You didn't know how to code when you started to write your first program. And I bet that if you look at some code you wrote when starting out, you are not proud. I know I'm not proud of the code in my first programs.&lt;/p&gt;

&lt;p&gt;By constantly writing articles to your blog you improve your writing and communication skills. I would say that these skills are almost if not as important as actual programming skills.&lt;/p&gt;

&lt;p&gt;Most often as a programmer code is not all you write. You need to also be able to work in teams, write documentation and email with a client, to mention a few. All these situations will be easier for you when you are a better communicator and writer.&lt;/p&gt;

&lt;p&gt;Communication and writing skills are also something that is not limited just to your job as a programmer. They are essential skills in life in general.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-you-get-exposure"&gt;
  &lt;/a&gt;
  4. You get exposure
&lt;/h2&gt;

&lt;p&gt;Think about this scenario.&lt;/p&gt;

&lt;p&gt;You are a recruiter in an IT firm and your job is to recruit a programmer for a new project.&lt;/p&gt;

&lt;p&gt;You have two candidates.&lt;/p&gt;

&lt;p&gt;First candidate has a great CV listing all the skills that are required for the job.&lt;/p&gt;

&lt;p&gt;Second candidate has also a good CV listing all the skills that are required for the job. But on top of that, this candidate also has a blog. Quick browse through the blog shows that the candidate has also been writing articles about skills that are listed in the CV.&lt;/p&gt;

&lt;p&gt;Now think about which candidate will you choose.&lt;/p&gt;

&lt;p&gt;Most likely the second candidate. Because you actually have proof that this candidate knows the stuff he/she claims to know in their CV.&lt;/p&gt;

&lt;p&gt;So having a blog will also act as an insurance to possible future employer that you know what you claim to know.&lt;/p&gt;

&lt;p&gt;On top of that a blog can open doors that you wouldn't otherwise even know about.&lt;/p&gt;

&lt;p&gt;For example you might get job offers you otherwise would not, because people find you through your blog. Or you might get speaking gigs, if that's something you want to do, just because you put yourself out there and make it possible for people to find you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-blogging-has-low-barrier-to-entry"&gt;
  &lt;/a&gt;
  5. Blogging has low barrier to entry
&lt;/h2&gt;

&lt;p&gt;Starting a blog is quite easy. You just setup a blog with e.g. Wordpress, start typing and hit publish. If you compare it to e.g. making a Youtube video, writing an article requires significantly less work to get your content out there.&lt;/p&gt;

&lt;p&gt;While making videos is also great (&lt;a href="https://www.youtube.com/channel/UC34UXFLKqdW3cpk5CBu2Siw"&gt;I do it too&lt;/a&gt;) if you are just starting out to make programming content (= articles / videos), I think making a blog is a great way to get started because of the fact that it is easier to start. You also get quickly to the habit of producing content, without having to worry about cameras, lightning, audio, editing etc.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Important: &lt;a href="https://tuomokankaanpaa.com/blog/why-you-should-not-code-your-own-blog-when-starting-blogging"&gt;Why you should NOT code your own blog when starting out blogging&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also if you have never published anything, the idea alone about putting yourself out there, for other people to read your thoughts and possibly judge you, can be frightening.&lt;/p&gt;

&lt;p&gt;I know this because I still remember when I published my first blog post, I was so uncomfortable when I hit the publish button. I didn't tell anyone about the article and the idea of someone I know reading it just felt awkward.&lt;/p&gt;

&lt;p&gt;Over time and with practice (= writing more articles), I got over this and I no longer feel that way.&lt;/p&gt;

&lt;p&gt;I now also have a &lt;a href="https://www.youtube.com/channel/UC34UXFLKqdW3cpk5CBu2Siw"&gt;Youtube channel&lt;/a&gt; where I upload videos about web development and this is something I really like to do!&lt;/p&gt;

&lt;p&gt;I started the Youtube channel just under a year ago and if I hadn't been blogging for the past few years, I wouldn't been able to start the channel.&lt;/p&gt;

&lt;p&gt;Because if you think about making a video and talking to a camera, that's a whole another ball game compared to writing a blog post. I could never have been able to create a video where I talk to a camera and on top of that publish it, without having some practice first.&lt;/p&gt;

&lt;p&gt;All the years that I have been writing articles and putting myself out there also gave me the courage to start making videos.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final thoughts
&lt;/h2&gt;

&lt;p&gt;I hope you found this article helpful. I tried to give you insight that I have learned over the years and hopefully you got some value out of it.&lt;/p&gt;

&lt;p&gt;If you are thinking of starting your own blog, read this article next: &lt;a href="https://tuomokankaanpaa.com/blog/why-you-should-not-code-your-own-blog-when-starting-blogging"&gt;Why you should NOT code your own blog when starting out blogging&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;

</description>
      <category>blogging</category>
      <category>programming</category>
      <category>webdev</category>
      <category>career</category>
    </item>
    <item>
      <title>Naming things</title>
      <author>Robert Basic</author>
      <pubDate>Tue, 18 May 2021 08:38:56 +0000</pubDate>
      <link>https://dev.to/trikoder/naming-things-54c1</link>
      <guid>https://dev.to/trikoder/naming-things-54c1</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SZAwjUdX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1024/1%2AksHZffNufLujRSuWpQu7Cw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SZAwjUdX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1024/1%2AksHZffNufLujRSuWpQu7Cw.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we develop software, we name things. Things like variables, functions, methods, classes, interfaces, exceptions. Also database, database tables, columns in those tables. We name files our software uses or creates: configuration files, log files, lock files, temporary files… The list goes on.&lt;/p&gt;

&lt;p&gt;And yet, how much thought do we put in in naming these “things”? Why should we care?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-is-naming-important"&gt;
  &lt;/a&gt;
  Why is naming important?
&lt;/h3&gt;

&lt;p&gt;When we develop software, we make approximations of problems from the real world. We take those problems and we model them in software. These models help us solve the problems, but they are never perfect. They can’t be, because we lose information in the process of “translating” the real world problem into code. That’s why it’s important for us to preserve, as much as we can, the names of the concepts we are translating into code.&lt;/p&gt;

&lt;p&gt;Good naming is important for the future programmer who will read the code. That future programmer can be anybody, with experiences ranging from none to over 20 years. It can as well be us, the authors of the original code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#context-matters"&gt;
  &lt;/a&gt;
  Context matters
&lt;/h3&gt;

&lt;p&gt;A big problem with naming things is that, when we are naming, we have all the context around that name built up. At that moment, we know why we are choosing that specific name. We’re also writing other code around that name, which gives us additional information and, well, justification, for why we think it is a good name.&lt;/p&gt;

&lt;p&gt;But if we give that code to another programmer, or even if we ourselves revisit it after some time, most of the context that we had when we were writing that code is gone. The name might not be as good anymore like when we were coming up with it.&lt;/p&gt;

&lt;p&gt;For that reason we have to consider what information will be available when reading the code, how the lack of the context we take for granted when writing, will affect the meaning of the name we chose.&lt;/p&gt;

&lt;p&gt;When we’re coming up with names for things in our code base, it’s helpful to “switch” our mindset from writing code to reading code. Take a look at the names with this “reader” mindset and consider is the name giving answers to the whys, whats, and hows, or is it just creating an even longer list of questions?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-will-we-use-it"&gt;
  &lt;/a&gt;
  Where will we use it?
&lt;/h3&gt;

&lt;p&gt;It is also important to consider where in our code base will we use the thing we are naming?&lt;/p&gt;

&lt;p&gt;Imagine we’re writing a repository to find a list of products from the database. We create an interface like this for it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/** [@return](http://twitter.com/return) Product[] */ 
ProductRepository::find($filter): array
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Looks okay, makes sense at the moment of writing this code. Later on we, our someone else, writes some other code that uses our repository of products:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$products = $this-&amp;gt;repository-&amp;gt;find($filter);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Still when we write this code, we know what it does. But lets switch our mindset to “reading” code. There’s at least three different questions that stand out: what repository are we working with, what are we finding, and by what criteria? The &lt;code&gt;$products&lt;/code&gt; variable can give us a hint, a suggestion, but we need to double check to be sure.&lt;/p&gt;

&lt;p&gt;A better line would be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$activeProductsInTimePeriod = $this-&amp;gt;productRepository-&amp;gt;find($filterActiveProductsInTimePeriod);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we don’t have to guess and look at other code that we’re finding active products in a given time period. Someone will argue that the names are too long, or that the InTimePeriod appears twice in one line. Yes, but it appears twice only in this one line, we don’t know where else will be the $filterActiveProductsInTimePeriod or the $activeProductsInTimePeriod variables be used. In every other line they appear, these “long” names will carry enough context and information to the reader of the code that they will have no, or very little, questions about our code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-the-names-searchable"&gt;
  &lt;/a&gt;
  Make the names searchable
&lt;/h3&gt;

&lt;p&gt;When naming things, we also have to consider that at some point we will want to search for that name across the code base. How unique is the name, how easy it is to find it among other similarly named things? Going back to our product repository example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$products = $this-&amp;gt;repository-&amp;gt;find($filter);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All four names are hard to search for: products, repository, find, filter. They are not unique in any way.&lt;/p&gt;

&lt;p&gt;If we look at the example with the improved namings:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$activeProductsInTimePeriod = $this-&amp;gt;productRepository-&amp;gt;find($filterActiveProductsInTimePeriod);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here only the find method sticks out as not unique enough, so we should maybe look for a name that is a easier to search for.&lt;/p&gt;

&lt;p&gt;There’s much more to naming things, and to naming them well. For the end I want to leave you with a good presentation on naming things by Peter Hilton: &lt;a href="https://www.youtube.com/watch?v=SctS56YQ6fg"&gt;https://www.youtube.com/watch?v=SctS56YQ6fg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What’s your biggest challenge in naming things?&lt;/p&gt;




</description>
      <category>naming</category>
    </item>
    <item>
      <title>Why do you need to know about the JavaScript Array at() method?</title>
      <author>Tapas Adhikary</author>
      <pubDate>Tue, 18 May 2021 08:22:45 +0000</pubDate>
      <link>https://dev.to/atapas/why-do-you-need-to-know-about-the-javascript-array-at-method-31f9</link>
      <guid>https://dev.to/atapas/why-do-you-need-to-know-about-the-javascript-array-at-method-31f9</guid>
      <description>&lt;p&gt;The &lt;code&gt;array&lt;/code&gt; in JavaScript is a collection of elements. The most important use of the array data structure is storing data and accessing it whenever needed. Arrays have methods to insert, remove, retrieve, traverse, and mutate elements. Today, we will learn about a newly proposed method &lt;code&gt;at(index)&lt;/code&gt; and understand how it will help us.&lt;/p&gt;

&lt;p&gt;I love junk food. Let's create an array with the junk food I am in love with,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;junkFoodILove&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;🥖&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;🍔&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;🍟&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;🍕&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;🌭&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;🥪&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;🌮&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;🍿&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;How would you access the pizza(🍕) element from the above array? The straightforward way to use the &lt;code&gt;square bracket&lt;/code&gt; syntax with the index.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;junkFoodILove&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// 🍕&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;There is one small problem, though. With this approach, we can only traverse and pick elements from the beginning of the array. Here is the way to access the last element from the above array,&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;last&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;junkFoodILove&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;junkFoodILove&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// 🍿&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Wouldn't it be flexible if we have a way to traverse an array &lt;code&gt;from the end(backward)&lt;/code&gt; too?&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#meet-the-raw-atindex-endraw-method"&gt;
  &lt;/a&gt;
  Meet the &lt;code&gt;at(index)&lt;/code&gt; Method
&lt;/h1&gt;

&lt;p&gt;The &lt;code&gt;at(index)&lt;/code&gt; method takes an integer(index) as an argument and returns the element at that index. It is similar to the &lt;code&gt;square bracket&lt;/code&gt; syntax we have seen above but with a few differences.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;at(index)&lt;/code&gt; method accepts both positive and negative numbers as an index.&lt;/li&gt;
&lt;li&gt;The negative index count back from the array whereas, the positive index count from the beginning as usual.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Like the &lt;code&gt;square bracket&lt;/code&gt; method, the &lt;code&gt;at(index)&lt;/code&gt; method returns &lt;code&gt;undefined&lt;/code&gt; when the index is not found.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;junkFoodILove&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;🥖&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;🍔&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;🍟&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;🍕&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;🌭&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;🥪&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;🌮&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;🍿&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;junkFoodILove&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 🥖&lt;/span&gt;
&lt;span class="nx"&gt;junkFoodILove&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 🍕&lt;/span&gt;
&lt;span class="nx"&gt;junkFoodILove&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 🍿&lt;/span&gt;
&lt;span class="nx"&gt;junkFoodILove&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 🍕&lt;/span&gt;
&lt;span class="nx"&gt;junkFoodILove&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 🥖&lt;/span&gt;
&lt;span class="nx"&gt;junkFoodILove&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here is a fun demo using the &lt;code&gt;at(index)&lt;/code&gt; method. Please notice the output when we change the index number.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3d56G1Es--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621250026349/9NgG5M4Fh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3d56G1Es--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621250026349/9NgG5M4Fh.gif" alt="Array at method demo.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Do you want to try it out? Here is the link to access the demo: &lt;a href="https://js-array-at-method.netlify.app/"&gt;https://js-array-at-method.netlify.app/&lt;/a&gt;. So please give it a try.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;
  &lt;a href="#the-raw-atindex-endraw-method-is-brand-new"&gt;
  &lt;/a&gt;
  The &lt;code&gt;at(index)&lt;/code&gt; method is Brand New
&lt;/h1&gt;

&lt;p&gt;The &lt;code&gt;at(index)&lt;/code&gt; array method is a &lt;a href="https://tc39.es/proposal-relative-indexing-method/#sec-array-prototype-additions"&gt;proposal at this moment&lt;/a&gt;. It means the support for this method is not yet added to the JavaScript programming language. Hence none of the browsers have added any support for the &lt;code&gt;at(index)&lt;/code&gt; method yet. &lt;/p&gt;

&lt;p&gt;Don't be disappointed. It may get added soon. But until that happens, we can use &lt;a href="https://github.com/es-shims/Array.prototype.at"&gt;this polyfill&lt;/a&gt; to use the &lt;code&gt;at(index)&lt;/code&gt; method in our code. That's all for now. Before we go, here is the &lt;strong&gt;GitHub repository&lt;/strong&gt; to find the source code of the demo we have seen above. If you find it helpful, please don't forget to give a star(⭐).&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/atapas"&gt;
        atapas
      &lt;/a&gt; / &lt;a href="https://github.com/atapas/js-array-at-method"&gt;
        js-array-at-method
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Project to demonstrate the usages of the JavaScript Array at(index) method.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
js-array-at-method&lt;/h1&gt;
&lt;p&gt;This repository is to provide examples(or demo) of the JavaScript array &lt;code&gt;at(index)&lt;/code&gt; method.&lt;/p&gt;
&lt;h1&gt;
How to Run it Locally?&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Clone the project.&lt;/li&gt;
&lt;li&gt;Change the directory to the cloned directory.&lt;/li&gt;
&lt;li&gt;Install dependencies using &lt;code&gt;yarn install&lt;/code&gt; command.&lt;/li&gt;
&lt;li&gt;Run the demo using &lt;code&gt;yarn start&lt;/code&gt; command.&lt;/li&gt;
&lt;li&gt;Now, you can access the demo using &lt;a href="http://localhost:1234" rel="nofollow"&gt;http://localhost:1234&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
Demo&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/aab384bcd814b52157975f07bcc6fcd6959db16673af68a084dc81d397187dab/68747470733a2f2f63646e2e686173686e6f64652e636f6d2f7265732f686173686e6f64652f696d6167652f75706c6f61642f76313632313235303032363334392f394e6747354d3446682e676966"&gt;&lt;img src="https://camo.githubusercontent.com/aab384bcd814b52157975f07bcc6fcd6959db16673af68a084dc81d397187dab/68747470733a2f2f63646e2e686173686e6f64652e636f6d2f7265732f686173686e6f64652f696d6167652f75706c6f61642f76313632313235303032363334392f394e6747354d3446682e676966" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;✋ Hey, you can also play around with it from here: &lt;a href="https://js-array-at-method.netlify.app/" rel="nofollow"&gt;https://js-array-at-method.netlify.app/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://app.netlify.com/sites/js-array-at-method/deploys" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/be9bae83907805c74566d38b5f7b6522aa7e8eb678c1cb93981e8ea1cb74049e/68747470733a2f2f6170692e6e65746c6966792e636f6d2f6170692f76312f6261646765732f63343566666136622d373263392d346138342d393666322d6163306261393239353933312f6465706c6f792d737461747573" alt="Netlify Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Liked it?&lt;/h1&gt;
&lt;p&gt;If you find it helpful, please give the repository a star(⭐).&lt;/p&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/atapas/js-array-at-method"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;br&gt;
Please let me know if you find this post helpful. Let's connect. You can follow me on &lt;a href="https://twitter.com/tapasadhikary"&gt;Twitter(@tapasadhikary)&lt;/a&gt;. Also, feel free to check my side-projects on &lt;a href="https://github.com/atapas"&gt;GitHub(atapas)&lt;/a&gt;.

&lt;p&gt;You may also like,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.greenroots.info/5-useful-tips-about-the-javascript-array-sort-method-ckfs2cifq00eju9s17dfy3jq8"&gt;5 valuable tips about the JavaScript array sort method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.greenroots.info/why-do-you-need-to-know-about-array-like-objects-ckgsynazh07er06s18ppn32n0"&gt;Why do you need to know about Array-like Objects?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.greenroots.info/build-your-javascript-muscles-with-map-reduce-filter-and-other-array-iterators-cjyo22miw000xzss1ydfqveib"&gt;Build your JavaScript Muscles with map, reduce, filter, and other array iterators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.greenroots.info/ways-to-empty-an-array-in-javascript-and-the-consequences-cjwt45q9d002h2fs1kz5a77a2"&gt;Ways to Empty an Array in JavaScript and the Consequences&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>tips</category>
    </item>
    <item>
      <title>How to upload and store images in mongoDB database ?</title>
      <author>Jahangeer</author>
      <pubDate>Tue, 18 May 2021 07:19:25 +0000</pubDate>
      <link>https://dev.to/jahangeer/how-to-upload-and-store-images-in-mongodb-database-c3f</link>
      <guid>https://dev.to/jahangeer/how-to-upload-and-store-images-in-mongodb-database-c3f</guid>
      <description>&lt;p&gt;Hi guys, today we will learn how to upload and store image mongoDB database. It is not recommended in real world projects for storing media files in database. So why do we need to learn, because we are developers 😞 . Just kidding ...&lt;/p&gt;

&lt;p&gt;So let's start coding. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/XCRUzPi0X0Q"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;a href="https://github.com/sk-Jahangeer/media-upload-node-mongo"&gt;Project Github link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;App Overview :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Project Structure&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OIG0G8HN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8vvgx7i3w6ryjw5y94fq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OIG0G8HN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8vvgx7i3w6ryjw5y94fq.png" alt="project structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Following table shows the overview of Rest APIs that be exported: &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Methods&lt;/th&gt;
&lt;th&gt;Urls&lt;/th&gt;
&lt;th&gt;Actions&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/file/upload&lt;/td&gt;
&lt;td&gt;upload image to database&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/file/:filename&lt;/td&gt;
&lt;td&gt;stream image&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DELETE&lt;/td&gt;
&lt;td&gt;/file/:filename&lt;/td&gt;
&lt;td&gt;Delete image from database&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Create Node.js App&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;mkdir&lt;/span&gt; &lt;span class="nx"&gt;media&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;upload&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;mongo&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;media&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;upload&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;mongo&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;yes&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="nx"&gt;multer&lt;/span&gt; &lt;span class="nx"&gt;multer&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;gridfs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;storage&lt;/span&gt; &lt;span class="nx"&gt;gridfs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Express&lt;/strong&gt; : Express is minimal and flexible Node.js web applicaton framework.&lt;br&gt;
&lt;strong&gt;Mongoose&lt;/strong&gt; : Mongoose is an Object Data Modeling (ODM) library for MongoDB and Node.js.&lt;br&gt;
&lt;strong&gt;Dotenv&lt;/strong&gt; : It loads environment variables from a .env file.&lt;br&gt;
&lt;strong&gt;Multer&lt;/strong&gt; : Multer is node.js middleware for handling multipart/form-data, which is primarily used for uploading files.&lt;br&gt;
&lt;strong&gt;multer-gridfs-storage&lt;/strong&gt; : It is storage engine for multer to store uploaded files to directly to mongoDB.&lt;br&gt;
&lt;strong&gt;gridfs-stream&lt;/strong&gt; : It provides more rebus and easier to use streams.&lt;/p&gt;

&lt;p&gt;The package.json look like :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"media-upload-node-mongo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"main"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"index.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Error: no test specified&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; exit 1"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"keywords"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"license"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ISC"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"dotenv"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^9.0.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"express"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.17.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"gridfs-stream"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.1.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"mongoose"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^5.12.9"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"multer"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.4.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"multer-gridfs-storage"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.2.0"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;create index.js file in root folder&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setup Express Web Server&lt;/strong&gt;&lt;br&gt;
In root folder, create index.js file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Listening on port &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;...`&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Configure Environment Variables&lt;/strong&gt;&lt;br&gt;
In root folder, create .env file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;DB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mongodb://localhost/image-upload&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Configure MongoDB Database&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;connectionParams&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;useCreateIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;useUnifiedTopology&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;connectionParams&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;connected to database&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;could not connect to database&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;import db.js in index.js and call it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./db&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Listening on port &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;...`&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Configure Upload Middleware&lt;/strong&gt;&lt;br&gt;
In root folder create middleware folder and inside that folder create upload.js file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;multer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;multer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;GridFsStorage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;multer-gridfs-storage&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;storage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;GridFsStorage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;useUnifiedTopology&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;match&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;image/png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;image/jpeg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mimetype&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="s2"&gt;-any-name-&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;originalname&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;bucketName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;photos&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="s2"&gt;-any-name-&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;originalname&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;multer&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;storage&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;what we have done here :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When user send a image we check it's a valid image type or not.&lt;/li&gt;
&lt;li&gt;We save image in database and return it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Define The Routes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Upload Route&lt;/strong&gt; :&lt;br&gt;
In the root folder create routes folder and inside that folder create upload.js file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;upload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../middleware/upload&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/upload&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;upload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;single&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;file&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;you must select a file.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;imgUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`http://localhost:8080/file/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;imgUrl&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;import upload.js routes in index.js use it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;upload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./routes/upload&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/file&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;upload&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Listening on port &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;...`&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Image Stream and Delete Routes&lt;/strong&gt; :&lt;br&gt;
In index.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;upload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./routes/upload&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Grid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gridfs-stream&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./db&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;gfs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;gfs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mongo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;gfs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;photos&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/file&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;upload&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// media routes&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/file/:filename&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;gfs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOne&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;readStream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;gfs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createReadStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;readStream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;not found&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/file/:filename&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;gfs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;deleteOne&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;success&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;An error occured.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Listening on port &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;...`&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it test APIs in postman.&lt;br&gt;
If you found any mistakes or making it better, let me know in comment. I hope you have learned something.&lt;/p&gt;

</description>
      <category>node</category>
      <category>mongodb</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
