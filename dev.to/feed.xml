<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to control the quality of your software product?</title>
      <author>UppLabs</author>
      <pubDate>Wed, 09 Jun 2021 12:48:10 +0000</pubDate>
      <link>https://dev.to/upplabs/how-to-control-the-quality-of-your-software-product-425m</link>
      <guid>https://dev.to/upplabs/how-to-control-the-quality-of-your-software-product-425m</guid>
      <description>&lt;p&gt;How to control the quality of your software product? Quality is one of the most important features that applies not only to the product but to every stage of its delivery. If you want to create a successful product, you have to be professional in everything you do. Testing the software product is an important part of development, because even minor errors can affect the effectiveness and success of a whole project. &lt;/p&gt;

&lt;p&gt;Poor quality assurance can lead to the main causes of software startup failures, so the purpose of executing quality assurance tests is to avoid the delivery of poor quality products. In this article, we are going to share with you our ideas for quality measurements.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quality-characteristics"&gt;
  &lt;/a&gt;
  QUALITY CHARACTERISTICS
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Functionality&lt;/strong&gt; – is determined by the ability of the software to solve problems that correspond to the fixed and anticipated needs of the user under the given conditions of software. Ths characteristic ensures that the software operates correctly and accurately, is interoperable, meets industry standards, and is protected from unauthorized access.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Reliability&lt;/strong&gt; – the ability of software to perform the required tasks under specified conditions for a specified period of time or a specified number of operations. The attributes of this characteristic are the completeness and integrity of the entire system, the ability to independently and correctly recover from operational failures, and resiliency.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Usability&lt;/strong&gt; is the user’s ability to easily understand, study, use the software.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Efficiency&lt;/strong&gt; is the ability of the software to provide the required level of performance in accordance with the allocated resources, time and other specified conditions.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Maintainability&lt;/strong&gt; provides the ease to analyze and test the software, change and fix defects, meet the new requirements, facilitate further maintenance, and to adapt to the existing environment.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Portability&lt;/strong&gt; characterizes software in terms of ease of portability from one environment (software/hardware) to another.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#quality-measurements"&gt;
  &lt;/a&gt;
  QUALITY MEASUREMENTS
&lt;/h3&gt;

&lt;p&gt;The introduction and use of metrics is essential for improving control over the development process, and in particular over the testing process. If we choose the Bug/Defect Metrics, there are following types:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open/Closed Bugs (the ratio of the number of open bugs to closed (corrected and rechecked)&lt;/li&gt;
&lt;li&gt;Reopened/Closed Bugs (the ratio of the number of reopened bugs to closed (fixed and rechecked)&lt;/li&gt;
&lt;li&gt;Rejected/Opened Bugs (the ratio of the number of rejected bugs to open)&lt;/li&gt;
&lt;li&gt;Bugs by Severity&lt;/li&gt;
&lt;li&gt;Bugs by Priority&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Before delivering a software product, we need to measure its quality to ensure that it is bug-free. The bugs need to be reported per month on all possible environments (Staging, Development, Production) in components. The goal is to minimize the number of bugs on the production on a monthly basis reviews. In case of bugs, the QA needs to meet and find out the reason to fix the problems. The team can use the Jira tool and create the dashboard gadget “Filter Results.”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_ovlzQ6p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0b8t4yg1e4pmh7p5a4iw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_ovlzQ6p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0b8t4yg1e4pmh7p5a4iw.png" alt="QA: Bugs reported on staging"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The bugs can be reported per feature or epic. The goal is to maximize the quality of every feature/epic on the weekly basis. If needed, this can be followed by the discussion on the code quality lessons learned session with the development team and tech lead. &lt;/p&gt;

&lt;p&gt;The open or resolved bugs per sprint have the goal to minimize the number of open bugs and manage the backlog efficiently on a weekly basis. If needed, the team can discuss the code quality lessons learned session and create the Jira Dashboard gadget “Created vs. Resolved Chart.”&lt;/p&gt;

&lt;p&gt;Backlog Management Index (BMI) is used to manage the backlog of open and unresolved problems.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OB6RtbLv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/np6vuz8d7s9gotm1rccj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OB6RtbLv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/np6vuz8d7s9gotm1rccj.png" alt="BMI index"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If BMI is larger than 100, it means the backlog is reduced. If BMI is less than 100, then the backlog increased.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ErU5wH4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q7tevtm01mre7gkyyiz2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ErU5wH4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q7tevtm01mre7gkyyiz2.png" alt="Created vs Resolved Chart: OD bugs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The average time in status and average number of times in the status are used to identify bottlenecks and improve the development process on a daily basis. The team has to discuss the average time with the responsible for blocked items to unblock the team, so everyone can be updated of the process. For these purposes, we can use the Jira dashboard gadgets “Average Number of Times in Status” and “Average Time in Status.”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vaDpOjUU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d4ib8aquvf60i2eo0ipw.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vaDpOjUU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d4ib8aquvf60i2eo0ipw.jpeg" alt="Average Time in Status"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quality-requirements"&gt;
  &lt;/a&gt;
  QUALITY REQUIREMENTS
&lt;/h3&gt;

&lt;p&gt;Standards should be applied when writing test plans, specifications, user interfaces, documentation, training materials, and other products. A shared project’s vision can help ensure its quality. But along with the standards, it is necessary to determine the situations of their use and develop guidelines and requirements for adopting the standards to the needs of the team and the product, if necessary. Any standard you adopt should help you do your best job.&lt;/p&gt;

&lt;p&gt;Most of the requirements could be used directly from the technical reports and all of them had to for the project’s definitions. Bugs reported as a result of poor requirements have to minimize the number of bugs caused by poor requirements or the lack of them. The team usually can perform such reports per sprint after the demo. If needed, the PM has to outline action items with the team and feature owner to avoid poor/lack of requirements in the future.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pull-request"&gt;
  &lt;/a&gt;
  PULL REQUEST
&lt;/h3&gt;

&lt;p&gt;The quality metric can give you an idea of the amount of time (usually in days) needed for the pull requests to be merged or closed. You can calculate the lead time of all repositories and get an understanding of the team dynamics.&lt;/p&gt;

&lt;p&gt;To get this number, it’s important to track every pull request and save the date and time for each pull request when it’s opened and it’s merged. For the quality measurement we need to calculate:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Pull requests that did not pass the test suite&lt;/li&gt;
&lt;li&gt;Pull requests that broke the build&lt;/li&gt;
&lt;li&gt;The number of rejected and merged requests&lt;/li&gt;
&lt;li&gt;The number of pull requests comments&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#preventative-measures"&gt;
  &lt;/a&gt;
  PREVENTATIVE MEASURES
&lt;/h3&gt;

&lt;p&gt;In a management review meeting, the quality manager gives valuation of the product’s quality.  The information should correspond to satisfaction surveys. In order to prevent a potential problem, the management team chooses the responsible parties to review code reviews and implement actions that will help to analyze the data. Among the preventative measure we can highlight:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Internal code reviews&lt;/em&gt;&lt;/strong&gt;
performed by one developer and Tech Lead on a daily basis, if there is a ready task. If needed, the responsible developer should provide code improvement. If it is a common issue, it should be discussed in the Lessons learned session. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Code quality lessons learned sessions&lt;/em&gt;&lt;/strong&gt;
to review the feedback in PRs per sprint to raise team awareness, improve code quality and avoid the same mistakes in future. If needed, the responsible developer should provide code improvements.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Story opening sessions&lt;/em&gt;&lt;/strong&gt;
to confirm technical approach and prevent from rework in future performed by developers and Tech lead with the Client’s developers. If needed,the team should research the suitable solutions and review the areas for related components.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To analyse the preventative measures, we can use such trusted best practices, as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lessons Learned, Post Project Analysis – is one of the most powerful tools for proactive improving the quality of your work.&lt;/li&gt;
&lt;li&gt;The retrospective – is a separately allocated period of time in order to study the experience gained and ask yourself the following questions: “What worked for this product and how to do the same in the future?” and “What went wrong for this product and how to avoid this?”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Despite the fact that retrospectives are classified as Best Practices, they are rarely used, because it is difficult to gather an entire team: retrospectives take place at the end of project development. Most of the team members are already working on other projects, and those who remain are busy releasing the project or supporting it.&lt;/p&gt;

&lt;p&gt;TYPES OF QUALITY ENGINEERING AND TESTING SERVICES WE PROVIDE IN UPPLABS&lt;/p&gt;

&lt;p&gt;We deal with quality engineering and testing processes covering all stages starting with test management and automation to such categories of testing software services as: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Technical Consulting&lt;/li&gt;
&lt;li&gt;Automation Testing&lt;/li&gt;
&lt;li&gt;Performance Testing&lt;/li&gt;
&lt;li&gt;Security QA&lt;/li&gt;
&lt;li&gt;Regression Testing&lt;/li&gt;
&lt;li&gt;Smoke Testing&lt;/li&gt;
&lt;li&gt;Functional Testing&lt;/li&gt;
&lt;li&gt;Automation Services for Web/Mobile Apps&lt;/li&gt;
&lt;li&gt;API Testing&lt;/li&gt;
&lt;li&gt;Integration and unit testing&lt;/li&gt;
&lt;li&gt;Review of product automation framework and process&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thanks for reading! &lt;/p&gt;

</description>
      <category>qa</category>
      <category>testing</category>
      <category>pullrequest</category>
      <category>programming</category>
    </item>
    <item>
      <title>Getting Started with JavaScript Design Patterns</title>
      <author>Coderslang: Become a Software Engineer</author>
      <pubDate>Wed, 09 Jun 2021 12:47:22 +0000</pubDate>
      <link>https://dev.to/coderslang/getting-started-with-javascript-design-patterns-h67</link>
      <guid>https://dev.to/coderslang/getting-started-with-javascript-design-patterns-h67</guid>
      <description>&lt;p&gt;Design patterns are blueprint solutions that you use to solve common programming problems swiftly and elegantly.&lt;/p&gt;

&lt;p&gt;Everything began in 1994, when four computer scientists Erich Gamma, Richard Helm, Ralph Johnson, and John Vlissides, published an iconic book "&lt;strong&gt;Design Patterns: Elements of Reusable Object-Oriented Software&lt;/strong&gt;".&lt;/p&gt;

&lt;p&gt;The content in the book speaks of ways of solving common, specific problems that appear continuously in the software development world. It became a major success, and the four authors became known as the "&lt;strong&gt;Gang of Four&lt;/strong&gt;" or "&lt;strong&gt;GoF&lt;/strong&gt;".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-design-patterns-are-important"&gt;
  &lt;/a&gt;
  Why design patterns are important
&lt;/h2&gt;

&lt;p&gt;How often do you feel stuck when getting from idea to implementation?&lt;/p&gt;

&lt;p&gt;Learning and understanding design patterns play a pivotal role in catalyzing your programming problem-solving skills. It ramps up your efficiency as you don't have to reinvent the wheel every time you get a new coding task.&lt;/p&gt;

&lt;p&gt;The trick is to identify these common problems as early as the start of the design phase of software development. Then you can use the appropriate design patterns to solving those problems. And voila, you've made design patterns of use to you, but most importantly, to progress through your difficulties with already accepted, widely used, and proven best practices.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#common-problems"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Common Problems&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;A good software application must be modular, extensible, or flexible for changes instead of immobility, not rigid or fragile.&lt;/p&gt;

&lt;p&gt;As programmers or architects, we do realize that software requirements are susceptible to changes. They tend to eventually and consistently evolve in a way that none of us can anticipate.&lt;/p&gt;

&lt;p&gt;Hence, design is the first most crucial step towards building an elegant solution.&lt;/p&gt;

&lt;p&gt;As a result, we should not introduce any new bugs or different maintenance problems. It's essential to keep our focus and to try to solve one problem at a time. Changing one part of the code or design should not break any other parts.&lt;/p&gt;

&lt;p&gt;Design patterns can come in handy here. Although they don't solve all of the design problems, you won't get a code that you can copy-paste blindly, but the design patterns can certainly help support you in developing a scheme to approach their issues at hand.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#design-patterns-for-javascript"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Design Patterns for JavaScript&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The "Gang of Four" referenced Design Patterns in their book with object-oriented programming languages, speaking of classes, objects, and interfaces.&lt;/p&gt;

&lt;p&gt;While it's been natural for Java since its creation, most of the classic design patterns became available in JS only with the advent of ES6. It introduced classes and other object-oriented features to JavaScript, and now you can elegantly implement most design patterns in JS.&lt;/p&gt;

&lt;p&gt;JavaScript has several ways of creating objects, implementing modules, supporting lightweight interfaces; hence, with complex server-side javascript applications in the picture, design patterns are expected to provide multiple ways to improvise and maintain the application design.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#three-groups-of-design-patterns-in-programming"&gt;
  &lt;/a&gt;
  Three groups of Design Patterns in programming
&lt;/h2&gt;

&lt;p&gt;The book by the "&lt;strong&gt;Gang of Four&lt;/strong&gt;" introduced 23 design patterns broadly classified into three groups — Creational, Structural and Behavioral, according to their purpose.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Creational&lt;/strong&gt; — oriented towards the creation of objects.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Structural&lt;/strong&gt; — dealing with the composition of classes or objects.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Behavioral&lt;/strong&gt; — concerned with interaction among classes and objects and segregating individual responsibilities.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#creational-design-patterns"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Creational Design Patterns&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;They deal with the techniques for object creation. In Javascript, we have multiple ways of creating an object. We can adapt the common design patterns to reduce the complexities of object creation, like &lt;strong&gt;Factory&lt;/strong&gt;, &lt;strong&gt;Constructor&lt;/strong&gt;, &lt;strong&gt;Builder&lt;/strong&gt;, &lt;strong&gt;Singleton.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#structural-design-patterns"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Structural Design Patterns&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;These design patterns deal with techniques for establishing relationships among objects and object composition. They aid in adding new functionalities to applications without modifying the unrelated parts of the application. Commonly used Structural Design Patterns are &lt;strong&gt;Bridge&lt;/strong&gt;, &lt;strong&gt;Decorator&lt;/strong&gt;, &lt;strong&gt;Adapter&lt;/strong&gt;, and &lt;strong&gt;Facade.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#behavioral-design-patterns"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Behavioral Design Patterns&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;These design patterns provide techniques to communicate with multiple unrelated objects optimally, thus ensuring segregated responsibilities of involved objects. Common types of Behavioral Design patterns are &lt;strong&gt;Strategy&lt;/strong&gt;, &lt;strong&gt;Observer&lt;/strong&gt;, and &lt;strong&gt;Chain of Responsibility&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#everyday-examples-of-design-patterns"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Everyday Examples of Design Patterns&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Instead of directly delving into the jargon and technical implementations of design patterns, let's take a bird view of them relative to our everyday life.&lt;/p&gt;

&lt;p&gt;A design pattern is a blueprint to solving a common programming problem. You can look up various scenarios where design patterns have aided in solving various everyday issues.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To make a variety of breakfasts quickly, buy a multipurpose OTG - &lt;strong&gt;Creational&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;To wake up for an early day, use an alarm - &lt;strong&gt;Behavioral&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;To cross a river, build a bridge - &lt;strong&gt;Structural&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As a student, you've reused multiple formulae to solve your math problems. If asked to find 20% of a large number, say 645395583, using multiplication and division to do it one after another is probably not a great idea. It works, no doubt, but at the cost of time, memory and energy. Instead, dividing the number by five is a better approach.&lt;/p&gt;

&lt;p&gt;Once you are familiar with better and more accessible alternatives of these approaches to your problems, you tend to use them to solve any problem wherever this fits. For example, when you are at a restaurant having to leave your server a 20% tip. Hence, this is the repeated reuse of a pattern.&lt;/p&gt;

&lt;p&gt;Imagine having to plug your phone charger into a socket in a different country, only to realize it doesn't fit. What would you do?&lt;/p&gt;

&lt;p&gt;Would you buy a new phone, or would you run to a local store, pick up a power adapter that allows an electrical plug from one country to fit into an electrical appliance in another country?&lt;/p&gt;

&lt;p&gt;Design patterns, when used correctly for the right scenarios, act as adapters in your projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#become-a-better-developer"&gt;
  &lt;/a&gt;
  Become a better developer
&lt;/h3&gt;

&lt;p&gt;Design Patterns are not tied to a particular programming language. If you're beginning to learn to code, understanding the language constructs along with design patterns could train your mind to foresee potential problems with your design.&lt;/p&gt;

&lt;p&gt;Consider working on a software development project. As a programmer, you're not entitled to just coding. Clean code, clean design, and extensibility make your code easy to read, easy to understand, and, most importantly, easy to maintain.&lt;/p&gt;

&lt;p&gt;Imagine writing the same piece of code in multiple places. Once you start evolving as a programmer, you'll learn how to reuse code, use abstractions, hide complexities wherever possible, and decouple critically performing code pieces. With practice comes perfection.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-should-you-learn-the-design-pattens"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Why should you learn the Design Pattens?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Knowledge of Design patterns is essential to manipulate your brain to start thinking to improve your coding and design skills. With poorly designed projects, maintainability becomes a nightmare. The result is any minor changes to the project may prove costly in terms of time, may lead to either complicated implementations or easy "fixes".&lt;/p&gt;

&lt;p&gt;Now, let's dive into our first &lt;a href="https://learn.coderslang.com/0076-javascript-design-patterns-builder/"&gt;JavaScript Design Pattern - Builder&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can also get my &lt;a href="https://learn.coderslang.com/free-ebooks/"&gt;free e-book&lt;/a&gt; to prepare for the technical interview or start to &lt;a href="https://js.coderslang.com"&gt;Learn Full-Stack JavaScript&lt;/a&gt;&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Jetpack Compose Desktop rendering performances</title>
      <author>Gaetan Zoritchak</author>
      <pubDate>Wed, 09 Jun 2021 12:40:26 +0000</pubDate>
      <link>https://dev.to/gz_k/jetpack-compose-desktop-rendering-performances-4992</link>
      <guid>https://dev.to/gz_k/jetpack-compose-desktop-rendering-performances-4992</guid>
      <description>&lt;p&gt;As Jetpack Compose is gaining traction, we plan to offer a specific implementation for our &lt;a href="https://charts-kt.io/"&gt;Kotlin Charting Library, Charts.kt&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Before starting to code it, we have to check if it’s a viable solution and if the rendering performances are already good enough. &lt;/p&gt;

&lt;p&gt;This small post shows the resulting tests.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-to-test"&gt;
  &lt;/a&gt;
  What to test?
&lt;/h2&gt;

&lt;p&gt;The graphic needs for data visualization are relatively simple. You can do almost anything you want with rectangles, circles, and paths. Generally, rectangles and circles are directly available in the graphics API. You draw more complex shapes with paths.&lt;/p&gt;

&lt;p&gt;So to test the rendering performances, we created a simple application that produces random particles to visualize on a canvas. Using different symbols and counts of particles, we can evaluate the rendering performance of Jetpack Compose Desktop.&lt;/p&gt;

&lt;p&gt;We also implemented a JavaFX version for comparison.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#jetpack-compose-desktop"&gt;
  &lt;/a&gt;
  Jetpack Compose Desktop
&lt;/h2&gt;

&lt;p&gt;The code is available on GitHub: &lt;a href="https://github.com/gzoritchak/compose-rendering"&gt;https://github.com/gzoritchak/compose-rendering&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The test implementation uses the 0.4.0 version of JetPack Compose. &lt;/p&gt;

&lt;p&gt;We focused our code on the rendering performances and not on the respect of Compose implementation patterns. &lt;/p&gt;

&lt;p&gt;In particular, we limit the memory allocations. The particles are mutable classes that contain their position and speed. They are instantiated during startup and updated at each frame. &lt;/p&gt;

&lt;p&gt;We then propose 3 different rendering of the particle’s position: a square, a circle and a diamond. The diamond is built through a path.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;particle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;particles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;xScale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;particle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;toFloat&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;y&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;yScale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;particle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;toFloat&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;color&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Colors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Web&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;aliceblue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toColor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;renderingWith&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;RenderingWith&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Square&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;drawRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;Offset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="nc"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;10f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;10f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nc"&gt;RenderingWith&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Circle&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;drawCircle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;radius&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;5f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;center&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Offset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nc"&gt;RenderingWith&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Diamond&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;drawPath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;apply&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;moveTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nf"&gt;lineTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nf"&gt;lineTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nf"&gt;lineTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nf"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See the resulting performances on my MacBook Pro (late 2013 2,3 GHz Intel Core i7).&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/h-mtBOSkuRI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Up to 10 000 particles, the rendering performs at 60 FPS using squares and circles. It then fell to approximately 30 FPS for 30 000 particles and 8-9 FPS for 100 000 particles. The first decrease with paths (diamonds) appears at 10 000 particles with a not stable 30 FPS. We can also observe some freeze.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Compose&lt;/th&gt;
&lt;th&gt;3000&lt;/th&gt;
&lt;th&gt;10 000&lt;/th&gt;
&lt;th&gt;30 000&lt;/th&gt;
&lt;th&gt;100 000&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Square&lt;/td&gt;
&lt;td&gt;60 FPS&lt;/td&gt;
&lt;td&gt;60 FPS&lt;/td&gt;
&lt;td&gt;28 FPS&lt;/td&gt;
&lt;td&gt;8 FPS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Circle&lt;/td&gt;
&lt;td&gt;60 FPS&lt;/td&gt;
&lt;td&gt;60 FPS&lt;/td&gt;
&lt;td&gt;31 FPS&lt;/td&gt;
&lt;td&gt;9 FPS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Diamond&lt;/td&gt;
&lt;td&gt;60 FPS&lt;/td&gt;
&lt;td&gt;30 FPS&lt;/td&gt;
&lt;td&gt;10 FPS&lt;/td&gt;
&lt;td&gt;2 FPS&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Now let’s compare these performances with a settled framework. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javafxtornadofx-implementation"&gt;
  &lt;/a&gt;
  JavaFX/TornadoFX implementation
&lt;/h2&gt;

&lt;p&gt;We implemented a JavaFX version of this test application to have a comparison point.&lt;/p&gt;

&lt;p&gt;The code is available on this &lt;a href="https://github.com/gzoritchak/JavaFx-rendering"&gt;GitHub project&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We render the particles through the Data2viz library, which is the current implementation for our charting library. Under the hood, the Data2viz library uses a JavaFX canvas.&lt;/p&gt;

&lt;p&gt;Here is a screencast of the results using the same hardware:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/jX0cckddYWY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;We can observe that the rendering speed is double for squares and circles. The difference is weaker when we use paths.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;JavaFX&lt;/th&gt;
&lt;th&gt;3000&lt;/th&gt;
&lt;th&gt;10 000&lt;/th&gt;
&lt;th&gt;30 000&lt;/th&gt;
&lt;th&gt;100 000&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Square&lt;/td&gt;
&lt;td&gt;60 FPS&lt;/td&gt;
&lt;td&gt;60 FPS&lt;/td&gt;
&lt;td&gt;60 FPS&lt;/td&gt;
&lt;td&gt;20 FPS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Circle&lt;/td&gt;
&lt;td&gt;60 FPS&lt;/td&gt;
&lt;td&gt;60 FPS&lt;/td&gt;
&lt;td&gt;60 FPS&lt;/td&gt;
&lt;td&gt;20 FPS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Diamond&lt;/td&gt;
&lt;td&gt;60 FPS&lt;/td&gt;
&lt;td&gt;37 FPS&lt;/td&gt;
&lt;td&gt;13 FPS&lt;/td&gt;
&lt;td&gt;3 FPS&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Even if the performances are not as good as their JavaFX counterpart, they are already good enough for many visualization use cases. &lt;/p&gt;

&lt;p&gt;Jetbrains builds Jetpack Compose Desktop on solid foundations. The works they are doing on integrating Skia in a Kotlin context is promising for the nice uses cases (Swing, Headless)&lt;/p&gt;

</description>
      <category>kotlin</category>
      <category>skia</category>
    </item>
    <item>
      <title>How do I find the right social media influencer?</title>
      <author>easy_bloggers</author>
      <pubDate>Wed, 09 Jun 2021 12:09:21 +0000</pubDate>
      <link>https://dev.to/easy_bloggers/how-do-i-find-the-right-social-media-influencer-79k</link>
      <guid>https://dev.to/easy_bloggers/how-do-i-find-the-right-social-media-influencer-79k</guid>
      <description>&lt;p&gt;There are two main options - to look for an influencer on your own or use the services that process influencer data and form their own databases. But there is also a third option, which has benefits of the first two.&lt;/p&gt;

&lt;p&gt;The first variant is the simplest because you know exactly whom you need and most likely can find suitable influencers for cooperation. The main disadvantage is that the search can take weeks.&lt;/p&gt;

&lt;p&gt;The second variant is an influencer search service. As a rule, these are marketing agencies, and the main disadvantage of such collaboration is that most companies do not immediately let the price for their services be known. However, there is a third compromise option. It would be to select the desired pool of influencers using a third-party service and then directly negotiate with them. Such services, for example, are provided by the &lt;a href="https://www.easybloggers.io"&gt;Easy Bloggers platform - advanced YouTube influencers search&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;What exactly you need to pay attention to:&lt;/h2&gt;

&lt;p&gt;The influencer’s main topics of discussion. The &lt;a href="https://sproutsocial.com/insights/how-to-find-the-right-influencers/"&gt;most commented and watched videos&lt;/a&gt; of the influencer will help you quickly understand the context of the most covered topics.&lt;/p&gt;

&lt;p&gt;The number of subscribers and audience reactions. The higher the ratio of subscribers to reactions, the more an influencer "hooks" his or her audience.&lt;/p&gt;

&lt;p&gt;Age, gender, and geography of subscribers. These are important parameters if the planned advertising campaign has clear geographic or socio-demographic boundaries.&lt;/p&gt;

&lt;p&gt;Audience quality. Using the Median Views metric can be assessed the best.&lt;br&gt;
The closer the median is to the number of subscribers, the more unrivaled is the content a influencer makes. If the number of views exceeds the number of subscribers, then an influencer is making viral content and is in the right place.&lt;/p&gt;

&lt;h2&gt;Youtube, Instagram, Snapchat?&lt;/h2&gt;

&lt;p&gt;Which platform is better to look for influencers? Probably, if you came to Easy Bloggers, you were searching for professional Youtube vloggers who could help you in promoting your product. And you were right! YouTube today has more than &lt;a href="https://blog.hootsuite.com/youtube-stats-marketers/"&gt;2 billion users&lt;/a&gt; per month. 90% of people aged 18 to 44 watch it, and this is the most visited video service among Millennials. At the same time, 51% of users over 75 also watch videos on the platform.&lt;/p&gt;

&lt;h2&gt;Why else should you pay attention to micro-influencers?&lt;/h2&gt;

&lt;p&gt;There is another strong argument in favor of micro-influencers −&lt;br&gt;
 the conversion of advertising and influencer marketing campaigns on small channels is higher than on the top ones of YouTube. This is what marketers call "banner blindness". We simply no longer notice banner ads on the websites, and during advertising inserts on YouTube, we click “Skip Ads” more and more often. At the same time, advertising integrations with micro-influencers are usually perceived by the audience as advice, and thanks to this, a YouTube influencer with 100 thousand subscribers can achieve higher CTRs than a YouTube “superstars” with millions of followers.&lt;/p&gt;

&lt;h2&gt;Listen to vloggers, they know what they are saying&lt;/h2&gt;

&lt;p&gt;It is important to remember that you are buying an influencer’s audience, and vloggers know everything about their subscribers. If an influencer tells you to correct the campaign, this advice should be taken seriously. Remember, influencer marketing implies recommendations and advice, but not direct calls to buy.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l6kXpPCN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcj9wh03xnes9h67xdhq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l6kXpPCN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcj9wh03xnes9h67xdhq.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
To evaluate the campaign effectiveness, you can come up with special promo codes for each influencer. It is just one of many life hacks. The most important advice is to make an analytical report with the main statistical indicators before the marketing campaign starts. It’ll make it easier for you to evaluate the effectiveness of cooperation with YouTube vloggers at the end of the campaign.&lt;br&gt;
We sincerely believe that the future lies with influencer marketing. And if you also think so, then we will get along! Just try to find an influencer with our help, and you will see how Easy-peasy it is.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/company/bloggerslab/"&gt;Linkedin&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/easy_bloggers/"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>🔥🔥How to make this amazing  text animation.</title>
      <author>Techy Programmers</author>
      <pubDate>Wed, 09 Jun 2021 11:46:38 +0000</pubDate>
      <link>https://dev.to/kunaal438/how-to-make-this-amazing-text-animation-2k46</link>
      <guid>https://dev.to/kunaal438/how-to-make-this-amazing-text-animation-2k46</guid>
      <description>&lt;p&gt;Hello, glad you are here. I am kunaal and today we will see how to make an awesome text animation which you have never seen before. You can see demo below.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h1&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/kunaal_kumar/embed/LYWBgxZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#video-tutorial-"&gt;
  &lt;/a&gt;
  Video Tutorial -
&lt;/h1&gt;

&lt;p&gt;For better explanation. You can watch video tutorial.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/dlaY3g-5hzg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you like the video tutorial. Please consider subscribing my youtube channel.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#lets-code"&gt;
  &lt;/a&gt;
  Let's code
&lt;/h1&gt;

&lt;p&gt;Inside HTML file under &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag write&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/glitched-writer/lib/index.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;CSS&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url('https://fonts.googleapis.com/css2?family=Dosis:wght@700&amp;amp;display=swap')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'dosis'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;27&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.text&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;-webkit-text-stroke&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-3px&lt;/span&gt; &lt;span class="m"&gt;-2px&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And Js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;writer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;GlitchedWriter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;phrases&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;welcome to my channel&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;techy programmers&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;today we will make this effect&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;with glitch writer JS library&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;so without wating time&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;let's get started&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;writer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;queueWrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;phrases&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope you understood everything. If you have any doubt or you find any mistake that I made or you have any suggestion feel free to ask me in comment.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are interested in programming and want to know how I a 15yr old teen do coding make these design. You can follow me on my Instagram. I am also planning to post my game development stuff on Instagram.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://github.com/kunaal438/glitched-writer-js-demo"&gt;Source Code&lt;/a&gt;, &lt;a href="https://www.youtube.com/c/TechyProgrammers/"&gt;My youtube Channel&lt;/a&gt;, &lt;a href="https://www.instagram.com/techy_programmers/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Rails CD with Docker, Github Actions and VPS</title>
      <author>Marek Stocki</author>
      <pubDate>Wed, 09 Jun 2021 11:46:19 +0000</pubDate>
      <link>https://dev.to/2nit/rails-cd-with-docker-github-actions-and-vps-4hi4</link>
      <guid>https://dev.to/2nit/rails-cd-with-docker-github-actions-and-vps-4hi4</guid>
      <description>&lt;p&gt;I want to show you how to deploy your app to production with minimal cost and make the deployment process fully automated. If you have never done it before, this post will show you how to achieve it step by step. Maybe you have already deployed some apps, then you know that there are always some problems, especially when the server is used by multiple applications. This approach isn’t something innovative, there are many blog posts where you can learn how to dockerize apps, how to use GitHub Actions, and how to deploy code to VPS, but this tutorial brings it all together.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#docker"&gt;
  &lt;/a&gt;
  Docker
&lt;/h2&gt;

&lt;p&gt;The whole idea is based on Docker's image. So the first thing to do is Docker installation. You can skip that part if you have already installed it. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-docker"&gt;
  &lt;/a&gt;
  Install Docker
&lt;/h3&gt;

&lt;p&gt;For more details check &lt;a href="https://docs.docker.com/engine/install/"&gt;the official site&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Update the apt package index and install packages to allow apt to use a repository over HTTPS:
$ sudo apt-get update &amp;amp;&amp;amp; apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common

# Add Docker’s official GPG key
$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

# Update the apt package index and install the latest version of Docker Engine and Containerd
$ sudo apt-get update &amp;amp;&amp;amp; apt-get install docker-ce docker-ce-cli containerd.io

# Verify that Docker Engine is installed correctly by running the hello-world image
$ sudo docker run hello-world
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#manage-docker-as-a-nonroot-user"&gt;
  &lt;/a&gt;
  Manage Docker as a non-root user
&lt;/h3&gt;

&lt;p&gt;For more details check &lt;a href="https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user"&gt;official site&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Create the docker group
$ sudo groupadd docker

# Add your user to the docker group
$ sudo usermod -aG docker $USER

# Activate the changes to groups (only Linux)
$ newgrp docker

# Verify that you can run docker commands without sudo
$ docker run hello-world
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#dockerfile"&gt;
  &lt;/a&gt;
  Dockerfile
&lt;/h3&gt;

&lt;p&gt;Docker is creating images using Dockerfile - it's a file with all commands that are executed during the build. I will show you the simplest version that will work. Later I will improve it and shorten the build time. Create a file &lt;code&gt;Dockerfile&lt;/code&gt; in the main app directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="c"&gt;#1 This is the official Ruby image (https://hub.docker.com/_/ruby) - a complete Linux system with Ruby installed&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; ruby:3.0.1&lt;/span&gt;

&lt;span class="c"&gt;#2 Install applications needed for building Rails app&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-y&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt; build-essential libpq-dev nodejs zlib1g-dev liblzma-dev

&lt;span class="c"&gt;#3 The WORKDIR instruction sets the working directory for any RUN, CMD, ENTRYPOINT, COPY and ADD&lt;/span&gt;
&lt;span class="c"&gt;# If a directory doesn’t exist, it will be created&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;

&lt;span class="c"&gt;#4 Copy files from current location to image WORKDIR&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . . &lt;/span&gt;

&lt;span class="c"&gt;#5 Install gems in the image&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;bundle &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;span class="c"&gt;#6 Command that will be executed when you run the image&lt;/span&gt;
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; bundle exec rails s -p 3000 -b '0.0.0.0'&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let’s test it and create an image with the name &lt;em&gt;rails_app&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="gp"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;docker build &lt;span class="nt"&gt;-t&lt;/span&gt; rails_app &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="go"&gt;Sending build context to Docker daemon  86.65MB
Step 1/6 : FROM ruby:3.0.1
3.0.1: Pulling from library/ruby
d960726af2be: Pull complete 
&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt;&lt;span class="c"&gt;# part ommited&lt;/span&gt;
&lt;span class="go"&gt;Status: Downloaded newer image for ruby:3.0.1
&lt;/span&gt;&lt;span class="gp"&gt; ---&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;9cba361e78fe
&lt;span class="go"&gt;Step 2/6 : RUN apt-get update &amp;amp;&amp;amp; apt-get install -y  build-essential libpq-dev nodejs zlib1g-dev liblzma-dev
&lt;/span&gt;&lt;span class="gp"&gt; ---&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Running &lt;span class="k"&gt;in &lt;/span&gt;fa0bce0b6b81
&lt;span class="go"&gt;Get:1 http://deb.debian.org/debian buster InRelease [121 kB]
&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt;&lt;span class="c"&gt;# part ommited&lt;/span&gt;
&lt;span class="go"&gt;Removing intermediate container 40b752bd0ef3
&lt;/span&gt;&lt;span class="gp"&gt; ---&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;7d09aa5c9ced
&lt;span class="go"&gt;Step 3/6 : WORKDIR /app
&lt;/span&gt;&lt;span class="gp"&gt; ---&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Running &lt;span class="k"&gt;in &lt;/span&gt;427dea58acb0
&lt;span class="go"&gt;Removing intermediate container 427dea58acb0
&lt;/span&gt;&lt;span class="gp"&gt; ---&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;8ed87d4b0643
&lt;span class="go"&gt;Step 4/6 : COPY . .
&lt;/span&gt;&lt;span class="gp"&gt; ---&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;0b3a695a0987
&lt;span class="go"&gt;Step 5/6 : RUN bundle install
&lt;/span&gt;&lt;span class="gp"&gt; ---&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Running &lt;span class="k"&gt;in &lt;/span&gt;65a2592eca90
&lt;span class="go"&gt;Fetching gem metadata from https://rubygems.org/............
Fetching rake 13.0.3
Installing rake 13.0.3
&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt;&lt;span class="c"&gt;# part ommited&lt;/span&gt;
&lt;span class="go"&gt;Removing intermediate container 65a2592eca90
&lt;/span&gt;&lt;span class="gp"&gt; ---&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;55d9368c4b98
&lt;span class="go"&gt;Step 6/6 : CMD bundle exec rails s -p 3000 -b '0.0.0.0'
&lt;/span&gt;&lt;span class="gp"&gt; ---&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Running &lt;span class="k"&gt;in &lt;/span&gt;795356f8553e
&lt;span class="go"&gt;Removing intermediate container 795356f8553e
&lt;/span&gt;&lt;span class="gp"&gt; ---&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;2466c41ac676
&lt;span class="go"&gt;Successfully built 2466c41ac676
Successfully tagged rails_app:latest
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The image is successfully built, to check available images you can use this command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker images
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now it's time to run the container with the application and check if it works.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#-p parm allows to map ports with scheme EXPOSED_PORT:IMAGE_INTERNAL_PORT&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker run &lt;span class="nt"&gt;-p&lt;/span&gt; 3001:3000 rails_app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open the browser and go to &lt;a href="http://localhost:3001/"&gt;http://localhost:3001/&lt;/a&gt; - there is a little success, Rails application is working partially:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zM4edxFN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://2n.pl/system/photos/imgs/000/000/001/original/Screenshot_from_2021-05-26_22-58-35.png%3F1622062736" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zM4edxFN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://2n.pl/system/photos/imgs/000/000/001/original/Screenshot_from_2021-05-26_22-58-35.png%3F1622062736" alt="image with database error"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is an error from Rails, so Rails is working. Still, there is a problem with the database. There must be another container with the Postgres application and connection between these containers. To achieve it I will use Docker Compose.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#docker-compose"&gt;
  &lt;/a&gt;
  Docker Compose
&lt;/h2&gt;

&lt;p&gt;This is a tool that allows to run multiple containers and create a network between them. The configuration file is stored as YAML.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-docker-compose"&gt;
  &lt;/a&gt;
  Install Docker Compose
&lt;/h3&gt;

&lt;p&gt;For more details check &lt;a href="https://docs.docker.com/compose/install/"&gt;official site&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Download the current stable release of Docker Compose&lt;/span&gt;
&lt;span class="c"&gt;# To install a different version of Compose, substitute 1.29.2 with the version of Compose you want to use.&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;curl &lt;span class="nt"&gt;-L&lt;/span&gt; &lt;span class="s2"&gt;"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;uname&lt;/span&gt; &lt;span class="nt"&gt;-s&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;uname&lt;/span&gt; &lt;span class="nt"&gt;-m&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="nt"&gt;-o&lt;/span&gt; /usr/local/bin/docker-compose

&lt;span class="c"&gt;# Apply executable permissions to the binary&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo chmod&lt;/span&gt; +x /usr/local/bin/docker-compose

&lt;span class="c"&gt;# Test the installation&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose &lt;span class="nt"&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#compose-config-file"&gt;
  &lt;/a&gt;
  Compose config file
&lt;/h3&gt;

&lt;p&gt;Create a file &lt;code&gt;docker-compose.yaml&lt;/code&gt; in the main app directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;3"&lt;/span&gt;
&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;database&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# Official postgres image available in https://hub.docker.com/&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;postgres&lt;/span&gt;
    &lt;span class="c1"&gt;# There are many types of volumes, this is a named volume, which will store database in docker directory&lt;/span&gt;
    &lt;span class="c1"&gt;# Named volumes must be listed under the top-level volumes key, as shown at bottom of the file&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;db_data:/var/lib/postgresql/data&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;POSTGRES_PASSWORD=password&lt;/span&gt;
  &lt;span class="na"&gt;web&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rails_app&lt;/span&gt;
    &lt;span class="c1"&gt;# Command will replace CMD from Dockerfile&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;bash -c "rm -f tmp/pids/server.pid &amp;amp;&amp;amp; bundle exec rails s -p 3000 -b '0.0.0.0'"&lt;/span&gt;
    &lt;span class="c1"&gt;# Path on the host, relative to the Compose file. 'app' is a WORKDIR name from Dockerfile&lt;/span&gt;
    &lt;span class="c1"&gt;# This volume will allow you to run the Rails app with Docker Compose&lt;/span&gt;
    &lt;span class="c1"&gt;# and made live changes without rebuilding the image&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;.:/app&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;3001:3000"&lt;/span&gt;
    &lt;span class="c1"&gt;# 'database' is Postgres service name from the top of the file - it will allow communication between containers&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;database&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;POSTGRES_PASSWORD=password&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;POSTGRES_USERNAME=postgres&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;POSTGRES_HOST=database&lt;/span&gt;  &lt;span class="c1"&gt;# it's Postgres service name from the top of the file&lt;/span&gt;
&lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;db_data&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now it's time to run Rails application and Postgres database with Docker Compose, but before you must update Rails database config file, create a database, and run migrations.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;#config/database.yaml&lt;/span&gt;

&lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;&amp;amp;default&lt;/span&gt;
  &lt;span class="na"&gt;adapter&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;postgresql&lt;/span&gt;
  &lt;span class="na"&gt;encoding&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;unicode&lt;/span&gt;
  &lt;span class="na"&gt;pool&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %&amp;gt;&lt;/span&gt;
  &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;%= ENV['POSTGRES_USERNAME'] %&amp;gt;&lt;/span&gt;
  &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;%= ENV['POSTGRES_PASSWORD'] %&amp;gt;&lt;/span&gt;
  &lt;span class="na"&gt;host&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;%= ENV['POSTGRES_HOST'] %&amp;gt;&lt;/span&gt;

&lt;span class="na"&gt;development&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*default&lt;/span&gt;
  &lt;span class="na"&gt;database&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rails_app_development&lt;/span&gt;

&lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*default&lt;/span&gt;
  &lt;span class="na"&gt;database&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rails_app_test&lt;/span&gt;

&lt;span class="na"&gt;production&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*default&lt;/span&gt;
  &lt;span class="na"&gt;database&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rails_app_production&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After updating the database file Docker image needs to be rebuild.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker build &lt;span class="nt"&gt;-t&lt;/span&gt; rails_app &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first 3 steps are cached, but changes in the application directory cause gems installation. I will show you later how to avoid it and use cache.&lt;/p&gt;

&lt;p&gt;Now start containers and in another terminal window run a command to create a database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Run command and leave it running&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up
&lt;span class="c"&gt;# From another terminal window&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose run web rake db:create db:migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open the browser and go to &lt;a href="http://localhost:3001/"&gt;http://localhost:3001/&lt;/a&gt; and... You just run the Rails app with Docker.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l986lde4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://2n.pl/system/photos/imgs/000/000/002/original/Screenshot_from_2021-05-27_00-08-38.png%3F1622066948" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l986lde4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://2n.pl/system/photos/imgs/000/000/002/original/Screenshot_from_2021-05-27_00-08-38.png%3F1622066948" alt="rails app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vps"&gt;
  &lt;/a&gt;
  VPS
&lt;/h2&gt;

&lt;p&gt;The next piece of the puzzle is VPS - a place where you deploy application. You can find many companies that provide cloud services and it's your decision which one you choose. I wanna show you an example based on a server with Ubuntu. Like on your localhost, firstly you install Docker and Docker Compose on VPS. Use steps from the beginning of this post. You will need two additional non-root users: &lt;strong&gt;nginx_proxy&lt;/strong&gt; and &lt;strong&gt;rails_app&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;adduser nginx_proxy
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;adduser rails_app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#http-server"&gt;
  &lt;/a&gt;
  HTTP server
&lt;/h3&gt;

&lt;p&gt;For HTTP server I will use NGINX with this awesome application &lt;a href="https://github.com/nginx-proxy/nginx-proxy"&gt;nginx-proxy&lt;/a&gt; and &lt;a href="https://github.com/nginx-proxy/acme-companion"&gt;acme-companion&lt;/a&gt; for automatic SSL certificate generation. Connect to the server as &lt;strong&gt;nginx_proxy&lt;/strong&gt; user and create two files &lt;code&gt;docker-compose.yaml&lt;/code&gt; and &lt;code&gt;nginx_custom.conf&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;touch &lt;/span&gt;docker-compose.yaml nginx_custom.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I will show you the basic configuration of these two applications. For more details check the app's documentation from the links above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# docker-compose.yaml&lt;/span&gt;
&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3.9'&lt;/span&gt;

&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;nginx-proxy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;always&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nginxproxy/nginx-proxy&lt;/span&gt;
    &lt;span class="na"&gt;container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nginx-proxy&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;80:80&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;443:443&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;conf:/etc/nginx/conf.d&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;vhost:/etc/nginx/vhost.d&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;html:/usr/share/nginx/html&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;dhparam:/etc/nginx/dhparam&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;certs:/etc/nginx/certs:ro&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/var/run/docker.sock:/tmp/docker.sock:ro&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;./nginx_custom.conf:/etc/nginx/conf.d/nginx_custom.conf&lt;/span&gt;
    &lt;span class="na"&gt;networks&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;nginx-proxy-network&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

  &lt;span class="na"&gt;letsencrypt&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;always&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nginxproxy/acme-companion&lt;/span&gt;
    &lt;span class="na"&gt;container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nginx-proxy-acme&lt;/span&gt;
    &lt;span class="na"&gt;volumes_from&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;nginx-proxy&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;certs:/etc/nginx/certs:rw&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;acme:/etc/acme.sh&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/var/run/docker.sock:/var/run/docker.sock:ro&lt;/span&gt;
    &lt;span class="na"&gt;networks&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;nginx-proxy-network&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

&lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;conf&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;vhost&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;html&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;dhparam&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;certs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;acme&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

&lt;span class="na"&gt;networks&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;nginx-proxy-network&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;nginx-proxy-network"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# nginx_custom.conf
# here you can customize NGINX
server_tokens off;
client_max_body_size 100m;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When these two files are created and filled with content, let's run the NGINX server with deamon (&lt;strong&gt;-d&lt;/strong&gt; param)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up &lt;span class="nt"&gt;-d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's all you need to do with the HTML server - this app will handle all new Rails applications on your server with few ENV variables that you will add to the Rails app docker-compose files.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rails-app-production-docker-compose-file"&gt;
  &lt;/a&gt;
  Rails app - Production Docker Compose file
&lt;/h3&gt;

&lt;p&gt;Let's connect to the server as  &lt;strong&gt;rails_app&lt;/strong&gt; user. You must create two files &lt;code&gt;docker-compose.yaml&lt;/code&gt; and &lt;code&gt;.env&lt;/code&gt; on the server and copy the below content to these files.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;touch &lt;/span&gt;docker-compose.yaml .env
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the production version you must pass more ENV variables, so let's create a file to store these variables separately. Also, you must remember that every file created in the Docker image during the app life cycle will be deleted with the new app version release. So e.g. files from ActiveStorage or logs need to be stored outside of the image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;3"&lt;/span&gt;
&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;database&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# restart docker container when there will be a crash&lt;/span&gt;
    &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;always&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;postgres&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;db_data:/var/lib/postgresql/data&lt;/span&gt;
    &lt;span class="c1"&gt;# instead of environment let's use the env file&lt;/span&gt;
    &lt;span class="na"&gt;env_file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.env&lt;/span&gt;
  &lt;span class="na"&gt;web&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;always&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rails_app&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;bash -c "rm -f tmp/pids/server.pid &amp;amp;&amp;amp; bundle exec rails s -p 3000 -b '0.0.0.0'"&lt;/span&gt;
    &lt;span class="na"&gt;env_file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.env&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;./storage:/app/storage&lt;/span&gt; &lt;span class="c1"&gt;# store ActiveStorage files in `storage` directory&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;./log:/app/log&lt;/span&gt; &lt;span class="c1"&gt;# store logs in `log` directory&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;3001:3000&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;database&lt;/span&gt;
&lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;db_data&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Example env file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# VIRTUAL_HOST variable will allow nginx-proxy to redirect HTTP request to your Rails app&lt;/span&gt;
&lt;span class="c1"&gt;# LETSENCRYPT variables are used by acme-companion and it will create SSL certificate for those params&lt;/span&gt;
&lt;span class="no"&gt;VIRTUAL_HOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;your_dns_for_rails_app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;com&lt;/span&gt;
&lt;span class="no"&gt;LETSENCRYPT_HOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;your_dns_for_rails_app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;com&lt;/span&gt;
&lt;span class="no"&gt;LETSENCRYPT_EMAIL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;some_user&lt;/span&gt;&lt;span class="vi"&gt;@your_dns_for_rails_app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;com&lt;/span&gt;
&lt;span class="no"&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;
&lt;span class="no"&gt;POSTGRES_USERNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;postgres&lt;/span&gt;
&lt;span class="no"&gt;POSTGRES_HOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;database&lt;/span&gt;
&lt;span class="no"&gt;RAILS_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;production&lt;/span&gt;
&lt;span class="no"&gt;SECRET_KEY_BASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;some_secret_key&lt;/span&gt;
&lt;span class="no"&gt;RAILS_LOG_TO_STDOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="no"&gt;RAILS_SERVE_STATIC_FILES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#rails-app-production-dockerfile"&gt;
  &lt;/a&gt;
  Rails app - Production Dockerfile
&lt;/h3&gt;

&lt;p&gt;The main difference is a need to precompile assets to run the production environment. To do it with Rails and Webpacker, then also Yarn is needed. Let’s update Dockerfile to handle it and fix gems caching.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; ruby:3.0.1&lt;/span&gt;
&lt;span class="c"&gt;# add yarn to apt list&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;curl &lt;span class="nt"&gt;-sS&lt;/span&gt; https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - &lt;span class="se"&gt;\
&lt;/span&gt;  &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"deb https://dl.yarnpkg.com/debian/ stable main"&lt;/span&gt; | &lt;span class="nb"&gt;tee&lt;/span&gt; /etc/apt/sources.list.d/yarn.list
&lt;span class="c"&gt;# add yarn to installed apps&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-y&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt; build-essential libpq-dev nodejs zlib1g-dev liblzma-dev yarn
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;
&lt;span class="c"&gt;# copy Gemfile and Gemfile.lock and install gems before copying rest of the application&lt;/span&gt;
&lt;span class="c"&gt;# so the steps will be cached until there won't be any changes in Gemfile&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; Gemfile* ./&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;bundle &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;
&lt;span class="c"&gt;# precompile assets with temporary secret key base&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nv"&gt;SECRET_KEY_BASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"assets_compile"&lt;/span&gt; &lt;span class="nv"&gt;RAILS_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;production bundle &lt;span class="nb"&gt;exec &lt;/span&gt;rake assets:precompile
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; bundle exec rails s -p 3000 -b '0.0.0.0'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#github-actions"&gt;
  &lt;/a&gt;
  GitHub Actions
&lt;/h2&gt;

&lt;p&gt;When the production Rails app on Docker image is fully working and VPS is ready, it's time to create an image with &lt;a href="https://docs.github.com/en/actions"&gt;GitHub Actions&lt;/a&gt; and store it in &lt;a href="https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry"&gt;GitHub Container Registry&lt;/a&gt;. Before I show you the config file, there are few things to do in GitHub. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GitHub Container Registry (GHCR) is in an experimental state, so you must enable that feature with this &lt;a href="https://docs.github.com/en/packages/working-with-a-github-packages-registry/enabling-improved-container-support-with-the-container-registry"&gt;tutorial&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Second thing needed is token, which allow to login to GHCR - &lt;a href="https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token"&gt;tutorial&lt;/a&gt; (select two scopes: &lt;strong&gt;write:packages&lt;/strong&gt; and &lt;strong&gt;delete:packages&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;Create repository secrets. Go to your repository -&amp;gt; Settings -&amp;gt; Secrets and add &lt;em&gt;New repository secret&lt;/em&gt; and create two secrets: &lt;code&gt;CR_PAT&lt;/code&gt; with GHCR token and &lt;code&gt;VPS_PASSWORD&lt;/code&gt; - its password for user &lt;strong&gt;rails_app&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then log in to your server with &lt;strong&gt;rails_app&lt;/strong&gt; user and edit &lt;code&gt;bashrc&lt;/code&gt; file. Add a line at the end of the file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;CR_PAT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;your GHCR token&amp;gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your project create a file in that path &lt;code&gt;/.github/workflows/deploy.yml&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deploy&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# Run deploy job on every push to the master branch&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;master&lt;/span&gt;
&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;deploy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Checkout&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Login to GitHub Container Registry&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u &amp;lt;YOUR GITHUB LOGIN&amp;gt; --password-stdin&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Pull image to use as a cache&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;docker pull ghcr.io/2n-it/2n_website:latest || exit &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Build Docker image&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;docker build . --cache-from ghcr.io/&amp;lt;YOUR GITHUB LOGIN&amp;gt;/rails_app:latest --tag ghcr.io/&amp;lt;YOUR GITHUB LOGIN&amp;gt;/rails_app:latest&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Push the image to GitHub Container Registry&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;docker push ghcr.io/&amp;lt;YOUR GITHUB LOGIN&amp;gt;/rails_app:latest&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;VPS - pull image and run app containters&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;appleboy/ssh-action@master&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;host&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;your-server-ip&amp;gt;&lt;/span&gt;
          &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rails_app&lt;/span&gt; 
          &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.VPS_PASSWORD }}&lt;/span&gt;
          &lt;span class="na"&gt;script&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
            &lt;span class="s"&gt;echo $CR_PAT | docker login ghcr.io -u marekls --password-stdin&lt;/span&gt;
            &lt;span class="s"&gt;docker-compose pull app&lt;/span&gt;
            &lt;span class="s"&gt;docker-compose up -d --no-deps&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After first successful deploy, login to your server as &lt;strong&gt;rails_app&lt;/strong&gt; and create database with command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose run web rake db:create db:migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-last-improvement"&gt;
  &lt;/a&gt;
  The last improvement
&lt;/h2&gt;

&lt;p&gt;The final touch to make deployment fully automated is the migration script. Create a file &lt;code&gt;docker-entrypoint.sh&lt;/code&gt; in your project main directory and paste the below content.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nt"&gt;-e&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; tmp/pids/server.pid &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
  &lt;/span&gt;&lt;span class="nb"&gt;rm &lt;/span&gt;tmp/pids/server.pid
&lt;span class="k"&gt;fi

&lt;/span&gt;bundle &lt;span class="nb"&gt;exec &lt;/span&gt;rails db:migrate 2&amp;gt;/dev/null
&lt;span class="nb"&gt;exec &lt;/span&gt;bundle &lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then few changes are needed in &lt;code&gt;Dockerfile&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; ruby:3.0.1&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;curl &lt;span class="nt"&gt;-sS&lt;/span&gt; https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - &lt;span class="se"&gt;\
&lt;/span&gt;  &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"deb https://dl.yarnpkg.com/debian/ stable main"&lt;/span&gt; | &lt;span class="nb"&gt;tee&lt;/span&gt; /etc/apt/sources.list.d/yarn.list
&lt;span class="k"&gt;RUN &lt;/span&gt;apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-y&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt; build-essential libpq-dev nodejs zlib1g-dev liblzma-dev yarn
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; Gemfile* ./&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;bundle &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nv"&gt;SECRET_KEY_BASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"assets_compile"&lt;/span&gt; &lt;span class="nv"&gt;RAILS_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;production bundle &lt;span class="nb"&gt;exec &lt;/span&gt;rake assets:precompile
&lt;span class="c"&gt;# Add entrypoint script to handle migrations&lt;/span&gt;
&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="s"&gt; [ "./docker-entrypoint.sh" ]&lt;/span&gt;
&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 3000&lt;/span&gt;
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["rails", "server", "-b", "0.0.0.0"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You just created a fully working continuous deployment. You don't have to worry about errors on your local machine or some problems with the internet connection anymore. Just write your code and simply push commit and the rest is magic. Below some useful commands that may help you.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# view logs from Postgres&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose logs database &lt;span class="nt"&gt;-f&lt;/span&gt;

&lt;span class="c"&gt;# view logs from Rails&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose logs app &lt;span class="nt"&gt;-f&lt;/span&gt;

&lt;span class="c"&gt;# run Rails console inside Docker container&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose run app rails c

&lt;span class="c"&gt;# list available images&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker images

&lt;span class="c"&gt;# list running containers&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker ps

&lt;span class="c"&gt;# stop containers&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose down

&lt;span class="c"&gt;# remove old images/containers&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker system prune
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>docker</category>
      <category>github</category>
      <category>vps</category>
      <category>webdev</category>
    </item>
    <item>
      <title>NodeJs Response</title>
      <author>DHANUSH N</author>
      <pubDate>Wed, 09 Jun 2021 11:43:49 +0000</pubDate>
      <link>https://dev.to/dhanushxeno/nodejs-response-4ipe</link>
      <guid>https://dev.to/dhanushxeno/nodejs-response-4ipe</guid>
      <description>&lt;p&gt;Consider a Nodejs express app&lt;/p&gt;

&lt;p&gt;I am setting a new parameter 'abc' with a string to the response object&lt;/p&gt;

&lt;p&gt;If I send a response to frontend will they be able to view the value of abc &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IZWtYBUy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lf75fo9snuq07nlt4inr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IZWtYBUy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lf75fo9snuq07nlt4inr.jpg" alt="Nodejs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you inspect via browser, you will be able to see the &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Headers&lt;/li&gt;
&lt;li&gt;Cookies&lt;/li&gt;
&lt;li&gt;Response Body
etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But is there any possibility for the value 'abc' to be got by the frontend ?&lt;/p&gt;

</description>
      <category>help</category>
      <category>node</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>INSTANTLY PARSE JSON</title>
      <author>Amritanshu Dev Rawat</author>
      <pubDate>Wed, 09 Jun 2021 11:33:38 +0000</pubDate>
      <link>https://dev.to/amritanshu/instantly-parse-json-4pn0</link>
      <guid>https://dev.to/amritanshu/instantly-parse-json-4pn0</guid>
      <description>&lt;p&gt;How To Parse JSON Instantly?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get your JSON&lt;/li&gt;
&lt;li&gt;Copy all of that&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SiHGxjON--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qj0348z83ge1xpf8onrb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SiHGxjON--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qj0348z83ge1xpf8onrb.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now, Go to &lt;a href="https://app.quicktype.io/"&gt;Secret Place&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Myzw4CCd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vbjostls7wun6oz8l5yt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Myzw4CCd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vbjostls7wun6oz8l5yt.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Paste the copied JSON to the black box (&amp;lt;- see left)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_XIOs1iR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4267ak7bhuuxjiqbie0f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_XIOs1iR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4267ak7bhuuxjiqbie0f.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;From Right side choose your language (see right -&amp;gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aURdaqlw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iqz1o5xv2c28h0wbd7tj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aURdaqlw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iqz1o5xv2c28h0wbd7tj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It will generate the file according to the selected language.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zHn-XtJ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yw1vnrq2nivg8k6tlma1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zHn-XtJ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yw1vnrq2nivg8k6tlma1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Click on Copy code and do whatever you want , just don't hack NASA&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bu1wXRRE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c00l2m5e3wmx5s7ms4s7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bu1wXRRE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c00l2m5e3wmx5s7ms4s7.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Youtube tutorial
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ME4DBgRWTZo"&gt;
&lt;/iframe&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>java</category>
    </item>
    <item>
      <title>30 Super Handy tools for Developers (WFH + Productivity)</title>
      <author>codinglists-dev</author>
      <pubDate>Wed, 09 Jun 2021 11:31:18 +0000</pubDate>
      <link>https://dev.to/codinglistsdev/30-super-handy-tools-for-developers-wfh-productivity-nf6</link>
      <guid>https://dev.to/codinglistsdev/30-super-handy-tools-for-developers-wfh-productivity-nf6</guid>
      <description>&lt;p&gt;Website specialists and web designers, set yourself up for the best grandstand accessible out there. Underneath you will discover 29 super-valuable web tools and administrations that will vigorously help you and your activities. There are various assets (a distributed storage arrangement, the best web improvement organization on the web with a superb history, WordPress topics, Logo makers and so forth) that will cover practically any necessities that you may have.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#dailydev"&gt;
  &lt;/a&gt;
  &lt;a href="https://api.daily.dev/get?r=rahxul"&gt;DailyDev&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fukjIR94--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623235615638/8j6R3XaoH.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fukjIR94--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623235615638/8j6R3XaoH.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
Programming News, Ranked by developers.&lt;br&gt;
Get the hottest coding news from the best tech blogs on any topic you can think of. Stay updated daily, and unlock more time to do fun stuff, relax, or just code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whatfontis"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.whatfontis.com/"&gt;WhatFontIs&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vgjyogrr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623235684460/dehoh-yC6.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vgjyogrr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623235684460/dehoh-yC6.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find any font from any image. (commercial or free) Using a catalogue of 790K+ fonts (commercial or free) and font finder AI, for every image uploaded we show over 60 fonts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sipapp"&gt;
  &lt;/a&gt;
  &lt;a href="http://sipapp.io/"&gt;SipApp&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3JihKG-r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623235719034/xHfYDWICq.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3JihKG-r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623235719034/xHfYDWICq.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sip is an unbelievably valuable, straightforward, and super-charged shading picker for front-end improvement. You can 'sip' any tone on your screen to snatch it in an assortment of arrangements, including hex and RGB esteems. It's additionally enjoyable to see the names of tones after you've snatched them. My most loved so far is 'Tickle Me Pink'.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#trello"&gt;
  &lt;/a&gt;
  &lt;a href="https://trello.com"&gt;Trello&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AU3btiYv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623235820919/Aq-orlFnE.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AU3btiYv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623235820919/Aq-orlFnE.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
Trello is a lightweight and free task the executives apparatus. It's an application that permits you to make sections or 'swim paths' and spot cards in any of them. These cards can address work to be done, or errands to be finished. &lt;/p&gt;

&lt;p&gt;In spite of the fact that your group may utilize an all the more uncompromising venture the executives tool like Jira, Trello can be a magnificent method to deal with your very own responsibility, to monitor side undertakings, or to deal with the things you need to learn. Getting coordinated about your work and your learning will assist you with improving as an engineer. You can investigate a portion of these public Trello sheets for motivation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-climate"&gt;
  &lt;/a&gt;
  &lt;a href="https://codeclimate.com"&gt;Code Climate&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---zbSFcbf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623235761838/YbjqYfE8T.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---zbSFcbf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623235761838/YbjqYfE8T.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
Code Climate is a mechanized code examination tool that evaluations your application on test inclusion, intricacy, duplication, security, style and that's just the beginning. It accompanies a free fourteen day preliminary. Regardless of whether you're not set up to venture out to pay, Code Climate can give you loads of important understanding into the code nature of your most recent individual task, or—if your group is available to the thought—of the item or administration you're building. As a product engineer, you presumably have a sense for code smells: things that could be better. &lt;/p&gt;

&lt;p&gt;However, it tends to be hard to tell where to begin when you feel like heaps of things aren't right with your code. Code Climate is a straightforward apparatus to give you a noteworthy beginning stage when attempting to improve things.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#invision-studio"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.invisionapp.com/studio"&gt;InVision Studio&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7W268TcW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623235989539/KDKQKLLjS.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7W268TcW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623235989539/KDKQKLLjS.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
InVision Studio intends to consider every contingency and be the solitary UI device you'll require. It accompanies a bucketload of highlights to assist you with making lovely intuitive interfaces, including apparatuses for fast prototyping, responsive and community oriented plan, and working with plan frameworks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ultimate-css-generator"&gt;
  &lt;/a&gt;
  &lt;a href="https://webcode.tools/generators/css"&gt;Ultimate CSS Generator&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--he07dbmZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623235886397/-6rRjTfyV.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--he07dbmZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623235886397/-6rRjTfyV.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
The Ultimate CSS Generator is a free online application that allows you to produce code for CSS movement, foundations, angles, lines, channels, and the sky is the limit from there. &lt;/p&gt;

&lt;p&gt;The interface is easy to understand, the data about program support for the CSS include you're keen on is clear and simple to spot, and the created code is perfect and exact.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#protoio"&gt;
  &lt;/a&gt;
  &lt;a href="https://proto.io/"&gt;ProtoIO&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dQ0O-QXm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623235917214/-yJd9VBz_.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dQ0O-QXm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623235917214/-yJd9VBz_.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
Proto.io is a top application that takes into consideration the commencement of similar models that start with harsh thoughts and end with completely fledged plans. The instrument likewise gives you a scope of opportunities for your ventures, including nitty gritty and custom vector activitys. &lt;/p&gt;

&lt;p&gt;You can begin by creating introductory thoughts with a hand-drawn style, work them into wireframes, and polish them off with a high-constancy model. The Sketch and Photoshop modules help on the off chance that you need to configuration utilizing different instruments, yet Proto.io handles the start to finish configuration measure well. Different highlights – client testing, for instance – will help approve your plans. This is an across the board arrangement with an incredible number of believed marks previously utilizing it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#am-i-responsive"&gt;
  &lt;/a&gt;
  &lt;a href="http://ami.responsivedesign.is/"&gt;Am I responsive?&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rdp9kPPg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623236629768/k1lVPpWoG.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rdp9kPPg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623236629768/k1lVPpWoG.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
I take a great deal of screen shots of the different gadget breakpoints for responsive plan and a chunk of time must pass to set them up. This instruments permits me to get what I need rapidly, and ideally it tends to be useful for showing your more visual customers what you mean by responsive plan when a set-up of items isn't primed and ready. &lt;/p&gt;

&lt;p&gt;This isn't an apparatus for testing, it is truly significant that you do that on genuine gadgets. This rather is a device for fast screen captures (for me) and to outwardly permit individuals to "get" what you mean in customer gatherings.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#framer"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.framer.com/"&gt;Framer&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tpx28K6A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623236665280/IOUSwY6f2.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tpx28K6A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623236665280/IOUSwY6f2.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Framer is an all-in-one tool that helps teams design every part of the product experience. Start in Framer and get to a functional prototype faster than ever—no code required.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#musicforprogramming"&gt;
  &lt;/a&gt;
  &lt;a href="https://musicforprogramming.net/"&gt;MusicForProgramming&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OjBY5d2a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623236723149/E33XMgkvZ.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OjBY5d2a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623236723149/E33XMgkvZ.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
The &lt;code&gt;musicforProgramming&lt;/code&gt; site is an intriguing idea for a music generator intended to expand usefulness. &lt;/p&gt;

&lt;p&gt;Its interface emulates a code supervisor; when going to the page to change the track, you'll be bound to remain fixed on your coding exercises, since you'll outwardly connect this site with your work. Just, put your earphones on, select one of the 54 playlists accessible, and afterward click on "PLAY" to begin it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#glitch"&gt;
  &lt;/a&gt;
  &lt;a href="https://glitch.com/"&gt;Glitch&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vRmsGnwK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623236820406/J-Yw-Mh3a.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vRmsGnwK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623236820406/J-Yw-Mh3a.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
The simplest way to instantly create a web app. Coding on Glitch is like working together in Google Docs–multiple people can work on the same project at the same time. There’s no setup, and you can see changes live on the web as you type.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#httpie"&gt;
  &lt;/a&gt;
  &lt;a href="https://httpie.io/"&gt;Httpie&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2XUWo_s---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623236866442/6ebe0zd1P.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2XUWo_s---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623236866442/6ebe0zd1P.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
HTTPie—aitch-tee-tee-pie—is a user-friendly command-line HTTP client for the API era. It comes with JSON support, syntax highlighting, persistent sessions, wget-like downloads, plugins, and more. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#curl-builder"&gt;
  &lt;/a&gt;
  &lt;a href="https://curlbuilder.com/"&gt;Curl Builder&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zOWMwVcp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623236892702/Byw7LV7ne.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zOWMwVcp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623236892702/Byw7LV7ne.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
Easily generate curl command lines to test your new shining API or whatever!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ngrok"&gt;
  &lt;/a&gt;
  &lt;a href="https://ngrok.com/"&gt;Ngrok&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SKfSOHyU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623236913890/JoPLexC0N.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SKfSOHyU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623236913890/JoPLexC0N.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
Spend more time programming. One command for an instant, secure URL to your localhost server through any NAT or firewall.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#surge"&gt;
  &lt;/a&gt;
  &lt;a href="https://surge.sh/"&gt;Surge&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GwCLbrsX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623236976524/jKMYbd6bd.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GwCLbrsX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623236976524/jKMYbd6bd.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
Static web publishing. Simple, single-command web publishing. Publish HTML, CSS, and JS for free, without leaving the command line.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#insomnia-rest"&gt;
  &lt;/a&gt;
  &lt;a href="https://insomnia.rest/"&gt;Insomnia REST&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--syCQwUJC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237061461/0OAgE_79R.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--syCQwUJC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237061461/0OAgE_79R.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
Deliver high quality APIs through standards and collaboration with the Insomnia API design platform.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#webhook"&gt;
  &lt;/a&gt;
  &lt;a href="https://webhook.site"&gt;WebHook&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iUdgXNFQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237038874/ka_fjnsM5.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iUdgXNFQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237038874/ka_fjnsM5.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
Webhook.site lets you easily inspect, test and automate (with the visual Custom Actions builder, or WebhookScript) any incoming HTTP request or e-mail. What's a webhook?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reverse-whois"&gt;
  &lt;/a&gt;
  &lt;a href="https://viewdns.info/reversewhois/"&gt;Reverse WHOIS&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qNn4fIQR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237005048/qh82IS20Z.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qNn4fIQR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237005048/qh82IS20Z.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
This free tool will allow you to find domain names owned by an individual person or company. Simply enter the email address or name of the person or company to find other domains registered using those same details. FAQ.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thinkwithgoogle"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.thinkwithgoogle.com/feature/testmysite/"&gt;ThinkWithGoogle&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ufec8q7r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237314505/s874zC7tDx.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ufec8q7r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237314505/s874zC7tDx.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
Test My Site is a no charge tool provided by Google which assesses the speed of your mobile site and provides recommendations to enhance your mobile site experience.&lt;/p&gt;

&lt;p&gt;The tool uses data from Lighthouse to offer custom recommendations to improve your page speed and site speed along with best practices and recommended resources to improve your overall experience based on what matters to customers. Test My Site is intended to help start the conversation with your technical teams to create an optimization plan that incorporates the recommended fixes into your roadmap&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flux"&gt;
  &lt;/a&gt;
  &lt;a href="https://justgetflux.com"&gt;Flux&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PXvauMsg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237229612/LJsr_mZnk.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PXvauMsg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237229612/LJsr_mZnk.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
&lt;code&gt;f.lux&lt;/code&gt; makes your computer screen look like the room you're in, all the time. When the sun sets, it makes your computer look like your indoor lights. In the morning, it makes things look like sunlight again. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#focusmate"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.focusmate.com/"&gt;Focusmate&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tRkuHXD1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237268925/bChxsAj5u.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tRkuHXD1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237268925/bChxsAj5u.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
Distraction-free productivity. Focusmate virtual coworking helps you get things done.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#silver-searcher"&gt;
  &lt;/a&gt;
  &lt;a href="https://geoff.greer.fm/ag/"&gt;Silver Searcher&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--whdnH7m9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237350199/atXw2wBc5.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--whdnH7m9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237350199/atXw2wBc5.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
The Silver Searcher is a tool for searching code. It started off as a clone of Ack, but their feature sets have since diverged slightly. In typical usage, Ag is 5-10x faster than Ack.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#remix-icons"&gt;
  &lt;/a&gt;
  &lt;a href="https://remixicon.com/"&gt;Remix Icons&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---dbWPG-f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237528191/Dlt4q63gJ.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---dbWPG-f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237528191/Dlt4q63gJ.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
Remix Icon is a set of open-source neutral-style system symbols for designers and developers. Unlike a patchwork icon library, 2200+ icons are all elaborately crafted so that they are born with the gene of readability, consistency and perfect pixels. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#postico"&gt;
  &lt;/a&gt;
  &lt;a href="https://eggerapps.at/postico/"&gt;Postico&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mR7j-HgB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237422499/Tpewbb33-.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mR7j-HgB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237422499/Tpewbb33-.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
Postico gives a simple to utilize interface, making Postgres more available for newbies and experts the same. Postico will look natural to any individual who has utilized a Mac previously. Simply associate with a data set and start working with tables and perspectives.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#guake-terminal"&gt;
  &lt;/a&gt;
  &lt;a href="http://guake-project.org/"&gt;Guake Terminal&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qe70Qw1i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237483408/NvHIt05T4.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qe70Qw1i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237483408/NvHIt05T4.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
Guake is a top-down terminal for Gnome, and is highly inspirated by the famous terminal used in Quake.&lt;br&gt;
You can instantaneously show and hide your terminal with a single key stroke, execute a command, and then go back to your previous task without breaking your workflow&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cafecito"&gt;
  &lt;/a&gt;
  &lt;a href="https://meetcafecito.com"&gt;Cafecito&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9AKrsarL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237511977/2d3WyIZ_9.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9AKrsarL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237511977/2d3WyIZ_9.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
Solo work is lonely so join to meet fellow remote product friends and creators over short, casual, and fun coffee breaks! Bring your quirky and weird self.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#black-hole-run"&gt;
  &lt;/a&gt;
  &lt;a href="https://blackhole.run/"&gt;Black Hole Run&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yw8J1rXX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237737745/r7v7hwBjT.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yw8J1rXX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237737745/r7v7hwBjT.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
Share any file.&lt;br&gt;
Fast and private. Move your files around the web with high-performance file transfer service that secured with blockchain technology.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#coscreen"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.coscreen.co"&gt;CoScreen&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VVR7uqcP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237699616/gPs9hgrBY.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VVR7uqcP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237699616/gPs9hgrBY.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
Next-Generation, Screen Sharing. &lt;br&gt;
CoScreen enables you and your team members to share and edit any app windows simultaneously on a joint workspace. Stop giving up your privacy and grant remote control to individual windows.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#figma-product-planner"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.figma.com/community/plugin/766652281834442616/Product-Planner"&gt;Figma Product Planner&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pWXX8k6D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237719626/ZlIjv-BvM.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pWXX8k6D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623237719626/ZlIjv-BvM.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;br&gt;
Figma's Product Planner makes it simple to incorporate item arranging highlights with its plan joint effort tools. It offers a scope of prebuilt formats applicable to basic assignments.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;We trust this rundown helped you somewhat. Remember to coordinate the product improvement devices highlights against whatever your organization or task prerequisites are. &lt;/p&gt;

&lt;p&gt;Intermittently, the powerlessness to buy the correct program prompts project disappointment over the long haul. Subsequently, PMs ordinarily don't concede their error; they fault the "suggested" programming all things being equal.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
      <category>resources</category>
    </item>
    <item>
      <title>From Music to Web Development -My Path</title>
      <author>Xiaomin Zhu</author>
      <pubDate>Wed, 09 Jun 2021 11:22:36 +0000</pubDate>
      <link>https://dev.to/xiaominzhu88/from-music-to-web-development-my-path-1ide</link>
      <guid>https://dev.to/xiaominzhu88/from-music-to-web-development-my-path-1ide</guid>
      <description>&lt;p&gt;&lt;em&gt;From being a musician of a symphony orchestra to a web developer.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Since I was a child, my parents focused on cultivating my music literacy. My father is a famous musician and my mother is a doctor. Yes, I am also talented, my ears are born with absolute hearing. I can tell the exact pitch with closed eyes when people press any key on the piano. It would make sense that music should be my future career, right?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#going-to-a-foreign-country-to-continue-music-studies"&gt;
  &lt;/a&gt;
  Going to a foreign country to continue music studies
&lt;/h3&gt;

&lt;p&gt;After high school, I was admitted to the Shanghai Conservatory of Music where I studied hard for 4 years to obtain a diploma. In the second week, after receiving the certificate, I decided to visit Vienna, the famous city of music in Austria, because I didn’t want to stay at home for a career under the cover of my parents like a child forever. So I packed my bags and boarded a plane.&lt;/p&gt;

&lt;p&gt;In Vienna, I passed the entrance exams to get into a Master's course. “Don’t be idle anyway and give it a try” I thought. I signed up and came to the examination room. The result was very pleasant, I didn’t speak a word of German but I was admitted. Yes, I was proud of myself.&lt;/p&gt;

&lt;p&gt;The studying journey in Vienna allowed me to make many friends, speak German fluently, co-operate with orchestras, whom I often performed with abroad. It was around the time I was about to graduate, that I met my husband.&lt;/p&gt;

&lt;p&gt;The world is sometimes so wonderful. On the night of our wedding, I had to perform in the world-famous Golden Hall in Vienna. It was so stressful that after our concert and dinner I fell asleep while walking.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-second-turning-point-become-a-store-manager-assistant-in-a-luxury-company"&gt;
  &lt;/a&gt;
  The second turning point: Become a store manager assistant in a luxury company
&lt;/h3&gt;

&lt;p&gt;Less than a year after marriage, my husband and I noticed that, although we live together, we rarely see each other. The reason was that I often traveled to other cities or even other countries to perform. So I made the decision, to have a normal 9–5 job.&lt;/p&gt;

&lt;p&gt;I experienced different jobs like filmset catering, concert performer just for one day, and finally as a store manager assistant of a luxury goods company. There I faced a variety of different orders every day and was able to arrange the warehouse inventory, dealing with customers from different countries, and collaborating with fashion designers.&lt;/p&gt;

&lt;p&gt;My motivation were simple: 1. The job has fixed working hours; 2. I could meet people in various industries.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-third-turning-point-start-learning-web-development"&gt;
  &lt;/a&gt;
  The third turning point: Start learning Web Development
&lt;/h3&gt;

&lt;p&gt;Time goes by fast and my enthusiasm became less and less after I became an Austrian citizen. I was now determined to enter the third turning point in my life.&lt;/p&gt;

&lt;p&gt;I have to thank my previous company as it allowed me to come into contact with a lot of amazing web pages and different celebrity blogs, which acted as a catalyst. On a whim I asked myself, can I create one? Let me Google how to make one.&lt;br&gt;
In the beginning, I just wanted to create a simple page for fun. After I learned HTML by myself, I found that it would be cool if I could change some styles... So I started to learn CSS.&lt;/p&gt;

&lt;p&gt;My husband was very supportive of my decision and he introduced me to a developer colleague in his company. Since then, we’ve met and he helped me to get in touch with GIT, understand DOM… I mean the most basic knowledge. Can you say that I have just stepped into the web development branch? Not sure, because everyone says “HTML is not a language.”&lt;/p&gt;

&lt;p&gt;Since I came into contact with JavaScript for 3 weeks, my head was turned by some small achievements. I heard about React, so why don’t I give it a try? However, after learning React by myself after 2 weeks, I noticed that when I review the code which I wrote a few days ago, I was lost... I noticed that I had learned so much but forgot almost everything which made me want to give up.&lt;/p&gt;

&lt;p&gt;At that point, by chance, I ran into a friend who had a similar experience. She told me that it might be too early for me to learn React because I haven’t mastered the basic knowledge yet, so, with the idea of giving myself a second chance, I jumped back to JavaScript and continued with the basics.&lt;/p&gt;

&lt;p&gt;After one month, another whim came to my mind. How about a course? Maybe it will help me with a learning direction? In fact, my mind was still in chaos at that time. Thanks to my husband for his continued support, I found a Bootcamp and signed up.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-bootcamp"&gt;
  &lt;/a&gt;
  The Bootcamp
&lt;/h3&gt;

&lt;p&gt;It was a 12-week Web Development Bootcamp &lt;a href="https://upleveled.io"&gt;Link&lt;/a&gt; and on the second day, we started to get familiar with Node.js. It was like a fantasy for me, I understood almost nothing. I often could only sleep for 4 hours a night (down from my usual 7 hours). My feeling was: This kind of learning method is crueler than a war.&lt;/p&gt;

&lt;p&gt;In fact, I have to say that you need to go into the bootcamp with the right mentality and focus. You will not be an expert by the end. You will still have plenty of questions. However, it’s a start and you must accept that not all the learnings will stick.&lt;/p&gt;

&lt;p&gt;I remember that there were nine people in that class. Three of them gave up in second, fourth and fifth weeks but I persisted until the end. After doing a few small projects the Bootcamp colleges were prepared us for a job search(what? after weeks of learning?). In fact, for me, it would be satisfying to get an internship because my feeling was I KNOW NOTHING and I was not confident at all. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-interview"&gt;
  &lt;/a&gt;
  The Interview
&lt;/h3&gt;

&lt;p&gt;The first remote interview (because of covid-19) was an experience I will never forget. The CTO of the company gave me a sentence after asking me a bunch of skill questions: “It doesn’t matter if you don’t know everything, I will send you a TEST…”, I was speechless because I didn’t understand what he was asking for.&lt;/p&gt;

&lt;p&gt;A few days later, I received an email which contains a TEST with attached: “Normally this test will take 2.5 hours, since you are a junior, you can complete it in 7 hours, but after you opened the test, you should finish it without a break”... &lt;/p&gt;

&lt;p&gt;I opened and it requested that the camera be turned on. From the moment I turned on the camera I knew that the next result should only be known to God, because there were so many “Terminology” which I never heard before and didn’t know where to start with those questions.&lt;/p&gt;

&lt;p&gt;I completed the assignment in 4 hours. Unfortunately, I didn’t pass the test. What was disappointing was that I didn’t receive feedback or a response from the company. I politely wrote an email explaining the situation and expressed my apologies that I did not meet their requirements. That I will continue to improve my skills and so on. The result was that I still haven’t received any response — — maybe I really did that terrible. It was hard, but I’m not the type of person who gives up easily, not in this case.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-final-turning-point"&gt;
  &lt;/a&gt;
  The Final turning point
&lt;/h3&gt;

&lt;p&gt;One week later, I had the Bootcamp graduation presentation with my final project that I created with Next.js. It was a funny App about dog adoption. I believe people liked it because I got several requests from companies that were looking for a junior developer. After I went through interviews, I was lucky enough to get a chance from a nice company which I’m officially working at and started with my first IT position. &lt;/p&gt;

&lt;p&gt;That was my road to web development. I hope this article can inspire you whether you have similar experiences or ideas or intention. Nothing is impossible and it’s never too late to be a beginner.&lt;/p&gt;

&lt;p&gt;Thank you for reading my first article!&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>career</category>
      <category>react</category>
      <category>programming</category>
    </item>
    <item>
      <title>Give your terminal a makeover</title>
      <author>Rob OLeary</author>
      <pubDate>Wed, 09 Jun 2021 10:48:28 +0000</pubDate>
      <link>https://dev.to/robole/give-your-terminal-a-makeover-55c3</link>
      <guid>https://dev.to/robole/give-your-terminal-a-makeover-55c3</guid>
      <description>&lt;p&gt;I decided to give my laptop a virtual makeover recently. One thing that stuck out was the terminal. &lt;/p&gt;

&lt;p&gt;A terminal is a dark rectangle with text. It's utilitarian. There isn't a wide array of options for personalization. &lt;/p&gt;

&lt;p&gt;The 3 major things you can do is: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;u&gt;Change the colour scheme&lt;/u&gt;: I made my own colour scheme. If you are searching, &lt;a href="https://github.com/mbadolato/iTerm2-Color-Schemes"&gt;this repo&lt;/a&gt; is a great source for colour schemes for many different terminal apps.&lt;/li&gt;
&lt;li&gt;
&lt;u&gt;Pick a font&lt;/u&gt;: I installed a &lt;a href="https://www.nerdfonts.com/"&gt;nerd font&lt;/a&gt;. Nerd fonts add icons to popular monospace fonts. These icons can be used in your text prompt and are used by some command-line applications to give more of a modern UI-feel. &lt;a href="https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/JetBrainsMono.zip"&gt;JetBrainsMono Nerd Font&lt;/a&gt; is my favourite.&lt;/li&gt;
&lt;li&gt;
&lt;u&gt;Modify the prompt text&lt;/u&gt;: I installed &lt;a href="https://starship.rs/"&gt;Starship&lt;/a&gt; to make a custom prompt that works in a few different shells. It's got it's own config with a wide array of options to customize the text in every conceivable way. I use it to add git info, low battery indication, and package and versioning info for some languages.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I guess these 3 things are what most people do in some shape or form.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8z72JqaW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8jka4qknxyb9k3xbvmk6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8z72JqaW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8jka4qknxyb9k3xbvmk6.png" alt="custom terminal"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And this is how my terminal looks! Simple and minimal is my preference.&lt;/p&gt;

&lt;p&gt;Beyond that, you can make tweaks to use colours in more places. You can makes aliases which have the &lt;code&gt;--colors=auto&lt;/code&gt; option included. These are the most common ones:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;alias ls&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'ls --color=auto'&lt;/span&gt;
&lt;span class="nb"&gt;alias dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'dir --color=auto'&lt;/span&gt;
&lt;span class="nb"&gt;alias vdir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'vdir --color=auto'&lt;/span&gt;
&lt;span class="nb"&gt;alias grep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'grep --color=auto'&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;fgrep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'fgrep --color=auto'&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;egrep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'egrep --color=auto'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can install command-line applications if you want to augment the appearance of some standard applications. You can use &lt;a href="https://github.com/Peltoche/lsd"&gt;&lt;code&gt;lsd&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://the.exa.website/"&gt;&lt;code&gt;exa&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;ls&lt;/code&gt;. You can use &lt;a href="https://github.com/sharkdp/bat"&gt;&lt;code&gt;bat&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;cat&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;You can see that &lt;code&gt;lsd&lt;/code&gt; uses a folder icon from the nerd font for folders, and breaks the list into columns. These applications offer some visual tweaks, but vary on the amount of styling you can do. I chose &lt;code&gt;lsd&lt;/code&gt; because it offers a bit more control over appearance than &lt;code&gt;exa&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vFSyYJPl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d2rayfhgqqhkrp7c00bm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vFSyYJPl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d2rayfhgqqhkrp7c00bm.png" alt="lsd output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Overall, this feels more personal as it is closer to my taste, but it lacks personality. What can I do to add more personality? &lt;/p&gt;

&lt;p&gt;Some people like to make the terminal slightly transparent and show their desktop wallpaper. I don't! I love photography but I find it distracting! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qlkYm1gO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bejuxio7jtp6nj6867ud.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qlkYm1gO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bejuxio7jtp6nj6867ud.png" alt="transparent terminal"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I noticed that some people use &lt;a href="https://github.com/dylanaraps/neofetch"&gt;neofetch&lt;/a&gt; to flash their specs when they open a terminal. It's kind of badge of honour for some Linux enthusiasts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lASyK8hc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rmyi15llp9j313gwowau.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lASyK8hc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rmyi15llp9j313gwowau.png" alt="neofetch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Seeing specs as kind of a greeting when I open a terminal is not my thing. But the ASCII art for the logo got me thinking. Some of the logos included in neofetch are quite stylish and colourful. And there is a palette to play with (them colorful boxes in the bottom right).&lt;/p&gt;

&lt;p&gt;Could I create something like the logo but with a more polished appearance? Why do people say ASCII art? Don't we have unicode almost everywhere now? So, shouldn't there be more symbols to choose from now to make "better" text art?&lt;/p&gt;

&lt;p&gt;The net result of my experimentation is &lt;strong&gt;&lt;a href="https://github.com/robole/fetching"&gt;fetching&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0EEesSBO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7v950l80w5wyml37k3q2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0EEesSBO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7v950l80w5wyml37k3q2.png" alt="fetching logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use it to fetch random unicode art. I wanted it to be a bit playful. I want to remind myself that this computer stuff is fun, and to enjoy myself while I'm doing it! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TqQRKPw8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a5go4hffbjvwedjeknih.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TqQRKPw8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a5go4hffbjvwedjeknih.png" alt="fetching mario example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The art is &lt;strong&gt;colored based on your terminal color scheme&lt;/strong&gt;. Here are some examples side-by-side using different themes: the top-left theme is &lt;a href="https://draculatheme.com/"&gt;Dracula&lt;/a&gt;, the top-right is &lt;a href="https://ethanschoonover.com/solarized/"&gt;Solarized&lt;/a&gt;, the other two are just me playing around with colors - maybe I'm the first one to make an ultra high contrast Mario! 🤣I think the output has a different personality depending on your color scheme.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--us5mwet3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z27aji2yq59y211ha7wo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--us5mwet3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z27aji2yq59y211ha7wo.png" alt="mario theme examples"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I noticed that neofetch squashes the output if your terminal window is a bit narrow. I was able to make my scripts &lt;strong&gt;responsive to the terminal window&lt;/strong&gt;. ✨&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KBlqJepA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f10rn5z7kl5uzuwnl4oz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KBlqJepA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f10rn5z7kl5uzuwnl4oz.png" alt="garbled output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The included image scripts were mostly inspired by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;abstract art, particularly the &lt;a href="https://en.wikipedia.org/wiki/De_Stijl"&gt;De Stijl movement&lt;/a&gt; with its simplified form and limited palette&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8pBWWzYL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26nsxuwljegu1kr4tm98.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8pBWWzYL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26nsxuwljegu1kr4tm98.png" alt="mondrian"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;computer games, particularly from the 1980's and 1990's&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kH3JlAqg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udwrhwckuvbqz4va6miq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kH3JlAqg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udwrhwckuvbqz4va6miq.png" alt="space invaders"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;street art&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MNO3IcRP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q0m1byi21xljdp1xuaxb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MNO3IcRP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q0m1byi21xljdp1xuaxb.png" alt="obey"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;star wars&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f_0i6jLf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8aoyg9rsebj1dm7rwfl6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f_0i6jLf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8aoyg9rsebj1dm7rwfl6.png" alt="groku"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I add the command &lt;code&gt;fetching -r&lt;/code&gt; to my &lt;code&gt;.zshrc&lt;/code&gt; to show a random image every time I open a terminal.&lt;/p&gt;

&lt;p&gt;You can run it as a slideshow too if you want with &lt;code&gt;fetching -s 2&lt;/code&gt; , which shows a new image every 2 seconds!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---ZRRSvJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gltu14t1m9w3ey3cfl63.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---ZRRSvJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gltu14t1m9w3ey3cfl63.gif" alt="slideshow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think I have just scratched the surface. Unicode has approxmiately 143,859 unicode characters. These different forms and shapes have the potential for creating very different things. &lt;/p&gt;

&lt;p&gt;I mostly used the &lt;a href="https://en.wikipedia.org/wiki/Block_Elements"&gt;Block Elements character set&lt;/a&gt; (as below). It facilitates creating blocky compositions with a smooth texture.  As I practice and try out more characters, I think the output will be better and more variable.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;█ ▉ ▊ ▋ ▌ ▍ ▎ ▏▐ ▕ ▇ ▆ ▅ ▄ ▃ ▂ ▁  ■ ▄ ▀  ▬ ▓ ▒ ░ 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Check out the repo for more in-depth info. You need to have the Bash shell on your system installed to use it. There is an installation script to make it quick and easy to try it out. So, try it out!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/robole"&gt;
        robole
      &lt;/a&gt; / &lt;a href="https://github.com/robole/fetching"&gt;
        fetching
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A collection of *fetching* unicode art for the terminal.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
  &lt;br&gt;
    &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/robole/fetching/main/img/title/logo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Cn6v18---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/robole/fetching/main/img/title/logo.png" width="301" alt="Fetching"&gt;&lt;/a&gt;
  &lt;br&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;A collection of &lt;i&gt;fetching&lt;/i&gt; unicode art for the terminal.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You have to be in a state of play to design. If you're not in a state of play, you can't make anything.&lt;/p&gt;
&lt;p&gt;- Paula Scher&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The goal is to add a touch of beauty to your terminal, and trigger a sense of play.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/robole/fetching/main/img/mario-mytheme.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k2ley_Et--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/robole/fetching/main/img/mario-mytheme.png" alt="mario example"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The art is &lt;strong&gt;colored according to your terminal color scheme&lt;/strong&gt;. Here are some examples side-by-side using different themes: uglythe top-left theme is &lt;a href="https://draculatheme.com/" rel="nofollow"&gt;Dracula&lt;/a&gt;,the top-right is &lt;a href="https://ethanschoonover.com/solarized/" rel="nofollow"&gt;Solarized&lt;/a&gt;, the other two are just me playing around with colors! The output can have a different personality depending on your color scheme.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/robole/fetching/main/img/mario-colors.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9zgs_RYB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/robole/fetching/main/img/mario-colors.png" alt="mario colored"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The included scripts are &lt;strong&gt;responsive to the terminal window&lt;/strong&gt;. This prevents distorted output in the random and slideshow modes. 🕶️&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/robole/fetching/main/img/garbled.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nyHKRno_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/robole/fetching/main/img/garbled.png" alt="garbled output"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The included scripts are inspired by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;abstract art, particularly the &lt;a href="https://en.wikipedia.org/wiki/De_Stijl" rel="nofollow"&gt;De Stijl movement&lt;/a&gt; with its simplified forms and limited palette&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/robole/fetching/main/img/mondrian.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HMMuxBxb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/robole/fetching/main/img/mondrian.png" alt="mondrian"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;computer games, particularly from the…&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/robole/fetching"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;There is info on making your own images in there. I outline my "process". I don't know how sane or repeatable it is really! I enjoy this type of thing, it may be drudgery to you!&lt;/p&gt;

&lt;p&gt;Let me know what you think. 🙂 &lt;/p&gt;

&lt;p&gt;Got any style tips? &lt;/p&gt;

&lt;p&gt;If you have customized your terminal, share a screenshot as a comment! 📸&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;You can subscribe to my &lt;a href="https://roboleary.net/feed.xml"&gt;RSS feed&lt;/a&gt; to get my latest posts.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>linux</category>
      <category>bash</category>
    </item>
    <item>
      <title>Saving a missing referral</title>
      <author>Caio Jhonny</author>
      <pubDate>Wed, 09 Jun 2021 10:29:26 +0000</pubDate>
      <link>https://dev.to/caiojhonny/saving-a-missing-referral-4n56</link>
      <guid>https://dev.to/caiojhonny/saving-a-missing-referral-4n56</guid>
      <description>&lt;h3&gt;
  &lt;a href="#problem"&gt;
  &lt;/a&gt;
  Problem
&lt;/h3&gt;

&lt;p&gt;After the &lt;a href="https://gdpr.eu/"&gt;GDPR&lt;/a&gt;, we can no longer enable cookies without user consent. This means that we can no longer save the user's session on their first visit, losing your reference.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VikGWjrv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kfrd9o8racioe8xw1h7y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VikGWjrv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kfrd9o8racioe8xw1h7y.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-can-i-save-the-referral"&gt;
  &lt;/a&gt;
  How can I save the referral?
&lt;/h3&gt;

&lt;p&gt;We can save the referral using the localStorage property at the first access.&lt;/p&gt;

&lt;p&gt;Before saving, we need to check if there is a referral to be saved and if the referral is different from our document.location.origin to avoid saving your website as a referral (This also prevents cases where the user goes to another page of your website).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;referrer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; 
&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;referrer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;origin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;referral&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;referrer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, we can retrieve our referral when it's necessary to call our cookie function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Get the referral saved on localStorage&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;referral&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;referral&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Verify if exists&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;referral&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; 
&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;referral&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;undefined&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Define your saved referral into document.referrer&lt;/span&gt;
    &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defineProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;referrer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;get&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;referral&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// After that you can call your cookies function, analytics,  facebook pixel, etc...&lt;/span&gt;
&lt;span class="nx"&gt;callCookies&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hope it's helpful some of you 🙂&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>analytics</category>
      <category>referral</category>
      <category>frontend</category>
    </item>
  </channel>
</rss>
