<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>üë®‚Äçüíª[FirstDevRole #1] What are the Real Requirements for Becoming a Programmer?</title>
      <author>Antonio Pekeljevic</author>
      <pubDate>Tue, 26 Oct 2021 11:21:49 +0000</pubDate>
      <link>https://dev.to/antoniopk/firstdevrole-1-what-are-the-real-requirements-for-becoming-a-programmer-2e1p</link>
      <guid>https://dev.to/antoniopk/firstdevrole-1-what-are-the-real-requirements-for-becoming-a-programmer-2e1p</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-this-about"&gt;
  &lt;/a&gt;
  What is this about? ü•±
&lt;/h2&gt;

&lt;p&gt;In my opinion, the point of writing a blog is to document your journey and share it with other people so hopefully someone finds the information useful. &lt;/p&gt;

&lt;p&gt;Having that said, I have decided to share my experience and what I have learned when it comes to getting a first software developer job.&lt;/p&gt;

&lt;p&gt;I have been through the process three times already so while everything is still relatively fresh and quite a few people asked me for advice on  &lt;a href="https://twitter.com/antoniopkvc"&gt;Twitter&lt;/a&gt;, I decided to document it before it all evaporates into the void.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I7ptCQBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media3.giphy.com/media/xT9IgvJJS1SbMQXPBm/giphy.gif%3Fcid%3D790b761196328d5fe99bcfeb3fab92f8452cd39851d53143%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I7ptCQBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media3.giphy.com/media/xT9IgvJJS1SbMQXPBm/giphy.gif%3Fcid%3D790b761196328d5fe99bcfeb3fab92f8452cd39851d53143%26rid%3Dgiphy.gif%26ct%3Dg" alt="Anxious man"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is definitely going to be a series of blog posts with no specific order where I will try to extract the most important information as it comes to me. ü§∑‚Äç‚ôÇÔ∏è&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-is-this-for"&gt;
  &lt;/a&gt;
  Who is this for?
&lt;/h2&gt;

&lt;p&gt;Anyone who wants to make a career change to IT, is graduating from college, is struggling to get a first job as a programmer or just wants to give programming a try.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#topics-that-will-be-covered"&gt;
  &lt;/a&gt;
  Topics that will be covered
&lt;/h2&gt;

&lt;p&gt;These are some of the topics that I will definitely cover but might add more if I remember something that is important as well:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What are the requirements for becoming a programmer&lt;/li&gt;
&lt;li&gt;How to write a no bullshit CV/Resume that will increase your chances of getting hired&lt;/li&gt;
&lt;li&gt;What programming language / framework to start with&lt;/li&gt;
&lt;li&gt;Where to apply for your first job and which ones to consider&lt;/li&gt;
&lt;li&gt;How to build an effective portfolio website&lt;/li&gt;
&lt;li&gt;What projects to build and how&lt;/li&gt;
&lt;li&gt;Creating an effective GitHub profile&lt;/li&gt;
&lt;li&gt;How much experience is needed to start applying to jobs&lt;/li&gt;
&lt;li&gt;When to apply to an Internship vs Real Developer role&lt;/li&gt;
&lt;li&gt;Is your code good enough&lt;/li&gt;
&lt;li&gt;What to be ready for while trying to get your first programming role&lt;/li&gt;
&lt;li&gt;Mindset and motivation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first topic is covered in this post as the title says so let's start! ü¶æ&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-are-the-real-requirements-for-becoming-a-programmer"&gt;
  &lt;/a&gt;
  What are the REAL Requirements for Becoming a Programmer?
&lt;/h2&gt;

&lt;p&gt;Do you need someone to tell you if you are smart enough or do you have what it takes to become a programmer?&lt;/p&gt;

&lt;p&gt;Let me tell you this: &lt;strong&gt;Programming is not for anyone and it's not enough if you can just install Windows on your laptop. It's only for extremely talented people with IQ over 200.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Anxiety kicks in?&lt;/p&gt;

&lt;p&gt;Don't worry, I'm just kidding. &lt;/p&gt;

&lt;p&gt;Let's put it this way. If you can read and comprehend what I have written up to this point then you have everything that it takes to become a programmer. You maybe won't be a great one but it's definitely enough to get a job.&lt;/p&gt;

&lt;p&gt;Physical requirements ‚úîÔ∏è&lt;/p&gt;

&lt;p&gt;You did some googling or found this post buried deep down in the #TechTwitter history. That means you have enough interest.&lt;/p&gt;

&lt;p&gt;Interest ‚úîÔ∏è&lt;/p&gt;

&lt;p&gt;Your friend who is incredibly smart is a software engineer and there is no way that you can be that good?&lt;/p&gt;

&lt;p&gt;Actually, you can. &lt;/p&gt;

&lt;p&gt;I actually know a few people who are generally not that intelligent but are still working as developers.&lt;/p&gt;

&lt;p&gt;If it makes it any easier for you, I had the WORST grades in informatics in elementary school and in programming on college. At least get school out of the way because it's not a valid measure for anything.&lt;/p&gt;

&lt;p&gt;So what's the thing that separates people who can and who cannot become programmers?&lt;/p&gt;

&lt;p&gt;Well, the important things are exactly those two words: CAN and &lt;strong&gt;CANNOT&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Just pick one word and fill in the sentence below to find out the answer.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I ___________ become a programmer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Got it? &lt;/p&gt;

&lt;p&gt;It's REALLY a matter of decision. Do you want to become a programmer?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-it-is-a-matter-of-a-decision"&gt;
  &lt;/a&gt;
  Why it is a matter of a decision?
&lt;/h2&gt;

&lt;p&gt;Because if you don't decide firmly, you will quit somewhere along the road. Just make a decision with yourself, and even better write it somewhere, and whenever you think about quitting (which will happen a lot) just remind yourself that you have decided and that there is no way back.&lt;/p&gt;

&lt;p&gt;If you are starting from zero, don't expect a role in the next 1-2 years and be ready to dedicate A LOT of time to learn everything that is necessary to get the job. If you get it earlier than that then even better!&lt;/p&gt;

&lt;p&gt;Not a lot of people can sacrifice that much time and be that patient and that's why programming is labeled as "hard".&lt;br&gt;
It's not hard because you have to study some out of this world science, complex algorithms or math formulas - it's hard because it requires TIME and PATIENCE.&lt;/p&gt;

&lt;p&gt;So basically you have all the "skills" that you need. It is only the question if you are ready to throw yourself into the fire?&lt;/p&gt;

&lt;p&gt;If you were looking for an actual list of requirements in a video game style then here you have it:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#requirements-for-becoming-a-software-engineer"&gt;
  &lt;/a&gt;
  Requirements for becoming a software engineer:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Having a normal functioning brain and being able to type&lt;/li&gt;
&lt;li&gt;Being ready to not being able to get a job even after learning every day for a year &lt;/li&gt;
&lt;li&gt;Basic English language knowledge&lt;/li&gt;
&lt;li&gt;Being in peace with the fact that learning will NEVER end&lt;/li&gt;
&lt;li&gt;Being in peace with the fact that you will fail a lot&lt;/li&gt;
&lt;li&gt;Being comfortable with feeling stupid at times&lt;/li&gt;
&lt;li&gt;Being ready to work on your temper and impulsive reacting&lt;/li&gt;
&lt;li&gt;Being in front of a computer every day&lt;/li&gt;
&lt;li&gt;Being ready to code every day&lt;/li&gt;
&lt;li&gt;Being ready to learn the boring stuff so you can enjoy building fun stuff later&lt;/li&gt;
&lt;li&gt;Being ready to deal with difficult people&lt;/li&gt;
&lt;li&gt;Being ready to read boring or poorly written documentation&lt;/li&gt;
&lt;li&gt;Decreased social life at times&lt;/li&gt;
&lt;li&gt;Being comfortable with dreaming code (literally)&lt;/li&gt;
&lt;li&gt;Being able to think when exhausted at times&lt;/li&gt;
&lt;li&gt;Being able to think under pressure&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And last but not least: being ready to help everyone alive with their printers or failing internet connections. (funny but true, you will see)&lt;/p&gt;

&lt;p&gt;If you can sign up for all of these points above then there is nothing else I want to tell you.&lt;/p&gt;

&lt;p&gt;You have it all and are ready to start. ‚úîÔ∏è‚úîÔ∏è‚úîÔ∏è&lt;/p&gt;

&lt;p&gt;All I can tell you is good luck, DON'T QUIT and you will get your job I'm sure of that!üòÑ &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If there is a topic that you want me to cover please let me know in the comments and I will gladly add it to my list.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Day 18 of 100 Days of Code &amp; Scrum: The 3Cs of User Stories and Canceled Session</title>
      <author>Rammina</author>
      <pubDate>Tue, 26 Oct 2021 10:51:54 +0000</pubDate>
      <link>https://dev.to/rammina/day-18-of-100-days-of-code-scrum-the-3cs-of-user-stories-and-canceled-session-2d4c</link>
      <guid>https://dev.to/rammina/day-18-of-100-days-of-code-scrum-the-3cs-of-user-stories-and-canceled-session-2d4c</guid>
      <description>&lt;p&gt;Hello there, everyone!&lt;/p&gt;

&lt;p&gt;Today was an irregular Tuesday for me. Firstly, my physical therapy session was canceled because of a heavy flash flood the previous day. I wasn't sure what to do with my extra four hours for the day. I'm a person who lets my own routine guide my day-to-day life, so it feels really weird when things go differently from the usual.&lt;/p&gt;

&lt;p&gt;I spent that time doing research on "The 3Cs of User Stories" which I intend to add as another section inside my &lt;a href="https://dev.to/rammina/the-art-of-writing-agile-user-stories-17o9"&gt;user story guide&lt;/a&gt;. I think I will update it tomorrow.&lt;/p&gt;

&lt;p&gt;I also found some weird paragraphs on my user story guide, which I corrected so that it reads smoothly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VU8gaIUH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jsg89bzz2ndjpf22m73w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VU8gaIUH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jsg89bzz2ndjpf22m73w.png" alt="Focus Spam"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That 3-in-a-row &lt;code&gt;focus&lt;/code&gt; was so repetitive to read, I had to update it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I posted the initial draft for my guide, &lt;a href="https://dev.to/rammina/the-art-of-writing-agile-user-stories-17o9"&gt;"The Art of Writing Agile User Stories"&lt;/a&gt;. I'm really happy and grateful that it was successful and well-received. It's actually the first serious guide I uploaded on this platform, so I was pretty worried about it. Thank you to everyone who supported me!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are the things I learned and worked on today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RRZp0dAe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7n87q224rueqdicx6db.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RRZp0dAe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7n87q224rueqdicx6db.png" alt="3C of User Stories"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;read up on &lt;em&gt;the 3C of User Stories&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;according to the above, a user story should have:

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Card&lt;/code&gt; - a written description of the story to be used for estimation and planning.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Conversation&lt;/code&gt; - ensure a clear understanding by discussing with others. This can be through asking questions, sharing ideas, and working toward solutions.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Confirmation&lt;/code&gt; - agree upon what to build, then record the said agreement. This allows for confirmation tests to ensure that the user story is completed.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;did more practice quizzes on Scrum (almost finished with Lapshin's quizzes, so I might have to get a different set soon).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you once again for everyone's support! I wish you all the best, and have a good day.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i5XyW6iO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvr6uan67gry38xpkb18.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i5XyW6iO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvr6uan67gry38xpkb18.png" alt="Thank You Banner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.visual-paradigm.com/scrum/3c-and-invest-guide/"&gt;Effective User Stories&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Setting Up a Modern Windows Terminal for Developers in A Few Steps</title>
      <author>Thang Chung</author>
      <pubDate>Tue, 26 Oct 2021 10:41:07 +0000</pubDate>
      <link>https://dev.to/thangchung/modern-windows-terminal-for-developer-in-a-few-steps-170</link>
      <guid>https://dev.to/thangchung/modern-windows-terminal-for-developer-in-a-few-steps-170</guid>
      <description>&lt;p&gt;Somebody asks me to guide them setting up the better terminal for development as below&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZnbcLVk7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0v2yqj6zljq68vqximfa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZnbcLVk7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0v2yqj6zljq68vqximfa.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I answered to them several times, and I would like another people to use some kind of cool terminal just like this. So I documented it down in this post.&lt;/p&gt;

&lt;p&gt;I combine between Windows Terminal (&lt;code&gt;1.11.2921&lt;/code&gt;), nushell (&lt;code&gt;0.38.0&lt;/code&gt;), and starship (0.58.0) on Windows 10 machine.&lt;/p&gt;

&lt;p&gt;You can find the references at:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Windows Terminal: &lt;a href="https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701"&gt;https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;NuShell: &lt;a href="https://community.chocolatey.org/packages?q=nushell"&gt;https://community.chocolatey.org/packages?q=nushell&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Starship: &lt;a href="https://community.chocolatey.org/packages?q=Starship"&gt;https://community.chocolatey.org/packages?q=Starship&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After installing all of them on your Windows OS machine, you need to go to Nerd Font (&lt;a href="https://www.nerdfonts.com"&gt;https://www.nerdfonts.com&lt;/a&gt;) and install fonts there to have a better icons on your Windows Terminal.&lt;/p&gt;

&lt;p&gt;Some of configuration, you need to set to make sure &lt;code&gt;nushell&lt;/code&gt; can integrate good with &lt;code&gt;starship&lt;/code&gt; as below&lt;/p&gt;

&lt;p&gt;Go to &lt;code&gt;Windows Terminal&lt;/code&gt; settings, and open the settings file as&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zRJ6TE-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6zwafkeogjkh5w7ksv2c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zRJ6TE-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6zwafkeogjkh5w7ksv2c.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then make sure you add the settings for &lt;code&gt;nushell&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"commandline"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"nu.exe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"fontFace"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Fira Code"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"guid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{2b372ca1-1ee2-403d-a839-6d63077ad871}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"hidden"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Nu Shell"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And final step, you need to open up the &lt;code&gt;C:\Users\&amp;lt;your_username&amp;gt;\AppData\Roaming\nushell\nu\config&lt;/code&gt;, and find &lt;code&gt;config.toml&lt;/code&gt; (if there is no config.toml, then you have to create one). And putting some of configuration for it as following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight toml"&gt;&lt;code&gt;&lt;span class="py"&gt;prompt&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"starship prompt"&lt;/span&gt;
&lt;span class="py"&gt;startup&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;"alias ll = ls -la"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"alias d = docker"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"alias nw = cd D:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;github&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;northwind-minimal-apis"&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The config for &lt;code&gt;starship&lt;/code&gt; is at &lt;code&gt;C:\Users\&amp;lt;your_username&amp;gt;\.starship\config.toml&lt;/code&gt;, but you don't need to put anything more :)&lt;/p&gt;

&lt;p&gt;Close all current terminal windows, and open it up again.&lt;br&gt;
Happy hacking!!!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Top apps to learn something new every day</title>
      <author>Hyperlink InfoSystem Canada</author>
      <pubDate>Tue, 26 Oct 2021 10:33:17 +0000</pubDate>
      <link>https://dev.to/hyperlinkinfosystemcanada/top-apps-to-learn-something-new-every-day-2ghm</link>
      <guid>https://dev.to/hyperlinkinfosystemcanada/top-apps-to-learn-something-new-every-day-2ghm</guid>
      <description>&lt;p&gt;Today, most of us live such hectic lives that it seems impossible to find time to rest or to do something that does not belong to the daily routine. But, what if instead of wasting time doing activities that are useless, we find a moment to learn something new and thus increase our cultural level?&lt;/p&gt;

&lt;p&gt;In that free time, we could learn a new language, some words of ours that we did not know, some history and culture, geography, science and nature or simply small data to retain in our memory. &lt;/p&gt;

&lt;p&gt;Thus, at bedtime, we will know that we have been able to learn something that we did not know yesterday. There are a large number of &lt;a href="https://www.hyperlinkinfosystem.ca/android-app-development"&gt;educational applications&lt;/a&gt; designed to expand our knowledge, open our sights and teach us little curiosities that will expand our horizons.&lt;/p&gt;

&lt;p&gt;To help you in this enrichment process, we are going to give you some of the best applications that will allow you to learn something new every day.&lt;/p&gt;

&lt;p&gt;‚Ä¢ Babbel&lt;br&gt;
It is an app and also a platform for language learning. One of the most striking features of this tool is that it is intuitive and functional, and it also allows you to study at the pace you prefer: you decide how much you learn each day, and each lesson lasts only 15 minutes.&lt;/p&gt;

&lt;p&gt;In this way, you can organize yourself according to the type of person you are and it will give you greater comfort when combining it with the different activities you have to do. Babbel app includes multiple languages, so you can choose what you prefer. &lt;/p&gt;

&lt;p&gt;It is visual and attractive, easy to use and fun thanks to its great interaction. But that's not all, since Babbel is not just for learning languages in the strict sense. &lt;/p&gt;

&lt;p&gt;It will allow you to discover many other things, some curiosities about the world of languages that perhaps you did not know, such as what languages are spoken in Switzerland, what is the official language of Belgium and so on.&lt;/p&gt;

&lt;p&gt;‚Ä¢ Curiosities of history&lt;br&gt;
It is a tool that any fan of history will not be able to avoid downloading, but it can be used by anyone. As we can guess, it is an application focused on universal history, with educational content explained in simple and easy-to-understand words. &lt;/p&gt;

&lt;p&gt;It proposes a broad and enriching review of the great epochs of history and of all the historical moments that delineated the present. It is, in short, a fun game that allows you to get closer to the knowledge of names, data and even relevant dates in the history of the world.&lt;/p&gt;

&lt;p&gt;Each day will offer you a curiosity or a different piece of information, you will not have to do anything else, simply read the entry that interests us and enjoy content written by a real and professional team of historians. &lt;/p&gt;

&lt;p&gt;Besides that, you can always have a curious fact to impress others.&lt;/p&gt;

&lt;p&gt;‚Ä¢ World geography&lt;br&gt;
As its name can anticipate, we are facing an application not only ideal for learning data about other countries or continents that we did not know, but it can also become the lifeline of many young people, who are currently trying to learn the different capitals, flags, coins even religions of each country. &lt;/p&gt;

&lt;p&gt;World Geography offers you a wide variety of games with more than 6,000 questions divided into different levels and will help you by showing you images of each place (it has a repertoire of more than 2,000 images). &lt;/p&gt;

&lt;p&gt;It will help you to place the countries of the world in a pleasant and even fun way, with quizzes and questions about the flags and capitals of all countries. Put your knowledge and intelligence to the test in this new challenge.&lt;/p&gt;

&lt;p&gt;‚Ä¢ Google Arts and Culture&lt;br&gt;
This app allows you to visit the most important museums around the world and enjoy the great variety of works of art appreciating even the smallest detail. &lt;/p&gt;

&lt;p&gt;You can also discover photographs, videos and manuscripts and even create your collection of favorite works of art to share with your friends.&lt;/p&gt;

&lt;p&gt;Google Arts and Culture has a collaboration with more than 1,200 museums, galleries and institutes in 70 countries, to offer its wonders online to users.&lt;/p&gt;

&lt;p&gt;With this application, you can receive more information about the works of art by pointing the camera of your device towards them when visiting a museum. By enabling notifications, you will know the most outstanding news from the world of art and culture every day. &lt;/p&gt;

&lt;p&gt;As you may have understood, it is the perfect application for art lovers, students of this subject or for those who want to learn something new on the subject simply through one click.&lt;/p&gt;

&lt;p&gt;‚Ä¢ 7-minute workout&lt;br&gt;
Despite the fact that physical exercise should be something common in our day to day, many of us remember it only when the good weather arrives and the time to show off our body in summer approaches. &lt;/p&gt;

&lt;p&gt;If you want to start exercising but don't have the time or desire to go to the gym, with 7-minute training, you can exercise without leaving your home. &lt;/p&gt;

&lt;p&gt;This application offers centralized training programs based on HICT (high intensity circuit training) exercises, so it can be of great help if you have little free time. &lt;/p&gt;

&lt;p&gt;You will be able to realize the first results after a few days and you will see that all the efforts are worth it. The only thing you need to carry them out is a wall and a chair to support you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.hyperlinkinfosystem.ca/android-app-development"&gt;Choose the right app&lt;/a&gt; for your needs and improve your lifestyle starting with small steps. It is never too late to learn something new.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>My First Bash trying.</title>
      <author>Lucifer25x</author>
      <pubDate>Tue, 26 Oct 2021 10:33:08 +0000</pubDate>
      <link>https://dev.to/lucifer25x/my-first-bash-trying-2p4</link>
      <guid>https://dev.to/lucifer25x/my-first-bash-trying-2p4</guid>
      <description>&lt;p&gt;Github: &lt;a href="https://github.com/Lucifer25x/bash-test"&gt;https://github.com/Lucifer25x/bash-test&lt;/a&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>bash</category>
      <category>github</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Any trouble debugging in Golang?</title>
      <author>Joe Groom</author>
      <pubDate>Tue, 26 Oct 2021 10:27:48 +0000</pubDate>
      <link>https://dev.to/joe_groom_gonaviro/any-trouble-debugging-in-golang-59j2</link>
      <guid>https://dev.to/joe_groom_gonaviro/any-trouble-debugging-in-golang-59j2</guid>
      <description>&lt;p&gt;This is your invite to 'Debugging in Golang' üö´üëæ&lt;/p&gt;

&lt;p&gt;Our Golang eSeries II start's this Thursday at 19.30 CET üé•üéÉüëª. We have a GopherCon speaker, Derek Parker from RedHat discussing debugging in Go&lt;/p&gt;

&lt;p&gt;üé´ Register here: &lt;a href="https://lnkd.in/dCfzQ2ZS"&gt;https://lnkd.in/dCfzQ2ZS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;‚è∞ 1 Hour Event format:&lt;br&gt;
‚≠ê Gopher cards ice breaker game üÉè&lt;br&gt;
‚≠ê Debugging in Go (test your knowledge with tech quiz Qs) üèÜ&lt;br&gt;
‚≠ê Q &amp;amp; A with Derek (prizes for best ranked Qs) üéÅ&lt;/p&gt;

</description>
      <category>go</category>
      <category>webdev</category>
      <category>opensource</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Can you find the bug in this piece of php code? ü§π</title>
      <author>Keff</author>
      <pubDate>Tue, 26 Oct 2021 09:55:19 +0000</pubDate>
      <link>https://dev.to/nombrekeff/can-you-find-the-bug-in-this-piece-of-php-code-g7l</link>
      <guid>https://dev.to/nombrekeff/can-you-find-the-bug-in-this-piece-of-php-code-g7l</guid>
      <description>&lt;p&gt;Hey there! üëã&lt;/p&gt;

&lt;p&gt;I was doing a bit of bug-hunting in an old project of mine when I found an interesting bug. Can you find it?&lt;/p&gt;

&lt;p&gt;If you know your security or PHP this might be quite easy for you. Otherwise, it might be a good exercise.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-dont-look-at-the-comments-to-prevent-spoilers-if-you-want-to-solve-it-by-yourself-"&gt;
  &lt;/a&gt;
  !! Don't look at the comments to prevent spoilers if you want to solve it by yourself !!
&lt;/h4&gt;




&lt;p&gt;This is the request you would make to the server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;--location&lt;/span&gt; &lt;span class="nt"&gt;--request&lt;/span&gt; POST &lt;span class="s1"&gt;'https://super.secure-api.com/check-pin'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--header&lt;/span&gt; &lt;span class="s1"&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--header&lt;/span&gt; &lt;span class="s1"&gt;'Authorization: Bearer &amp;lt;token&amp;gt;'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--data-raw&lt;/span&gt; &lt;span class="s1"&gt;'{
      "pin": &amp;lt;you_answer&amp;gt;
    }'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this is the code for that given endpoint (&lt;code&gt;/check-pin&lt;/code&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'pin'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getPin&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HttpException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"The pin is incorrect"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;"The pin is correct!"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;PD: This is just a demo, not real code. You should never check passwords/pins/secrets like this.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#what-input-would-you-need-to-pass-as-raw-pin-endraw-to-be-able-to-bypass-the-check"&gt;
  &lt;/a&gt;
  What input would you need to pass as &lt;code&gt;pin&lt;/code&gt; to be able to bypass the check?
&lt;/h4&gt;

&lt;p&gt;I will release a post in a couple of days explaining the bug in detail and how to fix it.&lt;/p&gt;

</description>
      <category>php</category>
      <category>security</category>
      <category>beginners</category>
      <category>bugs</category>
    </item>
    <item>
      <title>Kubernetes Logging in Production</title>
      <author>Kentaro Wakayama</author>
      <pubDate>Tue, 26 Oct 2021 09:23:33 +0000</pubDate>
      <link>https://dev.to/coder_society/kubernetes-logging-in-production-1ld3</link>
      <guid>https://dev.to/coder_society/kubernetes-logging-in-production-1ld3</guid>
      <description>&lt;p&gt;Historically, in monolithic architectures, logs were stored directly on bare metal or virtual machines. They never left the machine disk and the operations team would check each one for logs as needed.&lt;/p&gt;

&lt;p&gt;This worked on long-lived machines, but machines in the cloud are ephemeral. As more companies run their services on containers and orchestrate deployments with Kubernetes, logs can no longer be stored on machines and implementing a log management strategy is of the utmost importance.&lt;/p&gt;

&lt;p&gt;Logs are an effective way of debugging and monitoring your applications, and they need to be stored on a separate backend where they can be queried and analyzed in case of pod or node failures. These separate backends include systems like Elasticsearch, GCP‚Äôs Stackdriver, and AWS‚Äô Cloudwatch.&lt;/p&gt;

&lt;p&gt;Storing logs off of the cluster in a storage backend is called cluster-level logging. In this article we‚Äôll discuss how to implement this approach in your own Kubernetes cluster.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#logging-architectures"&gt;
  &lt;/a&gt;
  Logging Architectures
&lt;/h2&gt;

&lt;p&gt;In a Kubernetes cluster there are two main log sources, your application and the system components.&lt;/p&gt;

&lt;p&gt;Your application runs as a container in the Kubernetes cluster and the container runtime takes care of fetching your application‚Äôs logs while Docker redirects those logs to the stdout and stderr streams. In a Kubernetes cluster, both of these streams are written to a JSON file on the cluster node.&lt;/p&gt;

&lt;p&gt;These container logs can be fetched anytime with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl logs podname
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The other source of logs are system components. Some of the system components (namely &lt;code&gt;kube-scheduler&lt;/code&gt; and &lt;code&gt;kube-proxy&lt;/code&gt;) run as containers and follow the same logging principles as your application.&lt;/p&gt;

&lt;p&gt;The other system components (&lt;code&gt;kubelet&lt;/code&gt; and &lt;code&gt;container runtime&lt;/code&gt; itself) run as a native service. If &lt;code&gt;systemd&lt;/code&gt; is available on the machine the components write logs in &lt;code&gt;journald&lt;/code&gt;, otherwise they write a &lt;code&gt;.log&lt;/code&gt; file in &lt;code&gt;/var/log&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;Now that we understand which components of your application and cluster generate logs and where they‚Äôre stored, let‚Äôs look at some common patterns to offload these logs to separate storage systems.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#logging-patterns"&gt;
  &lt;/a&gt;
  Logging Patterns
&lt;/h2&gt;

&lt;p&gt;The two most prominent patterns for collecting logs are the sidecar pattern and the DaemonSet pattern.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-daemonset-pattern"&gt;
  &lt;/a&gt;
  1. DaemonSet pattern
&lt;/h3&gt;

&lt;p&gt;In the DaemonSet pattern, logging agents are deployed as pods via the DaemonSet resource in Kubernetes. Deploying a DaemonSet ensures that each node in the cluster has one pod with a logging agent running. This logging agent is configured to read the logs from &lt;code&gt;/var/logs&lt;/code&gt; directory and send them to the storage backend. You can see a diagram of this configuration in figure 1.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TzJHu8lE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.codersociety.com/uploads/kubernetes-logging-daemonset.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TzJHu8lE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.codersociety.com/uploads/kubernetes-logging-daemonset.png" alt="DaemonSet pattern"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 1: A logging agent running per node via a DaemonSet&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-sidecar-pattern"&gt;
  &lt;/a&gt;
  2. Sidecar pattern
&lt;/h3&gt;

&lt;p&gt;Alternatively, in the sidecar pattern a dedicated container runs along every application container in the same pod. This sidecar can be of two types, streaming sidecar or logging agent sidecar.&lt;/p&gt;

&lt;p&gt;The streaming sidecar is used when you are running an application that writes the logs to a file instead of stdout/stderr streams, or one that writes the logs in a nonstandard format. In that case, you can use a streaming sidecar container to publish the logs from the file to its own stdout/stderr stream, which can then be picked up by Kubernetes itself.&lt;/p&gt;

&lt;p&gt;The streaming sidecar can also bring parity to the log structure by transforming the log messages to standard log format. You can see this pattern in figure 2.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--plvsdl6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.codersociety.com/uploads/kubernetes-logging-streaming-sidecar.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--plvsdl6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.codersociety.com/uploads/kubernetes-logging-streaming-sidecar.png" alt="Streaming sidecar pattern"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 2: Streaming sidecar pattern&lt;/p&gt;

&lt;p&gt;Another approach is the logging agent sidecar, where the sidecar itself ships the logs to the storage backend. Each pod contains a logging agent like Fluentd or Filebeat, which captures the logs from the application container and sends them directly to the storage backend, as illustrated in figure 3.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z3bIP7Sn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.codersociety.com/uploads/kubernetes-logging-logging-agent-sidecar.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z3bIP7Sn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.codersociety.com/uploads/kubernetes-logging-logging-agent-sidecar.png" alt="Logging agent sidecar pattern"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 3: Logging agent sidecar pattern  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros-and-cons"&gt;
  &lt;/a&gt;
  Pros and Cons
&lt;/h2&gt;

&lt;p&gt;Now that we‚Äôve gone over both the DaemonSet and sidecar approaches, let‚Äôs get acquainted with the pros and cons of each.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-daemonset-node-level"&gt;
  &lt;/a&gt;
  1. DaemonSet (Node Level)
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Node-level logging is easier to implement because it hooks into the existing file based logging and is less resource intensive than a sidecar approach as there are less containers running per node.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The logs are available via the kubectl command for debugging, as the log files are available to kubelet which returns the content of the log file.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Less flexibility in supporting different log structures or applications that write to log files instead of streams. You would need to modify the application log structure to achieve parity, or handle the difference in your storage backend.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Since they‚Äôre stored as JSON files on the node disk, logs can‚Äôt be held forever. You need to have a log rotation mechanism in place to recycle old logs. If you are using Container Runtime Interface, kubelet takes care of rotating the logs and no explicit solution needs to be implemented.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#2-sidecar"&gt;
  &lt;/a&gt;
  2. Sidecar
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You have the flexibility to customize sidecars per application container. For example, an application might not have the ability to write to &lt;code&gt;stdout/stderr&lt;/code&gt;, or it might have some different logging format. In these cases, a sidecar container can bring parity to the system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you‚Äôre using a logging agent sidecar without streaming, you don't need to rotate the logs because no logs are being stored on the node disk.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Running a sidecar for each application container is quite resource intensive when compared to node-level pods.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Adding a sidecar to each deployment creates an extra layer of complexity.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you‚Äôre using a streaming sidecar for an application that writes its logs to files, you‚Äôll use double the storage for the same logs because you‚Äôll be duplicating the entries.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you‚Äôre using a logging agent sidecar without streaming, you‚Äôll lose the ability to access logs via &lt;code&gt;kubectl&lt;/code&gt;. This is because &lt;code&gt;kubelet&lt;/code&gt; no longer has access to the JSON logs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With a logging agent sidecar you also need a node-level agent, otherwise you won‚Äôt be able to collect the system component logs.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#putting-theory-into-practice"&gt;
  &lt;/a&gt;
  Putting Theory into Practice
&lt;/h2&gt;

&lt;p&gt;Now that we‚Äôve looked at the possible patterns for logging in a Kubernetes cluster, let‚Äôs put them into action. We‚Äôll deploy dummy containers generating logs and create Kubernetes resources to implement the logging patterns we discussed above.&lt;/p&gt;

&lt;p&gt;For this example we‚Äôll use Fluentd as a logging agent, and we will install Elasticsearch for logging backend and Kibana for visualization purposes. We will install Elasticsearch and Kibana using Helm charts into the same cluster. Do note however that your storage backend should not be on the same cluster and we are doing it for demo purposes only. Thanks to Fluentd‚Äôs pluggable architecture, it supports various different sinks. That‚Äôs why the Elasticsearch backend can be replaced by any cloud-native solution, including Stackdriver or Cloudwatch.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-installing-elasticsearch-and-kibana"&gt;
  &lt;/a&gt;
  1. Installing Elasticsearch and Kibana
&lt;/h3&gt;

&lt;p&gt;We will deploy the Elasticsearch and Kibana using the official Helm charts which can be found here(&lt;a href="https://github.com/elastic/helm-charts/blob/master/elasticsearch"&gt;Elasticsearch&lt;/a&gt;, &lt;a href="https://github.com/elastic/helm-charts/blob/master/kibana"&gt;Kibana&lt;/a&gt;). For installing via Helm you would need a helm binary on your path but installation of Helm is outside the scope of this post.&lt;/p&gt;

&lt;p&gt;Let us start by adding helm repos.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;helm repo add elastic https://helm.elastic.co
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we will install the Elasticsearch and Kibana charts into our cluster.&lt;br&gt;
&lt;br&gt;
¬†&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;helm &lt;span class="nb"&gt;install &lt;/span&gt;elasticsearch elastic/elasticsearch
helm &lt;span class="nb"&gt;install &lt;/span&gt;kibana elastic/kibana
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will install the latest version of Elasticsearch and Kibana in your cluster which can then be used as storage backend for your logs.&lt;/p&gt;

&lt;p&gt;We have used the default values in our charts but you can change any parameter based on your needs when you are installing this in production.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#2-daemonset"&gt;
  &lt;/a&gt;
  2. DaemonSet
&lt;/h3&gt;

&lt;p&gt;We will be deploying Fluentd as a DaemonSet. To keep the verbosity low, we won‚Äôt be creating a separate ServiceAccount and ClusterRole.  But in a production environment, Fluentd pods should run with a separate service account with limited access.&lt;/p&gt;

&lt;p&gt;You can deploy Fluentd as a DaemonSet by using following the Kubernetes resource:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;extensions/v1beta1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;DaemonSet&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fluentd&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†namespace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;kube-system&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†k8s-app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fluentd-logger&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†k8s-app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fluentd-logger&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fluentd&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fluent/fluentd-kubernetes-daemonset:elasticsearch&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†¬†¬†- name:¬† FLUENT\_ELASTICSEARCH\_HOST&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;elasticsearch-master"&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†¬†¬†- name:¬† FLUENT\_ELASTICSEARCH\_PORT&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;9200"&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†volumeMounts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/log&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dockerlogs&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/lib/docker/containers&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†readOnly&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†hostPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/log&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dockerlogs&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†hostPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/lib/docker/containers&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, we‚Äôre mounting two volumes: one at &lt;code&gt;/var/log&lt;/code&gt; and another at &lt;code&gt;/var/log/docker/containers&lt;/code&gt;, where the system components and Docker runtime put the logs, respectively.&lt;/p&gt;

&lt;p&gt;The image we are using is already configured with smart defaults to be used with DaemonSet, but &lt;a href="https://hub.docker.com/r/fluent/fluentd-kubernetes-daemonset"&gt;you can change the configuration&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Save the above YAML resource in a file named &lt;code&gt;fluentd-ds.yaml&lt;/code&gt; and apply the resource via the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; fluentd-ds.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will start a Fluentd pod on each node in your Kubernetes cluster.¬†&lt;/p&gt;

&lt;p&gt;Now we‚Äôll see how to implement streaming and logging agent sidecar patterns.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-sidecar"&gt;
  &lt;/a&gt;
  3. Sidecar
&lt;/h3&gt;

&lt;p&gt;First, let‚Äôs look at the streaming sidecar pattern when our application is writing logs to a file instead of stream. We‚Äôre running a sidecar to read those logs and write it back to the stdout/stderr stream.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Pod&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;my-app&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;legacy-app&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;busybox&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†- /bin/sh&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†- -c&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†- &amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†i=0;&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†while &lt;/span&gt;&lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="s"&gt;;&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†do&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†¬†¬†echo "$i&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$(date)" &amp;gt;&amp;gt; /var/log/output.log;&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†¬†¬†i=$((i+1));&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†¬†¬†sleep 1;&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†done¬†¬†¬†¬†¬†¬†&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†volumeMounts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/log&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;streaming-sidecar&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;busybox&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;\[/bin/sh, -c, 'tail -n+1 -f /var/log/output.log'\]&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†volumeMounts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/log&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†emptyDir&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, we have a dummy container writing logs to files in the &lt;code&gt;/var/log&lt;/code&gt; directory of the container. Now these logs can‚Äôt be fetched by the container runtime, that‚Äôs why we implemented a streaming sidecar to tail the logs from the &lt;code&gt;/var/log&lt;/code&gt; location and redirect it to the &lt;code&gt;stdout&lt;/code&gt; stream.&lt;/p&gt;

&lt;p&gt;This log stream will be picked up by the container runtime and stored as a JSON file at the &lt;code&gt;/var/log&lt;/code&gt; directory on the node, which will in turn be picked up by the node-level logging agent.&lt;/p&gt;

&lt;p&gt;Now, let‚Äôs look at the logging agent sidecar. In this pattern we‚Äôll deploy Fluentd as a sidecar, which will directly write to our Elasticsearch storage backend.&lt;/p&gt;

&lt;p&gt;Unfortunately, there is no prebuilt image with an Elasticsearch plugin installed, and creating a custom Docker image is out of the scope of this article. Instead, we‚Äôll use the same Fluentd image that we used in the DaemonSet example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Pod&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;my-app&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;count&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;busybox&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†- /bin/sh&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†- -c&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†- &amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†i=0;&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†while &lt;/span&gt;&lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="s"&gt;;&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†do&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†¬†¬†echo "$i&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$(date)" &amp;gt;&amp;gt; /var/log/output.log;&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†¬†¬†i=$((i+1));&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†¬†¬†sleep 1;&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†done¬†¬†¬†¬†¬†¬†&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†volumeMounts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/log&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;logging-agent&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fluent/fluentd-kubernetes-daemonset:elasticsearch&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†- name:¬† FLUENT\_ELASTICSEARCH\_HOST&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;elastisearch-master"&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†- name:¬† FLUENT\_ELASTICSEARCH\_PORT&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;9200"&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†volumeMounts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/log&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†emptyDir&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Given the ephemeral nature of pods and nodes, it‚Äôs very important to store logs from your Kubernetes cluster in a separate storage backend. There are multiple patterns that you can use to set up the logging architecture that we discussed in this article.&lt;/p&gt;

&lt;p&gt;Note that we suggest a mix of both sidecar and node-level patterns for your production systems. This includes setting up cluster-wide, node-level logging using a DaemonSet pattern, and implementing a streaming sidecar container for applications that do not support writing logs to stream (&lt;code&gt;stdout/stderr&lt;/code&gt;) or that don‚Äôt write in a standard log format. This streaming container will automatically surface logs for node-level agents to be picked up.&lt;/p&gt;

&lt;p&gt;For the choice of storage backend, you can choose self-hosted, open-source solutions such as Elasticsearch, or you can go the managed service route with options like cloud-hosted Elasticsearch, Stackdriver, or Cloudwatch. The choice of backend that‚Äôs right for you will depend on the cost, query, and log analysis requirements that you want to implement with your architecture.&lt;/p&gt;

&lt;p&gt;For our latest insights and updates, &lt;a href="https://www.linkedin.com/company/codersociety/"&gt;follow us on LinkedIn&lt;/a&gt;&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>logging</category>
      <category>devops</category>
    </item>
    <item>
      <title>Let's program the Arduino with Javascriptü§Ø</title>
      <author>Patrick</author>
      <pubDate>Tue, 26 Oct 2021 09:17:10 +0000</pubDate>
      <link>https://dev.to/patik123/lets-program-the-arduino-with-javascript-3doj</link>
      <guid>https://dev.to/patik123/lets-program-the-arduino-with-javascript-3doj</guid>
      <description>&lt;p&gt;Have you ever programmed an Arduino? Did you know that Arduino can be programmed with JavaScript?üòè&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://store.arduino.cc/products/arduino-uno-rev3"&gt;Arduino UNO microcontroller&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;LED,&lt;/li&gt;
&lt;li&gt;220-ohm resistor,&lt;/li&gt;
&lt;li&gt;Arduino IDE installed,&lt;/li&gt;
&lt;li&gt;NodeJS installed (I recommend the latest LTS version),&lt;/li&gt;
&lt;li&gt;Visual Studio Code (or another code editor).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We must first assemble the circuit we are going to work with.&lt;/p&gt;

&lt;p&gt;A circuit similar to this is created in TinkerCad.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--djPPccT4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tf7kr02x6h4d9d74b33n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--djPPccT4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tf7kr02x6h4d9d74b33n.png" alt="Arduino circuit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once we have the circuit assembled we need to prepare our Arduino for programming with JavaScript not yet completely.&lt;/p&gt;

&lt;p&gt;We must first install the Firmata library on it.&lt;/p&gt;

&lt;p&gt;Navigate to File&amp;gt; Examples&amp;gt; Firmata&amp;gt; StandardFirmataPlus and upload the file that opens to our Arduino.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EpMTrRWC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3aig949h01ou5jdu2aw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EpMTrRWC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3aig949h01ou5jdu2aw.png" alt="Where can find Firmata Library in Arduino IDE"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Upload the code to the Arduino board by pressing the Upload.&lt;/p&gt;

&lt;p&gt;After a successful upload, we need to install some pre-required tools.&lt;/p&gt;

&lt;p&gt;Now is the time to make a directory where we will write our code for Arduino.&lt;/p&gt;

&lt;p&gt;Since I'm using a Windows computer, I had to do a couple of things before I could start programming Arduino with JavaScript.&lt;/p&gt;

&lt;p&gt;In the console with administrative privileges, enter two commands to install two more programs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nt"&gt;--add-python-to-path&lt;/span&gt; &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--global&lt;/span&gt; &lt;span class="nt"&gt;--production&lt;/span&gt; windows-build-tools
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and install the &lt;code&gt;node-gyp&lt;/code&gt; JavaScript library with the command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; node-gyp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For your operating system, check what you need to install before starting at &lt;a href="https://github.com/rwaldron/johnny-five/wiki/Getting-Started#trouble-shooting"&gt;this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After installing everything you need, we can start working.&lt;/p&gt;

&lt;p&gt;We will use the &lt;code&gt;johnny-five&lt;/code&gt; library to program the Arduino, which is one of the better libraries for programming microcontrollers. It supports Arduino, Raspberry Pi and more ... A list of all is available at &lt;a href="http://johnny-five.io/platform-support/"&gt;this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The library allows us to program many components for the Arduino. The advantage I see is that it makes many tasks easier for us compared to C ++.&lt;/p&gt;

&lt;p&gt;Code for our simple circuit.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Board&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Led&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;johnny-five&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;board&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Board&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;COM3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="c1"&gt;// Check if is your Arduino on this port (this you can make in Arduino IDE)&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;board&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ready&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;led&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Led&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;led&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;blink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, all we have to do is run the program on our Arduino. To do this, type in the command line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node main.js &lt;span class="c"&gt;# In case if our file is named main.js&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now it's your turn to start creating a variety of circuits with JavaScript and the Arduino microcontroller.&lt;/p&gt;

&lt;p&gt;If you like the content I create, you can start following me on my &lt;a href="https://twitter.com/Patik123_"&gt;Twitter account&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>arduino</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>WMS changes part 2: Background information</title>
      <author>Peter-Paul Koch</author>
      <pubDate>Tue, 26 Oct 2021 09:09:23 +0000</pubDate>
      <link>https://dev.to/coil/wms-changes-part-2-background-information-45m9</link>
      <guid>https://dev.to/coil/wms-changes-part-2-background-information-45m9</guid>
      <description>&lt;p&gt;In &lt;a href="https://dev.to/coil/wms-changes-part-1-breaking-changes-flj"&gt;part 1&lt;/a&gt; we treated two upcoming breaking changes in web monetization. This article looks ahead to potential other changes, and introduces you to the reasoning behind them. It also gives one piece of background.&lt;/p&gt;

&lt;p&gt;These changes will not take place immediately, but they will likely come into effect somewhere in 2022.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-events"&gt;
  &lt;/a&gt;
  New events
&lt;/h2&gt;

&lt;p&gt;Currently the Coil extension supports four events; you can read more about them &lt;a href="https://dev.to/coil/the-web-monetization-meta-tag-and-api-3eh9"&gt;here&lt;/a&gt;. These events are going to be revised, in particular because there is no error event that warns you of monetization stream errors.&lt;/p&gt;

&lt;p&gt;The changing of the event model may be breaking change; we can't say yet because it's not yet certain exactly what the new events are going to be.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#errors"&gt;
  &lt;/a&gt;
  Errors
&lt;/h3&gt;

&lt;p&gt;As with any request over the Internet, a lot can go wrong with web monetization requests. The Interledger protocol (ILP) that underlies web monetization is able to handle some of these problems itself. A payment request or response, or delivery of a receipt, may go wrong. Much like TCP, ILP has some built-in error correction mechanisms.&lt;/p&gt;

&lt;p&gt;These corrected errors do not have to be reported to a web page, just as regular JavaScript events do not report TCP problems. It's only when ILP cannot recover from an error and gives up that browsers should be notified and should fire an event. Thus you as a web developer know that something exceptional has happened, and can react appropriately.&lt;/p&gt;

&lt;p&gt;You might, for instance, decide to pause access to paid content, or decide to continue giving the user access for a while longer, until, for instance, several error messages have come in.&lt;/p&gt;

&lt;p&gt;The problem with errors is that there are so many types. A networking error like the one described above is one of them, and it‚Äôs a complicated one. Will the extension fire an error event if a single payment or receipt goes missing? Or only when a whole string of them disappear? That has not been decided yet.&lt;/p&gt;

&lt;p&gt;Simpler errors include the inability to connect a certain payment pointer (the pointer is probably wrong), or receiving invalid JSON as a response. Error events should certainly be fired in circumstances like these that prevent normal monetization.&lt;/p&gt;

&lt;p&gt;Maybe a property should be added that states the nature of the error; incorrect pointer, invalid JSON, or network error. You'll likely want to do different things in these circumstances. This, too, has yet to be decided.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#monetization-as-a-state-machine"&gt;
  &lt;/a&gt;
  Monetization as a state machine
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/WICG/webmonetization/issues/220"&gt;A first attempt&lt;/a&gt; has been made to define the states a web monetization stream can be in. In the future, the &lt;code&gt;state&lt;/code&gt; property will reflect the state of the stream. Currently discussed values include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;error&lt;/code&gt;: an error has occurred, as discussed above&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;active&lt;/code&gt;: all's going well&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;paused&lt;/code&gt;: monetization possible, but not occurring right now; maybe the &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tag has been temporarily disabled&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;idle&lt;/code&gt;: monetization possible, but the stream hasn't started yet.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Maybe the &lt;code&gt;paused&lt;/code&gt; and &lt;code&gt;idle&lt;/code&gt; values are going to be combined ‚Äî that depends on how much difference there is between the two states.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pointers"&gt;
  &lt;/a&gt;
  pointers
&lt;/h2&gt;

&lt;p&gt;Currently, if you want to access the payment pointer you do this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;document.monetization.pointer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The payment pointer contains the content of the &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag, for instance &lt;code&gt;$url.of.server/myID&lt;/code&gt;. Here several changes will take place as well:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;code&gt;document&lt;/code&gt; will change to &lt;code&gt;navigator&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt; the payment pointer will be in a &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tag, not a &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag and will become a valid URL instead of the current &lt;code&gt;$&lt;/code&gt;-prepended string&lt;/li&gt;
&lt;li&gt; Maybe the internal logic of &lt;code&gt;pointer&lt;/code&gt; will change as well.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://dev.to/coil/wms-changes-part-1-breaking-changes-flj"&gt;Part 1&lt;/a&gt; discussed the first two changes. Here we‚Äôll discuss the final change. Changing &lt;code&gt;pointer&lt;/code&gt;‚Äôs internal logic would probably be a breaking change.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#multiple-pointers"&gt;
  &lt;/a&gt;
  Multiple pointers
&lt;/h3&gt;

&lt;p&gt;Currently a document can have only one payment pointer at a time. Future iterations of the specification might change this ‚Äî consider, for instance, an article with three authors who split the money evenly. The document would need three payment pointers. But which one of them should be in &lt;code&gt;pointer&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;The likely answer is: none of them. Future versions of the spec will likely have a collection &lt;code&gt;pointers&lt;/code&gt; that contains all payment pointers in the document. Maybe there will be an &lt;code&gt;activePointer&lt;/code&gt; or &lt;code&gt;activePointers&lt;/code&gt; property as well to denote payment pointers that are currently active ‚Äî though it's unclear as yet how 'active pointers' will be defined.&lt;/p&gt;

&lt;p&gt;In fact, it's not yet completely clear how to define multiple payment pointers. Multiple &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tags? One tag with all the pointers? And if the three authors in the example do not split the proceeds evenly but, for instance, 50% / 25% / 25%, how are we going to add that information to the &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;? And to the JavaScript API?&lt;/p&gt;

&lt;p&gt;These questions have to be solved before &lt;code&gt;pointer&lt;/code&gt; can change.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#media-queries"&gt;
  &lt;/a&gt;
  media queries
&lt;/h2&gt;

&lt;p&gt;Currently web monetization works at the HTML and JavaScript levels. It might be a good idea to bring the third leg of the front-end stool, CSS, into the mix as well. Maybe a monetization media query could be useful. Something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.hidden-content {
    display: none;
}

@media all and (monetization: true) {
    .hidden-content {
        didplay: block;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The question is exactly how it's going to be implemented. &lt;a href="https://github.com/WICG/webmonetization/issues/189"&gt;The current discussion&lt;/a&gt; sees two options:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; A simple boolean flag: a page is either monetized or not monetized. This is what the simple example code above does.&lt;/li&gt;
&lt;li&gt; A more nuanced system where the source of the payment stream is also considered. Examples could be &lt;code&gt;ads&lt;/code&gt;, &lt;code&gt;subscription&lt;/code&gt;, &lt;code&gt;webmonetization&lt;/code&gt;, or other payment options.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The second option is clearly the most forward-thinking one, but also harder to implement. Once they support web monetization natively browsers will know if a page is web-monetized or not, but how will it learn a page is ad-monetized? Or subscription-monetized? We can probably find a solution, but it will take time.&lt;/p&gt;

&lt;p&gt;Maybe the media query will be implemented before all these issues are solved. It's possible we'll just start with the &lt;code&gt;webomnetization&lt;/code&gt; and &lt;code&gt;none&lt;/code&gt; values and add new ones as they are implemented. Thus the example above might become:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.hidden-content {
    display: none;
}

@media all and (monetization: webmonetization) {
    .hidden-content {
        didplay: block;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This discussion is still in its infancy, and it will take some time before a monetization media query actually exists.&lt;/p&gt;

&lt;p&gt;With that, you are now up to speed on the near future of web monetization. We‚Äôll let you know if new functionalities appear in the extension, or browsers start to support web monetization natively, or if the specification changes significantly.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Automated Magento Extension for Facebook Shop</title>
      <author>Ashutoshsonker786</author>
      <pubDate>Tue, 26 Oct 2021 09:08:35 +0000</pubDate>
      <link>https://dev.to/ashutoshsonker786/automated-magento-extension-for-facebook-shop-56gg</link>
      <guid>https://dev.to/ashutoshsonker786/automated-magento-extension-for-facebook-shop-56gg</guid>
      <description>&lt;p&gt;Looking to improve your sales on the world's most popular social media platform? Here's the perfect shop connector to help you grow your online store.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cedcommerce.com/magento-2-extensions/magento-2-facebook-shop-integration?utm_source=Quora&amp;amp;utm_campaign=sonker"&gt;Magento 2 Facebook Shop Integration&lt;/a&gt; is a tool that connects the Magento 2 seller panel to Facebook Shop. With its revolutionary Facebook shop product feed management, which automatically refreshes and provides updated data to the Magento store, it establishes flawless sync between Facebook shop and Magento store. Merchants can use this interface to gain access to cutting-edge online selling services such as automated product listing, synced inventory, and more. This integration acts as a link between the Facebook shop and the Magento store, allowing you to create and expand your Facebook business.&lt;/p&gt;

</description>
      <category>php</category>
      <category>javascript</category>
      <category>java</category>
      <category>react</category>
    </item>
    <item>
      <title>Server-Side Rendering of DataTables in Laravel</title>
      <author>Arman Hassan</author>
      <pubDate>Tue, 26 Oct 2021 09:03:20 +0000</pubDate>
      <link>https://dev.to/sharman/server-side-rendering-of-datatables-in-laravel-4c1i</link>
      <guid>https://dev.to/sharman/server-side-rendering-of-datatables-in-laravel-4c1i</guid>
      <description>&lt;p&gt;&lt;strong&gt;Hello&lt;/strong&gt; artisans how's everything going as a Laravel developer? Hopefully great. Working in Laravel locally or in production we need to work with datatables in many manners. Now We will see the yajra datatable with proper oriented steps to handle small and huge data records. Usually most of the developers render data on the client-side using jQuery Datatables. But when the volume of data is big, server-side rendering can boost performance. In this article, I'll discuss the process of rendering datatables on server-side using one of the most popular packages out there.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#Prerequisite"&gt;Prerequisite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Installation&amp;amp;Configuration"&gt;Installation &amp;amp; Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ModelandMigrations"&gt;Model and Migrations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#DatabaseConnection"&gt;Database Connection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#DummyDataWithFaker"&gt;Dummy Data With Faker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Controller&amp;amp;Routes"&gt;Controller &amp;amp; Routes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#SetupBladeFile"&gt;Setup Blade File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
&lt;a href="#p"&gt;&lt;/a&gt;
  Prerequisite
&lt;/h3&gt;

&lt;p&gt;Basically the prerequisite will already filled up with Laravel installation because you have to have &lt;em&gt;composer&lt;/em&gt; and installed &lt;em&gt;Laravel&lt;/em&gt; project to use yajra as well&lt;br&gt;
To install Laravel demo application latest version use the below command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;composer&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt; &lt;span class="n"&gt;laravel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;laravel&lt;/span&gt; &lt;span class="n"&gt;demoapp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#Installation&amp;amp;Configuration"&gt;&lt;/a&gt;
  Installation &amp;amp; Configuration
&lt;/h3&gt;

&lt;p&gt;In the Laravel project folder &lt;code&gt;demoapp&lt;/code&gt; and open command prompt to execute this command to get the latest updated version of yajra package&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;composer&lt;/span&gt; &lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="n"&gt;yajra&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;laravel&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;datatables&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now need to published the vendod files&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;vendor&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;publish&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;provider&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Yajra\DataTables\DataTablesServiceProvider"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now in your 'demoapp/composer.json' file you can see this yajra added to your application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt; &lt;span class="s2"&gt;"require"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"yajra/laravel-datatables-oracle"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"^9.18"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then you have to add those providers and aliases array's in &lt;code&gt;root/config/app.php&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="s1"&gt;'providers'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       
    &lt;span class="nc"&gt;Yajra\DataTables\DataTablesServiceProvider&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="p"&gt;],&lt;/span&gt;

&lt;span class="s1"&gt;'aliases'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; 
    &lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'DataTables'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Yajra\DataTables\Facades\DataTables&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;after adding the line in provider list&lt;br&gt;
then need to run this command to update and published the vendor files&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;vendor&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;publish&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;provider&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Yajra\DataTables\DataTablesServiceProvider"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now good to go and serve the application, with artisan command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;serve&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
 now type this url in the browser to see the welcome page of laravel  &lt;code&gt;http://127.0.0.1:8000/&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--le8ZFIoq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hnl19slj28sfobqwwmvu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--le8ZFIoq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hnl19slj28sfobqwwmvu.png" alt="Laravel welcome page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ModelandMigrations"&gt;&lt;/a&gt;
  Model and Migrations
&lt;/h3&gt;

&lt;p&gt;To set up the database we need to create a model and migration table for the schema. run this command to create a model and migration at the same time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are creating a &lt;code&gt;customer&lt;/code&gt; schema table for our &lt;code&gt;demoapp&lt;/code&gt; and the &lt;code&gt;-m&lt;/code&gt; is responsible for creating the migration table.&lt;br&gt;
Open up the &lt;code&gt;database/migrations/2021_10_05_100745_create_customers_table&lt;/code&gt; file and create the customer table schema.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Database\Migrations\Migration&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Database\Schema\Blueprint&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Support\Facades\Schema&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CreateCustomersTable&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Migration&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Schema&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'customers'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Blueprint&lt;/span&gt; &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;id&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'phone'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'address'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;timestamps&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;down&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Schema&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;dropIfExists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'customers'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open up the &lt;code&gt;app/Models/Customer.php&lt;/code&gt; to add the $fillable array in the &lt;code&gt;Customer Model&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Models&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Database\Eloquent\Factories\HasFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Database\Eloquent\Model&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Model&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;HasFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$fillable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'phone'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'address'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#DatabaseConnection"&gt;&lt;/a&gt;
  Database Connection
&lt;/h3&gt;

&lt;p&gt;Create a database to connect with the laravel application. I'm using &lt;code&gt;MySQl&lt;/code&gt; database for my &lt;code&gt;demoapp&lt;/code&gt; now got to the &lt;code&gt;demoapp/.env&lt;/code&gt; file and the database name and connection setup&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="no"&gt;DB_CONNECTION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;
&lt;span class="no"&gt;DB_HOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;127.0.0.1&lt;/span&gt;
&lt;span class="no"&gt;DB_PORT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3306&lt;/span&gt;
&lt;span class="no"&gt;DB_DATABASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;demoapp&lt;/span&gt;
&lt;span class="no"&gt;DB_USERNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;
&lt;span class="no"&gt;DB_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#DummyDataWithFaker"&gt;&lt;/a&gt;
  Dummy Data With Faker
&lt;/h3&gt;

&lt;p&gt;we need to create some dummy data to test the yajra-datatables. using faker and DatabaseSeeder.&lt;br&gt;
need to this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;factory&lt;/span&gt; &lt;span class="nc"&gt;CustomerFactory&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nc"&gt;Customer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;command to create &lt;code&gt;CustomerFactory&lt;/code&gt; go to the &lt;code&gt;database/factories/CustomerFactory.php&lt;/code&gt; and add those code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;Database\Factories&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Models\Customer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Database\Eloquent\Factories\Factory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CustomerFactory&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Factory&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;definition&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s2"&gt;"name"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;faker&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
            &lt;span class="s2"&gt;"phone"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;faker&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;phoneNumber&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;"email"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;faker&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;safeEmail&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;"address"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;faker&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;
        &lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in the &lt;code&gt;database/seeds/DatabaseSeeder.php&lt;/code&gt; file add this line&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;Database\Seeders&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Database\Seeder&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DatabaseSeeder&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Seeder&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;App\Models\Customer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;now run this command to seed data into the database&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;migrate&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;now we got 1000 customer data in the database&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A9MbkD3G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og5ia2txfba9nsdyobd4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A9MbkD3G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og5ia2txfba9nsdyobd4.png" alt="database"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#Controller&amp;amp;Routes"&gt;&lt;/a&gt;
  Controller &amp;amp; Routes
&lt;/h3&gt;

&lt;p&gt;Need to create a CustomerController for the functions for fetch data and display in the Yajra database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;controller&lt;/span&gt; &lt;span class="nc"&gt;CustomerController&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the &lt;code&gt;app/Http/Controllers/CustomerController.php&lt;/code&gt; need to write the method for fetching the data dynamically into the yajra datatables&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Http\Controllers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;DataTables&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Models\Customer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Http\Request&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CustomerController&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Controller&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Request&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'customers'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;latest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;Datatables&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addIndexColumn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addColumn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'action'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$row&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                    &lt;span class="nv"&gt;$actions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
                    &lt;span class="s1"&gt;'&amp;lt;a href="#" class="btn btn-sm btn-primary"&amp;gt;Edit&amp;lt;/a&amp;gt;
                    &amp;lt;a href="#" class="btn btn-sm btn-danger"&amp;gt;Delete&amp;lt;/a&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$actions&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;})&lt;/span&gt;
                &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;rawColumns&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'action'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's create a route for handling the request responses&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Support\Facades\Route&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Http\Controllers\CustomerController&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nc"&gt;Route&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'welcome'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nc"&gt;Route&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/customer'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nc"&gt;CustomerController&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'customer'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#SetupBladeFile"&gt;&lt;/a&gt;
  Setup Blade Files
&lt;/h3&gt;

&lt;p&gt;Go to &lt;code&gt;resources/views/welcome.blade.php&lt;/code&gt; file and set the blade file to show datatable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Laravel Yajra Datatable&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"csrf-token"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"{{ csrf_token() }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.datatables.net/1.10.21/css/jquery.dataTables.min.css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.datatables.net/1.10.21/css/dataTables.bootstrap4.min.css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"row"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"margin: 1rem;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-center "&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Laravel Yajra Datatable&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"padding-top:40px; border-radius: 5px;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;table&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"table table-striped yajra-datatable"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"padding-top:10px;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;thead&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;No&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Name&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Phone&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Email&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Address&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Action&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/thead&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;tbody&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/tbody&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.0/jquery.validate.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.yajra-datatable&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;DataTable&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;processing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;serverSide&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;{{ url('customer') }}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;phone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;phone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;address&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;address&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;action&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;action&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                &lt;span class="na"&gt;orderable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                &lt;span class="na"&gt;searchable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's all the data loaded in server-side&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SdpnbS7o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/na456hi927prxj9pache.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SdpnbS7o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/na456hi927prxj9pache.png" alt="welcome page with data"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#Conclusion"&gt;&lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Yajra DataTables server-side processing system is much easier to use and render huge datas within a few minutes. Highly recommended to use yajra datatables.&lt;/p&gt;

</description>
      <category>php</category>
      <category>laravel</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
