<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>You don't need "if"</title>
      <author>LUKESHIRU</author>
      <pubDate>Fri, 03 Dec 2021 19:36:21 +0000</pubDate>
      <link>https://dev.to/vangware/you-dont-need-if-37f1</link>
      <guid>https://dev.to/vangware/you-dont-need-if-37f1</guid>
      <description>&lt;p&gt;It was the first day in my last year of tech high school. The new programming teacher arrived and stood silent for a second, and then he started the lesson:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This year we will create a state machine with persistence using C++. This state machine will be a light-bulb that can be turned on, or off.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We all just look at each other thinking "ok, that will be easy"... and then he dropped the bomb:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There's a catch: You'll not be allowed to use &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;for&lt;/code&gt; for it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now the class was clearly confused. Flow control is one of the first things we all learn as programmers. The main objective of that teacher was to teach us that we need to stop thinking conditions as &lt;code&gt;if&lt;/code&gt;, repetitions as &lt;code&gt;for&lt;/code&gt;, and so on, and instead be more abstract with the logic on our code. In JavaScript we have:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;if/else&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;for/of/in&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;while&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;do/while&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;switch/case&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;try/catch&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will go through that list and learn about the cleaner and safer alternatives we have.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conditions-ifswitch"&gt;
  &lt;/a&gt;
  Conditions (if/switch)
&lt;/h2&gt;

&lt;p&gt;Let's take this simple example as a starting point:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;welcomeMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;admin&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Welcome, administrator!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So we have a function &lt;code&gt;welcomeMessage&lt;/code&gt; which takes a user object and returns a message which depends on the user role. Now, because this if is quite simple, we might spot already that this has an issue, but JavaScript itself doesn't give us any kind of error. We don't have a default value for that message, so we need to do something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;welcomeMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;admin&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Welcome, user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Welcome, administrator!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Or&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;welcomeMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;admin&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Welcome, administrator!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Welcome, user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As I said in the introduction, we don't need &lt;code&gt;if&lt;/code&gt; for this, we can use a ternary instead. A ternary has this shape:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;boolean ? valueForTrue : valueForFalse
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So we can change &lt;code&gt;welcomeMessage&lt;/code&gt; to be like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;welcomeMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;admin&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;admin&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Welcome, administrator!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Welcome, user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Or&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;welcomeMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;admin&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="s2"&gt;`Welcome, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;admin&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;administrator&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ternaries have 3 advantages over ifs:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;They force us to cover all the logic branches (we are forced to have "else in all our ifs").&lt;/li&gt;
&lt;li&gt;They reduce the amount of code drastically (we just use a &lt;code&gt;?&lt;/code&gt; and a &lt;code&gt;:&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;They force us to use conditional values instead of conditional blocks, which results in us moving logic from if blocks to their own functions.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The main argument against ternaries is that they become hard to read if we have several levels of nested &lt;code&gt;if&lt;/code&gt;s (&lt;code&gt;if&lt;/code&gt;s inside an &lt;code&gt;if&lt;/code&gt;s), and that's true, but I see that as yet another advantage. If you need to nest logic, that means that you need to move that logic away. So, let's have yet another example for this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;welcomeMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;canMod&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="s2"&gt;`Welcome, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;
        &lt;span class="nx"&gt;canMod&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;role&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;ADMIN&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;administrator&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;moderator&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That became hard to read quite easily, but that means that we need to move some logic away from &lt;code&gt;welcomeMessage&lt;/code&gt;, so we need to do something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;roleText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;role&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;ADMIN&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;administrator&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;moderator&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;welcomeMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;canMod&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="s2"&gt;`Welcome, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;canMod&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;roleText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We covered &lt;code&gt;if&lt;/code&gt; already, but what about &lt;code&gt;switch&lt;/code&gt;? We can use a combination of plain objects and the &lt;code&gt;??&lt;/code&gt; operator, so we go from this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;welcomeMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="na"&gt;ADMIN&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Welcome, administrator!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="na"&gt;MOD&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Welcome, moderator!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Welcome, user!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;roleToText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ADMIN&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;administrator&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;MOD&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;moderator&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}[&lt;/span&gt;&lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;welcomeMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`Welcome, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;roleToText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;!`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For those not familiar with the &lt;code&gt;??&lt;/code&gt; operator, it works like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;possiblyNullishValue ?? defaultValue
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;possiblyNullishValue&lt;/code&gt; can be either a value or "nullish" (&lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;). If it is nullish, then we use &lt;code&gt;defaultValue&lt;/code&gt;, if it isn't nullish then we use the value itself. Previous to this, we used to use &lt;code&gt;||&lt;/code&gt;, but that goes to the default for all falsy values (&lt;code&gt;0&lt;/code&gt;, &lt;code&gt;0n&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;NaN&lt;/code&gt; and &lt;code&gt;""&lt;/code&gt;), and we don't want that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#error-handling-trycatch"&gt;
  &lt;/a&gt;
  Error handling (try/catch).
&lt;/h2&gt;

&lt;p&gt;When we want to run something that might throw an error, we wrap it with a &lt;code&gt;try/catch&lt;/code&gt;, as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;safeJSONParse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;parsed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;parsed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Leave `parsed` `undefined` if parsing fails&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;parsed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;works&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;safeJSONParse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;{}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// {}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fails&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;safeJSONParse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;..&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But we can get rid of that as well, using Promises. When you throw inside a promise, it goes to the &lt;code&gt;catch&lt;/code&gt; handler automatically, so we can replace the code above with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;safeJSONParse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
        &lt;span class="c1"&gt;// If it fails, just return undefined&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;safeJSONParse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;{}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;works&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="cm"&gt;/* {} */&lt;/span&gt;
&lt;span class="p"&gt;}));&lt;/span&gt;

&lt;span class="nx"&gt;safeJSONParse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;..&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fails&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="cm"&gt;/* undefined */&lt;/span&gt;
&lt;span class="p"&gt;}));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or you can just use &lt;code&gt;async/await&lt;/code&gt; and...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;works&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;safeJSONParse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;{}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// {}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fails&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;safeJSONParse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;..&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#loops-forwhile"&gt;
  &lt;/a&gt;
  Loops (for/while)
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;for&lt;/code&gt; and &lt;code&gt;while&lt;/code&gt; statements are used to loop over a "list" of things, but nowadays we have way better ways of doing that with the methods that come with some of those lists (arrays) or other functions that help us keep the same type of looping for objects as well. So let's start with the easiest, which is arrays:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Luke&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Gandalf&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="nx"&gt;_000&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;// Just logging&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`The age of &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Calculating average&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ageTotal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ageTotal&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`The average age is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;ageTotal&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Generating new array from previous&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;usersNextYear&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;usersNextYear&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead of using &lt;code&gt;for&lt;/code&gt; for this, you can just use the &lt;code&gt;Array.prototype.forEach&lt;/code&gt; for the logs, &lt;code&gt;Array.prototype.reduce&lt;/code&gt; for the average and &lt;code&gt;Array.prototype.map&lt;/code&gt; for creating a new array from the previous one:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Just logging&lt;/span&gt;
&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`The age of &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="c1"&gt;// Calculating average&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s2"&gt;`The average age is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Generating new array from previous&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;usersNextYear&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;}));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There is an array method for pretty much everything you want to do with an array. Now, the "problems" start when we want to loop over objects:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;Luke&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;Gandalf&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="nx"&gt;_000&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Just logging&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;ages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`The age of &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;ages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Calculating average&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ageTotal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ageCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;ages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ageTotal&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;ages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="nx"&gt;ageCount&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`The average age is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;ageTotal&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;ageCount&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Generating new object from previous&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;agesNextYear&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;ages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;agesNextYear&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I put the word "problem" between quotes because it was a problem before, but now we have great functions in &lt;code&gt;Object&lt;/code&gt;: &lt;code&gt;Object.entries&lt;/code&gt; and &lt;code&gt;Object.fromEntries&lt;/code&gt;. &lt;code&gt;Object.entries&lt;/code&gt; turns an object into an array of tuples, with the format &lt;code&gt;[key, value]&lt;/code&gt;, and &lt;code&gt;Object.fromEntries&lt;/code&gt; takes an array of tuples with that format, and returns a new object. So we can use all the same methods we would use with arrays, but with objects, and then get an object back:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Just logging&lt;/span&gt;
&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ages&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(([&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`The age of &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;ages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Calculating average&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s2"&gt;`The average age is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ages&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Generating new object from previous&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;agesNextYear&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromEntries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ages&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(([&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The most common argument about this approaches for loops is not against &lt;code&gt;Array.prototype.map&lt;/code&gt; or &lt;code&gt;Array.prototype.forEach&lt;/code&gt; (because we all agree those are better), but mainly against &lt;code&gt;Array.prototype.reduce&lt;/code&gt;. I made a &lt;a href="https://dev.to/lukeshiru/reduce-or-for-of-1lg"&gt;post&lt;/a&gt; on the topic in the past, but the short version would be: Just use whatever makes the code more readable for you and your teammates. If the reduce approach ends up being too verbose, you can also just do a similar approach to the one with &lt;code&gt;for&lt;/code&gt;, but using &lt;code&gt;Array.prototype.forEach&lt;/code&gt; instead:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ageTotal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(({&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ageTotal&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`The average age is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;ageTotal&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts
&lt;/h2&gt;

&lt;p&gt;I want to emphasize something that usually gets lost in this series of articles I'm doing: The keyword in the title is &lt;strong&gt;NEED&lt;/strong&gt;. I'm not saying you shouldn't use &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;for&lt;/code&gt;/&lt;code&gt;while&lt;/code&gt; and so on, I'm just saying that you might not &lt;strong&gt;need&lt;/strong&gt; them, that you can code without them, and in some scenarios is even simpler (the majority of scenarios from my point of view). One of the names I considered for this series was "re-evaluating our defaults", because what I'm looking for is not to change 100% of your coding style, but actually to make you wonder:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Do I really &lt;strong&gt;NEED&lt;/strong&gt; to do this, or is there a simpler way?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, as usual, my final question for you is: Do you think you &lt;strong&gt;need&lt;/strong&gt; &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, and so on? Don't you think there might be a better way of solving that same issue with a simpler approach?&lt;/p&gt;

&lt;p&gt;Thanks for reading this and if you disagree with something said in this post, just leave a comment and we can discuss it further.&lt;/p&gt;

&lt;p&gt;See you in the next post of this series!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>codequality</category>
      <category>functional</category>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 3rd December 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 03 Dec 2021 19:15:48 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-3rd-december-2021-12f5</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-3rd-december-2021-12f5</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-open-props"&gt;
  &lt;/a&gt;
  1. Open Props
&lt;/h3&gt;

&lt;p&gt;CSS custom properties to help accelerate adaptive and consistent design. Useful in any framework&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/argyleink"&gt;
        argyleink
      &lt;/a&gt; / &lt;a href="https://github.com/argyleink/open-props"&gt;
        open-props
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      CSS custom properties to help accelerate adaptive and consistent design.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1134620/141246730-7df4cf2a-6249-42ca-a01b-494c3ccddabe.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JgczIvib--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/1134620/141246730-7df4cf2a-6249-42ca-a01b-494c3ccddabe.png" alt="Frame 2"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Open Source CSS Variables&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;gradients&lt;/code&gt; &lt;code&gt;animations&lt;/code&gt; &lt;code&gt;sizes&lt;/code&gt; &lt;code&gt;easings&lt;/code&gt; &lt;code&gt;colors&lt;/code&gt; &lt;code&gt;shadows&lt;/code&gt; &lt;code&gt;aspect-ratios&lt;/code&gt; &lt;code&gt;z-indexes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/argyleink/open-props/actions/workflows/tests.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gP2nbRWn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/argyleink/open-props/actions/workflows/tests.yml/badge.svg%3Fbranch%3Dmain" alt="Tests"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;
Need help?   👉   &lt;a href="https://discord.gg/AqA4fU886r" rel="nofollow"&gt;Discord&lt;/a&gt;
&lt;/h3&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;h4&gt;
CDN&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://unpkg.com/open-props" rel="nofollow"&gt;https://unpkg.com/open-props&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
CLI&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;npm run gen:op&lt;/code&gt; - runs through &lt;code&gt;src/&lt;/code&gt; js files and creates the PostCSS files in &lt;code&gt;src/&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run gen:nowhere&lt;/code&gt;  - creates a version of Open Props without the use of &lt;code&gt;:where()&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run gen:prefixed&lt;/code&gt; - creates a version of Open Props with each prop prefixed with &lt;code&gt;op&lt;/code&gt;, like &lt;code&gt;--op-font-size-1&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run bundle&lt;/code&gt; - creates all the various minified bundles of props&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm run lib:js&lt;/code&gt; - builds the JS modules for NPM&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/argyleink/open-props"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#2-pollyjs"&gt;
  &lt;/a&gt;
  2. Polly.JS
&lt;/h3&gt;

&lt;p&gt;Record, Replay, and Stub HTTP Interactions. A standalone, framework-agnostic JavaScript library that enables recording, replaying, and stubbing of HTTP interactions.  &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Netflix"&gt;
        Netflix
      &lt;/a&gt; / &lt;a href="https://github.com/Netflix/pollyjs"&gt;
        pollyjs
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Record, Replay, and Stub HTTP Interactions.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/265fae5d3f6c389cde92b01a2a25ffd3ca81e3830f5a52275119e878e7783aa3/68747470733a2f2f6e6574666c69782e6769746875622e696f2f706f6c6c796a732f6173736574732f696d616765732f776f72646d61726b2d6c6f676f2d616c742e706e67"&gt;&lt;img alt="Polly.JS" width="400px" src="https://camo.githubusercontent.com/265fae5d3f6c389cde92b01a2a25ffd3ca81e3830f5a52275119e878e7783aa3/68747470733a2f2f6e6574666c69782e6769746875622e696f2f706f6c6c796a732f6173736574732f696d616765732f776f72646d61726b2d6c6f676f2d616c742e706e67"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
Record, Replay, and Stub HTTP Interactions&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://travis-ci.com/Netflix/pollyjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a806184d550045b6edce9ec7bb7bd9e2002b4800125ab24978346e39a4d99a4c/68747470733a2f2f7472617669732d63692e636f6d2f4e6574666c69782f706f6c6c796a732e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/09f8ccb66f9ad5e1961259747f2ae4e2acfaa0e107d59d61f17ef9fa7e7a5d1e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f4e6574666c69782f706f6c6c796a732e737667" alt="license"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Polly.JS is a standalone, framework-agnostic JavaScript library that enables recording, replaying, and stubbing of HTTP interactions. By tapping into multiple request APIs across both Node &amp;amp; the browser, Polly.JS is able to mock requests and responses with little to no configuration while giving you the ability to take full control of each request with a simple, powerful, and intuitive API.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Interested in contributing or just seeing Polly in action? Head over to &lt;a href="https://github.com/Netflix/pollyjsCONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; to learn how to spin up the project!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
Why Polly?&lt;/h2&gt;
&lt;p&gt;Keeping fixtures and factories in parity with your APIs can be a time consuming process
Polly alleviates this process by recording and maintaining actual server responses while also staying flexible.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Record your test suite's HTTP interactions and replay them during future test runs for fast, deterministic, accurate tests.&lt;/li&gt;
&lt;li&gt;Use Polly's client-side server to modify or intercept requests and responses to simulate…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Netflix/pollyjs"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-awesome-advent-of-code"&gt;
  &lt;/a&gt;
  3. Awesome Advent of Code
&lt;/h3&gt;

&lt;p&gt;A collection of awesome resources related to the yearly Advent of Code challenge.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Bogdanp"&gt;
        Bogdanp
      &lt;/a&gt; / &lt;a href="https://github.com/Bogdanp/awesome-advent-of-code"&gt;
        awesome-advent-of-code
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A collection of awesome resources related to the yearly Advent of Code challenge.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Awesome Advent of Code&lt;/h1&gt;
&lt;p&gt;This is a collection of awesome resources related to the yearly
&lt;a href="https://adventofcode.com/" rel="nofollow"&gt;Advent of Code&lt;/a&gt; challenge.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://adventofcode.com/" rel="nofollow"&gt;The Official AoC Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/adventofcode/" rel="nofollow"&gt;The AoC Subreddit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#project-templates"&gt;Project Templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#tools-and-utilities"&gt;Tools and Utilities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#other-advent-calendars"&gt;Other Advent Calendars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code/2018.md"&gt;2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code/2019.md"&gt;2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code/2020.md"&gt;2020&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#2021"&gt;2021&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#solutions"&gt;Solutions&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#ada"&gt;Ada&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#assembly"&gt;Assembly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#awk"&gt;AWK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#Bash"&gt;Bash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#c"&gt;C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#c-1"&gt;C#&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#c-2"&gt;C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#clojure"&gt;Clojure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#common-lisp"&gt;Common Lisp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#crystal"&gt;Crystal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#d"&gt;D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#dart"&gt;Dart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#elixir"&gt;Elixir&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#elm"&gt;Elm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#erlang"&gt;Erlang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#excel"&gt;Excel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#f"&gt;F#&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#go"&gt;Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#groovy"&gt;Groovy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#hamler"&gt;Hamler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#haskell"&gt;Haskell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#haxe"&gt;Haxe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#idris"&gt;Idris&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#J"&gt;J&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#java"&gt;Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#javascript"&gt;JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#jq"&gt;jq&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#julia"&gt;Julia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#kotlin"&gt;Kotlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#ldpl"&gt;LDPL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#lua"&gt;Lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#matlab"&gt;MATLAB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#nim"&gt;Nim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#objc"&gt;Objective-C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#ocaml"&gt;OCaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#php"&gt;PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#perl"&gt;Perl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#pony"&gt;Pony&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#powershell"&gt;PowerShell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#prolog"&gt;Prolog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#python"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#r"&gt;R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#racket"&gt;Racket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#raku"&gt;Raku&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#reasonml"&gt;ReasonML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#red"&gt;Red&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#ruby"&gt;Ruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#rust"&gt;Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#smalltalk"&gt;Smalltalk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#scala"&gt;Scala&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#scheme"&gt;Scheme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#solidity"&gt;Solidity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#spectx"&gt;SpectX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#sql"&gt;SQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#swift"&gt;Swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#typescript"&gt;TypeScript&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#deno"&gt;Deno&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#unison"&gt;Unison&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#vbnet"&gt;VB.NET&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#whitespace"&gt;Whitespace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#zig"&gt;Zig&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code#live-streams"&gt;Live Streams&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Project Templates&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Templates, cookiecutters and skeletons for quickly setting up projects
in your favourite language.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/ManasJayanth/reason-aoc-starter"&gt;Reason Starter kit for Advent of Code&lt;/a&gt; &lt;em&gt;(Reason and OCaml)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dave-burke/advent-of-code-java-starter"&gt;dave-burke/advent-of-code-java-starter&lt;/a&gt; &lt;em&gt;(Java)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/gobanos/cargo-aoc"&gt;gobanos/cargo-aoc&lt;/a&gt; &lt;em&gt;(Rust)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nickyvanurk/advent-of-code-rust-template"&gt;nickyvanurk/advent-of-code-rust-template&lt;/a&gt; &lt;em&gt;(Rust)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/hughjdavey/aoc-kotlin-starter"&gt;hughjdavey/aoc-kotlin-starter&lt;/a&gt; &lt;em&gt;(Kotlin)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kindermoumoute/adventofcode/tree/master/template"&gt;kindermoumoute/adventofcode&lt;/a&gt; &lt;em&gt;(Go)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/staylorwr/elixir_aoc"&gt;staylorwr/elixir_aoc&lt;/a&gt; &lt;em&gt;(Elixir)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mhanberg/advent-of-code-elixir-starter"&gt;mhanberg/advent-of-code-elixir-starter&lt;/a&gt; &lt;em&gt;(Elixir)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/AlexeSimon/adventofcode"&gt;AlexeSimon/adventofcode&lt;/a&gt; &lt;em&gt;(Python)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/UncleCJ/advent-of-code"&gt;UncleCJ/advent-of-code&lt;/a&gt; &lt;em&gt;(Jupyter Python Notebooks)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindrekjr/AdventOfCodeBase"&gt;sindrekjr/AdventOfCodeBase&lt;/a&gt; &lt;em&gt;(C#)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Bogdanp/awesome-advent-of-code"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#4-posthog"&gt;
  &lt;/a&gt;
  4. PostHog
&lt;/h3&gt;

&lt;p&gt;PostHog is an open-source product analytics suite, built for developers. Automate the collection of every event on your website or app, with no need to send data to third-parties.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/PostHog"&gt;
        PostHog
      &lt;/a&gt; / &lt;a href="https://github.com/PostHog/posthog"&gt;
        posthog
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🦔 PostHog provides open-source product analytics that you can self-host. 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/65415371/124739522-d8393d00-df11-11eb-9741-820955887d21.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U3zeLgJh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/65415371/124739522-d8393d00-df11-11eb-9741-820955887d21.png" width="1000px"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;a href="https://posthog.com/contributors" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dd7848408adb5010ee29e995455255edb1ce558a93e6b886a644d3d4f4b8b514/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d3139302d6f72616e67652e7376673f7374796c653d666c61742d737175617265"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;p&gt;PostHog is an open-source product analytics suite, built for developers. Automate the collection of every event on your website or app, with no need to send data to third-parties.&lt;/p&gt;
&lt;p&gt;You can deploy on your own infrastructure, and PostHog plays nicely with data warehouses through plugins for import, transformation, and export.&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/65415371/124739629-f43cde80-df11-11eb-9033-c5d1d7194f03.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tP8FLHKD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/65415371/124739629-f43cde80-df11-11eb-9033-c5d1d7194f03.png" width="50px"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Quick start&lt;/h2&gt;
&lt;p&gt;It's easy and free to get started.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posthog.com/docs/self-host/overview#deploy" rel="nofollow"&gt;Deploy PostHog Self-Hosted&lt;/a&gt; in your existing infrastructure.&lt;/p&gt;
&lt;p&gt;... or use &lt;a href="https://app.posthog.com/signup" rel="nofollow"&gt;PostHog Cloud&lt;/a&gt; if you don't need to self-host.&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/65415371/124739888-2cdcb800-df12-11eb-8952-5be64764a7aa.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ajWBwkTA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/65415371/124739888-2cdcb800-df12-11eb-8952-5be64764a7aa.png" width="50px"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Event-based&lt;/strong&gt; analytics at a user level - capture your product's usage data to see which users are doing what in your application.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Product data visualizations&lt;/strong&gt;: &lt;a href="https://posthog.com/docs/features/trends" rel="nofollow"&gt;graphs&lt;/a&gt;, &lt;a href="https://posthog.com/docs/features/funnels" rel="nofollow"&gt;funnels&lt;/a&gt;, &lt;a href="https://posthog.com/docs/features/cohorts" rel="nofollow"&gt;user cohorts&lt;/a&gt;, &lt;a href="https://posthog.com/docs/features/paths" rel="nofollow"&gt;user paths&lt;/a&gt;, &lt;a href="https://posthog.com/docs/features/retention" rel="nofollow"&gt;retention tables&lt;/a&gt;, and &lt;a href="https://posthog.com/docs/features/dashboards" rel="nofollow"&gt;dashboards&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Complete control&lt;/strong&gt; over your data - &lt;a href="https://posthog.com/docs/self-host/overview#deploy" rel="nofollow"&gt;host it yourself&lt;/a&gt; in any infrastructure.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Session recording&lt;/strong&gt; to &lt;a href="https://posthog.com/docs/features/session-recording" rel="nofollow"&gt;watch videos&lt;/a&gt; of your users' behavior, with fine-grained privacy controls.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Automatically capture&lt;/strong&gt; &lt;a href="https://posthog.com/docs/features/actions" rel="nofollow"&gt;clicks and pageviews&lt;/a&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/PostHog/posthog"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#5-markdownit"&gt;
  &lt;/a&gt;
  5. markdown-it
&lt;/h3&gt;

&lt;p&gt;Markdown parser, done right. 100% CommonMark support, extensions, syntax plugins &amp;amp; high speed&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/markdown-it"&gt;
        markdown-it
      &lt;/a&gt; / &lt;a href="https://github.com/markdown-it/markdown-it"&gt;
        markdown-it
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Markdown parser, done right. 100% CommonMark support, extensions, syntax plugins &amp;amp; high speed
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
markdown-it &lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/markdown-it/markdown-it/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wKtX86pt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/markdown-it/markdown-it/workflows/CI/badge.svg" alt="CI"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.org/package/markdown-it" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/399fafd115abfdcd085097ca2974f95951909294d22f2babef8f4633e95cedf5/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6d61726b646f776e2d69742e7376673f7374796c653d666c6174" alt="NPM version"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/markdown-it/markdown-it?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c90ad86d6172fb930cdbbf2ec719a8f96a6ff564d2218ab636c5b25aae920c94/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6d61726b646f776e2d69742f6d61726b646f776e2d69742f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/markdown-it/markdown-it" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5dbac0213da25c445bd11f168587c11a200ba153ef3014e8408e462e410169b3/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Markdown parser done right. Fast and easy to extend.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://markdown-it.github.io" rel="nofollow"&gt;Live demo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Follows the &lt;strong&gt;&lt;a href="http://spec.commonmark.org/" rel="nofollow"&gt;CommonMark spec&lt;/a&gt;&lt;/strong&gt; + adds syntax extensions &amp;amp; sugar (URL autolinking, typographer).&lt;/li&gt;
&lt;li&gt;Configurable syntax! You can add new rules and even replace existing ones.&lt;/li&gt;
&lt;li&gt;High speed.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/markdown-it/markdown-it/tree/master/docs/security.md"&gt;Safe&lt;/a&gt; by default.&lt;/li&gt;
&lt;li&gt;Community-written &lt;strong&gt;&lt;a href="https://www.npmjs.org/browse/keyword/markdown-it-plugin" rel="nofollow"&gt;plugins&lt;/a&gt;&lt;/strong&gt; and &lt;a href="https://www.npmjs.org/browse/keyword/markdown-it" rel="nofollow"&gt;other packages&lt;/a&gt; on npm.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Table of content&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/markdown-it/markdown-it#install"&gt;Install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/markdown-it/markdown-it#usage-examples"&gt;Usage examples&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/markdown-it/markdown-it#simple"&gt;Simple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/markdown-it/markdown-it#init-with-presets-and-options"&gt;Init with presets and options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/markdown-it/markdown-it#plugins-load"&gt;Plugins load&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/markdown-it/markdown-it#syntax-highlighting"&gt;Syntax highlighting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/markdown-it/markdown-it#linkify"&gt;Linkify&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/markdown-it/markdown-it#api"&gt;API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/markdown-it/markdown-it#syntax-extensions"&gt;Syntax extensions&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/markdown-it/markdown-it#manage-rules"&gt;Manage rules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/markdown-it/markdown-it#benchmark"&gt;Benchmark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/markdown-it/markdown-it#markdown-it-for-enterprise"&gt;markdown-it for enterprise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/markdown-it/markdown-it#authors"&gt;Authors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/markdown-it/markdown-it#references--thanks"&gt;References / Thanks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;node.js&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm install markdown-it --save&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;browser (CDN):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.jsdelivr.com/#!markdown-it" title="jsDelivr CDN" rel="nofollow"&gt;jsDeliver CDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cdnjs.com/libraries/markdown-it" title="cdnjs.com" rel="nofollow"&gt;cdnjs.com CDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Usage examples&lt;/h2&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://markdown-it.github.io/markdown-it/" rel="nofollow"&gt;API documentation&lt;/a&gt;&lt;/strong&gt; - for more
info and examples.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/markdown-it/markdown-it/tree/master/docs"&gt;Development info&lt;/a&gt; -
for plugins writers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Simple&lt;/h3&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;// node.js, "classic" way:&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-v"&gt;MarkdownIt&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'markdown-it'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-s1"&gt;md&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-v"&gt;MarkdownIt&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;result&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s1"&gt;md&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;render&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'# markdown-it rulezz!'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;// node.js, the same, but with sugar:&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/markdown-it/markdown-it"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#6-twojs"&gt;
  &lt;/a&gt;
  6. Two.js
&lt;/h3&gt;

&lt;p&gt;A two-dimensional drawing api meant for modern browsers. It is renderer agnostic enabling the same api to render in multiple contexts: webgl, canvas2d, and svg.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/jonobr1"&gt;
        jonobr1
      &lt;/a&gt; / &lt;a href="https://github.com/jonobr1/two.js"&gt;
        two.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A renderer agnostic two-dimensional drawing api for the web.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Two.js&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/two.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/901fe719b63c7e568c2518ee24e63d6181e898a85bf1b41eddf83925c29e6866/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f74776f2e6a73" alt="NPM Package"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/result?p=two.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/48224e3bee5107d52a17ffdb91e29d783cffc5bb5e4beefae2a66746f32ef762/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f74776f2e6a73" alt="Build Size"&gt;&lt;/a&gt;
&lt;a href="https://www.npmtrends.com/two.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e4066fcba2e97ee3b781df36803fba4e8d787586ff2f5a1ff64b066671fe0555/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f74776f2e6a73" alt="NPM Downloads"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/jonobr1/two.js/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4eeb0020d056b713a911c3a1b9c3464930cc6fbe18cc7d3e25b8e90db7748ef8/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f6769746875622f6a6f6e6f6272312f74776f2e6a73" alt="Language Grade"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A two-dimensional drawing api meant for modern browsers. It is renderer agnostic enabling the same api to render in multiple contexts: webgl, canvas2d, and svg.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://two.js.org" rel="nofollow"&gt;Home&lt;/a&gt; • &lt;a href="https://github.com/jonobr1/two.js/releases"&gt;Releases&lt;/a&gt; • &lt;a href="http://two.js.org/#examples" rel="nofollow"&gt;Examples&lt;/a&gt; • &lt;a href="http://two.js.org/docs/" rel="nofollow"&gt;Documentation&lt;/a&gt; • &lt;a href="https://github.com/jonobr1/two.js/tree/dev/wiki/change-log"&gt;Change Log&lt;/a&gt; • &lt;a href="https://github.com/jonobr1/two.js/issues/new/choose"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;Download the latest &lt;a href="https://raw.github.com/jonobr1/two.js/dev/build/two.min.js"&gt;minified library&lt;/a&gt; and include it in your html.&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;js/two.min.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;It can also be installed via &lt;a href="https://www.npmjs.com/package/two.js" rel="nofollow"&gt;npm&lt;/a&gt;, Node Package Manager:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-s1"&gt;npm&lt;/span&gt; &lt;span class="pl-s1"&gt;install&lt;/span&gt; &lt;span class="pl-c1"&gt;--&lt;/span&gt;&lt;span class="pl-s1"&gt;save&lt;/span&gt; &lt;span class="pl-s1"&gt;two&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;js&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Alternatively see &lt;a href="https://github.com/jonobr1/two.js#custom-build"&gt;how to build the library yourself&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here is boilerplate html in order to draw a spinning rectangle in two.js:&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c1"&gt;&amp;lt;!doctype html&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;html&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;head&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;meta&lt;/span&gt; &lt;span class="pl-c1"&gt;charset&lt;/span&gt;="&lt;span class="pl-s"&gt;utf-8&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;js/two.min.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;head&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;body&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;two&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-v"&gt;Two&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
        &lt;span class="pl-c1"&gt;fullscreen&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
        &lt;span class="pl-c1"&gt;autostart&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;
      &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/jonobr1/two.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#7-awesome-zsh-plugins"&gt;
  &lt;/a&gt;
  7. Awesome ZSH plugins
&lt;/h3&gt;

&lt;p&gt;A collection of ZSH frameworks, plugins, themes and tutorials.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/unixorn"&gt;
        unixorn
      &lt;/a&gt; / &lt;a href="https://github.com/unixorn/awesome-zsh-plugins"&gt;
        awesome-zsh-plugins
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A collection of ZSH frameworks, plugins, themes and tutorials.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
awesome-zsh-plugins&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/sindresorhus/awesome"&gt;&lt;img src="https://camo.githubusercontent.com/abb97269de2982c379cbc128bba93ba724d8822bfbe082737772bd4feb59cb54/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667" alt="Awesome"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Status&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://opensource.org/licenses/BSD-3-Clause" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5f38dbcdd0eda2680d3b67b921fa302618eccc52775ea3d275fd4cc8b07fc8b7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f756e69786f726e2f617765736f6d652d7a73682d706c7567696e732e737667" alt="License"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/unixorn/awesome-zsh-plugins/actions/workflows/awesomebot.yml/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7wgbTkwK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/unixorn/awesome-zsh-plugins/actions/workflows/awesomebot.yml/badge.svg" alt="Awesomebot"&gt;&lt;/a&gt;
&lt;a href="https://github.com/unixorn/awesome-zsh-plugins/stargazers"&gt;&lt;img src="https://camo.githubusercontent.com/aaf6ee1f3ab4e8009dcb2265f7fcb516ba0ccf72e0cba51e7f989ec6bd273efe/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f756e69786f726e2f617765736f6d652d7a73682d706c7567696e732e737667" alt="GitHub stars"&gt;&lt;/a&gt;
&lt;a href="https://github.com/unixorn/awesome-zsh-plugins"&gt;&lt;img src="https://camo.githubusercontent.com/3ccbfcc632d4fe5344ce28bc9b0d40de63b2713a007b51a7dd1b7da06b77b614/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f756e69786f726e2f617765736f6d652d7a73682d706c7567696e732f6d61696e2e737667" alt="GitHub last commit (branch)"&gt;&lt;/a&gt;
&lt;a href="https://www.trackawesomelist.com/unixorn/awesome-zsh-plugins/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a3a46cf6e9b86345756f800e47a3d24ba217ba4004dd2164a6d4c5168e0c00c9/68747470733a2f2f7777772e747261636b617765736f6d656c6973742e636f6d2f62616467652e737667" alt="Track Awesome List"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A collection of ZSH frameworks, plugins, tutorials &amp;amp; themes inspired by the various awesome list collections out there.&lt;/p&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#frameworks"&gt;Frameworks&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#ansible-role-zsh"&gt;ansible-role-zsh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#ant-zsh"&gt;ant-zsh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#antibody"&gt;antibody&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#antigen-hs"&gt;antigen-hs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#antigen"&gt;antigen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#ax-zsh"&gt;ax-zsh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#dotzsh"&gt;dotzsh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#fresh"&gt;fresh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#miniplug"&gt;miniplug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#mzpm"&gt;mzpm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#oh-my-zsh"&gt;oh-my-zsh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#pms"&gt;PMS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#prezto"&gt;prezto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#pumice"&gt;pumice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#pz"&gt;pz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#sheldon"&gt;sheldon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#toasty"&gt;Toasty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#tzpm"&gt;tzpm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#uz"&gt;uz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#yazt"&gt;yazt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zapack"&gt;zapack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zcomet"&gt;zcomet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zeesh"&gt;zeesh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zgem"&gt;zgem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zgen"&gt;zgen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zgenom"&gt;zgenom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zilsh"&gt;zilsh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zim"&gt;zim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zinit"&gt;Zinit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zit"&gt;zit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#znap"&gt;znap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zoppo"&gt;zoppo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zpacker"&gt;zpacker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zpico"&gt;zpico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zplug"&gt;zplug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zpm"&gt;zpm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zr"&gt;zr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zshing"&gt;zshing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#ztanesh"&gt;ztanesh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#ztheme"&gt;ztheme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#ztupide"&gt;ztupide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zulu"&gt;zulu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#setups"&gt;Setups&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zgenom-1"&gt;zgenom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zinit"&gt;zinit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#tutorials"&gt;Tutorials&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#generic-zsh"&gt;Generic ZSH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#antigen"&gt;Antigen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#oh-my-zsh"&gt;Oh-My-Zsh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#prezto"&gt;Prezto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zgen"&gt;Zgen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zinit-n%C3%A9-zplugin"&gt;Zinit (né zplugin)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zsh-on-windows"&gt;ZSH on Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#plugins"&gt;Plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#completions"&gt;Completions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#themes"&gt;Themes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#fonts"&gt;Fonts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#antigen-1"&gt;Antigen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#dotzsh-1"&gt;dotzsh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#oh-my-zsh-1"&gt;Oh-My-Zsh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#prezto-1"&gt;Prezto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zgen-1"&gt;Zgen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zgenom"&gt;Zgenom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zplug-1"&gt;zplug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zpm-1"&gt;zpm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#writing-new-plugins"&gt;Writing New Plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#other-resources"&gt;Other Resources&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#zsh-tools"&gt;ZSH Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#other-useful-lists"&gt;Other Useful Lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unixorn/awesome-zsh-plugins#other-references"&gt;Other References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Please read the &lt;a href="https://github.com/unixorn/awesome-zsh-pluginsContributing.md"&gt;Contributing Guidelines&lt;/a&gt; before contributing.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
Frameworks&lt;/h2&gt;
&lt;p&gt;These frameworks make customizing your ZSH setup easier.&lt;/p&gt;
&lt;p&gt;You can find some interesting performance timing comparisons of various frameworks in the following locations.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rossmacarthur/zsh-plugin-manager-benchmark"&gt;rossmacarthur/zsh-plugin-manager-benchmark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/z-shell/pm-perf-test"&gt;pm-perf-test&lt;/a&gt; - Tooling for running performance tests on multiple ZSH frameworks.&lt;/li&gt;
&lt;/ul&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/unixorn/awesome-zsh-plugins"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#8-flags"&gt;
  &lt;/a&gt;
  8. Flags
&lt;/h3&gt;

&lt;p&gt;Add Feature Flags to your Next.js application with a single React Hook. This package integrates your Next.js application with HappyKit Flags.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/happykit"&gt;
        happykit
      &lt;/a&gt; / &lt;a href="https://github.com/happykit/flags"&gt;
        flags
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ⛳️ Feature Flags for Next.js
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;a id="user-content-nav" href="https://github.com/happykit/flags"&gt;
  &lt;img src="https://camo.githubusercontent.com/8005774e8fc74a06b908a871b835d89774029dc063de1ac2f09310d77413eb46/68747470733a2f2f692e696d6775722e636f6d2f4d533247746b6a2e706e67" width="100%"&gt;
&lt;/a&gt;
&lt;div&gt;
  &lt;a href="https://github.com/happykit/flags/tree/master/package"&gt;Documentation&lt;/a&gt;
  &lt;span&gt; • &lt;/span&gt;
  &lt;a href="https://flags.happykit.dev/" rel="nofollow"&gt;Examples&lt;/a&gt;
  &lt;span&gt; • &lt;/span&gt;
  &lt;a href="https://medium.com/frontend-digest/using-feature-flags-in-next-js-c5c8d0795a2?source=friends_link&amp;amp;sk=d846a29f376acf9cfa41e926883923ab" rel="nofollow"&gt;Full Tutorial&lt;/a&gt;
  &lt;span&gt; • &lt;/span&gt;
  &lt;a href="https://happykit.dev/solutions/flags" rel="nofollow"&gt;happykit.dev&lt;/a&gt;
  &lt;span&gt; • &lt;/span&gt;
  &lt;a href="https://twitter.**com**/happykitdev" rel="nofollow"&gt;@happykitdev&lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Add Feature Flags to your Next.js application with a single React Hook. This package integrates your Next.js application with HappyKit Flags. Create a free &lt;a href="https://happykit.dev/signup" rel="nofollow"&gt;happykit.dev&lt;/a&gt; account to get started.&lt;/p&gt;
&lt;h2&gt;
Key Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;written for Next.js&lt;/li&gt;
&lt;li&gt;integrate using a simple &lt;code&gt;useFlags()&lt;/code&gt; hook&lt;/li&gt;
&lt;li&gt;only 5 kB in size&lt;/li&gt;
&lt;li&gt;extremely fast flag responses (~50ms)&lt;/li&gt;
&lt;li&gt;supports &lt;em&gt;user targeting&lt;/em&gt;, &lt;em&gt;custom rules&lt;/em&gt; and &lt;em&gt;rollouts&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;support &lt;em&gt;server-side rendering&lt;/em&gt; and &lt;em&gt;static site generation&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;

  &lt;b&gt;Want to see a demo?&lt;/b&gt;
  &lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1765075/94278500-90819000-ff53-11ea-912a-a59cfb491406.gif"&gt;&lt;img alt="HappyKit Flags Demo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--9tGxtr0g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/1765075/94278500-90819000-ff53-11ea-912a-a59cfb491406.gif"&gt;&lt;/a&gt;
  &lt;br&gt;&lt;br&gt;

&lt;br&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://github.com/happykit/flags/tree/master/package"&gt;full documentation&lt;/a&gt; for setup instructions and usage guides.&lt;/p&gt;
&lt;h2&gt;
Examples&lt;/h2&gt;
&lt;p&gt;This is roughly what the usage of feature flags looks like once you're up and running.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;// pages/index.js&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;useFlags&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;"@happykit/flags/client"&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;export&lt;/span&gt; &lt;span class="pl-k"&gt;default&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-v"&gt;IndexPage&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;props&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; flags &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useFlags&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s1"&gt;flags&lt;/span&gt;&lt;span class="pl-kos"&gt;?.&lt;/span&gt;&lt;span class="pl-c1"&gt;xzibit&lt;/span&gt; ? &lt;span class="pl-s"&gt;'Yo dawg'&lt;/span&gt; : &lt;span class="pl-s"&gt;'Hello'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;The self documenting examples at…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/happykit/flags"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#9-every-programmer-should-know"&gt;
  &lt;/a&gt;
  9. Every Programmer Should Know
&lt;/h3&gt;

&lt;p&gt;A collection of (mostly) technical things every software developer should know about&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mtdvio"&gt;
        mtdvio
      &lt;/a&gt; / &lt;a href="https://github.com/mtdvio/every-programmer-should-know"&gt;
        every-programmer-should-know
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A collection of (mostly) technical things every software developer should know about
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;a href="https://metadevelopment.io/" rel="nofollow"&gt;Join our community&lt;/a&gt;&lt;/em&gt; for professional Software Developers and get more control over your life and career!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
Every Programmer Should Know 🤔
&lt;/h1&gt;
&lt;p&gt;A collection of (mostly) technical things every software developer should know.&lt;/p&gt;
&lt;p&gt;☝️ &lt;em&gt;These are resources I can recommend to every programmer regardless of their skill level or tech stack&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Highly opinionated 💣. Not backed by science
Comes in no particular order ♻️&lt;/p&gt;
&lt;p&gt;U like it? ⭐ it and &lt;a href="https://twitter.com/mr_mig_by/status/900735231552098306" rel="nofollow"&gt;share&lt;/a&gt; with a friendly developer
U don't like it? &lt;a href="https://twitter.com/RespectfulMemes/status/900147758845308930" rel="nofollow"&gt;Watch the doggo&lt;/a&gt; 🐶&lt;/p&gt;
&lt;p&gt;&lt;em&gt;P.S. You &lt;a href="https://xkcd.com/1050/" rel="nofollow"&gt;don't need to know&lt;/a&gt; all of that by heart to be a programmer
But knowing the stuff will help you become better! 💪&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;P.P.S. &lt;a href="https://github.com/mtdvio/every-programmer-should-knowCONTRIBUTING.md"&gt;Contributions&lt;/a&gt; are welcome!&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
Introduction&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
🎥 &lt;a href="https://www.youtube.com/watch?v=SzJ46YA_RaA" rel="nofollow"&gt;Map of Computer Science&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
🎥 &lt;a href="http://carlcheo.com/compsci" rel="nofollow"&gt;40 Key Computer Science Concepts Explained In Layman’s Terms&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Falsehoods&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/kdeldycke/awesome-falsehood"&gt;Awesome Falsehoods&lt;/a&gt;
💊 Curated list of falsehoods programmers believe in
Check for things you do not know about Strings, Addresses, Names,…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mtdvio/every-programmer-should-know"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#10-the-art-of-command-line"&gt;
  &lt;/a&gt;
  10. The Art of Command Line
&lt;/h3&gt;

&lt;p&gt;Master the command line, in one page&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/jlevy"&gt;
        jlevy
      &lt;/a&gt; / &lt;a href="https://github.com/jlevy/the-art-of-command-line"&gt;
        the-art-of-command-line
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Master the command line, in one page
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;🌍
&lt;em&gt;&lt;a href="https://github.com/jlevy/the-art-of-command-lineREADME-cs.md"&gt;Čeština&lt;/a&gt; ∙ &lt;a href="https://github.com/jlevy/the-art-of-command-lineREADME-de.md"&gt;Deutsch&lt;/a&gt; ∙ &lt;a href="https://github.com/jlevy/the-art-of-command-lineREADME-el.md"&gt;Ελληνικά&lt;/a&gt; ∙ &lt;a href="https://github.com/jlevy/the-art-of-command-lineREADME.md"&gt;English&lt;/a&gt; ∙ &lt;a href="https://github.com/jlevy/the-art-of-command-lineREADME-es.md"&gt;Español&lt;/a&gt; ∙ &lt;a href="https://github.com/jlevy/the-art-of-command-lineREADME-fr.md"&gt;Français&lt;/a&gt; ∙ &lt;a href="https://github.com/jlevy/the-art-of-command-lineREADME-id.md"&gt;Indonesia&lt;/a&gt; ∙ &lt;a href="https://github.com/jlevy/the-art-of-command-lineREADME-it.md"&gt;Italiano&lt;/a&gt; ∙ &lt;a href="https://github.com/jlevy/the-art-of-command-lineREADME-ja.md"&gt;日本語&lt;/a&gt; ∙ &lt;a href="https://github.com/jlevy/the-art-of-command-lineREADME-ko.md"&gt;한국어&lt;/a&gt; ∙ &lt;a href="https://github.com/jlevy/the-art-of-command-lineREADME-pl.md"&gt;polski&lt;/a&gt; ∙ &lt;a href="https://github.com/jlevy/the-art-of-command-lineREADME-pt.md"&gt;Português&lt;/a&gt; ∙ &lt;a href="https://github.com/jlevy/the-art-of-command-lineREADME-ro.md"&gt;Română&lt;/a&gt; ∙ &lt;a href="https://github.com/jlevy/the-art-of-command-lineREADME-ru.md"&gt;Русский&lt;/a&gt; ∙ &lt;a href="https://github.com/jlevy/the-art-of-command-lineREADME-sl.md"&gt;Slovenščina&lt;/a&gt; ∙ &lt;a href="https://github.com/jlevy/the-art-of-command-lineREADME-uk.md"&gt;Українська&lt;/a&gt; ∙ &lt;a href="https://github.com/jlevy/the-art-of-command-lineREADME-zh.md"&gt;简体中文&lt;/a&gt; ∙ &lt;a href="https://github.com/jlevy/the-art-of-command-lineREADME-zh-Hant.md"&gt;繁體中文&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;
The Art of Command Line&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Note: I'm planning to revise this and looking for a new co-author to help with expanding this into a more comprehensive guide. While it's very popular, it could be broader and a bit deeper. If you like to write and are close to being an expert on this material and willing to consider helping, please drop me a note at josh (0x40) holloway.com. –&lt;a href="https://github.com/jlevy"&gt;jlevy&lt;/a&gt;, &lt;a href="https://www.holloway.com" rel="nofollow"&gt;Holloway&lt;/a&gt;. Thank you!&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jlevy/the-art-of-command-line#meta"&gt;Meta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jlevy/the-art-of-command-line#basics"&gt;Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jlevy/the-art-of-command-line#everyday-use"&gt;Everyday use&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jlevy/the-art-of-command-line#processing-files-and-data"&gt;Processing files and data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jlevy/the-art-of-command-line#system-debugging"&gt;System debugging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jlevy/the-art-of-command-line#one-liners"&gt;One-liners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jlevy/the-art-of-command-line#obscure-but-useful"&gt;Obscure but useful&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jlevy/the-art-of-command-line#macos-only"&gt;macOS only&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jlevy/the-art-of-command-line#windows-only"&gt;Windows only&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jlevy/the-art-of-command-line#more-resources"&gt;More resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jlevy/the-art-of-command-line#disclaimer"&gt;Disclaimer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/jlevy/the-art-of-command-linecowsay.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lLg2OPD7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/jlevy/the-art-of-command-linecowsay.png" alt="curl -s 'https://raw.githubusercontent.com/jlevy/the-art-of-command-line/master/README.md' | egrep -o '\w+' | tr -d '`' | cowsay -W50"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fluency on the command line is a skill often neglected or considered arcane, but it improves your flexibility…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/jlevy/the-art-of-command-line"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +1,673 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +1,672 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mtdvio/every-programmer-should-know"&gt;Every Programmer Should Know&lt;/a&gt; +1,644 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/remix-run/remix"&gt;Remix&lt;/a&gt; +1,586 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jesseduffield/lazygit"&gt;Lazy Git&lt;/a&gt; +1,460 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/eBay/nice-modal-react"&gt;Nice Modal React&lt;/a&gt; +42%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/remix-run/remix"&gt;Remix&lt;/a&gt; +27%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/medusajs/medusa"&gt;Medusa&lt;/a&gt; +25%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/NetanelBasal/helpful-decorators"&gt;Helpful Decorators&lt;/a&gt; +17%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/figment-networks/learn-web3-dapp"&gt;Learn Web3 dapp&lt;/a&gt; +16%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +3,911 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/ML-For-Beginners"&gt;Machine Learning for beginner&lt;/a&gt; +3,683 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +3,413 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/medusajs/medusa"&gt;Medusa&lt;/a&gt; +3,202 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +2,996 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/teafuljs/teaful"&gt;Fragstore&lt;/a&gt; +268%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/antfu/unocss"&gt;unocss&lt;/a&gt; +93%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/estruyf/vscode-front-matter"&gt;vsCode Frontmatter&lt;/a&gt; +61%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/eBay/nice-modal-react"&gt;Nice Modal React&lt;/a&gt; +27%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ixartz/Next-js-Boilerplate"&gt;NextJS Boilerplate&lt;/a&gt; +48%&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For all for the latest rankings please checkout &lt;a href="https://stargazing.dev"&gt;Stargazing.dev&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/stargazing_dev"&gt;follow me&lt;/a&gt; on Twitter where I regularly post about HTML, CSS and JavaScript.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Last Chance to Join the 2021 GitHub Actions Hackathon on DEV!</title>
      <author>Ben Halpern</author>
      <pubDate>Fri, 03 Dec 2021 18:43:00 +0000</pubDate>
      <link>https://dev.to/devteam/last-chance-to-join-the-2021-github-actions-hackathon-on-dev-1aje</link>
      <guid>https://dev.to/devteam/last-chance-to-join-the-2021-github-actions-hackathon-on-dev-1aje</guid>
      <description>&lt;h4&gt;
  &lt;a href="#this-is-your-final-reminder-that-the-2021-github-actions-hackathon-on-dev-closes-on-wednesday-december-8th-2021-1159-pm-pt-8-am-utc-the-following-day"&gt;
  &lt;/a&gt;
  &lt;strong&gt;This is your final reminder that the 2021 GitHub Actions Hackathon on DEV closes on Wednesday, December 8th, 2021 @ 11:59 PM PT&lt;/strong&gt; &lt;em&gt;(8 AM UTC the following day)&lt;/em&gt;
&lt;/h4&gt;




&lt;p&gt;The 2021 GitHub Actions Hackathon is nearing an end and we've already seen so many incredible submissions from the community (seriously — go check them out &lt;a href="https://dev.to/t/actionshackathon21"&gt;here&lt;/a&gt;). With that said, we know that early submissions aren't everyone's style and some of you are more of the last minute types 😉 So consider this your official nudge to get that GitHub Actions Hackathon project in while you can! &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As a reminder, all participants with a valid submission will receive a limited edition profile badge and a sticker pack. 10 runners up will win all of that plus $250 USD cash (or the equivalent value in your local currency) and a $150 USD gift code to the &lt;a href="https://shop.dev.to/"&gt;DEV shop&lt;/a&gt;. Five lucky grand prize winners will receive a sticker pack, a limited-edition profile badge, $1,500 USD in cash, and $300 USD at the DEV shop! &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://dev.to/devteam/join-us-for-the-2021-github-actions-hackathon-on-dev-4hn4"&gt;&amp;gt;&amp;gt; Click here to find out how to participate&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Want to share an update on your project or connect with other participants? Check out the &lt;a href="https://dev.to/devteam/share-your-github-actions-hackathon-2021-updates-57k"&gt;community update thread&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Need help with your submission? Have a question about the hackathon rules or GitHub Actions? Head over to the &lt;a href="https://dev.to/devteam/github-actions-hackathon-2021-help-thread-1lk0"&gt;help thread&lt;/a&gt; to connect with the DEV and GitHub teams directly. &lt;/p&gt;

&lt;p&gt;Good luck, all our participants! We can't wait to announce the winners later this month 🎉 &lt;/p&gt;




&lt;p&gt;&lt;em&gt;Click &lt;a href="https://dev.to/devteam/join-us-for-the-2021-github-actions-hackathon-on-dev-4hn4"&gt;here&lt;/a&gt; to read the hackathon rules and get started.&lt;/em&gt; ✨ &lt;/p&gt;

</description>
      <category>meta</category>
      <category>actionshackathon21</category>
    </item>
    <item>
      <title>Automating Terraform With Github Actions</title>
      <author>Mariam Adedeji</author>
      <pubDate>Fri, 03 Dec 2021 18:35:36 +0000</pubDate>
      <link>https://dev.to/mariehposa/automating-terraform-with-github-actions-1hc3</link>
      <guid>https://dev.to/mariehposa/automating-terraform-with-github-actions-1hc3</guid>
      <description>&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;

&lt;p&gt;A project to demonstrate how to automate terraform workflow with Github Actions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Login to your AWS account and generate &lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt; and &lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;After that, login to your Terraform Cloud account. Create a new workspace and select &lt;strong&gt;API-driven workflow&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Then navigate to the &lt;strong&gt;Variables&lt;/strong&gt; tab and click on &lt;strong&gt;Add variable&lt;/strong&gt;. Add &lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt; and &lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt; with their respective values.&lt;/li&gt;
&lt;li&gt;From your Terraform Cloud User Settings, click on &lt;strong&gt;Tokens&lt;/strong&gt; and generate an API token named &lt;code&gt;GitHub Actions&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add the token to your Github repository as a secret. Name the secret &lt;code&gt;TF_API_TOKEN&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Clone and open your Github repo on your code editor.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Checkout to a new branch with &lt;code&gt;git checkout -b &amp;lt;branch-name&amp;gt;&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add your changes with &lt;code&gt;git add .&lt;/code&gt; and commit the changes with a message using &lt;code&gt;git commit -m "&amp;lt;commit-message&amp;gt;"&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then push your changes with &lt;code&gt;git push&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Go back to the Github repository and generate a pull request from the new branch. You can view the status of the job through the pull request created, Actions tab or the Terraform Cloud workspace.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then merge the pull request.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;DIY Deployments&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yaml-file-or-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File or Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mariehposa"&gt;
        mariehposa
      &lt;/a&gt; / &lt;a href="https://github.com/mariehposa/terraform-automation"&gt;
        terraform-automation
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Terraform Automation&lt;/h1&gt;
&lt;p&gt;A project to demonstrate how to automate terraform workflow with Github Actions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Github Actions after creating a pull request
&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/33374159/143871982-d2972a02-f2fa-458e-8d79-3cde681cc7ed.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9lCvzku1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/143871982-d2972a02-f2fa-458e-8d79-3cde681cc7ed.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Github Actions after Merging to &lt;strong&gt;main&lt;/strong&gt; branch
&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/33374159/143872424-59e53e0e-6475-4b81-a853-c5c147ec645f.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p2vUiL33--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/143872424-59e53e0e-6475-4b81-a853-c5c147ec645f.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Getting Started&lt;/h2&gt;
&lt;p&gt;These instructions will get you a copy of the project up and running on your local machine for development purpose.&lt;/p&gt;
&lt;h2&gt;
Prerequisites&lt;/h2&gt;
&lt;p&gt;To get started with this project you need a basic knowledge of the following.&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;Version Control (Git)
Terraform
AWS
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Automating Terraform with Github Actions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Login to your AWS account and generate &lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt; and &lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After that, login to your Terraform Cloud account. Create a new workspace and select &lt;strong&gt;API-driven workflow&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then navigate to the &lt;strong&gt;Variables&lt;/strong&gt; tab and click on &lt;strong&gt;Add variable&lt;/strong&gt;. Add &lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt; and &lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt; with their respective values.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;From your Terraform Cloud User Settings, click on &lt;strong&gt;Tokens&lt;/strong&gt; and generate an API token named &lt;code&gt;GitHub Actions&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the token to your Github repository as a…&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mariehposa/terraform-automation"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


</description>
      <category>actionshackathon21</category>
      <category>actions</category>
      <category>opensource</category>
      <category>github</category>
    </item>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 03 Dec 2021 18:29:27 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-4l7b</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-4l7b</guid>
      <description>&lt;p&gt;Hey there! &lt;/p&gt;

&lt;p&gt;Looking back on this past week, what was something you were proud of accomplishing?&lt;/p&gt;

&lt;p&gt;All wins count — big or small 🎉&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Fixing a tricky bug&lt;/li&gt;
&lt;li&gt;Embarking on a new creative challenge... or whatever else might spark joy ❤️ &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Congrats on your accomplishments this week! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/sgFDIjII6GtmE/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/sgFDIjII6GtmE/giphy.gif" alt="Woman and puppet dancing saying &amp;quot;we're number one!&amp;quot;" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>🎁 CodeCast's Coding Advent: Day Three 🎁</title>
      <author>CodeCast</author>
      <pubDate>Fri, 03 Dec 2021 18:13:08 +0000</pubDate>
      <link>https://dev.to/codecast/codecasts-coding-advent-day-three-1ohg</link>
      <guid>https://dev.to/codecast/codecasts-coding-advent-day-three-1ohg</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cfkOewZK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/47sqnvhgf782ia410jte.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cfkOewZK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/47sqnvhgf782ia410jte.png" alt="Day Three" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#day-three"&gt;
  &lt;/a&gt;
  DAY THREE
&lt;/h2&gt;

&lt;p&gt;Apps like Linktree have become incredibly popular to share multiple links on a single landing page. Our ambassador &lt;a href="https://twitter.com/TironaCodes"&gt;Michael Tirona&lt;/a&gt; has created a three-part series where teaches you how to make your own Linktree clone with React!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.codecast.io/casts/KPjp7X3KQw2A-creating-a-linktree-clone-in-react-pt-1"&gt;Find the tutorial here!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rgQcCXbg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/apbxg3sfypbibeu87wbn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rgQcCXbg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/apbxg3sfypbibeu87wbn.png" alt="Linktree Clone" width="503" height="510"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also be sure to follow us on &lt;a href="https://www.instagram.com/codecastapp/"&gt;Instagram&lt;/a&gt;, &lt;a href="https://twitter.com/CodeCastApp"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.facebook.com/codecastapp"&gt;Facebook&lt;/a&gt;, and &lt;a href="https://www.linkedin.com/company/code-cast/"&gt;LinkedIn&lt;/a&gt; to see our daily advent releases there!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>react</category>
    </item>
    <item>
      <title>How to Set Up Elgato's Stream Deck on Ubuntu Linux 21.10</title>
      <author>Erika Heidi</author>
      <pubDate>Fri, 03 Dec 2021 18:11:48 +0000</pubDate>
      <link>https://dev.to/erikaheidi/how-to-set-up-elgatos-stream-deck-on-ubuntu-linux-2110-pdh</link>
      <guid>https://dev.to/erikaheidi/how-to-set-up-elgatos-stream-deck-on-ubuntu-linux-2110-pdh</guid>
      <description>&lt;p&gt;Popular with streamers everywhere in the world, the &lt;a href="https://www.elgato.com/en/stream-deck"&gt;Elgato Stream Deck&lt;/a&gt; is a customizable device that works as an external input, and can be configured to trigger commands and shortcuts at the press of a button. And although the device is super popular with live streamers, it is also very useful for anyone who works with several different applications on a desktop setting, since it greatly facilitates switching windows and running commands on your computer.&lt;/p&gt;

&lt;p&gt;While this looks like a very useful device, the official website says the device is only supported on MacOS and Windows systems. A bummer, for sure! That's what kept me from buying one for quite some time.&lt;/p&gt;

&lt;p&gt;Turns out I got a &lt;a href="https://twitter.com/erikaheidi/status/1439919049136353284"&gt;really nice package from the GitHub Stars program&lt;/a&gt; including a 15-button Stream Deck. I have heard rumors that it was possible to run it on Linux, and that's what brought me to this article! As you can see from the video, I got it working here:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jk4MZWQ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1466024572705292289/pu/img/b5TBFafNl9DJm3Iy.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--yyVydqgW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1445318007547379715/BCwImL4T_normal.jpg" alt="Erika Heidi ✨ profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Erika Heidi ✨
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/erikaheidi"&gt;@erikaheidi&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Streamdeck running smoothly on Ubuntu 21.10 (rodando liso) 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      12:41 PM - 01 Dec 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1466024623108153347" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1466024623108153347" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1466024623108153347" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;In this post I'll share how I set up my Stream Deck on an &lt;strong&gt;Ubuntu 21.10&lt;/strong&gt; system and which commands / tools I configured so far.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: this was tested on Ubuntu 21.04 and Ubuntu 21.10, but it might work with other versions as well.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-install-raw-streamdeckui-endraw-"&gt;
  &lt;/a&gt;
  Step 1: Install &lt;code&gt;streamdeck-ui&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://timothycrosley.github.io/streamdeck-ui/"&gt;streamdeck-ui program&lt;/a&gt; provides a Linux-compatible graphical user interface to control your Stream Deck, running on top of the &lt;a href="https://github.com/abcminiuser/python-elgato-streamdeck#python-elgato-stream-deck-library"&gt;Python Stream Deck Library&lt;/a&gt;. With this software you can set up each individual key by providing an icon, a command or a shortcut, and an optional title. It supports multiple pages, which means you are not limited to the physical slots in the device. As long as you use one or more keys to paginate through your icon pages, you can have as many buttons as you need.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ECi5VfId--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bgv7t5a6brb3920n0nus.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ECi5VfId--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bgv7t5a6brb3920n0nus.png" alt="Screenshot of streamdeck-ui already configured" width="880" height="494"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To get started, install the dependencies with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;python3-pip libhidapi-libusb0 libxcb-xinerama0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, you'll need to set up special permissions that will allow you to use the application with a regular system user.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;sudoedit /etc/udev/rules.d/70-streamdeck.rules
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Paste the following content into this file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SUBSYSTEM=="usb", ATTRS{idVendor}=="0fd9", ATTRS{idProduct}=="0060", TAG+="uaccess"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0fd9", ATTRS{idProduct}=="0063", TAG+="uaccess"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0fd9", ATTRS{idProduct}=="006c", TAG+="uaccess"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0fd9", ATTRS{idProduct}=="006d", TAG+="uaccess"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Save and close the file. Then, reload udev rules with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;udevadm control &lt;span class="nt"&gt;--reload-rules&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The installation instructions advise you to unplug and plug again your device before continuing. Once you do that, run the following command to install &lt;code&gt;streamdeck-ui&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip3 &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--user&lt;/span&gt; streamdeck_ui
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, you'll need to make sure you have &lt;code&gt;$HOME/.local/bin&lt;/code&gt; in your &lt;code&gt;$PATH&lt;/code&gt;. If you are using regular bash, you should have a &lt;code&gt;.bashrc&lt;/code&gt; file where your &lt;code&gt;$PATH&lt;/code&gt; is defined. If you are using zsh, this should be &lt;code&gt;.zshrc&lt;/code&gt; instead. For instance, I use zsh and this is how my &lt;code&gt;$PATH&lt;/code&gt; is defined within my &lt;code&gt;~/.zshrc&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/bin:&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.local/bin:/usr/local/bin:&lt;span class="nv"&gt;$PATH&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After updating your $PATH, you can run &lt;code&gt;streamdeck-ui&lt;/code&gt; from your terminal in background mode with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;streamdeck &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see a screen like that:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pH2kk2UA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lz34vsue79s9emw48mip.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pH2kk2UA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lz34vsue79s9emw48mip.png" alt="screenshot of streamdeck-ui with blank configuration" width="880" height="512"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can now start setting up each button.&lt;/p&gt;

&lt;p&gt;Keep in mind that the program must be running all times for the buttons to be actually functional. It will be visible as a system tray icon on the top right of your screen. &lt;/p&gt;

&lt;p&gt;It is recommended that you include the &lt;code&gt;streamdeck&lt;/code&gt; command in your startup commands - on Ubuntu you can set this on the &lt;code&gt;Startup Applications Preferences&lt;/code&gt; utility. Hint: type &lt;code&gt;window&lt;/code&gt; and then &lt;code&gt;Startup&lt;/code&gt; to find this program on Ubuntu:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8JUp2HLV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/262plmsqfwxz27bbl4jm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8JUp2HLV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/262plmsqfwxz27bbl4jm.png" alt="Setting up streamdeck to start on login" width="880" height="791"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-command-buttons"&gt;
  &lt;/a&gt;
  Setting up command buttons
&lt;/h2&gt;

&lt;p&gt;Setting up a button to run a command is pretty straightforward with streamdeck-ui. Having an icon is optional, since you can also use a simple text (just needs to keep it very short, as it doesn't support linebreaks). To try it out, configure your first button to open your file browser, called as &lt;code&gt;nautilus&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RLJtZ7oq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p098k9m5vy087c00umha.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RLJtZ7oq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p098k9m5vy087c00umha.png" alt="Setting up a command button on streamdeck-ui" width="880" height="516"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The update is effective immediately, so you can click on the button and you should see a new Nautilus window opening up.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-shortcut-buttons"&gt;
  &lt;/a&gt;
  Setting up shortcut buttons
&lt;/h2&gt;

&lt;p&gt;You can also set up shortcuts to run when you click a button, although this may work inconsistently depending on which application is currently on focus. I use shortcuts to switch scenes on OBS, but then I have to first make sure I focus the OBS window and only then I hit the shortcut button. &lt;/p&gt;

&lt;p&gt;To configure shortcuts, use the &lt;strong&gt;Press Keys&lt;/strong&gt; text field to define the sequence of keys. To make it work with OBS, you'll first need to configure your OBS shortcuts on &lt;strong&gt;Settings -&amp;gt; Hotkeys&lt;/strong&gt; (inside OBS).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uokQZThh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qes8areo4eekflmxk51.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uokQZThh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qes8areo4eekflmxk51.png" alt="Setting up a shortcut button" width="880" height="511"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is also possible to use commands to change which window is currently on focus, that's what we'll see next.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#manipulating-windows-with-raw-xdotool-endraw-"&gt;
  &lt;/a&gt;
  Manipulating windows with &lt;code&gt;xdotool&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;To switch between windows, you'll need to install a tool called &lt;code&gt;xdotool&lt;/code&gt;. On Ubuntu you can install it with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;xdotool
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This tool allows you to search for a window by title or class, which is an internal name used by each application. This information can be found with the built-in command &lt;code&gt;xprop&lt;/code&gt;, which obtains information about active windows on your graphical interface.&lt;/p&gt;

&lt;p&gt;To find out which class an application uses for its main window, you can run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;xprop | &lt;span class="nb"&gt;grep&lt;/span&gt; &lt;span class="s1"&gt;'CLASS'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, you'll have to click on the window you want to obtain more information about. Make sure you click somewhere inside the window, not at the title bar.&lt;/p&gt;

&lt;p&gt;For instance, if you want to find out the class name for your Firefox browser, after clicking somewhere in the Firefox window you'll get output like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;WM_CLASS(STRING) = "Navigator", "Firefox"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;strong&gt;second&lt;/strong&gt; string in the output is what we need. Once you know the class name for an application, you can move it to active / focused with the following command (in this case, we're activating the Firefox window):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;xdotool search &lt;span class="nt"&gt;--desktop&lt;/span&gt; 0 &lt;span class="nt"&gt;--class&lt;/span&gt; Firefox windowactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So this is the command you'll have to set up within streamdeck-ui to be able to easily switch applications using your Stream Deck.&lt;/p&gt;

&lt;p&gt;Here is a list with my own buttons that you can probably reuse on your setup in case you want similar functionality:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#firefox"&gt;
  &lt;/a&gt;
  Firefox
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;xdotool search --desktop 0 --class Firefox windowactivate&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#terminal-terminator"&gt;
  &lt;/a&gt;
  Terminal (Terminator)
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;xdotool search --desktop 0 --class 'Terminator' windowactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#phpstorm"&gt;
  &lt;/a&gt;
  PhpStorm
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;xdotool search --desktop 0 --class jetbrains-phpstorm windowactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#obs"&gt;
  &lt;/a&gt;
  OBS
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;xdotool search --desktop 0 --class obs windowactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#zoom"&gt;
  &lt;/a&gt;
  Zoom
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;xdotool search --desktop 0 --class Zoom windowactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#slack"&gt;
  &lt;/a&gt;
  Slack
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;xdotool search --desktop 0 --class slack windowactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is what my current setup looks like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ECi5VfId--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bgv7t5a6brb3920n0nus.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ECi5VfId--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bgv7t5a6brb3920n0nus.png" alt="Screenshot of streamdeck-ui already configured" width="880" height="494"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And this is how it looks like on the device:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U59wRbqV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e03kevdqp6egkpeyrhmz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U59wRbqV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e03kevdqp6egkpeyrhmz.png" alt="photo shows how this configuration looks like on the device itself" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finding-icons"&gt;
  &lt;/a&gt;
  Finding icons
&lt;/h2&gt;

&lt;p&gt;You can find default icons from the Ubuntu system and applications spread through several directories on &lt;code&gt;/usr/share&lt;/code&gt;. Have a look at &lt;code&gt;/usr/share/icons&lt;/code&gt; and you should find several subdirectories with icons - this might work but it can be difficult to find just the icon you want.&lt;/p&gt;

&lt;p&gt;I personally prefer to look for icons on google images, and have set a local folder in my home directory where I keep these icons and reference them from streamdeck-ui. Icons must be in &lt;code&gt;png&lt;/code&gt; format.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope you have enjoyed this article and that it can help you customize your Stream Deck up to the minimal details, for a perfect setup :) Worth noting that the Stream Deck device is pretty handy for anyone working on a desktop, since it can speed up switching windows and running commands on your system.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>streaming</category>
      <category>livecoding</category>
      <category>linux</category>
    </item>
    <item>
      <title>100 Days Of Code : A Commitment to Developer Life</title>
      <author>TheGrayGodfather</author>
      <pubDate>Fri, 03 Dec 2021 17:24:37 +0000</pubDate>
      <link>https://dev.to/thegraygodfather/100-days-of-code-a-commitment-to-developer-life-29ni</link>
      <guid>https://dev.to/thegraygodfather/100-days-of-code-a-commitment-to-developer-life-29ni</guid>
      <description>&lt;h2&gt;
  &lt;a href="#my-story-of-cowardness"&gt;
  &lt;/a&gt;
  My Story Of Cowardness
&lt;/h2&gt;

&lt;p&gt;Hello, guys I am a noob programmer. &lt;br&gt;
I am in second year of college but I don't know "P" about programming. My real problem is I am lazy, not consistent and I learn things superficially. These habits in day to day life makes me average in every things. &lt;/p&gt;

&lt;p&gt;Not having a programming skill is a shameful thing for a engineer so, I decide to change my lazy lifestyle to diligent and consistent lifestyle. Key stapes to learn anything and become a master in that skill is to do it every day with focus. So I am deciding to pursuing to life changing 100 Days Of Code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#end-goal-of-100-days"&gt;
  &lt;/a&gt;
  End Goal Of 100 Days
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Solving minimum two problem in c++ everyday.&lt;/li&gt;
&lt;li&gt;Better then average in Data structure and Algorithms.&lt;/li&gt;
&lt;li&gt;Complete DBMS&lt;/li&gt;
&lt;li&gt;Good grip in Java script&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#how-i-am-going-to-accomplish-all-these"&gt;
  &lt;/a&gt;
  How I Am Going To Accomplish All These
&lt;/h2&gt;

&lt;p&gt;I am going to spend minimum 4 hours to 6 hours everyday. From those hours I am going to devout more then half of those time in c++, data structures and algorithms. And other half of time in java script and database.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-i-am-going-to-post-in-100-days-of-code"&gt;
  &lt;/a&gt;
  What I Am Going to Post In 100 Days Of Code.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;What I did yesterday.&lt;/li&gt;
&lt;li&gt;What I am doing today.&lt;/li&gt;
&lt;li&gt;What plans  I have for tomorrow.&lt;/li&gt;
&lt;li&gt;What mistakes and problems I am facing.&lt;/li&gt;
&lt;li&gt;My goal of this week in start of week.&lt;/li&gt;
&lt;li&gt;What I accomplished in this weak at end of this week.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#closing-remark"&gt;
  &lt;/a&gt;
  Closing Remark
&lt;/h2&gt;

&lt;p&gt;I thing by this way I can change my life, otherwise I am fucked. THANKS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PLEAST CORRECT MY MISTAKES AND HEPL ME TO GROW&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/thegraygodfathe"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--snpEA2Le--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2u4nsrg8h87abzjj4y6l.png" alt="Image description" width="291" height="105"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/milan-mohapatra-171773207/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nGmJCNix--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nojt7grbvsj24djvmj60.jpg" alt="Image description" width="291" height="164"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/TheGrayGodfather"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_pKqteV7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rsq6lwb8tmeadzw1u8t3.png" alt="Image description" width="291" height="83"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>algorithms</category>
      <category>webdev</category>
      <category>blockchain</category>
    </item>
    <item>
      <title>PUSHARD Progressively deploy commits between AWS Amplify environments</title>
      <author>Alessandro Annini</author>
      <pubDate>Fri, 03 Dec 2021 17:07:22 +0000</pubDate>
      <link>https://dev.to/ale_annini/pushard-progressively-deploy-commits-between-aws-amplify-environments-4mjj</link>
      <guid>https://dev.to/ale_annini/pushard-progressively-deploy-commits-between-aws-amplify-environments-4mjj</guid>
      <description>&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;

&lt;p&gt;When creating a new project with AWS Amplify life is good: you have a lot of different AWS services handy and ready to be used in a integrated way. If you ever used Amplify you know what we are talking about.&lt;br&gt;
Everything is fine until you begin to use &lt;a href="https://docs.amplify.aws/cli/teams/overview/"&gt;Amplify environments&lt;/a&gt;. This is because Amplify creates a copy of every service you are using for every environment you are creating. When it comes to Appsync there is no exception.&lt;/p&gt;

&lt;p&gt;If you need different environment like &lt;code&gt;development&lt;/code&gt;, &lt;code&gt;test&lt;/code&gt; and &lt;code&gt;production&lt;/code&gt; (maybe you even have &lt;code&gt;demo&lt;/code&gt;!) you will find yourself with three times your cognito pools (if you have authentication), three times your lambdas and three times your graphql tables. Often times when you are developing, you will have to make changes to your &lt;code&gt;schema.graphql&lt;/code&gt; but you don't want to reflect those changes in other environments right away because maybe the UI is still not updated or simply because your work isn't completly done yet and you don't want to deploy a broken version.&lt;br&gt;
The problem you can incur into is a known Amplify problem, in fact AWS even has a section on their docs about it: &lt;a href="https://docs.amplify.aws/cli-legacy/graphql-transformer/key/#deploying-multiple-secondary-indices-gsi"&gt;Deploying multiple secondary indices (GSI)&lt;/a&gt;, and their github repository has a lot of issues about this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Attempting to mutate more than 1 global secondary index at the same time on the &amp;lt;table_name&amp;gt; table in the stack.
An error occurred during the push operation: Attempting to mutate more than 1 global secondary index at the same time on the &amp;lt;table_name&amp;gt; table in the  stack.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;If you try to modify 2 or more connections on the same table, when you try to push your changes to Cloud Formation with the command &lt;code&gt;amplify push&lt;/code&gt;, you will get this error. When you're working on the development branch is not a big deal because you only have to make multiple "amplify push" in order to gradually change the connections state.&lt;/p&gt;

&lt;p&gt;The REAL problem comes after you have made a number of amplify push on your development environment and you want to replicate the final schema.graphql to the test or production environment. Suppose you made 10 amplify push on your development environment but your production environment has never been updated after push number 3: now if you try to move your current schema.graphql (let's call it version 10) over your schema.graphql version 3 on production, you will have a big problem. Amplify won't be able to make multiple updates on the secondary indexes of your production tables just like it wasn't before, when you was trying to make only two updates together on the same table.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You would have to replicate the exact sequence of successful updates you made on you development environment to you production one.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here comes into play PUSHARD!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EB12C46d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nautes-tech/pushard/main/images/flow.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EB12C46d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nautes-tech/pushard/main/images/flow.png" alt="git-action flwo" title="git-action flow" width="490" height="817"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First of all &lt;strong&gt;you have to&lt;/strong&gt; make a commit on git after &lt;strong&gt;every&lt;/strong&gt; &lt;code&gt;amplify push&lt;/code&gt; on your environment.&lt;br&gt;
This Git Action will then take care to grab your commit hisory from development branch, detect the exact slice of commits you need to fully replicate the development verison of schema.graphql to your target environment. In order to deploy every update it will try to merge the current development commit into target branch, launch &lt;code&gt;amplify push&lt;/code&gt; command and finally &lt;code&gt;git commit&lt;/code&gt; the result after every successful operation on the target branch.&lt;br&gt;
If something shoud go south during the process, it will push to git everything is committed at the time, the next time it will try to pick up the process where it left off.&lt;/p&gt;

&lt;p&gt;Now, this flow is correct from a AWS standpoint because DynamoDB will be able to update step by step its tables. But at the same time, when asking many consecutive Cloud Formation updates, especially if you created or updated a lambda in your stack too, will take longer than the time of the simple &lt;code&gt;amplify push&lt;/code&gt; command, so, at the next iteragion of updates loop, you could have another error:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Resource is not in the state stackUpdateComplete
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This means that Cloud Formation has not yet completely update your lambda resources and, because of this, it won't be able to make further updates.&lt;br&gt;
Because of this you &lt;strong&gt;have to&lt;/strong&gt; make a commit after every time you create or modify a lambda function. This way our Git Action will be able to successfully push the change to amplify and during the next loop iteration it will wait for Cloud Formation to be in the &lt;code&gt;UPDATE_COMPLETE&lt;/code&gt; state before trying to update the stack again.&lt;/p&gt;

&lt;p&gt;When the git action is starting it can send you a Telegram message writing how many commits it will take from development to the target branch; it will message you after every successful &lt;code&gt;amplify push&lt;/code&gt; operation and if something goes wrong.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/nautes-tech/pushard/blob/main/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nautes-tech/pushard/blob/main/README.md"&gt;README&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/nautes-tech"&gt;
        nautes-tech
      &lt;/a&gt; / &lt;a href="https://github.com/nautes-tech/pushard"&gt;
        pushard
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Progressively deploy commits between AWS Amplify environments
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
PUSHARD Progressively deploy commits between AWS Amplify environments&lt;/h1&gt;
&lt;br&gt;
&lt;h2&gt;
Description&lt;/h2&gt;
&lt;p&gt;When creating a new project with AWS Amplify life is good: you have a lot of different AWS services handy and ready to be used in a integrated way. If you ever used Amplify you know what we are talking about
Everything is fine until you begin to use &lt;a href="https://docs.amplify.aws/cli/teams/overview/" rel="nofollow"&gt;Amplify environments&lt;/a&gt;. This is because Amplify creates a copy of every service you are using for every environment you are creating. When it comes to Appsync there is no exception.&lt;/p&gt;
&lt;p&gt;If you need different environment like &lt;code&gt;development&lt;/code&gt;, &lt;code&gt;test&lt;/code&gt; and &lt;code&gt;production&lt;/code&gt; (maybe you even have &lt;code&gt;demo&lt;/code&gt;!) you will find yourself with three times your cognito pools (if you have authentication), three times your lambdas and three times your graphql tables. Often times when you are developing, you will have to make changes to your &lt;code&gt;schema.graphql&lt;/code&gt; but you don't want to…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/nautes-tech/pushard"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;DIY Deployments, Maintainer Must-Haves.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yaml-file-or-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File or Link to Code
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pushard&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;workflow_dispatch&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;deployHash&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Target&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;deploy&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;hash'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
      &lt;span class="na"&gt;skipHashes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Deploys&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;to&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;skip'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
      &lt;span class="na"&gt;dstBranch&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Destination&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;branch'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;run_pushard&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Run PUSHARD&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-18.04&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Checkout&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Setup Node.js environment&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-node@v2.1.5&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;node-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;14'&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Create working dir&lt;/span&gt;
        &lt;span class="na"&gt;shell&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;bash&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mkdir tempdir&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install AWS CLI version &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"&lt;/span&gt;
          &lt;span class="s"&gt;sudo unzip awscliv2.zip&lt;/span&gt;
          &lt;span class="s"&gt;sudo ./aws/install&lt;/span&gt;
          &lt;span class="s"&gt;sudo rm -rf awscliv2.zip&lt;/span&gt;
          &lt;span class="s"&gt;sudo rm -rf aws&lt;/span&gt;
          &lt;span class="s"&gt;aws --version&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install @aws-amplify/cli node package&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm install -g @aws-amplify/cli@7.3.2&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;PUSHARD&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;echo "Target deploy hash: ${{ github.event.inputs.deployHash }}"&lt;/span&gt;
          &lt;span class="s"&gt;echo "Deploys to skip: ${{ github.event.inputs.skipHashes }}"&lt;/span&gt;
          &lt;span class="s"&gt;echo "Destination branch: ${{ github.event.inputs.dstBranch }}"&lt;/span&gt;
          &lt;span class="s"&gt;cd builder&lt;/span&gt;
          &lt;span class="s"&gt;npm install&lt;/span&gt;
          &lt;span class="s"&gt;npm start&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;DEPLOY_HASH&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ github.event.inputs.deployHash }}&lt;/span&gt;
          &lt;span class="na"&gt;SKIP_HASHES&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ github.event.inputs.skipHashes }}&lt;/span&gt;
          &lt;span class="na"&gt;DST_BRANCH&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ github.event.inputs.dstBranch }}&lt;/span&gt;
          &lt;span class="na"&gt;AMPLIFY_PROJECT_REPO&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.AMPLIFY_PROJECT_REPO }}&lt;/span&gt;
          &lt;span class="na"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ACCESS_KEY_ID }}&lt;/span&gt;
          &lt;span class="na"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.SECRET_ACCESS_KEY }}&lt;/span&gt;
          &lt;span class="na"&gt;AWS_PROFILE&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.AWS_PROFILE }}&lt;/span&gt;
          &lt;span class="na"&gt;GH_USERNAME&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GH_USERNAME }}&lt;/span&gt;
          &lt;span class="na"&gt;GH_USER_PAT&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GH_USER_PAT }}&lt;/span&gt;
          &lt;span class="na"&gt;TELEGRAM_BOT_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.TELEGRAM_BOT_TOKEN }}&lt;/span&gt;
          &lt;span class="na"&gt;TELEGRAM_CHAT_ID&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.TELEGRAM_CHAT_ID }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://github.com/nautes-tech/pushard/blob/main/action.yml"&gt;action.yml&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;Made by &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__767320"&gt;
  
    .ltag__user__id__767320 .follow-action-button {
      background-color: #000000 !important;
      color: #ffffff !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/simoneagostinelli" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jUxUtWZc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Fjm9Z056--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/767320/62e2eda5-1b42-492a-8121-b67852bcd260.jpg" alt="simoneagostinelli image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/simoneagostinelli"&gt;Simone Agostinelli&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/simoneagostinelli"&gt;&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;div class="ltag__user ltag__user__id__104337"&gt;
  
    .ltag__user__id__104337 .follow-action-button {
      background-color: #a705f7 !important;
      color: #edfdfa !important;
      border-color: #a705f7 !important;
    }
  
    &lt;a href="/ale_annini" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZwbYTTEi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--L5SWM70W--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/104337/8e900359-1888-4968-8973-95472187f1f8.jpg" alt="ale_annini image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/ale_annini"&gt;Alessandro Annini&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/ale_annini"&gt;Side projects will save the world. Or at least the day.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://www.nautes.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fjFAXViV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/4AdCvil.png" alt="Nautes Spa" width="400" height="225"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>actionshackathon21</category>
      <category>aws</category>
      <category>github</category>
      <category>productivity</category>
    </item>
    <item>
      <title>How to Get Glassmorphism Effect in Flutter</title>
      <author>rrtutors</author>
      <pubDate>Fri, 03 Dec 2021 17:02:14 +0000</pubDate>
      <link>https://dev.to/rrtutors/how-to-get-glassmorphism-effect-in-flutter-3i64</link>
      <guid>https://dev.to/rrtutors/how-to-get-glassmorphism-effect-in-flutter-3i64</guid>
      <description>&lt;p&gt;What is Glassmorphism?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rrtutors.com/tutorials/How-to-Get-Glassmorphism-Effect-in-Flutter"&gt;Flutter Glassmorphism&lt;/a&gt; is a term used to describe UI design that emphasizes light or dark objects, placed on top of colorful backgrounds. A background blur is placed on the objects which allows the background to shine through – giving it the impression of frosted glass&lt;/p&gt;

&lt;p&gt;You can wrap your widget with Back Drop Filter and add an image filter but, this process is a bit complicated so, we will see an easy way all you have to do is add a line like this to your package's pubspec.yaml.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nl"&gt;dependencies:&lt;/span&gt;
  &lt;span class="nl"&gt;glassmorphism:&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mf"&gt;3.0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once installed you will get access to a widget called GlassmorphicContainer, it has various properties&lt;/p&gt;

&lt;p&gt;width: used to control the width of the container.&lt;/p&gt;

&lt;p&gt;height: used to control the height of the container.&lt;/p&gt;

&lt;p&gt;borderRadius: used to change the border radius.&lt;/p&gt;

&lt;p&gt;linearGradient: used to provide background gradient with different colors.&lt;br&gt;
    child: which will hold all our widget that will have this effect.&lt;/p&gt;

&lt;p&gt;we can add gradient like this for example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;LinearGradient&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;colors:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;

                        &lt;span class="nc"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;white&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;withOpacity&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;

                        &lt;span class="nc"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;white&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;withOpacity&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.05&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

                      &lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="nl"&gt;begin:&lt;/span&gt; &lt;span class="nc"&gt;Alignment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;topLeft&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;end:&lt;/span&gt; &lt;span class="nc"&gt;Alignment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;bottomRight&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;this will have the most common white forsted glass effect.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O6uOT0zv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://rrtutors.com/uploads/langpostimg/Screenshot_1638193776.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O6uOT0zv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://rrtutors.com/uploads/langpostimg/Screenshot_1638193776.png" alt="Flutter Glassmorphism" width="880" height="1760"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--anolqKds--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://rrtutors.com/uploads/langpostimg/Screenshot_1638193788.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--anolqKds--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://rrtutors.com/uploads/langpostimg/Screenshot_1638193788.png" alt="Flutter Glassmorphism" width="880" height="1760"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Complete code for &lt;a href="https://rrtutors.com/tutorials/How-to-Get-Glassmorphism-Effect-in-Flutter"&gt;Flutter Login Page - FrostedGlass Background Flutter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find &lt;a href="https://rrtutors.com/tutorials/Flutter-Login-Page-with-wave-animation"&gt;Flutter Login Page&lt;/a&gt; example &lt;/p&gt;

</description>
      <category>flutter</category>
      <category>dart</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Quick Start WebRTC with Infobip</title>
      <author>Michael Bogan</author>
      <pubDate>Fri, 03 Dec 2021 16:58:53 +0000</pubDate>
      <link>https://dev.to/mbogan/quick-start-webrtc-with-infobip-2c1g</link>
      <guid>https://dev.to/mbogan/quick-start-webrtc-with-infobip-2c1g</guid>
      <description>&lt;p&gt;&lt;a href="https://webrtc.org/"&gt;Web Real-Time Communication (WebRTC)&lt;/a&gt; has fast become the de facto framework used for building applications to facilitate audio and video communication over the web. WebRTC connects users through their browsers or on their mobile devices. In this post, we’ll get you up to speed on why WebRTC is so widely adopted for development today. Along the way, we’ll use Infobip’s set of SDKs to get quickly get started.&lt;/p&gt;

&lt;p&gt;Let’s begin by diving a bit deeper into the details and history of WebRTC.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-webrtc"&gt;
  &lt;/a&gt;
  What is WebRTC?
&lt;/h3&gt;

&lt;p&gt;At a high level, WebRTC is a peer-to-peer (P2P) data transmission technology. While it has versatile uses, it’s most commonly used for latency-sensitive applications, and that makes it perfect for P2P video and audio streaming. Many major tech companies—including Zoom, Slack, and Discord—use WebRTC in their implementation to provide secure and seamless streaming experiences to their users.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-long-has-webrtc-been-around"&gt;
  &lt;/a&gt;
  How long has WebRTC been around?
&lt;/h3&gt;

&lt;p&gt;By most accounts, the industry saw WebRTC used to make a cross-browser video call for the first time in February 2013. That means WebRTC has been around for nearly 10 years! For those who pivot on the paperwork, WebRTC reached an official “&lt;a href="https://www.w3.org/TR/2017/CR-webrtc-20171102/"&gt;Candidate Recommendation&lt;/a&gt;” status with W3C in 2017 and “&lt;a href="https://www.w3.org/2021/01/pressrelease-webrtc-rec.html.en"&gt;Recommendation&lt;/a&gt;” status in January 2021. By that gauge, WebRTC’s status as an officially backed technology is fairly new. With that backing of governing technical bodies and industry use, however, WebRTC’s adoption is on the rise. That’s especially true of companies seeking to build audio and video applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-choose-webrtc-over-another-option"&gt;
  &lt;/a&gt;
  Why choose WebRTC over another option?
&lt;/h2&gt;

&lt;p&gt;Why might a company choose to build on top of WebRTC as opposed to another option like RTMP? There are several reasons, and we’ll highlight the most important ones here:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#no-central-server"&gt;
  &lt;/a&gt;
  No central server
&lt;/h3&gt;

&lt;p&gt;Because WebRTC is P2P, the clients manage the connection. In other words, there is no client-server architecture with a central infrastructure brokering connections while handling media and static assets. The end-user devices do all of the connection management. Though this puts more resource load on clients, the P2P approach is more secure and resilient.&lt;/p&gt;

&lt;p&gt;One nuance worth mentioning is that WebRTC requires a way to connect clients with one another; this process is called “signaling.” So, while there’s no central server in the sense of connection management, you do need a signaling server to help clients be aware of each other’s presence and negotiate their connection. Still, the resources needed for this signaling server are significantly less than that of maintaining an entire client-server architecture.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#w3cietf-standard"&gt;
  &lt;/a&gt;
  W3C/IETF standard
&lt;/h3&gt;

&lt;p&gt;Historically, perhaps developers have not put a lot of stock in a technology’s endorsement from W3C or IETF. Still, WebRTC’s backing by these bodies means that a great deal of thought, design, and discussion went into this technology. WebRTC has been in the making for over a decade, and its official recommendation is bolstered by a gang of big tech companies that actively use it. You’re in good company with WebRTC.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#high-quality-and-high-speed"&gt;
  &lt;/a&gt;
  High quality and  high speed
&lt;/h3&gt;

&lt;p&gt;WebRTC, unlike TCP-based streaming alternatives (for example, MPEG-DASH or RTMP), uses UDP-packet broadcast. Using UDP alleviates the need for packet-level re-encrypt and retransmission. For video and audio streaming applications, the minor packet misses that come with UDP have a negligible adverse effect on the end-user experience. The end result, though, makes WebRTC &lt;em&gt;fast&lt;/em&gt;. It’s one of the only protocols that can consistently achieve sub-second latency, and it does this out-of-the-box!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#native-functionality"&gt;
  &lt;/a&gt;
  Native functionality
&lt;/h3&gt;

&lt;p&gt;As an officially endorsed technology supported in HTML5, WebRTC is dead simple to get started. You don’t need a plugin. All you need is a WebRTC-compatible browser, and you immediately have access to device detection, media capture, data transfer, and more. When you build on WebRTC, everything in your application is native; your users won’t be required to download or install anything else.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-infobip-help"&gt;
  &lt;/a&gt;
  How can Infobip help?
&lt;/h2&gt;

&lt;p&gt;For working with WebRTC, Infobip offers SDKs for &lt;a href="https://github.com/infobip/infobip-rtc-android"&gt;Android&lt;/a&gt;, &lt;a href="https://github.com/infobip/infobip-rtc-ios"&gt;iOS&lt;/a&gt;, &lt;a href="https://github.com/infobip/infobip-rtc-react-native"&gt;React Native&lt;/a&gt;, and &lt;a href="https://github.com/infobip/infobip-rtc-js"&gt;JavaScript&lt;/a&gt;. That covers pretty much all of WebRTC’s applications. Infobip makes it very easy to get started.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-set-up"&gt;
  &lt;/a&gt;
  Getting set up
&lt;/h3&gt;

&lt;p&gt;Let’s say you’re kicking off a new JavaScript-based project. Getting started with WebRTC and Infobip is as simple as installing the JavaScript SDK with npm or including the distribution file in your project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npm install infobip-rtc --save
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# main.js 
let InfobipRTC = require('infobip-rtc');

# or as an ES6 Import
import {InfobipRTC} from "infobip-rtc";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Infobip also offers a distribution file that you can include:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script src="//rtc.cdn.infobip.com/latest/infobip.rtc.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#putting-it-to-use"&gt;
  &lt;/a&gt;
  Putting it to use
&lt;/h3&gt;

&lt;p&gt;Infobip takes a hands-off approach to user management. Your users are &lt;em&gt;your&lt;/em&gt; users. To enable Infobip’s services for your users, you just need to create a token for them. Here’s a sample of what the request for the token looks like, along with a response:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# main.js
var settings = {
    "url": "https://{baseUrl}/webrtc/1/token",
    "method": "POST",
    "timeout": 0,
    "headers": {
        "Authorization": "{authorization}",
        "Content-Type": "application/json",
        "Accept": "application/json"
    },
    "data": JSON.stringify({"identity":"Alice","applicationId":"2277594c-76ea-4b8e-a299-e2b6db41b9dc","displayName":"Alice in Wonderland","capabilities":{"recording":"ALWAYS"},"timeToLive":43200}),
};

$.ajax(settings).done(function (response) {
    console.log(response);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Response
{
  "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZGVudGl0eSI6IkFsaWNlIiwibmFtZSI6IkFsaWNlIGluIFdvbmRlcmxhbmQiLCJleHAiOjE1NzkyOTA2MzgsImNhcHMiOlsyXX0.QyCMqjH8DsftChibW2Rw4EByH-eEviUp3-kHVKuJpKg",
  "expirationTime": "2020-01-17T19:50:38.488589Z"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you’ve created and stored the token, you’re ready to get started!&lt;/p&gt;

&lt;p&gt;Although application use cases will vary greatly, each SDK’s Github repository has fantastic resources for getting started. The official documentation with all the goodies that go along with Infobip’s offering of WebRTC can be found &lt;a href="https://www.infobip.com/docs/voice-and-video/webrtc"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up-webrtc"&gt;
  &lt;/a&gt;
  Wrapping up WebRTC
&lt;/h2&gt;

&lt;p&gt;We’ve covered a lot of ground on WebRTC, so let’s take some time to recap. WebRTC is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A stable, industry-supported framework primarily used for P2P audio and video communication between browser and mobile devices.&lt;/li&gt;
&lt;li&gt;Widely adopted by many tech companies and for varied use cases.&lt;/li&gt;
&lt;li&gt;Preferred over TCP-based alternatives, as its UDP-based approach provides incredible speed while preserving quality.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And check out &lt;a href="https://www.infobip.com/signup"&gt;Infobip's platoform&lt;/a&gt;  a free and quick way to get started with WebRTC.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>architecture</category>
    </item>
    <item>
      <title>How to write a good Technical Article</title>
      <author>Bonnie!</author>
      <pubDate>Fri, 03 Dec 2021 16:57:11 +0000</pubDate>
      <link>https://dev.to/the_greatbonnie/how-to-write-a-good-technical-article-22fo</link>
      <guid>https://dev.to/the_greatbonnie/how-to-write-a-good-technical-article-22fo</guid>
      <description>&lt;p&gt;As a developer, I have made $500 in the last month writing Technical Articles.&lt;/p&gt;

&lt;p&gt;Below are some of the things I have learned about writing a good technical article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-technical-article"&gt;
  &lt;/a&gt;
  What is a technical article?
&lt;/h2&gt;

&lt;p&gt;A technical article is an article that is used to inform, instruct, or direct a specific audience on how to do something.&lt;/p&gt;

&lt;p&gt;To write a good technical article, there are some things you need to get right.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-come-up-with-a-good-structure-or-layout"&gt;
  &lt;/a&gt;
  1. Come up with a good structure or layout.
&lt;/h2&gt;

&lt;p&gt;The format of an excellent technical article includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Title&lt;/li&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;Body&lt;/li&gt;
&lt;li&gt;Conclusion&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A title should be a headline that demands attention and should have keyword combinations that reflect what the article is about.&lt;/p&gt;

&lt;p&gt;The introduction should describe the problem and the solutions that the article will cover. Ensure that the introduction lets the reader know what the article is all about.&lt;/p&gt;

&lt;p&gt;In the body part of the article, describe the problem and the solution in detail. Try to tell a story. The story should keep the reader engaged at every step. Make a list of your main points. Then progress from one point to another logically to lead to a conclusion.&lt;/p&gt;

&lt;p&gt;The conclusion should essentially include a summary of all the main points mentioned in the body.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-do-a-lot-of-research"&gt;
  &lt;/a&gt;
  2. Do a lot of research.
&lt;/h2&gt;

&lt;p&gt;Writing a good technical article is challenging because it can take a lot of your time and often requires doing a lot of research.&lt;/p&gt;

&lt;p&gt;Doing research when writing a technical article will help you understand the problem you are trying to solve and the solutions you can come up with.&lt;/p&gt;

&lt;p&gt;The research will also help you understand your audience and the message you are trying to deliver to them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-know-your-audience"&gt;
  &lt;/a&gt;
  3. Know your audience
&lt;/h2&gt;

&lt;p&gt;Knowing your audience when writing a technical article is very important because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It helps you to make decisions about what information you should include.&lt;/li&gt;
&lt;li&gt;It directs you on how you should arrange that information.&lt;/li&gt;
&lt;li&gt;It helps to know what supporting details will be necessary for the reader to understand what you are presenting.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Keeping your audience in mind will help you organize your ideas and how best to support your argument.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-use-examples"&gt;
  &lt;/a&gt;
  4. Use examples
&lt;/h2&gt;

&lt;p&gt;Use examples to help your audience better understand and relate to key points of the technical article you are writing.&lt;/p&gt;

&lt;p&gt;Examples can be in the form of screenshots or code snippets.&lt;/p&gt;

&lt;p&gt;As a technical writer, examples can serve as evidence to support your general claims or arguments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-read-other-technical-articles"&gt;
  &lt;/a&gt;
  5. Read other technical articles.
&lt;/h2&gt;

&lt;p&gt;Reading other technical articles will help you get inspiration and give you ideas on writing better articles.&lt;/p&gt;

&lt;p&gt;You can get inspiration by reading some of the technical articles I have written and published so far.&lt;/p&gt;

&lt;p&gt;This article shows you how to export Stripe payments data from Stripe to Postgres for deeper queries and data analysis for visualization.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://arctype.com/blog/stripe-payments-sql-postgres/"&gt;https://arctype.com/blog/stripe-payments-sql-postgres/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This article directs you on how to use Stored procedures to allow access to some parts of a table in a database while denying direct select, insert, update and delete operations against the table.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://arctype.com/blog/stored-procedures-in-sql/"&gt;https://arctype.com/blog/stored-procedures-in-sql/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>writing</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
