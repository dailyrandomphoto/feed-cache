<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>CSS methodology and architecture</title>
      <author>Kevin Pennekamp</author>
      <pubDate>Fri, 16 Apr 2021 08:02:54 +0000</pubDate>
      <link>https://dev.to/crinkle/css-methodology-and-architecture-3b34</link>
      <guid>https://dev.to/crinkle/css-methodology-and-architecture-3b34</guid>
      <description>&lt;p&gt;For years I have used &lt;a href="https://www.xfive.co/blog/itcss-scalable-maintainable-css-architecture/"&gt;ITCSS&lt;/a&gt; as my goto CSS architecture for large projects. It helped me to keep my CSS maintainable with a small team. But in the last two years, I've found myself applying &lt;em&gt;utilities&lt;/em&gt; more, and writing CSS components/blocks less. More and more parts of ITCSS were left untouched and unused. My CSS architecture had become too complex for my daily use. And it was not just me. You see the movement in the community, but also within my own team.&lt;/p&gt;

&lt;p&gt;I am a not &lt;a href="https://tailwindcss.com/"&gt;utility-first&lt;/a&gt; guy. But 80% of my CSS code is utilities these days. The remaining parts consist of CSS targeting layouts (e.g. grids) and blocks that could be solved with utilities (e.g. using operators like &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;~&lt;/code&gt;). At this point, I came across the &lt;a href="https://cube.fyi/"&gt;CUBE CSS&lt;/a&gt; of &lt;a href="https://twitter.com/piccalilli_"&gt;Andy Bell&lt;/a&gt;. It is the methodology describing how I was, and still am, implementing CSS. So as every self-respecting front-end developer with an online presence, I took it, changed it, created a framework, and wrote about it!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#from-methodology-to-framework"&gt;
  &lt;/a&gt;
  From methodology to framework
&lt;/h2&gt;

&lt;p&gt;CUBE CSS is a methodology with &lt;em&gt;simplicity&lt;/em&gt; at its core. It values CSS for what it is. The methodology works well with &lt;em&gt;custom properties&lt;/em&gt; to implement a &lt;a href="https://github.com/kevtiq/feo-css"&gt;framework&lt;/a&gt;. The combination creates a &lt;em&gt;flexible&lt;/em&gt;, &lt;em&gt;scalable&lt;/em&gt; and &lt;em&gt;extensible&lt;/em&gt; CSS architecture. The custom properties act as &lt;a href="https://css-tricks.com/what-are-design-tokens/"&gt;design tokens&lt;/a&gt; and can be used across all layers of the architecture. My framework consists of three layers.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Layout&lt;/strong&gt;: classes that look at the macro-level of an application, like the once I described &lt;a href="https://dev.to/crinkle/modern-css-grid-solutions-to-common-layout-problems-hk9"&gt;here&lt;/a&gt;. They provide flexible and responsive layout solutions that are common across an application. For inspiration on common layout patterns, check &lt;a href="https://every-layout.dev"&gt;every-layout.dev&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Utilities&lt;/strong&gt;: classes that do one job and do one job well. This is often a class that alters a single property. But utilities like the &lt;a href="https://github.com/kevtiq/feo-css/blob/main/src/utilities/click-area.scss"&gt;&lt;code&gt;.click-area&lt;/code&gt; class&lt;/a&gt; cover more than a single property but still do only one thing.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Blocks&lt;/strong&gt;: correspond to UI components. That what cannot be solved with layout and/or utility classes alone can be solved in blocks. You can choose to cover all styles of a component in a block, or you can only put those styles not covered by other classes in a block.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;CUBE CSS does include a fourth layer, exceptions. Although I love the &lt;code&gt;data-&lt;/code&gt;attributes on HTML tags, I see them as a part of the blocks.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you look closely at the code of &lt;a href="https://github.com/kevtiq/feo-css"&gt;my framework (Feo)&lt;/a&gt;, it has the architecture outlined below. As you can see, it only focuses on layout and utility classes. Blocks and exceptions are very project-specific, and often tied to UI components. Therefore they are left out of scope in this framework. However, there are many ways how you can add blocks in conjunction with this framework to a project. You can add a directory to the framework, but I would suggest &lt;em&gt;co-locate&lt;/em&gt; it near the corresponding UI components. You could do this via CSS modules, styled-components, scoped styles in Svelte, etc.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;styles/
├── layout/        // classes for layout patterns
├── utilities/     // utility classes
├── _global.scss   // global styles targeting HTML tags
├── _reset.scss    // CSS reset
├── _tokens.scss   // design tokens
└── index.scss
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Implementing and using this correctly requires some basic knowledge about specificity and the cascade. Many of the layout patterns will apply CSS properties with a higher specificity compared to utilities. In some cases, the specificity might be the same, but you should not override layout properties with utilities.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#detailed-look-at-the-framework"&gt;
  &lt;/a&gt;
  detailed look at the framework
&lt;/h2&gt;

&lt;p&gt;At its core is the &lt;code&gt;_token.scss&lt;/code&gt; file. In this file, you define all your design tokens as SCSS variables. But why not define them as custom properties? As the framework is &lt;em&gt;extensible&lt;/em&gt;, you should be able to define your own names for the variables, with your preferred names. Do you want to use &lt;code&gt;-xs&lt;/code&gt; or &lt;code&gt;-4&lt;/code&gt; as a name for spacing? This makes it impossible to correctly define all utility classes. But by using SCSS variables as the definitions, we can generate custom properties that can be used for all your additional (block) classes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="nv"&gt;$colors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'black'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'white'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#fff&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;@each&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$color&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$colors&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nt"&gt;--&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="nd"&gt;:&lt;/span&gt; &lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nv"&gt;$color&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the design tokens, we can generate all utility classes. Instead of setting the value of all the utility classes, we refer to the corresponding custom property, as shown below. Assume you change the value of &lt;code&gt;--black&lt;/code&gt; for a specific page to &lt;code&gt;#fff&lt;/code&gt;. All utility classes (and blocks) that have a reference to the custom property &lt;code&gt;--black&lt;/code&gt;, will now use the value &lt;code&gt;#fff&lt;/code&gt; instead of &lt;code&gt;#000&lt;/code&gt; on this specific page. This creates a consistent but flexible experience for both the user and developer. We let the cascade of CSS do its work for custom properties.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="k"&gt;@each&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$color&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$colors&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;.bg-&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A similar approach is taken for the layout patterns. Many of the layout patterns still have properties that you want to adjust. Take the example below. This generates a responsive overview of tiles. But you want to be able to set the size of the gap. By generating utility classes we allow developers to set classes like &lt;code&gt;tiles tiles-g-xs&lt;/code&gt; on elements. Similarly, other properties can be identified that can be replaced by additional layout utility classes (e.g. replacing the &lt;code&gt;20rem&lt;/code&gt;). Although this flurries the lines between layout and utilities, this is okay. It aids towards the goal of covering 80% of the applied styles with this framework.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="nc"&gt;.tiles&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;--tiles-gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;spacing-0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="na"&gt;grid-row-gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;tiles-gap&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="na"&gt;grid-column-gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;tiles-gap&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="na"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;auto-fit&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;minmax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;20rem&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1fr&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Generate classes to set the tile gap&lt;/span&gt;
&lt;span class="k"&gt;@each&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$space&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$spacing&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;.tiles-g-&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;--tiles-gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;spacing-&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up
&lt;/h2&gt;

&lt;p&gt;The moment I read about CUBE CSS, I was a fan of the methodology. How could I not? It was basically describing how I felt about CSS and how I was using it. At the same time, I became a big fan of customer properties. So why not combine the two into a framework? Which is what I did. The current version of the framework is open on &lt;a href="https://github.com/kevtiq/feo-css"&gt;GitHub&lt;/a&gt;. It is small but used in two projects. It has several layout and utility classes build in. For now, I intend to continue to improve and enrich the framework when I can. Let me know in the &lt;a href="https://github.com/kevtiq/feo-css/issues"&gt;GitHub issues&lt;/a&gt; what you think should be added!&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>html</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Top 20 Android Games under 25 Mb (Part 2)</title>
      <author>Konchada Sai Ansul</author>
      <pubDate>Fri, 16 Apr 2021 08:00:06 +0000</pubDate>
      <link>https://dev.to/saiansulsblog/top-20-android-games-under-25-mb-part-2-4nf2</link>
      <guid>https://dev.to/saiansulsblog/top-20-android-games-under-25-mb-part-2-4nf2</guid>
      <description>&lt;p&gt;Hey Guys,&lt;br&gt;
Welcome back to a new post of &lt;strong&gt;SAI ANSUL'S BLOG&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this blog after a long research I have got for you best games🎮 under 25mb which won't affect your phone's storage.&lt;/p&gt;

&lt;p&gt;These games are self-tested and selected under various criteria mentioned below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; Under 25mb &lt;/li&gt;
&lt;li&gt; Genre: Adventure, Classic &amp;amp; Educational &lt;/li&gt;
&lt;li&gt;Top Rated on Playstore⭐&lt;/li&gt;
&lt;li&gt; Friendly for all users&lt;/li&gt;
&lt;li&gt; Free for all
I have also shared the link of each game. Click on the title and directly download it from Google Play store.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And this is the continuation of the previous blog. If you haven't read that you click &lt;a href="https://saiansul.hashnode.dev/top-25-android-games-under-25-mb-part-1"&gt;here&lt;/a&gt;  and read it.&lt;/p&gt;

&lt;p&gt;So lets start,&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#11-redungeon"&gt;
  &lt;/a&gt;
  11.   &lt;a href="https://play.google.com/store/apps/details?id=com.nitrome.redungeon"&gt;Redungeon&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3rG81qL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618413960729/VWBhi72Zf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3rG81qL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618413960729/VWBhi72Zf.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with a rating of 4.5⭐devloped by &lt;strong&gt;Nitrome&lt;/strong&gt;. This is of the best games I have ever used. The best thing I liked was its theme. This game has endless, and random difficulties over increasing levels. This game has a good music and works on swipe-actions onscreen.&lt;br&gt;
Overall this game is worth trying, Do give it a try.&lt;/p&gt;

&lt;p&gt;So, the next one is bit interesting.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12-pix-hop"&gt;
  &lt;/a&gt;
  12.  &lt;a href="https://play.google.com/store/apps/details?id=com.bnoogames.pixhop"&gt;Pix Hop&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xnzXbTF6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618414437232/RfHjC2kDB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xnzXbTF6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618414437232/RfHjC2kDB.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with a rating of 4.4⭐devloped by &lt;strong&gt;BNOO Games&lt;/strong&gt;. This is a unique, simple yet addictive game this is absolutely free. This game has over 25 unlock-able characters, it has easy controls like touch or tilt. This game has been nominated for many of the awards.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#13-hazardsthe-ultimate-arcade-survival-experience"&gt;
  &lt;/a&gt;
  13.  &lt;a href="https://play.google.com/store/apps/details?id=com.brulu.hazard"&gt;Hazards:The Ultimate Arcade Survival Experience&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dlCRuQj2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618414909704/l4TG2icxs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dlCRuQj2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618414909704/l4TG2icxs.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with a rating of 4.1⭐devloped by &lt;strong&gt;Brulu Games&lt;/strong&gt;. This is an arcade game, it has three modes like classic, arcade &amp;amp; time attack. The game is tough and frustrating but you won't quit this game that is why this is in the list. I recommended you if you are a guy who gets angry on small things. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#14-orbit-playing-with-gravity"&gt;
  &lt;/a&gt;
  14. Orbit -  &lt;a href="https://play.google.com/store/apps/details?id=com.ChetanSurpur.Orbit"&gt;Playing with Gravity&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1mpwCOUL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618415268039/Oa6DlLiPG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1mpwCOUL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618415268039/Oa6DlLiPG.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with a rating of 4.4⭐devloped by &lt;strong&gt;HIGHKEY Games&lt;/strong&gt;. This game has 45 free levels, you can play unlimited levels created by other players i.e community. This is gravity simulator game. You can give it a try!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#15-stack-ball-blast-through-platforms"&gt;
  &lt;/a&gt;
  15.   &lt;a href="https://play.google.com/store/apps/details?id=com.azurgames.stackball"&gt;Stack Ball - Blast through platforms&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AN49lB5H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618416036375/M66ou6XE6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AN49lB5H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618416036375/M66ou6XE6.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with a rating of 4.1⭐devloped by &lt;strong&gt;CASUAL AZUR GAMES&lt;/strong&gt;. This game is an arcade game, which is smash, bounce and helix game. Where you need to save your ball fall on the black brick. There are levels increasing the number of black bricks, try it out. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#16-dr-driving-2"&gt;
  &lt;/a&gt;
  16. Dr. Driving 2
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ObwYZw2c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618416436063/1vVXl1JPz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ObwYZw2c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618416436063/1vVXl1JPz.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with a rating of 4.3⭐devloped by &lt;strong&gt;SUD Inc.&lt;/strong&gt;. This is one of the best simulation games I have ever seen, this is a very compact game with a lot of modes and features. Here are some to know: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Career Mode&lt;/li&gt;
&lt;li&gt;Car Lab&lt;/li&gt;
&lt;li&gt;Top Racer&lt;/li&gt;
&lt;li&gt;Taxi Mode
In this game you  can buy many types of cars and you have upgrade the parts as a part of servicing, the part I liked is the taxi mode, it is so realistic  that you'll fall crazy for this game.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#17-smash-cricket"&gt;
  &lt;/a&gt;
  17.  &lt;a href="https://play.google.com/store/apps/details?id=com.moonfrog.cricket"&gt;Smash Cricket&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C8hY6Fvu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618417126271/8-7Qp62c4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C8hY6Fvu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618417126271/8-7Qp62c4.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with a rating of 4.1⭐devloped by &lt;strong&gt;MoonFrog&lt;/strong&gt;. This is a good cricket game to experience it virtually, this is purely for a cricket fan. This game also has online mode to play with friends. Its resolution is 3d and the sound effect is just wow! &lt;br&gt;
This game has 6 modes to play that are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chase Down&lt;/li&gt;
&lt;li&gt;Friendly &lt;/li&gt;
&lt;li&gt;World Cup&lt;/li&gt;
&lt;li&gt;Limit Overs &lt;/li&gt;
&lt;li&gt;Challenge and &lt;/li&gt;
&lt;li&gt;Online mode&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#18-tap-the-frog"&gt;
  &lt;/a&gt;
  18.   &lt;a href="https://play.google.com/store/apps/details?id=com.playmous.ttf"&gt;Tap the Frog&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X_EyCXrp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618417745918/LYr7tFhri.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X_EyCXrp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618417745918/LYr7tFhri.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with a rating of 4.6⭐devloped by &lt;strong&gt;playmous&lt;/strong&gt;. This a cute, quite entertaining game with smooth controls. This has 28 mini games, has multi player mode to enjoy with friends &amp;amp; family. This is an adventurous game, try and let me know your experience in comments below.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#19-break-the-prison"&gt;
  &lt;/a&gt;
  19.  &lt;a href="https://play.google.com/store/apps/details?id=com.fxb.prison"&gt;Break the Prison&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FYK4_2zk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618419748192/00qJhMu6H.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FYK4_2zk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618419748192/00qJhMu6H.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with a rating of 3.7⭐devloped by &lt;strong&gt;playmous&lt;/strong&gt;. This is an action game in which a prisoner is framed inside the jail and you need to help him escaping it. You have been sentenced to death for a crime you did not commit. So, try it out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#20-west-gunfighter"&gt;
  &lt;/a&gt;
  20.  &lt;a href="https://play.google.com/store/apps/details?id=com.cg.cowboy"&gt;West Gunfighter&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OXBiqQeY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618420307411/vvsjkADLz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OXBiqQeY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618420307411/vvsjkADLz.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with a rating of 4.2⭐devloped by &lt;strong&gt;Candy Mobile&lt;/strong&gt;. Its really a good game to play, you can customize the cowboy, you can unlock and choose your horse and weapons. This game will remind you of the real wild west. You need to tackle missions, earn rewards, challenge &amp;amp; duel to take out bandits, and find hidden loot.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#21-dr-parking-4"&gt;
  &lt;/a&gt;
  21.   &lt;a href="https://play.google.com/store/apps/details?id=com.ansangha.drparking4"&gt;Dr. Parking 4&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lAGLVBiX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618421691249/WWuHwrAAZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lAGLVBiX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618421691249/WWuHwrAAZ.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with a rating of 4.2⭐devloped by &lt;strong&gt;SUD Inc.&lt;/strong&gt;. In this game you need to park your car in the parking lot, in each level the difficulty increases. This is the biggest parking simulation game.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#22-block-puzzle-jewel"&gt;
  &lt;/a&gt;
  22.  &lt;a href="https://play.google.com/store/apps/details?id=com.differencetenderwhite.skirt"&gt;Block Puzzle Jewel&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eQ1BoL0A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618423112056/_ptQXyGU7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eQ1BoL0A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618423112056/_ptQXyGU7.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with a rating of 4.3⭐devloped by &lt;strong&gt;hua weiwei&lt;/strong&gt;. This is one of the best puzzle game I have ever seen digitally. The goal is to drop blocks in order to create and destroy full lines on the screen both vertically and horizontally. This is with easy graphics, you need to fill the screen with the blocks with different types of block.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#23-dragon-hunter-deadly-slayer"&gt;
  &lt;/a&gt;
  23.  &lt;a href="https://play.google.com/store/apps/details?id=com.topactiongamez.dragon.hunter.deadly.free"&gt;Dragon Hunter: Deadly Slayer&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jk1X6OxP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618423608911/emARJe9ED.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jk1X6OxP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618423608911/emARJe9ED.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with a rating of 4.3⭐devloped by &lt;strong&gt;TAG Studio 2015&lt;/strong&gt;.In this game you need to hunt the dragon using the sniper in the jungle.it out the deadly dragon there and prove yourself among the best hunter.3D graphics real based Dragon to cold down your blood, latest control of Sniper for shooting to death, Challenging jungle environment which could be able to wipe out your sleep. There are 8 interactive yet Challenging 3d levels to master.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#24-unblock-me-free"&gt;
  &lt;/a&gt;
  24.  &lt;a href="https://play.google.com/store/apps/details?id=com.kiragames.unblockmefree"&gt;Unblock Me FREE&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rp-eBhPM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618424166663/QJapIHphg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rp-eBhPM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618424166663/QJapIHphg.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This game comes with a rating of 4.5⭐devloped by &lt;strong&gt;Kiragames Co., Ltd.&lt;/strong&gt;.This is an arcade game that helps you to relief mind stress, and makes your mind fresh. This game has more than 40,000 levels to challenge. This is a family-friendly game and suitable for all ages. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#25-all-games-all-in-one-game-new-games"&gt;
  &lt;/a&gt;
  25.  &lt;a href="https://play.google.com/store/apps/details?id=com.inventorinc.allinonegame_newgames"&gt;All Games, All in one Game, New Games&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qv0BC8Gs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618424704796/SlImTk1aV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qv0BC8Gs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618424704796/SlImTk1aV.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with a rating of 4⭐devloped by &lt;strong&gt;Inventor Inc.&lt;/strong&gt; This game has more than 1000 games in 1 app, Each app has its instruction manual.  A lot of different genres: sports, casual games, stimulation, Strategy, Casino and many more. So, Go and grab it! &lt;/p&gt;

&lt;p&gt;This was it for today guys. Do comment which game you liked the most.&lt;/p&gt;

&lt;p&gt;Stay tuned for some more interesting blogs coming up soon.&lt;/p&gt;

&lt;p&gt;If you like my content and want to support my efforts please like👍🏻, share📲 &amp;amp; subscribe to the newsletter to be get notified whenever I post a new blog.&lt;/p&gt;

</description>
      <category>android</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to optimize your images for performance</title>
      <author>kaspera</author>
      <pubDate>Fri, 16 Apr 2021 07:19:13 +0000</pubDate>
      <link>https://dev.to/kaspera/how-to-optimize-your-images-for-performance-24pn</link>
      <guid>https://dev.to/kaspera/how-to-optimize-your-images-for-performance-24pn</guid>
      <description>&lt;p&gt;Images are a big part of a web page. Not only do they take up a lot of “screen real estate”, but they also account for a large chunk of the total page size.&lt;/p&gt;

&lt;p&gt;As of January 2021, images made up on average 45% (Desktop) and 48% (Mobile) of a page’s total weight (&lt;a href="https://httparchive.org/reports/page-weight"&gt;HTTP Archive&lt;/a&gt;). &lt;/p&gt;

&lt;p&gt;Optimizing images can therefore reduce your total page size by a lot, and as a result, speed up your performance.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-the-right-image-format"&gt;
  &lt;/a&gt;
  ☑️ Use the right image format
&lt;/h2&gt;

&lt;p&gt;Choosing the right format for your images is like a craftsman selecting the right tool for a job.&lt;/p&gt;

&lt;p&gt;He can build a house using an ordinary hammer, but using a nailgun instead will accelerate the process significantly.&lt;/p&gt;

&lt;p&gt;The same goes for images. If you wanted to display a picture of a cat, you could use PNG, but a better and faster solution would be to use JPG.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NyO7-i9f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/be46bcuib9hb9xnig8yh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NyO7-i9f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/be46bcuib9hb9xnig8yh.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s go over some of the most common image formats and when to use them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jpeg-jpg-joint-photographic-experts-group"&gt;
  &lt;/a&gt;
  JPEG / JPG (Joint Photographic Experts Group)
&lt;/h3&gt;

&lt;p&gt;The JPEG-format has, since its introduction in 1992, dominated the web. &lt;/p&gt;

&lt;p&gt;JPEG uses a &lt;a href="https://en.wikipedia.org/wiki/Lossy_compression"&gt;lossy compression&lt;/a&gt; which means that the file size decreases as the image quality decreases. &lt;/p&gt;

&lt;p&gt;JPEG doesn’t support transparency – it must have a solid background color.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NOTE: JPG and JPEG are the same image format. The ‘E’ was removed to support the three character-limit in early Windows-versions.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You should use JPEG for:&lt;/strong&gt; Photos and artwork.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#png-portable-network-graphics"&gt;
  &lt;/a&gt;
  PNG (Portable Network Graphics)
&lt;/h3&gt;

&lt;p&gt;In contrast to JPG, PNG displays higher color depths (meaning millions of colors) and also supports transparency.&lt;/p&gt;

&lt;p&gt;PNG uses a &lt;a href="https://en.wikipedia.org/wiki/Lossless_compression"&gt;lossless compression&lt;/a&gt; which means that the compression doesn’t affect the quality of the image.&lt;/p&gt;

&lt;p&gt;PNG is great for illustrations and images with text (e.g., comics) since it doesn’t pixelate like JPEG.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eFOnOYeD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xlu95p8uglgywj8pqbt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eFOnOYeD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xlu95p8uglgywj8pqbt.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NOTE: Since PNG is a lossless format, file sizes can get huge.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You should use PNG for:&lt;/strong&gt; Transparent graphics, illustrations, images with text.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gif-graphics-interchange-format"&gt;
  &lt;/a&gt;
  GIF (Graphics Interchange Format)
&lt;/h3&gt;

&lt;p&gt;GIF goes all the way back to 1987. It almost died out in the 2000s, but thanks to its animation support, it had its renaissance when the &lt;a href="https://en.wikipedia.org/wiki/Internet_meme"&gt;meme-culture&lt;/a&gt; exploded.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u1MEmsaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xcxcchc5n82ctuifdftr.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u1MEmsaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xcxcchc5n82ctuifdftr.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It soon found its way into pop-culture, and now animated GIFs are everywhere (for instance, nearly all messaging apps have a GIF-section where you can send animated GIFs). &lt;/p&gt;

&lt;p&gt;GIF-images often look pixelated since they only support 256-colors (this can be &lt;a href="https://en.wikipedia.org/wiki/GIF#Palettes"&gt;tweaked&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NOTE: An animated GIF is really just a collection of separate images; therefore, file sizes can get huge.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;GIF also uses a &lt;a href="https://en.wikipedia.org/wiki/Lossless_compression"&gt;lossless compression&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You should use GIF for:&lt;/strong&gt; Animations and simple graphics.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#svg-scalable-vector-graphics"&gt;
  &lt;/a&gt;
  SVG (Scalable Vector Graphics)
&lt;/h3&gt;

&lt;p&gt;SVG is an XML-based &lt;a href="https://en.wikipedia.org/wiki/Vector_graphics"&gt;vector format&lt;/a&gt;, which means it’s automatically scalable. You could scale it 1000x, and it wouldn’t affect the resolution nor the file size.&lt;/p&gt;

&lt;p&gt;It works great for logos, icons, and text and often gives you a smaller file size than JPGs or PNGs.&lt;/p&gt;

&lt;p&gt;By adding some code, you can also animate SVG and make it interactive. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You should use SVG for:&lt;/strong&gt; Illustrations, logos, and icons.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#webp-web-picture-format"&gt;
  &lt;/a&gt;
  WebP (Web Picture format)
&lt;/h3&gt;

&lt;p&gt;WebP is the new kid on the block. Developed by Google, it is looking to bring smaller and richer images – making the web faster.&lt;/p&gt;

&lt;p&gt;WebP is 25-35% smaller in file size than JPEG and PNG, supports lossless and lossy compression, animation, and transparency when lossy compressed.&lt;/p&gt;

&lt;p&gt;So why isn’t it everywhere? Browser support.&lt;/p&gt;

&lt;p&gt;Even though support has grown steadily, it is still (as of February 2021) “only” 92%. We’re getting there, though.&lt;/p&gt;

&lt;p&gt;But this doesn’t mean you can’t use WebP – you just need a fallback image. &lt;/p&gt;

&lt;p&gt;By using the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture"&gt;&lt;code&gt;&amp;lt;Picture&amp;gt;&lt;/code&gt;-tag&lt;/a&gt;, you can provide a fallback image – e.g., JPEG if the user’s browser doesn’t support WebP. If you’re using WordPress, you can use a plugin like &lt;a href="https://wordpress.org/plugins/shortpixel-image-optimiser/"&gt;ShortPixel&lt;/a&gt; for this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You should use SVG for:&lt;/strong&gt; Photos, illustrations, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-videos-instead-of-animated-gifs"&gt;
  &lt;/a&gt;
  🎥 Use videos instead of animated GIFs
&lt;/h2&gt;

&lt;p&gt;As mentioned earlier, animated GIFs can be huge in file size – some going up in the double digits megabytes.&lt;/p&gt;

&lt;p&gt;Luckily it’s relatively easy to convert your GIFs to video files, and thanks to the “autoplay” attribute in the &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;-tag, it can still have the same look and feel as a GIF.&lt;/p&gt;

&lt;p&gt;You can use a service like &lt;a href="https://cloudconvert.com/gif-to-mp4"&gt;CloudConvert&lt;/a&gt; to convert your GIF to MP4-format.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#compress-compress-compress"&gt;
  &lt;/a&gt;
  🗜️ Compress, compress, compress
&lt;/h2&gt;

&lt;p&gt;Compressing an image is one of the easiest and fastest ways to reduce your page size.&lt;/p&gt;

&lt;p&gt;What is image compression? &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Image compression is an application of data compression that encodes the original image with few bits. The objective of image compression is to reduce the redundancy of the image and to store or transmit data in an efficient form.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;-Source: &lt;a href="http://disp.ee.ntu.edu.tw/meeting/%E7%B6%AD%E6%AF%85/An%20Introduction%20to%20Image%20Compression/An%20introduction%20to%20Image%20Compression.pdf"&gt;An Introduction To Image Compression&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;There are tons of excellent image compression tools out there – both web-based and plugins. Most of the time, you won’t be able to tell by the image quality that the image has been compressed, but the saved kilobytes tell another story.&lt;/p&gt;

&lt;p&gt;Some of the tools you can use:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://tinypng.com/"&gt;TinyPNG&lt;/a&gt; (both PNG and JPG)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://squoosh.app/"&gt;Squoosh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://kraken.io/web-interface"&gt;Kraken.io&lt;/a&gt; (Web &amp;amp; WordPress / Magento plugin)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://compressor.io/"&gt;Compressor.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://wordpress.org/plugins/shortpixel-image-optimiser/"&gt;ShortPixel&lt;/a&gt; (WordPress plugin)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://wordpress.org/plugins/wp-smushit/"&gt;Smush&lt;/a&gt; (WordPress plugin)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://apps.shopify.com/crush-pics"&gt;Crush.pics&lt;/a&gt; (Shopify plugin)&lt;/li&gt;
&lt;li&gt;…And many more&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#scale-it-down"&gt;
  &lt;/a&gt;
  🤏 Scale it down
&lt;/h2&gt;

&lt;p&gt;Bigger is definitely not always better. It can be tempting to upload an image in as high a resolution as possible since you want your image to look as good as possible for the user.&lt;/p&gt;

&lt;p&gt;Don’t.&lt;/p&gt;

&lt;p&gt;You are wasting the users’ bandwidth by serving them oversized images and damaging your site’s performance.&lt;/p&gt;

&lt;p&gt;We’ve seen images with a 3000px – 4000px width before, which makes absolutely no sense. If you’re using WordPress, you can use a plugin like &lt;a href="https://wordpress.org/plugins/imsanity/"&gt;Imsanity&lt;/a&gt; to scale images down to a sane size automatically.&lt;/p&gt;

&lt;p&gt;So be sure to serve your images in the correct dimensions. &lt;/p&gt;

&lt;p&gt;If you use icons, it can also be a good idea to check which size they are uploaded in. If the maximum dimensions you are showing them in are 32×32 px, then you should shrink anything above these dimensions down.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-responsive"&gt;
  &lt;/a&gt;
  📱 Get responsive
&lt;/h2&gt;

&lt;p&gt;Back in the days, when we all were browsing the web in an 800×600 resolution, it was easier to serve images since we all had roughly the same screen size.&lt;/p&gt;

&lt;p&gt;Today, not so much. Screen sizes vary from the tiny Android phone with the 320px width display to the insane 49-inch monitors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cq7spjcM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t2927zxhc0xc30vt2451.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cq7spjcM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t2927zxhc0xc30vt2451.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So instead of using a “one-size-fits-all” approach for your images (the same image gets served to all devices), it can be a good idea to use responsive images.&lt;/p&gt;

&lt;p&gt;By serving scaled-down versions to smaller devices, it can save 2-4x data.&lt;/p&gt;

&lt;p&gt;So how many versions should you serve? There isn’t a correct answer to this, but it’s common to serve 3 – 5 different sizes of the image.&lt;/p&gt;

&lt;p&gt;We won’t go into the technical details on how to serve different sizes for different resolutions, but &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images#resolution_switching_different_sizes"&gt;Mozilla has a great resource here explaining it&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can also use a cloud service like &lt;a href="https://cloudinary.com/"&gt;Cloudinary&lt;/a&gt; (they also have a &lt;a href="https://wordpress.org/plugins/cloudinary-image-management-and-manipulation-in-the-cloud-cdn/"&gt;WordPress-plugin&lt;/a&gt;) to serve responsive images.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lazy-load-images"&gt;
  &lt;/a&gt;
  😴 Lazy load images
&lt;/h2&gt;

&lt;p&gt;We already know that images take up a considerable chunk of our total page size. But what if you didn’t have to download all the images right away? &lt;/p&gt;

&lt;p&gt;Lazy-loading does just this. When enabled, it won’t download or render the images before they are visible to the user.&lt;/p&gt;

&lt;p&gt;This essentially means that you can have an infinite amount of images below the fold – and it won’t affect your performance. &lt;/p&gt;

&lt;p&gt;In the past, you needed custom JavaSript to enable it, but in early 2020 it became a web standard, meaning you can simply enable it by adding loading=”lazy” to your &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;-tags. Pretty cool, right?&lt;/p&gt;

&lt;p&gt;Moreover, since &lt;a href="https://make.wordpress.org/core/2020/07/14/lazy-loading-images-in-5-5/"&gt;WordPress 5.5&lt;/a&gt;, all images will be lazy-loaded by default. &lt;/p&gt;

&lt;p&gt;Unfortunately, it’s not all sunshine and rainbows. Since it’s a relatively new feature, not all browsers are supporting the attribute yet. For instance, the always late to the party, Safari, doesn’t support it yet. You can see &lt;a href="https://caniuse.com/loading-lazy-attr"&gt;browser support for the loading-attribute right here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-alertdesk-to-analyze-your-content"&gt;
  &lt;/a&gt;
  🔍 Use Alertdesk to analyze your content
&lt;/h2&gt;

&lt;p&gt;In our performance reports, you’ll find a breakdown of all your content – including images.&lt;/p&gt;

&lt;p&gt;Get a better understanding of how it impacts your performance and quickly identify load-sinners.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.alertdesk.com/?utm_source=devto&amp;amp;utm_medium=organic&amp;amp;utm_campaign=article&amp;amp;utm_content=how-to-optimize-your-images-for-performance"&gt;Start analyzing your content today with Alertdesk. Try us free for 14 days.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>performance</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>html</category>
    </item>
    <item>
      <title>Fully accessible Menu components by headless UI tailwindcss</title>
      <author>Nirazan Basnet</author>
      <pubDate>Fri, 16 Apr 2021 07:10:59 +0000</pubDate>
      <link>https://dev.to/nirazanbasnet/fully-accessible-menu-components-by-headless-ui-tailwindcss-4ml7</link>
      <guid>https://dev.to/nirazanbasnet/fully-accessible-menu-components-by-headless-ui-tailwindcss-4ml7</guid>
      <description>&lt;p&gt;This blog focuses on best-practice guidance on implementing accessibility in the menu components by using &lt;a href="https://headlessui.dev/"&gt;Headless UI&lt;/a&gt; from the creator of tailwind Labs using tailwindcss.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-accessibility-is-important"&gt;
  &lt;/a&gt;
  Why accessibility is important?
&lt;/h3&gt;

&lt;p&gt;As in 2021, the Web should be accessible to information and interaction for many people. And also to provide equal access and equal opportunity to people with disabilities where there are barriers to print, audio, and visual media can be much more easily overcome through Web technologies. Also, this can help to deliver the best search results in Google and rank it according to its usability and it will boost your UX and your product.&lt;/p&gt;

&lt;p&gt;We will be using,&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#headless-ui"&gt;
  &lt;/a&gt;
  &lt;a href="https://headlessui.dev/"&gt;Headless UI&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Creators of Tailwind CSS, Tailwind UI, and Refactoring UI.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#tailwindcss"&gt;
  &lt;/a&gt;
  &lt;a href="https://tailwindcss.com/"&gt;Tailwindcss&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Rapidly build modern websites without ever leaving your HTML 
through different utility classes.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;HeadlessUI Dev is a set of completely unstyled, fully accessible UI components, designed to integrate beautifully with Tailwind CSS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y67oaeEw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3v1wlmhq1iw35ua1gfgn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y67oaeEw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3v1wlmhq1iw35ua1gfgn.png" alt="Headless UI"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#lets-build-menu-components-from-headless-ui"&gt;
  &lt;/a&gt;
  Let's build Menu Components from headless UI
&lt;/h2&gt;

&lt;p&gt;Menus are used for navigation and to provide functionality which are critical parts of web page operability.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eLrXXZso--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ix6i44rvhxs79e6hmk69.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eLrXXZso--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ix6i44rvhxs79e6hmk69.png" alt="Headless UI Menu"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#using-for-reactjs"&gt;
  &lt;/a&gt;
  Using For ReactJs
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt;
&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;headlessui&lt;/span&gt;&lt;span class="sr"&gt;/reac&lt;/span&gt;&lt;span class="err"&gt;t
&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;Yarn&lt;/span&gt;
&lt;span class="nx"&gt;yarn&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;headlessui&lt;/span&gt;&lt;span class="sr"&gt;/reac&lt;/span&gt;&lt;span class="err"&gt;t
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#basic-example"&gt;
  &lt;/a&gt;
  Basic Example
&lt;/h3&gt;

&lt;p&gt;Menu Buttons are built using the Menu, &lt;code&gt;Menu.Button&lt;/code&gt;, &lt;code&gt;Menu.Items&lt;/code&gt;, and &lt;code&gt;Menu.Item&lt;/code&gt; components.&lt;/p&gt;

&lt;p&gt;The Menu.Button will automatically open/close the Menu.Items when clicked, and when the menu is open, the list of items receives focus and is automatically navigable via the keyboard.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Menu&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@headlessui/react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MyDropdown&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Menu&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* Render no wrapper, instead pass in a button manually. */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Menu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fragment&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;More&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Menu.Button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Menu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Items&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Menu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Item&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;{({&lt;/span&gt; &lt;span class="nx"&gt;active&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;
              &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;active&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bg-blue-500&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
              &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/account-settings&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nx"&gt;Account&lt;/span&gt; &lt;span class="nx"&gt;settings&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Menu.Item&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* ... */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Menu.Items&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Menu&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code is an unstyled component by using headlessUI.&lt;/p&gt;

&lt;p&gt;What is interesting here is if we see the generated HTML version below we can see &lt;strong&gt;accessibility labels&lt;/strong&gt; and by using tailwindcss there are inline classes to make it a beautiful UI.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-56 text-right fixed top-16"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"relative inline-block text-left"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"inline-flex justify-center w-full px-4 py-2 text-sm font-medium text-white bg-black rounded-md bg-opacity-20 hover:bg-opacity-30 focus:outline-none focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"headlessui-menu-button-1"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt; &lt;span class="na"&gt;aria-haspopup=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; 
         Options &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 20 20"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-5 h-5 ml-2 -mr-1 text-violet-200 hover:text-violet-100"&lt;/span&gt; &lt;span class="na"&gt;aria-hidden=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;fill-rule=&lt;/span&gt;&lt;span class="s"&gt;"evenodd"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"&lt;/span&gt; &lt;span class="na"&gt;clip-rule=&lt;/span&gt;&lt;span class="s"&gt;"evenodd"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can see in the &lt;code&gt;button&lt;/code&gt; tag there is&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;aria&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;haspopup&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;true
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#also-in-the-dropdown-content"&gt;
  &lt;/a&gt;
  Also, in the dropdown content
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"absolute right-0 w-56 mt-2 origin-top-right bg-white divide-y divide-gray-100 rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none"&lt;/span&gt;
     &lt;span class="na"&gt;aria-labelledby=&lt;/span&gt;&lt;span class="s"&gt;"headlessui-menu-button-1"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"headlessui-menu-items-10"&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"menu"&lt;/span&gt; &lt;span class="na"&gt;tabindex=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"px-1 py-1 "&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-gray-900 group flex rounded-md items-center w-full px-2 py-2 text-sm"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"headlessui-menu-item-11"&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"menuitem"&lt;/span&gt;
                &lt;span class="na"&gt;tabindex=&lt;/span&gt;&lt;span class="s"&gt;"-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-5 h-5 mr-2"&lt;/span&gt; &lt;span class="na"&gt;aria-hidden=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 20 20"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M4 13V16H7L16 7L13 4L4 13Z"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"#EDE9FE"&lt;/span&gt; &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"#A78BFA"&lt;/span&gt; &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
            Edit
        &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-gray-900 group flex rounded-md items-center w-full px-2 py-2 text-sm"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"headlessui-menu-item-12"&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"menuitem"&lt;/span&gt;
                &lt;span class="na"&gt;tabindex=&lt;/span&gt;&lt;span class="s"&gt;"-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-5 h-5 mr-2"&lt;/span&gt; &lt;span class="na"&gt;aria-hidden=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 20 20"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M4 4H12V12H4V4Z"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"#EDE9FE"&lt;/span&gt; &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"#A78BFA"&lt;/span&gt; &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M8 8H16V16H8V8Z"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"#EDE9FE"&lt;/span&gt; &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"#A78BFA"&lt;/span&gt; &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
            Duplicate
        &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#breaking-down-the-code"&gt;
  &lt;/a&gt;
  Breaking down the code:
&lt;/h3&gt;

&lt;p&gt;In the dropdown content block we have,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;aria&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;labelledby&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;headlessui-menu-button-1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;headlessui-menu-items-10&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;menu&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;tabindex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And its children div structure has&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;headlessui-menu-item-11&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;menuitem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;tabindex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#final-accessibility-notes"&gt;
  &lt;/a&gt;
  Final Accessibility notes
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. Focus management&lt;/strong&gt;&lt;br&gt;
Clicking the &lt;code&gt;Menu.Button&lt;/code&gt; toggles the menu and focuses on the &lt;code&gt;Menu.Items&lt;/code&gt; component. Focus is trapped within the open menu until Escape is pressed or the user clicks outside the menu. Closing the menu returns focus to the &lt;code&gt;Menu.Button&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Mouse interaction&lt;/strong&gt;&lt;br&gt;
Clicking a &lt;code&gt;Menu.Button&lt;/code&gt; toggles the menu. Clicking anywhere outside of an open menu will close that menu.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Keyboard interaction&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZCu8XNkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/54ym4fs20gty20657zp4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZCu8XNkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/54ym4fs20gty20657zp4.png" alt="Keyboard Interaction"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Other&lt;/strong&gt;&lt;br&gt;
All relevant ARIA attributes are automatically managed.&lt;br&gt;
For a full reference on all accessibility features implemented in Menu, see &lt;a href="https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton"&gt;the ARIA spec on Menu Buttons&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h2&gt;

&lt;p&gt;Please check out &lt;a href="https://headlessui.dev/react/menu"&gt;https://headlessui.dev/react/menu&lt;/a&gt; for more details as all the information and the example of the code are explained better in the docs.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;👏👏 Definitely, &lt;a href="https://headlessui.dev/"&gt;https://headlessui.dev/&lt;/a&gt; is my first choice for any React or VueJs project. I suggest you give it a try on your project and enjoy it!.&lt;/p&gt;

&lt;p&gt;I have been writing tailwindcss classes from the beginning of their development. And I am amazed at how this framework has evolved. Many Thanks to &lt;a href="https://twitter.com/adamwathan"&gt;Adam Wathan&lt;/a&gt; and &lt;a href="https://twitter.com/steveschoger"&gt;Steve Schoger&lt;/a&gt; for developing the awesome products. Make sure you guys follow them.&lt;/p&gt;

&lt;p&gt;Feel free to share your thoughts and opinions and leave me a comment if you have any problems or questions.&lt;/p&gt;

&lt;p&gt;Till then,&lt;br&gt;
Keep on Hacking, Cheers&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>tailwindcss</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Create a Website With Video Background | HTML &amp; CSS</title>
      <author>Pawan Bhayde</author>
      <pubDate>Fri, 16 Apr 2021 07:10:42 +0000</pubDate>
      <link>https://dev.to/pawanbhayde/create-a-website-with-video-background-html-css-fao</link>
      <guid>https://dev.to/pawanbhayde/create-a-website-with-video-background-html-css-fao</guid>
      <description>&lt;p&gt;Video is probably the number one way to draw attention. A good video background can easily make people stop and take notice, increasing the time they spend on the site. This extended time on the site could potentially lead to more interaction with other content on the page.&lt;/p&gt;

&lt;p&gt;Pulling off the video background effect is pretty simple. In fact it can be done using only CSS only. CSS background and background-image properties only accept colours, gradients, bitmaps and SVG as values. So what about the video?&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/oWGTj_tk_98"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;We create a simple HTML5 video element with loop, autoplay and muted attributes and place it inside a container element. The image used in a poster attribute will be replaced by the first frame of the video when it loads. Therefore it’s good practice to use the first frame of a video for a poster image.&lt;/p&gt;

&lt;p&gt;Read Blog Post And Download Source Code :- &lt;a href="https://www.websitemakers.xyz/2021/04/create-website-with-video-background.html"&gt;https://www.websitemakers.xyz/2021/04/create-website-with-video-background.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTML Code&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;CSS Code&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>What comment sections do you use?</title>
      <author>Madza</author>
      <pubDate>Fri, 16 Apr 2021 06:54:28 +0000</pubDate>
      <link>https://dev.to/madza/what-comment-section-solutions-do-you-use-2gdb</link>
      <guid>https://dev.to/madza/what-comment-section-solutions-do-you-use-2gdb</guid>
      <description>&lt;p&gt;For the projects that need user feedback, the comment section is an absolute must-have.&lt;/p&gt;

&lt;p&gt;Developing a fully functional and great-looking one can be pretty challenging tho, especially if tight deadlines have been set for the project.&lt;/p&gt;

&lt;p&gt;That's where already built and easy-to-set-up solutions come into play. One of the most common ones I've seen is &lt;a href="https://disqus.com/"&gt;Disqus&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Can you recommend some others, preferably in the React/NextJS ecosystem? Or do you prefer to develop your own ones?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>webdev</category>
      <category>ux</category>
    </item>
    <item>
      <title>JavaScript detecting key combinations</title>
      <author>Chris Bongers</author>
      <pubDate>Fri, 16 Apr 2021 06:51:01 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/javascript-detecting-key-combinations-7kn</link>
      <guid>https://dev.to/dailydevtips1/javascript-detecting-key-combinations-7kn</guid>
      <description>&lt;p&gt;The other day we built this cool tool to &lt;a href="https://daily-dev-tips.com/posts/javascript-detecting-which-key-is-pressed/"&gt;detect which key was pressed&lt;/a&gt;.&lt;br&gt;
And as you may have seen, it could only register one key at a time.&lt;/p&gt;

&lt;p&gt;Today I want to look at how we can capture some combination of keys.&lt;/p&gt;

&lt;p&gt;This version will be based on only modifier keys and 1 specific key.&lt;/p&gt;

&lt;p&gt;The modifiers keys we get:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;metaKey&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrlKey&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;altKey&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shiftKey&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Although we can't combine the regular letters, we can make a combination of these modifier keys.&lt;/p&gt;

&lt;p&gt;For instance: &lt;code&gt;metaKey&lt;/code&gt; + &lt;code&gt;altKey&lt;/code&gt; + &lt;code&gt;d&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#detecting-key-combinations-in-javascript"&gt;
  &lt;/a&gt;
  Detecting key combinations in JavaScript
&lt;/h2&gt;

&lt;p&gt;As mentioned, we don't need to change much in our existing codebase from our normal key detection example.&lt;/p&gt;

&lt;p&gt;On the KeyBoardEvent, we get specific data, including the boolean status of the four modifiers keys.&lt;/p&gt;

&lt;p&gt;Check out this example where I pressed &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;Meta&lt;/code&gt; + &lt;code&gt;f&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7wh8Ccp6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618294734993/aB6LjQKw1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7wh8Ccp6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618294734993/aB6LjQKw1.png" alt="Meta key combination"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So let's first convert our HTML, so we have all the options available.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;body&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"my-auto mx-auto bg-gray-100"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"max-w-md py-4 px-8 bg-white shadow-lg rounded-lg my-20"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-gray-600"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"info"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Press a key combi to see the magic 🪄
      &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"keys"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"hidden flex"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"meta"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"hidden mx-2 p-2 border-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Meta&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"ctrl"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"hidden mx-2 p-2 border-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Ctrl&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"shift"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"hidden mx-2 p-2 border-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Shift&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"alt"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"hidden mx-2 p-2 border-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Alt&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"key"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mx-2 p-2 border-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Key&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, I decided to add all the options and the one key, but they are all hidden at first.&lt;/p&gt;

&lt;p&gt;We then need to define all these variables in JavaScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;key&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;keys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;keys&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;meta&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;ctrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ctrl&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;shift&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;shift&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;alt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;alt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And as before, we want to listen to the &lt;code&gt;keyDown&lt;/code&gt; event.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onkeydown&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Function here&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We want to check that it is a combination call, not just the first hit on one of the modifier keys.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;altKey&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ctrlKey&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;metaKey&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shiftKey&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Meta&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Shift&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Control&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;alt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If that's the case, we simply return the function to stop it.&lt;/p&gt;

&lt;p&gt;If not, we have a key combination and can show the appropriate&lt;br&gt;
keys.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;altKey&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shiftKey&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;metaKey&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ctrlKey&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;ctrl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ctrl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keyCode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above section will show or hide the modifier keys, and eventually, we also add the specific key.&lt;/p&gt;

&lt;p&gt;You might see in the demo below that it will show up as a weird character if you have certain combinations. The key code, however, will always be the same!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/rebelchris/embed/NWdYgbQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Designing Live Commenting in youtube/Facebook/Instagram live stream Video</title>
      <author>Kunal Tanti</author>
      <pubDate>Fri, 16 Apr 2021 06:48:30 +0000</pubDate>
      <link>https://dev.to/kutanti/designing-live-commenting-in-youtube-facebook-instagram-live-stream-video-4bec</link>
      <guid>https://dev.to/kutanti/designing-live-commenting-in-youtube-facebook-instagram-live-stream-video-4bec</guid>
      <description>&lt;p&gt;Note - we are not focusing on the video streaming, but the live commenting feature.&lt;br&gt;
Here it goes:&lt;br&gt;
&lt;strong&gt;Scope:&lt;/strong&gt;&lt;br&gt;
• User can comment on a content which she is viewing.&lt;br&gt;
• User Can view comments of other people who are commenting on the same content.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scale Numbers:&lt;/strong&gt;&lt;br&gt;
• 10K Contents per minute.&lt;br&gt;
• 650K comments per minute.&lt;br&gt;
• 100K users view per sec.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Clarifying Questions:&lt;/strong&gt;&lt;br&gt;
Can a user only comment when the stream is live?&lt;br&gt;
(based on this the data retention can be decided)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Non-Functional Requirement:&lt;/strong&gt;&lt;br&gt;
• Highly Scalable&lt;br&gt;
• Highly Available (99.99 % )&lt;br&gt;
• Minimum Latency (p99 500MS)&lt;br&gt;
• Eventual Consistency&lt;br&gt;
&lt;strong&gt;API:&lt;/strong&gt;&lt;br&gt;
• POST/ ActivateViewerShip(userId, ContentId)&lt;br&gt;
• POST/ DeactivateViewerShip(userId, ContentId)&lt;br&gt;
• POST/ Comment(userId, ContentId, Comment)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PULL Model:&lt;/strong&gt;&lt;br&gt;
This will do http polling on a given interval, and get the related comments of the pertinent content.&lt;br&gt;
This would not give real time experience to user, also if there are no comments we would be exhausting the http calls for doing nothing.&lt;br&gt;
Minimizing the polling interval &amp;lt;=~5 sec would increase the server load drastically.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PUSH Model:&lt;/strong&gt;&lt;br&gt;
User lands to the content -&amp;gt; Stores the user viewership info into DB -&amp;gt; Get the Viewership Info of that content - &amp;gt; Broadcast to respective users.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Data Modelling:&lt;/strong&gt;&lt;br&gt;
Content_viewership:&lt;br&gt;
Columns: ContentId, UserId, CreatedTime, IsActive&lt;br&gt;
ContentId should be indexed, as most of the query will be on this column.&lt;br&gt;
UserId can also be indexed when the users leaves the live commenting panel, it needs to update IsActive = false.&lt;br&gt;
( we can delete the inactive records from the main table and put those in HDFS or any file system,&lt;br&gt;
if future auditing or analytics are required, should be clarified)&lt;br&gt;
Content_Comments&lt;br&gt;
Columns: CommentId, ContentId, UserId, Comment, CreatedTime, IsActive&lt;br&gt;
In this table also we need to index the ContentId and UserId(the one who makes the comment)..&lt;br&gt;
IsActive flag for moving the deactivated data to some file system and free up the main table.&lt;br&gt;
&lt;strong&gt;Calculation:&lt;/strong&gt;&lt;br&gt;
Compute:&lt;br&gt;
W : 10K QPS&lt;br&gt;
R : 100K QPS&lt;br&gt;
&lt;em&gt;commenting rate is significantly lower than our viewing rate&lt;br&gt;
Storage:&lt;br&gt;
1 comment data = 3Kb ( viewership + comment)&lt;br&gt;
Total : 3 * 650K&lt;br&gt;
Approx : 2GB per minute&lt;br&gt;
But if we are deleting the inactive rows we can assume, the there would be negligible growth in the DB.&lt;br&gt;
High Level Design:&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yrY68Z_I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/roemz5mot1ehytawn9v2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yrY68Z_I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/roemz5mot1ehytawn9v2.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
In addition to this *Write Locally and Read Globally&lt;/em&gt; can be discussed during an interview, the concept is very well described in here : &lt;a href="https://engineering.fb.com/2011/02/07/core-data/live-commenting-behind-the-scenes/"&gt;https://engineering.fb.com/2011/02/07/core-data/live-commenting-behind-the-scenes/&lt;/a&gt;&lt;br&gt;
Too much of writing, I am putting the High Level Diagram. The scale, message queue, and caching details are pretty common.&lt;br&gt;
If you see any any bottleneck or have any suggestion, feel free to put a comment.&lt;/p&gt;

</description>
      <category>systemdesign</category>
      <category>faang</category>
    </item>
    <item>
      <title>Fix Open Source Vulnerabilities AUTOMATICALLY with Dependabot</title>
      <author>Davide Benvegnù</author>
      <pubDate>Fri, 16 Apr 2021 06:46:39 +0000</pubDate>
      <link>https://dev.to/n3wt0n/fix-open-source-vulnerability-automatically-with-dependabot-4igm</link>
      <guid>https://dev.to/n3wt0n/fix-open-source-vulnerability-automatically-with-dependabot-4igm</guid>
      <description>&lt;p&gt;Keeping your dependencies updated is one of the easiest ways to &lt;strong&gt;keep the software you build secure&lt;/strong&gt;. Unfortunately, it is also one of the most overlooked.&lt;/p&gt;

&lt;p&gt;Luckily for us, &lt;strong&gt;GitHub Dependabot&lt;/strong&gt; can help with this, by updating your dependencies automatically, so you can spend less time updating dependencies and more time building.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-does-dependabot-work"&gt;
  &lt;/a&gt;
  How does Dependabot work?
&lt;/h3&gt;

&lt;p&gt;Let's quickly see how Dependabot works and then we'll see how to enable and use it.&lt;/p&gt;

&lt;p&gt;First step, Dependabot &lt;strong&gt;pulls down your dependency&lt;/strong&gt; files and looks for any outdated or insecure requirements.&lt;/p&gt;

&lt;p&gt;Then, if any of your dependencies are out-of-date, &lt;strong&gt;Dependabot opens individual pull requests&lt;/strong&gt; to update each of them.&lt;/p&gt;

&lt;p&gt;Finally, you can check that your tests pass, scan the included changelog and release notes, and if everything looks ok, merge the changes back to your code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-enable-dependabot"&gt;
  &lt;/a&gt;
  How to Enable Dependabot?
&lt;/h3&gt;

&lt;p&gt;Enabling Dependabot is really easy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rTR0b_ZF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/602l0cpeonzhct5vgyt1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rTR0b_ZF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/602l0cpeonzhct5vgyt1.png" alt="Enable Dependabot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First, fo to the &lt;em&gt;Security&lt;/em&gt; tab of your repository, then click on the &lt;em&gt;Enable Dependabot Alerts&lt;/em&gt; button.&lt;/p&gt;

&lt;p&gt;At this point another screen will appear:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m1OL__Bi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/beekuc4atwthiymv9stl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m1OL__Bi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/beekuc4atwthiymv9stl.png" alt="Second step"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first button you have to click on to &lt;strong&gt;enable Dependabot&lt;/strong&gt; on your repository is the one I've highlighted in red. And technically this is all you need to have Dependabot enabled and look for vulnerabilities.&lt;/p&gt;

&lt;p&gt;However, we want to take this &lt;strong&gt;a step further&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If you click on the other button, the one highlighted in green, Dependabot will be able to &lt;strong&gt;automatically create pull requests&lt;/strong&gt; for you to fix your vulnerable dependencies!&lt;/p&gt;

&lt;p&gt;This is what we want, don't we? 👴🏻&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video"&gt;
  &lt;/a&gt;
  Video
&lt;/h3&gt;

&lt;p&gt;Alright, enough talking... let's see this in practice.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ijPoIfQWypQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/ijPoIfQWypQ"&gt;Link to the video: https://youtu.be/ijPoIfQWypQ&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h3&gt;

&lt;p&gt;Let me know in the comment section below if you want to see more about Dependabot or if you have any questions about it.&lt;/p&gt;

&lt;p&gt;Also you may want to check out &lt;a href="https://youtu.be/A8SERCUE-i4"&gt;this video here&lt;/a&gt;, where I talk about &lt;strong&gt;GitHub Code Scanning&lt;/strong&gt; (which complements Dependabot in many ways).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Like, share and follow me&lt;/strong&gt; 🚀 for more content:&lt;/p&gt;

&lt;p&gt;📽 &lt;a href="https://www.youtube.com/CoderDave"&gt;YouTube&lt;/a&gt;&lt;br&gt;
☕ &lt;a href="https://buymeacoffee.com/CoderDave"&gt;Buy me a coffee&lt;/a&gt;&lt;br&gt;
💖 &lt;a href="https://patreon.com/CoderDave"&gt;Patreon&lt;/a&gt;&lt;br&gt;
👕 &lt;a href="https://geni.us/cdmerch"&gt;Merch&lt;/a&gt;&lt;br&gt;
👦🏻 &lt;a href="https://www.facebook.com/CoderDaveYT"&gt;Facebook page&lt;/a&gt;&lt;br&gt;
🐱‍💻 &lt;a href="https://github.com/n3wt0n"&gt;GitHub&lt;/a&gt;&lt;br&gt;
👲🏻 &lt;a href="https://www.twitter.com/davide.benvegnu"&gt;Twitter&lt;/a&gt;&lt;br&gt;
👴🏻 &lt;a href="https://www.linkedin.com/in/davidebenvegnu/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
🔉 &lt;a href="https://geni.us/cdpodcast"&gt;Podcast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ijPoIfQWypQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>github</category>
      <category>security</category>
      <category>codenewbie</category>
      <category>devops</category>
    </item>
    <item>
      <title>How to have better NPM Scripts</title>
      <author>Raul Melo</author>
      <pubDate>Fri, 16 Apr 2021 06:30:18 +0000</pubDate>
      <link>https://dev.to/raulfdm/how-to-have-better-npm-scripts-405a</link>
      <guid>https://dev.to/raulfdm/how-to-have-better-npm-scripts-405a</guid>
      <description>&lt;p&gt;As a JavaScript developer (no matter back or front-end), we often rely upon &lt;code&gt;npm scripts&lt;/code&gt; to automate common tasks like starting a server, building a project, and even performing tasks before or after certain scripts like &lt;code&gt;postbuild&lt;/code&gt;, &lt;code&gt;prebuild&lt;/code&gt;, etc.&lt;/p&gt;

&lt;p&gt;When those commands are simple like &lt;code&gt;node index.js&lt;/code&gt;, having them a single line in our package.json isn't a problem at all. The real problem starts when we need an extensive command, adding environment variables, and concatenating commands:&lt;/p&gt;

&lt;p&gt;(Example extracted from &lt;a href="https://github.com/mui-org/material-ui/blob/830c18ba71af19bc0370f1eeb902f9f605144a5d/package.json"&gt;Material UI package.json&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"proptypes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"cross-env BABEL_ENV=development babel-node --extensions &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;.tsx,.ts,.js&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; ./scripts/generateProptypes.ts"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"deduplicate"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node scripts/deduplicate.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"benchmark:browser"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"yarn workspace benchmark browser"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"build:codesandbox"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"lerna run --parallel --scope &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/*&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; build"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"release:version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"lerna version --exact --no-changelog --no-push --no-git-tag-version"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"release:build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"lerna run --parallel --scope &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;@material-ui/*&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; build"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"release:changelog"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node scripts/releaseChangelog"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"release:publish"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"lerna publish from-package --dist-tag next --contents build"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"release:publish:dry-run"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"lerna publish from-package --dist-tag next --contents build --registry=&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:4873/&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"release:tag"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node scripts/releaseTag"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:api"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"rimraf ./docs/pages/api-docs &amp;amp;&amp;amp; yarn docs:api:build"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:api:build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"cross-env BABEL_ENV=development __NEXT_EXPORT_TRAILING_SLASH=true babel-node --extensions &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;.tsx,.ts,.js&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; ./docs/scripts/buildApi.ts  ./docs/pages/api-docs ./packages/material-ui-unstyled/src ./packages/material-ui/src ./packages/material-ui-lab/src --apiPagesManifestPath ./docs/src/pagesApi.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"yarn workspace docs build"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:build-sw"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"yarn workspace docs build-sw"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:build-color-preview"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"babel-node scripts/buildColorTypes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:deploy"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"yarn workspace docs deploy"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:dev"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"yarn workspace docs dev"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:export"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"yarn workspace docs export"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:icons"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"yarn workspace docs icons"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:size-why"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"cross-env DOCS_STATS_ENABLED=true yarn docs:build"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"yarn workspace docs start"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="err"&gt;//.....&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But what if I told you could have those commands extracted into a separate file and having a &lt;code&gt;scripts&lt;/code&gt; config like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"proptypes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"deduplicate"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"benchmark:browser"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"build:codesandbox"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"release:version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"release:build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"release:changelog"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"release:publish"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"release:publish:dry-run"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"release:tag"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:api"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:api:build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:build-sw"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:build-color-preview"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:deploy"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:dev"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:export"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:icons"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:size-why"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"docs:start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="err"&gt;//.....&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#scripty"&gt;
  &lt;/a&gt;
  Scripty
&lt;/h2&gt;

&lt;p&gt;Scripty is an npm package that enables us the ability to have executable files to run &lt;code&gt;npm scripts&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The whole idea is to treat these giant script lines we have as code and keep our package.json clean and simple.&lt;/p&gt;

&lt;p&gt;Let's say we have this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"lint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"eslint . --cache --report-unused-disable-directives --ext .js,.ts,.tsx --max-warnings 0"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using scripty it'll look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"lint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-magic-behind"&gt;
  &lt;/a&gt;
  The magic behind
&lt;/h3&gt;

&lt;p&gt;Of course, the command we just removed needs to be somewhere. To make it simple as that, scripty does a pairing of &lt;code&gt;&amp;lt;npm-script-nam&amp;gt;:&amp;lt;executable-file-name&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In other words, if we have an npm script called &lt;code&gt;lint&lt;/code&gt;, we need an executable file called &lt;code&gt;lint&lt;/code&gt;, &lt;code&gt;lint.sh&lt;/code&gt;, or &lt;code&gt;lint.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The default folder is always, at the root level, a folder called &lt;code&gt;scripts&lt;/code&gt;. So, to solve the previous migration, we would create a file called &lt;code&gt;lint.sh&lt;/code&gt; under the &lt;code&gt;scripts&lt;/code&gt; folder, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/usr/bin/env bash&lt;/span&gt;

yarn eslint &lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;--cache&lt;/span&gt; &lt;span class="nt"&gt;--report-unused-disable-directives&lt;/span&gt; &lt;span class="nt"&gt;--ext&lt;/span&gt; .js,.ts,.tsx &lt;span class="nt"&gt;--max-warnings&lt;/span&gt; 0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#executable-bash-or-js"&gt;
  &lt;/a&gt;
  Executable Bash or .JS
&lt;/h3&gt;

&lt;p&gt;Scripty can handle only handle executable bash or JavaScript executables.&lt;/p&gt;

&lt;p&gt;To have one of those, the file needs to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;having the shebang at the top of the file (e.g. &lt;code&gt;#!/bin/bash&lt;/code&gt; or &lt;code&gt;#!/bin/node&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;having permission to execute (while &lt;code&gt;ls -la&lt;/code&gt;, it needs to have &lt;code&gt;x&lt;/code&gt; flag);&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Quick tip, if you're in a UNIX environment, you can quickly give this permission by running the command &lt;code&gt;chmod u+x &amp;lt;file-path&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also, file extensions are not necessary. You can write a &lt;code&gt;test.sh&lt;/code&gt;, &lt;code&gt;test.js&lt;/code&gt; or only &lt;code&gt;test&lt;/code&gt;. What will define the syntax highlight and the execution will be one of the shebang instructions I've mentioned before.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cp"&gt;#!/bin/node
&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;copyFileSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;static/base.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dist/base.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class="nv"&gt;NODE_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;production

yarn nest build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;For JS executable, keep in mind that it'll be executed by &lt;code&gt;node&lt;/code&gt; and you can't use invalid js-node (e.g. &lt;code&gt;import&lt;/code&gt;) syntax.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#batching"&gt;
  &lt;/a&gt;
  Batching
&lt;/h3&gt;

&lt;p&gt;Another requirement we often have is running a bunch of scripts related. Let's say we have a lot of &lt;code&gt;test&lt;/code&gt; script and we want to run all of them, like &lt;code&gt;test:*&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test:unit"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"jest"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test:e2e"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"cypress run --ci"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"npm-run-all test:*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With scripty, we can create a subfolder called &lt;code&gt;test&lt;/code&gt; and declare those 2 types of tests there:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── package.json
├── scripts
│   └── test
│       ├── e2e
│       └── unit
└── yarn.lock
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By having those files with those instructions, you can change your package.json to be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test:unit"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test:e2e"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"scripty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note that only the &lt;code&gt;test&lt;/code&gt; script will be sufficient for this case. We'll only keep &lt;code&gt;test:unit&lt;/code&gt; and &lt;code&gt;test:e2e&lt;/code&gt; in case we want to run one of these commands isolated.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When you run &lt;code&gt;test&lt;/code&gt;, scripty will understand you have a folder called &lt;code&gt;test&lt;/code&gt; with a lot of scripts and it'll run all of them.&lt;/p&gt;

&lt;p&gt;Keep in mind that this is a concurrency call and you should not rely on the execution order.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#controlling-the-batching-sequence"&gt;
  &lt;/a&gt;
  Controlling the batching sequence
&lt;/h3&gt;

&lt;p&gt;If you need them being executed in a certain order, with the same package.json as before, all you need to do is, in our &lt;code&gt;scripts/test&lt;/code&gt; folder, creates a script called &lt;code&gt;index&lt;/code&gt; witch will be responsible for executing the other scripts in the sequence we want to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── package.json
├── scripts
│   └── test
│       ├── index
│       ├── integration
│       └── unit
└── yarn.lock
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

scripts/test/unit
scripts/test/integration
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Keep in mind that the current working directory (CWD) will be always where it's being executed, in that case, our root folder.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#parallel-watch"&gt;
  &lt;/a&gt;
  Parallel watch
&lt;/h3&gt;

&lt;p&gt;Another common scenario is when we have certain scripts we need to run which will stay in &lt;code&gt;watch mode&lt;/code&gt;, in other words, lock a section and keep listening for file changes so it can perform something.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"watch:css"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sass src/scss/main.scss public/css/main.css -s compressed"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"watch:js"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"webpack --config webpack.config.js --watch --mode=development"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A way of booting both commands would be opening two tabs and running each command in a tab. But that's tedious. What if we could somehow have a single terminal tab and run all &lt;code&gt;watch&lt;/code&gt; at the same time?&lt;/p&gt;

&lt;p&gt;To do that using scripty all we have to do is to create a folder called &lt;code&gt;watch&lt;/code&gt; inside scripts, pretty much as we did before for &lt;code&gt;test&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── package.json
├── scripts
│   └── watch
│       ├── css
│       └── js
└── yarn.lock
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But instead of only passing &lt;code&gt;scripty&lt;/code&gt; word to our npm script, we have to specify an environment variable called &lt;code&gt;SCRIPTY_PARALELL&lt;/code&gt; with &lt;code&gt;true&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"watch"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"SCRIPTY_PARALLEL=true scripty"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now both will keep running.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#caveats"&gt;
  &lt;/a&gt;
  Caveats
&lt;/h2&gt;

&lt;p&gt;The biggest caveat here is for &lt;code&gt;windows&lt;/code&gt; users.&lt;/p&gt;

&lt;p&gt;If you're one of them or you maintain a project which can be run in a Windows machine, you'll need some special treatment for that and I suggest you take a look at their &lt;a href="https://www.npmjs.com/package/scripty#windows-support"&gt;docs with those instructions&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Scripty allows us to treat or npm scripts as code, having a file containing all instructions to execute some tasks.&lt;/p&gt;

&lt;p&gt;It also eases the ability to roll back an incorrect script instruction and provides a great and isolated git history.&lt;/p&gt;

&lt;p&gt;So &lt;strong&gt;&lt;em&gt;be creative&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://frontendmasters.com/courses/monorepos/"&gt;Frontend Masters - JS and TS Monorepo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/scripty"&gt;Scripty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mui-org/material-ui/blob/830c18ba71af19bc0370f1eeb902f9f605144a5d/package.json"&gt;MaterialUI Package.json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/raulfdm/raulmelo-studio"&gt;My Monorepo using Scripty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/npm-run-all"&gt;package npm-run-all&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>npm</category>
      <category>tooling</category>
    </item>
    <item>
      <title>How to Overcome 3 Common Roadblocks When Starting a Developer Blog</title>
      <author>Ana Vela</author>
      <pubDate>Fri, 16 Apr 2021 05:54:39 +0000</pubDate>
      <link>https://dev.to/anaveecodes/how-to-overcome-3-common-roadblocks-when-starting-a-developer-blog-eng</link>
      <guid>https://dev.to/anaveecodes/how-to-overcome-3-common-roadblocks-when-starting-a-developer-blog-eng</guid>
      <description>&lt;p&gt;When I decided to start a developer blog last year, it took me months before I actually published my first post. It really didn't need to be this way. Throughout my blogging journey, I've gained some knowledge about what it takes to get started. From listening to other developers sharing their struggles along with my own, I've observed 3 common barriers that keep developers from getting their first post published. I'd like to share these with you along with some tips to overcome these roadblocks so you can get started sooner and maintain a more consistent blog of your own.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#roadblock-1-where-will-you-publish-your-blog"&gt;
  &lt;/a&gt;
  Roadblock #1 - Where Will You Publish Your Blog?
&lt;/h2&gt;

&lt;p&gt;Like many developers, you might want to build your blog site from scratch before starting to post. This is a great side project, but it can take a long time before a project like this is completed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Possible Solutions&lt;/strong&gt;: Treat building your own blog site and publishing your writing as two separate actions. Leverage platforms such as  &lt;a href="https://hashnode.com/@anaveecodes/joinme"&gt;Hashnode&lt;/a&gt;,  &lt;a href="https://dev.to/"&gt;Dev.to&lt;/a&gt;,  &lt;a href="https://medium.com/"&gt;Medium&lt;/a&gt;, and &lt;a href="https://wordpress.com/"&gt;WordPress&lt;/a&gt;  where there are no barriers to begin and that have thriving communities. (&lt;a href="https://hashnode.com/@anaveecodes/joinme"&gt;Hashnode&lt;/a&gt; and Dev.to also have a variety of badges you can earn as fun incentives to keep posting.)  You can always repost on your newly designed blog site when that is ready.&lt;/p&gt;

&lt;p&gt;You can also go with a static site generator and give yourself a deadline for getting this set up. Stick with the original theme and give yourself up to a week to get the site ready to go so you are not tinkering too long.&lt;/p&gt;

&lt;p&gt;With some hosting setup and becoming familiar with &lt;a href="https://guides.github.com/features/mastering-markdown/"&gt;markdown&lt;/a&gt;, here are a few good ones that are quick to get up and running:  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.github.com/en/pages/setting-up-a-github-pages-site-with-jekyll/creating-a-github-pages-site-with-jekyll"&gt;Jeykll&lt;/a&gt; -  get your Jekyll site up on GitHub pages  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ixartz/Eleventy-Starter-Boilerplate"&gt;Eleventy&lt;/a&gt; - you can host your Eleventy site on Netlify&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/gatsbyjs/gatsby-starter-blog"&gt;Gatsby&lt;/a&gt; - get your Gatsby site hosted through Gatsby Cloud or Netlify.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#roadblock-2-what-will-to-write-about"&gt;
  &lt;/a&gt;
  Roadblock #2 - What Will to Write About?
&lt;/h2&gt;

&lt;p&gt;You've got a plan for where you will post, but now you need to figure out what you will write about. You might have a lot of ideas and not know where to start or feel like you need to do a lot of research before writing a post.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Possible Solutions&lt;/strong&gt;: You can start blogging the moment you decide to study web development and write about why you are pursuing this field. At the beginning, write about topics you are familiar with. Spend time brainstorming ideas often so you always have a pool of ideas to choose from. &lt;/p&gt;

&lt;p&gt;To begin, narrow down your list to around 10 articles you want to write about and create a quick outline for each of them. This helps figure out the possible scope of the articles and how you would structure them. &lt;/p&gt;

&lt;p&gt;Think about different angles related to the tech stack you already use. Is there an area you want to be known for? Is there a new language or framework you want dive deeper into? Keep a list of ideas and continue to add to this list often.&lt;/p&gt;

&lt;p&gt;Here are some broad areas you can focus on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Write about what you are learning&lt;/li&gt;
&lt;li&gt;Document a challenge you are doing &lt;/li&gt;
&lt;li&gt;Outline a solution to a problem you solved&lt;/li&gt;
&lt;li&gt;Review a course or program you completed&lt;/li&gt;
&lt;li&gt;Share your experience of a bootcamp you attended&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#roadblock-3-what-will-your-writing-process-will-be-like"&gt;
  &lt;/a&gt;
  Roadblock #3 - What Will Your Writing Process Will Be Like?
&lt;/h2&gt;

&lt;p&gt;Now that you know where you will publish and what topics you'll write about, you'll want to figure out a routine to get these posts written.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Possible Solutions&lt;/strong&gt;: Figure out how often you want to publish and how much time you will dedicate to creating the posts. One strategy is to create a schedule where you have specified how much time you will write and what goals you'd like to reach. &lt;/p&gt;

&lt;p&gt;Luca Rossi shared a great example of how he has  &lt;a href="https://refactoring.fm/p/how-i-write-refactoring-"&gt;established a writing routine&lt;/a&gt;  for his weekly newsletter, Refactoring.&lt;/p&gt;

&lt;p&gt;Sam Julien gave an excellent talk about &lt;a href="https://www.samjulien.com/ship-better-articles-faster-talk"&gt;shipping better articles&lt;/a&gt;. Check out the slides for his advice including how to set up a content system. &lt;/p&gt;

&lt;p&gt;You can decide how often you want to post and set deadlines so that you are consistently working on your blog. Whether it is posting once a week or once a month, getting organized with a schedule and simple routine will help you publish more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;When starting a developer blog, make decisions quickly and just &lt;strong&gt;start&lt;/strong&gt;. Don't think about it having to be perfect from the beginning. This is an ongoing process where you'll be doing a lot of trial and error, so you can always make adjustments as you go. &lt;/p&gt;

&lt;p&gt;A few more tips to enhance your blogging experience:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Share your posts on social media &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Find accountability partners to help you stay on track&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Read other developer blogs to learn about different styles and topic ideas &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Subscribe to the  &lt;a href="https://bloggingfordevs.com/"&gt;Blogging for Devs&lt;/a&gt; 7-day email course and newsletter&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are currently blogging, what are some tips that have helped you start and maintain a developer blog? If you are planning to start a blog, are you facing any challenges at this point? Leave a comment here or reach out through &lt;a href="https://twitter.com/anaveecodes"&gt;Twitter&lt;/a&gt; or &lt;a href="https://instagram.com/anaveecodes"&gt;Instagram&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@bramnaus?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Bram Naus&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/laptop?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>writing</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Want your Instagram feed on your project? </title>
      <author>Ellaine Tolentino</author>
      <pubDate>Fri, 16 Apr 2021 05:46:24 +0000</pubDate>
      <link>https://dev.to/tolentinoel/want-your-instagram-feed-on-your-project-1hl8</link>
      <guid>https://dev.to/tolentinoel/want-your-instagram-feed-on-your-project-1hl8</guid>
      <description>&lt;p&gt;This blog will be a step-by-step process on getting the access token needed in utilizing &lt;a href="https://instafeedjs.com/#/?id=instafeedjs"&gt;Instafeed.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First, I'm not going to take credit for all of this Instagram API workaround. Thank you to &lt;a href="https://www.youtube.com/channel/UCP5LqUylO8P4z48Sn-4ElTg"&gt;ishithemes&lt;/a&gt; on Youtube who showed me the way how to make this happen!&lt;/p&gt;

&lt;p&gt;Since I am currently building a project, I thought to try &amp;amp; apply this method. There are other ways like installing an npm package or embedding an Instagram photo, but I wanted to learn how to generate that access token for a script like Ishitheme's. The script I used is provided on Ishitheme's &lt;a href="https://github.com/ishithemes/instafeed_website/blob/master/index.html"&gt;Github repo&lt;/a&gt;. There is also a link on his Youtube video's info if you need to refer to it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-must-say-before-you-begin-i-think-the-hardest-part-of-this-method-is-the-tedious-way-to-get-the-access-token"&gt;
  &lt;/a&gt;
  I must say before you begin, I think the hardest part of this method is the tedious way to get the access token.
&lt;/h3&gt;

&lt;p&gt;And here's how I got that token.&lt;/p&gt;

&lt;p&gt;-&amp;gt; I first made a &lt;a href="https://developers.facebook.com/?no_redirect=1"&gt;&lt;strong&gt;Facebook for Developers&lt;/strong&gt;&lt;/a&gt; account.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0Ilrwuas--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bcijqvk0v9npezei4kko.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0Ilrwuas--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bcijqvk0v9npezei4kko.png" alt="Facebook for developers"&gt;&lt;/a&gt; &lt;br&gt;
If you're logged in to your FB account, it usually recognizes and uses that information to give you access to this platform. This will be the way to create the access token needed in the script.&lt;br&gt;
Once you're on the landing page,&lt;br&gt;
-&amp;gt; Click &lt;a href="https://developers.facebook.com/apps/?show_reminder=true"&gt;My Apps&lt;/a&gt;&lt;br&gt;
-&amp;gt; Then click &lt;strong&gt;Create App&lt;/strong&gt;. A window will pop up and will ask you to choose.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BZcXlwwP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zqdrfvilvlry2iqilq0h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BZcXlwwP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zqdrfvilvlry2iqilq0h.png" alt="Alt Text"&gt;&lt;/a&gt; I chose the last one since it's only a test and nothing else.&lt;br&gt;
-&amp;gt; Next window up is what type of app. Since this is just a mini project like I mentioned, I chose the 'Something else' option.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rGTZNWzG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/npis2uf3f6iptnknzk4b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rGTZNWzG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/npis2uf3f6iptnknzk4b.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;-&amp;gt; Once you click continue it will ask you to fill out the information about your app/project. This is your chance to change the App contact email if you wanted to use a different one to be linked on the request.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ih-ggIMk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e4oz9448xfgu92fbjhev.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ih-ggIMk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e4oz9448xfgu92fbjhev.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;-&amp;gt; Once you submit, it will lead you to the products you can incorporate into your project. Since we're here for Instagram, let's click &lt;strong&gt;Set Up&lt;/strong&gt; on the 'Instagram Basic Display'.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SvoB2KCn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3i0mi6f08mfk4ikarf2k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SvoB2KCn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3i0mi6f08mfk4ikarf2k.png" alt="Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;-&amp;gt; On the next page, scroll at the bottom and you'll see a notification like this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rjugzufb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kwpzcwpg7v4a6t5kgv54.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rjugzufb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kwpzcwpg7v4a6t5kgv54.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Click the link to &lt;strong&gt;'Settings'&lt;/strong&gt; and from that page click 'Add a Platform'. I chose 'Web' and added my website's URL. You can try putting your Heroku app URL as well for this. &lt;/p&gt;

&lt;p&gt;-&amp;gt; After saving the changes, click &lt;strong&gt;Instagram Basic Display&lt;/strong&gt; on the side navigator and go to &lt;strong&gt;Basic Display&lt;/strong&gt;. Here, we will be asked to name the app, we can keep it the same name as the project name.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IAKxdO55--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cwq5radk6fygj3ss1997.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IAKxdO55--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cwq5radk6fygj3ss1997.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;-&amp;gt; Scroll down at the page and fill out the form. I used my website into filling these 3 out. It has to be a secure site and should start with &lt;strong&gt;HTTPS&lt;/strong&gt;.&lt;br&gt;
-&amp;gt; Add an Instagram Tester using the user's Instagram username.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v4HBNwbD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w1axb9cbp993i5bs9p71.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v4HBNwbD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w1axb9cbp993i5bs9p71.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;-&amp;gt; You will need to verify the request on your Instagram account on a desktop through the &lt;a href="https://www.instagram.com/accounts/manage_access/"&gt;'App and Websites'&lt;/a&gt; settings. It should look something like this;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IXQt4O9_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wt2gswbr0oaga2oxykld.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IXQt4O9_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wt2gswbr0oaga2oxykld.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yes, &lt;a href="https://smashballoon.com/instagram-feed/demo/"&gt;SmashBallon&lt;/a&gt; also offers Instagram embedding with a price tag if you need something more for business. I tried their demo and it also looks so cool! &lt;/p&gt;

&lt;p&gt;-&amp;gt; Once you verified the request, go back to the site(Basic Display section) and VIOLA! You can generate your token!&lt;/p&gt;

&lt;p&gt;Your code should be something like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JEi_meGE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fxxmqia0aq2k45aqqhmg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JEi_meGE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fxxmqia0aq2k45aqqhmg.png" alt="script"&gt;&lt;/a&gt;&lt;br&gt;
  *target - id of the div or span where the feed will be.&lt;br&gt;
  *limit - number of how many photos to fetch&lt;br&gt;
  *resolution - the quality of the photo to display.&lt;/p&gt;

&lt;p&gt;Here's a &lt;a href="https://instafeedjs.com/#/?id=options"&gt;reference&lt;/a&gt; for more options you can use. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-somewhat-of-a-finish-product"&gt;
  &lt;/a&gt;
  MY SOMEWHAT OF A FINISH PRODUCT!
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OF33UDmj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1h8zjnbotwadh9sphxsj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OF33UDmj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1h8zjnbotwadh9sphxsj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#and-my-css-for-it-if-youre-interested"&gt;
  &lt;/a&gt;
  And my CSS for it if you're interested.
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#instafeed-container img{
  width: 18em;
  border-style: solid;
  border-color: white;
  border-bottom: 10px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that is it! If you get up to this part, Thank you for taking the time. Until the next one!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>codenewbie</category>
      <category>instafeed</category>
    </item>
  </channel>
</rss>
