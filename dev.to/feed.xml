<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>20 Best CSS3 Library For Developers</title>
      <author>Jonny coder</author>
      <pubDate>Thu, 28 Oct 2021 10:06:27 +0000</pubDate>
      <link>https://dev.to/jonnywq/20-best-css3-library-for-developers-2a13</link>
      <guid>https://dev.to/jonnywq/20-best-css3-library-for-developers-2a13</guid>
      <description>&lt;p&gt;Beautiful CSS was once a time-consuming task for web developers. The CSS libraries have made it easier, quicker, and more efficient to create responsive websites and web apps.&lt;br&gt;Are you still searching for the best CSS libraries available? Are you curious to find out which library is best? This article contains 20 top CSS libraries that will inspire you.&lt;br&gt;&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/20-best-css3-library-for-developers/&amp;amp;ved=2ahUKEwi2tZmq3-vyAhUjieYKHVWMAFMQFnoECAoQAQ&amp;amp;usg=AOvVaw2AtoxfMkY_y5JPLB2VuSdV"&gt;20 Best CSS3 Library For Developers&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Backend Developer Learning Path 2021 [Updated]</title>
      <author>Jonny coder</author>
      <pubDate>Thu, 28 Oct 2021 10:01:08 +0000</pubDate>
      <link>https://dev.to/jonnywq/backend-developer-learning-path-2021-updated-3c2p</link>
      <guid>https://dev.to/jonnywq/backend-developer-learning-path-2021-updated-3c2p</guid>
      <description>&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;Who is a Backend Web Developer ? backend developer roadmap: Unlike the frontend developer, who takes care of the visible part of a site or app, the backend developer is a computer scientist who instead builds everything that is not seen but serves to make that site or application work. If we were to use the metaphor, …&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.codelivly.com/backend-web-developer-roadmap/"&gt;Backend Developer Learning Path 2021 [Updated]&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>P42 for GitHub is now P42+</title>
      <author>Lars Grammel</author>
      <pubDate>Thu, 28 Oct 2021 09:53:08 +0000</pubDate>
      <link>https://dev.to/p42/p42-for-github-is-now-p42-59g3</link>
      <guid>https://dev.to/p42/p42-for-github-is-now-p42-59g3</guid>
      <description>&lt;p&gt;Over the last five months, P42 has grown from a code modernization tool for GitHub to a programming assistant for JavaScript and TypeScript with VS Code integration. The modernization included a significant update for &lt;a href="https://p42.ai/p42-plus"&gt;P42+&lt;/a&gt; (previously P42 for GitHub). &lt;/p&gt;

&lt;p&gt;What has changed?&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#p42-javascript-assistant-for-vs-code-replaces-pull-request-creation"&gt;
  &lt;/a&gt;
  P42 JavaScript Assistant for VS Code Replaces Pull Request Creation
&lt;/h4&gt;

&lt;p&gt;The &lt;a href="https://marketplace.visualstudio.com/items?itemName=p42ai.refactor"&gt;P42 JavaScript Assistant&lt;/a&gt; adds 46 refactorings, cleanups, and code actions for JavaScript and TypeScript to VS Code. It replaces the previous pull request creation by P42. You now have complete control and flexibility to update single files and folders, test and review the changes, and land them in version control without being limited to P42-generated GitHub pull requests. As a bonus, P42+ now only needs read access to your GitHub repository.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#analysis-results-on-repository-page"&gt;
  &lt;/a&gt;
  Analysis Results on Repository Page
&lt;/h4&gt;

&lt;p&gt;All analysis results are shown on a single repository page for each of your repositories now. P42 organizes the results by file so that you can find all suggestions for a single file in one place.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#21-additional-code-analyses"&gt;
  &lt;/a&gt;
  21 Additional Code Analyses
&lt;/h4&gt;

&lt;p&gt;P42+ adds 21 code analyses that look for improvement opportunities in your codebase. For example, modernizations such as &lt;a href="https://p42.ai/documentation/code-action/add-numeric-separator"&gt;adding numeric separators&lt;/a&gt; and simplifications such as &lt;a href="https://p42.ai/documentation/code-action/merge-nested-if"&gt;merging nested if statements&lt;/a&gt;. In total, P42+ has 32 analyses now. You can configure them in the "configure" tab of the repository page. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#public-p42-results-for-public-repositories"&gt;
  &lt;/a&gt;
  Public P42+ Results for Public Repositories
&lt;/h4&gt;

&lt;p&gt;Starting Nov 15, the P42+ analysis results for public GitHub repositories will be available publicly on the P42 website. Analysis results for private repositories remain private (and cannot be publicly shared for security reasons).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#new-p42-team-plan-pricing"&gt;
  &lt;/a&gt;
  New P42+ Team Plan Pricing
&lt;/h4&gt;

&lt;p&gt;The new price for the P42+ Team plan is $9 per active contributor per month (previously $19). The price for the Personal plan is $4 per active contributor per month. P42+ is free for public open-source GitHub repositories. See the &lt;a href="https://p42.ai/p42-plus"&gt;P42+ page&lt;/a&gt; for pricing plan details.&lt;/p&gt;

&lt;p&gt;I hope the new features of P42+ will make your work easier!&lt;/p&gt;

&lt;p&gt;Happy refactoring!&lt;/p&gt;

</description>
      <category>github</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>news</category>
    </item>
    <item>
      <title>VOLDER v2.0.0 npm package coming soon</title>
      <author>alguerocode</author>
      <pubDate>Thu, 28 Oct 2021 09:24:44 +0000</pubDate>
      <link>https://dev.to/alguercode/volder-v200-package-coming-soon-2p91</link>
      <guid>https://dev.to/alguercode/volder-v200-package-coming-soon-2p91</guid>
      <description>&lt;h2&gt;
  &lt;a href="#version-200-in-the-road-with-more-features-and-better-documents"&gt;
  &lt;/a&gt;
  ⚠️ ⚠️  version 2.0.0 in the road with more features and better documents
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#support-me-by-adding-a-star-to-github-volder-repository"&gt;
  &lt;/a&gt;
  support me by adding a star to github volder repository
&lt;/h3&gt;

&lt;p&gt;link:&lt;a href="https://github.com/devSupporters/volder"&gt;https://github.com/devSupporters/volder&lt;/a&gt;&lt;/p&gt;

</description>
      <category>testing</category>
      <category>javascript</category>
      <category>npm</category>
      <category>schemabuilder</category>
    </item>
    <item>
      <title>Kotlin In Appwrite</title>
      <author>Oshi Gupta</author>
      <pubDate>Thu, 28 Oct 2021 09:16:28 +0000</pubDate>
      <link>https://dev.to/oshi36/kotlin-in-appwrite-7n2</link>
      <guid>https://dev.to/oshi36/kotlin-in-appwrite-7n2</guid>
      <description>&lt;p&gt;&lt;a href="https://appwrite.io/"&gt;Appwrite&lt;/a&gt; is an &lt;strong&gt;end-to-end backend server&lt;/strong&gt; that is aiming to abstract the complexity of common, complex, and repetitive tasks required for building a modern app.&lt;/p&gt;

&lt;p&gt;Appwrite is both cross-platform and technology agnostic, meaning it can run on any operating system, coding language, framework, or platform. Although Appwrite can easily fit the definition of serverless technology, it's designed to run well in multiple configurations. &lt;br&gt;
It provides various libraries for major programming languages and platforms so you don't have to write code for interacting with our HTTP APIs from scratch.&lt;/p&gt;

&lt;p&gt;Appwrite has divided &lt;a href="https://appwrite.io/docs/sdks"&gt;SDKs&lt;/a&gt; into two categories &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Client SDKs&lt;/li&gt;
&lt;li&gt;Server SDKs&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#client-sdks"&gt;
  &lt;/a&gt;
  Client SDKs
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Web SDK&lt;/li&gt;
&lt;li&gt;Flutter SDK&lt;/li&gt;
&lt;li&gt;Apple SDK&lt;/li&gt;
&lt;li&gt;Android SDK&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#server-sdks"&gt;
  &lt;/a&gt;
  Server SDKs
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Kotlin SDK&lt;/li&gt;
&lt;li&gt;Dart SDK&lt;/li&gt;
&lt;li&gt;Swift SDK&lt;/li&gt;
&lt;li&gt;Python SDK&lt;/li&gt;
&lt;li&gt;Ruby SDK and etc&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#here-we-will-be-seeing-how-to-use-kotlin-in-appwrite-functions"&gt;
  &lt;/a&gt;
  Here we will be seeing how to use kotlin in Appwrite functions
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;So what is Kotlin?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://kotlinlang.org/"&gt;Kotlin&lt;/a&gt; is a cross-platform, statically typed, general-purpose programming language with type inference.&lt;/p&gt;

&lt;p&gt;Kotlin is designed to interoperate fully with Java, and the JVM version of Kotlin's standard library depends on the Java Class Library, but type inference allows its syntax to be more concise. &lt;/p&gt;

&lt;p&gt;So how to write kotlin in appwrite function and for this install &lt;a href="https://github.com/appwrite/sdk-for-kotlin"&gt;Kotlin SDK&lt;/a&gt; by following the below instructions&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gradle"&gt;
  &lt;/a&gt;
  GRADLE
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Appwrite's Kotlin SDK is hosted on Maven Central. In order to fetch the Appwrite SDK, add this to your root-level build.gradle(.kts) file:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;repositories {      
    mavenCentral()
} 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Next, add the dependency to your project's build.gradle(.kts) file:
&lt;code&gt;implementation("io.appwrite:sdk-for-kotlin:0.1.1")&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#maven"&gt;
  &lt;/a&gt;
  MAVEN
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Add this to your &lt;strong&gt;pom.xml&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;io.appwrite&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;sdk-for-kotlin&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;0.1.1&amp;lt;/version&amp;gt;
    &amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#add-the-function"&gt;
  &lt;/a&gt;
  Add the function
&lt;/h3&gt;

&lt;p&gt;You can add a new function from your Appwrite project's dashboard. Access your Functions settings from your project's left navigation panel. Click the &lt;strong&gt;Add Function&lt;/strong&gt; button and choose your function name and code runtime.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#init-your-sdk"&gt;
  &lt;/a&gt;
  Init your SDK
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Initialize your SDK with your Appwrite server API endpoint and project ID which can be found in your project settings page and your new API secret Key project API keys section.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This can be found out when you &lt;a href="https://appwrite.io/docs/installation"&gt;install&lt;/a&gt; Appwrite according to the Operating System and access the &lt;strong&gt;Appwrite Console UI&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OamSXA1r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c7vezepgtche0pmkl3qk.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OamSXA1r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c7vezepgtche0pmkl3qk.PNG" alt="setting project" width="825" height="272"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-your-first-request"&gt;
  &lt;/a&gt;
  Make your First Request
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xe1Kkce5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ehok40nei3xy9u7aunjy.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xe1Kkce5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ehok40nei3xy9u7aunjy.PNG" alt="first request" width="416" height="160"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As of now, we have seen how to set up the functions and Kotlin SDK. &lt;br&gt;
Now, we will be seeing different operations which can be performed on these functions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;List functions&lt;/strong&gt; :
To get a list of all the project's functions. You can use the query params to filter your results.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import io.appwrite.Client
import io.appwrite.services.Functions
suspend fun main() { 
val client = Client(context) 
.setEndpoint("https://[HOSTNAME_OR_IP]/v1") // Your API Endpoint .setProject("5df5acd0d48c2") // Your project ID .setKey("919c2d18fb5d4...a2ae413da83346ad2") // Your secret API key 
val functions = Functions(client) 
val response = functions.list( ) 
val json = response.body?.string() }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Get function&lt;/strong&gt; :
It will get a function by its unique ID.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;val response = functions.get( functionId = "[FUNCTION_ID]" )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Update function&lt;/strong&gt; :
It will update the function by its unique ID.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;val response = functions.update( 
functionId = "[FUNCTION_ID]",
name = "[NAME]", 
execute = listOf(), 
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Delete function&lt;/strong&gt; :
It will delete a function by its unique ID.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;val response = functions.delete( functionId = "[FUNCTION_ID]" ) 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Create execution&lt;/strong&gt; :
Trigger a function execution. The returned object will return you the current execution status. You can ping the Get Execution endpoint to get updates on the current execution status. Once this endpoint is called, your function execution process will start asynchronously.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;val response = functions.createExecution( functionId = "[FUNCTION_ID]", )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So this is the basic idea of how to create functions in the Appwrite using the Kotlin SDK.&lt;br&gt;
For more you can always refer to &lt;a href="https://appwrite.io/docs/getting-started-for-server"&gt;appwrite&lt;/a&gt; &lt;a href="https://appwrite.io/docs/functions"&gt;docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank You&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>kotlin</category>
      <category>appwrite</category>
      <category>android</category>
      <category>cloud</category>
    </item>
    <item>
      <title>15 Trending GitHub Projects For Web Developer</title>
      <author>Jonny coder</author>
      <pubDate>Thu, 28 Oct 2021 09:15:36 +0000</pubDate>
      <link>https://dev.to/jonnywq/15-trending-github-projects-for-web-developer-2e4k</link>
      <guid>https://dev.to/jonnywq/15-trending-github-projects-for-web-developer-2e4k</guid>
      <description>&lt;p&gt;Read here: &lt;a href="https://www.codelivly.com/15-trending-projects-on-github-for-web-developers/"&gt;https://www.codelivly.com/15-trending-projects-on-github-for-web-developers/&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>20 tips to Google like a pro</title>
      <author>Jonny coder</author>
      <pubDate>Thu, 28 Oct 2021 09:14:30 +0000</pubDate>
      <link>https://dev.to/jonnywq/20-tips-to-google-like-a-pro-5641</link>
      <guid>https://dev.to/jonnywq/20-tips-to-google-like-a-pro-5641</guid>
      <description>&lt;p&gt;Read here: &lt;a href="https://bit.ly/3nuX0wo"&gt;https://bit.ly/3nuX0wo&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Active and upcoming reinforcement learning competitions</title>
      <author>Joy</author>
      <pubDate>Thu, 28 Oct 2021 09:05:39 +0000</pubDate>
      <link>https://dev.to/joooyz/active-and-upcoming-reinforcement-learning-competitions-kei</link>
      <guid>https://dev.to/joooyz/active-and-upcoming-reinforcement-learning-competitions-kei</guid>
      <description>&lt;p&gt;Reinforcement learning (RL) is a subdomain of machine learning which involves agents learning to make decisions by interacting with their environment. While popular competition platforms like Kaggle are mainly suited for supervised learning problems, RL competitions are harder to come by.&lt;/p&gt;

&lt;p&gt;In this post, I've compiled a list of 7 ongoing and annual competitions which are suitable for RL. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Criteria:&lt;/strong&gt; any active (or upcoming) event or platform which involves a large number of individuals/teams competing for some form of incentive (e.g. prize money, co-authorships, leaderboard ranking etc.).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;For AI competitions that are not necessarily tailored for RL, you might be interested in the list &lt;a href="https://www.gocoder.one/blog/ai-game-competitions-list"&gt;15 Active AI Game Competitions&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-aws-deepracer-2018-ongoing-competition"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://aws.amazon.com/deepracer/"&gt;AWS DeepRacer&lt;/a&gt; (2018 —, ongoing competition)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0tvkuoir--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dtj2sw3j90jvjasdi8of.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0tvkuoir--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dtj2sw3j90jvjasdi8of.png" alt="AWS DeepRacer" title="AWS DeepRacer 3D simulator" width="880" height="464"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/deepracer/"&gt;AWS DeepRacer&lt;/a&gt; is a beginner-friendly 3D racing simulator aimed at helping developers get started with RL. Participants can train models on Amazon SageMaker (first 10 hours are free) and enter monthly competitions in the form of an ongoing AWS DeepRacer League. &lt;/p&gt;

&lt;p&gt;The AWS DeepRacer League is run in time trial format (although other challenges such as head-to-head racing exist). Top racers win prizes including merchandise, customizations, and an expenses-paid trip to Las Vegas to attend AWS re:invent for the Championship Cup. Participants can also win or purchase a physical 1/18th scale race car for USD399 to test their models in the real-world.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-aiarena-2016-ongoing-competition"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://aiarena.net/"&gt;AIArena&lt;/a&gt; (2016 —, ongoing competition)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--infYciki--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3uygquulfg48sfm6wv83.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--infYciki--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3uygquulfg48sfm6wv83.png" alt="AI Arena" title="AI Arena StarCraft II stream" width="880" height="493"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You might remember when &lt;a href="https://deepmind.com/blog/article/AlphaStar-Grandmaster-level-in-StarCraft-II-using-multi-agent-reinforcement-learning"&gt;AlphaStar reached Grandmaster status&lt;/a&gt; and beat two of the world's top players in StarCraft II in 2019. StarCraft II was &lt;a href="https://deepmind.com/blog/announcements/deepmind-and-blizzard-open-starcraft-ii-ai-research-environment"&gt;originally open-sourced in 2017&lt;/a&gt; by Blizzard to accelerate AI research in highly complex environments.&lt;/p&gt;

&lt;p&gt;You can still get involved with training deep RL agents in StarCraft II with the community at &lt;strong&gt;&lt;a href="https://aiarena.net/"&gt;AIArena&lt;/a&gt;&lt;/strong&gt;. They run an ongoing ranked ladder where you can compete head-to-head against other teams. Matches are 24/7 livestreamed to Twitch, with occasional community stream events.&lt;/p&gt;

&lt;p&gt;For original StarCraft, you can also check out:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://schnail.com/"&gt;SCHNAIL&lt;/a&gt;: Human vs AI competitions&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://sscaitournament.com/"&gt;SSCAIT&lt;/a&gt;: Student StarCraft AI Tournament&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-bomberland-2020-ongoing-competition"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://www.gocoder.one/bomberland"&gt;Bomberland&lt;/a&gt; (2020—, ongoing competition)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0avm0MBB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84d87fpo4fl4yeppw4oo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0avm0MBB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84d87fpo4fl4yeppw4oo.jpg" alt="Bomberland" title="Bomberland" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.gocoder.one/bomberland"&gt;Bomberland&lt;/a&gt; is our own machine learning competition based on the classic console game, Bomberman. Teams build agents which compete head-to-head in an ongoing competition against other teams.&lt;/p&gt;

&lt;p&gt;The Bomberland environment is challenging for out-of-the-box machine learning, requiring planning, real-time decision making, and navigating both adversarial and cooperative play.&lt;/p&gt;

&lt;p&gt;The competition officially starts 3rd December 2021. Top teams win prizes including merchandise, customizations, cash, and are featured on the finale Twitch livestream.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-flatland-2019-annual-competition"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://www.aicrowd.com/challenges/flatland-3"&gt;Flatland&lt;/a&gt; (2019—, annual competition)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BRI84REY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ke4c9ik11yqjxlbq886a.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BRI84REY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ke4c9ik11yqjxlbq886a.JPG" alt="Flatland" title="Flatland" width="642" height="258"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.aicrowd.com/challenges/flatland-3"&gt;Flatland&lt;/a&gt; is an annual competition featured as part of NeurIPS 2020. It is designed to tackle the problem of efficiently managing dense traffic on complex railway networks. The goal is to construct the best schedule that minimizes the delay in the requested arrival time of all trains.&lt;/p&gt;

&lt;p&gt;The 2021 competition is currently being run on the AICrowd platform. Submissions are evaluated and ranked according to the total reward accumulated in a controlled setting. RL approaches are encouraged, with a separate prize track for RL submissions. Prizes this year include drones and VR headsets.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-minerl-2019-annual-competition"&gt;
  &lt;/a&gt;
  5. &lt;strong&gt;&lt;a href="https://minerl.io/"&gt;MineRL&lt;/a&gt;&lt;/strong&gt; (2019—, annual competition)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r2QrMRPS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sy5s73k7p0e21vthedmi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r2QrMRPS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sy5s73k7p0e21vthedmi.png" alt="MineRL" title="MineRL dataset example" width="579" height="312"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://minerl.io/"&gt;MineRL&lt;/a&gt;&lt;/strong&gt; is concerned with the development of sample-efficient deep RL algorithms which can solve hierarchical, sparse reward environments using human demonstrations in Minecraft. &lt;/p&gt;

&lt;p&gt;Participants have access to a large imitation learning dataset of over 60 million frames of recorded human player data in Minecraft. The goal is to develop systems that can complete tasks such as obtaining a diamond, building a house, searching for a cave, etc.&lt;/p&gt;

&lt;p&gt;The competition has been running as part of NeurIPS from 2019 — 2021 on AICrowd. Prizes include co-authorships and over $10,000 cash.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-nethack-2020-annual-competition"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://nethackchallenge.com/"&gt;NetHack&lt;/a&gt; (2020—, annual competition)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GWywkfHd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nqx1eawgcda9bi1mnqil.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GWywkfHd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nqx1eawgcda9bi1mnqil.JPG" alt="NetHack" title="NetHack" width="751" height="424"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nethackchallenge.com/"&gt;NetHack&lt;/a&gt; is another annual competition at NeurIPS 2021 held on AICrowd. Teams compete to build the best agents to play NetHack, an ASCII-rendered single-player dungeon crawl game. NetHack features procedurally-generated levels, with hundreds of complex scenarios, making it an extremely challenging environment for current state-of-the-art RL.&lt;/p&gt;

&lt;p&gt;Like Flatland and MineRL, submissions are ranked on a leaderboard based on score in a controlled test setting. The competition this year features a $20,000 USD cash prize pool. RL approaches are encouraged, but non-RL approaches are also accepted. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-compilergym-2021-leaderboard"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://github.com/facebookresearch/CompilerGym"&gt;CompilerGym&lt;/a&gt; (2021—, leaderboard)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YzfSI_zI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qz3zd3cc737xp90j3hxl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YzfSI_zI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qz3zd3cc737xp90j3hxl.png" alt="CompilerGym" title="CompilerGym" width="880" height="343"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/facebookresearch/CompilerGym"&gt;CompilerGym&lt;/a&gt; is actually a toolkit for applying reinforcement learning to compiler optimizations, rather than a competition. However, users can submit algorithms to the &lt;a href="https://github.com/facebookresearch/CompilerGym#leaderboards"&gt;public repo leaderboard&lt;/a&gt; with their write-up and results.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-competition-platforms-and-conferences"&gt;
  &lt;/a&gt;
  Bonus: competition platforms and conferences
&lt;/h2&gt;

&lt;p&gt;I prioritized competitions that are ongoing or run regularly for this list. Another good way to keep track of running competitions is to follow the competition platforms and conferences they are run as part of. Here's some worth keeping your eye on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.aicrowd.com/"&gt;AICrowd&lt;/a&gt;: Runs a combination of supervised ML competitions as well as RL competitions.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.kaggle.com/"&gt;Kaggle&lt;/a&gt;: Mainly supervised ML/data science competitions, but also feature &lt;a href="https://www.kaggle.com/simulations"&gt;simulation competitions&lt;/a&gt; which can be good problems for RL.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://nips.cc/"&gt;NeurIPS&lt;/a&gt;: Annual conference with a competition track for various machine learning competitions&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://ieee-cog.org/2022/"&gt;IEEE CoGs&lt;/a&gt;: Annual conference with a competition track, specifically for research in games.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#closing-remarks"&gt;
  &lt;/a&gt;
  Closing remarks
&lt;/h2&gt;

&lt;p&gt;I hope this list has helped you find an interesting competition to check out and practise reinforcement learning in. As new competitions come and go, I'll aim to keep this list up-to-date. Good luck!&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>deeplearning</category>
      <category>datascience</category>
    </item>
    <item>
      <title>40+ JavaScript Projects for Beginners – Easy Ideas to Get Started Coding JS</title>
      <author>Jonny coder</author>
      <pubDate>Thu, 28 Oct 2021 08:41:33 +0000</pubDate>
      <link>https://dev.to/jonnywq/40-javascript-projects-for-beginners-easy-ideas-to-get-started-coding-js-14k5</link>
      <guid>https://dev.to/jonnywq/40-javascript-projects-for-beginners-easy-ideas-to-get-started-coding-js-14k5</guid>
      <description>&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;The best way to learn a new programming language is to build projects.

I have created a list of 40 beginner friendly project tutorials in Vanilla JavaScript, React, and TypeScript.

My advice for tutorials would be to watch the video, build the project, break it apart and rebuild it your own way. Experiment with adding new features or using different methods.

That will test if you have really learned the concepts or not.

You can click on any of the projects listed below to jump to that section of the article.

&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/40-javascript-projects-for-beginners/&amp;amp;ved=2ahUKEwiB9tj0rPjyAhUMX30KHZQ5CG0QFnoECAgQAQ&amp;amp;usg=AOvVaw26RDQjHugdhbATVS83LI83"&gt;40 JavaScript Projects for Beginners – Easy Ideas to Get Started Coding JS

&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Top reasons to build an app based on microservices in Node.js</title>
      <author>Monika Ambrozowicz</author>
      <pubDate>Thu, 28 Oct 2021 08:35:44 +0000</pubDate>
      <link>https://dev.to/forestadmin/top-reasons-to-build-an-app-based-on-microservices-in-nodejs-1ngb</link>
      <guid>https://dev.to/forestadmin/top-reasons-to-build-an-app-based-on-microservices-in-nodejs-1ngb</guid>
      <description>&lt;p&gt;Take any popular web project and there is a good chance it has been built with Node.js. This tremendously popular JavaScript runtime environment is praised by developers for its flexibility and effectiveness. And as a matter of fact, exactly the same can be claimed about microservice architecture. What are the benefits of both, and why in most cases is it a good idea to build an application based on microservices in Node.js, especially a SaaS one? Let’s find out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-microservice"&gt;
  &lt;/a&gt;
  What is a microservice?
&lt;/h2&gt;

&lt;p&gt;A microservice is a software design pattern, where a group of interconnected services builds the entire application, in contrast to the monolithic approach to software development, where the application is built as one unit. These services are responsible for one function, they’re loosely coupled, isolated from the others, and independently deployable. Thanks to that, microservices accelerate the development of complex software. It doesn’t mean they are always better, though. What are the pros and cons of microservices?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-microservices"&gt;
  &lt;/a&gt;
  Benefits of microservices
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Scalability&lt;/strong&gt;. Maintaining a complex application in a large team is more efficient when the app is based on microservices because responsibilities can be easier shared between the developers.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;More agile development process&lt;/strong&gt;. Building applications based on microservices allow developers to focus on clearly defined modules, which makes development, testing, and maintenance more flexible and better optimized.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;More efficient deployment&lt;/strong&gt;. In contrast to the monolithic architecture, whenever a microservice needs to be updated, there is no need to deploy the entire application. The only requisite is to release REST-ful APIs for other services.
Easier iterations. Developers can iterate over microservices separately, they’re not limited by the other components.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Language agnostic&lt;/strong&gt;. Microservices can be written in different programming languages, which gives significant flexibility to the development of the entire app.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#disadvantages-of-microservices"&gt;
  &lt;/a&gt;
  Disadvantages of microservices.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Difficult to manage the whole unit&lt;/strong&gt;. The microservices architecture may be a double-edged sword. On one hand, it’s easier to maintain small units over one large and complex. However, whenever there is a need to manage an application as an entire unit, it’s more challenging with microservices.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Challenging testing&lt;/strong&gt;. The same issue applies to testing - it seems to be more efficient to test each microservice separately, but in a monolithic app you can run end-to-end testing and find bugs faster.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;More cross-cutting concerns&lt;/strong&gt;. Logging in, cashing, and other concerns that affect the whole application are easier to handle in a monolithic architecture because there is only one application to take care of.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Multiple deployments&lt;/strong&gt;. In monolithic applications, developers need to handle only one deployment, in contrast to microservices where there may be multiple. In some cases, it saves a significant amount of time and development work.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In general, the monolithic architecture is a better choice for lightweight products that don’t demand much business logic. Microservices, on the other hand, are the perfect choice for complex, evolving applications that are designed to scale. It is particularly true for SaaS products that today may have 1000 users, and tomorrow 100000, so they need to be ready to handle the exponential growth as users often pay month-by-month and require a highly available service. All of these are also the reason why SaaS developers choose to build their products with Node.js.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#microservices-and-nodejs-its-a-match"&gt;
  &lt;/a&gt;
  Microservices and Node.js: It’s a match!
&lt;/h2&gt;

&lt;p&gt;As you already know, microservices are language agnostic, which is one of the strongest benefits of microservice architecture. At the same time, the connection between Node.js and microservices is particularly strong and deep. In fact, one of the ideas behind the creation of this environment was to make building applications based on microservices easier and more efficient. From a business perspective, taking advantage of both technologies has a significant impact on the product - not only in the creation phase but also later - in maintenance, and scaling. Let’s have a look at the top benefits of building an app based on microservices in Node.js.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;More efficient cost control. Node.js and microservices are created to scale. Especially in SaaS products, it’s important to be able not only to handle growth but also to keep the cost of development and maintenance as low as possible. No monolithic architecture can achieve the same level of flexibility.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Higher performance and reliability. The argument above is also true when it comes to maintaining high performance: If one microservice is down because of a bug or another issue, it doesn’t affect the entire app. The fact that Node.js is one of the most popular web technologies also makes the difference here: With easier access to talent and online communities, it’s easier to ensure the top performance of an app.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is safe to say that Node.js and microservices were made for each other. Node’s single-threaded asynchronous architecture facilitates scaling the app, and it comes with many frameworks, such as &lt;a href="https://www.forestadmin.com/integrations/express?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=blog-microservices-nodejs&amp;amp;utm_content=express-lp"&gt;Express&lt;/a&gt;, that are heavily adopted by SaaS developers. On the other hand, microservices allow for rapid development and flexibility that would be impossible to achieve with a monolithic architecture. At Forest Admin, we’re not surprised that thousands of our users connected our &lt;a href="https://blog.forestadmin.com/how-to-choose-the-right-internal-tool/?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=blog-microservices-nodejs&amp;amp;utm_content=blog-internal-tools"&gt;internal tool&lt;/a&gt; solution with their various applications that have two things in common: Node.js and microservices.&lt;/p&gt;

&lt;p&gt;Would you like to join them? &lt;a href="https://app.forestadmin.com/signup?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=blog-microservices-nodejs&amp;amp;utm_content=blog-microservices-nodejs"&gt;Try Forest Admin for free.&lt;/a&gt; 🌲🌲🌲&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-microservices-with-nodejs-useful-resources"&gt;
  &lt;/a&gt;
  Building microservices with Node.js: Useful resources
&lt;/h2&gt;

&lt;p&gt;Are you convinced that Node.js and microservices are the best fit for your application but do you need some help with the implementation? We’ve gathered some tutorials and other resources to make your life easier.&lt;/p&gt;

&lt;p&gt;How to build a microservices architecture with Node.Js to achieve scale? - &lt;a href="https://www.cuelogic.com/blog/microservices-with-node-js"&gt;Cue Logic&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Complete Microservice Tutorial — Building User Service With GRPC, Node.JS, and MongoDB - &lt;a href="https://medium.com/swlh/the-complete-microservice-tutorial-part-1-building-user-service-with-grpc-node-js-and-mongodb-73e70ed80148"&gt;MD Ahad Hasan&lt;/a&gt;&lt;br&gt;
Node Microservices: From Zero to Hero - Nickolas Fisher, &lt;a href="https://developer.okta.com/blog/2020/02/05/node-microservices-zero-to-hero"&gt;Octa Developer&lt;/a&gt;&lt;br&gt;
How to Build Microservices with Node.js - Archita Nayak, Happy Bhesdadiya, &lt;a href="https://www.bacancytechnology.com/blog/how-to-build-microservices-with-node-js"&gt;Bacancy Technology&lt;/a&gt;&lt;br&gt;
Step-by-Step Guide To Create Microservices With Node.js - &lt;a href="https://blog.back4app.com/microservices-nodejs/"&gt;Back4App&lt;/a&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>webdev</category>
      <category>microservices</category>
      <category>javascript</category>
    </item>
    <item>
      <title>I've made a React app.                                                         Should you stick around? </title>
      <author>ItayLisaey</author>
      <pubDate>Thu, 28 Oct 2021 08:31:30 +0000</pubDate>
      <link>https://dev.to/itaylisaey/ive-made-a-react-app-should-you-stick-around-1647</link>
      <guid>https://dev.to/itaylisaey/ive-made-a-react-app-should-you-stick-around-1647</guid>
      <description>&lt;h1&gt;
  &lt;a href="#should-you-wait-the-credits-stick-around-will-tell-you"&gt;
  &lt;/a&gt;
  Should you wait the credits? "Stick Around" will tell you.
&lt;/h1&gt;

&lt;p&gt;Ever since the first Marvel movies came out it seems like in every movie there's the possibility of an extra scene hidden during or after the credits.&lt;/p&gt;

&lt;p&gt;I grew tired of waiting through the entire credits just to find out there's nothing there, or even worse - leaving the theater to later realize I missed something.&lt;/p&gt;

&lt;p&gt;To counter this I've decided to make a super simple app that simply tells you if you should wait the credits, with the press of a finger.&lt;/p&gt;

&lt;p&gt;The app is open source, no ads or revenue whatsoever and made as a fan service.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6sD_vNvC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b1gmoagf362er3eye5jd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6sD_vNvC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b1gmoagf362er3eye5jd.png" alt="Stick Around Production screenshots" width="829" height="418"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-did-i-make-this-app"&gt;
  &lt;/a&gt;
  How did I make this app?
&lt;/h2&gt;

&lt;p&gt;I Used &lt;a href="https://www.figma.com/"&gt;Figma&lt;/a&gt; for designing and prototyping, &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; with Typescript for the frontend implementation, &lt;a href="https://firebase.google.com/"&gt;Firebase&lt;/a&gt; as the backend and &lt;a href="https://capacitorjs.com/"&gt;Capacitor.js&lt;/a&gt; for Android and iOS support. &lt;/p&gt;

&lt;p&gt;All in all, I managed to design, code and publish the app to Google Play in less then 3 weeks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#designing-the-user-experience-in-figma"&gt;
  &lt;/a&gt;
  Designing the user experience in Figma
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SPuhPJ2I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6x46hxsese5vvasfjbbq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SPuhPJ2I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6x46hxsese5vvasfjbbq.png" alt="Image description" width="880" height="445"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I've started the UX design process with few goals in mind:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Keeping it simple&lt;/li&gt;
&lt;li&gt;One press away from results&lt;/li&gt;
&lt;li&gt;Dark mode (to be used in theaters)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The app is divided into 3 main screens:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#in-theaters"&gt;
  &lt;/a&gt;
  In Theaters
&lt;/h4&gt;

&lt;p&gt;This screen is the first screen the user enters upon launching the app. It shows you the movies now in theaters (according to &lt;a href="https://www.themoviedb.org/"&gt;TMDB&lt;/a&gt;);&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#search"&gt;
  &lt;/a&gt;
  Search
&lt;/h4&gt;

&lt;p&gt;On this screen, the user can search for older movies, not currently playing.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#movie-screen"&gt;
  &lt;/a&gt;
  Movie Screen
&lt;/h4&gt;

&lt;p&gt;This screen contains some general information about a movie, and mainly the card that tells the user whether or not they should wait for the end.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#voting-model"&gt;
  &lt;/a&gt;
  Voting Model
&lt;/h4&gt;

&lt;p&gt;How user vote on the movie&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h3&gt;

&lt;p&gt;The framework I eventually choose was React with &lt;a href="https://capacitorjs.com/"&gt;Capacitor.js&lt;/a&gt; to build cross platform.&lt;/p&gt;

&lt;p&gt;The app uses &lt;a href="https://www.themoviedb.org/"&gt;TMDB&lt;/a&gt; to get movie information and&lt;br&gt;
Firebase to collect user votes.&lt;br&gt;
and a basic function that decides between them.&lt;/p&gt;

&lt;p&gt;The rest is pretty straight forward with React and Scss for styling.&lt;br&gt;
most of the bugs and troubleshooting came with Capacitor.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;If this interested you, or you have any questions or requests, I will be glad to answer.&lt;/p&gt;

&lt;p&gt;*Edit: there's a known issue with the first time screen not showing the continue button to some devices. It's already fixed on the web but not yet updated in the Android App.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.stickaround.app"&gt;Google Play Store - Stick Around&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ItayLisaey/stick-around"&gt;GitHub - stick-around&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://movies.lisaey.com"&gt;Stick Around on Web&lt;/a&gt;&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>showdev</category>
      <category>react</category>
      <category>firebase</category>
    </item>
    <item>
      <title>Integrating captcha in your app in 10 minutes</title>
      <author>Abhiraj Bhowmick</author>
      <pubDate>Thu, 28 Oct 2021 08:17:53 +0000</pubDate>
      <link>https://dev.to/abhirajb/integrating-captcha-in-your-app-in-10-minutes-1dhh</link>
      <guid>https://dev.to/abhirajb/integrating-captcha-in-your-app-in-10-minutes-1dhh</guid>
      <description>&lt;p&gt;Ok, so what is a captcha?&lt;/p&gt;

&lt;p&gt;Captcha is “a computer program or system intended to distinguish human from machine input, typically as a way of thwarting spam and automated extraction of data from websites.” It stands for Completely Automated Public Turing test to tell Computers and Humans Apart.&lt;/p&gt;

&lt;p&gt;Yeah I know, 10/10 on Acronym Deriving Skills&lt;/p&gt;

&lt;p&gt;Whether it be the next Twitter or a simple SaaS, captchas are important, however boring it may be, so that you don’t get the traffic you don’t want.&lt;br&gt;
Now, you don’t need to waste your precious time into making a captcha then deciding on how to bypass the captcha and what not.&lt;/p&gt;

&lt;p&gt;Let me introduce you to 2Captcha, a captcha solver which has an API for developers to implement captcha anywhere.&lt;br&gt;
2captcha’s service provides an API that allows you to solve different types of captchas.&lt;br&gt;
They don't offer a ready-to-use solution for custom tasks, but they have a &lt;a href="https://2captcha.com/software"&gt;catalog of software&lt;/a&gt; integrated with the service where you can find software for your needs.&lt;/p&gt;

&lt;p&gt;To use the service, follow a few simple steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Register an account&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EYCfYj7b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dcp0edc5xc0thlirc3ie.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EYCfYj7b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dcp0edc5xc0thlirc3ie.png" alt="step1" width="880" height="596"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check your balance and add funds accordingly.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--itOAoalF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4ctrre0ukgmpqz6kne1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--itOAoalF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4ctrre0ukgmpqz6kne1.png" alt="step2" width="880" height="418"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Go to the settings page to get your API key and then copy and &lt;br&gt;
paste it in your software.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pc2Pbe_S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a419yd8l1r6syd5qrc1c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pc2Pbe_S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a419yd8l1r6syd5qrc1c.png" alt="step3" width="880" height="418"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now you are ready to start using your software with 2Captcha.&lt;/p&gt;

&lt;p&gt;2captcha is a simple and quick way to get someone to solve your captcha. Just upload a text and it will be solved in 12 seconds.&lt;br&gt;
2captcha is a Human-based captcha solving service, they have many workers who have signed up for this task. Their public statistics are listed below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9EYmIzxq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wrg20l8grpftqbqx410h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9EYmIzxq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wrg20l8grpftqbqx410h.png" alt="stats" width="880" height="596"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In March 2017 Google modified the ReCaptcha algorithm to shield it from an automatic answer. ReCaptcha now adjustments duties and pics oftentimes all through a solution on many famous websites and that is why solution time is multiplied. from time to time it takes extra than 2 mins due to the fact an actual human wishes a lot of time to bypass the ReCaptcha, despite the fact that it is solved manually as a regular person. This is why response times are affected a bit.&lt;br&gt;
They have a variety of captcha to choose from. You can check the rates here.&lt;br&gt;
Today, we’ll see how to implement SolveMedia image captcha with Java&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Download the captcha image&lt;/li&gt;
&lt;li&gt;Send the image to 2Captcha API
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(http://2captcha.com/in.php)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mNhBnJ3f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/em85gsrqa6brhg8ty5qm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mNhBnJ3f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/em85gsrqa6brhg8ty5qm.png" alt="codeapi" width="880" height="668"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Paste received code into the field. Then, submit the form.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An example of the form in HTML:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OwJ98a06--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ihhup9dqsv7defxy9z8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OwJ98a06--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ihhup9dqsv7defxy9z8.png" alt="htmlform" width="880" height="566"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They also have a referral program that allows to you share your own affiliate link, which when used to purchase from 2captcha, credits you 10% of the amount spent by your friend. &lt;/p&gt;

&lt;p&gt;P.S: &lt;a href="http://2captcha.com/?from=12857539"&gt;here’s my link, go use it.&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;You collect 10% of your affiliate earnings and 10% of any purchases your partner makes on the service (when, your partner spends money, sending captcha to a software, registering in the catalog, 10 percent deducted software developers, and you get only 5 percent of its expenditure on the captcha). Once a day, an affiliate is rewarded to the account balance. If your partner spends or earns money today, you will receive compensation tomorrow. $0,5 is the minimum payout amount. Payment must be requested on the page "payments for affiliate program," with the amount and method of payment specified. Depending on the payout direction, withdrawals are processed instantly or within 5 business days.&lt;/p&gt;

&lt;p&gt;2Captcha is an automated captcha solution that uses the power of humans. Its goal is to improve reliability and make it possible for everyone.&lt;/p&gt;

&lt;p&gt;I hope this post suits your purpose well. And if you find this review helpful then you can share this knowledge with your friends and fellow colleagues.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
